diff -Nur nsaserefpolicy/man/man8/abrt_dump_oops_selinux.8 serefpolicy-3.7.19/man/man8/abrt_dump_oops_selinux.8
--- nsaserefpolicy/man/man8/abrt_dump_oops_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/abrt_dump_oops_selinux.8	2013-03-15 11:39:57.423151803 +0100
@@ -0,0 +1,142 @@
+.TH  "abrt_dump_oops_selinux"  "8"  "13-01-04" "abrt_dump_oops" "SELinux Policy documentation for abrt_dump_oops"
+.SH "NAME"
+abrt_dump_oops_selinux \- Security Enhanced Linux Policy for the abrt_dump_oops processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the abrt_dump_oops processes via flexible mandatory access control.
+
+The abrt_dump_oops processes execute with the abrt_dump_oops_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep abrt_dump_oops_t
+
+
+.SH "ENTRYPOINTS"
+
+The abrt_dump_oops_t SELinux type can be entered via the "abrt_dump_oops_exec_t" file type.  The default entrypoint paths for the abrt_dump_oops_t domain are the following:"
+
+/usr/bin/abrt-dump-oops
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux abrt_dump_oops policy is very flexible allowing users to setup their abrt_dump_oops processes in as secure a method as possible.
+.PP
+The following process types are defined for abrt_dump_oops:
+
+.EX
+.B abrt_dump_oops_t
+.EE
+.PP
+Note:
+.B semanage permissive -a abrt_dump_oops_t
+
+can be used to make the process type abrt_dump_oops_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux abrt_dump_oops policy is very flexible allowing users to setup their abrt_dump_oops processes in as secure a method as possible.
+.PP
+The following file types are defined for abrt_dump_oops:
+
+
+.EX
+.PP
+.B abrt_dump_oops_exec_t
+.EE
+
+- Set files with the abrt_dump_oops_exec_t type, if you want to transition an executable to the abrt_dump_oops_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type abrt_dump_oops_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B abrt_var_cache_t
+
+	/var/cache/abrt(/.*)?
+.br
+	/var/spool/abrt(/.*)?
+.br
+	/var/cache/abrt-di(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), abrt_dump_oops(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, abrt_selinux(8), abrt_selinux(8), abrt_handle_event_selinux(8), abrt_helper_selinux(8), abrt_retrace_coredump_selinux(8), abrt_retrace_worker_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/abrt_handle_event_selinux.8 serefpolicy-3.7.19/man/man8/abrt_handle_event_selinux.8
--- nsaserefpolicy/man/man8/abrt_handle_event_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/abrt_handle_event_selinux.8	2013-03-15 11:39:57.572151806 +0100
@@ -0,0 +1,117 @@
+.TH  "abrt_handle_event_selinux"  "8"  "13-01-04" "abrt_handle_event" "SELinux Policy documentation for abrt_handle_event"
+.SH "NAME"
+abrt_handle_event_selinux \- Security Enhanced Linux Policy for the abrt_handle_event processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the abrt_handle_event processes via flexible mandatory access control.
+
+The abrt_handle_event processes execute with the abrt_handle_event_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep abrt_handle_event_t
+
+
+.SH "ENTRYPOINTS"
+
+The abrt_handle_event_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,abrt_handle_event_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the abrt_handle_event_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/libexec/abrt-handle-event, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux abrt_handle_event policy is very flexible allowing users to setup their abrt_handle_event processes in as secure a method as possible.
+.PP
+The following process types are defined for abrt_handle_event:
+
+.EX
+.B abrt_handle_event_t
+.EE
+.PP
+Note:
+.B semanage permissive -a abrt_handle_event_t
+
+can be used to make the process type abrt_handle_event_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  abrt_handle_event policy is extremely flexible and has several booleans that allow you to manipulate the policy and run abrt_handle_event with the tightest access possible.
+
+
+.PP
+If you want to allow ABRT to run in abrt_handle_event_t domain to handle ABRT event scripts, you must turn on the abrt_handle_event boolean.
+
+.EX
+.B setsebool -P abrt_handle_event 1
+.EE
+
+.PP
+If you want to allow ABRT to run in abrt_handle_event_t domain to handle ABRT event scripts, you must turn on the abrt_handle_event boolean.
+
+.EX
+.B setsebool -P abrt_handle_event 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux abrt_handle_event policy is very flexible allowing users to setup their abrt_handle_event processes in as secure a method as possible.
+.PP
+The following file types are defined for abrt_handle_event:
+
+
+.EX
+.PP
+.B abrt_handle_event_exec_t
+.EE
+
+- Set files with the abrt_handle_event_exec_t type, if you want to transition an executable to the abrt_handle_event_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type abrt_handle_event_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), abrt_handle_event(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), abrt_selinux(8), abrt_selinux(8), abrt_dump_oops_selinux(8), abrt_helper_selinux(8), abrt_retrace_coredump_selinux(8), abrt_retrace_worker_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/abrt_helper_selinux.8 serefpolicy-3.7.19/man/man8/abrt_helper_selinux.8
--- nsaserefpolicy/man/man8/abrt_helper_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/abrt_helper_selinux.8	2013-03-15 11:40:05.072151977 +0100
@@ -0,0 +1,142 @@
+.TH  "abrt_helper_selinux"  "8"  "13-01-04" "abrt_helper" "SELinux Policy documentation for abrt_helper"
+.SH "NAME"
+abrt_helper_selinux \- Security Enhanced Linux Policy for the abrt_helper processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the abrt_helper processes via flexible mandatory access control.
+
+The abrt_helper processes execute with the abrt_helper_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep abrt_helper_t
+
+
+.SH "ENTRYPOINTS"
+
+The abrt_helper_t SELinux type can be entered via the "abrt_helper_exec_t" file type.  The default entrypoint paths for the abrt_helper_t domain are the following:"
+
+/usr/bin/abrt-pyhook-helper
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux abrt_helper policy is very flexible allowing users to setup their abrt_helper processes in as secure a method as possible.
+.PP
+The following process types are defined for abrt_helper:
+
+.EX
+.B abrt_helper_t
+.EE
+.PP
+Note:
+.B semanage permissive -a abrt_helper_t
+
+can be used to make the process type abrt_helper_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux abrt_helper policy is very flexible allowing users to setup their abrt_helper processes in as secure a method as possible.
+.PP
+The following file types are defined for abrt_helper:
+
+
+.EX
+.PP
+.B abrt_helper_exec_t
+.EE
+
+- Set files with the abrt_helper_exec_t type, if you want to transition an executable to the abrt_helper_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type abrt_helper_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B abrt_var_cache_t
+
+	/var/cache/abrt(/.*)?
+.br
+	/var/spool/abrt(/.*)?
+.br
+	/var/cache/abrt-di(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), abrt_helper(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, abrt_selinux(8), abrt_selinux(8), abrt_dump_oops_selinux(8), abrt_handle_event_selinux(8), abrt_retrace_coredump_selinux(8), abrt_retrace_worker_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/abrt_retrace_coredump_selinux.8 serefpolicy-3.7.19/man/man8/abrt_retrace_coredump_selinux.8
--- nsaserefpolicy/man/man8/abrt_retrace_coredump_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/abrt_retrace_coredump_selinux.8	2013-03-15 11:39:55.592151761 +0100
@@ -0,0 +1,154 @@
+.TH  "abrt_retrace_coredump_selinux"  "8"  "13-01-04" "abrt_retrace_coredump" "SELinux Policy documentation for abrt_retrace_coredump"
+.SH "NAME"
+abrt_retrace_coredump_selinux \- Security Enhanced Linux Policy for the abrt_retrace_coredump processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the abrt_retrace_coredump processes via flexible mandatory access control.
+
+The abrt_retrace_coredump processes execute with the abrt_retrace_coredump_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep abrt_retrace_coredump_t
+
+
+.SH "ENTRYPOINTS"
+
+The abrt_retrace_coredump_t SELinux type can be entered via the "abrt_retrace_coredump_exec_t" file type.  The default entrypoint paths for the abrt_retrace_coredump_t domain are the following:"
+
+/usr/bin/coredump2packages
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux abrt_retrace_coredump policy is very flexible allowing users to setup their abrt_retrace_coredump processes in as secure a method as possible.
+.PP
+The following process types are defined for abrt_retrace_coredump:
+
+.EX
+.B abrt_retrace_coredump_t
+.EE
+.PP
+Note:
+.B semanage permissive -a abrt_retrace_coredump_t
+
+can be used to make the process type abrt_retrace_coredump_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux abrt_retrace_coredump policy is very flexible allowing users to setup their abrt_retrace_coredump processes in as secure a method as possible.
+.PP
+The following file types are defined for abrt_retrace_coredump:
+
+
+.EX
+.PP
+.B abrt_retrace_coredump_exec_t
+.EE
+
+- Set files with the abrt_retrace_coredump_exec_t type, if you want to transition an executable to the abrt_retrace_coredump_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type abrt_retrace_coredump_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B rpm_log_t
+
+	/var/log/yum\.log.*
+.br
+
+.br
+.B rpm_var_cache_t
+
+	/var/cache/yum(/.*)?
+.br
+	/var/spool/up2date(/.*)?
+.br
+
+.br
+.B rpm_var_run_t
+
+	/var/run/yum.*
+.br
+	/var/run/PackageKit(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), abrt_retrace_coredump(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, abrt_selinux(8), abrt_selinux(8), abrt_dump_oops_selinux(8), abrt_handle_event_selinux(8), abrt_helper_selinux(8), abrt_retrace_worker_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/abrt_retrace_worker_selinux.8 serefpolicy-3.7.19/man/man8/abrt_retrace_worker_selinux.8
--- nsaserefpolicy/man/man8/abrt_retrace_worker_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/abrt_retrace_worker_selinux.8	2013-03-15 11:39:57.201151798 +0100
@@ -0,0 +1,140 @@
+.TH  "abrt_retrace_worker_selinux"  "8"  "13-01-04" "abrt_retrace_worker" "SELinux Policy documentation for abrt_retrace_worker"
+.SH "NAME"
+abrt_retrace_worker_selinux \- Security Enhanced Linux Policy for the abrt_retrace_worker processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the abrt_retrace_worker processes via flexible mandatory access control.
+
+The abrt_retrace_worker processes execute with the abrt_retrace_worker_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep abrt_retrace_worker_t
+
+
+.SH "ENTRYPOINTS"
+
+The abrt_retrace_worker_t SELinux type can be entered via the "abrt_retrace_worker_exec_t" file type.  The default entrypoint paths for the abrt_retrace_worker_t domain are the following:"
+
+/usr/bin/abrt-retrace-worker, /usr/bin/retrace-server-worker
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux abrt_retrace_worker policy is very flexible allowing users to setup their abrt_retrace_worker processes in as secure a method as possible.
+.PP
+The following process types are defined for abrt_retrace_worker:
+
+.EX
+.B abrt_retrace_worker_t
+.EE
+.PP
+Note:
+.B semanage permissive -a abrt_retrace_worker_t
+
+can be used to make the process type abrt_retrace_worker_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux abrt_retrace_worker policy is very flexible allowing users to setup their abrt_retrace_worker processes in as secure a method as possible.
+.PP
+The following file types are defined for abrt_retrace_worker:
+
+
+.EX
+.PP
+.B abrt_retrace_worker_exec_t
+.EE
+
+- Set files with the abrt_retrace_worker_exec_t type, if you want to transition an executable to the abrt_retrace_worker_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type abrt_retrace_worker_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B abrt_retrace_spool_t
+
+	/var/spool/abrt-retrace(/.*)?
+.br
+	/var/spool/retrace-server(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), abrt_retrace_worker(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, abrt_selinux(8), abrt_selinux(8), abrt_dump_oops_selinux(8), abrt_handle_event_selinux(8), abrt_helper_selinux(8), abrt_retrace_coredump_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/abrt_selinux.8 serefpolicy-3.7.19/man/man8/abrt_selinux.8
--- nsaserefpolicy/man/man8/abrt_selinux.8	2013-03-15 11:41:12.110153507 +0100
+++ serefpolicy-3.7.19/man/man8/abrt_selinux.8	2013-03-15 11:40:03.567151943 +0100
@@ -1,28 +1,66 @@
-.TH  "abrt_selinux"  "8"  "abrt" "dwalsh@redhat.com" "abrt SELinux Policy documentation"
+.TH  "abrt_selinux"  "8"  "13-01-04" "abrt" "SELinux Policy documentation for abrt"
 .SH "NAME"
 abrt_selinux \- Security Enhanced Linux Policy for the abrt processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the abrt processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B abrt
-(ABRT - automated bug-reporting tool)
-processes via flexible mandatory access
-control.  
+The abrt processes execute with the abrt_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep abrt_t
+
+
+.SH "ENTRYPOINTS"
+
+The abrt_t SELinux type can be entered via the "abrt_exec_t" file type.  The default entrypoint paths for the abrt_t domain are the following:"
+
+/usr/sbin/abrtd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux abrt policy is very flexible allowing users to setup their abrt processes in as secure a method as possible.
+.PP
+The following process types are defined for abrt:
+
+.EX
+.B abrt_handle_event_t, abrt_helper_t, abrt_retrace_coredump_t, abrt_t, abrt_retrace_worker_t, abrt_dump_oops_t
+.EE
+.PP
+Note:
+.B semanage permissive -a abrt_t
+
+can be used to make the process type abrt_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  abrt policy is extremely flexible and has several booleans that allow you to manipulate the policy and run abrt with the tightest access possible.
 
 
 .PP
-If you want to allow ABRT to run in abrt_handle_event_t domain to handle ABRT event script, you must turn on the abrt_handle_event boolean.
+If you want to allow ABRT to run in abrt_handle_event_t domain to handle ABRT event scripts, you must turn on the abrt_handle_event boolean.
+
+.EX
+.B setsebool -P abrt_handle_event 1
+.EE
+
+.PP
+If you want to allow ABRT to run in abrt_handle_event_t domain to handle ABRT event scripts, you must turn on the abrt_handle_event boolean.
 
 .EX
 .B setsebool -P abrt_handle_event 1
 .EE
 
+.PP
+If you want to allow ABRT to modify public files used for public file transfer services, you must turn on the abrt_anon_write boolean.
+
+.EX
+.B setsebool -P abrt_anon_write 1
+.EE
+
 .SH SHARING FILES
 If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
 .TP
@@ -34,7 +72,7 @@
 .B restorecon -F -R -v /var/abrt
 .pp
 .TP
-Allow abrt servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_abrt_anon_write boolean to be set.
+Allow abrt servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_abrtd_anon_write boolean to be set.
 .PP
 .B
 semanage fcontext -a -t public_content_rw_t "/var/abrt/incoming(/.*)?"
@@ -50,19 +88,19 @@
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux abrt policy is very flexible allowing users to setup their abrt processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for abrt:
 
 
 .EX
 .PP
-.B abrt_dump_oops_exec_t 
+.B abrt_dump_oops_exec_t
 .EE
 
 - Set files with the abrt_dump_oops_exec_t type, if you want to transition an executable to the abrt_dump_oops_t domain.
@@ -70,7 +108,7 @@
 
 .EX
 .PP
-.B abrt_etc_t 
+.B abrt_etc_t
 .EE
 
 - Set files with the abrt_etc_t type, if you want to store abrt files in the /etc directories.
@@ -78,7 +116,7 @@
 
 .EX
 .PP
-.B abrt_exec_t 
+.B abrt_exec_t
 .EE
 
 - Set files with the abrt_exec_t type, if you want to transition an executable to the abrt_t domain.
@@ -86,7 +124,7 @@
 
 .EX
 .PP
-.B abrt_handle_event_exec_t 
+.B abrt_handle_event_exec_t
 .EE
 
 - Set files with the abrt_handle_event_exec_t type, if you want to transition an executable to the abrt_handle_event_t domain.
@@ -94,7 +132,7 @@
 
 .EX
 .PP
-.B abrt_helper_exec_t 
+.B abrt_helper_exec_t
 .EE
 
 - Set files with the abrt_helper_exec_t type, if you want to transition an executable to the abrt_helper_t domain.
@@ -102,7 +140,7 @@
 
 .EX
 .PP
-.B abrt_initrc_exec_t 
+.B abrt_initrc_exec_t
 .EE
 
 - Set files with the abrt_initrc_exec_t type, if you want to transition an executable to the abrt_initrc_t domain.
@@ -110,19 +148,15 @@
 
 .EX
 .PP
-.B abrt_retrace_cache_t 
+.B abrt_retrace_cache_t
 .EE
 
 - Set files with the abrt_retrace_cache_t type, if you want to store the files under the /var/cache directory.
 
-.br
-.TP 5
-Paths: 
-/var/cache/retrace-server(/.*)?, /var/cache/abrt-retrace(/.*)?
 
 .EX
 .PP
-.B abrt_retrace_coredump_exec_t 
+.B abrt_retrace_coredump_exec_t
 .EE
 
 - Set files with the abrt_retrace_coredump_exec_t type, if you want to transition an executable to the abrt_retrace_coredump_t domain.
@@ -130,31 +164,23 @@
 
 .EX
 .PP
-.B abrt_retrace_spool_t 
+.B abrt_retrace_spool_t
 .EE
 
 - Set files with the abrt_retrace_spool_t type, if you want to store the abrt retrace files under the /var/spool directory.
 
-.br
-.TP 5
-Paths: 
-/var/spool/retrace-server(/.*)?, /var/spool/abrt-retrace(/.*)?
 
 .EX
 .PP
-.B abrt_retrace_worker_exec_t 
+.B abrt_retrace_worker_exec_t
 .EE
 
 - Set files with the abrt_retrace_worker_exec_t type, if you want to transition an executable to the abrt_retrace_worker_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/retrace-server-worker, /usr/bin/abrt-retrace-worker
 
 .EX
 .PP
-.B abrt_tmp_t 
+.B abrt_tmp_t
 .EE
 
 - Set files with the abrt_tmp_t type, if you want to store abrt temporary files in the /tmp directories.
@@ -162,19 +188,15 @@
 
 .EX
 .PP
-.B abrt_var_cache_t 
+.B abrt_var_cache_t
 .EE
 
 - Set files with the abrt_var_cache_t type, if you want to store the files under the /var/cache directory.
 
-.br
-.TP 5
-Paths: 
-/var/cache/abrt(/.*)?, /var/cache/abrt-di(/.*)?, /var/spool/abrt(/.*)?
 
 .EX
 .PP
-.B abrt_var_log_t 
+.B abrt_var_log_t
 .EE
 
 - Set files with the abrt_var_log_t type, if you want to treat the data as abrt var log data, usually stored under the /var/log directory.
@@ -182,40 +204,138 @@
 
 .EX
 .PP
-.B abrt_var_run_t 
+.B abrt_var_run_t
 .EE
 
 - Set files with the abrt_var_run_t type, if you want to store the abrt files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/abrtd?\.socket, /var/run/abrtd?\.lock, /var/run/abrt(/.*)?, /var/run/abrt\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux abrt policy is very flexible allowing users to setup their abrt processes in as secure a method as possible.
-.PP 
-The following process types are defined for abrt:
+.SH "MANAGED FILES"
 
-.EX
-.B abrt_handle_event_t, abrt_helper_t, abrt_retrace_coredump_t, abrt_t, abrt_retrace_worker_t, abrt_dump_oops_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type abrt_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B abrt_etc_t
+
+	/etc/abrt(/.*)?
+.br
+
+.br
+.B abrt_tmp_t
+
+
+.br
+.B abrt_var_cache_t
+
+	/var/cache/abrt(/.*)?
+.br
+	/var/spool/abrt(/.*)?
+.br
+	/var/cache/abrt-di(/.*)?
+.br
+
+.br
+.B abrt_var_log_t
+
+	/var/log/abrt-logger.*
+.br
+
+.br
+.B abrt_var_run_t
+
+	/var/run/abrt(/.*)?
+.br
+	/var/run/abrtd?\.lock
+.br
+	/var/run/abrtd?\.socket
+.br
+	/var/run/abrt\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B rpm_log_t
+
+	/var/log/yum\.log.*
+.br
+
+.br
+.B rpm_var_cache_t
+
+	/var/cache/yum(/.*)?
+.br
+	/var/spool/up2date(/.*)?
+.br
+
+.br
+.B rpm_var_run_t
+
+	/var/run/yum.*
+.br
+	/var/run/PackageKit(/.*)?
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -231,12 +351,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), abrt(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), abrt(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), abrt_dump_oops_selinux(8), abrt_handle_event_selinux(8), abrt_helper_selinux(8), abrt_retrace_coredump_selinux(8), abrt_retrace_worker_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/accountsd_selinux.8 serefpolicy-3.7.19/man/man8/accountsd_selinux.8
--- nsaserefpolicy/man/man8/accountsd_selinux.8	2013-03-15 11:41:11.885153502 +0100
+++ serefpolicy-3.7.19/man/man8/accountsd_selinux.8	2013-03-15 11:39:59.493151850 +0100
@@ -1,31 +1,55 @@
-.TH  "accountsd_selinux"  "8"  "accountsd" "dwalsh@redhat.com" "accountsd SELinux Policy documentation"
+.TH  "accountsd_selinux"  "8"  "13-01-04" "accountsd" "SELinux Policy documentation for accountsd"
 .SH "NAME"
 accountsd_selinux \- Security Enhanced Linux Policy for the accountsd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the accountsd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B accountsd
-(policy for accountsd)
-processes via flexible mandatory access
-control.  
+The accountsd processes execute with the accountsd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep accountsd_t
+
+
+.SH "ENTRYPOINTS"
+
+The accountsd_t SELinux type can be entered via the "accountsd_exec_t" file type.  The default entrypoint paths for the accountsd_t domain are the following:"
+
+/usr/libexec/accounts-daemon
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux accountsd policy is very flexible allowing users to setup their accountsd processes in as secure a method as possible.
+.PP
+The following process types are defined for accountsd:
+
+.EX
+.B accountsd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a accountsd_t
+
+can be used to make the process type accountsd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux accountsd policy is very flexible allowing users to setup their accountsd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for accountsd:
 
 
 .EX
 .PP
-.B accountsd_exec_t 
+.B accountsd_exec_t
 .EE
 
 - Set files with the accountsd_exec_t type, if you want to transition an executable to the accountsd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B accountsd_var_lib_t 
+.B accountsd_var_lib_t
 .EE
 
 - Set files with the accountsd_var_lib_t type, if you want to store the accountsd files under the /var/lib directory.
@@ -41,28 +65,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux accountsd policy is very flexible allowing users to setup their accountsd processes in as secure a method as possible.
-.PP 
-The following process types are defined for accountsd:
+.SH "MANAGED FILES"
 
-.EX
-.B accountsd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type accountsd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B accountsd_var_lib_t
+
+	/var/lib/AccountsService(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B xdm_etc_t
+
+	/etc/gdm(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +139,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), accountsd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), accountsd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/acct_selinux.8 serefpolicy-3.7.19/man/man8/acct_selinux.8
--- nsaserefpolicy/man/man8/acct_selinux.8	2013-03-15 11:41:12.109153507 +0100
+++ serefpolicy-3.7.19/man/man8/acct_selinux.8	2013-03-15 11:40:03.534151942 +0100
@@ -1,76 +1,134 @@
-.TH  "acct_selinux"  "8"  "acct" "dwalsh@redhat.com" "acct SELinux Policy documentation"
+.TH  "acct_selinux"  "8"  "13-01-04" "acct" "SELinux Policy documentation for acct"
 .SH "NAME"
 acct_selinux \- Security Enhanced Linux Policy for the acct processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the acct processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B acct
-(Berkeley process accounting)
-processes via flexible mandatory access
-control.  
+The acct processes execute with the acct_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep acct_t
+
+
+.SH "ENTRYPOINTS"
+
+The acct_t SELinux type can be entered via the "acct_exec_t" file type.  The default entrypoint paths for the acct_t domain are the following:"
+
+/etc/cron\.(daily|monthly)/acct, /sbin/accton, /usr/sbin/accton
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux acct policy is very flexible allowing users to setup their acct processes in as secure a method as possible.
+.PP
+The following process types are defined for acct:
+
+.EX
+.B acct_t
+.EE
+.PP
+Note:
+.B semanage permissive -a acct_t
+
+can be used to make the process type acct_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux acct policy is very flexible allowing users to setup their acct processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for acct:
 
 
 .EX
 .PP
-.B acct_data_t 
+.B acct_data_t
 .EE
 
 - Set files with the acct_data_t type, if you want to treat the files as acct content.
 
-.br
-.TP 5
-Paths: 
-/var/log/account(/.*)?, /var/account(/.*)?
 
 .EX
 .PP
-.B acct_exec_t 
+.B acct_exec_t
 .EE
 
 - Set files with the acct_exec_t type, if you want to transition an executable to the acct_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/accton, /sbin/accton, /etc/cron\.(daily|monthly)/acct
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux acct policy is very flexible allowing users to setup their acct processes in as secure a method as possible.
-.PP 
-The following process types are defined for acct:
+.SH "MANAGED FILES"
 
-.EX
-.B acct_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type acct_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B acct_data_t
+
+	/var/account(/.*)?
+.br
+	/var/log/account(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +141,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), acct(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), acct(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ada_selinux.8 serefpolicy-3.7.19/man/man8/ada_selinux.8
--- nsaserefpolicy/man/man8/ada_selinux.8	2013-03-15 11:41:11.838153501 +0100
+++ serefpolicy-3.7.19/man/man8/ada_selinux.8	2013-03-15 11:39:57.960151815 +0100
@@ -1,64 +1,76 @@
-.TH  "ada_selinux"  "8"  "ada" "dwalsh@redhat.com" "ada SELinux Policy documentation"
+.TH  "ada_selinux"  "8"  "13-01-04" "ada" "SELinux Policy documentation for ada"
 .SH "NAME"
 ada_selinux \- Security Enhanced Linux Policy for the ada processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ada processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ada
-(GNAT Ada95 compiler)
-processes via flexible mandatory access
-control.  
+The ada processes execute with the ada_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ada_t
+
+
+.SH "ENTRYPOINTS"
+
+The ada_t SELinux type can be entered via the "mtrr_device_t,ada_exec_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the ada_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/libexec/gcc(/.*)?/gnat1, /usr/bin/gnatls, /usr/bin/gnatbind, /usr/bin/gnatmake, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ada policy is very flexible allowing users to setup their ada processes in as secure a method as possible.
+.PP
+The following process types are defined for ada:
+
+.EX
+.B ada_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ada_t
+
+can be used to make the process type ada_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ada policy is very flexible allowing users to setup their ada processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ada:
 
 
 .EX
 .PP
-.B ada_exec_t 
+.B ada_exec_t
 .EE
 
 - Set files with the ada_exec_t type, if you want to transition an executable to the ada_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/gnatls, /usr/bin/gnatbind, /usr/bin/gnatmake, /usr/libexec/gcc(/.*)?/gnat1
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ada policy is very flexible allowing users to setup their ada processes in as secure a method as possible.
-.PP 
-The following process types are defined for ada:
+.SH "MANAGED FILES"
 
-.EX
-.B ada_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ada_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -71,11 +83,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ada(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ada(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/afs_bosserver_selinux.8 serefpolicy-3.7.19/man/man8/afs_bosserver_selinux.8
--- nsaserefpolicy/man/man8/afs_bosserver_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/afs_bosserver_selinux.8	2013-03-15 11:40:00.027151862 +0100
@@ -0,0 +1,154 @@
+.TH  "afs_bosserver_selinux"  "8"  "13-01-04" "afs_bosserver" "SELinux Policy documentation for afs_bosserver"
+.SH "NAME"
+afs_bosserver_selinux \- Security Enhanced Linux Policy for the afs_bosserver processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the afs_bosserver processes via flexible mandatory access control.
+
+The afs_bosserver processes execute with the afs_bosserver_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep afs_bosserver_t
+
+
+.SH "ENTRYPOINTS"
+
+The afs_bosserver_t SELinux type can be entered via the "afs_bosserver_exec_t" file type.  The default entrypoint paths for the afs_bosserver_t domain are the following:"
+
+/usr/afs/bin/bosserver
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux afs_bosserver policy is very flexible allowing users to setup their afs_bosserver processes in as secure a method as possible.
+.PP
+The following process types are defined for afs_bosserver:
+
+.EX
+.B afs_bosserver_t
+.EE
+.PP
+Note:
+.B semanage permissive -a afs_bosserver_t
+
+can be used to make the process type afs_bosserver_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux afs_bosserver policy is very flexible allowing users to setup their afs_bosserver processes in as secure a method as possible.
+.PP
+The following file types are defined for afs_bosserver:
+
+
+.EX
+.PP
+.B afs_bosserver_exec_t
+.EE
+
+- Set files with the afs_bosserver_exec_t type, if you want to transition an executable to the afs_bosserver_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type afs_bosserver_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B afs_config_t
+
+	/usr/afs/etc(/.*)?
+.br
+	/usr/afs/local(/.*)?
+.br
+
+.br
+.B afs_logfile_t
+
+	/usr/afs/logs(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), afs_bosserver(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, afs_selinux(8), afs_selinux(8), afs_fsserver_selinux(8), afs_kaserver_selinux(8), afs_ptserver_selinux(8), afs_vlserver_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/afs_fsserver_selinux.8 serefpolicy-3.7.19/man/man8/afs_fsserver_selinux.8
--- nsaserefpolicy/man/man8/afs_fsserver_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/afs_fsserver_selinux.8	2013-03-15 11:40:03.369151938 +0100
@@ -0,0 +1,156 @@
+.TH  "afs_fsserver_selinux"  "8"  "13-01-04" "afs_fsserver" "SELinux Policy documentation for afs_fsserver"
+.SH "NAME"
+afs_fsserver_selinux \- Security Enhanced Linux Policy for the afs_fsserver processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the afs_fsserver processes via flexible mandatory access control.
+
+The afs_fsserver processes execute with the afs_fsserver_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep afs_fsserver_t
+
+
+.SH "ENTRYPOINTS"
+
+The afs_fsserver_t SELinux type can be entered via the "afs_fsserver_exec_t" file type.  The default entrypoint paths for the afs_fsserver_t domain are the following:"
+
+/usr/afs/bin/salvager, /usr/afs/bin/volserver, /usr/afs/bin/fileserver
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux afs_fsserver policy is very flexible allowing users to setup their afs_fsserver processes in as secure a method as possible.
+.PP
+The following process types are defined for afs_fsserver:
+
+.EX
+.B afs_fsserver_t
+.EE
+.PP
+Note:
+.B semanage permissive -a afs_fsserver_t
+
+can be used to make the process type afs_fsserver_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux afs_fsserver policy is very flexible allowing users to setup their afs_fsserver processes in as secure a method as possible.
+.PP
+The following file types are defined for afs_fsserver:
+
+
+.EX
+.PP
+.B afs_fsserver_exec_t
+.EE
+
+- Set files with the afs_fsserver_exec_t type, if you want to transition an executable to the afs_fsserver_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type afs_fsserver_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B afs_config_t
+
+	/usr/afs/etc(/.*)?
+.br
+	/usr/afs/local(/.*)?
+.br
+
+.br
+.B afs_files_t
+
+	/vicepa
+.br
+	/vicepb
+.br
+	/vicepc
+.br
+
+.br
+.B afs_logfile_t
+
+	/usr/afs/logs(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), afs_fsserver(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, afs_selinux(8), afs_selinux(8), afs_bosserver_selinux(8), afs_kaserver_selinux(8), afs_ptserver_selinux(8), afs_vlserver_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/afs_kaserver_selinux.8 serefpolicy-3.7.19/man/man8/afs_kaserver_selinux.8
--- nsaserefpolicy/man/man8/afs_kaserver_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/afs_kaserver_selinux.8	2013-03-15 11:39:55.385151756 +0100
@@ -0,0 +1,152 @@
+.TH  "afs_kaserver_selinux"  "8"  "13-01-04" "afs_kaserver" "SELinux Policy documentation for afs_kaserver"
+.SH "NAME"
+afs_kaserver_selinux \- Security Enhanced Linux Policy for the afs_kaserver processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the afs_kaserver processes via flexible mandatory access control.
+
+The afs_kaserver processes execute with the afs_kaserver_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep afs_kaserver_t
+
+
+.SH "ENTRYPOINTS"
+
+The afs_kaserver_t SELinux type can be entered via the "afs_kaserver_exec_t" file type.  The default entrypoint paths for the afs_kaserver_t domain are the following:"
+
+/usr/afs/bin/kaserver
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux afs_kaserver policy is very flexible allowing users to setup their afs_kaserver processes in as secure a method as possible.
+.PP
+The following process types are defined for afs_kaserver:
+
+.EX
+.B afs_kaserver_t
+.EE
+.PP
+Note:
+.B semanage permissive -a afs_kaserver_t
+
+can be used to make the process type afs_kaserver_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux afs_kaserver policy is very flexible allowing users to setup their afs_kaserver processes in as secure a method as possible.
+.PP
+The following file types are defined for afs_kaserver:
+
+
+.EX
+.PP
+.B afs_kaserver_exec_t
+.EE
+
+- Set files with the afs_kaserver_exec_t type, if you want to transition an executable to the afs_kaserver_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type afs_kaserver_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B afs_config_t
+
+	/usr/afs/etc(/.*)?
+.br
+	/usr/afs/local(/.*)?
+.br
+
+.br
+.B afs_ka_db_t
+
+	/usr/afs/db/ka.*
+.br
+
+.br
+.B afs_logfile_t
+
+	/usr/afs/logs(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), afs_kaserver(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, afs_selinux(8), afs_selinux(8), afs_bosserver_selinux(8), afs_fsserver_selinux(8), afs_ptserver_selinux(8), afs_vlserver_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/afs_ptserver_selinux.8 serefpolicy-3.7.19/man/man8/afs_ptserver_selinux.8
--- nsaserefpolicy/man/man8/afs_ptserver_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/afs_ptserver_selinux.8	2013-03-15 11:39:59.203151843 +0100
@@ -0,0 +1,144 @@
+.TH  "afs_ptserver_selinux"  "8"  "13-01-04" "afs_ptserver" "SELinux Policy documentation for afs_ptserver"
+.SH "NAME"
+afs_ptserver_selinux \- Security Enhanced Linux Policy for the afs_ptserver processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the afs_ptserver processes via flexible mandatory access control.
+
+The afs_ptserver processes execute with the afs_ptserver_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep afs_ptserver_t
+
+
+.SH "ENTRYPOINTS"
+
+The afs_ptserver_t SELinux type can be entered via the "afs_ptserver_exec_t" file type.  The default entrypoint paths for the afs_ptserver_t domain are the following:"
+
+/usr/afs/bin/ptserver
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux afs_ptserver policy is very flexible allowing users to setup their afs_ptserver processes in as secure a method as possible.
+.PP
+The following process types are defined for afs_ptserver:
+
+.EX
+.B afs_ptserver_t
+.EE
+.PP
+Note:
+.B semanage permissive -a afs_ptserver_t
+
+can be used to make the process type afs_ptserver_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux afs_ptserver policy is very flexible allowing users to setup their afs_ptserver processes in as secure a method as possible.
+.PP
+The following file types are defined for afs_ptserver:
+
+
+.EX
+.PP
+.B afs_ptserver_exec_t
+.EE
+
+- Set files with the afs_ptserver_exec_t type, if you want to transition an executable to the afs_ptserver_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type afs_ptserver_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B afs_logfile_t
+
+	/usr/afs/logs(/.*)?
+.br
+
+.br
+.B afs_pt_db_t
+
+	/usr/afs/db/pr.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), afs_ptserver(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, afs_selinux(8), afs_selinux(8), afs_bosserver_selinux(8), afs_fsserver_selinux(8), afs_kaserver_selinux(8), afs_vlserver_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/afs_selinux.8 serefpolicy-3.7.19/man/man8/afs_selinux.8
--- nsaserefpolicy/man/man8/afs_selinux.8	2013-03-15 11:41:11.882153502 +0100
+++ serefpolicy-3.7.19/man/man8/afs_selinux.8	2013-03-15 11:39:59.157151842 +0100
@@ -1,31 +1,55 @@
-.TH  "afs_selinux"  "8"  "afs" "dwalsh@redhat.com" "afs SELinux Policy documentation"
+.TH  "afs_selinux"  "8"  "13-01-04" "afs" "SELinux Policy documentation for afs"
 .SH "NAME"
 afs_selinux \- Security Enhanced Linux Policy for the afs processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the afs processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B afs
-(Andrew Filesystem server)
-processes via flexible mandatory access
-control.  
+The afs processes execute with the afs_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep afs_t
+
+
+.SH "ENTRYPOINTS"
+
+The afs_t SELinux type can be entered via the "afs_exec_t" file type.  The default entrypoint paths for the afs_t domain are the following:"
+
+/usr/sbin/afsd, /usr/vice/etc/afsd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
+.PP
+The following process types are defined for afs:
+
+.EX
+.B afs_kaserver_t, afs_t, afs_fsserver_t, afs_bosserver_t, afs_vlserver_t, afs_ptserver_t
+.EE
+.PP
+Note:
+.B semanage permissive -a afs_t
+
+can be used to make the process type afs_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for afs:
 
 
 .EX
 .PP
-.B afs_bosserver_exec_t 
+.B afs_bosserver_exec_t
 .EE
 
 - Set files with the afs_bosserver_exec_t type, if you want to transition an executable to the afs_bosserver_t domain.
@@ -33,31 +57,23 @@
 
 .EX
 .PP
-.B afs_cache_t 
+.B afs_cache_t
 .EE
 
 - Set files with the afs_cache_t type, if you want to store the files under the /var/cache directory.
 
-.br
-.TP 5
-Paths: 
-/var/cache/afs(/.*)?, /usr/vice/cache(/.*)?
 
 .EX
 .PP
-.B afs_config_t 
+.B afs_config_t
 .EE
 
 - Set files with the afs_config_t type, if you want to treat the files as afs configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/usr/afs/etc(/.*)?, /usr/afs/local(/.*)?
 
 .EX
 .PP
-.B afs_dbdir_t 
+.B afs_dbdir_t
 .EE
 
 - Set files with the afs_dbdir_t type, if you want to treat the files as afs dbdir data.
@@ -65,55 +81,39 @@
 
 .EX
 .PP
-.B afs_exec_t 
+.B afs_exec_t
 .EE
 
 - Set files with the afs_exec_t type, if you want to transition an executable to the afs_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/vice/etc/afsd, /usr/sbin/afsd
 
 .EX
 .PP
-.B afs_files_t 
+.B afs_files_t
 .EE
 
 - Set files with the afs_files_t type, if you want to treat the files as afs content.
 
-.br
-.TP 5
-Paths: 
-/vicepc, /vicepb, /vicepa
 
 .EX
 .PP
-.B afs_fsserver_exec_t 
+.B afs_fsserver_exec_t
 .EE
 
 - Set files with the afs_fsserver_exec_t type, if you want to transition an executable to the afs_fsserver_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/afs/bin/volserver, /usr/afs/bin/fileserver, /usr/afs/bin/salvager
 
 .EX
 .PP
-.B afs_initrc_exec_t 
+.B afs_initrc_exec_t
 .EE
 
 - Set files with the afs_initrc_exec_t type, if you want to transition an executable to the afs_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/afs, /etc/rc\.d/init\.d/openafs-client
 
 .EX
 .PP
-.B afs_ka_db_t 
+.B afs_ka_db_t
 .EE
 
 - Set files with the afs_ka_db_t type, if you want to treat the files as afs ka database content.
@@ -121,7 +121,7 @@
 
 .EX
 .PP
-.B afs_kaserver_exec_t 
+.B afs_kaserver_exec_t
 .EE
 
 - Set files with the afs_kaserver_exec_t type, if you want to transition an executable to the afs_kaserver_t domain.
@@ -129,7 +129,7 @@
 
 .EX
 .PP
-.B afs_logfile_t 
+.B afs_logfile_t
 .EE
 
 - Set files with the afs_logfile_t type, if you want to treat the files as afs logfile data.
@@ -137,7 +137,7 @@
 
 .EX
 .PP
-.B afs_pt_db_t 
+.B afs_pt_db_t
 .EE
 
 - Set files with the afs_pt_db_t type, if you want to treat the files as afs pt database content.
@@ -145,7 +145,7 @@
 
 .EX
 .PP
-.B afs_ptserver_exec_t 
+.B afs_ptserver_exec_t
 .EE
 
 - Set files with the afs_ptserver_exec_t type, if you want to transition an executable to the afs_ptserver_t domain.
@@ -153,7 +153,7 @@
 
 .EX
 .PP
-.B afs_vl_db_t 
+.B afs_vl_db_t
 .EE
 
 - Set files with the afs_vl_db_t type, if you want to treat the files as afs vl database content.
@@ -161,7 +161,7 @@
 
 .EX
 .PP
-.B afs_vlserver_exec_t 
+.B afs_vlserver_exec_t
 .EE
 
 - Set files with the afs_vlserver_exec_t type, if you want to transition an executable to the afs_vlserver_t domain.
@@ -169,106 +169,222 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for afs:
 
 .EX
 .TP 5
-.B afs_bos_port_t 
+.B afs_bos_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 7007
 .EE
 
 .EX
 .TP 5
-.B afs_client_port_t 
+.B afs_client_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 7001
 .EE
 
 .EX
 .TP 5
-.B afs_fs_port_t 
+.B afs_fs_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 2040
+.EE
+udp 7000,7005
 .EE
 
 .EX
 .TP 5
-.B afs_ka_port_t 
+.B afs_ka_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 7004
 .EE
 
 .EX
 .TP 5
-.B afs_pt_port_t 
+.B afs_pt_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 7002
 .EE
 
 .EX
 .TP 5
-.B afs_vl_port_t 
+.B afs_vl_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 7003
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
-.PP 
-The following process types are defined for afs:
+.SH "MANAGED FILES"
+
+The SELinux process type afs_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B afs_cache_t
+
+	/var/cache/afs(/.*)?
+.br
+	/usr/vice/cache(/.*)?
+.br
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B unlabeled_t
 
-.EX
-.B afs_kaserver_t, afs_t, afs_fsserver_t, afs_bosserver_t, afs_vlserver_t, afs_ptserver_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -284,11 +400,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), afs(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), afs(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, afs_bosserver_selinux(8), afs_fsserver_selinux(8), afs_kaserver_selinux(8), afs_ptserver_selinux(8), afs_vlserver_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/afs_vlserver_selinux.8 serefpolicy-3.7.19/man/man8/afs_vlserver_selinux.8
--- nsaserefpolicy/man/man8/afs_vlserver_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/afs_vlserver_selinux.8	2013-03-15 11:40:00.953151883 +0100
@@ -0,0 +1,144 @@
+.TH  "afs_vlserver_selinux"  "8"  "13-01-04" "afs_vlserver" "SELinux Policy documentation for afs_vlserver"
+.SH "NAME"
+afs_vlserver_selinux \- Security Enhanced Linux Policy for the afs_vlserver processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the afs_vlserver processes via flexible mandatory access control.
+
+The afs_vlserver processes execute with the afs_vlserver_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep afs_vlserver_t
+
+
+.SH "ENTRYPOINTS"
+
+The afs_vlserver_t SELinux type can be entered via the "afs_vlserver_exec_t" file type.  The default entrypoint paths for the afs_vlserver_t domain are the following:"
+
+/usr/afs/bin/vlserver
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux afs_vlserver policy is very flexible allowing users to setup their afs_vlserver processes in as secure a method as possible.
+.PP
+The following process types are defined for afs_vlserver:
+
+.EX
+.B afs_vlserver_t
+.EE
+.PP
+Note:
+.B semanage permissive -a afs_vlserver_t
+
+can be used to make the process type afs_vlserver_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux afs_vlserver policy is very flexible allowing users to setup their afs_vlserver processes in as secure a method as possible.
+.PP
+The following file types are defined for afs_vlserver:
+
+
+.EX
+.PP
+.B afs_vlserver_exec_t
+.EE
+
+- Set files with the afs_vlserver_exec_t type, if you want to transition an executable to the afs_vlserver_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type afs_vlserver_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B afs_logfile_t
+
+	/usr/afs/logs(/.*)?
+.br
+
+.br
+.B afs_vl_db_t
+
+	/usr/afs/db/vl.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), afs_vlserver(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, afs_selinux(8), afs_selinux(8), afs_bosserver_selinux(8), afs_fsserver_selinux(8), afs_kaserver_selinux(8), afs_ptserver_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/aiccu_selinux.8 serefpolicy-3.7.19/man/man8/aiccu_selinux.8
--- nsaserefpolicy/man/man8/aiccu_selinux.8	2013-03-15 11:41:11.870153501 +0100
+++ serefpolicy-3.7.19/man/man8/aiccu_selinux.8	2013-03-15 11:39:58.940151837 +0100
@@ -1,31 +1,55 @@
-.TH  "aiccu_selinux"  "8"  "aiccu" "dwalsh@redhat.com" "aiccu SELinux Policy documentation"
+.TH  "aiccu_selinux"  "8"  "13-01-04" "aiccu" "SELinux Policy documentation for aiccu"
 .SH "NAME"
 aiccu_selinux \- Security Enhanced Linux Policy for the aiccu processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the aiccu processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B aiccu
-(Automatic IPv6 Connectivity Client Utility)
-processes via flexible mandatory access
-control.  
+The aiccu processes execute with the aiccu_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep aiccu_t
+
+
+.SH "ENTRYPOINTS"
+
+The aiccu_t SELinux type can be entered via the "aiccu_exec_t" file type.  The default entrypoint paths for the aiccu_t domain are the following:"
+
+/usr/sbin/aiccu
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux aiccu policy is very flexible allowing users to setup their aiccu processes in as secure a method as possible.
+.PP
+The following process types are defined for aiccu:
+
+.EX
+.B aiccu_t
+.EE
+.PP
+Note:
+.B semanage permissive -a aiccu_t
+
+can be used to make the process type aiccu_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux aiccu policy is very flexible allowing users to setup their aiccu processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for aiccu:
 
 
 .EX
 .PP
-.B aiccu_etc_t 
+.B aiccu_etc_t
 .EE
 
 - Set files with the aiccu_etc_t type, if you want to store aiccu files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B aiccu_exec_t 
+.B aiccu_exec_t
 .EE
 
 - Set files with the aiccu_exec_t type, if you want to transition an executable to the aiccu_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B aiccu_initrc_exec_t 
+.B aiccu_initrc_exec_t
 .EE
 
 - Set files with the aiccu_initrc_exec_t type, if you want to transition an executable to the aiccu_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B aiccu_var_run_t 
+.B aiccu_var_run_t
 .EE
 
 - Set files with the aiccu_var_run_t type, if you want to store the aiccu files under the /run directory.
@@ -57,28 +81,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux aiccu policy is very flexible allowing users to setup their aiccu processes in as secure a method as possible.
-.PP 
-The following process types are defined for aiccu:
+.SH "MANAGED FILES"
 
-.EX
-.B aiccu_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type aiccu_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B aiccu_var_run_t
+
+	/var/run/aiccu\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +157,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), aiccu(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), aiccu(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/aide_selinux.8 serefpolicy-3.7.19/man/man8/aide_selinux.8
--- nsaserefpolicy/man/man8/aide_selinux.8	2013-03-15 11:41:12.147153508 +0100
+++ serefpolicy-3.7.19/man/man8/aide_selinux.8	2013-03-15 11:40:04.198151957 +0100
@@ -1,31 +1,55 @@
-.TH  "aide_selinux"  "8"  "aide" "dwalsh@redhat.com" "aide SELinux Policy documentation"
+.TH  "aide_selinux"  "8"  "13-01-04" "aide" "SELinux Policy documentation for aide"
 .SH "NAME"
 aide_selinux \- Security Enhanced Linux Policy for the aide processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the aide processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B aide
-(Aide filesystem integrity checker)
-processes via flexible mandatory access
-control.  
+The aide processes execute with the aide_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep aide_t
+
+
+.SH "ENTRYPOINTS"
+
+The aide_t SELinux type can be entered via the "aide_exec_t" file type.  The default entrypoint paths for the aide_t domain are the following:"
+
+/usr/sbin/aide
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux aide policy is very flexible allowing users to setup their aide processes in as secure a method as possible.
+.PP
+The following process types are defined for aide:
+
+.EX
+.B aide_t
+.EE
+.PP
+Note:
+.B semanage permissive -a aide_t
+
+can be used to make the process type aide_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux aide policy is very flexible allowing users to setup their aide processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for aide:
 
 
 .EX
 .PP
-.B aide_db_t 
+.B aide_db_t
 .EE
 
 - Set files with the aide_db_t type, if you want to treat the files as aide database content.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B aide_exec_t 
+.B aide_exec_t
 .EE
 
 - Set files with the aide_exec_t type, if you want to transition an executable to the aide_t domain.
@@ -41,40 +65,78 @@
 
 .EX
 .PP
-.B aide_log_t 
+.B aide_log_t
 .EE
 
 - Set files with the aide_log_t type, if you want to treat the data as aide log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/aide\.log, /var/log/aide(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux aide policy is very flexible allowing users to setup their aide processes in as secure a method as possible.
-.PP 
-The following process types are defined for aide:
+.SH "MANAGED FILES"
 
-.EX
-.B aide_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type aide_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B aide_db_t
+
+	/var/lib/aide(/.*)?
+.br
+
+.br
+.B aide_log_t
+
+	/var/log/aide(/.*)?
+.br
+	/var/log/aide\.log.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -87,11 +149,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), aide(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), aide(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/aisexec_selinux.8 serefpolicy-3.7.19/man/man8/aisexec_selinux.8
--- nsaserefpolicy/man/man8/aisexec_selinux.8	2013-03-15 11:41:11.883153502 +0100
+++ serefpolicy-3.7.19/man/man8/aisexec_selinux.8	2013-03-15 11:39:59.221151844 +0100
@@ -1,31 +1,55 @@
-.TH  "aisexec_selinux"  "8"  "aisexec" "dwalsh@redhat.com" "aisexec SELinux Policy documentation"
+.TH  "aisexec_selinux"  "8"  "13-01-04" "aisexec" "SELinux Policy documentation for aisexec"
 .SH "NAME"
 aisexec_selinux \- Security Enhanced Linux Policy for the aisexec processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the aisexec processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B aisexec
-(SELinux policy for Aisexec Cluster Engine)
-processes via flexible mandatory access
-control.  
+The aisexec processes execute with the aisexec_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep aisexec_t
+
+
+.SH "ENTRYPOINTS"
+
+The aisexec_t SELinux type can be entered via the "aisexec_exec_t" file type.  The default entrypoint paths for the aisexec_t domain are the following:"
+
+/usr/sbin/aisexec
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux aisexec policy is very flexible allowing users to setup their aisexec processes in as secure a method as possible.
+.PP
+The following process types are defined for aisexec:
+
+.EX
+.B aisexec_t
+.EE
+.PP
+Note:
+.B semanage permissive -a aisexec_t
+
+can be used to make the process type aisexec_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux aisexec policy is very flexible allowing users to setup their aisexec processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for aisexec:
 
 
 .EX
 .PP
-.B aisexec_exec_t 
+.B aisexec_exec_t
 .EE
 
 - Set files with the aisexec_exec_t type, if you want to transition an executable to the aisexec_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B aisexec_initrc_exec_t 
+.B aisexec_initrc_exec_t
 .EE
 
 - Set files with the aisexec_initrc_exec_t type, if you want to transition an executable to the aisexec_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B aisexec_tmp_t 
+.B aisexec_tmp_t
 .EE
 
 - Set files with the aisexec_tmp_t type, if you want to store aisexec temporary files in the /tmp directories.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B aisexec_tmpfs_t 
+.B aisexec_tmpfs_t
 .EE
 
 - Set files with the aisexec_tmpfs_t type, if you want to store aisexec files on a tmpfs file system.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B aisexec_var_lib_t 
+.B aisexec_var_lib_t
 .EE
 
 - Set files with the aisexec_var_lib_t type, if you want to store the aisexec files under the /var/lib directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B aisexec_var_log_t 
+.B aisexec_var_log_t
 .EE
 
 - Set files with the aisexec_var_log_t type, if you want to treat the data as aisexec var log data, usually stored under the /var/log directory.
@@ -73,7 +97,7 @@
 
 .EX
 .PP
-.B aisexec_var_run_t 
+.B aisexec_var_run_t
 .EE
 
 - Set files with the aisexec_var_run_t type, if you want to store the aisexec files under the /run directory.
@@ -81,28 +105,114 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux aisexec policy is very flexible allowing users to setup their aisexec processes in as secure a method as possible.
-.PP 
-The following process types are defined for aisexec:
+.SH "MANAGED FILES"
 
-.EX
-.B aisexec_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type aisexec_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B aisexec_tmp_t
+
+
+.br
+.B aisexec_tmpfs_t
+
+
+.br
+.B aisexec_var_lib_t
+
+	/var/lib/openais(/.*)?
+.br
+
+.br
+.B aisexec_var_log_t
+
+	/var/log/cluster/aisexec\.log.*
+.br
+
+.br
+.B aisexec_var_run_t
+
+	/var/run/aisexec\.pid
+.br
+
+.br
+.B dlm_controld_tmpfs_t
+
+
+.br
+.B fenced_tmpfs_t
+
+
+.br
+.B gfs_controld_tmpfs_t
+
+
+.br
+.B groupd_tmpfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_lib_t
+
+	/opt/(.*/)?var/lib(64)?(/.*)?
+.br
+	/var/lib(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +225,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), aisexec(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), aisexec(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/alsa_selinux.8 serefpolicy-3.7.19/man/man8/alsa_selinux.8
--- nsaserefpolicy/man/man8/alsa_selinux.8	2013-03-15 11:41:12.100153507 +0100
+++ serefpolicy-3.7.19/man/man8/alsa_selinux.8	2013-03-15 11:40:02.960151929 +0100
@@ -1,55 +1,71 @@
-.TH  "alsa_selinux"  "8"  "alsa" "dwalsh@redhat.com" "alsa SELinux Policy documentation"
+.TH  "alsa_selinux"  "8"  "13-01-04" "alsa" "SELinux Policy documentation for alsa"
 .SH "NAME"
 alsa_selinux \- Security Enhanced Linux Policy for the alsa processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the alsa processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B alsa
-(Ainit ALSA configuration tool)
-processes via flexible mandatory access
-control.  
+The alsa processes execute with the alsa_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep alsa_t
+
+
+.SH "ENTRYPOINTS"
+
+The alsa_t SELinux type can be entered via the "alsa_exec_t" file type.  The default entrypoint paths for the alsa_t domain are the following:"
+
+/sbin/salsa, /sbin/alsactl, /usr/bin/ainit, /bin/alsaunmute
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux alsa policy is very flexible allowing users to setup their alsa processes in as secure a method as possible.
+.PP
+The following process types are defined for alsa:
+
+.EX
+.B alsa_t
+.EE
+.PP
+Note:
+.B semanage permissive -a alsa_t
+
+can be used to make the process type alsa_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux alsa policy is very flexible allowing users to setup their alsa processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for alsa:
 
 
 .EX
 .PP
-.B alsa_etc_rw_t 
+.B alsa_etc_rw_t
 .EE
 
 - Set files with the alsa_etc_rw_t type, if you want to treat the files as alsa etc read/write content.
 
-.br
-.TP 5
-Paths: 
-/etc/alsa/pcm(/.*)?, /etc/asound\.state, /etc/asound(/.*)?, /etc/alsa/asound\.state
 
 .EX
 .PP
-.B alsa_exec_t 
+.B alsa_exec_t
 .EE
 
 - Set files with the alsa_exec_t type, if you want to transition an executable to the alsa_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/ainit, /sbin/salsa, /sbin/alsactl, /bin/alsaunmute
 
 .EX
 .PP
-.B alsa_var_lib_t 
+.B alsa_var_lib_t
 .EE
 
 - Set files with the alsa_var_lib_t type, if you want to store the alsa files under the /var/lib directory.
@@ -57,28 +73,82 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux alsa policy is very flexible allowing users to setup their alsa processes in as secure a method as possible.
-.PP 
-The following process types are defined for alsa:
+.SH "MANAGED FILES"
 
-.EX
-.B alsa_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type alsa_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B alsa_etc_rw_t
+
+	/etc/asound(/.*)?
+.br
+	/etc/alsa/pcm(/.*)?
+.br
+	/etc/asound\.state
+.br
+	/etc/alsa/asound\.state
+.br
+
+.br
+.B alsa_var_lib_t
+
+	/var/lib/alsa(/.*)?
+.br
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +161,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), alsa(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), alsa(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/amanda_recover_selinux.8 serefpolicy-3.7.19/man/man8/amanda_recover_selinux.8
--- nsaserefpolicy/man/man8/amanda_recover_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/amanda_recover_selinux.8	2013-03-15 11:40:05.811151994 +0100
@@ -0,0 +1,160 @@
+.TH  "amanda_recover_selinux"  "8"  "13-01-04" "amanda_recover" "SELinux Policy documentation for amanda_recover"
+.SH "NAME"
+amanda_recover_selinux \- Security Enhanced Linux Policy for the amanda_recover processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the amanda_recover processes via flexible mandatory access control.
+
+The amanda_recover processes execute with the amanda_recover_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep amanda_recover_t
+
+
+.SH "ENTRYPOINTS"
+
+The amanda_recover_t SELinux type can be entered via the "amanda_recover_exec_t" file type.  The default entrypoint paths for the amanda_recover_t domain are the following:"
+
+/usr/sbin/amrecover
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux amanda_recover policy is very flexible allowing users to setup their amanda_recover processes in as secure a method as possible.
+.PP
+The following process types are defined for amanda_recover:
+
+.EX
+.B amanda_recover_t
+.EE
+.PP
+Note:
+.B semanage permissive -a amanda_recover_t
+
+can be used to make the process type amanda_recover_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux amanda_recover policy is very flexible allowing users to setup their amanda_recover processes in as secure a method as possible.
+.PP
+The following file types are defined for amanda_recover:
+
+
+.EX
+.PP
+.B amanda_recover_dir_t
+.EE
+
+- Set files with the amanda_recover_dir_t type, if you want to treat the files as amanda recover dir data.
+
+
+.EX
+.PP
+.B amanda_recover_exec_t
+.EE
+
+- Set files with the amanda_recover_exec_t type, if you want to transition an executable to the amanda_recover_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type amanda_recover_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B amanda_log_t
+
+	/var/log/amanda(/.*)?
+.br
+	/var/lib/amanda/[^/]*/log(/.*)?
+.br
+
+.br
+.B amanda_recover_dir_t
+
+	/root/restore
+.br
+
+.br
+.B amanda_tmp_t
+
+	/tmp/amanda(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), amanda_recover(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, amanda_selinux(8), amanda_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/amanda_selinux.8 serefpolicy-3.7.19/man/man8/amanda_selinux.8
--- nsaserefpolicy/man/man8/amanda_selinux.8	2013-03-15 11:41:12.059153506 +0100
+++ serefpolicy-3.7.19/man/man8/amanda_selinux.8	2013-03-15 11:40:01.885151905 +0100
@@ -1,31 +1,55 @@
-.TH  "amanda_selinux"  "8"  "amanda" "dwalsh@redhat.com" "amanda SELinux Policy documentation"
+.TH  "amanda_selinux"  "8"  "13-01-04" "amanda" "SELinux Policy documentation for amanda"
 .SH "NAME"
 amanda_selinux \- Security Enhanced Linux Policy for the amanda processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the amanda processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B amanda
-(Automated backup program)
-processes via flexible mandatory access
-control.  
+The amanda processes execute with the amanda_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep amanda_t
+
+
+.SH "ENTRYPOINTS"
+
+The amanda_t SELinux type can be entered via the "amanda_exec_t,amanda_inetd_exec_t" file types.  The default entrypoint paths for the amanda_t domain are the following:"
+
+/usr/lib(64)?/amanda/.+, /usr/lib(64)?/amanda/amandad, /usr/lib(64)?/amanda/amindexd, /usr/lib(64)?/amanda/amidxtaped
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
+.PP
+The following process types are defined for amanda:
+
+.EX
+.B amanda_t, amanda_recover_t
+.EE
+.PP
+Note:
+.B semanage permissive -a amanda_t
+
+can be used to make the process type amanda_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for amanda:
 
 
 .EX
 .PP
-.B amanda_amandates_t 
+.B amanda_amandates_t
 .EE
 
 - Set files with the amanda_amandates_t type, if you want to treat the files as amanda amandates data.
@@ -33,31 +57,23 @@
 
 .EX
 .PP
-.B amanda_config_t 
+.B amanda_config_t
 .EE
 
 - Set files with the amanda_config_t type, if you want to treat the files as amanda configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/etc/amanda(/.*)?, /var/lib/amanda/\.amandahosts
 
 .EX
 .PP
-.B amanda_data_t 
+.B amanda_data_t
 .EE
 
 - Set files with the amanda_data_t type, if you want to treat the files as amanda content.
 
-.br
-.TP 5
-Paths: 
-/var/lib/amanda/[^/]+(/.*)?, /etc/amanda/.*/tapelist(/.*)?, /etc/amanda/.*/index(/.*)?
 
 .EX
 .PP
-.B amanda_dumpdates_t 
+.B amanda_dumpdates_t
 .EE
 
 - Set files with the amanda_dumpdates_t type, if you want to treat the files as amanda dumpdates data.
@@ -65,7 +81,7 @@
 
 .EX
 .PP
-.B amanda_exec_t 
+.B amanda_exec_t
 .EE
 
 - Set files with the amanda_exec_t type, if you want to transition an executable to the amanda_t domain.
@@ -73,7 +89,7 @@
 
 .EX
 .PP
-.B amanda_gnutarlists_t 
+.B amanda_gnutarlists_t
 .EE
 
 - Set files with the amanda_gnutarlists_t type, if you want to treat the files as amanda gnutarlists data.
@@ -81,31 +97,23 @@
 
 .EX
 .PP
-.B amanda_inetd_exec_t 
+.B amanda_inetd_exec_t
 .EE
 
 - Set files with the amanda_inetd_exec_t type, if you want to transition an executable to the amanda_inetd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/amanda/amidxtaped, /usr/lib(64)?/amanda/amandad, /usr/lib(64)?/amanda/amindexd
 
 .EX
 .PP
-.B amanda_log_t 
+.B amanda_log_t
 .EE
 
 - Set files with the amanda_log_t type, if you want to treat the data as amanda log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/amanda(/.*)?, /var/lib/amanda/[^/]*/log(/.*)?
 
 .EX
 .PP
-.B amanda_recover_dir_t 
+.B amanda_recover_dir_t
 .EE
 
 - Set files with the amanda_recover_dir_t type, if you want to treat the files as amanda recover dir data.
@@ -113,7 +121,7 @@
 
 .EX
 .PP
-.B amanda_recover_exec_t 
+.B amanda_recover_exec_t
 .EE
 
 - Set files with the amanda_recover_exec_t type, if you want to transition an executable to the amanda_recover_t domain.
@@ -121,7 +129,7 @@
 
 .EX
 .PP
-.B amanda_tmp_t 
+.B amanda_tmp_t
 .EE
 
 - Set files with the amanda_tmp_t type, if you want to store amanda temporary files in the /tmp directories.
@@ -129,7 +137,7 @@
 
 .EX
 .PP
-.B amanda_usr_lib_t 
+.B amanda_usr_lib_t
 .EE
 
 - Set files with the amanda_usr_lib_t type, if you want to treat the files as amanda usr lib data.
@@ -137,63 +145,139 @@
 
 .EX
 .PP
-.B amanda_var_lib_t 
+.B amanda_var_lib_t
 .EE
 
 - Set files with the amanda_var_lib_t type, if you want to store the amanda files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/amanda, /var/lib/amanda/[^/]+/index(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for amanda:
 
 .EX
 .TP 5
-.B amanda_port_t 
+.B amanda_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 10080-10083
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
-.PP 
-The following process types are defined for amanda:
-
-.EX
-.B amanda_t, amanda_recover_t 
+udp 10080-10082
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type amanda_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B amanda_amandates_t
+
+	/etc/amandates
+.br
+
+.br
+.B amanda_data_t
+
+	/etc/amanda/.*/index(/.*)?
+.br
+	/etc/amanda/.*/tapelist(/.*)?
+.br
+	/var/lib/amanda/[^/]+(/.*)?
+.br
+
+.br
+.B amanda_dumpdates_t
+
+	/etc/dumpdates
+.br
+
+.br
+.B amanda_gnutarlists_t
+
+	/var/lib/amanda/gnutar-lists(/.*)?
+.br
+
+.br
+.B amanda_log_t
+
+	/var/log/amanda(/.*)?
+.br
+	/var/lib/amanda/[^/]*/log(/.*)?
+.br
+
+.br
+.B amanda_tmp_t
+
+	/tmp/amanda(/.*)?
+.br
+
+.br
+.B amanda_var_lib_t
+
+	/var/lib/amanda/[^/]+/index(/.*)?
+.br
+	/var/lib/amanda
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -209,11 +293,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), amanda(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), amanda(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, amanda_recover_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/amavis_selinux.8 serefpolicy-3.7.19/man/man8/amavis_selinux.8
--- nsaserefpolicy/man/man8/amavis_selinux.8	2013-03-15 11:41:12.179153508 +0100
+++ serefpolicy-3.7.19/man/man8/amavis_selinux.8	2013-03-15 11:40:05.651151990 +0100
@@ -1,58 +1,89 @@
-.TH  "amavis_selinux"  "8"  "amavis" "dwalsh@redhat.com" "amavis SELinux Policy documentation"
+.TH  "amavis_selinux"  "8"  "13-01-04" "amavis" "SELinux Policy documentation for amavis"
 .SH "NAME"
 amavis_selinux \- Security Enhanced Linux Policy for the amavis processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the amavis processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B amavis
-(
-Daemon that interfaces mail transfer agents and content
-checkers, such as virus scanners.
-)
-processes via flexible mandatory access
-control.  
+The amavis processes execute with the amavis_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep amavis_t
+
+
+.SH "ENTRYPOINTS"
+
+The amavis_t SELinux type can be entered via the "amavis_exec_t" file type.  The default entrypoint paths for the amavis_t domain are the following:"
+
+/usr/lib(64)?/AntiVir/antivir, /usr/sbin/amavisd.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
+.PP
+The following process types are defined for amavis:
+
+.EX
+.B amavis_t
+.EE
+.PP
+Note:
+.B semanage permissive -a amavis_t
+
+can be used to make the process type amavis_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  amavis policy is extremely flexible and has several booleans that allow you to manipulate the policy and run amavis with the tightest access possible.
+
+
+.PP
+If you want to allow amavis to use JIT compiler, you must turn on the amavis_use_jit boolean.
+
+.EX
+.B setsebool -P amavis_use_jit 1
+.EE
+
+.PP
+If you want to allow amavis to use JIT compiler, you must turn on the amavis_use_jit boolean.
+
+.EX
+.B setsebool -P amavis_use_jit 1
+.EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for amavis:
 
 
 .EX
 .PP
-.B amavis_etc_t 
+.B amavis_etc_t
 .EE
 
 - Set files with the amavis_etc_t type, if you want to store amavis files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/etc/amavis\.conf, /etc/amavisd(/.*)?
 
 .EX
 .PP
-.B amavis_exec_t 
+.B amavis_exec_t
 .EE
 
 - Set files with the amavis_exec_t type, if you want to transition an executable to the amavis_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/AntiVir/antivir, /usr/sbin/amavisd.*
 
 .EX
 .PP
-.B amavis_initrc_exec_t 
+.B amavis_initrc_exec_t
 .EE
 
 - Set files with the amavis_initrc_exec_t type, if you want to transition an executable to the amavis_initrc_t domain.
@@ -60,7 +91,7 @@
 
 .EX
 .PP
-.B amavis_quarantine_t 
+.B amavis_quarantine_t
 .EE
 
 - Set files with the amavis_quarantine_t type, if you want to treat the files as amavis quarantine data.
@@ -68,7 +99,7 @@
 
 .EX
 .PP
-.B amavis_spool_t 
+.B amavis_spool_t
 .EE
 
 - Set files with the amavis_spool_t type, if you want to store the amavis files under the /var/spool directory.
@@ -76,7 +107,7 @@
 
 .EX
 .PP
-.B amavis_tmp_t 
+.B amavis_tmp_t
 .EE
 
 - Set files with the amavis_tmp_t type, if you want to store amavis temporary files in the /tmp directories.
@@ -84,19 +115,15 @@
 
 .EX
 .PP
-.B amavis_var_lib_t 
+.B amavis_var_lib_t
 .EE
 
 - Set files with the amavis_var_lib_t type, if you want to store the amavis files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/amavis(/.*)?, /var/amavis(/.*)?
 
 .EX
 .PP
-.B amavis_var_log_t 
+.B amavis_var_log_t
 .EE
 
 - Set files with the amavis_var_log_t type, if you want to treat the data as amavis var log data, usually stored under the /var/log directory.
@@ -104,7 +131,7 @@
 
 .EX
 .PP
-.B amavis_var_run_t 
+.B amavis_var_run_t
 .EE
 
 - Set files with the amavis_var_run_t type, if you want to store the amavis files under the /run directory.
@@ -112,62 +139,154 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for amavis:
 
 .EX
 .TP 5
-.B amavisd_recv_port_t 
+.B amavisd_recv_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 10024
 .EE
 
 .EX
 .TP 5
-.B amavisd_send_port_t 
+.B amavisd_send_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 10025
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
-.PP 
-The following process types are defined for amavis:
+.SH "MANAGED FILES"
 
-.EX
-.B amavis_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type amavis_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B amavis_quarantine_t
+
+	/var/virusmails(/.*)?
+.br
+
+.br
+.B amavis_spool_t
+
+	/var/spool/amavisd(/.*)?
+.br
+
+.br
+.B amavis_tmp_t
+
+
+.br
+.B amavis_var_lib_t
+
+	/var/amavis(/.*)?
+.br
+	/var/lib/amavis(/.*)?
+.br
+
+.br
+.B amavis_var_log_t
+
+	/var/log/amavisd\.log.*
+.br
+
+.br
+.B amavis_var_run_t
+
+	/var/run/amavis(d)?(/.*)?
+.br
+
+.br
+.B antivirus_db_t
+
+	/var/opt/f-secure(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B snmpd_var_lib_t
+
+	/var/agentx(/.*)?
+.br
+	/var/net-snmp(/.*)
+.br
+	/var/lib/snmp(/.*)?
+.br
+	/var/lib/net-snmp(/.*)?
+.br
+	/usr/share/snmp/mibs/\.index
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -182,12 +301,18 @@
 .B semanage port
 can also be used to manipulate the port definitions
 
+.B semanage boolean
+can also be used to manipulate the booleans
+
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), amavis(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), amavis(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/amtu_selinux.8 serefpolicy-3.7.19/man/man8/amtu_selinux.8
--- nsaserefpolicy/man/man8/amtu_selinux.8	2013-03-15 11:41:11.809153500 +0100
+++ serefpolicy-3.7.19/man/man8/amtu_selinux.8	2013-03-15 11:39:57.410151802 +0100
@@ -1,31 +1,55 @@
-.TH  "amtu_selinux"  "8"  "amtu" "dwalsh@redhat.com" "amtu SELinux Policy documentation"
+.TH  "amtu_selinux"  "8"  "13-01-04" "amtu" "SELinux Policy documentation for amtu"
 .SH "NAME"
 amtu_selinux \- Security Enhanced Linux Policy for the amtu processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the amtu processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B amtu
-(Abstract Machine Test Utility)
-processes via flexible mandatory access
-control.  
+The amtu processes execute with the amtu_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep amtu_t
+
+
+.SH "ENTRYPOINTS"
+
+The amtu_t SELinux type can be entered via the "amtu_exec_t" file type.  The default entrypoint paths for the amtu_t domain are the following:"
+
+/usr/bin/amtu
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux amtu policy is very flexible allowing users to setup their amtu processes in as secure a method as possible.
+.PP
+The following process types are defined for amtu:
+
+.EX
+.B amtu_t
+.EE
+.PP
+Note:
+.B semanage permissive -a amtu_t
+
+can be used to make the process type amtu_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux amtu policy is very flexible allowing users to setup their amtu processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for amtu:
 
 
 .EX
 .PP
-.B amtu_exec_t 
+.B amtu_exec_t
 .EE
 
 - Set files with the amtu_exec_t type, if you want to transition an executable to the amtu_t domain.
@@ -33,28 +57,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux amtu policy is very flexible allowing users to setup their amtu processes in as secure a method as possible.
-.PP 
-The following process types are defined for amtu:
+.SH "MANAGED FILES"
 
-.EX
-.B amtu_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type amtu_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B boot_t
+
+	/boot/.*
+.br
+	/vmlinuz.*
+.br
+	/initrd\.img.*
+.br
+	/boot
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +131,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), amtu(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), amtu(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/apache_selinux.8 serefpolicy-3.7.19/man/man8/apache_selinux.8
--- nsaserefpolicy/man/man8/apache_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/apache_selinux.8	2013-03-15 11:39:58.586151829 +0100
@@ -0,0 +1 @@
+.so man8/httpd_selinux.8
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/apcupsd_selinux.8 serefpolicy-3.7.19/man/man8/apcupsd_selinux.8
--- nsaserefpolicy/man/man8/apcupsd_selinux.8	2013-03-15 11:41:12.228153510 +0100
+++ serefpolicy-3.7.19/man/man8/apcupsd_selinux.8	2013-03-15 11:40:07.041152022 +0100
@@ -1,43 +1,63 @@
-.TH  "apcupsd_selinux"  "8"  "apcupsd" "dwalsh@redhat.com" "apcupsd SELinux Policy documentation"
+.TH  "apcupsd_selinux"  "8"  "13-01-04" "apcupsd" "SELinux Policy documentation for apcupsd"
 .SH "NAME"
 apcupsd_selinux \- Security Enhanced Linux Policy for the apcupsd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the apcupsd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B apcupsd
-(APC UPS monitoring daemon)
-processes via flexible mandatory access
-control.  
+The apcupsd processes execute with the apcupsd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep apcupsd_t
+
+
+.SH "ENTRYPOINTS"
+
+The apcupsd_t SELinux type can be entered via the "apcupsd_exec_t" file type.  The default entrypoint paths for the apcupsd_t domain are the following:"
+
+/sbin/apcupsd, /usr/sbin/apcupsd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
+.PP
+The following process types are defined for apcupsd:
+
+.EX
+.B apcupsd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a apcupsd_t
+
+can be used to make the process type apcupsd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for apcupsd:
 
 
 .EX
 .PP
-.B apcupsd_exec_t 
+.B apcupsd_exec_t
 .EE
 
 - Set files with the apcupsd_exec_t type, if you want to transition an executable to the apcupsd_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/apcupsd, /usr/sbin/apcupsd
 
 .EX
 .PP
-.B apcupsd_initrc_exec_t 
+.B apcupsd_initrc_exec_t
 .EE
 
 - Set files with the apcupsd_initrc_exec_t type, if you want to transition an executable to the apcupsd_initrc_t domain.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B apcupsd_lock_t 
+.B apcupsd_lock_t
 .EE
 
 - Set files with the apcupsd_lock_t type, if you want to treat the files as apcupsd lock data, stored under the /var/lock directory
@@ -53,19 +73,15 @@
 
 .EX
 .PP
-.B apcupsd_log_t 
+.B apcupsd_log_t
 .EE
 
 - Set files with the apcupsd_log_t type, if you want to treat the data as apcupsd log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/apcupsd\.status.*, /var/log/apcupsd\.events.*
 
 .EX
 .PP
-.B apcupsd_tmp_t 
+.B apcupsd_tmp_t
 .EE
 
 - Set files with the apcupsd_tmp_t type, if you want to store apcupsd temporary files in the /tmp directories.
@@ -73,7 +89,7 @@
 
 .EX
 .PP
-.B apcupsd_var_run_t 
+.B apcupsd_var_run_t
 .EE
 
 - Set files with the apcupsd_var_run_t type, if you want to store the apcupsd files under the /run directory.
@@ -81,51 +97,189 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for apcupsd:
 
 .EX
 .TP 5
-.B apcupsd_port_t 
+.B apcupsd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 3551
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
-.PP 
-The following process types are defined for apcupsd:
-
-.EX
-.B apcupsd_t 
+udp 3551
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type apcupsd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B apcupsd_lock_t
+
+
+.br
+.B apcupsd_log_t
+
+	/var/log/apcupsd\.events.*
+.br
+	/var/log/apcupsd\.status.*
+.br
+
+.br
+.B apcupsd_tmp_t
+
+
+.br
+.B apcupsd_var_run_t
+
+	/var/run/apcupsd\.pid
+.br
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -141,11 +295,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), apcupsd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), apcupsd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/apmd_selinux.8 serefpolicy-3.7.19/man/man8/apmd_selinux.8
--- nsaserefpolicy/man/man8/apmd_selinux.8	2013-03-15 11:41:12.140153508 +0100
+++ serefpolicy-3.7.19/man/man8/apmd_selinux.8	2013-03-15 11:40:04.093151955 +0100
@@ -1,45 +1,63 @@
-.TH  "apmd_selinux"  "8"  "apmd" "dwalsh@redhat.com" "apmd SELinux Policy documentation"
+.TH  "apmd_selinux"  "8"  "13-01-04" "apmd" "SELinux Policy documentation for apmd"
 .SH "NAME"
 apmd_selinux \- Security Enhanced Linux Policy for the apmd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the apmd processes via flexible mandatory access control.
 
+The apmd processes execute with the apmd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+.B ps -eZ | grep apmd_t
+
+
+.SH "ENTRYPOINTS"
+
+The apmd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,apmd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the apmd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/apmd, /usr/sbin/acpid, /usr/sbin/powersaved, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to files.
 SELinux apmd policy is very flexible allowing users to setup their apmd processes in as secure a method as possible.
-.PP 
-The following file types are defined for apmd:
-
+.PP
+The following process types are defined for apmd:
 
 .EX
-.PP
-.B apm_exec_t 
+.B apm_t, apmd_t
 .EE
+.PP
+Note:
+.B semanage permissive -a apmd_t
 
-- Set files with the apm_exec_t type, if you want to transition an executable to the apm_t domain.
+can be used to make the process type apmd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux apmd policy is very flexible allowing users to setup their apmd processes in as secure a method as possible.
+.PP
+The following file types are defined for apmd:
 
 
 .EX
 .PP
-.B apmd_exec_t 
+.B apmd_exec_t
 .EE
 
 - Set files with the apmd_exec_t type, if you want to transition an executable to the apmd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/powersaved, /usr/sbin/acpid, /usr/sbin/apmd
 
 .EX
 .PP
-.B apmd_lock_t 
+.B apmd_lock_t
 .EE
 
 - Set files with the apmd_lock_t type, if you want to treat the files as apmd lock data, stored under the /var/lock directory
@@ -47,7 +65,7 @@
 
 .EX
 .PP
-.B apmd_log_t 
+.B apmd_log_t
 .EE
 
 - Set files with the apmd_log_t type, if you want to treat the data as apmd log data, usually stored under the /var/log directory.
@@ -55,7 +73,7 @@
 
 .EX
 .PP
-.B apmd_tmp_t 
+.B apmd_tmp_t
 .EE
 
 - Set files with the apmd_tmp_t type, if you want to store apmd temporary files in the /tmp directories.
@@ -63,40 +81,28 @@
 
 .EX
 .PP
-.B apmd_var_run_t 
+.B apmd_var_run_t
 .EE
 
 - Set files with the apmd_var_run_t type, if you want to store the apmd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/\.?acpid\.socket, /var/run/apmd\.pid, /var/run/powersaved\.pid, /var/run/powersave_socket
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux apmd policy is very flexible allowing users to setup their apmd processes in as secure a method as possible.
-.PP 
-The following process types are defined for apmd:
+.SH "MANAGED FILES"
 
-.EX
-.B apm_t, apmd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type apmd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -109,11 +115,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), apmd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), apmd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, apm_selinux(8), apm_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/apm_selinux.8 serefpolicy-3.7.19/man/man8/apm_selinux.8
--- nsaserefpolicy/man/man8/apm_selinux.8	2013-03-15 11:41:11.945153503 +0100
+++ serefpolicy-3.7.19/man/man8/apm_selinux.8	2013-03-15 11:40:00.477151872 +0100
@@ -1,31 +1,55 @@
-.TH  "apm_selinux"  "8"  "apm" "dwalsh@redhat.com" "apm SELinux Policy documentation"
+.TH  "apm_selinux"  "8"  "13-01-04" "apm" "SELinux Policy documentation for apm"
 .SH "NAME"
 apm_selinux \- Security Enhanced Linux Policy for the apm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the apm processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B apm
-(Advanced power management daemon)
-processes via flexible mandatory access
-control.  
+The apm processes execute with the apm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep apm_t
+
+
+.SH "ENTRYPOINTS"
+
+The apm_t SELinux type can be entered via the "apm_exec_t" file type.  The default entrypoint paths for the apm_t domain are the following:"
+
+/usr/bin/apm
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux apm policy is very flexible allowing users to setup their apm processes in as secure a method as possible.
+.PP
+The following process types are defined for apm:
+
+.EX
+.B apm_t, apmd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a apm_t
+
+can be used to make the process type apm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux apm policy is very flexible allowing users to setup their apm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for apm:
 
 
 .EX
 .PP
-.B apm_exec_t 
+.B apm_exec_t
 .EE
 
 - Set files with the apm_exec_t type, if you want to transition an executable to the apm_t domain.
@@ -33,19 +57,15 @@
 
 .EX
 .PP
-.B apmd_exec_t 
+.B apmd_exec_t
 .EE
 
 - Set files with the apmd_exec_t type, if you want to transition an executable to the apmd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/powersaved, /usr/sbin/acpid, /usr/sbin/apmd
 
 .EX
 .PP
-.B apmd_lock_t 
+.B apmd_lock_t
 .EE
 
 - Set files with the apmd_lock_t type, if you want to treat the files as apmd lock data, stored under the /var/lock directory
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B apmd_log_t 
+.B apmd_log_t
 .EE
 
 - Set files with the apmd_log_t type, if you want to treat the data as apmd log data, usually stored under the /var/log directory.
@@ -61,7 +81,7 @@
 
 .EX
 .PP
-.B apmd_tmp_t 
+.B apmd_tmp_t
 .EE
 
 - Set files with the apmd_tmp_t type, if you want to store apmd temporary files in the /tmp directories.
@@ -69,40 +89,64 @@
 
 .EX
 .PP
-.B apmd_var_run_t 
+.B apmd_var_run_t
 .EE
 
 - Set files with the apmd_var_run_t type, if you want to store the apmd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/\.?acpid\.socket, /var/run/apmd\.pid, /var/run/powersaved\.pid, /var/run/powersave_socket
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux apm policy is very flexible allowing users to setup their apm processes in as secure a method as possible.
-.PP 
-The following process types are defined for apm:
+.SH "MANAGED FILES"
 
-.EX
-.B apm_t, apmd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type apm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +159,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), apm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), apm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, apmd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/arpwatch_selinux.8 serefpolicy-3.7.19/man/man8/arpwatch_selinux.8
--- nsaserefpolicy/man/man8/arpwatch_selinux.8	2013-03-15 11:41:12.098153507 +0100
+++ serefpolicy-3.7.19/man/man8/arpwatch_selinux.8	2013-03-15 11:40:02.669151922 +0100
@@ -1,43 +1,63 @@
-.TH  "arpwatch_selinux"  "8"  "arpwatch" "dwalsh@redhat.com" "arpwatch SELinux Policy documentation"
+.TH  "arpwatch_selinux"  "8"  "13-01-04" "arpwatch" "SELinux Policy documentation for arpwatch"
 .SH "NAME"
 arpwatch_selinux \- Security Enhanced Linux Policy for the arpwatch processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the arpwatch processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B arpwatch
-(Ethernet activity monitor)
-processes via flexible mandatory access
-control.  
+The arpwatch processes execute with the arpwatch_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep arpwatch_t
+
+
+.SH "ENTRYPOINTS"
+
+The arpwatch_t SELinux type can be entered via the "arpwatch_exec_t" file type.  The default entrypoint paths for the arpwatch_t domain are the following:"
+
+/usr/sbin/arpwatch
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux arpwatch policy is very flexible allowing users to setup their arpwatch processes in as secure a method as possible.
+.PP
+The following process types are defined for arpwatch:
+
+.EX
+.B arpwatch_t
+.EE
+.PP
+Note:
+.B semanage permissive -a arpwatch_t
+
+can be used to make the process type arpwatch_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux arpwatch policy is very flexible allowing users to setup their arpwatch processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for arpwatch:
 
 
 .EX
 .PP
-.B arpwatch_data_t 
+.B arpwatch_data_t
 .EE
 
 - Set files with the arpwatch_data_t type, if you want to treat the files as arpwatch content.
 
-.br
-.TP 5
-Paths: 
-/var/arpwatch(/.*)?, /var/lib/arpwatch(/.*)?
 
 .EX
 .PP
-.B arpwatch_exec_t 
+.B arpwatch_exec_t
 .EE
 
 - Set files with the arpwatch_exec_t type, if you want to transition an executable to the arpwatch_t domain.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B arpwatch_initrc_exec_t 
+.B arpwatch_initrc_exec_t
 .EE
 
 - Set files with the arpwatch_initrc_exec_t type, if you want to transition an executable to the arpwatch_initrc_t domain.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B arpwatch_tmp_t 
+.B arpwatch_tmp_t
 .EE
 
 - Set files with the arpwatch_tmp_t type, if you want to store arpwatch temporary files in the /tmp directories.
@@ -61,7 +81,7 @@
 
 .EX
 .PP
-.B arpwatch_var_run_t 
+.B arpwatch_var_run_t
 .EE
 
 - Set files with the arpwatch_var_run_t type, if you want to store the arpwatch files under the /run directory.
@@ -69,28 +89,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux arpwatch policy is very flexible allowing users to setup their arpwatch processes in as secure a method as possible.
-.PP 
-The following process types are defined for arpwatch:
+.SH "MANAGED FILES"
 
-.EX
-.B arpwatch_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type arpwatch_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B arpwatch_data_t
+
+	/var/arpwatch(/.*)?
+.br
+	/var/lib/arpwatch(/.*)?
+.br
+
+.br
+.B arpwatch_tmp_t
+
+
+.br
+.B arpwatch_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,11 +175,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), arpwatch(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), arpwatch(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/asterisk_selinux.8 serefpolicy-3.7.19/man/man8/asterisk_selinux.8
--- nsaserefpolicy/man/man8/asterisk_selinux.8	2013-03-15 11:41:12.086153506 +0100
+++ serefpolicy-3.7.19/man/man8/asterisk_selinux.8	2013-03-15 11:40:02.621151921 +0100
@@ -1,31 +1,55 @@
-.TH  "asterisk_selinux"  "8"  "asterisk" "dwalsh@redhat.com" "asterisk SELinux Policy documentation"
+.TH  "asterisk_selinux"  "8"  "13-01-04" "asterisk" "SELinux Policy documentation for asterisk"
 .SH "NAME"
 asterisk_selinux \- Security Enhanced Linux Policy for the asterisk processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the asterisk processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B asterisk
-(Asterisk IP telephony server)
-processes via flexible mandatory access
-control.  
+The asterisk processes execute with the asterisk_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep asterisk_t
+
+
+.SH "ENTRYPOINTS"
+
+The asterisk_t SELinux type can be entered via the "asterisk_exec_t" file type.  The default entrypoint paths for the asterisk_t domain are the following:"
+
+/usr/sbin/asterisk
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
+.PP
+The following process types are defined for asterisk:
+
+.EX
+.B asterisk_t
+.EE
+.PP
+Note:
+.B semanage permissive -a asterisk_t
+
+can be used to make the process type asterisk_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for asterisk:
 
 
 .EX
 .PP
-.B asterisk_etc_t 
+.B asterisk_etc_t
 .EE
 
 - Set files with the asterisk_etc_t type, if you want to store asterisk files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B asterisk_exec_t 
+.B asterisk_exec_t
 .EE
 
 - Set files with the asterisk_exec_t type, if you want to transition an executable to the asterisk_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B asterisk_initrc_exec_t 
+.B asterisk_initrc_exec_t
 .EE
 
 - Set files with the asterisk_initrc_exec_t type, if you want to transition an executable to the asterisk_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B asterisk_log_t 
+.B asterisk_log_t
 .EE
 
 - Set files with the asterisk_log_t type, if you want to treat the data as asterisk log data, usually stored under the /var/log directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B asterisk_spool_t 
+.B asterisk_spool_t
 .EE
 
 - Set files with the asterisk_spool_t type, if you want to store the asterisk files under the /var/spool directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B asterisk_tmp_t 
+.B asterisk_tmp_t
 .EE
 
 - Set files with the asterisk_tmp_t type, if you want to store asterisk temporary files in the /tmp directories.
@@ -73,7 +97,7 @@
 
 .EX
 .PP
-.B asterisk_tmpfs_t 
+.B asterisk_tmpfs_t
 .EE
 
 - Set files with the asterisk_tmpfs_t type, if you want to store asterisk files on a tmpfs file system.
@@ -81,7 +105,7 @@
 
 .EX
 .PP
-.B asterisk_var_lib_t 
+.B asterisk_var_lib_t
 .EE
 
 - Set files with the asterisk_var_lib_t type, if you want to store the asterisk files under the /var/lib directory.
@@ -89,7 +113,7 @@
 
 .EX
 .PP
-.B asterisk_var_run_t 
+.B asterisk_var_run_t
 .EE
 
 - Set files with the asterisk_var_run_t type, if you want to store the asterisk files under the /run directory.
@@ -97,51 +121,121 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for asterisk:
 
 .EX
 .TP 5
-.B asterisk_port_t 
+.B asterisk_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 1720
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
-.PP 
-The following process types are defined for asterisk:
-
-.EX
-.B asterisk_t 
+udp 2427,2727,4569
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type asterisk_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B asterisk_log_t
+
+	/var/log/asterisk(/.*)?
+.br
+
+.br
+.B asterisk_spool_t
+
+	/var/spool/asterisk(/.*)?
+.br
+
+.br
+.B asterisk_tmp_t
+
+
+.br
+.B asterisk_tmpfs_t
+
+
+.br
+.B asterisk_var_lib_t
+
+	/var/lib/asterisk(/.*)?
+.br
+
+.br
+.B asterisk_var_run_t
+
+	/var/run/asterisk(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -157,11 +251,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), asterisk(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), asterisk(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/audisp_remote_selinux.8 serefpolicy-3.7.19/man/man8/audisp_remote_selinux.8
--- nsaserefpolicy/man/man8/audisp_remote_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/audisp_remote_selinux.8	2013-03-15 11:39:55.615151761 +0100
@@ -0,0 +1,138 @@
+.TH  "audisp_remote_selinux"  "8"  "13-01-04" "audisp_remote" "SELinux Policy documentation for audisp_remote"
+.SH "NAME"
+audisp_remote_selinux \- Security Enhanced Linux Policy for the audisp_remote processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the audisp_remote processes via flexible mandatory access control.
+
+The audisp_remote processes execute with the audisp_remote_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep audisp_remote_t
+
+
+.SH "ENTRYPOINTS"
+
+The audisp_remote_t SELinux type can be entered via the "audisp_remote_exec_t" file type.  The default entrypoint paths for the audisp_remote_t domain are the following:"
+
+/sbin/audisp-remote
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux audisp_remote policy is very flexible allowing users to setup their audisp_remote processes in as secure a method as possible.
+.PP
+The following process types are defined for audisp_remote:
+
+.EX
+.B audisp_remote_t
+.EE
+.PP
+Note:
+.B semanage permissive -a audisp_remote_t
+
+can be used to make the process type audisp_remote_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux audisp_remote policy is very flexible allowing users to setup their audisp_remote processes in as secure a method as possible.
+.PP
+The following file types are defined for audisp_remote:
+
+
+.EX
+.PP
+.B audisp_remote_exec_t
+.EE
+
+- Set files with the audisp_remote_exec_t type, if you want to transition an executable to the audisp_remote_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type audisp_remote_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B audit_spool_t
+
+	/var/spool/audit(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), audisp_remote(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, audisp_selinux(8), audisp_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/audisp_selinux.8 serefpolicy-3.7.19/man/man8/audisp_selinux.8
--- nsaserefpolicy/man/man8/audisp_selinux.8	2013-03-15 11:41:11.991153504 +0100
+++ serefpolicy-3.7.19/man/man8/audisp_selinux.8	2013-03-15 11:40:00.940151883 +0100
@@ -1,25 +1,55 @@
-.TH  "audisp_selinux"  "8"  "audisp" "dwalsh@redhat.com" "audisp SELinux Policy documentation"
+.TH  "audisp_selinux"  "8"  "13-01-04" "audisp" "SELinux Policy documentation for audisp"
 .SH "NAME"
 audisp_selinux \- Security Enhanced Linux Policy for the audisp processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the audisp processes via flexible mandatory access control.
 
+The audisp processes execute with the audisp_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep audisp_t
+
+
+.SH "ENTRYPOINTS"
+
+The audisp_t SELinux type can be entered via the "audisp_exec_t" file type.  The default entrypoint paths for the audisp_t domain are the following:"
+
+/sbin/audispd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux audisp policy is very flexible allowing users to setup their audisp processes in as secure a method as possible.
+.PP
+The following process types are defined for audisp:
+
+.EX
+.B audisp_remote_t, audisp_t
+.EE
+.PP
+Note:
+.B semanage permissive -a audisp_t
+
+can be used to make the process type audisp_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux audisp policy is very flexible allowing users to setup their audisp processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for audisp:
 
 
 .EX
 .PP
-.B audisp_exec_t 
+.B audisp_exec_t
 .EE
 
 - Set files with the audisp_exec_t type, if you want to transition an executable to the audisp_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B audisp_remote_exec_t 
+.B audisp_remote_exec_t
 .EE
 
 - Set files with the audisp_remote_exec_t type, if you want to transition an executable to the audisp_remote_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B audisp_var_run_t 
+.B audisp_var_run_t
 .EE
 
 - Set files with the audisp_var_run_t type, if you want to store the audisp files under the /run directory.
@@ -43,28 +73,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux audisp policy is very flexible allowing users to setup their audisp processes in as secure a method as possible.
-.PP 
-The following process types are defined for audisp:
+.SH "MANAGED FILES"
 
-.EX
-.B audisp_remote_t, audisp_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type audisp_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -77,11 +135,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), audisp(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), audisp(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, audisp_remote_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/auditctl_selinux.8 serefpolicy-3.7.19/man/man8/auditctl_selinux.8
--- nsaserefpolicy/man/man8/auditctl_selinux.8	2013-03-15 11:41:11.601153495 +0100
+++ serefpolicy-3.7.19/man/man8/auditctl_selinux.8	2013-03-15 11:39:56.269151776 +0100
@@ -1,25 +1,55 @@
-.TH  "auditctl_selinux"  "8"  "auditctl" "dwalsh@redhat.com" "auditctl SELinux Policy documentation"
+.TH  "auditctl_selinux"  "8"  "13-01-04" "auditctl" "SELinux Policy documentation for auditctl"
 .SH "NAME"
 auditctl_selinux \- Security Enhanced Linux Policy for the auditctl processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the auditctl processes via flexible mandatory access control.
 
+The auditctl processes execute with the auditctl_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep auditctl_t
+
+
+.SH "ENTRYPOINTS"
+
+The auditctl_t SELinux type can be entered via the "auditctl_exec_t" file type.  The default entrypoint paths for the auditctl_t domain are the following:"
+
+/sbin/auditctl
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux auditctl policy is very flexible allowing users to setup their auditctl processes in as secure a method as possible.
+.PP
+The following process types are defined for auditctl:
+
+.EX
+.B auditctl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a auditctl_t
+
+can be used to make the process type auditctl_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux auditctl policy is very flexible allowing users to setup their auditctl processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for auditctl:
 
 
 .EX
 .PP
-.B auditctl_exec_t 
+.B auditctl_exec_t
 .EE
 
 - Set files with the auditctl_exec_t type, if you want to transition an executable to the auditctl_t domain.
@@ -27,28 +57,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux auditctl policy is very flexible allowing users to setup their auditctl processes in as secure a method as possible.
-.PP 
-The following process types are defined for auditctl:
+.SH "MANAGED FILES"
 
-.EX
-.B auditctl_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type auditctl_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), auditctl(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), auditctl(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/auditd_selinux.8 serefpolicy-3.7.19/man/man8/auditd_selinux.8
--- nsaserefpolicy/man/man8/auditd_selinux.8	2013-03-15 11:41:12.107153507 +0100
+++ serefpolicy-3.7.19/man/man8/auditd_selinux.8	2013-03-15 11:40:03.489151941 +0100
@@ -1,33 +1,55 @@
-.TH  "auditd_selinux"  "8"  "auditd" "dwalsh@redhat.com" "auditd SELinux Policy documentation"
+.TH  "auditd_selinux"  "8"  "13-01-04" "auditd" "SELinux Policy documentation for auditd"
 .SH "NAME"
 auditd_selinux \- Security Enhanced Linux Policy for the auditd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the auditd processes via flexible mandatory access control.
 
+The auditd processes execute with the auditd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+.B ps -eZ | grep auditd_t
+
+
+.SH "ENTRYPOINTS"
+
+The auditd_t SELinux type can be entered via the "auditd_exec_t" file type.  The default entrypoint paths for the auditd_t domain are the following:"
+
+/sbin/auditd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to files.
 SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
-.PP 
-The following file types are defined for auditd:
-
+.PP
+The following process types are defined for auditd:
 
 .EX
-.PP
-.B audit_spool_t 
+.B auditd_t, auditctl_t
 .EE
+.PP
+Note:
+.B semanage permissive -a auditd_t
 
-- Set files with the audit_spool_t type, if you want to store the audit files under the /var/spool directory.
+can be used to make the process type auditd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
+.PP
+The following file types are defined for auditd:
 
 
 .EX
 .PP
-.B auditd_etc_t 
+.B auditd_etc_t
 .EE
 
 - Set files with the auditd_etc_t type, if you want to store auditd files in the /etc directories.
@@ -35,7 +57,7 @@
 
 .EX
 .PP
-.B auditd_exec_t 
+.B auditd_exec_t
 .EE
 
 - Set files with the auditd_exec_t type, if you want to transition an executable to the auditd_t domain.
@@ -43,7 +65,7 @@
 
 .EX
 .PP
-.B auditd_initrc_exec_t 
+.B auditd_initrc_exec_t
 .EE
 
 - Set files with the auditd_initrc_exec_t type, if you want to transition an executable to the auditd_initrc_t domain.
@@ -51,75 +73,125 @@
 
 .EX
 .PP
-.B auditd_log_t 
+.B auditd_log_t
 .EE
 
 - Set files with the auditd_log_t type, if you want to treat the data as auditd log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/audit(/.*)?, /var/log/audit\.log
 
 .EX
 .PP
-.B auditd_var_run_t 
+.B auditd_var_run_t
 .EE
 
 - Set files with the auditd_var_run_t type, if you want to store the auditd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/audit_events, /var/run/auditd_sock, /var/run/auditd\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for auditd:
 
 .EX
 .TP 5
-.B audit_port_t 
+.B audit_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 60
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
-.PP 
-The following process types are defined for auditd:
+.SH "MANAGED FILES"
 
-.EX
-.B auditd_t, auditctl_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type auditd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B auditd_log_t
+
+	/var/log/audit(/.*)?
+.br
+	/var/log/audit\.log.*
+.br
+
+.br
+.B auditd_var_run_t
+
+	/var/run/auditd\.pid
+.br
+	/var/run/auditd_sock
+.br
+	/var/run/audit_events
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -135,11 +207,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), auditd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), auditd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, auditctl_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/automount_selinux.8 serefpolicy-3.7.19/man/man8/automount_selinux.8
--- nsaserefpolicy/man/man8/automount_selinux.8	2013-03-15 11:41:12.106153507 +0100
+++ serefpolicy-3.7.19/man/man8/automount_selinux.8	2013-03-15 11:40:03.427151940 +0100
@@ -1,43 +1,63 @@
-.TH  "automount_selinux"  "8"  "automount" "dwalsh@redhat.com" "automount SELinux Policy documentation"
+.TH  "automount_selinux"  "8"  "13-01-04" "automount" "SELinux Policy documentation for automount"
 .SH "NAME"
 automount_selinux \- Security Enhanced Linux Policy for the automount processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the automount processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B automount
-(Filesystem automounter service)
-processes via flexible mandatory access
-control.  
+The automount processes execute with the automount_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep automount_t
+
+
+.SH "ENTRYPOINTS"
+
+The automount_t SELinux type can be entered via the "automount_exec_t" file type.  The default entrypoint paths for the automount_t domain are the following:"
+
+/usr/sbin/automount, /etc/apm/event\.d/autofs
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux automount policy is very flexible allowing users to setup their automount processes in as secure a method as possible.
+.PP
+The following process types are defined for automount:
+
+.EX
+.B automount_t
+.EE
+.PP
+Note:
+.B semanage permissive -a automount_t
+
+can be used to make the process type automount_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux automount policy is very flexible allowing users to setup their automount processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for automount:
 
 
 .EX
 .PP
-.B automount_exec_t 
+.B automount_exec_t
 .EE
 
 - Set files with the automount_exec_t type, if you want to transition an executable to the automount_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/automount, /etc/apm/event\.d/autofs
 
 .EX
 .PP
-.B automount_initrc_exec_t 
+.B automount_initrc_exec_t
 .EE
 
 - Set files with the automount_initrc_exec_t type, if you want to transition an executable to the automount_initrc_t domain.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B automount_keytab_t 
+.B automount_keytab_t
 .EE
 
 - Set files with the automount_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B automount_lock_t 
+.B automount_lock_t
 .EE
 
 - Set files with the automount_lock_t type, if you want to treat the files as automount lock data, stored under the /var/lock directory
@@ -61,7 +81,7 @@
 
 .EX
 .PP
-.B automount_tmp_t 
+.B automount_tmp_t
 .EE
 
 - Set files with the automount_tmp_t type, if you want to store automount temporary files in the /tmp directories.
@@ -69,7 +89,7 @@
 
 .EX
 .PP
-.B automount_var_run_t 
+.B automount_var_run_t
 .EE
 
 - Set files with the automount_var_run_t type, if you want to store the automount files under the /run directory.
@@ -77,28 +97,90 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux automount policy is very flexible allowing users to setup their automount processes in as secure a method as possible.
-.PP 
-The following process types are defined for automount:
+.SH "MANAGED FILES"
 
-.EX
-.B automount_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type automount_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B automount_lock_t
+
+
+.br
+.B automount_tmp_t
+
+
+.br
+.B automount_var_run_t
+
+	/var/run/autofs.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -111,11 +193,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), automount(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), automount(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/avahi_selinux.8 serefpolicy-3.7.19/man/man8/avahi_selinux.8
--- nsaserefpolicy/man/man8/avahi_selinux.8	2013-03-15 11:41:10.851153478 +0100
+++ serefpolicy-3.7.19/man/man8/avahi_selinux.8	2013-03-15 11:39:55.095151750 +0100
@@ -1,54 +1,81 @@
-.TH  "avahi_selinux"  "8"  "avahi" "dwalsh@redhat.com" "avahi SELinux Policy documentation"
+.TH  "avahi_selinux"  "8"  "13-01-04" "avahi" "SELinux Policy documentation for avahi"
 .SH "NAME"
 avahi_selinux \- Security Enhanced Linux Policy for the avahi processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the avahi processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B avahi
-(mDNS/DNS-SD daemon implementing Apple ZeroConf architecture)
-processes via flexible mandatory access
-control.  
+The avahi processes execute with the avahi_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep avahi_t
+
+
+.SH "ENTRYPOINTS"
+
+The avahi_t SELinux type can be entered via the "avahi_exec_t" file type.  The default entrypoint paths for the avahi_t domain are the following:"
+
+/usr/sbin/avahi-daemon, /usr/sbin/avahi-autoipd, /usr/sbin/avahi-dnsconfd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux avahi policy is very flexible allowing users to setup their avahi processes in as secure a method as possible.
+.PP
+The following process types are defined for avahi:
+
+.EX
+.B avahi_t
+.EE
+.PP
+Note:
+.B semanage permissive -a avahi_t
+
+can be used to make the process type avahi_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  avahi policy is extremely flexible and has several booleans that allow you to manipulate the policy and run avahi with the tightest access possible.
 
 
 .PP
-If you want to allow Apache to communicate with avahi service via dbu, you must turn on the httpd_dbus_avahi boolean.
+If you want to allow Apache to communicate with avahi service via dbus, you must turn on the httpd_dbus_avahi boolean.
+
+.EX
+.B setsebool -P httpd_dbus_avahi 1
+.EE
+
+.PP
+If you want to allow Apache to communicate with avahi service via dbus, you must turn on the httpd_dbus_avahi boolean.
 
 .EX
 .B setsebool -P httpd_dbus_avahi 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux avahi policy is very flexible allowing users to setup their avahi processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for avahi:
 
 
 .EX
 .PP
-.B avahi_exec_t 
+.B avahi_exec_t
 .EE
 
 - Set files with the avahi_exec_t type, if you want to transition an executable to the avahi_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/avahi-dnsconfd, /usr/sbin/avahi-autoipd, /usr/sbin/avahi-daemon
 
 .EX
 .PP
-.B avahi_initrc_exec_t 
+.B avahi_initrc_exec_t
 .EE
 
 - Set files with the avahi_initrc_exec_t type, if you want to transition an executable to the avahi_initrc_t domain.
@@ -56,7 +83,7 @@
 
 .EX
 .PP
-.B avahi_var_lib_t 
+.B avahi_var_lib_t
 .EE
 
 - Set files with the avahi_var_lib_t type, if you want to store the avahi files under the /var/lib directory.
@@ -64,7 +91,7 @@
 
 .EX
 .PP
-.B avahi_var_run_t 
+.B avahi_var_run_t
 .EE
 
 - Set files with the avahi_var_run_t type, if you want to store the avahi files under the /run directory.
@@ -72,28 +99,102 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux avahi policy is very flexible allowing users to setup their avahi processes in as secure a method as possible.
-.PP 
-The following process types are defined for avahi:
+.SH "MANAGED FILES"
 
-.EX
-.B avahi_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type avahi_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B avahi_var_lib_t
+
+	/var/lib/avahi-autoipd(/.*)?
+.br
+
+.br
+.B avahi_var_run_t
+
+	/var/run/avahi-daemon(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -109,12 +210,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), avahi(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), avahi(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/awstats_selinux.8 serefpolicy-3.7.19/man/man8/awstats_selinux.8
--- nsaserefpolicy/man/man8/awstats_selinux.8	2013-03-15 11:41:12.034153505 +0100
+++ serefpolicy-3.7.19/man/man8/awstats_selinux.8	2013-03-15 11:40:01.744151901 +0100
@@ -1,34 +1,55 @@
-.TH  "awstats_selinux"  "8"  "awstats" "dwalsh@redhat.com" "awstats SELinux Policy documentation"
+.TH  "awstats_selinux"  "8"  "13-01-04" "awstats" "SELinux Policy documentation for awstats"
 .SH "NAME"
 awstats_selinux \- Security Enhanced Linux Policy for the awstats processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the awstats processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B awstats
-(
-AWStats is a free powerful and featureful tool that generates advanced
-web, streaming, ftp or mail server statistics, graphically.
-)
-processes via flexible mandatory access
-control.  
+The awstats processes execute with the awstats_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep awstats_t
+
+
+.SH "ENTRYPOINTS"
+
+The awstats_t SELinux type can be entered via the "awstats_exec_t" file type.  The default entrypoint paths for the awstats_t domain are the following:"
+
+/usr/share/awstats/tools/.+\.pl
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux awstats policy is very flexible allowing users to setup their awstats processes in as secure a method as possible.
+.PP
+The following process types are defined for awstats:
+
+.EX
+.B awstats_t
+.EE
+.PP
+Note:
+.B semanage permissive -a awstats_t
+
+can be used to make the process type awstats_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux awstats policy is very flexible allowing users to setup their awstats processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for awstats:
 
 
 .EX
 .PP
-.B awstats_exec_t 
+.B awstats_exec_t
 .EE
 
 - Set files with the awstats_exec_t type, if you want to transition an executable to the awstats_t domain.
@@ -36,7 +57,7 @@
 
 .EX
 .PP
-.B awstats_tmp_t 
+.B awstats_tmp_t
 .EE
 
 - Set files with the awstats_tmp_t type, if you want to store awstats temporary files in the /tmp directories.
@@ -44,7 +65,7 @@
 
 .EX
 .PP
-.B awstats_var_lib_t 
+.B awstats_var_lib_t
 .EE
 
 - Set files with the awstats_var_lib_t type, if you want to store the awstats files under the /var/lib directory.
@@ -52,28 +73,66 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux awstats policy is very flexible allowing users to setup their awstats processes in as secure a method as possible.
-.PP 
-The following process types are defined for awstats:
+.SH "MANAGED FILES"
 
-.EX
-.B awstats_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type awstats_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B awstats_tmp_t
+
+
+.br
+.B awstats_var_lib_t
+
+	/var/lib/awstats(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -86,11 +145,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), awstats(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), awstats(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/bcfg2_selinux.8 serefpolicy-3.7.19/man/man8/bcfg2_selinux.8
--- nsaserefpolicy/man/man8/bcfg2_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/bcfg2_selinux.8	2013-03-15 11:40:05.321151983 +0100
@@ -0,0 +1,119 @@
+.TH  "bcfg2_selinux"  "8"  "13-01-04" "bcfg2" "SELinux Policy documentation for bcfg2"
+.SH "NAME"
+bcfg2_selinux \- Security Enhanced Linux Policy for the bcfg2 processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the bcfg2 processes via flexible mandatory access control.
+
+The bcfg2 processes execute with the bcfg2_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep bcfg2_t
+
+
+.SH "ENTRYPOINTS"
+
+The bcfg2_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,bcfg2_exec_t" file types.  The default entrypoint paths for the bcfg2_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/bcfg2-server
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux bcfg2 policy is very flexible allowing users to setup their bcfg2 processes in as secure a method as possible.
+.PP
+The following process types are defined for bcfg2:
+
+.EX
+.B bcfg2_t
+.EE
+.PP
+Note:
+.B semanage permissive -a bcfg2_t
+
+can be used to make the process type bcfg2_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux bcfg2 policy is very flexible allowing users to setup their bcfg2 processes in as secure a method as possible.
+.PP
+The following file types are defined for bcfg2:
+
+
+.EX
+.PP
+.B bcfg2_exec_t
+.EE
+
+- Set files with the bcfg2_exec_t type, if you want to transition an executable to the bcfg2_t domain.
+
+
+.EX
+.PP
+.B bcfg2_initrc_exec_t
+.EE
+
+- Set files with the bcfg2_initrc_exec_t type, if you want to transition an executable to the bcfg2_initrc_t domain.
+
+
+.EX
+.PP
+.B bcfg2_var_lib_t
+.EE
+
+- Set files with the bcfg2_var_lib_t type, if you want to store the bcfg2 files under the /var/lib directory.
+
+
+.EX
+.PP
+.B bcfg2_var_run_t
+.EE
+
+- Set files with the bcfg2_var_run_t type, if you want to store the bcfg2 files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type bcfg2_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), bcfg2(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/bind_selinux.8 serefpolicy-3.7.19/man/man8/bind_selinux.8
--- nsaserefpolicy/man/man8/bind_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/bind_selinux.8	2013-03-15 11:39:56.097151772 +0100
@@ -0,0 +1 @@
+.so man8/named_selinux.8
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/bitlbee_selinux.8 serefpolicy-3.7.19/man/man8/bitlbee_selinux.8
--- nsaserefpolicy/man/man8/bitlbee_selinux.8	2013-03-15 11:41:11.817153500 +0100
+++ serefpolicy-3.7.19/man/man8/bitlbee_selinux.8	2013-03-15 11:39:57.545151805 +0100
@@ -1,31 +1,55 @@
-.TH  "bitlbee_selinux"  "8"  "bitlbee" "dwalsh@redhat.com" "bitlbee SELinux Policy documentation"
+.TH  "bitlbee_selinux"  "8"  "13-01-04" "bitlbee" "SELinux Policy documentation for bitlbee"
 .SH "NAME"
 bitlbee_selinux \- Security Enhanced Linux Policy for the bitlbee processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the bitlbee processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B bitlbee
-(Bitlbee service)
-processes via flexible mandatory access
-control.  
+The bitlbee processes execute with the bitlbee_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep bitlbee_t
+
+
+.SH "ENTRYPOINTS"
+
+The bitlbee_t SELinux type can be entered via the "bitlbee_exec_t" file type.  The default entrypoint paths for the bitlbee_t domain are the following:"
+
+/usr/sbin/bitlbee
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux bitlbee policy is very flexible allowing users to setup their bitlbee processes in as secure a method as possible.
+.PP
+The following process types are defined for bitlbee:
+
+.EX
+.B bitlbee_t
+.EE
+.PP
+Note:
+.B semanage permissive -a bitlbee_t
+
+can be used to make the process type bitlbee_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux bitlbee policy is very flexible allowing users to setup their bitlbee processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for bitlbee:
 
 
 .EX
 .PP
-.B bitlbee_conf_t 
+.B bitlbee_conf_t
 .EE
 
 - Set files with the bitlbee_conf_t type, if you want to treat the files as bitlbee configuration data, usually stored under the /etc directory.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B bitlbee_exec_t 
+.B bitlbee_exec_t
 .EE
 
 - Set files with the bitlbee_exec_t type, if you want to transition an executable to the bitlbee_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B bitlbee_initrc_exec_t 
+.B bitlbee_initrc_exec_t
 .EE
 
 - Set files with the bitlbee_initrc_exec_t type, if you want to transition an executable to the bitlbee_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B bitlbee_tmp_t 
+.B bitlbee_tmp_t
 .EE
 
 - Set files with the bitlbee_tmp_t type, if you want to store bitlbee temporary files in the /tmp directories.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B bitlbee_var_t 
+.B bitlbee_var_t
 .EE
 
 - Set files with the bitlbee_var_t type, if you want to store the bit files under the /var directory.
@@ -65,28 +89,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux bitlbee policy is very flexible allowing users to setup their bitlbee processes in as secure a method as possible.
-.PP 
-The following process types are defined for bitlbee:
+.SH "MANAGED FILES"
 
-.EX
-.B bitlbee_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type bitlbee_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B bitlbee_tmp_t
+
+
+.br
+.B bitlbee_var_t
+
+	/var/lib/bitlbee(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -99,11 +169,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), bitlbee(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), bitlbee(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/bluetooth_helper_selinux.8 serefpolicy-3.7.19/man/man8/bluetooth_helper_selinux.8
--- nsaserefpolicy/man/man8/bluetooth_helper_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/bluetooth_helper_selinux.8	2013-03-15 11:40:06.583152012 +0100
@@ -0,0 +1,166 @@
+.TH  "bluetooth_helper_selinux"  "8"  "13-01-04" "bluetooth_helper" "SELinux Policy documentation for bluetooth_helper"
+.SH "NAME"
+bluetooth_helper_selinux \- Security Enhanced Linux Policy for the bluetooth_helper processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the bluetooth_helper processes via flexible mandatory access control.
+
+The bluetooth_helper processes execute with the bluetooth_helper_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep bluetooth_helper_t
+
+
+.SH "ENTRYPOINTS"
+
+The bluetooth_helper_t SELinux type can be entered via the "bluetooth_helper_exec_t" file type.  The default entrypoint paths for the bluetooth_helper_t domain are the following:"
+
+/usr/bin/blue.*pin
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux bluetooth_helper policy is very flexible allowing users to setup their bluetooth_helper processes in as secure a method as possible.
+.PP
+The following process types are defined for bluetooth_helper:
+
+.EX
+.B bluetooth_helper_t
+.EE
+.PP
+Note:
+.B semanage permissive -a bluetooth_helper_t
+
+can be used to make the process type bluetooth_helper_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux bluetooth_helper policy is very flexible allowing users to setup their bluetooth_helper processes in as secure a method as possible.
+.PP
+The following file types are defined for bluetooth_helper:
+
+
+.EX
+.PP
+.B bluetooth_helper_exec_t
+.EE
+
+- Set files with the bluetooth_helper_exec_t type, if you want to transition an executable to the bluetooth_helper_t domain.
+
+
+.EX
+.PP
+.B bluetooth_helper_tmp_t
+.EE
+
+- Set files with the bluetooth_helper_tmp_t type, if you want to store bluetooth helper temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B bluetooth_helper_tmpfs_t
+.EE
+
+- Set files with the bluetooth_helper_tmpfs_t type, if you want to store bluetooth helper files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type bluetooth_helper_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B bluetooth_helper_tmp_t
+
+
+.br
+.B bluetooth_helper_tmpfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), bluetooth_helper(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, bluetooth_selinux(8), bluetooth_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/bluetooth_selinux.8 serefpolicy-3.7.19/man/man8/bluetooth_selinux.8
--- nsaserefpolicy/man/man8/bluetooth_selinux.8	2013-03-15 11:41:12.063153506 +0100
+++ serefpolicy-3.7.19/man/man8/bluetooth_selinux.8	2013-03-15 11:40:02.107151910 +0100
@@ -1,42 +1,73 @@
-.TH  "bluetooth_selinux"  "8"  "bluetooth" "dwalsh@redhat.com" "bluetooth SELinux Policy documentation"
+.TH  "bluetooth_selinux"  "8"  "13-01-04" "bluetooth" "SELinux Policy documentation for bluetooth"
 .SH "NAME"
 bluetooth_selinux \- Security Enhanced Linux Policy for the bluetooth processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the bluetooth processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B bluetooth
-(Bluetooth tools and system services)
-processes via flexible mandatory access
-control.  
+The bluetooth processes execute with the bluetooth_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep bluetooth_t
+
+
+.SH "ENTRYPOINTS"
+
+The bluetooth_t SELinux type can be entered via the "bluetooth_exec_t" file type.  The default entrypoint paths for the bluetooth_t domain are the following:"
+
+/usr/bin/dund, /usr/bin/hidd, /usr/sbin/hcid, /usr/sbin/sdpd, /usr/bin/rfcomm, /usr/sbin/hid2hci, /usr/sbin/hciattach, /usr/sbin/bluetoothd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux bluetooth policy is very flexible allowing users to setup their bluetooth processes in as secure a method as possible.
+.PP
+The following process types are defined for bluetooth:
+
+.EX
+.B bluetooth_helper_t, bluetooth_t
+.EE
+.PP
+Note:
+.B semanage permissive -a bluetooth_t
+
+can be used to make the process type bluetooth_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  bluetooth policy is extremely flexible and has several booleans that allow you to manipulate the policy and run bluetooth with the tightest access possible.
 
 
 .PP
-If you want to allow xguest to use blue tooth device, you must turn on the xguest_use_bluetooth boolean.
+If you want to allow xguest to use blue tooth devices, you must turn on the xguest_use_bluetooth boolean.
+
+.EX
+.B setsebool -P xguest_use_bluetooth 1
+.EE
+
+.PP
+If you want to allow xguest to use blue tooth devices, you must turn on the xguest_use_bluetooth boolean.
 
 .EX
 .B setsebool -P xguest_use_bluetooth 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux bluetooth policy is very flexible allowing users to setup their bluetooth processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for bluetooth:
 
 
 .EX
 .PP
-.B bluetooth_conf_rw_t 
+.B bluetooth_conf_rw_t
 .EE
 
 - Set files with the bluetooth_conf_rw_t type, if you want to treat the files as bluetooth conf read/write content.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B bluetooth_conf_t 
+.B bluetooth_conf_t
 .EE
 
 - Set files with the bluetooth_conf_t type, if you want to treat the files as bluetooth configuration data, usually stored under the /etc directory.
@@ -52,19 +83,15 @@
 
 .EX
 .PP
-.B bluetooth_exec_t 
+.B bluetooth_exec_t
 .EE
 
 - Set files with the bluetooth_exec_t type, if you want to transition an executable to the bluetooth_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/hcid, /usr/sbin/sdpd, /usr/bin/hidd, /usr/sbin/bluetoothd, /usr/sbin/hid2hci, /usr/bin/dund, /usr/sbin/hciattach, /usr/bin/rfcomm
 
 .EX
 .PP
-.B bluetooth_helper_exec_t 
+.B bluetooth_helper_exec_t
 .EE
 
 - Set files with the bluetooth_helper_exec_t type, if you want to transition an executable to the bluetooth_helper_t domain.
@@ -72,7 +99,7 @@
 
 .EX
 .PP
-.B bluetooth_helper_tmp_t 
+.B bluetooth_helper_tmp_t
 .EE
 
 - Set files with the bluetooth_helper_tmp_t type, if you want to store bluetooth helper temporary files in the /tmp directories.
@@ -80,7 +107,7 @@
 
 .EX
 .PP
-.B bluetooth_helper_tmpfs_t 
+.B bluetooth_helper_tmpfs_t
 .EE
 
 - Set files with the bluetooth_helper_tmpfs_t type, if you want to store bluetooth helper files on a tmpfs file system.
@@ -88,19 +115,15 @@
 
 .EX
 .PP
-.B bluetooth_initrc_exec_t 
+.B bluetooth_initrc_exec_t
 .EE
 
 - Set files with the bluetooth_initrc_exec_t type, if you want to transition an executable to the bluetooth_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/bluetooth, /etc/rc\.d/init\.d/dund, /etc/rc\.d/init\.d/pand
 
 .EX
 .PP
-.B bluetooth_lock_t 
+.B bluetooth_lock_t
 .EE
 
 - Set files with the bluetooth_lock_t type, if you want to treat the files as bluetooth lock data, stored under the /var/lock directory
@@ -108,7 +131,7 @@
 
 .EX
 .PP
-.B bluetooth_tmp_t 
+.B bluetooth_tmp_t
 .EE
 
 - Set files with the bluetooth_tmp_t type, if you want to store bluetooth temporary files in the /tmp directories.
@@ -116,7 +139,7 @@
 
 .EX
 .PP
-.B bluetooth_var_lib_t 
+.B bluetooth_var_lib_t
 .EE
 
 - Set files with the bluetooth_var_lib_t type, if you want to store the bluetooth files under the /var/lib directory.
@@ -124,40 +147,104 @@
 
 .EX
 .PP
-.B bluetooth_var_run_t 
+.B bluetooth_var_run_t
 .EE
 
 - Set files with the bluetooth_var_run_t type, if you want to store the bluetooth files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/bluetoothd_address, /var/run/sdp
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux bluetooth policy is very flexible allowing users to setup their bluetooth processes in as secure a method as possible.
-.PP 
-The following process types are defined for bluetooth:
+.SH "MANAGED FILES"
+
+The SELinux process type bluetooth_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B bluetooth_conf_rw_t
+
+	/etc/bluetooth/link_key
+.br
+
+.br
+.B bluetooth_lock_t
+
+
+.br
+.B bluetooth_tmp_t
+
+
+.br
+.B bluetooth_var_lib_t
+
+	/var/lib/bluetooth(/.*)?
+.br
+
+.br
+.B bluetooth_var_run_t
+
+	/var/run/sdp
+.br
+	/var/run/bluetoothd_address
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
 
-.EX
-.B bluetooth_helper_t, bluetooth_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -173,12 +260,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), bluetooth(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), bluetooth(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), bluetooth_helper_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/boinc_selinux.8 serefpolicy-3.7.19/man/man8/boinc_selinux.8
--- nsaserefpolicy/man/man8/boinc_selinux.8	2013-03-15 11:41:11.784153499 +0100
+++ serefpolicy-3.7.19/man/man8/boinc_selinux.8	2013-03-15 11:39:56.836151789 +0100
@@ -1,31 +1,55 @@
-.TH  "boinc_selinux"  "8"  "boinc" "dwalsh@redhat.com" "boinc SELinux Policy documentation"
+.TH  "boinc_selinux"  "8"  "13-01-04" "boinc" "SELinux Policy documentation for boinc"
 .SH "NAME"
 boinc_selinux \- Security Enhanced Linux Policy for the boinc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the boinc processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B boinc
-(policy for boinc)
-processes via flexible mandatory access
-control.  
+The boinc processes execute with the boinc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep boinc_t
+
+
+.SH "ENTRYPOINTS"
+
+The boinc_t SELinux type can be entered via the "boinc_exec_t" file type.  The default entrypoint paths for the boinc_t domain are the following:"
+
+/usr/bin/boinc_client
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
+.PP
+The following process types are defined for boinc:
+
+.EX
+.B boinc_t, boinc_project_t
+.EE
+.PP
+Note:
+.B semanage permissive -a boinc_t
+
+can be used to make the process type boinc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for boinc:
 
 
 .EX
 .PP
-.B boinc_exec_t 
+.B boinc_exec_t
 .EE
 
 - Set files with the boinc_exec_t type, if you want to transition an executable to the boinc_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B boinc_initrc_exec_t 
+.B boinc_initrc_exec_t
 .EE
 
 - Set files with the boinc_initrc_exec_t type, if you want to transition an executable to the boinc_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B boinc_project_tmp_t 
+.B boinc_project_tmp_t
 .EE
 
 - Set files with the boinc_project_tmp_t type, if you want to store boinc project temporary files in the /tmp directories.
@@ -49,19 +73,15 @@
 
 .EX
 .PP
-.B boinc_project_var_lib_t 
+.B boinc_project_var_lib_t
 .EE
 
 - Set files with the boinc_project_var_lib_t type, if you want to store the boinc project files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/boinc/projects(/.*)?, /var/lib/boinc/slots(/.*)?
 
 .EX
 .PP
-.B boinc_tmp_t 
+.B boinc_tmp_t
 .EE
 
 - Set files with the boinc_tmp_t type, if you want to store boinc temporary files in the /tmp directories.
@@ -69,7 +89,7 @@
 
 .EX
 .PP
-.B boinc_tmpfs_t 
+.B boinc_tmpfs_t
 .EE
 
 - Set files with the boinc_tmpfs_t type, if you want to store boinc files on a tmpfs file system.
@@ -77,7 +97,7 @@
 
 .EX
 .PP
-.B boinc_var_lib_t 
+.B boinc_var_lib_t
 .EE
 
 - Set files with the boinc_var_lib_t type, if you want to store the boinc files under the /var/lib directory.
@@ -85,51 +105,109 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for boinc:
 
 .EX
 .TP 5
-.B boinc_port_t 
+.B boinc_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 31416
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
-.PP 
-The following process types are defined for boinc:
+.SH "MANAGED FILES"
 
-.EX
-.B boinc_t, boinc_project_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type boinc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B boinc_project_var_lib_t
+
+	/var/lib/boinc/slots(/.*)?
+.br
+	/var/lib/boinc/projects(/.*)?
+.br
+
+.br
+.B boinc_tmp_t
+
+
+.br
+.B boinc_tmpfs_t
+
+
+.br
+.B boinc_var_lib_t
+
+	/var/lib/boinc(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -145,11 +223,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), boinc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), boinc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/bootloader_selinux.8 serefpolicy-3.7.19/man/man8/bootloader_selinux.8
--- nsaserefpolicy/man/man8/bootloader_selinux.8	2013-03-15 11:41:12.027153505 +0100
+++ serefpolicy-3.7.19/man/man8/bootloader_selinux.8	2013-03-15 11:40:01.303151891 +0100
@@ -1,66 +1,89 @@
-.TH  "bootloader_selinux"  "8"  "bootloader" "dwalsh@redhat.com" "bootloader SELinux Policy documentation"
+.TH  "bootloader_selinux"  "8"  "13-01-04" "bootloader" "SELinux Policy documentation for bootloader"
 .SH "NAME"
 bootloader_selinux \- Security Enhanced Linux Policy for the bootloader processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the bootloader processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B bootloader
-(Policy for the kernel modules, kernel image, and bootloader)
-processes via flexible mandatory access
-control.  
+The bootloader processes execute with the bootloader_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep bootloader_t
+
+
+.SH "ENTRYPOINTS"
+
+The bootloader_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,bootloader_exec_t" file types.  The default entrypoint paths for the bootloader_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /sbin/lilo.*, /sbin/ybin.*, /sbin/zipl, /sbin/grub, /usr/sbin/grub
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux bootloader policy is very flexible allowing users to setup their bootloader processes in as secure a method as possible.
+.PP
+The following process types are defined for bootloader:
+
+.EX
+.B bootloader_t
+.EE
+.PP
+Note:
+.B semanage permissive -a bootloader_t
+
+can be used to make the process type bootloader_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  bootloader policy is extremely flexible and has several booleans that allow you to manipulate the policy and run bootloader with the tightest access possible.
 
 
 .PP
-If you want to allows xdm to execute bootloade, you must turn on the xdm_exec_bootloader boolean.
+If you want to allows xdm to execute bootloader, you must turn on the xdm_exec_bootloader boolean.
+
+.EX
+.B setsebool -P xdm_exec_bootloader 1
+.EE
+
+.PP
+If you want to allows xdm to execute bootloader, you must turn on the xdm_exec_bootloader boolean.
 
 .EX
 .B setsebool -P xdm_exec_bootloader 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux bootloader policy is very flexible allowing users to setup their bootloader processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for bootloader:
 
 
 .EX
 .PP
-.B bootloader_etc_t 
+.B bootloader_etc_t
 .EE
 
 - Set files with the bootloader_etc_t type, if you want to store bootloader files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/etc/yaboot\.conf.*, /etc/lilo\.conf.*
 
 .EX
 .PP
-.B bootloader_exec_t 
+.B bootloader_exec_t
 .EE
 
 - Set files with the bootloader_exec_t type, if you want to transition an executable to the bootloader_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/lilo.*, /usr/sbin/grub, /sbin/ybin.*, /sbin/grub
 
 .EX
 .PP
-.B bootloader_tmp_t 
+.B bootloader_tmp_t
 .EE
 
 - Set files with the bootloader_tmp_t type, if you want to store bootloader temporary files in the /tmp directories.
@@ -68,28 +91,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux bootloader policy is very flexible allowing users to setup their bootloader processes in as secure a method as possible.
-.PP 
-The following process types are defined for bootloader:
+.SH "MANAGED FILES"
 
-.EX
-.B bootloader_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type bootloader_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -105,12 +120,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), bootloader(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), bootloader(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/brctl_selinux.8 serefpolicy-3.7.19/man/man8/brctl_selinux.8
--- nsaserefpolicy/man/man8/brctl_selinux.8	2013-03-15 11:41:12.193153509 +0100
+++ serefpolicy-3.7.19/man/man8/brctl_selinux.8	2013-03-15 11:40:06.286152005 +0100
@@ -1,31 +1,55 @@
-.TH  "brctl_selinux"  "8"  "brctl" "dwalsh@redhat.com" "brctl SELinux Policy documentation"
+.TH  "brctl_selinux"  "8"  "13-01-04" "brctl" "SELinux Policy documentation for brctl"
 .SH "NAME"
 brctl_selinux \- Security Enhanced Linux Policy for the brctl processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the brctl processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B brctl
-(Utilities for configuring the linux ethernet bridge)
-processes via flexible mandatory access
-control.  
+The brctl processes execute with the brctl_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep brctl_t
+
+
+.SH "ENTRYPOINTS"
+
+The brctl_t SELinux type can be entered via the "brctl_exec_t" file type.  The default entrypoint paths for the brctl_t domain are the following:"
+
+/usr/sbin/brctl
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux brctl policy is very flexible allowing users to setup their brctl processes in as secure a method as possible.
+.PP
+The following process types are defined for brctl:
+
+.EX
+.B brctl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a brctl_t
+
+can be used to make the process type brctl_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux brctl policy is very flexible allowing users to setup their brctl processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for brctl:
 
 
 .EX
 .PP
-.B brctl_exec_t 
+.B brctl_exec_t
 .EE
 
 - Set files with the brctl_exec_t type, if you want to transition an executable to the brctl_t domain.
@@ -33,28 +57,62 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux brctl policy is very flexible allowing users to setup their brctl processes in as secure a method as possible.
-.PP 
-The following process types are defined for brctl:
+.SH "MANAGED FILES"
 
-.EX
-.B brctl_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type brctl_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +125,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), brctl(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), brctl(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cachefilesd_selinux.8 serefpolicy-3.7.19/man/man8/cachefilesd_selinux.8
--- nsaserefpolicy/man/man8/cachefilesd_selinux.8	2013-03-15 11:41:12.130153507 +0100
+++ serefpolicy-3.7.19/man/man8/cachefilesd_selinux.8	2013-03-15 11:40:03.895151950 +0100
@@ -1,43 +1,55 @@
-.TH  "cachefilesd_selinux"  "8"  "cachefilesd" "dwalsh@redhat.com" "cachefilesd SELinux Policy documentation"
+.TH  "cachefilesd_selinux"  "8"  "13-01-04" "cachefilesd" "SELinux Policy documentation for cachefilesd"
 .SH "NAME"
 cachefilesd_selinux \- Security Enhanced Linux Policy for the cachefilesd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cachefilesd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B cachefilesd
-(policy for cachefilesd)
-processes via flexible mandatory access
-control.  
+The cachefilesd processes execute with the cachefilesd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep cachefilesd_t
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+
+.SH "ENTRYPOINTS"
+
+The cachefilesd_t SELinux type can be entered via the "cachefilesd_exec_t" file type.  The default entrypoint paths for the cachefilesd_t domain are the following:"
+
+/sbin/cachefilesd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to files.
 SELinux cachefilesd policy is very flexible allowing users to setup their cachefilesd processes in as secure a method as possible.
-.PP 
-The following file types are defined for cachefilesd:
-
+.PP
+The following process types are defined for cachefilesd:
 
 .EX
-.PP
-.B cachefiles_var_t 
+.B cachefilesd_t, cachefiles_kernel_t
 .EE
+.PP
+Note:
+.B semanage permissive -a cachefilesd_t
 
-- Set files with the cachefiles_var_t type, if you want to store the cachef files under the /var directory.
+can be used to make the process type cachefilesd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux cachefilesd policy is very flexible allowing users to setup their cachefilesd processes in as secure a method as possible.
+.PP
+The following file types are defined for cachefilesd:
 
-.br
-.TP 5
-Paths: 
-/var/run/cachefilesd\.pid, /var/fscache(/.*)?, /var/cache/fscache(/.*)?
 
 .EX
 .PP
-.B cachefilesd_exec_t 
+.B cachefilesd_exec_t
 .EE
 
 - Set files with the cachefilesd_exec_t type, if you want to transition an executable to the cachefilesd_t domain.
@@ -45,7 +57,7 @@
 
 .EX
 .PP
-.B cachefilesd_var_run_t 
+.B cachefilesd_var_run_t
 .EE
 
 - Set files with the cachefilesd_var_run_t type, if you want to store the cachefilesd files under the /run directory.
@@ -53,28 +65,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cachefilesd policy is very flexible allowing users to setup their cachefilesd processes in as secure a method as possible.
-.PP 
-The following process types are defined for cachefilesd:
+.SH "MANAGED FILES"
 
-.EX
-.B cachefilesd_t, cachefiles_kernel_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cachefilesd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cachefilesd_var_run_t
+
+	/var/run/cachefilesd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -87,11 +141,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cachefilesd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cachefilesd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/calamaris_selinux.8 serefpolicy-3.7.19/man/man8/calamaris_selinux.8
--- nsaserefpolicy/man/man8/calamaris_selinux.8	2013-03-15 11:41:10.970153481 +0100
+++ serefpolicy-3.7.19/man/man8/calamaris_selinux.8	2013-03-15 11:39:55.237151753 +0100
@@ -1,31 +1,55 @@
-.TH  "calamaris_selinux"  "8"  "calamaris" "dwalsh@redhat.com" "calamaris SELinux Policy documentation"
+.TH  "calamaris_selinux"  "8"  "13-01-04" "calamaris" "SELinux Policy documentation for calamaris"
 .SH "NAME"
 calamaris_selinux \- Security Enhanced Linux Policy for the calamaris processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the calamaris processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B calamaris
-(Squid log analysis)
-processes via flexible mandatory access
-control.  
+The calamaris processes execute with the calamaris_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep calamaris_t
+
+
+.SH "ENTRYPOINTS"
+
+The calamaris_t SELinux type can be entered via the "calamaris_exec_t" file type.  The default entrypoint paths for the calamaris_t domain are the following:"
+
+/etc/cron\.daily/calamaris
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux calamaris policy is very flexible allowing users to setup their calamaris processes in as secure a method as possible.
+.PP
+The following process types are defined for calamaris:
+
+.EX
+.B calamaris_t
+.EE
+.PP
+Note:
+.B semanage permissive -a calamaris_t
+
+can be used to make the process type calamaris_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux calamaris policy is very flexible allowing users to setup their calamaris processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for calamaris:
 
 
 .EX
 .PP
-.B calamaris_exec_t 
+.B calamaris_exec_t
 .EE
 
 - Set files with the calamaris_exec_t type, if you want to transition an executable to the calamaris_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B calamaris_log_t 
+.B calamaris_log_t
 .EE
 
 - Set files with the calamaris_log_t type, if you want to treat the data as calamaris log data, usually stored under the /var/log directory.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B calamaris_www_t 
+.B calamaris_www_t
 .EE
 
 - Set files with the calamaris_www_t type, if you want to treat the files as calamaris www data.
@@ -49,28 +73,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux calamaris policy is very flexible allowing users to setup their calamaris processes in as secure a method as possible.
-.PP 
-The following process types are defined for calamaris:
+.SH "MANAGED FILES"
 
-.EX
-.B calamaris_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type calamaris_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B calamaris_log_t
+
+	/var/log/calamaris(/.*)?
+.br
+
+.br
+.B calamaris_www_t
+
+	/var/www/calamaris(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +147,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), calamaris(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), calamaris(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/canna_selinux.8 serefpolicy-3.7.19/man/man8/canna_selinux.8
--- nsaserefpolicy/man/man8/canna_selinux.8	2013-03-15 11:41:12.170153508 +0100
+++ serefpolicy-3.7.19/man/man8/canna_selinux.8	2013-03-15 11:40:04.746151970 +0100
@@ -1,43 +1,63 @@
-.TH  "canna_selinux"  "8"  "canna" "dwalsh@redhat.com" "canna SELinux Policy documentation"
+.TH  "canna_selinux"  "8"  "13-01-04" "canna" "SELinux Policy documentation for canna"
 .SH "NAME"
 canna_selinux \- Security Enhanced Linux Policy for the canna processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the canna processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B canna
-(Canna - kana-kanji conversion server)
-processes via flexible mandatory access
-control.  
+The canna processes execute with the canna_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep canna_t
+
+
+.SH "ENTRYPOINTS"
+
+The canna_t SELinux type can be entered via the "canna_exec_t" file type.  The default entrypoint paths for the canna_t domain are the following:"
+
+/usr/bin/catdic, /usr/sbin/jserver, /usr/bin/cannaping, /usr/sbin/cannaserver
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux canna policy is very flexible allowing users to setup their canna processes in as secure a method as possible.
+.PP
+The following process types are defined for canna:
+
+.EX
+.B canna_t
+.EE
+.PP
+Note:
+.B semanage permissive -a canna_t
+
+can be used to make the process type canna_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux canna policy is very flexible allowing users to setup their canna processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for canna:
 
 
 .EX
 .PP
-.B canna_exec_t 
+.B canna_exec_t
 .EE
 
 - Set files with the canna_exec_t type, if you want to transition an executable to the canna_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/catdic, /usr/bin/cannaping, /usr/sbin/jserver, /usr/sbin/cannaserver
 
 .EX
 .PP
-.B canna_initrc_exec_t 
+.B canna_initrc_exec_t
 .EE
 
 - Set files with the canna_initrc_exec_t type, if you want to transition an executable to the canna_initrc_t domain.
@@ -45,64 +65,114 @@
 
 .EX
 .PP
-.B canna_log_t 
+.B canna_log_t
 .EE
 
 - Set files with the canna_log_t type, if you want to treat the data as canna log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/wnn(/.*)?, /var/log/canna(/.*)?
 
 .EX
 .PP
-.B canna_var_lib_t 
+.B canna_var_lib_t
 .EE
 
 - Set files with the canna_var_lib_t type, if you want to store the canna files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/wnn/dic(/.*)?, /var/lib/canna/dic(/.*)?
 
 .EX
 .PP
-.B canna_var_run_t 
+.B canna_var_run_t
 .EE
 
 - Set files with the canna_var_run_t type, if you want to store the canna files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/\.iroha_unix/.*, /var/run/\.iroha_unix, /var/run/wnn-unix(/.*)
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux canna policy is very flexible allowing users to setup their canna processes in as secure a method as possible.
-.PP 
-The following process types are defined for canna:
+.SH "MANAGED FILES"
 
-.EX
-.B canna_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type canna_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B canna_log_t
+
+	/var/log/wnn(/.*)?
+.br
+	/var/log/canna(/.*)?
+.br
+
+.br
+.B canna_var_lib_t
+
+	/var/lib/wnn/dic(/.*)?
+.br
+	/var/lib/canna/dic(/.*)?
+.br
+
+.br
+.B canna_var_run_t
+
+	/var/run/wnn-unix(/.*)
+.br
+	/var/run/\.iroha_unix/.*
+.br
+	/var/run/\.iroha_unix
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +185,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), canna(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), canna(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cardmgr_selinux.8 serefpolicy-3.7.19/man/man8/cardmgr_selinux.8
--- nsaserefpolicy/man/man8/cardmgr_selinux.8	2013-03-15 11:41:11.859153501 +0100
+++ serefpolicy-3.7.19/man/man8/cardmgr_selinux.8	2013-03-15 11:39:58.825151835 +0100
@@ -1,25 +1,55 @@
-.TH  "cardmgr_selinux"  "8"  "cardmgr" "dwalsh@redhat.com" "cardmgr SELinux Policy documentation"
+.TH  "cardmgr_selinux"  "8"  "13-01-04" "cardmgr" "SELinux Policy documentation for cardmgr"
 .SH "NAME"
 cardmgr_selinux \- Security Enhanced Linux Policy for the cardmgr processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cardmgr processes via flexible mandatory access control.
 
+The cardmgr processes execute with the cardmgr_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep cardmgr_t
+
+
+.SH "ENTRYPOINTS"
+
+The cardmgr_t SELinux type can be entered via the "cardctl_exec_t,cardmgr_exec_t" file types.  The default entrypoint paths for the cardmgr_t domain are the following:"
+
+/sbin/cardctl, /sbin/cardmgr, /etc/apm/event\.d/pcmcia
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cardmgr policy is very flexible allowing users to setup their cardmgr processes in as secure a method as possible.
+.PP
+The following process types are defined for cardmgr:
+
+.EX
+.B cardmgr_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cardmgr_t
+
+can be used to make the process type cardmgr_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cardmgr policy is very flexible allowing users to setup their cardmgr processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cardmgr:
 
 
 .EX
 .PP
-.B cardmgr_dev_t 
+.B cardmgr_dev_t
 .EE
 
 - Set files with the cardmgr_dev_t type, if you want to treat the files as cardmgr dev data.
@@ -27,19 +57,15 @@
 
 .EX
 .PP
-.B cardmgr_exec_t 
+.B cardmgr_exec_t
 .EE
 
 - Set files with the cardmgr_exec_t type, if you want to transition an executable to the cardmgr_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/apm/event\.d/pcmcia, /sbin/cardmgr
 
 .EX
 .PP
-.B cardmgr_lnk_t 
+.B cardmgr_lnk_t
 .EE
 
 - Set files with the cardmgr_lnk_t type, if you want to treat the files as cardmgr lnk data.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B cardmgr_var_lib_t 
+.B cardmgr_var_lib_t
 .EE
 
 - Set files with the cardmgr_var_lib_t type, if you want to store the cardmgr files under the /var/lib directory.
@@ -55,40 +81,112 @@
 
 .EX
 .PP
-.B cardmgr_var_run_t 
+.B cardmgr_var_run_t
 .EE
 
 - Set files with the cardmgr_var_run_t type, if you want to store the cardmgr files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/cardmgr\.pid, /var/run/stab, /var/lib/pcmcia(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cardmgr policy is very flexible allowing users to setup their cardmgr processes in as secure a method as possible.
-.PP 
-The following process types are defined for cardmgr:
+.SH "MANAGED FILES"
 
-.EX
-.B cardmgr_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cardmgr_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cardmgr_var_lib_t
+
+
+.br
+.B cardmgr_var_run_t
+
+	/var/lib/pcmcia(/.*)?
+.br
+	/var/run/stab
+.br
+	/var/run/cardmgr\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -101,11 +199,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cardmgr(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cardmgr(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ccs_selinux.8 serefpolicy-3.7.19/man/man8/ccs_selinux.8
--- nsaserefpolicy/man/man8/ccs_selinux.8	2013-03-15 11:41:11.783153499 +0100
+++ serefpolicy-3.7.19/man/man8/ccs_selinux.8	2013-03-15 11:39:56.787151788 +0100
@@ -1,31 +1,55 @@
-.TH  "ccs_selinux"  "8"  "ccs" "dwalsh@redhat.com" "ccs SELinux Policy documentation"
+.TH  "ccs_selinux"  "8"  "13-01-04" "ccs" "SELinux Policy documentation for ccs"
 .SH "NAME"
 ccs_selinux \- Security Enhanced Linux Policy for the ccs processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ccs processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ccs
-(Cluster Configuration System)
-processes via flexible mandatory access
-control.  
+The ccs processes execute with the ccs_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ccs_t
+
+
+.SH "ENTRYPOINTS"
+
+The ccs_t SELinux type can be entered via the "ccs_exec_t" file type.  The default entrypoint paths for the ccs_t domain are the following:"
+
+/sbin/ccsd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ccs policy is very flexible allowing users to setup their ccs processes in as secure a method as possible.
+.PP
+The following process types are defined for ccs:
+
+.EX
+.B ccs_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ccs_t
+
+can be used to make the process type ccs_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ccs policy is very flexible allowing users to setup their ccs processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ccs:
 
 
 .EX
 .PP
-.B ccs_exec_t 
+.B ccs_exec_t
 .EE
 
 - Set files with the ccs_exec_t type, if you want to transition an executable to the ccs_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B ccs_tmp_t 
+.B ccs_tmp_t
 .EE
 
 - Set files with the ccs_tmp_t type, if you want to store ccs temporary files in the /tmp directories.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B ccs_tmpfs_t 
+.B ccs_tmpfs_t
 .EE
 
 - Set files with the ccs_tmpfs_t type, if you want to store ccs files on a tmpfs file system.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B ccs_var_lib_t 
+.B ccs_var_lib_t
 .EE
 
 - Set files with the ccs_var_lib_t type, if you want to store the ccs files under the /var/lib directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B ccs_var_log_t 
+.B ccs_var_log_t
 .EE
 
 - Set files with the ccs_var_log_t type, if you want to treat the data as ccs var log data, usually stored under the /var/log directory.
@@ -65,40 +89,110 @@
 
 .EX
 .PP
-.B ccs_var_run_t 
+.B ccs_var_run_t
 .EE
 
 - Set files with the ccs_var_run_t type, if you want to store the ccs files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/cluster/ccsd\.pid, /var/run/cluster/ccsd\.sock
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ccs policy is very flexible allowing users to setup their ccs processes in as secure a method as possible.
-.PP 
-The following process types are defined for ccs:
+.SH "MANAGED FILES"
 
-.EX
-.B ccs_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ccs_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B ccs_tmp_t
+
+
+.br
+.B ccs_tmpfs_t
+
+
+.br
+.B ccs_var_lib_t
+
+
+.br
+.B ccs_var_log_t
+
+
+.br
+.B ccs_var_run_t
+
+	/var/run/cluster/ccsd\.pid
+.br
+	/var/run/cluster/ccsd\.sock
+.br
+
+.br
+.B cluster_conf_t
+
+	/etc/cluster(/.*)?
+.br
+
+.br
+.B file_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B qpidd_tmpfs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -111,11 +205,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ccs(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ccs(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cdcc_selinux.8 serefpolicy-3.7.19/man/man8/cdcc_selinux.8
--- nsaserefpolicy/man/man8/cdcc_selinux.8	2013-03-15 11:41:12.229153510 +0100
+++ serefpolicy-3.7.19/man/man8/cdcc_selinux.8	2013-03-15 11:40:07.070152023 +0100
@@ -1,25 +1,55 @@
-.TH  "cdcc_selinux"  "8"  "cdcc" "dwalsh@redhat.com" "cdcc SELinux Policy documentation"
+.TH  "cdcc_selinux"  "8"  "13-01-04" "cdcc" "SELinux Policy documentation for cdcc"
 .SH "NAME"
 cdcc_selinux \- Security Enhanced Linux Policy for the cdcc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cdcc processes via flexible mandatory access control.
 
+The cdcc processes execute with the cdcc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep cdcc_t
+
+
+.SH "ENTRYPOINTS"
+
+The cdcc_t SELinux type can be entered via the "cdcc_exec_t" file type.  The default entrypoint paths for the cdcc_t domain are the following:"
+
+/usr/bin/cdcc
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cdcc policy is very flexible allowing users to setup their cdcc processes in as secure a method as possible.
+.PP
+The following process types are defined for cdcc:
+
+.EX
+.B cdcc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cdcc_t
+
+can be used to make the process type cdcc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cdcc policy is very flexible allowing users to setup their cdcc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cdcc:
 
 
 .EX
 .PP
-.B cdcc_exec_t 
+.B cdcc_exec_t
 .EE
 
 - Set files with the cdcc_exec_t type, if you want to transition an executable to the cdcc_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B cdcc_tmp_t 
+.B cdcc_tmp_t
 .EE
 
 - Set files with the cdcc_tmp_t type, if you want to store cdcc temporary files in the /tmp directories.
@@ -35,28 +65,72 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cdcc policy is very flexible allowing users to setup their cdcc processes in as secure a method as possible.
-.PP 
-The following process types are defined for cdcc:
+.SH "MANAGED FILES"
 
-.EX
-.B cdcc_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cdcc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cdcc_tmp_t
+
+
+.br
+.B dcc_client_map_t
+
+	/etc/dcc/map
+.br
+	/var/dcc/map
+.br
+	/var/lib/dcc/map
+.br
+	/var/run/dcc/map
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +143,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cdcc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cdcc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cdrecord_selinux.8 serefpolicy-3.7.19/man/man8/cdrecord_selinux.8
--- nsaserefpolicy/man/man8/cdrecord_selinux.8	2013-03-15 11:41:12.086153506 +0100
+++ serefpolicy-3.7.19/man/man8/cdrecord_selinux.8	2013-03-15 11:40:02.620151921 +0100
@@ -1,75 +1,130 @@
-.TH  "cdrecord_selinux"  "8"  "cdrecord" "dwalsh@redhat.com" "cdrecord SELinux Policy documentation"
+.TH  "cdrecord_selinux"  "8"  "13-01-04" "cdrecord" "SELinux Policy documentation for cdrecord"
 .SH "NAME"
 cdrecord_selinux \- Security Enhanced Linux Policy for the cdrecord processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cdrecord processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B cdrecord
-(Policy for cdrecord)
-processes via flexible mandatory access
-control.  
+The cdrecord processes execute with the cdrecord_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep cdrecord_t
+
+
+.SH "ENTRYPOINTS"
+
+The cdrecord_t SELinux type can be entered via the "cdrecord_exec_t" file type.  The default entrypoint paths for the cdrecord_t domain are the following:"
+
+/usr/bin/wodim, /usr/bin/cdrecord, /usr/bin/growisofs
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cdrecord policy is very flexible allowing users to setup their cdrecord processes in as secure a method as possible.
+.PP
+The following process types are defined for cdrecord:
+
+.EX
+.B cdrecord_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cdrecord_t
+
+can be used to make the process type cdrecord_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  cdrecord policy is extremely flexible and has several booleans that allow you to manipulate the policy and run cdrecord with the tightest access possible.
 
 
 .PP
-If you want to allow cdrecord to read various content. nfs, samba, removable devices, user temp and untrusted content file, you must turn on the cdrecord_read_content boolean.
+If you want to allow cdrecord to read various content. nfs, samba, removable devices, user temp and untrusted content files, you must turn on the cdrecord_read_content boolean.
+
+.EX
+.B setsebool -P cdrecord_read_content 1
+.EE
+
+.PP
+If you want to allow cdrecord to read various content. nfs, samba, removable devices, user temp and untrusted content files, you must turn on the cdrecord_read_content boolean.
 
 .EX
 .B setsebool -P cdrecord_read_content 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cdrecord policy is very flexible allowing users to setup their cdrecord processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cdrecord:
 
 
 .EX
 .PP
-.B cdrecord_exec_t 
+.B cdrecord_exec_t
 .EE
 
 - Set files with the cdrecord_exec_t type, if you want to transition an executable to the cdrecord_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/cdrecord, /usr/bin/wodim, /usr/bin/growisofs
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cdrecord policy is very flexible allowing users to setup their cdrecord processes in as secure a method as possible.
-.PP 
-The following process types are defined for cdrecord:
+.SH "MANAGED FILES"
 
-.EX
-.B cdrecord_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cdrecord_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,12 +140,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cdrecord(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cdrecord(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/certmaster_selinux.8 serefpolicy-3.7.19/man/man8/certmaster_selinux.8
--- nsaserefpolicy/man/man8/certmaster_selinux.8	2013-03-15 11:41:12.121153507 +0100
+++ serefpolicy-3.7.19/man/man8/certmaster_selinux.8	2013-03-15 11:40:03.685151946 +0100
@@ -1,31 +1,55 @@
-.TH  "certmaster_selinux"  "8"  "certmaster" "dwalsh@redhat.com" "certmaster SELinux Policy documentation"
+.TH  "certmaster_selinux"  "8"  "13-01-04" "certmaster" "SELinux Policy documentation for certmaster"
 .SH "NAME"
 certmaster_selinux \- Security Enhanced Linux Policy for the certmaster processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the certmaster processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B certmaster
-(Certmaster SSL certificate distribution service)
-processes via flexible mandatory access
-control.  
+The certmaster processes execute with the certmaster_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep certmaster_t
+
+
+.SH "ENTRYPOINTS"
+
+The certmaster_t SELinux type can be entered via the "certmaster_exec_t" file type.  The default entrypoint paths for the certmaster_t domain are the following:"
+
+/usr/bin/certmaster
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
+.PP
+The following process types are defined for certmaster:
+
+.EX
+.B certmaster_t
+.EE
+.PP
+Note:
+.B semanage permissive -a certmaster_t
+
+can be used to make the process type certmaster_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for certmaster:
 
 
 .EX
 .PP
-.B certmaster_etc_rw_t 
+.B certmaster_etc_rw_t
 .EE
 
 - Set files with the certmaster_etc_rw_t type, if you want to treat the files as certmaster etc read/write content.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B certmaster_exec_t 
+.B certmaster_exec_t
 .EE
 
 - Set files with the certmaster_exec_t type, if you want to transition an executable to the certmaster_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B certmaster_initrc_exec_t 
+.B certmaster_initrc_exec_t
 .EE
 
 - Set files with the certmaster_initrc_exec_t type, if you want to transition an executable to the certmaster_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B certmaster_var_lib_t 
+.B certmaster_var_lib_t
 .EE
 
 - Set files with the certmaster_var_lib_t type, if you want to store the certmaster files under the /var/lib directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B certmaster_var_log_t 
+.B certmaster_var_log_t
 .EE
 
 - Set files with the certmaster_var_log_t type, if you want to treat the data as certmaster var log data, usually stored under the /var/log directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B certmaster_var_run_t 
+.B certmaster_var_run_t
 .EE
 
 - Set files with the certmaster_var_run_t type, if you want to store the certmaster files under the /run directory.
@@ -73,51 +97,125 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for certmaster:
 
 .EX
 .TP 5
-.B certmaster_port_t 
+.B certmaster_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 51235
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
-.PP 
-The following process types are defined for certmaster:
+.SH "MANAGED FILES"
 
-.EX
-.B certmaster_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type certmaster_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cert_t
+
+	/etc/pki(/.*)?
+.br
+	/etc/httpd/alias(/.*)?
+.br
+	/usr/share/ssl/certs(/.*)?
+.br
+	/usr/share/ssl/private(/.*)?
+.br
+	/var/named/chroot/etc/pki(/.*)?
+.br
+
+.br
+.B certmaster_etc_rw_t
+
+	/etc/certmaster(/.*)?
+.br
+
+.br
+.B certmaster_var_lib_t
+
+	/var/lib/certmaster(/.*)?
+.br
+
+.br
+.B certmaster_var_log_t
+
+	/var/log/certmaster(/.*)?
+.br
+
+.br
+.B certmaster_var_run_t
+
+	/var/run/certmaster.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -133,11 +231,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), certmaster(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), certmaster(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/certmonger_selinux.8 serefpolicy-3.7.19/man/man8/certmonger_selinux.8
--- nsaserefpolicy/man/man8/certmonger_selinux.8	2013-03-15 11:41:11.333153489 +0100
+++ serefpolicy-3.7.19/man/man8/certmonger_selinux.8	2013-03-15 11:39:55.545151760 +0100
@@ -1,31 +1,55 @@
-.TH  "certmonger_selinux"  "8"  "certmonger" "dwalsh@redhat.com" "certmonger SELinux Policy documentation"
+.TH  "certmonger_selinux"  "8"  "13-01-04" "certmonger" "SELinux Policy documentation for certmonger"
 .SH "NAME"
 certmonger_selinux \- Security Enhanced Linux Policy for the certmonger processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the certmonger processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B certmonger
-(Certificate status monitor and PKI enrollment client)
-processes via flexible mandatory access
-control.  
+The certmonger processes execute with the certmonger_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep certmonger_t
+
+
+.SH "ENTRYPOINTS"
+
+The certmonger_t SELinux type can be entered via the "certmonger_exec_t" file type.  The default entrypoint paths for the certmonger_t domain are the following:"
+
+/usr/sbin/certmonger
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux certmonger policy is very flexible allowing users to setup their certmonger processes in as secure a method as possible.
+.PP
+The following process types are defined for certmonger:
+
+.EX
+.B certmonger_unconfined_t, certmonger_t
+.EE
+.PP
+Note:
+.B semanage permissive -a certmonger_t
+
+can be used to make the process type certmonger_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux certmonger policy is very flexible allowing users to setup their certmonger processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for certmonger:
 
 
 .EX
 .PP
-.B certmonger_exec_t 
+.B certmonger_exec_t
 .EE
 
 - Set files with the certmonger_exec_t type, if you want to transition an executable to the certmonger_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B certmonger_initrc_exec_t 
+.B certmonger_initrc_exec_t
 .EE
 
 - Set files with the certmonger_initrc_exec_t type, if you want to transition an executable to the certmonger_initrc_t domain.
@@ -41,7 +65,15 @@
 
 .EX
 .PP
-.B certmonger_var_lib_t 
+.B certmonger_unconfined_exec_t
+.EE
+
+- Set files with the certmonger_unconfined_exec_t type, if you want to transition an executable to the certmonger_unconfined_t domain.
+
+
+.EX
+.PP
+.B certmonger_var_lib_t
 .EE
 
 - Set files with the certmonger_var_lib_t type, if you want to store the certmonger files under the /var/lib directory.
@@ -49,7 +81,7 @@
 
 .EX
 .PP
-.B certmonger_var_run_t 
+.B certmonger_var_run_t
 .EE
 
 - Set files with the certmonger_var_run_t type, if you want to store the certmonger files under the /run directory.
@@ -57,28 +89,102 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux certmonger policy is very flexible allowing users to setup their certmonger processes in as secure a method as possible.
-.PP 
-The following process types are defined for certmonger:
+.SH "MANAGED FILES"
 
-.EX
-.B certmonger_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type certmonger_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B cert_t
+
+	/etc/pki(/.*)?
+.br
+	/etc/httpd/alias(/.*)?
+.br
+	/usr/share/ssl/certs(/.*)?
+.br
+	/usr/share/ssl/private(/.*)?
+.br
+	/var/named/chroot/etc/pki(/.*)?
+.br
+
+.br
+.B certmonger_var_lib_t
+
+	/var/lib/certmonger(/.*)?
+.br
+
+.br
+.B certmonger_var_run_t
+
+	/var/run/certmonger.pid
+.br
+
+.br
+.B dirsrv_config_t
+
+	/etc/dirsrv(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +197,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), certmonger(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), certmonger(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, certmonger_unconfined_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/certmonger_unconfined_selinux.8 serefpolicy-3.7.19/man/man8/certmonger_unconfined_selinux.8
--- nsaserefpolicy/man/man8/certmonger_unconfined_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/certmonger_unconfined_selinux.8	2013-03-15 11:40:02.253151913 +0100
@@ -0,0 +1,96 @@
+.TH  "certmonger_unconfined_selinux"  "8"  "13-01-04" "certmonger_unconfined" "SELinux Policy documentation for certmonger_unconfined"
+.SH "NAME"
+certmonger_unconfined_selinux \- Security Enhanced Linux Policy for the certmonger_unconfined processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the certmonger_unconfined processes via flexible mandatory access control.
+
+The certmonger_unconfined processes execute with the certmonger_unconfined_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep certmonger_unconfined_t
+
+
+.SH "ENTRYPOINTS"
+
+The certmonger_unconfined_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,certmonger_unconfined_exec_t" file types.  The default entrypoint paths for the certmonger_unconfined_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/lib(64)?/ipa/certmonger(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux certmonger_unconfined policy is very flexible allowing users to setup their certmonger_unconfined processes in as secure a method as possible.
+.PP
+The following process types are defined for certmonger_unconfined:
+
+.EX
+.B certmonger_unconfined_t
+.EE
+.PP
+Note:
+.B semanage permissive -a certmonger_unconfined_t
+
+can be used to make the process type certmonger_unconfined_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux certmonger_unconfined policy is very flexible allowing users to setup their certmonger_unconfined processes in as secure a method as possible.
+.PP
+The following file types are defined for certmonger_unconfined:
+
+
+.EX
+.PP
+.B certmonger_unconfined_exec_t
+.EE
+
+- Set files with the certmonger_unconfined_exec_t type, if you want to transition an executable to the certmonger_unconfined_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type certmonger_unconfined_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), certmonger_unconfined(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, certmonger_selinux(8), certmonger_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/certwatch_selinux.8 serefpolicy-3.7.19/man/man8/certwatch_selinux.8
--- nsaserefpolicy/man/man8/certwatch_selinux.8	2013-03-15 11:41:12.121153507 +0100
+++ serefpolicy-3.7.19/man/man8/certwatch_selinux.8	2013-03-15 11:40:03.684151946 +0100
@@ -1,31 +1,55 @@
-.TH  "certwatch_selinux"  "8"  "certwatch" "dwalsh@redhat.com" "certwatch SELinux Policy documentation"
+.TH  "certwatch_selinux"  "8"  "13-01-04" "certwatch" "SELinux Policy documentation for certwatch"
 .SH "NAME"
 certwatch_selinux \- Security Enhanced Linux Policy for the certwatch processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the certwatch processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B certwatch
-(Digital Certificate Tracking)
-processes via flexible mandatory access
-control.  
+The certwatch processes execute with the certwatch_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep certwatch_t
+
+
+.SH "ENTRYPOINTS"
+
+The certwatch_t SELinux type can be entered via the "certwatch_exec_t" file type.  The default entrypoint paths for the certwatch_t domain are the following:"
+
+/usr/bin/certwatch
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux certwatch policy is very flexible allowing users to setup their certwatch processes in as secure a method as possible.
+.PP
+The following process types are defined for certwatch:
+
+.EX
+.B certwatch_t
+.EE
+.PP
+Note:
+.B semanage permissive -a certwatch_t
+
+can be used to make the process type certwatch_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux certwatch policy is very flexible allowing users to setup their certwatch processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for certwatch:
 
 
 .EX
 .PP
-.B certwatch_exec_t 
+.B certwatch_exec_t
 .EE
 
 - Set files with the certwatch_exec_t type, if you want to transition an executable to the certwatch_t domain.
@@ -33,28 +57,62 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux certwatch policy is very flexible allowing users to setup their certwatch processes in as secure a method as possible.
-.PP 
-The following process types are defined for certwatch:
+.SH "MANAGED FILES"
 
-.EX
-.B certwatch_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type certwatch_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +125,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), certwatch(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), certwatch(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cfengine_execd_selinux.8 serefpolicy-3.7.19/man/man8/cfengine_execd_selinux.8
--- nsaserefpolicy/man/man8/cfengine_execd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/cfengine_execd_selinux.8	2013-03-15 11:40:06.936152020 +0100
@@ -0,0 +1,96 @@
+.TH  "cfengine_execd_selinux"  "8"  "13-01-04" "cfengine_execd" "SELinux Policy documentation for cfengine_execd"
+.SH "NAME"
+cfengine_execd_selinux \- Security Enhanced Linux Policy for the cfengine_execd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the cfengine_execd processes via flexible mandatory access control.
+
+The cfengine_execd processes execute with the cfengine_execd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep cfengine_execd_t
+
+
+.SH "ENTRYPOINTS"
+
+The cfengine_execd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,cfengine_execd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the cfengine_execd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/cf-execd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cfengine_execd policy is very flexible allowing users to setup their cfengine_execd processes in as secure a method as possible.
+.PP
+The following process types are defined for cfengine_execd:
+
+.EX
+.B cfengine_execd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cfengine_execd_t
+
+can be used to make the process type cfengine_execd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux cfengine_execd policy is very flexible allowing users to setup their cfengine_execd processes in as secure a method as possible.
+.PP
+The following file types are defined for cfengine_execd:
+
+
+.EX
+.PP
+.B cfengine_execd_exec_t
+.EE
+
+- Set files with the cfengine_execd_exec_t type, if you want to transition an executable to the cfengine_execd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type cfengine_execd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), cfengine_execd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, cfengine_monitord_selinux(8), cfengine_serverd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/cfengine_monitord_selinux.8 serefpolicy-3.7.19/man/man8/cfengine_monitord_selinux.8
--- nsaserefpolicy/man/man8/cfengine_monitord_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/cfengine_monitord_selinux.8	2013-03-15 11:39:58.986151838 +0100
@@ -0,0 +1,96 @@
+.TH  "cfengine_monitord_selinux"  "8"  "13-01-04" "cfengine_monitord" "SELinux Policy documentation for cfengine_monitord"
+.SH "NAME"
+cfengine_monitord_selinux \- Security Enhanced Linux Policy for the cfengine_monitord processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the cfengine_monitord processes via flexible mandatory access control.
+
+The cfengine_monitord processes execute with the cfengine_monitord_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep cfengine_monitord_t
+
+
+.SH "ENTRYPOINTS"
+
+The cfengine_monitord_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,cfengine_monitord_exec_t,proc_type,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the cfengine_monitord_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/cf-monitord, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cfengine_monitord policy is very flexible allowing users to setup their cfengine_monitord processes in as secure a method as possible.
+.PP
+The following process types are defined for cfengine_monitord:
+
+.EX
+.B cfengine_monitord_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cfengine_monitord_t
+
+can be used to make the process type cfengine_monitord_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux cfengine_monitord policy is very flexible allowing users to setup their cfengine_monitord processes in as secure a method as possible.
+.PP
+The following file types are defined for cfengine_monitord:
+
+
+.EX
+.PP
+.B cfengine_monitord_exec_t
+.EE
+
+- Set files with the cfengine_monitord_exec_t type, if you want to transition an executable to the cfengine_monitord_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type cfengine_monitord_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), cfengine_monitord(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, cfengine_execd_selinux(8), cfengine_serverd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/cfengine_serverd_selinux.8 serefpolicy-3.7.19/man/man8/cfengine_serverd_selinux.8
--- nsaserefpolicy/man/man8/cfengine_serverd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/cfengine_serverd_selinux.8	2013-03-15 11:39:54.078151726 +0100
@@ -0,0 +1,96 @@
+.TH  "cfengine_serverd_selinux"  "8"  "13-01-04" "cfengine_serverd" "SELinux Policy documentation for cfengine_serverd"
+.SH "NAME"
+cfengine_serverd_selinux \- Security Enhanced Linux Policy for the cfengine_serverd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the cfengine_serverd processes via flexible mandatory access control.
+
+The cfengine_serverd processes execute with the cfengine_serverd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep cfengine_serverd_t
+
+
+.SH "ENTRYPOINTS"
+
+The cfengine_serverd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,cfengine_serverd_exec_t" file types.  The default entrypoint paths for the cfengine_serverd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/cf-serverd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cfengine_serverd policy is very flexible allowing users to setup their cfengine_serverd processes in as secure a method as possible.
+.PP
+The following process types are defined for cfengine_serverd:
+
+.EX
+.B cfengine_serverd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cfengine_serverd_t
+
+can be used to make the process type cfengine_serverd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux cfengine_serverd policy is very flexible allowing users to setup their cfengine_serverd processes in as secure a method as possible.
+.PP
+The following file types are defined for cfengine_serverd:
+
+
+.EX
+.PP
+.B cfengine_serverd_exec_t
+.EE
+
+- Set files with the cfengine_serverd_exec_t type, if you want to transition an executable to the cfengine_serverd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type cfengine_serverd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), cfengine_serverd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, cfengine_execd_selinux(8), cfengine_monitord_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/cgclear_selinux.8 serefpolicy-3.7.19/man/man8/cgclear_selinux.8
--- nsaserefpolicy/man/man8/cgclear_selinux.8	2013-03-15 11:41:11.877153502 +0100
+++ serefpolicy-3.7.19/man/man8/cgclear_selinux.8	2013-03-15 11:39:59.137151842 +0100
@@ -1,25 +1,55 @@
-.TH  "cgclear_selinux"  "8"  "cgclear" "dwalsh@redhat.com" "cgclear SELinux Policy documentation"
+.TH  "cgclear_selinux"  "8"  "13-01-04" "cgclear" "SELinux Policy documentation for cgclear"
 .SH "NAME"
 cgclear_selinux \- Security Enhanced Linux Policy for the cgclear processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cgclear processes via flexible mandatory access control.
 
+The cgclear processes execute with the cgclear_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep cgclear_t
+
+
+.SH "ENTRYPOINTS"
+
+The cgclear_t SELinux type can be entered via the "cgclear_exec_t" file type.  The default entrypoint paths for the cgclear_t domain are the following:"
+
+/sbin/cgclear
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cgclear policy is very flexible allowing users to setup their cgclear processes in as secure a method as possible.
+.PP
+The following process types are defined for cgclear:
+
+.EX
+.B cgclear_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cgclear_t
+
+can be used to make the process type cgclear_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cgclear policy is very flexible allowing users to setup their cgclear processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cgclear:
 
 
 .EX
 .PP
-.B cgclear_exec_t 
+.B cgclear_exec_t
 .EE
 
 - Set files with the cgclear_exec_t type, if you want to transition an executable to the cgclear_t domain.
@@ -27,28 +57,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cgclear policy is very flexible allowing users to setup their cgclear processes in as secure a method as possible.
-.PP 
-The following process types are defined for cgclear:
+.SH "MANAGED FILES"
 
-.EX
-.B cgclear_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cgclear_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cgroup_t
+
+	/cgroup(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +133,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cgclear(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cgclear(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cgconfig_selinux.8 serefpolicy-3.7.19/man/man8/cgconfig_selinux.8
--- nsaserefpolicy/man/man8/cgconfig_selinux.8	2013-03-15 11:41:10.520153471 +0100
+++ serefpolicy-3.7.19/man/man8/cgconfig_selinux.8	2013-03-15 11:39:54.621151739 +0100
@@ -1,37 +1,63 @@
-.TH  "cgconfig_selinux"  "8"  "cgconfig" "dwalsh@redhat.com" "cgconfig SELinux Policy documentation"
+.TH  "cgconfig_selinux"  "8"  "13-01-04" "cgconfig" "SELinux Policy documentation for cgconfig"
 .SH "NAME"
 cgconfig_selinux \- Security Enhanced Linux Policy for the cgconfig processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cgconfig processes via flexible mandatory access control.
 
+The cgconfig processes execute with the cgconfig_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep cgconfig_t
+
+
+.SH "ENTRYPOINTS"
+
+The cgconfig_t SELinux type can be entered via the "cgconfig_exec_t" file type.  The default entrypoint paths for the cgconfig_t domain are the following:"
+
+/sbin/cgconfigparser
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cgconfig policy is very flexible allowing users to setup their cgconfig processes in as secure a method as possible.
+.PP
+The following process types are defined for cgconfig:
+
+.EX
+.B cgconfig_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cgconfig_t
+
+can be used to make the process type cgconfig_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cgconfig policy is very flexible allowing users to setup their cgconfig processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cgconfig:
 
 
 .EX
 .PP
-.B cgconfig_etc_t 
+.B cgconfig_etc_t
 .EE
 
 - Set files with the cgconfig_etc_t type, if you want to store cgconfig files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/etc/sysconfig/cgconfig, /etc/cgconfig.conf
 
 .EX
 .PP
-.B cgconfig_exec_t 
+.B cgconfig_exec_t
 .EE
 
 - Set files with the cgconfig_exec_t type, if you want to transition an executable to the cgconfig_t domain.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B cgconfig_initrc_exec_t 
+.B cgconfig_initrc_exec_t
 .EE
 
 - Set files with the cgconfig_initrc_exec_t type, if you want to transition an executable to the cgconfig_initrc_t domain.
@@ -47,28 +73,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cgconfig policy is very flexible allowing users to setup their cgconfig processes in as secure a method as possible.
-.PP 
-The following process types are defined for cgconfig:
+.SH "MANAGED FILES"
 
-.EX
-.B cgconfig_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cgconfig_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cgroup_t
+
+	/cgroup(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -81,11 +149,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cgconfig(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cgconfig(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cgred_selinux.8 serefpolicy-3.7.19/man/man8/cgred_selinux.8
--- nsaserefpolicy/man/man8/cgred_selinux.8	2013-03-15 11:41:12.071153506 +0100
+++ serefpolicy-3.7.19/man/man8/cgred_selinux.8	2013-03-15 11:40:02.329151915 +0100
@@ -1,25 +1,55 @@
-.TH  "cgred_selinux"  "8"  "cgred" "dwalsh@redhat.com" "cgred SELinux Policy documentation"
+.TH  "cgred_selinux"  "8"  "13-01-04" "cgred" "SELinux Policy documentation for cgred"
 .SH "NAME"
 cgred_selinux \- Security Enhanced Linux Policy for the cgred processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cgred processes via flexible mandatory access control.
 
+The cgred processes execute with the cgred_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep cgred_t
+
+
+.SH "ENTRYPOINTS"
+
+The cgred_t SELinux type can be entered via the "cgred_exec_t" file type.  The default entrypoint paths for the cgred_t domain are the following:"
+
+/sbin/cgrulesengd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cgred policy is very flexible allowing users to setup their cgred processes in as secure a method as possible.
+.PP
+The following process types are defined for cgred:
+
+.EX
+.B cgred_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cgred_t
+
+can be used to make the process type cgred_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cgred policy is very flexible allowing users to setup their cgred processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cgred:
 
 
 .EX
 .PP
-.B cgred_exec_t 
+.B cgred_exec_t
 .EE
 
 - Set files with the cgred_exec_t type, if you want to transition an executable to the cgred_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B cgred_initrc_exec_t 
+.B cgred_initrc_exec_t
 .EE
 
 - Set files with the cgred_initrc_exec_t type, if you want to transition an executable to the cgred_initrc_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B cgred_log_t 
+.B cgred_log_t
 .EE
 
 - Set files with the cgred_log_t type, if you want to treat the data as cgred log data, usually stored under the /var/log directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B cgred_var_run_t 
+.B cgred_var_run_t
 .EE
 
 - Set files with the cgred_var_run_t type, if you want to store the cgred files under the /run directory.
@@ -51,28 +81,82 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cgred policy is very flexible allowing users to setup their cgred processes in as secure a method as possible.
-.PP 
-The following process types are defined for cgred:
+.SH "MANAGED FILES"
 
-.EX
-.B cgred_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cgred_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cgred_log_t
+
+	/var/log/cgrulesengd\.log.*
+.br
+
+.br
+.B cgred_var_run_t
+
+	/var/run/cgred.*
+.br
+
+.br
+.B cgroup_t
+
+	/cgroup(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +169,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cgred(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cgred(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/checkpc_selinux.8 serefpolicy-3.7.19/man/man8/checkpc_selinux.8
--- nsaserefpolicy/man/man8/checkpc_selinux.8	2013-03-15 11:41:12.176153508 +0100
+++ serefpolicy-3.7.19/man/man8/checkpc_selinux.8	2013-03-15 11:40:05.353151984 +0100
@@ -1,25 +1,55 @@
-.TH  "checkpc_selinux"  "8"  "checkpc" "dwalsh@redhat.com" "checkpc SELinux Policy documentation"
+.TH  "checkpc_selinux"  "8"  "13-01-04" "checkpc" "SELinux Policy documentation for checkpc"
 .SH "NAME"
 checkpc_selinux \- Security Enhanced Linux Policy for the checkpc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the checkpc processes via flexible mandatory access control.
 
+The checkpc processes execute with the checkpc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep checkpc_t
+
+
+.SH "ENTRYPOINTS"
+
+The checkpc_t SELinux type can be entered via the "checkpc_exec_t" file type.  The default entrypoint paths for the checkpc_t domain are the following:"
+
+/usr/sbin/checkpc
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux checkpc policy is very flexible allowing users to setup their checkpc processes in as secure a method as possible.
+.PP
+The following process types are defined for checkpc:
+
+.EX
+.B checkpc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a checkpc_t
+
+can be used to make the process type checkpc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux checkpc policy is very flexible allowing users to setup their checkpc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for checkpc:
 
 
 .EX
 .PP
-.B checkpc_exec_t 
+.B checkpc_exec_t
 .EE
 
 - Set files with the checkpc_exec_t type, if you want to transition an executable to the checkpc_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B checkpc_log_t 
+.B checkpc_log_t
 .EE
 
 - Set files with the checkpc_log_t type, if you want to treat the data as checkpc log data, usually stored under the /var/log directory.
@@ -35,28 +65,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux checkpc policy is very flexible allowing users to setup their checkpc processes in as secure a method as possible.
-.PP 
-The following process types are defined for checkpc:
+.SH "MANAGED FILES"
 
-.EX
-.B checkpc_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type checkpc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B checkpc_log_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B print_spool_t
+
+	/var/spool/lpd(/.*)?
+.br
+	/var/spool/cups(/.*)?
+.br
+	/var/spool/cups-pdf(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +141,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), checkpc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), checkpc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/checkpolicy_selinux.8 serefpolicy-3.7.19/man/man8/checkpolicy_selinux.8
--- nsaserefpolicy/man/man8/checkpolicy_selinux.8	2013-03-15 11:41:10.681153474 +0100
+++ serefpolicy-3.7.19/man/man8/checkpolicy_selinux.8	2013-03-15 11:39:54.829151744 +0100
@@ -1,25 +1,55 @@
-.TH  "checkpolicy_selinux"  "8"  "checkpolicy" "dwalsh@redhat.com" "checkpolicy SELinux Policy documentation"
+.TH  "checkpolicy_selinux"  "8"  "13-01-04" "checkpolicy" "SELinux Policy documentation for checkpolicy"
 .SH "NAME"
 checkpolicy_selinux \- Security Enhanced Linux Policy for the checkpolicy processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the checkpolicy processes via flexible mandatory access control.
 
+The checkpolicy processes execute with the checkpolicy_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep checkpolicy_t
+
+
+.SH "ENTRYPOINTS"
+
+The checkpolicy_t SELinux type can be entered via the "checkpolicy_exec_t" file type.  The default entrypoint paths for the checkpolicy_t domain are the following:"
+
+/usr/bin/checkpolicy
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux checkpolicy policy is very flexible allowing users to setup their checkpolicy processes in as secure a method as possible.
+.PP
+The following process types are defined for checkpolicy:
+
+.EX
+.B checkpolicy_t
+.EE
+.PP
+Note:
+.B semanage permissive -a checkpolicy_t
+
+can be used to make the process type checkpolicy_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux checkpolicy policy is very flexible allowing users to setup their checkpolicy processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for checkpolicy:
 
 
 .EX
 .PP
-.B checkpolicy_exec_t 
+.B checkpolicy_exec_t
 .EE
 
 - Set files with the checkpolicy_exec_t type, if you want to transition an executable to the checkpolicy_t domain.
@@ -27,28 +57,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux checkpolicy policy is very flexible allowing users to setup their checkpolicy processes in as secure a method as possible.
-.PP 
-The following process types are defined for checkpolicy:
+.SH "MANAGED FILES"
 
-.EX
-.B checkpolicy_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type checkpolicy_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B semanage_store_t
+
+	/etc/selinux/([^/]*/)?policy(/.*)?
+.br
+	/etc/selinux/([^/]*/)?modules/(active|tmp|previous)(/.*)?
+.br
+	/etc/share/selinux/mls(/.*)?
+.br
+	/etc/share/selinux/targeted(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +131,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), checkpolicy(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), checkpolicy(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/chfn_selinux.8 serefpolicy-3.7.19/man/man8/chfn_selinux.8
--- nsaserefpolicy/man/man8/chfn_selinux.8	2013-03-15 11:41:12.061153506 +0100
+++ serefpolicy-3.7.19/man/man8/chfn_selinux.8	2013-03-15 11:40:01.924151905 +0100
@@ -1,58 +1,198 @@
-.TH  "chfn_selinux"  "8"  "chfn" "dwalsh@redhat.com" "chfn SELinux Policy documentation"
+.TH  "chfn_selinux"  "8"  "13-01-04" "chfn" "SELinux Policy documentation for chfn"
 .SH "NAME"
 chfn_selinux \- Security Enhanced Linux Policy for the chfn processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the chfn processes via flexible mandatory access control.
 
+The chfn processes execute with the chfn_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep chfn_t
+
+
+.SH "ENTRYPOINTS"
+
+The chfn_t SELinux type can be entered via the "chfn_exec_t" file type.  The default entrypoint paths for the chfn_t domain are the following:"
+
+/usr/bin/chfn, /usr/bin/chsh
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux chfn policy is very flexible allowing users to setup their chfn processes in as secure a method as possible.
+.PP
+The following process types are defined for chfn:
+
+.EX
+.B chfn_t
+.EE
+.PP
+Note:
+.B semanage permissive -a chfn_t
+
+can be used to make the process type chfn_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux chfn policy is very flexible allowing users to setup their chfn processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for chfn:
 
 
 .EX
 .PP
-.B chfn_exec_t 
+.B chfn_exec_t
 .EE
 
 - Set files with the chfn_exec_t type, if you want to transition an executable to the chfn_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/chsh, /usr/bin/chfn
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux chfn policy is very flexible allowing users to setup their chfn processes in as secure a method as possible.
-.PP 
-The following process types are defined for chfn:
+.SH "MANAGED FILES"
 
-.EX
-.B chfn_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type chfn_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_t
+
+	/etc/.*
+.br
+	/var/db/.*\.db
+.br
+	/usr/etc(/.*)?
+.br
+	/var/ftp/etc(/.*)?
+.br
+	/usr/local/etc(/.*)?
+.br
+	/var/lib/openshift/.limits.d(/.*)?
+.br
+	/var/lib/openshift/.openshift-proxy.d(/.*)?
+.br
+	/var/lib/openshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/lib/stickshift/.limits.d(/.*)?
+.br
+	/var/lib/stickshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/named/chroot/etc(/.*)?
+.br
+	/etc/ipsec\.d/examples(/.*)?
+.br
+	/var/spool/postfix/etc(/.*)?
+.br
+	/etc
+.br
+	/etc/localtime
+.br
+	/etc/cups/client\.conf
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +205,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), chfn(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), chfn(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/chkpwd_selinux.8 serefpolicy-3.7.19/man/man8/chkpwd_selinux.8
--- nsaserefpolicy/man/man8/chkpwd_selinux.8	2013-03-15 11:41:12.081153506 +0100
+++ serefpolicy-3.7.19/man/man8/chkpwd_selinux.8	2013-03-15 11:40:02.495151918 +0100
@@ -1,58 +1,112 @@
-.TH  "chkpwd_selinux"  "8"  "chkpwd" "dwalsh@redhat.com" "chkpwd SELinux Policy documentation"
+.TH  "chkpwd_selinux"  "8"  "13-01-04" "chkpwd" "SELinux Policy documentation for chkpwd"
 .SH "NAME"
 chkpwd_selinux \- Security Enhanced Linux Policy for the chkpwd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the chkpwd processes via flexible mandatory access control.
 
+The chkpwd processes execute with the chkpwd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep chkpwd_t
+
+
+.SH "ENTRYPOINTS"
+
+The chkpwd_t SELinux type can be entered via the "chkpwd_exec_t" file type.  The default entrypoint paths for the chkpwd_t domain are the following:"
+
+/sbin/unix_chkpwd, /sbin/unix_verify, /usr/sbin/validate
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux chkpwd policy is very flexible allowing users to setup their chkpwd processes in as secure a method as possible.
+.PP
+The following process types are defined for chkpwd:
+
+.EX
+.B chkpwd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a chkpwd_t
+
+can be used to make the process type chkpwd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux chkpwd policy is very flexible allowing users to setup their chkpwd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for chkpwd:
 
 
 .EX
 .PP
-.B chkpwd_exec_t 
+.B chkpwd_exec_t
 .EE
 
 - Set files with the chkpwd_exec_t type, if you want to transition an executable to the chkpwd_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/unix_chkpwd, /usr/sbin/validate, /sbin/unix_verify
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux chkpwd policy is very flexible allowing users to setup their chkpwd processes in as secure a method as possible.
-.PP 
-The following process types are defined for chkpwd:
+.SH "MANAGED FILES"
 
-.EX
-.B chkpwd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type chkpwd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), chkpwd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), chkpwd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/chrome_sandbox_nacl_selinux.8 serefpolicy-3.7.19/man/man8/chrome_sandbox_nacl_selinux.8
--- nsaserefpolicy/man/man8/chrome_sandbox_nacl_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/chrome_sandbox_nacl_selinux.8	2013-03-15 11:40:04.378151961 +0100
@@ -0,0 +1,136 @@
+.TH  "chrome_sandbox_nacl_selinux"  "8"  "13-01-04" "chrome_sandbox_nacl" "SELinux Policy documentation for chrome_sandbox_nacl"
+.SH "NAME"
+chrome_sandbox_nacl_selinux \- Security Enhanced Linux Policy for the chrome_sandbox_nacl processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the chrome_sandbox_nacl processes via flexible mandatory access control.
+
+The chrome_sandbox_nacl processes execute with the chrome_sandbox_nacl_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep chrome_sandbox_nacl_t
+
+
+.SH "ENTRYPOINTS"
+
+The chrome_sandbox_nacl_t SELinux type can be entered via the "bin_t,chrome_sandbox_nacl_exec_t" file types.  The default entrypoint paths for the chrome_sandbox_nacl_t domain are the following:"
+
+/bin/.*, /opt/(.*/)?bin(/.*)?, /usr/(.*/)?Bin(/.*)?, /usr/(.*/)?bin(/.*)?, /usr/(.*/)?sbin(/.*)?, /opt/(.*/)?sbin(/.*)?, /opt/(.*/)?libexec(/.*)?, /sbin/.*, /usr/lib(64)?/dpkg/.+, /usr/lib(64)?/rpm/rpmd, /usr/lib(64)?/rpm/rpmk, /usr/lib(64)?/rpm/rpmv, /usr/lib(64)?/rpm/rpmq, /usr/lib(64)?/ipsec/.*, /usr/lib(.*/)?bin(/.*)?, /usr/lib(64)?/cups(/.*)?, /usr/lib(.*/)?sbin(/.*)?, /usr/lib(64)?/xfce4(/.*)?, /usr/lib(64)?/sftp-server, /usr/lib(64)?/xen/bin(/.*)?, /usr/lib(64)?/courier(/.*)?, /usr/lib(64)?/apt/methods.+, /usr/lib(64)?/pm-utils(/.*)?, /usr/lib(64)?/news/bin(/.*)?, /usr/lib(64)?/cyrus-imapd/.*, /usr/lib(64)?/debug/bin(/.*)?, /usr/lib(64)?/debug/sbin(/.*)?, /usr/lib(64)?/misc/sftp-server, /usr/lib(64)?/portage/bin(/.*)?, /usr/lib(64)?/mailman/bin(/.*)?, /usr/lib(64)?/emacsen-common/.*, /usr/lib(64)?/mailman/mail(/.*)?, /usr/lib(64)?/debug/usr/bin(/.*)?, /usr/lib(64)?/nspluginwrapper/np.*, /usr/lib(64)?/nagios/plugins(/.*)?, /usr/lib(64)?/[^/]*/run-mozilla\.sh, /usr/lib(64)?/debug/usr/sbin(/.*)?, /usr/lib(64)?/vte/gnome-pty-helper, /usr/lib(64)?/gimp/.*/plug-ins(/.*)?, /usr/lib(64)?/netsaint/plugins(/.*)?, /usr/lib(64)?/debug/usr/libexec(/.*)?, /usr/lib(64)?/chromium-browser/chrome, /usr/lib(64)?/ConsoleKit/scripts(/.*)?, /usr/lib(64)?/pgsql/test/regress/.*\.sh, /usr/lib(64)?/[^/]*firefox[^/]*/firefox, /usr/lib(64)?/[^/]*/mozilla-xremote-client, /usr/lib(64)?/ConsoleKit/run-session.d(/.*)?, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird, /usr/lib(64)?/thunderbird.*/mozilla-xremote-client, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird-bin, /usr/lib(64)?/[^/]*thunderbird[^/]*/open-browser\.sh, /etc/gdm/[^/]+, /etc/gdm/[^/]+/.*, /etc/cron.daily(/.*)?, /etc/cron.hourly(/.*)?, /etc/cron.weekly(/.*)?, /etc/cron.monthly(/.*)?, /usr/lib/.*/program(/.*)?, /lib/udev/[^/]*, /etc/avahi/.*\.action, /usr/lib/qt.*/bin(/.*)?, /usr/lib64/.*/program(/.*)?, /usr/lib/yp/.+, /lib64/udev/[^/]*, /var/ftp/bin(/.*)?, /usr/libexec(/.*)?, /etc/kde/env(/.*)?, /etc/profile.d(/.*)?, /etc/hotplug/.*rc, /etc/hotplug/.*agent, /usr/lib64/yp/.+, /var/qmail/bin(/.*)?, /usr/lib/fence(/.*)?, /etc/X11/xinit(/.*)?, /etc/netplug\.d(/.*)?, /usr/local/lib(64)?/ipsec/.*, /usr/X11R6/lib(64)?/X11/xkb/xkbcomp, /etc/ppp/ip-up\..*, /etc/cipe/ip-up.*, /etc/pm/power\.d(/.*)?, /etc/pm/sleep\.d(/.*)?, /var/mailman/bin(/.*)?, /etc/xen/scripts(/.*)?, /etc/ppp/ipv6-up\..*, /etc/ppp/ip-down\..*, /etc/cipe/ip-down.*, /usr/share/hplip/[^/]*, /etc/vmware-tools(/.*)?, /etc/kde/shutdown(/.*)?, /etc/acpi/actions(/.*)?, /etc/pki/tls/misc(/.*)?, /usr/local/Printer(/.*)?, /usr/local/Brother(/.*)?, /opt/google/chrome(/.*)?, /usr/lib/bluetooth(/.*)?, /usr/lib/ruby/gems(/.*)?/helper-scripts(/.*)?, /usr/share/debconf/.+, /etc/ppp/ipv6-down\..*, /usr/share/cluster/.*\.sh, /usr/share/sectool/.*\.py, /usr/share/ssl/misc(/.*)?, /usr/share/e16/misc(/.*)?, /usr/lib/ccache/bin(/.*)?, /etc/racoon/scripts(/.*)?, /usr/lib/ruby/gems/.*/agents(/.*)?, /usr/local/Brother/(.*/)?inf/setup.*, /usr/local/Brother/(.*/)?inf/brprintconf.*, /usr/share/mc/extfs/.*, /etc/mcelog/triggers(/.*)?, /etc/dhcp/dhclient\.d(/.*)?, /emul/ia32-linux/bin(/.*)?, /usr/lib64/bluetooth(/.*)?, /emul/ia32-linux/usr(/.*)?/bin(/.*)?, /emul/ia32-linux/usr(/.*)?/Bin(/.*)?, /emul/ia32-linux/usr(/.*)?/sbin(/.*)?, /usr/lib/wicd/monitor.py, /usr/share/createrepo(/.*)?, /emul/ia32-linux/sbin(/.*)?, /usr/share/hal/scripts(/.*)?, /usr/lib/vmware-tools/(s)?bin64(/.*)?, /usr/lib/vmware-tools/(s)?bin32(/.*)?, /etc/gdm/XKeepsCrashing[^/]*, /usr/lib/oracle/xe/apps(/.*)?, /usr/share/smolt/client(/.*)?, /usr/share/Modules/init(/.*)?, /usr/share/apr-0/build/[^/]+\.sh, /usr/share/shorewall-perl(/.*)?, /usr/share/shorewall-lite(/.*)?, /usr/share/turboprint/lib(/.*)?, /usr/share/vhostmd/scripts(/.*)?, /usr/share/shorewall6-lite(/.*)?, /usr/share/shorewall-shell(/.*)?, /etc/ConsoleKit/run-seat\.d(/.*)?, /usr/share/sandbox/sandboxX.sh, /usr/share/denyhosts/plugins(/.*)?, /usr/share/denyhosts/scripts(/.*)?, /emul/ia32-linux/usr/libexec(/.*)?, /usr/share/PackageKit/helpers(/.*)?, /etc/ConsoleKit/run-session\.d(/.*)?, /etc/hotplug\.d/default/default.*, /usr/share/cluster/checkquorum.*, /usr/local/linuxprinter/filters(/.*)?, /opt/gutenprint/cups/lib/filter(/.*)?, /usr/share/system-config-network(/netconfig)?/[^/]+\.py, /etc/sysconfig/network-scripts/net.*, /etc/sysconfig/network-scripts/ifup.*, /etc/sysconfig/network-scripts/init.*, /etc/sysconfig/network-scripts/ifdown.*, /opt/OpenPrinting-Gutenprint/cups/lib/filter(/.*)?, /usr/share/gedit-2/plugins/externaltools/tools(/.*)?, /bin, /sbin, /dev/MAKEDEV, /var/qmail/rc, /var/qmail/bin, /etc/mail/make, /bin/mountpoint, /lib/udev/scsi_id, /sbin/mkfs\.cramfs, /etc/xen/qemu-ifup, /etc/sysconfig/init, /etc/apcupsd/commok, /etc/sysconfig/crond, /etc/X11/xdm/Xsetup_0, /etc/init\.d/functions, /etc/apcupsd/changeme, /etc/apcupsd/onbattery, /etc/sysconfig/libvirtd, /etc/apcupsd/offbattery, /etc/apcupsd/apccontrol, /etc/X11/xdm/GiveConsole, /etc/X11/xdm/TakeConsole, /etc/apcupsd/commfailure, /etc/sysconfig/netconsole, /etc/rc\.d/init\.d/functions, /etc/apcupsd/masterconnect, /etc/apcupsd/mastertimeout, /usr/share/pydict/pydict\.py, /usr/share/clamav/clamd-gen, /sbin/insmod_ksymoops_clean, /etc/mgetty\+sendfax/new_fax, /etc/sysconfig/readonly-root, /usr/share/cvs/contrib/rcs2log, /usr/share/hwbrowser/hwbrowser, /usr/share/shorewall/getparams, /usr/share/cluster/SAPDatabase, /usr/share/cluster/SAPInstance, /usr/share/apr-0/build/libtool, /etc/hotplug/hotplug\.functions, /usr/share/texmf/web2c/mktexdir, /usr/share/texmf/web2c/mktexnam, /usr/share/texmf/web2c/mktexupd, /usr/share/shorewall/configpath, /etc/mcelog/cache-error-trigger, /usr/share/shorewall/compiler\.pl, /usr/share/dayplanner/dayplanner, /usr/libexec/openssh/sftp-server, /usr/share/texmf/texconfig/tcfmgr, /usr/share/clamav/freshclam-sleep, /usr/share/cluster/ocf-shellfuncs, /usr/share/cluster/svclib_nfslock, /usr/share/pwlib/make/ptlib-config, /usr/share/fedora-usermgmt/wrapper, /usr/share/printconf/util/print\.py, /etc/pki/tls/certs/make-dummy-cert, /usr/share/rhn/rhn_applet/applet\.py, /usr/share/authconfig/authconfig\.py, /usr/share/spamassassin/sa-update\.cron, /usr/share/selinux/devel/policygentool, /usr/share/gnucash/finance-quote-check, /usr/share/cluster/fence_scsi_check\.pl, /usr/share/switchdesk/switchdesk-gui\.py, /usr/share/authconfig/authconfig-tui\.py, /usr/share/authconfig/authconfig-gtk\.py, /usr/share/gnucash/finance-quote-helper, /usr/share/gitolite/hooks/common/update, /usr/share/system-config-services/gui\.py, /lib/security/pam_krb5/pam_krb5_storetmp, /usr/share/system-config-netboot/pxeos\.py, /usr/share/system-config-printer/applet\.py, /usr/share/system-config-nfs/nfs-export\.py, /usr/share/system-config-selinux/polgen\.py, /lib64/security/pam_krb5/pam_krb5_storetmp, /usr/share/PackageKit/pk-upgrade-distro\.sh, /usr/share/system-config-netboot/pxeboot\.py, /usr/share/rhn/rhn_applet/needed-packages\.py, /usr/share/system-logviewer/system-logviewer\.py, /usr/share/system-config-network/neat-control\.py, /usr/share/system-config-services/serviceconf\.py, /usr/share/hal/device-manager/hal-device-manager, /usr/share/system-config-lvm/system-config-lvm\.py, /usr/share/system-config-nfs/system-config-nfs\.py, /usr/share/system-config-httpd/system-config-httpd, /usr/share/system-config-mouse/system-config-mouse, /usr/share/system-config-users/system-config-users, /usr/share/system-config-date/system-config-date\.py, /usr/share/gitolite/hooks/gitolite-admin/post-update, /usr/share/system-config-samba/system-config-samba\.py, /usr/share/system-config-display/system-config-display, /usr/share/system-config-keyboard/system-config-keyboard, /usr/share/system-config-language/system-config-language, /usr/share/system-config-services/system-config-services, /usr/share/system-config-netboot/system-config-netboot\.py, /usr/share/system-config-selinux/system-config-selinux\.py, /usr/share/system-config-soundcard/system-config-soundcard, /usr/share/system-config-rootpassword/system-config-rootpassword, /usr/share/system-config-securitylevel/system-config-securitylevel\.py, /opt/google/chrome/nacl_helper_bootstrap, /usr/lib/chromium-browser/nacl_helper_bootstrap
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux chrome_sandbox_nacl policy is very flexible allowing users to setup their chrome_sandbox_nacl processes in as secure a method as possible.
+.PP
+The following process types are defined for chrome_sandbox_nacl:
+
+.EX
+.B chrome_sandbox_nacl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a chrome_sandbox_nacl_t
+
+can be used to make the process type chrome_sandbox_nacl_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux chrome_sandbox_nacl policy is very flexible allowing users to setup their chrome_sandbox_nacl processes in as secure a method as possible.
+.PP
+The following file types are defined for chrome_sandbox_nacl:
+
+
+.EX
+.PP
+.B chrome_sandbox_nacl_exec_t
+.EE
+
+- Set files with the chrome_sandbox_nacl_exec_t type, if you want to transition an executable to the chrome_sandbox_nacl_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type chrome_sandbox_nacl_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B chrome_sandbox_tmpfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), chrome_sandbox_nacl(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, chrome_sandbox_selinux(8), chrome_sandbox_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/chrome_sandbox_selinux.8 serefpolicy-3.7.19/man/man8/chrome_sandbox_selinux.8
--- nsaserefpolicy/man/man8/chrome_sandbox_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/chrome_sandbox_selinux.8	2013-03-15 11:40:03.246151936 +0100
@@ -0,0 +1,192 @@
+.TH  "chrome_sandbox_selinux"  "8"  "13-01-04" "chrome_sandbox" "SELinux Policy documentation for chrome_sandbox"
+.SH "NAME"
+chrome_sandbox_selinux \- Security Enhanced Linux Policy for the chrome_sandbox processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the chrome_sandbox processes via flexible mandatory access control.
+
+The chrome_sandbox processes execute with the chrome_sandbox_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep chrome_sandbox_t
+
+
+.SH "ENTRYPOINTS"
+
+The chrome_sandbox_t SELinux type can be entered via the "chrome_sandbox_exec_t" file type.  The default entrypoint paths for the chrome_sandbox_t domain are the following:"
+
+/usr/lib(64)?/chromium-browser/chrome-sandbox, /opt/google/chrome/chrome-sandbox
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux chrome_sandbox policy is very flexible allowing users to setup their chrome_sandbox processes in as secure a method as possible.
+.PP
+The following process types are defined for chrome_sandbox:
+
+.EX
+.B chrome_sandbox_t, chrome_sandbox_nacl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a chrome_sandbox_t
+
+can be used to make the process type chrome_sandbox_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux chrome_sandbox policy is very flexible allowing users to setup their chrome_sandbox processes in as secure a method as possible.
+.PP
+The following file types are defined for chrome_sandbox:
+
+
+.EX
+.PP
+.B chrome_sandbox_exec_t
+.EE
+
+- Set files with the chrome_sandbox_exec_t type, if you want to transition an executable to the chrome_sandbox_t domain.
+
+
+.EX
+.PP
+.B chrome_sandbox_nacl_exec_t
+.EE
+
+- Set files with the chrome_sandbox_nacl_exec_t type, if you want to transition an executable to the chrome_sandbox_nacl_t domain.
+
+
+.EX
+.PP
+.B chrome_sandbox_tmp_t
+.EE
+
+- Set files with the chrome_sandbox_tmp_t type, if you want to store chrome sandbox temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B chrome_sandbox_tmpfs_t
+.EE
+
+- Set files with the chrome_sandbox_tmpfs_t type, if you want to store chrome sandbox files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type chrome_sandbox_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cgroup_t
+
+	/cgroup(/.*)?
+.br
+
+.br
+.B chrome_sandbox_tmp_t
+
+
+.br
+.B chrome_sandbox_tmpfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), chrome_sandbox(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, chrome_sandbox_nacl_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/chronyd_selinux.8 serefpolicy-3.7.19/man/man8/chronyd_selinux.8
--- nsaserefpolicy/man/man8/chronyd_selinux.8	2013-03-15 11:41:09.942153457 +0100
+++ serefpolicy-3.7.19/man/man8/chronyd_selinux.8	2013-03-15 11:39:54.100151727 +0100
@@ -1,31 +1,55 @@
-.TH  "chronyd_selinux"  "8"  "chronyd" "dwalsh@redhat.com" "chronyd SELinux Policy documentation"
+.TH  "chronyd_selinux"  "8"  "13-01-04" "chronyd" "SELinux Policy documentation for chronyd"
 .SH "NAME"
 chronyd_selinux \- Security Enhanced Linux Policy for the chronyd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the chronyd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B chronyd
-(Chrony NTP background daemon)
-processes via flexible mandatory access
-control.  
+The chronyd processes execute with the chronyd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep chronyd_t
+
+
+.SH "ENTRYPOINTS"
+
+The chronyd_t SELinux type can be entered via the "chronyd_exec_t" file type.  The default entrypoint paths for the chronyd_t domain are the following:"
+
+/usr/sbin/chronyd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
+.PP
+The following process types are defined for chronyd:
+
+.EX
+.B chronyd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a chronyd_t
+
+can be used to make the process type chronyd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for chronyd:
 
 
 .EX
 .PP
-.B chronyd_exec_t 
+.B chronyd_exec_t
 .EE
 
 - Set files with the chronyd_exec_t type, if you want to transition an executable to the chronyd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B chronyd_initrc_exec_t 
+.B chronyd_initrc_exec_t
 .EE
 
 - Set files with the chronyd_initrc_exec_t type, if you want to transition an executable to the chronyd_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B chronyd_keys_t 
+.B chronyd_keys_t
 .EE
 
 - Set files with the chronyd_keys_t type, if you want to treat the files as chronyd keys data.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B chronyd_tmpfs_t 
+.B chronyd_tmpfs_t
 .EE
 
 - Set files with the chronyd_tmpfs_t type, if you want to store chronyd files on a tmpfs file system.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B chronyd_var_lib_t 
+.B chronyd_var_lib_t
 .EE
 
 - Set files with the chronyd_var_lib_t type, if you want to store the chronyd files under the /var/lib directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B chronyd_var_log_t 
+.B chronyd_var_log_t
 .EE
 
 - Set files with the chronyd_var_log_t type, if you want to treat the data as chronyd var log data, usually stored under the /var/log directory.
@@ -73,7 +97,7 @@
 
 .EX
 .PP
-.B chronyd_var_run_t 
+.B chronyd_var_run_t
 .EE
 
 - Set files with the chronyd_var_run_t type, if you want to store the chronyd files under the /run directory.
@@ -81,51 +105,113 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for chronyd:
 
 .EX
 .TP 5
-.B chronyd_port_t 
+.B chronyd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 323
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
-.PP 
-The following process types are defined for chronyd:
+.SH "MANAGED FILES"
 
-.EX
-.B chronyd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type chronyd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B chronyd_tmpfs_t
+
+
+.br
+.B chronyd_var_lib_t
+
+	/var/lib/chrony(/.*)?
+.br
+
+.br
+.B chronyd_var_log_t
+
+	/var/log/chrony(/.*)?
+.br
+
+.br
+.B chronyd_var_run_t
+
+	/var/run/chronyd\.pid
+.br
+
+.br
+.B gpsd_tmpfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -141,11 +227,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), chronyd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), chronyd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ciped_selinux.8 serefpolicy-3.7.19/man/man8/ciped_selinux.8
--- nsaserefpolicy/man/man8/ciped_selinux.8	2013-03-15 11:41:12.061153506 +0100
+++ serefpolicy-3.7.19/man/man8/ciped_selinux.8	2013-03-15 11:40:01.951151906 +0100
@@ -1,25 +1,55 @@
-.TH  "ciped_selinux"  "8"  "ciped" "dwalsh@redhat.com" "ciped SELinux Policy documentation"
+.TH  "ciped_selinux"  "8"  "13-01-04" "ciped" "SELinux Policy documentation for ciped"
 .SH "NAME"
 ciped_selinux \- Security Enhanced Linux Policy for the ciped processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ciped processes via flexible mandatory access control.
 
+The ciped processes execute with the ciped_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ciped_t
+
+
+.SH "ENTRYPOINTS"
+
+The ciped_t SELinux type can be entered via the "ciped_exec_t" file type.  The default entrypoint paths for the ciped_t domain are the following:"
+
+/usr/sbin/ciped.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ciped policy is very flexible allowing users to setup their ciped processes in as secure a method as possible.
+.PP
+The following process types are defined for ciped:
+
+.EX
+.B ciped_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ciped_t
+
+can be used to make the process type ciped_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ciped policy is very flexible allowing users to setup their ciped processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ciped:
 
 
 .EX
 .PP
-.B ciped_exec_t 
+.B ciped_exec_t
 .EE
 
 - Set files with the ciped_exec_t type, if you want to transition an executable to the ciped_t domain.
@@ -27,28 +57,64 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ciped policy is very flexible allowing users to setup their ciped processes in as secure a method as possible.
-.PP 
-The following process types are defined for ciped:
+.SH "MANAGED FILES"
 
-.EX
-.B ciped_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ciped_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +127,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ciped(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ciped(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/clamd_selinux.8 serefpolicy-3.7.19/man/man8/clamd_selinux.8
--- nsaserefpolicy/man/man8/clamd_selinux.8	2013-03-15 11:41:12.111153507 +0100
+++ serefpolicy-3.7.19/man/man8/clamd_selinux.8	2013-03-15 11:40:03.567151943 +0100
@@ -1,36 +1,87 @@
-.TH  "clamd_selinux"  "8"  "clamd" "dwalsh@redhat.com" "clamd SELinux Policy documentation"
+.TH  "clamd_selinux"  "8"  "13-01-04" "clamd" "SELinux Policy documentation for clamd"
 .SH "NAME"
 clamd_selinux \- Security Enhanced Linux Policy for the clamd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the clamd processes via flexible mandatory access control.
 
+The clamd processes execute with the clamd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep clamd_t
+
+
+.SH "ENTRYPOINTS"
+
+The clamd_t SELinux type can be entered via the "clamd_exec_t" file type.  The default entrypoint paths for the clamd_t domain are the following:"
+
+/usr/sbin/clamd, /usr/sbin/clamav-milter
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
+.PP
+The following process types are defined for clamd:
+
+.EX
+.B clamd_t, clamscan_t
+.EE
+.PP
+Note:
+.B semanage permissive -a clamd_t
+
+can be used to make the process type clamd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  clamd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run clamd with the tightest access possible.
 
 
 .PP
-If you want to allow clamd to use JIT compile, you must turn on the clamd_use_jit boolean.
+If you want to allow clamd to use JIT compiler, you must turn on the clamd_use_jit boolean.
+
+.EX
+.B setsebool -P clamd_use_jit 1
+.EE
+
+.PP
+If you want to allow clamscan to non security files on a system, you must turn on the clamscan_can_scan_system boolean.
+
+.EX
+.B setsebool -P clamscan_can_scan_system 1
+.EE
+
+.PP
+If you want to allow clamd to use JIT compiler, you must turn on the clamd_use_jit boolean.
 
 .EX
 .B setsebool -P clamd_use_jit 1
 .EE
 
+.PP
+If you want to allow clamscan to non security files on a system, you must turn on the clamscan_can_scan_system boolean.
+
+.EX
+.B setsebool -P clamscan_can_scan_system 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for clamd:
 
 
 .EX
 .PP
-.B clamd_etc_t 
+.B clamd_etc_t
 .EE
 
 - Set files with the clamd_etc_t type, if you want to store clamd files in the /etc directories.
@@ -38,19 +89,15 @@
 
 .EX
 .PP
-.B clamd_exec_t 
+.B clamd_exec_t
 .EE
 
 - Set files with the clamd_exec_t type, if you want to transition an executable to the clamd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/clamd, /usr/sbin/clamav-milter
 
 .EX
 .PP
-.B clamd_initrc_exec_t 
+.B clamd_initrc_exec_t
 .EE
 
 - Set files with the clamd_initrc_exec_t type, if you want to transition an executable to the clamd_initrc_t domain.
@@ -58,7 +105,7 @@
 
 .EX
 .PP
-.B clamd_tmp_t 
+.B clamd_tmp_t
 .EE
 
 - Set files with the clamd_tmp_t type, if you want to store clamd temporary files in the /tmp directories.
@@ -66,87 +113,159 @@
 
 .EX
 .PP
-.B clamd_var_lib_t 
+.B clamd_var_lib_t
 .EE
 
 - Set files with the clamd_var_lib_t type, if you want to store the clamd files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/clamd.*, /var/clamav(/.*)?, /var/lib/clamav(/.*)?
 
 .EX
 .PP
-.B clamd_var_log_t 
+.B clamd_var_log_t
 .EE
 
 - Set files with the clamd_var_log_t type, if you want to treat the data as clamd var log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/clamav.*, /var/log/clamd.*
 
 .EX
 .PP
-.B clamd_var_run_t 
+.B clamd_var_run_t
 .EE
 
 - Set files with the clamd_var_run_t type, if you want to store the clamd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/clamd.*, /var/run/amavis(d)?/clamd\.pid, /var/spool/amavisd/clamd\.sock, /var/run/clamav.*, /var/spool/MailScanner(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for clamd:
 
 .EX
 .TP 5
-.B clamd_port_t 
+.B clamd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 3310
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
-.PP 
-The following process types are defined for clamd:
+.SH "MANAGED FILES"
 
-.EX
-.B clamd_t, clamscan_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type clamd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B amavis_var_run_t
+
+	/var/run/amavis(d)?(/.*)?
+.br
+
+.br
+.B antivirus_db_t
+
+	/var/opt/f-secure(/.*)?
+.br
+
+.br
+.B clamd_tmp_t
+
+
+.br
+.B clamd_var_lib_t
+
+	/var/clamav(/.*)?
+.br
+	/var/lib/clamd.*
+.br
+	/var/lib/clamav(/.*)?
+.br
+
+.br
+.B clamd_var_log_t
+
+	/var/log/clamd.*
+.br
+	/var/log/clamav.*
+.br
+
+.br
+.B clamd_var_run_t
+
+	/var/run/clamd.*
+.br
+	/var/run/clamav.*
+.br
+	/var/run/amavis(d)?/clamd\.pid
+.br
+	/var/spool/MailScanner(/.*)?
+.br
+	/var/spool/amavisd/clamd\.sock
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -165,12 +284,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), clamd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), clamd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), clamscan_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/clamscan_selinux.8 serefpolicy-3.7.19/man/man8/clamscan_selinux.8
--- nsaserefpolicy/man/man8/clamscan_selinux.8	2013-03-15 11:41:12.140153508 +0100
+++ serefpolicy-3.7.19/man/man8/clamscan_selinux.8	2013-03-15 11:40:04.068151954 +0100
@@ -1,37 +1,81 @@
-.TH  "clamscan_selinux"  "8"  "clamscan" "dwalsh@redhat.com" "clamscan SELinux Policy documentation"
+.TH  "clamscan_selinux"  "8"  "13-01-04" "clamscan" "SELinux Policy documentation for clamscan"
 .SH "NAME"
 clamscan_selinux \- Security Enhanced Linux Policy for the clamscan processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the clamscan processes via flexible mandatory access control.
 
+The clamscan processes execute with the clamscan_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep clamscan_t
+
+
+.SH "ENTRYPOINTS"
+
+The clamscan_t SELinux type can be entered via the "clamscan_exec_t" file type.  The default entrypoint paths for the clamscan_t domain are the following:"
+
+/usr/bin/clamscan, /usr/bin/clamdscan
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux clamscan policy is very flexible allowing users to setup their clamscan processes in as secure a method as possible.
+.PP
+The following process types are defined for clamscan:
+
+.EX
+.B clamscan_t
+.EE
+.PP
+Note:
+.B semanage permissive -a clamscan_t
+
+can be used to make the process type clamscan_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  clamscan policy is extremely flexible and has several booleans that allow you to manipulate the policy and run clamscan with the tightest access possible.
+
+
+.PP
+If you want to allow clamscan to non security files on a system, you must turn on the clamscan_can_scan_system boolean.
+
+.EX
+.B setsebool -P clamscan_can_scan_system 1
+.EE
+
+.PP
+If you want to allow clamscan to non security files on a system, you must turn on the clamscan_can_scan_system boolean.
+
+.EX
+.B setsebool -P clamscan_can_scan_system 1
+.EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux clamscan policy is very flexible allowing users to setup their clamscan processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for clamscan:
 
 
 .EX
 .PP
-.B clamscan_exec_t 
+.B clamscan_exec_t
 .EE
 
 - Set files with the clamscan_exec_t type, if you want to transition an executable to the clamscan_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/clamdscan, /usr/bin/clamscan
 
 .EX
 .PP
-.B clamscan_tmp_t 
+.B clamscan_tmp_t
 .EE
 
 - Set files with the clamscan_tmp_t type, if you want to store clamscan temporary files in the /tmp directories.
@@ -39,28 +83,90 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux clamscan policy is very flexible allowing users to setup their clamscan processes in as secure a method as possible.
-.PP 
-The following process types are defined for clamscan:
+.SH "MANAGED FILES"
 
-.EX
-.B clamscan_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type clamscan_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B amavis_spool_t
+
+	/var/spool/amavisd(/.*)?
+.br
+
+.br
+.B antivirus_db_t
+
+	/var/opt/f-secure(/.*)?
+.br
+
+.br
+.B clamd_var_lib_t
+
+	/var/clamav(/.*)?
+.br
+	/var/lib/clamd.*
+.br
+	/var/lib/clamav(/.*)?
+.br
+
+.br
+.B clamscan_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -72,12 +178,18 @@
 .B semanage module
 can also be used to enable/disable/install/remove policy modules.
 
+.B semanage boolean
+can also be used to manipulate the booleans
+
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), clamscan(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), clamscan(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/clogd_selinux.8 serefpolicy-3.7.19/man/man8/clogd_selinux.8
--- nsaserefpolicy/man/man8/clogd_selinux.8	2013-03-15 11:41:10.605153473 +0100
+++ serefpolicy-3.7.19/man/man8/clogd_selinux.8	2013-03-15 11:39:54.746151742 +0100
@@ -1,31 +1,55 @@
-.TH  "clogd_selinux"  "8"  "clogd" "dwalsh@redhat.com" "clogd SELinux Policy documentation"
+.TH  "clogd_selinux"  "8"  "13-01-04" "clogd" "SELinux Policy documentation for clogd"
 .SH "NAME"
 clogd_selinux \- Security Enhanced Linux Policy for the clogd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the clogd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B clogd
-(clogd - clustered mirror log server)
-processes via flexible mandatory access
-control.  
+The clogd processes execute with the clogd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep clogd_t
+
+
+.SH "ENTRYPOINTS"
+
+The clogd_t SELinux type can be entered via the "clogd_exec_t" file type.  The default entrypoint paths for the clogd_t domain are the following:"
+
+/usr/sbin/clogd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux clogd policy is very flexible allowing users to setup their clogd processes in as secure a method as possible.
+.PP
+The following process types are defined for clogd:
+
+.EX
+.B clogd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a clogd_t
+
+can be used to make the process type clogd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux clogd policy is very flexible allowing users to setup their clogd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for clogd:
 
 
 .EX
 .PP
-.B clogd_exec_t 
+.B clogd_exec_t
 .EE
 
 - Set files with the clogd_exec_t type, if you want to transition an executable to the clogd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B clogd_tmpfs_t 
+.B clogd_tmpfs_t
 .EE
 
 - Set files with the clogd_tmpfs_t type, if you want to store clogd files on a tmpfs file system.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B clogd_var_run_t 
+.B clogd_var_run_t
 .EE
 
 - Set files with the clogd_var_run_t type, if you want to store the clogd files under the /run directory.
@@ -49,28 +73,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux clogd policy is very flexible allowing users to setup their clogd processes in as secure a method as possible.
-.PP 
-The following process types are defined for clogd:
+.SH "MANAGED FILES"
 
-.EX
-.B clogd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type clogd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B clogd_tmpfs_t
+
+
+.br
+.B clogd_var_run_t
+
+	/var/run/clogd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +153,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), clogd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), clogd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/clvmd_selinux.8 serefpolicy-3.7.19/man/man8/clvmd_selinux.8
--- nsaserefpolicy/man/man8/clvmd_selinux.8	2013-03-15 11:41:11.837153501 +0100
+++ serefpolicy-3.7.19/man/man8/clvmd_selinux.8	2013-03-15 11:39:57.783151811 +0100
@@ -1,25 +1,55 @@
-.TH  "clvmd_selinux"  "8"  "clvmd" "dwalsh@redhat.com" "clvmd SELinux Policy documentation"
+.TH  "clvmd_selinux"  "8"  "13-01-04" "clvmd" "SELinux Policy documentation for clvmd"
 .SH "NAME"
 clvmd_selinux \- Security Enhanced Linux Policy for the clvmd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the clvmd processes via flexible mandatory access control.
 
+The clvmd processes execute with the clvmd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep clvmd_t
+
+
+.SH "ENTRYPOINTS"
+
+The clvmd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,clvmd_exec_t,file_type" file types.  The default entrypoint paths for the clvmd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/clvmd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux clvmd policy is very flexible allowing users to setup their clvmd processes in as secure a method as possible.
+.PP
+The following process types are defined for clvmd:
+
+.EX
+.B clvmd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a clvmd_t
+
+can be used to make the process type clvmd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux clvmd policy is very flexible allowing users to setup their clvmd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for clvmd:
 
 
 .EX
 .PP
-.B clvmd_exec_t 
+.B clvmd_exec_t
 .EE
 
 - Set files with the clvmd_exec_t type, if you want to transition an executable to the clvmd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B clvmd_initrc_exec_t 
+.B clvmd_initrc_exec_t
 .EE
 
 - Set files with the clvmd_initrc_exec_t type, if you want to transition an executable to the clvmd_initrc_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B clvmd_tmpfs_t 
+.B clvmd_tmpfs_t
 .EE
 
 - Set files with the clvmd_tmpfs_t type, if you want to store clvmd files on a tmpfs file system.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B clvmd_var_run_t 
+.B clvmd_var_run_t
 .EE
 
 - Set files with the clvmd_var_run_t type, if you want to store the clvmd files under the /run directory.
@@ -51,28 +81,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux clvmd policy is very flexible allowing users to setup their clvmd processes in as secure a method as possible.
-.PP 
-The following process types are defined for clvmd:
+.SH "MANAGED FILES"
 
-.EX
-.B clvmd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type clvmd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +107,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), clvmd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), clvmd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cmirrord_selinux.8 serefpolicy-3.7.19/man/man8/cmirrord_selinux.8
--- nsaserefpolicy/man/man8/cmirrord_selinux.8	2013-03-15 11:41:11.871153501 +0100
+++ serefpolicy-3.7.19/man/man8/cmirrord_selinux.8	2013-03-15 11:39:58.958151838 +0100
@@ -1,31 +1,55 @@
-.TH  "cmirrord_selinux"  "8"  "cmirrord" "dwalsh@redhat.com" "cmirrord SELinux Policy documentation"
+.TH  "cmirrord_selinux"  "8"  "13-01-04" "cmirrord" "SELinux Policy documentation for cmirrord"
 .SH "NAME"
 cmirrord_selinux \- Security Enhanced Linux Policy for the cmirrord processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cmirrord processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B cmirrord
-(policy for cmirrord)
-processes via flexible mandatory access
-control.  
+The cmirrord processes execute with the cmirrord_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep cmirrord_t
+
+
+.SH "ENTRYPOINTS"
+
+The cmirrord_t SELinux type can be entered via the "cmirrord_exec_t" file type.  The default entrypoint paths for the cmirrord_t domain are the following:"
+
+/usr/sbin/cmirrord
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cmirrord policy is very flexible allowing users to setup their cmirrord processes in as secure a method as possible.
+.PP
+The following process types are defined for cmirrord:
+
+.EX
+.B cmirrord_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cmirrord_t
+
+can be used to make the process type cmirrord_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cmirrord policy is very flexible allowing users to setup their cmirrord processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cmirrord:
 
 
 .EX
 .PP
-.B cmirrord_exec_t 
+.B cmirrord_exec_t
 .EE
 
 - Set files with the cmirrord_exec_t type, if you want to transition an executable to the cmirrord_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B cmirrord_initrc_exec_t 
+.B cmirrord_initrc_exec_t
 .EE
 
 - Set files with the cmirrord_initrc_exec_t type, if you want to transition an executable to the cmirrord_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B cmirrord_tmpfs_t 
+.B cmirrord_tmpfs_t
 .EE
 
 - Set files with the cmirrord_tmpfs_t type, if you want to store cmirrord files on a tmpfs file system.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B cmirrord_var_run_t 
+.B cmirrord_var_run_t
 .EE
 
 - Set files with the cmirrord_var_run_t type, if you want to store the cmirrord files under the /run directory.
@@ -57,28 +81,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cmirrord policy is very flexible allowing users to setup their cmirrord processes in as secure a method as possible.
-.PP 
-The following process types are defined for cmirrord:
+.SH "MANAGED FILES"
 
-.EX
-.B cmirrord_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cmirrord_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cmirrord_tmpfs_t
+
+
+.br
+.B cmirrord_var_run_t
+
+	/var/run/cmirrord\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +161,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cmirrord(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cmirrord(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cobblerd_selinux.8 serefpolicy-3.7.19/man/man8/cobblerd_selinux.8
--- nsaserefpolicy/man/man8/cobblerd_selinux.8	2013-03-15 11:41:11.867153501 +0100
+++ serefpolicy-3.7.19/man/man8/cobblerd_selinux.8	2013-03-15 11:39:58.917151837 +0100
@@ -1,16 +1,53 @@
-.TH  "cobblerd_selinux"  "8"  "cobblerd" "dwalsh@redhat.com" "cobblerd SELinux Policy documentation"
+.TH  "cobblerd_selinux"  "8"  "13-01-04" "cobblerd" "SELinux Policy documentation for cobblerd"
 .SH "NAME"
 cobblerd_selinux \- Security Enhanced Linux Policy for the cobblerd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cobblerd processes via flexible mandatory access control.
 
+The cobblerd processes execute with the cobblerd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep cobblerd_t
+
+
+.SH "ENTRYPOINTS"
+
+The cobblerd_t SELinux type can be entered via the "cobblerd_exec_t" file type.  The default entrypoint paths for the cobblerd_t domain are the following:"
+
+/usr/bin/cobblerd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
+.PP
+The following process types are defined for cobblerd:
+
+.EX
+.B cobblerd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cobblerd_t
+
+can be used to make the process type cobblerd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  cobblerd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run cobblerd with the tightest access possible.
 
 
 .PP
+If you want to allow Cobbler to access nfs file systems, you must turn on the cobbler_use_nfs boolean.
+
+.EX
+.B setsebool -P cobbler_use_nfs 1
+.EE
+
+.PP
 If you want to allow Cobbler to connect to the network using TCP, you must turn on the cobbler_can_network_connect boolean.
 
 .EX
@@ -18,6 +55,27 @@
 .EE
 
 .PP
+If you want to allow HTTPD scripts and modules to connect to cobbler over the network, you must turn on the httpd_can_network_connect_cobbler boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_cobbler 1
+.EE
+
+.PP
+If you want to allow Cobbler to access cifs file systems, you must turn on the cobbler_use_cifs boolean.
+
+.EX
+.B setsebool -P cobbler_use_cifs 1
+.EE
+
+.PP
+If you want to allow Cobbler to modify public files used for public file transfer services, you must turn on the cobbler_anon_write boolean.
+
+.EX
+.B setsebool -P cobbler_anon_write 1
+.EE
+
+.PP
 If you want to allow Cobbler to access nfs file systems, you must turn on the cobbler_use_nfs boolean.
 
 .EX
@@ -25,6 +83,13 @@
 .EE
 
 .PP
+If you want to allow Cobbler to connect to the network using TCP, you must turn on the cobbler_can_network_connect boolean.
+
+.EX
+.B setsebool -P cobbler_can_network_connect 1
+.EE
+
+.PP
 If you want to allow HTTPD scripts and modules to connect to cobbler over the network, you must turn on the httpd_can_network_connect_cobbler boolean.
 
 .EX
@@ -49,7 +114,7 @@
 .B restorecon -F -R -v /var/cobblerd
 .pp
 .TP
-Allow cobblerd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_cobblerd_anon_write boolean to be set.
+Allow cobblerd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_cobblerdd_anon_write boolean to be set.
 .PP
 .B
 semanage fcontext -a -t public_content_rw_t "/var/cobblerd/incoming(/.*)?"
@@ -65,55 +130,19 @@
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
-.PP 
-The following file types are defined for cobblerd:
-
-
-.EX
-.PP
-.B cobbler_etc_t 
-.EE
-
-- Set files with the cobbler_etc_t type, if you want to store cobbler files in the /etc directories.
-
-
-.EX
-.PP
-.B cobbler_tmp_t 
-.EE
-
-- Set files with the cobbler_tmp_t type, if you want to store cobbler temporary files in the /tmp directories.
-
-
-.EX
 .PP
-.B cobbler_var_lib_t 
-.EE
-
-- Set files with the cobbler_var_lib_t type, if you want to store the cobbler files under the /var/lib directory.
-
-.br
-.TP 5
-Paths: 
-/var/lib/cobbler(/.*)?, /var/www/cobbler/images(/.*)?, /var/www/cobbler/repo_mirror(/.*)?, /var/lib/tftpboot/pxelinux\.cfg(/.*)?, /var/lib/tftpboot/memdisk, /var/lib/tftpboot/s390x(/.*)?, /var/lib/tftpboot/images(/.*)?, /var/www/cobbler/links(/.*)?, /var/lib/tftpboot/menu\.c32, /var/lib/tftpboot/yaboot, /var/www/cobbler/localmirror(/.*)?, /var/www/cobbler/ks_mirror(/.*)?, /var/lib/tftpboot/grub(/.*)?, /var/www/cobbler/pub(/.*)?, /var/lib/tftpboot/ppc(/.*)?, /var/lib/tftpboot/pxelinux\.0, /var/lib/tftpboot/etc(/.*)?, /var/www/cobbler/rendered(/.*)?
-
-.EX
-.PP
-.B cobbler_var_log_t 
-.EE
-
-- Set files with the cobbler_var_log_t type, if you want to treat the data as cobbler var log data, usually stored under the /var/log directory.
+The following file types are defined for cobblerd:
 
 
 .EX
 .PP
-.B cobblerd_exec_t 
+.B cobblerd_exec_t
 .EE
 
 - Set files with the cobblerd_exec_t type, if you want to transition an executable to the cobblerd_t domain.
@@ -121,7 +150,7 @@
 
 .EX
 .PP
-.B cobblerd_initrc_exec_t 
+.B cobblerd_initrc_exec_t
 .EE
 
 - Set files with the cobblerd_initrc_exec_t type, if you want to transition an executable to the cobblerd_initrc_t domain.
@@ -129,51 +158,235 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for cobblerd:
 
 .EX
 .TP 5
-.B cobbler_port_t 
+.B cobbler_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 25151
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
-.PP 
-The following process types are defined for cobblerd:
+.SH "MANAGED FILES"
 
-.EX
-.B cobblerd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cobblerd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cobbler_tmp_t
+
+
+.br
+.B cobbler_var_lib_t
+
+	/var/lib/cobbler(/.*)?
+.br
+	/var/www/cobbler/pub(/.*)?
+.br
+	/var/lib/tftpboot/etc(/.*)?
+.br
+	/var/lib/tftpboot/ppc(/.*)?
+.br
+	/var/lib/tftpboot/grub(/.*)?
+.br
+	/var/www/cobbler/links(/.*)?
+.br
+	/var/lib/tftpboot/s390x(/.*)?
+.br
+	/var/www/cobbler/images(/.*)?
+.br
+	/var/lib/tftpboot/images(/.*)?
+.br
+	/var/www/cobbler/rendered(/.*)?
+.br
+	/var/www/cobbler/ks_mirror(/.*)?
+.br
+	/var/www/cobbler/localmirror(/.*)?
+.br
+	/var/www/cobbler/repo_mirror(/.*)?
+.br
+	/var/lib/tftpboot/pxelinux\.cfg(/.*)?
+.br
+	/var/lib/tftpboot/yaboot
+.br
+	/var/lib/tftpboot/memdisk
+.br
+	/var/lib/tftpboot/menu\.c32
+.br
+	/var/lib/tftpboot/pxelinux\.0
+.br
+
+.br
+.B cobbler_var_log_t
+
+	/var/log/cobbler(/.*)?
+.br
+
+.br
+.B dhcp_etc_t
+
+	/etc/dhcpc.*
+.br
+	/etc/dhcp3(/.*)?
+.br
+	/etc/dhcpd(6)?\.conf
+.br
+	/etc/dhcp3?/dhclient.*
+.br
+	/etc/dhclient.*conf
+.br
+	/etc/dhcp/dhcpd(6)?\.conf
+.br
+	/etc/dhclient-script
+.br
+
+.br
+.B dnsmasq_etc_t
+
+	/etc/dnsmasq\.conf
+.br
+
+.br
+.B httpd_cobbler_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B named_conf_t
+
+	/etc/rndc.*
+.br
+	/etc/unbound(/.*)?
+.br
+	/var/named/chroot(/.*)?
+.br
+	/etc/named\.rfc1912.zones
+.br
+	/var/named/chroot/etc/named\.rfc1912.zones
+.br
+	/etc/named\.conf
+.br
+	/var/named/named\.ca
+.br
+	/etc/named\.root\.hints
+.br
+	/var/named/chroot/etc/named\.conf
+.br
+	/etc/named\.caching-nameserver\.conf
+.br
+	/var/named/chroot/var/named/named\.ca
+.br
+	/var/named/chroot/etc/named\.root\.hints
+.br
+	/var/named/chroot/etc/named\.caching-nameserver\.conf
+.br
+
+.br
+.B named_zone_t
+
+	/var/named(/.*)?
+.br
+	/var/named/chroot/var/named(/.*)?
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B rsync_etc_t
+
+	/etc/rsyncd\.conf
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -192,12 +405,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cobblerd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cobblerd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/comsat_selinux.8 serefpolicy-3.7.19/man/man8/comsat_selinux.8
--- nsaserefpolicy/man/man8/comsat_selinux.8	2013-03-15 11:41:12.212153509 +0100
+++ serefpolicy-3.7.19/man/man8/comsat_selinux.8	2013-03-15 11:40:06.425152008 +0100
@@ -1,31 +1,55 @@
-.TH  "comsat_selinux"  "8"  "comsat" "dwalsh@redhat.com" "comsat SELinux Policy documentation"
+.TH  "comsat_selinux"  "8"  "13-01-04" "comsat" "SELinux Policy documentation for comsat"
 .SH "NAME"
 comsat_selinux \- Security Enhanced Linux Policy for the comsat processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the comsat processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B comsat
-(Comsat, a biff server)
-processes via flexible mandatory access
-control.  
+The comsat processes execute with the comsat_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep comsat_t
+
+
+.SH "ENTRYPOINTS"
+
+The comsat_t SELinux type can be entered via the "comsat_exec_t" file type.  The default entrypoint paths for the comsat_t domain are the following:"
+
+/usr/sbin/in\.comsat
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
+.PP
+The following process types are defined for comsat:
+
+.EX
+.B comsat_t
+.EE
+.PP
+Note:
+.B semanage permissive -a comsat_t
+
+can be used to make the process type comsat_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for comsat:
 
 
 .EX
 .PP
-.B comsat_exec_t 
+.B comsat_exec_t
 .EE
 
 - Set files with the comsat_exec_t type, if you want to transition an executable to the comsat_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B comsat_tmp_t 
+.B comsat_tmp_t
 .EE
 
 - Set files with the comsat_tmp_t type, if you want to store comsat temporary files in the /tmp directories.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B comsat_var_run_t 
+.B comsat_var_run_t
 .EE
 
 - Set files with the comsat_var_run_t type, if you want to store the comsat files under the /run directory.
@@ -49,51 +73,87 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for comsat:
 
 .EX
 .TP 5
-.B comsat_port_t 
+.B comsat_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 512
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
-.PP 
-The following process types are defined for comsat:
+.SH "MANAGED FILES"
 
-.EX
-.B comsat_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type comsat_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B comsat_tmp_t
+
+
+.br
+.B comsat_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -109,11 +169,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), comsat(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), comsat(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/condor_collector_selinux.8 serefpolicy-3.7.19/man/man8/condor_collector_selinux.8
--- nsaserefpolicy/man/man8/condor_collector_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/condor_collector_selinux.8	2013-03-15 11:39:55.397151756 +0100
@@ -0,0 +1,96 @@
+.TH  "condor_collector_selinux"  "8"  "13-01-04" "condor_collector" "SELinux Policy documentation for condor_collector"
+.SH "NAME"
+condor_collector_selinux \- Security Enhanced Linux Policy for the condor_collector processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the condor_collector processes via flexible mandatory access control.
+
+The condor_collector processes execute with the condor_collector_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep condor_collector_t
+
+
+.SH "ENTRYPOINTS"
+
+The condor_collector_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,condor_collector_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the condor_collector_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/condor_collector, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux condor_collector policy is very flexible allowing users to setup their condor_collector processes in as secure a method as possible.
+.PP
+The following process types are defined for condor_collector:
+
+.EX
+.B condor_collector_t
+.EE
+.PP
+Note:
+.B semanage permissive -a condor_collector_t
+
+can be used to make the process type condor_collector_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux condor_collector policy is very flexible allowing users to setup their condor_collector processes in as secure a method as possible.
+.PP
+The following file types are defined for condor_collector:
+
+
+.EX
+.PP
+.B condor_collector_exec_t
+.EE
+
+- Set files with the condor_collector_exec_t type, if you want to transition an executable to the condor_collector_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type condor_collector_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), condor_collector(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, condor_master_selinux(8), condor_negotiator_selinux(8), condor_procd_selinux(8), condor_schedd_selinux(8), condor_startd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/condor_master_selinux.8 serefpolicy-3.7.19/man/man8/condor_master_selinux.8
--- nsaserefpolicy/man/man8/condor_master_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/condor_master_selinux.8	2013-03-15 11:40:04.798151971 +0100
@@ -0,0 +1,96 @@
+.TH  "condor_master_selinux"  "8"  "13-01-04" "condor_master" "SELinux Policy documentation for condor_master"
+.SH "NAME"
+condor_master_selinux \- Security Enhanced Linux Policy for the condor_master processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the condor_master processes via flexible mandatory access control.
+
+The condor_master processes execute with the condor_master_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep condor_master_t
+
+
+.SH "ENTRYPOINTS"
+
+The condor_master_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,condor_master_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the condor_master_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/condor_master, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux condor_master policy is very flexible allowing users to setup their condor_master processes in as secure a method as possible.
+.PP
+The following process types are defined for condor_master:
+
+.EX
+.B condor_master_t
+.EE
+.PP
+Note:
+.B semanage permissive -a condor_master_t
+
+can be used to make the process type condor_master_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux condor_master policy is very flexible allowing users to setup their condor_master processes in as secure a method as possible.
+.PP
+The following file types are defined for condor_master:
+
+
+.EX
+.PP
+.B condor_master_exec_t
+.EE
+
+- Set files with the condor_master_exec_t type, if you want to transition an executable to the condor_master_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type condor_master_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), condor_master(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, condor_collector_selinux(8), condor_negotiator_selinux(8), condor_procd_selinux(8), condor_schedd_selinux(8), condor_startd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/condor_negotiator_selinux.8 serefpolicy-3.7.19/man/man8/condor_negotiator_selinux.8
--- nsaserefpolicy/man/man8/condor_negotiator_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/condor_negotiator_selinux.8	2013-03-15 11:40:00.563151874 +0100
@@ -0,0 +1,96 @@
+.TH  "condor_negotiator_selinux"  "8"  "13-01-04" "condor_negotiator" "SELinux Policy documentation for condor_negotiator"
+.SH "NAME"
+condor_negotiator_selinux \- Security Enhanced Linux Policy for the condor_negotiator processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the condor_negotiator processes via flexible mandatory access control.
+
+The condor_negotiator processes execute with the condor_negotiator_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep condor_negotiator_t
+
+
+.SH "ENTRYPOINTS"
+
+The condor_negotiator_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,condor_negotiator_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the condor_negotiator_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/condor_negotiator, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux condor_negotiator policy is very flexible allowing users to setup their condor_negotiator processes in as secure a method as possible.
+.PP
+The following process types are defined for condor_negotiator:
+
+.EX
+.B condor_negotiator_t
+.EE
+.PP
+Note:
+.B semanage permissive -a condor_negotiator_t
+
+can be used to make the process type condor_negotiator_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux condor_negotiator policy is very flexible allowing users to setup their condor_negotiator processes in as secure a method as possible.
+.PP
+The following file types are defined for condor_negotiator:
+
+
+.EX
+.PP
+.B condor_negotiator_exec_t
+.EE
+
+- Set files with the condor_negotiator_exec_t type, if you want to transition an executable to the condor_negotiator_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type condor_negotiator_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), condor_negotiator(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, condor_collector_selinux(8), condor_master_selinux(8), condor_procd_selinux(8), condor_schedd_selinux(8), condor_startd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/condor_procd_selinux.8 serefpolicy-3.7.19/man/man8/condor_procd_selinux.8
--- nsaserefpolicy/man/man8/condor_procd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/condor_procd_selinux.8	2013-03-15 11:40:03.510151942 +0100
@@ -0,0 +1,96 @@
+.TH  "condor_procd_selinux"  "8"  "13-01-04" "condor_procd" "SELinux Policy documentation for condor_procd"
+.SH "NAME"
+condor_procd_selinux \- Security Enhanced Linux Policy for the condor_procd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the condor_procd processes via flexible mandatory access control.
+
+The condor_procd processes execute with the condor_procd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep condor_procd_t
+
+
+.SH "ENTRYPOINTS"
+
+The condor_procd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,condor_procd_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the condor_procd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/condor_procd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux condor_procd policy is very flexible allowing users to setup their condor_procd processes in as secure a method as possible.
+.PP
+The following process types are defined for condor_procd:
+
+.EX
+.B condor_procd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a condor_procd_t
+
+can be used to make the process type condor_procd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux condor_procd policy is very flexible allowing users to setup their condor_procd processes in as secure a method as possible.
+.PP
+The following file types are defined for condor_procd:
+
+
+.EX
+.PP
+.B condor_procd_exec_t
+.EE
+
+- Set files with the condor_procd_exec_t type, if you want to transition an executable to the condor_procd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type condor_procd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), condor_procd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, condor_collector_selinux(8), condor_master_selinux(8), condor_negotiator_selinux(8), condor_schedd_selinux(8), condor_startd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/condor_schedd_selinux.8 serefpolicy-3.7.19/man/man8/condor_schedd_selinux.8
--- nsaserefpolicy/man/man8/condor_schedd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/condor_schedd_selinux.8	2013-03-15 11:39:56.063151772 +0100
@@ -0,0 +1,104 @@
+.TH  "condor_schedd_selinux"  "8"  "13-01-04" "condor_schedd" "SELinux Policy documentation for condor_schedd"
+.SH "NAME"
+condor_schedd_selinux \- Security Enhanced Linux Policy for the condor_schedd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the condor_schedd processes via flexible mandatory access control.
+
+The condor_schedd processes execute with the condor_schedd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep condor_schedd_t
+
+
+.SH "ENTRYPOINTS"
+
+The condor_schedd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,condor_schedd_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the condor_schedd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/condor_schedd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux condor_schedd policy is very flexible allowing users to setup their condor_schedd processes in as secure a method as possible.
+.PP
+The following process types are defined for condor_schedd:
+
+.EX
+.B condor_schedd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a condor_schedd_t
+
+can be used to make the process type condor_schedd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux condor_schedd policy is very flexible allowing users to setup their condor_schedd processes in as secure a method as possible.
+.PP
+The following file types are defined for condor_schedd:
+
+
+.EX
+.PP
+.B condor_schedd_exec_t
+.EE
+
+- Set files with the condor_schedd_exec_t type, if you want to transition an executable to the condor_schedd_t domain.
+
+
+.EX
+.PP
+.B condor_schedd_tmp_t
+.EE
+
+- Set files with the condor_schedd_tmp_t type, if you want to store condor schedd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type condor_schedd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), condor_schedd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, condor_collector_selinux(8), condor_master_selinux(8), condor_negotiator_selinux(8), condor_procd_selinux(8), condor_startd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/condor_startd_selinux.8 serefpolicy-3.7.19/man/man8/condor_startd_selinux.8
--- nsaserefpolicy/man/man8/condor_startd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/condor_startd_selinux.8	2013-03-15 11:40:00.761151879 +0100
@@ -0,0 +1,112 @@
+.TH  "condor_startd_selinux"  "8"  "13-01-04" "condor_startd" "SELinux Policy documentation for condor_startd"
+.SH "NAME"
+condor_startd_selinux \- Security Enhanced Linux Policy for the condor_startd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the condor_startd processes via flexible mandatory access control.
+
+The condor_startd processes execute with the condor_startd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep condor_startd_t
+
+
+.SH "ENTRYPOINTS"
+
+The condor_startd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,condor_startd_exec_t" file types.  The default entrypoint paths for the condor_startd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/condor_startd, /usr/sbin/condor_starter
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux condor_startd policy is very flexible allowing users to setup their condor_startd processes in as secure a method as possible.
+.PP
+The following process types are defined for condor_startd:
+
+.EX
+.B condor_startd_ssh_t, condor_startd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a condor_startd_t
+
+can be used to make the process type condor_startd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux condor_startd policy is very flexible allowing users to setup their condor_startd processes in as secure a method as possible.
+.PP
+The following file types are defined for condor_startd:
+
+
+.EX
+.PP
+.B condor_startd_exec_t
+.EE
+
+- Set files with the condor_startd_exec_t type, if you want to transition an executable to the condor_startd_t domain.
+
+
+.EX
+.PP
+.B condor_startd_tmp_t
+.EE
+
+- Set files with the condor_startd_tmp_t type, if you want to store condor startd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B condor_startd_tmpfs_t
+.EE
+
+- Set files with the condor_startd_tmpfs_t type, if you want to store condor startd files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type condor_startd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), condor_startd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, condor_collector_selinux(8), condor_master_selinux(8), condor_negotiator_selinux(8), condor_procd_selinux(8), condor_schedd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/consolekit_selinux.8 serefpolicy-3.7.19/man/man8/consolekit_selinux.8
--- nsaserefpolicy/man/man8/consolekit_selinux.8	2013-03-15 11:41:12.028153505 +0100
+++ serefpolicy-3.7.19/man/man8/consolekit_selinux.8	2013-03-15 11:40:01.438151894 +0100
@@ -1,31 +1,55 @@
-.TH  "consolekit_selinux"  "8"  "consolekit" "dwalsh@redhat.com" "consolekit SELinux Policy documentation"
+.TH  "consolekit_selinux"  "8"  "13-01-04" "consolekit" "SELinux Policy documentation for consolekit"
 .SH "NAME"
 consolekit_selinux \- Security Enhanced Linux Policy for the consolekit processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the consolekit processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B consolekit
-(Framework for facilitating multiple user sessions on desktops)
-processes via flexible mandatory access
-control.  
+The consolekit processes execute with the consolekit_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep consolekit_t
+
+
+.SH "ENTRYPOINTS"
+
+The consolekit_t SELinux type can be entered via the "consolekit_exec_t" file type.  The default entrypoint paths for the consolekit_t domain are the following:"
+
+/usr/sbin/console-kit-daemon
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux consolekit policy is very flexible allowing users to setup their consolekit processes in as secure a method as possible.
+.PP
+The following process types are defined for consolekit:
+
+.EX
+.B consolekit_t
+.EE
+.PP
+Note:
+.B semanage permissive -a consolekit_t
+
+can be used to make the process type consolekit_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux consolekit policy is very flexible allowing users to setup their consolekit processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for consolekit:
 
 
 .EX
 .PP
-.B consolekit_exec_t 
+.B consolekit_exec_t
 .EE
 
 - Set files with the consolekit_exec_t type, if you want to transition an executable to the consolekit_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B consolekit_log_t 
+.B consolekit_log_t
 .EE
 
 - Set files with the consolekit_log_t type, if you want to treat the data as consolekit log data, usually stored under the /var/log directory.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B consolekit_tmpfs_t 
+.B consolekit_tmpfs_t
 .EE
 
 - Set files with the consolekit_tmpfs_t type, if you want to store consolekit files on a tmpfs file system.
@@ -49,40 +73,122 @@
 
 .EX
 .PP
-.B consolekit_var_run_t 
+.B consolekit_var_run_t
 .EE
 
 - Set files with the consolekit_var_run_t type, if you want to store the consolekit files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/console-kit-daemon\.pid, /var/run/ConsoleKit(/.*)?, /var/run/consolekit\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux consolekit policy is very flexible allowing users to setup their consolekit processes in as secure a method as possible.
-.PP 
-The following process types are defined for consolekit:
+.SH "MANAGED FILES"
 
-.EX
-.B consolekit_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type consolekit_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B consolekit_log_t
+
+	/var/log/ConsoleKit(/.*)?
+.br
+
+.br
+.B consolekit_var_run_t
+
+	/var/run/ConsoleKit(/.*)?
+.br
+	/var/run/consolekit\.pid
+.br
+	/var/run/console-kit-daemon\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pam_var_console_t
+
+	/var/run/console(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -95,11 +201,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), consolekit(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), consolekit(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/consoletype_selinux.8 serefpolicy-3.7.19/man/man8/consoletype_selinux.8
--- nsaserefpolicy/man/man8/consoletype_selinux.8	2013-03-15 11:41:11.935153503 +0100
+++ serefpolicy-3.7.19/man/man8/consoletype_selinux.8	2013-03-15 11:40:00.112151864 +0100
@@ -1,33 +1,55 @@
-.TH  "consoletype_selinux"  "8"  "consoletype" "dwalsh@redhat.com" "consoletype SELinux Policy documentation"
+.TH  "consoletype_selinux"  "8"  "13-01-04" "consoletype" "SELinux Policy documentation for consoletype"
 .SH "NAME"
 consoletype_selinux \- Security Enhanced Linux Policy for the consoletype processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the consoletype processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B consoletype
-(
-Determine of the console connected to the controlling terminal.
-)
-processes via flexible mandatory access
-control.  
+The consoletype processes execute with the consoletype_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep consoletype_t
+
+
+.SH "ENTRYPOINTS"
+
+The consoletype_t SELinux type can be entered via the "consoletype_exec_t" file type.  The default entrypoint paths for the consoletype_t domain are the following:"
+
+/sbin/consoletype
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux consoletype policy is very flexible allowing users to setup their consoletype processes in as secure a method as possible.
+.PP
+The following process types are defined for consoletype:
+
+.EX
+.B consoletype_t
+.EE
+.PP
+Note:
+.B semanage permissive -a consoletype_t
+
+can be used to make the process type consoletype_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux consoletype policy is very flexible allowing users to setup their consoletype processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for consoletype:
 
 
 .EX
 .PP
-.B consoletype_exec_t 
+.B consoletype_exec_t
 .EE
 
 - Set files with the consoletype_exec_t type, if you want to transition an executable to the consoletype_t domain.
@@ -35,28 +57,60 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux consoletype policy is very flexible allowing users to setup their consoletype processes in as secure a method as possible.
-.PP 
-The following process types are defined for consoletype:
+.SH "MANAGED FILES"
 
-.EX
-.B consoletype_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type consoletype_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +123,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), consoletype(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), consoletype(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/corosync_selinux.8 serefpolicy-3.7.19/man/man8/corosync_selinux.8
--- nsaserefpolicy/man/man8/corosync_selinux.8	2013-03-15 11:41:10.304153466 +0100
+++ serefpolicy-3.7.19/man/man8/corosync_selinux.8	2013-03-15 11:39:54.475151735 +0100
@@ -1,55 +1,71 @@
-.TH  "corosync_selinux"  "8"  "corosync" "dwalsh@redhat.com" "corosync SELinux Policy documentation"
+.TH  "corosync_selinux"  "8"  "13-01-04" "corosync" "SELinux Policy documentation for corosync"
 .SH "NAME"
 corosync_selinux \- Security Enhanced Linux Policy for the corosync processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the corosync processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B corosync
-(SELinux policy for Corosync Cluster Engine)
-processes via flexible mandatory access
-control.  
+The corosync processes execute with the corosync_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep corosync_t
+
+
+.SH "ENTRYPOINTS"
+
+The corosync_t SELinux type can be entered via the "corosync_exec_t" file type.  The default entrypoint paths for the corosync_t domain are the following:"
+
+/usr/sbin/corosync, /usr/sbin/corosync-notifyd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux corosync policy is very flexible allowing users to setup their corosync processes in as secure a method as possible.
+.PP
+The following process types are defined for corosync:
+
+.EX
+.B corosync_t
+.EE
+.PP
+Note:
+.B semanage permissive -a corosync_t
+
+can be used to make the process type corosync_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux corosync policy is very flexible allowing users to setup their corosync processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for corosync:
 
 
 .EX
 .PP
-.B corosync_exec_t 
+.B corosync_exec_t
 .EE
 
 - Set files with the corosync_exec_t type, if you want to transition an executable to the corosync_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/ccs_tool, /usr/sbin/corosync, /usr/sbin/corosync-notifyd, /usr/sbin/cman_tool, /usr/lib(64)?/heartbeat/heartbeat
 
 .EX
 .PP
-.B corosync_initrc_exec_t 
+.B corosync_initrc_exec_t
 .EE
 
 - Set files with the corosync_initrc_exec_t type, if you want to transition an executable to the corosync_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/heartbeat, /etc/rc\.d/init\.d/corosync
 
 .EX
 .PP
-.B corosync_tmp_t 
+.B corosync_tmp_t
 .EE
 
 - Set files with the corosync_tmp_t type, if you want to store corosync temporary files in the /tmp directories.
@@ -57,7 +73,7 @@
 
 .EX
 .PP
-.B corosync_tmpfs_t 
+.B corosync_tmpfs_t
 .EE
 
 - Set files with the corosync_tmpfs_t type, if you want to store corosync files on a tmpfs file system.
@@ -65,19 +81,15 @@
 
 .EX
 .PP
-.B corosync_var_lib_t 
+.B corosync_var_lib_t
 .EE
 
 - Set files with the corosync_var_lib_t type, if you want to store the corosync files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/corosync(/.*)?, /usr/lib(64)?/heartbeat(/.*)?
 
 .EX
 .PP
-.B corosync_var_log_t 
+.B corosync_var_log_t
 .EE
 
 - Set files with the corosync_var_log_t type, if you want to treat the data as corosync var log data, usually stored under the /var/log directory.
@@ -85,40 +97,178 @@
 
 .EX
 .PP
-.B corosync_var_run_t 
+.B corosync_var_run_t
 .EE
 
 - Set files with the corosync_var_run_t type, if you want to store the corosync files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/hearbeat(/.*)?, /var/run/corosync\.pid, /var/run/cman_.*
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux corosync policy is very flexible allowing users to setup their corosync processes in as secure a method as possible.
-.PP 
-The following process types are defined for corosync:
+.SH "MANAGED FILES"
 
-.EX
-.B corosync_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type corosync_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cluster_tmpfs
+
+
+.br
+.B cluster_var_lib_t
+
+	/var/lib/cluster(/.*)?
+.br
+
+.br
+.B clvmd_tmpfs_t
+
+
+.br
+.B cmirrord_tmpfs_t
+
+
+.br
+.B corosync_tmp_t
+
+
+.br
+.B corosync_tmpfs_t
+
+
+.br
+.B corosync_var_lib_t
+
+	/var/lib/corosync(/.*)?
+.br
+
+.br
+.B corosync_var_log_t
+
+	/var/log/cluster/corosync\.log.*
+.br
+
+.br
+.B corosync_var_run_t
+
+	/var/run/cman_.*
+.br
+	/var/run/rsctmp(/.*)?
+.br
+	/var/run/corosync\.pid
+.br
+
+.br
+.B initrc_state_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B qpidd_tmpfs_t
+
+
+.br
+.B rgmanager_tmpfs_t
+
+
+.br
+.B rgmanager_var_lib_t
+
+	/usr/lib(64)?/heartbeat(/.*)?
+.br
+	/var/lib/heartbeat(/.*)?
+.br
+
+.br
+.B rgmanager_var_run_t
+
+	/var/run/heartbeat(/.*)?
+.br
+	/var/run/cpglockd\.pid
+.br
+	/var/run/rgmanager\.pid
+.br
+	/var/run/cluster/rgmanager\.sk
+.br
+
+.br
+.B ricci_modclusterd_tmpfs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B tmpfs_t
+
+	/dev/shm
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.br
+.B var_lib_t
+
+	/opt/(.*/)?var/lib(64)?(/.*)?
+.br
+	/var/lib(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -131,11 +281,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), corosync(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), corosync(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/courier_authdaemon_selinux.8 serefpolicy-3.7.19/man/man8/courier_authdaemon_selinux.8
--- nsaserefpolicy/man/man8/courier_authdaemon_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/courier_authdaemon_selinux.8	2013-03-15 11:40:04.004151953 +0100
@@ -0,0 +1,170 @@
+.TH  "courier_authdaemon_selinux"  "8"  "13-01-04" "courier_authdaemon" "SELinux Policy documentation for courier_authdaemon"
+.SH "NAME"
+courier_authdaemon_selinux \- Security Enhanced Linux Policy for the courier_authdaemon processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the courier_authdaemon processes via flexible mandatory access control.
+
+The courier_authdaemon processes execute with the courier_authdaemon_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep courier_authdaemon_t
+
+
+.SH "ENTRYPOINTS"
+
+The courier_authdaemon_t SELinux type can be entered via the "courier_authdaemon_exec_t" file type.  The default entrypoint paths for the courier_authdaemon_t domain are the following:"
+
+/usr/lib(64)?/courier/authlib/.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux courier_authdaemon policy is very flexible allowing users to setup their courier_authdaemon processes in as secure a method as possible.
+.PP
+The following process types are defined for courier_authdaemon:
+
+.EX
+.B courier_authdaemon_t
+.EE
+.PP
+Note:
+.B semanage permissive -a courier_authdaemon_t
+
+can be used to make the process type courier_authdaemon_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux courier_authdaemon policy is very flexible allowing users to setup their courier_authdaemon processes in as secure a method as possible.
+.PP
+The following file types are defined for courier_authdaemon:
+
+
+.EX
+.PP
+.B courier_authdaemon_exec_t
+.EE
+
+- Set files with the courier_authdaemon_exec_t type, if you want to transition an executable to the courier_authdaemon_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type courier_authdaemon_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B courier_var_run_t
+
+	/var/run/courier(/.*)?
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), courier_authdaemon(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, courier_pcp_selinux(8), courier_pop_selinux(8), courier_sqwebmail_selinux(8), courier_tcpd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/courier_pcp_selinux.8 serefpolicy-3.7.19/man/man8/courier_pcp_selinux.8
--- nsaserefpolicy/man/man8/courier_pcp_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/courier_pcp_selinux.8	2013-03-15 11:39:57.913151814 +0100
@@ -0,0 +1,146 @@
+.TH  "courier_pcp_selinux"  "8"  "13-01-04" "courier_pcp" "SELinux Policy documentation for courier_pcp"
+.SH "NAME"
+courier_pcp_selinux \- Security Enhanced Linux Policy for the courier_pcp processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the courier_pcp processes via flexible mandatory access control.
+
+The courier_pcp processes execute with the courier_pcp_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep courier_pcp_t
+
+
+.SH "ENTRYPOINTS"
+
+The courier_pcp_t SELinux type can be entered via the "courier_pcp_exec_t" file type.  The default entrypoint paths for the courier_pcp_t domain are the following:"
+
+/usr/lib(64)?/courier/courier/pcpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux courier_pcp policy is very flexible allowing users to setup their courier_pcp processes in as secure a method as possible.
+.PP
+The following process types are defined for courier_pcp:
+
+.EX
+.B courier_pcp_t
+.EE
+.PP
+Note:
+.B semanage permissive -a courier_pcp_t
+
+can be used to make the process type courier_pcp_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux courier_pcp policy is very flexible allowing users to setup their courier_pcp processes in as secure a method as possible.
+.PP
+The following file types are defined for courier_pcp:
+
+
+.EX
+.PP
+.B courier_pcp_exec_t
+.EE
+
+- Set files with the courier_pcp_exec_t type, if you want to transition an executable to the courier_pcp_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type courier_pcp_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B courier_var_run_t
+
+	/var/run/courier(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), courier_pcp(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, courier_authdaemon_selinux(8), courier_pop_selinux(8), courier_sqwebmail_selinux(8), courier_tcpd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/courier_pop_selinux.8 serefpolicy-3.7.19/man/man8/courier_pop_selinux.8
--- nsaserefpolicy/man/man8/courier_pop_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/courier_pop_selinux.8	2013-03-15 11:40:00.964151883 +0100
@@ -0,0 +1,152 @@
+.TH  "courier_pop_selinux"  "8"  "13-01-04" "courier_pop" "SELinux Policy documentation for courier_pop"
+.SH "NAME"
+courier_pop_selinux \- Security Enhanced Linux Policy for the courier_pop processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the courier_pop processes via flexible mandatory access control.
+
+The courier_pop processes execute with the courier_pop_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep courier_pop_t
+
+
+.SH "ENTRYPOINTS"
+
+The courier_pop_t SELinux type can be entered via the "courier_pop_exec_t" file type.  The default entrypoint paths for the courier_pop_t domain are the following:"
+
+/usr/lib(64)?/courier/imapd, /usr/lib(64)?/courier/pop3d, /usr/lib(64)?/courier/courier/imaplogin, /usr/lib(64)?/courier/courier/courierpop.*, /usr/bin/imapd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux courier_pop policy is very flexible allowing users to setup their courier_pop processes in as secure a method as possible.
+.PP
+The following process types are defined for courier_pop:
+
+.EX
+.B courier_pop_t
+.EE
+.PP
+Note:
+.B semanage permissive -a courier_pop_t
+
+can be used to make the process type courier_pop_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux courier_pop policy is very flexible allowing users to setup their courier_pop processes in as secure a method as possible.
+.PP
+The following file types are defined for courier_pop:
+
+
+.EX
+.PP
+.B courier_pop_exec_t
+.EE
+
+- Set files with the courier_pop_exec_t type, if you want to transition an executable to the courier_pop_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type courier_pop_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B courier_var_run_t
+
+	/var/run/courier(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), courier_pop(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, courier_authdaemon_selinux(8), courier_pcp_selinux(8), courier_sqwebmail_selinux(8), courier_tcpd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/courier_sqwebmail_selinux.8 serefpolicy-3.7.19/man/man8/courier_sqwebmail_selinux.8
--- nsaserefpolicy/man/man8/courier_sqwebmail_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/courier_sqwebmail_selinux.8	2013-03-15 11:39:55.521151759 +0100
@@ -0,0 +1,146 @@
+.TH  "courier_sqwebmail_selinux"  "8"  "13-01-04" "courier_sqwebmail" "SELinux Policy documentation for courier_sqwebmail"
+.SH "NAME"
+courier_sqwebmail_selinux \- Security Enhanced Linux Policy for the courier_sqwebmail processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the courier_sqwebmail processes via flexible mandatory access control.
+
+The courier_sqwebmail processes execute with the courier_sqwebmail_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep courier_sqwebmail_t
+
+
+.SH "ENTRYPOINTS"
+
+The courier_sqwebmail_t SELinux type can be entered via the "courier_sqwebmail_exec_t" file type.  The default entrypoint paths for the courier_sqwebmail_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux courier_sqwebmail policy is very flexible allowing users to setup their courier_sqwebmail processes in as secure a method as possible.
+.PP
+The following process types are defined for courier_sqwebmail:
+
+.EX
+.B courier_sqwebmail_t
+.EE
+.PP
+Note:
+.B semanage permissive -a courier_sqwebmail_t
+
+can be used to make the process type courier_sqwebmail_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux courier_sqwebmail policy is very flexible allowing users to setup their courier_sqwebmail processes in as secure a method as possible.
+.PP
+The following file types are defined for courier_sqwebmail:
+
+
+.EX
+.PP
+.B courier_sqwebmail_exec_t
+.EE
+
+- Set files with the courier_sqwebmail_exec_t type, if you want to transition an executable to the courier_sqwebmail_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type courier_sqwebmail_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B courier_var_run_t
+
+	/var/run/courier(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), courier_sqwebmail(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, courier_authdaemon_selinux(8), courier_pcp_selinux(8), courier_pop_selinux(8), courier_tcpd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/courier_tcpd_selinux.8 serefpolicy-3.7.19/man/man8/courier_tcpd_selinux.8
--- nsaserefpolicy/man/man8/courier_tcpd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/courier_tcpd_selinux.8	2013-03-15 11:40:03.516151942 +0100
@@ -0,0 +1,152 @@
+.TH  "courier_tcpd_selinux"  "8"  "13-01-04" "courier_tcpd" "SELinux Policy documentation for courier_tcpd"
+.SH "NAME"
+courier_tcpd_selinux \- Security Enhanced Linux Policy for the courier_tcpd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the courier_tcpd processes via flexible mandatory access control.
+
+The courier_tcpd processes execute with the courier_tcpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep courier_tcpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The courier_tcpd_t SELinux type can be entered via the "courier_tcpd_exec_t" file type.  The default entrypoint paths for the courier_tcpd_t domain are the following:"
+
+/usr/lib(64)?/courier/couriertcpd, /usr/sbin/couriertcpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux courier_tcpd policy is very flexible allowing users to setup their courier_tcpd processes in as secure a method as possible.
+.PP
+The following process types are defined for courier_tcpd:
+
+.EX
+.B courier_tcpd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a courier_tcpd_t
+
+can be used to make the process type courier_tcpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux courier_tcpd policy is very flexible allowing users to setup their courier_tcpd processes in as secure a method as possible.
+.PP
+The following file types are defined for courier_tcpd:
+
+
+.EX
+.PP
+.B courier_tcpd_exec_t
+.EE
+
+- Set files with the courier_tcpd_exec_t type, if you want to transition an executable to the courier_tcpd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type courier_tcpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B courier_var_lib_t
+
+	/var/lib/courier(/.*)?
+.br
+
+.br
+.B courier_var_run_t
+
+	/var/run/courier(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), courier_tcpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, courier_authdaemon_selinux(8), courier_pcp_selinux(8), courier_pop_selinux(8), courier_sqwebmail_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/cpucontrol_selinux.8 serefpolicy-3.7.19/man/man8/cpucontrol_selinux.8
--- nsaserefpolicy/man/man8/cpucontrol_selinux.8	2013-03-15 11:41:11.333153489 +0100
+++ serefpolicy-3.7.19/man/man8/cpucontrol_selinux.8	2013-03-15 11:39:55.558151760 +0100
@@ -1,31 +1,55 @@
-.TH  "cpucontrol_selinux"  "8"  "cpucontrol" "dwalsh@redhat.com" "cpucontrol SELinux Policy documentation"
+.TH  "cpucontrol_selinux"  "8"  "13-01-04" "cpucontrol" "SELinux Policy documentation for cpucontrol"
 .SH "NAME"
 cpucontrol_selinux \- Security Enhanced Linux Policy for the cpucontrol processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cpucontrol processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B cpucontrol
-(Services for loading CPU microcode and CPU frequency scaling)
-processes via flexible mandatory access
-control.  
+The cpucontrol processes execute with the cpucontrol_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep cpucontrol_t
+
+
+.SH "ENTRYPOINTS"
+
+The cpucontrol_t SELinux type can be entered via the "cpucontrol_exec_t" file type.  The default entrypoint paths for the cpucontrol_t domain are the following:"
+
+/sbin/microcode_ctl
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cpucontrol policy is very flexible allowing users to setup their cpucontrol processes in as secure a method as possible.
+.PP
+The following process types are defined for cpucontrol:
+
+.EX
+.B cpucontrol_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cpucontrol_t
+
+can be used to make the process type cpucontrol_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cpucontrol policy is very flexible allowing users to setup their cpucontrol processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cpucontrol:
 
 
 .EX
 .PP
-.B cpucontrol_conf_t 
+.B cpucontrol_conf_t
 .EE
 
 - Set files with the cpucontrol_conf_t type, if you want to treat the files as cpucontrol configuration data, usually stored under the /etc directory.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B cpucontrol_exec_t 
+.B cpucontrol_exec_t
 .EE
 
 - Set files with the cpucontrol_exec_t type, if you want to transition an executable to the cpucontrol_t domain.
@@ -41,28 +65,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cpucontrol policy is very flexible allowing users to setup their cpucontrol processes in as secure a method as possible.
-.PP 
-The following process types are defined for cpucontrol:
+.SH "MANAGED FILES"
 
-.EX
-.B cpucontrol_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cpucontrol_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +127,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cpucontrol(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cpucontrol(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cpufreqselector_selinux.8 serefpolicy-3.7.19/man/man8/cpufreqselector_selinux.8
--- nsaserefpolicy/man/man8/cpufreqselector_selinux.8	2013-03-15 11:41:11.933153503 +0100
+++ serefpolicy-3.7.19/man/man8/cpufreqselector_selinux.8	2013-03-15 11:40:00.111151864 +0100
@@ -1,31 +1,55 @@
-.TH  "cpufreqselector_selinux"  "8"  "cpufreqselector" "dwalsh@redhat.com" "cpufreqselector SELinux Policy documentation"
+.TH  "cpufreqselector_selinux"  "8"  "13-01-04" "cpufreqselector" "SELinux Policy documentation for cpufreqselector"
 .SH "NAME"
 cpufreqselector_selinux \- Security Enhanced Linux Policy for the cpufreqselector processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cpufreqselector processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B cpufreqselector
-(Command-line CPU frequency settings)
-processes via flexible mandatory access
-control.  
+The cpufreqselector processes execute with the cpufreqselector_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep cpufreqselector_t
+
+
+.SH "ENTRYPOINTS"
+
+The cpufreqselector_t SELinux type can be entered via the "cpufreqselector_exec_t" file type.  The default entrypoint paths for the cpufreqselector_t domain are the following:"
+
+/usr/bin/cpufreq-selector
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cpufreqselector policy is very flexible allowing users to setup their cpufreqselector processes in as secure a method as possible.
+.PP
+The following process types are defined for cpufreqselector:
+
+.EX
+.B cpufreqselector_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cpufreqselector_t
+
+can be used to make the process type cpufreqselector_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cpufreqselector policy is very flexible allowing users to setup their cpufreqselector processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cpufreqselector:
 
 
 .EX
 .PP
-.B cpufreqselector_exec_t 
+.B cpufreqselector_exec_t
 .EE
 
 - Set files with the cpufreqselector_exec_t type, if you want to transition an executable to the cpufreqselector_t domain.
@@ -33,28 +57,62 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cpufreqselector policy is very flexible allowing users to setup their cpufreqselector processes in as secure a method as possible.
-.PP 
-The following process types are defined for cpufreqselector:
+.SH "MANAGED FILES"
 
-.EX
-.B cpufreqselector_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cpufreqselector_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +125,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cpufreqselector(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cpufreqselector(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cpuspeed_selinux.8 serefpolicy-3.7.19/man/man8/cpuspeed_selinux.8
--- nsaserefpolicy/man/man8/cpuspeed_selinux.8	2013-03-15 11:41:11.860153501 +0100
+++ serefpolicy-3.7.19/man/man8/cpuspeed_selinux.8	2013-03-15 11:39:58.859151835 +0100
@@ -1,37 +1,63 @@
-.TH  "cpuspeed_selinux"  "8"  "cpuspeed" "dwalsh@redhat.com" "cpuspeed SELinux Policy documentation"
+.TH  "cpuspeed_selinux"  "8"  "13-01-04" "cpuspeed" "SELinux Policy documentation for cpuspeed"
 .SH "NAME"
 cpuspeed_selinux \- Security Enhanced Linux Policy for the cpuspeed processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cpuspeed processes via flexible mandatory access control.
 
+The cpuspeed processes execute with the cpuspeed_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep cpuspeed_t
+
+
+.SH "ENTRYPOINTS"
+
+The cpuspeed_t SELinux type can be entered via the "cpuspeed_exec_t" file type.  The default entrypoint paths for the cpuspeed_t domain are the following:"
+
+/usr/sbin/cpufreqd, /usr/sbin/cpuspeed, /usr/sbin/powernowd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cpuspeed policy is very flexible allowing users to setup their cpuspeed processes in as secure a method as possible.
+.PP
+The following process types are defined for cpuspeed:
+
+.EX
+.B cpuspeed_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cpuspeed_t
+
+can be used to make the process type cpuspeed_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cpuspeed policy is very flexible allowing users to setup their cpuspeed processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cpuspeed:
 
 
 .EX
 .PP
-.B cpuspeed_exec_t 
+.B cpuspeed_exec_t
 .EE
 
 - Set files with the cpuspeed_exec_t type, if you want to transition an executable to the cpuspeed_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/cpuspeed, /usr/sbin/cpufreqd, /usr/sbin/powernowd
 
 .EX
 .PP
-.B cpuspeed_var_run_t 
+.B cpuspeed_var_run_t
 .EE
 
 - Set files with the cpuspeed_var_run_t type, if you want to store the cpuspeed files under the /run directory.
@@ -39,28 +65,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cpuspeed policy is very flexible allowing users to setup their cpuspeed processes in as secure a method as possible.
-.PP 
-The following process types are defined for cpuspeed:
+.SH "MANAGED FILES"
 
-.EX
-.B cpuspeed_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cpuspeed_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cpuspeed_var_run_t
+
+	/var/run/cpufreqd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -73,11 +139,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cpuspeed(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cpuspeed(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/crack_selinux.8 serefpolicy-3.7.19/man/man8/crack_selinux.8
--- nsaserefpolicy/man/man8/crack_selinux.8	2013-03-15 11:41:12.101153507 +0100
+++ serefpolicy-3.7.19/man/man8/crack_selinux.8	2013-03-15 11:40:03.075151932 +0100
@@ -1,49 +1,71 @@
-.TH  "crack_selinux"  "8"  "crack" "dwalsh@redhat.com" "crack SELinux Policy documentation"
+.TH  "crack_selinux"  "8"  "13-01-04" "crack" "SELinux Policy documentation for crack"
 .SH "NAME"
 crack_selinux \- Security Enhanced Linux Policy for the crack processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the crack processes via flexible mandatory access control.
 
+The crack processes execute with the crack_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep crack_t
+
+
+.SH "ENTRYPOINTS"
+
+The crack_t SELinux type can be entered via the "crack_exec_t" file type.  The default entrypoint paths for the crack_t domain are the following:"
+
+/usr/sbin/crack_[a-z]*, /usr/sbin/cracklib-[a-z]*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux crack policy is very flexible allowing users to setup their crack processes in as secure a method as possible.
+.PP
+The following process types are defined for crack:
+
+.EX
+.B crack_t
+.EE
+.PP
+Note:
+.B semanage permissive -a crack_t
+
+can be used to make the process type crack_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux crack policy is very flexible allowing users to setup their crack processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for crack:
 
 
 .EX
 .PP
-.B crack_db_t 
+.B crack_db_t
 .EE
 
 - Set files with the crack_db_t type, if you want to treat the files as crack database content.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/cracklib_dict.*, /var/cache/cracklib(/.*)?, /usr/share/cracklib(/.*)?
 
 .EX
 .PP
-.B crack_exec_t 
+.B crack_exec_t
 .EE
 
 - Set files with the crack_exec_t type, if you want to transition an executable to the crack_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/cracklib-[a-z]*, /usr/sbin/crack_[a-z]*
 
 .EX
 .PP
-.B crack_tmp_t 
+.B crack_tmp_t
 .EE
 
 - Set files with the crack_tmp_t type, if you want to store crack temporary files in the /tmp directories.
@@ -51,28 +73,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux crack policy is very flexible allowing users to setup their crack processes in as secure a method as possible.
-.PP 
-The following process types are defined for crack:
+.SH "MANAGED FILES"
 
-.EX
-.B crack_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type crack_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B crack_db_t
+
+	/usr/lib(64)?/cracklib_dict.*
+.br
+	/var/cache/cracklib(/.*)?
+.br
+	/usr/share/cracklib(/.*)?
+.br
+
+.br
+.B crack_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +149,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), crack(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), crack(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/crond_selinux.8 serefpolicy-3.7.19/man/man8/crond_selinux.8
--- nsaserefpolicy/man/man8/crond_selinux.8	2013-03-15 11:41:09.738153453 +0100
+++ serefpolicy-3.7.19/man/man8/crond_selinux.8	2013-03-15 11:39:53.859151721 +0100
@@ -1,10 +1,40 @@
-.TH  "crond_selinux"  "8"  "crond" "dwalsh@redhat.com" "crond SELinux Policy documentation"
+.TH  "crond_selinux"  "8"  "13-01-04" "crond" "SELinux Policy documentation for crond"
 .SH "NAME"
 crond_selinux \- Security Enhanced Linux Policy for the crond processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the crond processes via flexible mandatory access control.
 
+The crond processes execute with the crond_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep crond_t
+
+
+.SH "ENTRYPOINTS"
+
+The crond_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,crond_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the crond_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/cron(d)?, /usr/sbin/atd, /usr/sbin/fcron, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux crond policy is very flexible allowing users to setup their crond processes in as secure a method as possible.
+.PP
+The following process types are defined for crond:
+
+.EX
+.B crond_t, cronjob_t, crontab_t
+.EE
+.PP
+Note:
+.B semanage permissive -a crond_t
+
+can be used to make the process type crond_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  crond policy is extremely flexible and has several booleans that allow you to manipulate the policy and run crond with the tightest access possible.
@@ -24,68 +54,42 @@
 .B setsebool -P cron_can_relabel 1
 .EE
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-.PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
-SELinux crond policy is very flexible allowing users to setup their crond processes in as secure a method as possible.
-.PP 
-The following file types are defined for crond:
-
+If you want to enable extra rules in the cron domain to support fcron, you must turn on the fcron_crond boolean.
 
 .EX
-.PP
-.B cron_log_t 
+.B setsebool -P fcron_crond 1
 .EE
 
-- Set files with the cron_log_t type, if you want to treat the data as cron log data, usually stored under the /var/log directory.
-
-
-.EX
 .PP
-.B cron_spool_t 
-.EE
-
-- Set files with the cron_spool_t type, if you want to store the cron files under the /var/spool directory.
-
-.br
-.TP 5
-Paths: 
-/var/spool/fcron, /var/spool/cron/crontabs
+If you want to allow system cron jobs to relabel filesystem for restoring file contexts, you must turn on the cron_can_relabel boolean.
 
 .EX
-.PP
-.B cron_var_lib_t 
+.B setsebool -P cron_can_relabel 1
 .EE
 
-- Set files with the cron_var_lib_t type, if you want to store the cron files under the /var/lib directory.
-
-
-.EX
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
 .PP
-.B cron_var_run_t 
-.EE
-
-- Set files with the cron_var_run_t type, if you want to store the cron files under the /run directory.
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux crond policy is very flexible allowing users to setup their crond processes in as secure a method as possible.
+.PP
+The following file types are defined for crond:
 
 
 .EX
 .PP
-.B crond_exec_t 
+.B crond_exec_t
 .EE
 
 - Set files with the crond_exec_t type, if you want to transition an executable to the crond_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/atd, /usr/sbin/fcron, /usr/sbin/cron(d)?
 
 .EX
 .PP
-.B crond_initrc_exec_t 
+.B crond_initrc_exec_t
 .EE
 
 - Set files with the crond_initrc_exec_t type, if you want to transition an executable to the crond_initrc_t domain.
@@ -93,7 +97,7 @@
 
 .EX
 .PP
-.B crond_tmp_t 
+.B crond_tmp_t
 .EE
 
 - Set files with the crond_tmp_t type, if you want to store crond temporary files in the /tmp directories.
@@ -101,40 +105,28 @@
 
 .EX
 .PP
-.B crond_var_run_t 
+.B crond_var_run_t
 .EE
 
 - Set files with the crond_var_run_t type, if you want to store the crond files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/crond?\.pid, /var/run/crond?\.reboot, /var/run/fcron\.pid, /var/run/fcron\.fifo, /var/run/atd\.pid, /var/run/anacron\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux crond policy is very flexible allowing users to setup their crond processes in as secure a method as possible.
-.PP 
-The following process types are defined for crond:
+.SH "MANAGED FILES"
 
-.EX
-.B crond_t, cronjob_t, crontab_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type crond_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -150,12 +142,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), crond(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), crond(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), crontab_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/crontab_selinux.8 serefpolicy-3.7.19/man/man8/crontab_selinux.8
--- nsaserefpolicy/man/man8/crontab_selinux.8	2013-03-15 11:41:12.107153507 +0100
+++ serefpolicy-3.7.19/man/man8/crontab_selinux.8	2013-03-15 11:40:03.474151941 +0100
@@ -1,37 +1,63 @@
-.TH  "crontab_selinux"  "8"  "crontab" "dwalsh@redhat.com" "crontab SELinux Policy documentation"
+.TH  "crontab_selinux"  "8"  "13-01-04" "crontab" "SELinux Policy documentation for crontab"
 .SH "NAME"
 crontab_selinux \- Security Enhanced Linux Policy for the crontab processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the crontab processes via flexible mandatory access control.
 
+The crontab processes execute with the crontab_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep crontab_t
+
+
+.SH "ENTRYPOINTS"
+
+The crontab_t SELinux type can be entered via the "crontab_exec_t" file type.  The default entrypoint paths for the crontab_t domain are the following:"
+
+/usr/bin/(f)?crontab, /usr/bin/at
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux crontab policy is very flexible allowing users to setup their crontab processes in as secure a method as possible.
+.PP
+The following process types are defined for crontab:
+
+.EX
+.B crontab_t
+.EE
+.PP
+Note:
+.B semanage permissive -a crontab_t
+
+can be used to make the process type crontab_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux crontab policy is very flexible allowing users to setup their crontab processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for crontab:
 
 
 .EX
 .PP
-.B crontab_exec_t 
+.B crontab_exec_t
 .EE
 
 - Set files with the crontab_exec_t type, if you want to transition an executable to the crontab_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/(f)?crontab, /usr/bin/at
 
 .EX
 .PP
-.B crontab_tmp_t 
+.B crontab_tmp_t
 .EE
 
 - Set files with the crontab_tmp_t type, if you want to store crontab temporary files in the /tmp directories.
@@ -39,28 +65,98 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux crontab policy is very flexible allowing users to setup their crontab processes in as secure a method as possible.
-.PP 
-The following process types are defined for crontab:
+.SH "MANAGED FILES"
 
-.EX
-.B crontab_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type crontab_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B crontab_tmp_t
+
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_cron_spool_t
+
+	/var/spool/at(/.*)?
+.br
+	/var/spool/cron
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -73,11 +169,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), crontab(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), crontab(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ctdbd_selinux.8 serefpolicy-3.7.19/man/man8/ctdbd_selinux.8
--- nsaserefpolicy/man/man8/ctdbd_selinux.8	2013-03-15 11:41:11.859153501 +0100
+++ serefpolicy-3.7.19/man/man8/ctdbd_selinux.8	2013-03-15 11:39:58.792151834 +0100
@@ -1,31 +1,55 @@
-.TH  "ctdbd_selinux"  "8"  "ctdbd" "dwalsh@redhat.com" "ctdbd SELinux Policy documentation"
+.TH  "ctdbd_selinux"  "8"  "13-01-04" "ctdbd" "SELinux Policy documentation for ctdbd"
 .SH "NAME"
 ctdbd_selinux \- Security Enhanced Linux Policy for the ctdbd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ctdbd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ctdbd
-(policy for ctdbd)
-processes via flexible mandatory access
-control.  
+The ctdbd processes execute with the ctdbd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ctdbd_t
+
+
+.SH "ENTRYPOINTS"
+
+The ctdbd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,ctdbd_exec_t" file types.  The default entrypoint paths for the ctdbd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/ctdbd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
+.PP
+The following process types are defined for ctdbd:
+
+.EX
+.B ctdbd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ctdbd_t
+
+can be used to make the process type ctdbd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ctdbd:
 
 
 .EX
 .PP
-.B ctdbd_exec_t 
+.B ctdbd_exec_t
 .EE
 
 - Set files with the ctdbd_exec_t type, if you want to transition an executable to the ctdbd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B ctdbd_initrc_exec_t 
+.B ctdbd_initrc_exec_t
 .EE
 
 - Set files with the ctdbd_initrc_exec_t type, if you want to transition an executable to the ctdbd_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B ctdbd_log_t 
+.B ctdbd_log_t
 .EE
 
 - Set files with the ctdbd_log_t type, if you want to treat the data as ctdbd log data, usually stored under the /var/log directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B ctdbd_spool_t 
+.B ctdbd_spool_t
 .EE
 
 - Set files with the ctdbd_spool_t type, if you want to store the ctdbd files under the /var/spool directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B ctdbd_tmp_t 
+.B ctdbd_tmp_t
 .EE
 
 - Set files with the ctdbd_tmp_t type, if you want to store ctdbd temporary files in the /tmp directories.
@@ -65,19 +89,15 @@
 
 .EX
 .PP
-.B ctdbd_var_lib_t 
+.B ctdbd_var_lib_t
 .EE
 
 - Set files with the ctdbd_var_lib_t type, if you want to store the ctdbd files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/ctdb(/.*)?, /etc/ctdb(/.*)?, /var/lib/ctdbd(/.*)?, /var/ctdbd(/.*)?
 
 .EX
 .PP
-.B ctdbd_var_run_t 
+.B ctdbd_var_run_t
 .EE
 
 - Set files with the ctdbd_var_run_t type, if you want to store the ctdbd files under the /run directory.
@@ -85,51 +105,45 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ctdbd:
 
 .EX
 .TP 5
-.B ctdb_port_t 
+.B ctdb_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 4379
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
-.PP 
-The following process types are defined for ctdbd:
-
-.EX
-.B ctdbd_t 
+udp 4379
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type ctdbd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -145,11 +159,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ctdbd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ctdbd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cupsd_config_selinux.8 serefpolicy-3.7.19/man/man8/cupsd_config_selinux.8
--- nsaserefpolicy/man/man8/cupsd_config_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/cupsd_config_selinux.8	2013-03-15 11:39:59.680151854 +0100
@@ -0,0 +1,228 @@
+.TH  "cupsd_config_selinux"  "8"  "13-01-04" "cupsd_config" "SELinux Policy documentation for cupsd_config"
+.SH "NAME"
+cupsd_config_selinux \- Security Enhanced Linux Policy for the cupsd_config processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the cupsd_config processes via flexible mandatory access control.
+
+The cupsd_config processes execute with the cupsd_config_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep cupsd_config_t
+
+
+.SH "ENTRYPOINTS"
+
+The cupsd_config_t SELinux type can be entered via the "cupsd_config_exec_t" file type.  The default entrypoint paths for the cupsd_config_t domain are the following:"
+
+/usr/sbin/hal_lpadmin, /usr/libexec/hal_lpadmin, /usr/bin/cups-config-daemon, /usr/sbin/printconf-backend, /lib/udev/udev-configure-printer, /usr/libexec/cups-pk-helper-mechanism
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cupsd_config policy is very flexible allowing users to setup their cupsd_config processes in as secure a method as possible.
+.PP
+The following process types are defined for cupsd_config:
+
+.EX
+.B cupsd_config_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cupsd_config_t
+
+can be used to make the process type cupsd_config_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux cupsd_config policy is very flexible allowing users to setup their cupsd_config processes in as secure a method as possible.
+.PP
+The following file types are defined for cupsd_config:
+
+
+.EX
+.PP
+.B cupsd_config_exec_t
+.EE
+
+- Set files with the cupsd_config_exec_t type, if you want to transition an executable to the cupsd_config_t domain.
+
+
+.EX
+.PP
+.B cupsd_config_var_run_t
+.EE
+
+- Set files with the cupsd_config_var_run_t type, if you want to store the cupsd config files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type cupsd_config_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cupsd_config_var_run_t
+
+	/var/run/udev-configure-printer(/.*)?
+.br
+
+.br
+.B cupsd_etc_t
+
+	/etc/cups(/.*)?
+.br
+	/usr/share/cups(/.*)?
+.br
+
+.br
+.B cupsd_log_t
+
+	/var/log/cups(/.*)?
+.br
+	/var/log/turboprint.*
+.br
+	/usr/local/Brother/fax/.*\.log.*
+.br
+
+.br
+.B cupsd_rw_etc_t
+
+	/etc/printcap.*
+.br
+	/etc/cups/ppd(/.*)?
+.br
+	/var/cache/cups(/.*)?
+.br
+	/etc/cups/certs/.*
+.br
+	/etc/cups/lpoptions.*
+.br
+	/var/cache/foomatic(/.*)?
+.br
+	/usr/local/Brother/(.*/)?inf(/.*)?
+.br
+	/usr/local/Printer/(.*/)?inf(/.*)?
+.br
+	/etc/cups/cupsd\.conf.*
+.br
+	/var/lib/cups/certs/.*
+.br
+	/opt/gutenprint/ppds(/.*)?
+.br
+	/etc/cups/classes\.conf.*
+.br
+	/etc/cups/printers\.conf.*
+.br
+	/etc/cups/subscriptions.*
+.br
+	/usr/local/linuxprinter/ppd(/.*)?
+.br
+	/var/cache/alchemist/printconf.*
+.br
+	/etc/alchemist/namespace/printconf(/.*)?
+.br
+	/etc/cups/certs
+.br
+	/etc/cups/ppds\.dat
+.br
+	/var/lib/cups/certs
+.br
+	/usr/share/foomatic/db/oldprinterids
+.br
+
+.br
+.B cupsd_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), cupsd_config(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, cupsd_selinux(8), cupsd_selinux(8), cupsd_lpd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/cupsd_lpd_selinux.8 serefpolicy-3.7.19/man/man8/cupsd_lpd_selinux.8
--- nsaserefpolicy/man/man8/cupsd_lpd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/cupsd_lpd_selinux.8	2013-03-15 11:39:55.896151768 +0100
@@ -0,0 +1,156 @@
+.TH  "cupsd_lpd_selinux"  "8"  "13-01-04" "cupsd_lpd" "SELinux Policy documentation for cupsd_lpd"
+.SH "NAME"
+cupsd_lpd_selinux \- Security Enhanced Linux Policy for the cupsd_lpd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the cupsd_lpd processes via flexible mandatory access control.
+
+The cupsd_lpd processes execute with the cupsd_lpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep cupsd_lpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The cupsd_lpd_t SELinux type can be entered via the "cupsd_lpd_exec_t" file type.  The default entrypoint paths for the cupsd_lpd_t domain are the following:"
+
+/usr/lib/cups/daemon/cups-lpd, /usr/lib64/cups/daemon/cups-lpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cupsd_lpd policy is very flexible allowing users to setup their cupsd_lpd processes in as secure a method as possible.
+.PP
+The following process types are defined for cupsd_lpd:
+
+.EX
+.B cupsd_lpd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cupsd_lpd_t
+
+can be used to make the process type cupsd_lpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux cupsd_lpd policy is very flexible allowing users to setup their cupsd_lpd processes in as secure a method as possible.
+.PP
+The following file types are defined for cupsd_lpd:
+
+
+.EX
+.PP
+.B cupsd_lpd_exec_t
+.EE
+
+- Set files with the cupsd_lpd_exec_t type, if you want to transition an executable to the cupsd_lpd_t domain.
+
+
+.EX
+.PP
+.B cupsd_lpd_tmp_t
+.EE
+
+- Set files with the cupsd_lpd_tmp_t type, if you want to store cupsd lpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_lpd_var_run_t
+.EE
+
+- Set files with the cupsd_lpd_var_run_t type, if you want to store the cupsd lpd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type cupsd_lpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cupsd_lpd_tmp_t
+
+
+.br
+.B cupsd_lpd_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), cupsd_lpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, cupsd_selinux(8), cupsd_selinux(8), cupsd_config_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/cupsd_selinux.8 serefpolicy-3.7.19/man/man8/cupsd_selinux.8
--- nsaserefpolicy/man/man8/cupsd_selinux.8	2013-03-15 11:41:10.948153480 +0100
+++ serefpolicy-3.7.19/man/man8/cupsd_selinux.8	2013-03-15 11:39:55.189151752 +0100
@@ -1,57 +1,63 @@
-.TH  "cupsd_selinux"  "8"  "cupsd" "dwalsh@redhat.com" "cupsd SELinux Policy documentation"
+.TH  "cupsd_selinux"  "8"  "13-01-04" "cupsd" "SELinux Policy documentation for cupsd"
 .SH "NAME"
 cupsd_selinux \- Security Enhanced Linux Policy for the cupsd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cupsd processes via flexible mandatory access control.
 
+The cupsd processes execute with the cupsd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+.B ps -eZ | grep cupsd_t
+
+
+.SH "ENTRYPOINTS"
+
+The cupsd_t SELinux type can be entered via the "cupsd_exec_t" file type.  The default entrypoint paths for the cupsd_t domain are the following:"
+
+/usr/sbin/cupsd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to files.
 SELinux cupsd policy is very flexible allowing users to setup their cupsd processes in as secure a method as possible.
-.PP 
-The following file types are defined for cupsd:
-
+.PP
+The following process types are defined for cupsd:
 
 .EX
-.PP
-.B cups_pdf_exec_t 
+.B cupsd_t, cupsd_config_t, cupsd_lpd_t, cups_pdf_t
 .EE
+.PP
+Note:
+.B semanage permissive -a cupsd_t
 
-- Set files with the cups_pdf_exec_t type, if you want to transition an executable to the cups_pdf_t domain.
-
-.br
-.TP 5
-Paths: 
-/usr/lib/cups/backend/cups-pdf, /usr/lib64/cups/backend/cups-pdf
+can be used to make the process type cupsd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
-.EX
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
 .PP
-.B cups_pdf_tmp_t 
-.EE
-
-- Set files with the cups_pdf_tmp_t type, if you want to store cups pdf temporary files in the /tmp directories.
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux cupsd policy is very flexible allowing users to setup their cupsd processes in as secure a method as possible.
+.PP
+The following file types are defined for cupsd:
 
 
 .EX
 .PP
-.B cupsd_config_exec_t 
+.B cupsd_config_exec_t
 .EE
 
 - Set files with the cupsd_config_exec_t type, if you want to transition an executable to the cupsd_config_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/printconf-backend, /usr/sbin/hal_lpadmin, /usr/libexec/cups-pk-helper-mechanism, /usr/libexec/hal_lpadmin, /lib/udev/udev-configure-printer, /usr/bin/cups-config-daemon
 
 .EX
 .PP
-.B cupsd_config_var_run_t 
+.B cupsd_config_var_run_t
 .EE
 
 - Set files with the cupsd_config_var_run_t type, if you want to store the cupsd config files under the /run directory.
@@ -59,19 +65,15 @@
 
 .EX
 .PP
-.B cupsd_etc_t 
+.B cupsd_etc_t
 .EE
 
 - Set files with the cupsd_etc_t type, if you want to store cupsd files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/usr/share/cups(/.*)?, /etc/cups(/.*)?
 
 .EX
 .PP
-.B cupsd_exec_t 
+.B cupsd_exec_t
 .EE
 
 - Set files with the cupsd_exec_t type, if you want to transition an executable to the cupsd_t domain.
@@ -79,7 +81,7 @@
 
 .EX
 .PP
-.B cupsd_initrc_exec_t 
+.B cupsd_initrc_exec_t
 .EE
 
 - Set files with the cupsd_initrc_exec_t type, if you want to transition an executable to the cupsd_initrc_t domain.
@@ -87,7 +89,7 @@
 
 .EX
 .PP
-.B cupsd_interface_t 
+.B cupsd_interface_t
 .EE
 
 - Set files with the cupsd_interface_t type, if you want to treat the files as cupsd interface data.
@@ -95,7 +97,7 @@
 
 .EX
 .PP
-.B cupsd_lock_t 
+.B cupsd_lock_t
 .EE
 
 - Set files with the cupsd_lock_t type, if you want to treat the files as cupsd lock data, stored under the /var/lock directory
@@ -103,31 +105,23 @@
 
 .EX
 .PP
-.B cupsd_log_t 
+.B cupsd_log_t
 .EE
 
 - Set files with the cupsd_log_t type, if you want to treat the data as cupsd log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/cups(/.*)?, /usr/local/Brother/fax/.*\.log, /var/log/turboprint.*
 
 .EX
 .PP
-.B cupsd_lpd_exec_t 
+.B cupsd_lpd_exec_t
 .EE
 
 - Set files with the cupsd_lpd_exec_t type, if you want to transition an executable to the cupsd_lpd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib/cups/daemon/cups-lpd, /usr/lib64/cups/daemon/cups-lpd
 
 .EX
 .PP
-.B cupsd_lpd_tmp_t 
+.B cupsd_lpd_tmp_t
 .EE
 
 - Set files with the cupsd_lpd_tmp_t type, if you want to store cupsd lpd temporary files in the /tmp directories.
@@ -135,7 +129,7 @@
 
 .EX
 .PP
-.B cupsd_lpd_var_run_t 
+.B cupsd_lpd_var_run_t
 .EE
 
 - Set files with the cupsd_lpd_var_run_t type, if you want to store the cupsd lpd files under the /run directory.
@@ -143,19 +137,15 @@
 
 .EX
 .PP
-.B cupsd_rw_etc_t 
+.B cupsd_rw_etc_t
 .EE
 
 - Set files with the cupsd_rw_etc_t type, if you want to store cupsd rw files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/etc/cups/lpoptions.*, /etc/cups/subscriptions.*, /usr/local/Brother/(.*/)?inf(/.*)?, /etc/cups/ppd(/.*)?, /opt/gutenprint/ppds(/.*)?, /etc/printcap.*, /etc/alchemist/namespace/printconf(/.*)?, /usr/local/Printer/(.*/)?inf(/.*)?, /var/lib/cups/certs, /usr/local/linuxprinter/ppd(/.*)?, /etc/cups/ppds\.dat, /etc/cups/certs, /etc/cups/certs/.*, /etc/cups/printers\.conf.*, /var/lib/cups/certs/.*, /var/cache/foomatic(/.*)?, /etc/cups/classes\.conf.*, /var/cache/alchemist/printconf.*, /etc/cups/cupsd\.conf.*, /var/cache/cups(/.*)?, /usr/share/foomatic/db/oldprinterids
 
 .EX
 .PP
-.B cupsd_tmp_t 
+.B cupsd_tmp_t
 .EE
 
 - Set files with the cupsd_tmp_t type, if you want to store cupsd temporary files in the /tmp directories.
@@ -163,40 +153,218 @@
 
 .EX
 .PP
-.B cupsd_var_run_t 
+.B cupsd_var_run_t
 .EE
 
 - Set files with the cupsd_var_run_t type, if you want to store the cupsd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/ccpd(/.*)?, /var/ekpd(/.*)?, /var/turboprint(/.*)?, /var/run/cups(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cupsd policy is very flexible allowing users to setup their cupsd processes in as secure a method as possible.
-.PP 
-The following process types are defined for cupsd:
+.SH "MANAGED FILES"
+
+The SELinux process type cupsd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cupsd_interface_t
+
+	/etc/cups/interfaces(/.*)?
+.br
+
+.br
+.B cupsd_lock_t
+
+
+.br
+.B cupsd_log_t
+
+	/var/log/cups(/.*)?
+.br
+	/var/log/turboprint.*
+.br
+	/usr/local/Brother/fax/.*\.log.*
+.br
+
+.br
+.B cupsd_rw_etc_t
+
+	/etc/printcap.*
+.br
+	/etc/cups/ppd(/.*)?
+.br
+	/var/cache/cups(/.*)?
+.br
+	/etc/cups/certs/.*
+.br
+	/etc/cups/lpoptions.*
+.br
+	/var/cache/foomatic(/.*)?
+.br
+	/usr/local/Brother/(.*/)?inf(/.*)?
+.br
+	/usr/local/Printer/(.*/)?inf(/.*)?
+.br
+	/etc/cups/cupsd\.conf.*
+.br
+	/var/lib/cups/certs/.*
+.br
+	/opt/gutenprint/ppds(/.*)?
+.br
+	/etc/cups/classes\.conf.*
+.br
+	/etc/cups/printers\.conf.*
+.br
+	/etc/cups/subscriptions.*
+.br
+	/usr/local/linuxprinter/ppd(/.*)?
+.br
+	/var/cache/alchemist/printconf.*
+.br
+	/etc/alchemist/namespace/printconf(/.*)?
+.br
+	/etc/cups/certs
+.br
+	/etc/cups/ppds\.dat
+.br
+	/var/lib/cups/certs
+.br
+	/usr/share/foomatic/db/oldprinterids
+.br
+
+.br
+.B cupsd_tmp_t
+
+
+.br
+.B cupsd_var_run_t
+
+	/var/ccpd(/.*)?
+.br
+	/var/ekpd(/.*)?
+.br
+	/var/run/cups(/.*)?
+.br
+	/var/turboprint(/.*)?
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B print_spool_t
+
+	/var/spool/lpd(/.*)?
+.br
+	/var/spool/cups(/.*)?
+.br
+	/var/spool/cups-pdf(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
 
-.EX
-.B cupsd_t, cupsd_config_t, cupsd_lpd_t, cups_pdf_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -209,11 +377,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cupsd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cupsd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, cups_pdf_selinux(8), cupsd_config_selinux(8), cupsd_lpd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/cups_pdf_selinux.8 serefpolicy-3.7.19/man/man8/cups_pdf_selinux.8
--- nsaserefpolicy/man/man8/cups_pdf_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/cups_pdf_selinux.8	2013-03-15 11:39:54.772151742 +0100
@@ -0,0 +1,178 @@
+.TH  "cups_pdf_selinux"  "8"  "13-01-04" "cups_pdf" "SELinux Policy documentation for cups_pdf"
+.SH "NAME"
+cups_pdf_selinux \- Security Enhanced Linux Policy for the cups_pdf processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the cups_pdf processes via flexible mandatory access control.
+
+The cups_pdf processes execute with the cups_pdf_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep cups_pdf_t
+
+
+.SH "ENTRYPOINTS"
+
+The cups_pdf_t SELinux type can be entered via the "cups_pdf_exec_t" file type.  The default entrypoint paths for the cups_pdf_t domain are the following:"
+
+/usr/lib/cups/backend/cups-pdf, /usr/lib64/cups/backend/cups-pdf
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cups_pdf policy is very flexible allowing users to setup their cups_pdf processes in as secure a method as possible.
+.PP
+The following process types are defined for cups_pdf:
+
+.EX
+.B cups_pdf_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cups_pdf_t
+
+can be used to make the process type cups_pdf_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux cups_pdf policy is very flexible allowing users to setup their cups_pdf processes in as secure a method as possible.
+.PP
+The following file types are defined for cups_pdf:
+
+
+.EX
+.PP
+.B cups_pdf_exec_t
+.EE
+
+- Set files with the cups_pdf_exec_t type, if you want to transition an executable to the cups_pdf_t domain.
+
+
+.EX
+.PP
+.B cups_pdf_tmp_t
+.EE
+
+- Set files with the cups_pdf_tmp_t type, if you want to store cups pdf temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type cups_pdf_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B cups_pdf_tmp_t
+
+
+.br
+.B cupsd_log_t
+
+	/var/log/cups(/.*)?
+.br
+	/var/log/turboprint.*
+.br
+	/usr/local/Brother/fax/.*\.log.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B print_spool_t
+
+	/var/spool/lpd(/.*)?
+.br
+	/var/spool/cups(/.*)?
+.br
+	/var/spool/cups-pdf(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), cups_pdf(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, cupsd_selinux(8), cupsd_config_selinux(8), cupsd_lpd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/cvs_selinux.8 serefpolicy-3.7.19/man/man8/cvs_selinux.8
--- nsaserefpolicy/man/man8/cvs_selinux.8	2013-03-15 11:41:11.181153486 +0100
+++ serefpolicy-3.7.19/man/man8/cvs_selinux.8	2013-03-15 11:39:55.397151756 +0100
@@ -1,54 +1,81 @@
-.TH  "cvs_selinux"  "8"  "cvs" "dwalsh@redhat.com" "cvs SELinux Policy documentation"
+.TH  "cvs_selinux"  "8"  "13-01-04" "cvs" "SELinux Policy documentation for cvs"
 .SH "NAME"
 cvs_selinux \- Security Enhanced Linux Policy for the cvs processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cvs processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B cvs
-(Concurrent versions system)
-processes via flexible mandatory access
-control.  
+The cvs processes execute with the cvs_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep cvs_t
+
+
+.SH "ENTRYPOINTS"
+
+The cvs_t SELinux type can be entered via the "cvs_exec_t" file type.  The default entrypoint paths for the cvs_t domain are the following:"
+
+/usr/bin/cvs
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
+.PP
+The following process types are defined for cvs:
+
+.EX
+.B cvs_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cvs_t
+
+can be used to make the process type cvs_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  cvs policy is extremely flexible and has several booleans that allow you to manipulate the policy and run cvs with the tightest access possible.
 
 
 .PP
-If you want to allow cvs daemon to read shado, you must turn on the allow_cvs_read_shadow boolean.
+If you want to allow cvs daemon to read shadow, you must turn on the allow_cvs_read_shadow boolean.
+
+.EX
+.B setsebool -P allow_cvs_read_shadow 1
+.EE
+
+.PP
+If you want to allow cvs daemon to read shadow, you must turn on the allow_cvs_read_shadow boolean.
 
 .EX
 .B setsebool -P allow_cvs_read_shadow 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cvs:
 
 
 .EX
 .PP
-.B cvs_data_t 
+.B cvs_data_t
 .EE
 
 - Set files with the cvs_data_t type, if you want to treat the files as cvs content.
 
-.br
-.TP 5
-Paths: 
-/opt/cvs(/.*)?, /var/cvs(/.*)?
 
 .EX
 .PP
-.B cvs_exec_t 
+.B cvs_exec_t
 .EE
 
 - Set files with the cvs_exec_t type, if you want to transition an executable to the cvs_t domain.
@@ -56,7 +83,7 @@
 
 .EX
 .PP
-.B cvs_initrc_exec_t 
+.B cvs_initrc_exec_t
 .EE
 
 - Set files with the cvs_initrc_exec_t type, if you want to transition an executable to the cvs_initrc_t domain.
@@ -64,7 +91,7 @@
 
 .EX
 .PP
-.B cvs_keytab_t 
+.B cvs_keytab_t
 .EE
 
 - Set files with the cvs_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -72,7 +99,7 @@
 
 .EX
 .PP
-.B cvs_tmp_t 
+.B cvs_tmp_t
 .EE
 
 - Set files with the cvs_tmp_t type, if you want to store cvs temporary files in the /tmp directories.
@@ -80,7 +107,7 @@
 
 .EX
 .PP
-.B cvs_var_run_t 
+.B cvs_var_run_t
 .EE
 
 - Set files with the cvs_var_run_t type, if you want to store the cvs files under the /run directory.
@@ -88,51 +115,121 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for cvs:
 
 .EX
 .TP 5
-.B cvs_port_t 
+.B cvs_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 2401
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
-.PP 
-The following process types are defined for cvs:
-
-.EX
-.B cvs_t 
+udp 2401
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type cvs_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cvs_data_t
+
+	/opt/cvs(/.*)?
+.br
+	/var/cvs(/.*)?
+.br
+
+.br
+.B cvs_tmp_t
+
+
+.br
+.B cvs_var_run_t
+
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -151,12 +248,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cvs(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cvs(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/cyphesis_selinux.8 serefpolicy-3.7.19/man/man8/cyphesis_selinux.8
--- nsaserefpolicy/man/man8/cyphesis_selinux.8	2013-03-15 11:41:11.821153500 +0100
+++ serefpolicy-3.7.19/man/man8/cyphesis_selinux.8	2013-03-15 11:39:57.592151807 +0100
@@ -1,31 +1,55 @@
-.TH  "cyphesis_selinux"  "8"  "cyphesis" "dwalsh@redhat.com" "cyphesis SELinux Policy documentation"
+.TH  "cyphesis_selinux"  "8"  "13-01-04" "cyphesis" "SELinux Policy documentation for cyphesis"
 .SH "NAME"
 cyphesis_selinux \- Security Enhanced Linux Policy for the cyphesis processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cyphesis processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B cyphesis
-(Cyphesis WorldForge game server)
-processes via flexible mandatory access
-control.  
+The cyphesis processes execute with the cyphesis_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep cyphesis_t
+
+
+.SH "ENTRYPOINTS"
+
+The cyphesis_t SELinux type can be entered via the "cyphesis_exec_t" file type.  The default entrypoint paths for the cyphesis_t domain are the following:"
+
+/usr/bin/cyphesis
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
+.PP
+The following process types are defined for cyphesis:
+
+.EX
+.B cyphesis_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cyphesis_t
+
+can be used to make the process type cyphesis_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cyphesis:
 
 
 .EX
 .PP
-.B cyphesis_exec_t 
+.B cyphesis_exec_t
 .EE
 
 - Set files with the cyphesis_exec_t type, if you want to transition an executable to the cyphesis_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B cyphesis_log_t 
+.B cyphesis_log_t
 .EE
 
 - Set files with the cyphesis_log_t type, if you want to treat the data as cyphesis log data, usually stored under the /var/log directory.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B cyphesis_tmp_t 
+.B cyphesis_tmp_t
 .EE
 
 - Set files with the cyphesis_tmp_t type, if you want to store cyphesis temporary files in the /tmp directories.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B cyphesis_var_run_t 
+.B cyphesis_var_run_t
 .EE
 
 - Set files with the cyphesis_var_run_t type, if you want to store the cyphesis files under the /run directory.
@@ -57,51 +81,101 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for cyphesis:
 
 .EX
 .TP 5
-.B cyphesis_port_t 
+.B cyphesis_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 6767,6769,6780-6799
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
-.PP 
-The following process types are defined for cyphesis:
-
-.EX
-.B cyphesis_t 
+udp 32771
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type cyphesis_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cyphesis_log_t
+
+	/var/log/cyphesis(/.*)?
+.br
+
+.br
+.B cyphesis_var_run_t
+
+	/var/run/cyphesis(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -117,11 +191,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cyphesis(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cyphesis(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/cyrus_selinux.8 serefpolicy-3.7.19/man/man8/cyrus_selinux.8
--- nsaserefpolicy/man/man8/cyrus_selinux.8	2013-03-15 11:41:11.754153499 +0100
+++ serefpolicy-3.7.19/man/man8/cyrus_selinux.8	2013-03-15 11:39:56.376151779 +0100
@@ -1,31 +1,55 @@
-.TH  "cyrus_selinux"  "8"  "cyrus" "dwalsh@redhat.com" "cyrus SELinux Policy documentation"
+.TH  "cyrus_selinux"  "8"  "13-01-04" "cyrus" "SELinux Policy documentation for cyrus"
 .SH "NAME"
 cyrus_selinux \- Security Enhanced Linux Policy for the cyrus processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the cyrus processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B cyrus
-(Cyrus is an IMAP service intended to be run on sealed servers)
-processes via flexible mandatory access
-control.  
+The cyrus processes execute with the cyrus_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep cyrus_t
+
+
+.SH "ENTRYPOINTS"
+
+The cyrus_t SELinux type can be entered via the "cyrus_exec_t" file type.  The default entrypoint paths for the cyrus_t domain are the following:"
+
+/usr/lib(64)?/cyrus-imapd/cyrus-master
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux cyrus policy is very flexible allowing users to setup their cyrus processes in as secure a method as possible.
+.PP
+The following process types are defined for cyrus:
+
+.EX
+.B cyrus_t
+.EE
+.PP
+Note:
+.B semanage permissive -a cyrus_t
+
+can be used to make the process type cyrus_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux cyrus policy is very flexible allowing users to setup their cyrus processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for cyrus:
 
 
 .EX
 .PP
-.B cyrus_exec_t 
+.B cyrus_exec_t
 .EE
 
 - Set files with the cyrus_exec_t type, if you want to transition an executable to the cyrus_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B cyrus_initrc_exec_t 
+.B cyrus_initrc_exec_t
 .EE
 
 - Set files with the cyrus_initrc_exec_t type, if you want to transition an executable to the cyrus_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B cyrus_keytab_t 
+.B cyrus_keytab_t
 .EE
 
 - Set files with the cyrus_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B cyrus_tmp_t 
+.B cyrus_tmp_t
 .EE
 
 - Set files with the cyrus_tmp_t type, if you want to store cyrus temporary files in the /tmp directories.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B cyrus_var_lib_t 
+.B cyrus_var_lib_t
 .EE
 
 - Set files with the cyrus_var_lib_t type, if you want to store the cyrus files under the /var/lib directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B cyrus_var_run_t 
+.B cyrus_var_run_t
 .EE
 
 - Set files with the cyrus_var_run_t type, if you want to store the cyrus files under the /run directory.
@@ -73,28 +97,88 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux cyrus policy is very flexible allowing users to setup their cyrus processes in as secure a method as possible.
-.PP 
-The following process types are defined for cyrus:
+.SH "MANAGED FILES"
 
-.EX
-.B cyrus_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type cyrus_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cyrus_tmp_t
+
+
+.br
+.B cyrus_var_lib_t
+
+	/var/lib/imap(/.*)?
+.br
+
+.br
+.B cyrus_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -107,11 +191,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), cyrus(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), cyrus(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dbskkd_selinux.8 serefpolicy-3.7.19/man/man8/dbskkd_selinux.8
--- nsaserefpolicy/man/man8/dbskkd_selinux.8	2013-03-15 11:41:12.129153507 +0100
+++ serefpolicy-3.7.19/man/man8/dbskkd_selinux.8	2013-03-15 11:40:03.812151948 +0100
@@ -1,25 +1,55 @@
-.TH  "dbskkd_selinux"  "8"  "dbskkd" "dwalsh@redhat.com" "dbskkd SELinux Policy documentation"
+.TH  "dbskkd_selinux"  "8"  "13-01-04" "dbskkd" "SELinux Policy documentation for dbskkd"
 .SH "NAME"
 dbskkd_selinux \- Security Enhanced Linux Policy for the dbskkd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dbskkd processes via flexible mandatory access control.
 
+The dbskkd processes execute with the dbskkd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep dbskkd_t
+
+
+.SH "ENTRYPOINTS"
+
+The dbskkd_t SELinux type can be entered via the "dbskkd_exec_t" file type.  The default entrypoint paths for the dbskkd_t domain are the following:"
+
+/usr/sbin/dbskkd-cdb
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
+.PP
+The following process types are defined for dbskkd:
+
+.EX
+.B dbskkd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dbskkd_t
+
+can be used to make the process type dbskkd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dbskkd:
 
 
 .EX
 .PP
-.B dbskkd_exec_t 
+.B dbskkd_exec_t
 .EE
 
 - Set files with the dbskkd_exec_t type, if you want to transition an executable to the dbskkd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B dbskkd_tmp_t 
+.B dbskkd_tmp_t
 .EE
 
 - Set files with the dbskkd_tmp_t type, if you want to store dbskkd temporary files in the /tmp directories.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B dbskkd_var_run_t 
+.B dbskkd_var_run_t
 .EE
 
 - Set files with the dbskkd_var_run_t type, if you want to store the dbskkd files under the /run directory.
@@ -43,51 +73,87 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for dbskkd:
 
 .EX
 .TP 5
-.B dbskkd_port_t 
+.B dbskkd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 1178
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
-.PP 
-The following process types are defined for dbskkd:
+.SH "MANAGED FILES"
 
-.EX
-.B dbskkd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dbskkd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dbskkd_tmp_t
+
+
+.br
+.B dbskkd_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,11 +169,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dbskkd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dbskkd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dcc_client_selinux.8 serefpolicy-3.7.19/man/man8/dcc_client_selinux.8
--- nsaserefpolicy/man/man8/dcc_client_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/dcc_client_selinux.8	2013-03-15 11:39:58.904151836 +0100
@@ -0,0 +1,174 @@
+.TH  "dcc_client_selinux"  "8"  "13-01-04" "dcc_client" "SELinux Policy documentation for dcc_client"
+.SH "NAME"
+dcc_client_selinux \- Security Enhanced Linux Policy for the dcc_client processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the dcc_client processes via flexible mandatory access control.
+
+The dcc_client processes execute with the dcc_client_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep dcc_client_t
+
+
+.SH "ENTRYPOINTS"
+
+The dcc_client_t SELinux type can be entered via the "dcc_client_exec_t" file type.  The default entrypoint paths for the dcc_client_t domain are the following:"
+
+/usr/bin/dccproc
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dcc_client policy is very flexible allowing users to setup their dcc_client processes in as secure a method as possible.
+.PP
+The following process types are defined for dcc_client:
+
+.EX
+.B dcc_client_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dcc_client_t
+
+can be used to make the process type dcc_client_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dcc_client policy is very flexible allowing users to setup their dcc_client processes in as secure a method as possible.
+.PP
+The following file types are defined for dcc_client:
+
+
+.EX
+.PP
+.B dcc_client_exec_t
+.EE
+
+- Set files with the dcc_client_exec_t type, if you want to transition an executable to the dcc_client_t domain.
+
+
+.EX
+.PP
+.B dcc_client_map_t
+.EE
+
+- Set files with the dcc_client_map_t type, if you want to treat the files as dcc client map data.
+
+
+.EX
+.PP
+.B dcc_client_tmp_t
+.EE
+
+- Set files with the dcc_client_tmp_t type, if you want to store dcc client temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type dcc_client_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dcc_client_map_t
+
+	/etc/dcc/map
+.br
+	/var/dcc/map
+.br
+	/var/lib/dcc/map
+.br
+	/var/run/dcc/map
+.br
+
+.br
+.B dcc_client_tmp_t
+
+
+.br
+.B dcc_var_t
+
+	/etc/dcc(/.*)?
+.br
+	/var/dcc(/.*)?
+.br
+	/var/lib/dcc(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), dcc_client(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dcc_dbclean_selinux(8), dccd_selinux(8), dccifd_selinux(8), dccm_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dcc_dbclean_selinux.8 serefpolicy-3.7.19/man/man8/dcc_dbclean_selinux.8
--- nsaserefpolicy/man/man8/dcc_dbclean_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/dcc_dbclean_selinux.8	2013-03-15 11:39:55.979151770 +0100
@@ -0,0 +1,166 @@
+.TH  "dcc_dbclean_selinux"  "8"  "13-01-04" "dcc_dbclean" "SELinux Policy documentation for dcc_dbclean"
+.SH "NAME"
+dcc_dbclean_selinux \- Security Enhanced Linux Policy for the dcc_dbclean processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the dcc_dbclean processes via flexible mandatory access control.
+
+The dcc_dbclean processes execute with the dcc_dbclean_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep dcc_dbclean_t
+
+
+.SH "ENTRYPOINTS"
+
+The dcc_dbclean_t SELinux type can be entered via the "dcc_dbclean_exec_t" file type.  The default entrypoint paths for the dcc_dbclean_t domain are the following:"
+
+/usr/libexec/dcc/dbclean
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dcc_dbclean policy is very flexible allowing users to setup their dcc_dbclean processes in as secure a method as possible.
+.PP
+The following process types are defined for dcc_dbclean:
+
+.EX
+.B dcc_dbclean_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dcc_dbclean_t
+
+can be used to make the process type dcc_dbclean_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dcc_dbclean policy is very flexible allowing users to setup their dcc_dbclean processes in as secure a method as possible.
+.PP
+The following file types are defined for dcc_dbclean:
+
+
+.EX
+.PP
+.B dcc_dbclean_exec_t
+.EE
+
+- Set files with the dcc_dbclean_exec_t type, if you want to transition an executable to the dcc_dbclean_t domain.
+
+
+.EX
+.PP
+.B dcc_dbclean_tmp_t
+.EE
+
+- Set files with the dcc_dbclean_tmp_t type, if you want to store dcc dbclean temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type dcc_dbclean_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dcc_client_map_t
+
+	/etc/dcc/map
+.br
+	/var/dcc/map
+.br
+	/var/lib/dcc/map
+.br
+	/var/run/dcc/map
+.br
+
+.br
+.B dcc_dbclean_tmp_t
+
+
+.br
+.B dcc_var_t
+
+	/etc/dcc(/.*)?
+.br
+	/var/dcc(/.*)?
+.br
+	/var/lib/dcc(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), dcc_dbclean(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dcc_client_selinux(8), dccd_selinux(8), dccifd_selinux(8), dccm_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dccd_selinux.8 serefpolicy-3.7.19/man/man8/dccd_selinux.8
--- nsaserefpolicy/man/man8/dccd_selinux.8	2013-03-15 11:41:12.159153508 +0100
+++ serefpolicy-3.7.19/man/man8/dccd_selinux.8	2013-03-15 11:40:04.388151962 +0100
@@ -1,89 +1,55 @@
-.TH  "dccd_selinux"  "8"  "dccd" "dwalsh@redhat.com" "dccd SELinux Policy documentation"
+.TH  "dccd_selinux"  "8"  "13-01-04" "dccd" "SELinux Policy documentation for dccd"
 .SH "NAME"
 dccd_selinux \- Security Enhanced Linux Policy for the dccd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dccd processes via flexible mandatory access control.
 
+The dccd processes execute with the dccd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-.PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
-.PP
-Policy governs the access confined processes have to these files. 
-SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
-.PP 
-The following file types are defined for dccd:
-
+.B ps -eZ | grep dccd_t
 
-.EX
-.PP
-.B dcc_client_exec_t 
-.EE
 
-- Set files with the dcc_client_exec_t type, if you want to transition an executable to the dcc_client_t domain.
+.SH "ENTRYPOINTS"
 
+The dccd_t SELinux type can be entered via the "dccd_exec_t" file type.  The default entrypoint paths for the dccd_t domain are the following:"
 
-.EX
+/usr/libexec/dcc/dccd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-.B dcc_client_map_t 
-.EE
-
-- Set files with the dcc_client_map_t type, if you want to treat the files as dcc client map data.
-
-.br
-.TP 5
-Paths: 
-/var/lib/dcc/map, /etc/dcc/map, /var/dcc/map, /var/run/dcc/map
-
-.EX
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-.B dcc_client_tmp_t 
-.EE
-
-- Set files with the dcc_client_tmp_t type, if you want to store dcc client temporary files in the /tmp directories.
-
-
-.EX
+Policy governs the access confined processes have to files.
+SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
 .PP
-.B dcc_dbclean_exec_t 
-.EE
-
-- Set files with the dcc_dbclean_exec_t type, if you want to transition an executable to the dcc_dbclean_t domain.
-
+The following process types are defined for dccd:
 
 .EX
-.PP
-.B dcc_dbclean_tmp_t 
+.B dccm_t, dcc_client_t, dcc_dbclean_t, dccifd_t, dccd_t
 .EE
-
-- Set files with the dcc_dbclean_tmp_t type, if you want to store dcc dbclean temporary files in the /tmp directories.
-
-
-.EX
 .PP
-.B dcc_var_run_t 
-.EE
+Note:
+.B semanage permissive -a dccd_t
 
-- Set files with the dcc_var_run_t type, if you want to store the dcc files under the /run directory.
+can be used to make the process type dccd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
-
-.EX
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
 .PP
-.B dcc_var_t 
-.EE
-
-- Set files with the dcc_var_t type, if you want to store the  files under the /var directory.
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
+.PP
+The following file types are defined for dccd:
 
-.br
-.TP 5
-Paths: 
-/etc/dcc(/.*)?, /var/dcc(/.*)?, /var/lib/dcc(/.*)?
 
 .EX
 .PP
-.B dccd_exec_t 
+.B dccd_exec_t
 .EE
 
 - Set files with the dccd_exec_t type, if you want to transition an executable to the dccd_t domain.
@@ -91,7 +57,7 @@
 
 .EX
 .PP
-.B dccd_tmp_t 
+.B dccd_tmp_t
 .EE
 
 - Set files with the dccd_tmp_t type, if you want to store dccd temporary files in the /tmp directories.
@@ -99,7 +65,7 @@
 
 .EX
 .PP
-.B dccd_var_run_t 
+.B dccd_var_run_t
 .EE
 
 - Set files with the dccd_var_run_t type, if you want to store the dccd files under the /run directory.
@@ -107,62 +73,130 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for dccd:
 
 .EX
 .TP 5
-.B dcc_port_t 
+.B dcc_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 6276,6277
 .EE
 
 .EX
 .TP 5
-.B dccm_port_t 
+.B dccm_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5679
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
-.PP 
-The following process types are defined for dccd:
-
-.EX
-.B dccm_t, dcc_client_t, dcc_dbclean_t, dccifd_t, dccd_t 
+udp 5679
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type dccd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dcc_client_map_t
+
+	/etc/dcc/map
+.br
+	/var/dcc/map
+.br
+	/var/lib/dcc/map
+.br
+	/var/run/dcc/map
+.br
+
+.br
+.B dcc_var_t
+
+	/etc/dcc(/.*)?
+.br
+	/var/dcc(/.*)?
+.br
+	/var/lib/dcc(/.*)?
+.br
+
+.br
+.B dccd_tmp_t
+
+
+.br
+.B dccd_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -178,11 +212,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dccd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dccd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dcc_client_selinux(8), dcc_dbclean_selinux(8), dccifd_selinux(8), dccm_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dccifd_selinux.8 serefpolicy-3.7.19/man/man8/dccifd_selinux.8
--- nsaserefpolicy/man/man8/dccifd_selinux.8	2013-03-15 11:41:12.013153505 +0100
+++ serefpolicy-3.7.19/man/man8/dccifd_selinux.8	2013-03-15 11:40:01.001151884 +0100
@@ -1,25 +1,55 @@
-.TH  "dccifd_selinux"  "8"  "dccifd" "dwalsh@redhat.com" "dccifd SELinux Policy documentation"
+.TH  "dccifd_selinux"  "8"  "13-01-04" "dccifd" "SELinux Policy documentation for dccifd"
 .SH "NAME"
 dccifd_selinux \- Security Enhanced Linux Policy for the dccifd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dccifd processes via flexible mandatory access control.
 
+The dccifd processes execute with the dccifd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep dccifd_t
+
+
+.SH "ENTRYPOINTS"
+
+The dccifd_t SELinux type can be entered via the "dccifd_exec_t" file type.  The default entrypoint paths for the dccifd_t domain are the following:"
+
+/usr/libexec/dcc/dccifd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dccifd policy is very flexible allowing users to setup their dccifd processes in as secure a method as possible.
+.PP
+The following process types are defined for dccifd:
+
+.EX
+.B dccifd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dccifd_t
+
+can be used to make the process type dccifd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dccifd policy is very flexible allowing users to setup their dccifd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dccifd:
 
 
 .EX
 .PP
-.B dccifd_exec_t 
+.B dccifd_exec_t
 .EE
 
 - Set files with the dccifd_exec_t type, if you want to transition an executable to the dccifd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B dccifd_tmp_t 
+.B dccifd_tmp_t
 .EE
 
 - Set files with the dccifd_tmp_t type, if you want to store dccifd temporary files in the /tmp directories.
@@ -35,40 +65,106 @@
 
 .EX
 .PP
-.B dccifd_var_run_t 
+.B dccifd_var_run_t
 .EE
 
 - Set files with the dccifd_var_run_t type, if you want to store the dccifd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/etc/dcc/dccifd, /var/run/dcc/dccifd
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dccifd policy is very flexible allowing users to setup their dccifd processes in as secure a method as possible.
-.PP 
-The following process types are defined for dccifd:
+.SH "MANAGED FILES"
 
-.EX
-.B dccifd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dccifd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dcc_client_map_t
+
+	/etc/dcc/map
+.br
+	/var/dcc/map
+.br
+	/var/lib/dcc/map
+.br
+	/var/run/dcc/map
+.br
+
+.br
+.B dcc_var_t
+
+	/etc/dcc(/.*)?
+.br
+	/var/dcc(/.*)?
+.br
+	/var/lib/dcc(/.*)?
+.br
+
+.br
+.B dccifd_tmp_t
+
+
+.br
+.B dccifd_var_run_t
+
+	/etc/dcc/dccifd
+.br
+	/var/run/dcc/dccifd
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -81,11 +177,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dccifd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dccifd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dccm_selinux.8 serefpolicy-3.7.19/man/man8/dccm_selinux.8
--- nsaserefpolicy/man/man8/dccm_selinux.8	2013-03-15 11:41:12.206153509 +0100
+++ serefpolicy-3.7.19/man/man8/dccm_selinux.8	2013-03-15 11:40:06.326152006 +0100
@@ -1,25 +1,55 @@
-.TH  "dccm_selinux"  "8"  "dccm" "dwalsh@redhat.com" "dccm SELinux Policy documentation"
+.TH  "dccm_selinux"  "8"  "13-01-04" "dccm" "SELinux Policy documentation for dccm"
 .SH "NAME"
 dccm_selinux \- Security Enhanced Linux Policy for the dccm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dccm processes via flexible mandatory access control.
 
+The dccm processes execute with the dccm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep dccm_t
+
+
+.SH "ENTRYPOINTS"
+
+The dccm_t SELinux type can be entered via the "dccm_exec_t" file type.  The default entrypoint paths for the dccm_t domain are the following:"
+
+/usr/libexec/dcc/dccm
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
+.PP
+The following process types are defined for dccm:
+
+.EX
+.B dccm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dccm_t
+
+can be used to make the process type dccm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dccm:
 
 
 .EX
 .PP
-.B dccm_exec_t 
+.B dccm_exec_t
 .EE
 
 - Set files with the dccm_exec_t type, if you want to transition an executable to the dccm_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B dccm_tmp_t 
+.B dccm_tmp_t
 .EE
 
 - Set files with the dccm_tmp_t type, if you want to store dccm temporary files in the /tmp directories.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B dccm_var_run_t 
+.B dccm_var_run_t
 .EE
 
 - Set files with the dccm_var_run_t type, if you want to store the dccm files under the /run directory.
@@ -43,51 +73,119 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for dccm:
 
 .EX
 .TP 5
-.B dccm_port_t 
+.B dccm_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5679
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
-.PP 
-The following process types are defined for dccm:
-
-.EX
-.B dccm_t 
+udp 5679
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type dccm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dcc_client_map_t
+
+	/etc/dcc/map
+.br
+	/var/dcc/map
+.br
+	/var/lib/dcc/map
+.br
+	/var/run/dcc/map
+.br
+
+.br
+.B dcc_var_t
+
+	/etc/dcc(/.*)?
+.br
+	/var/dcc(/.*)?
+.br
+	/var/lib/dcc(/.*)?
+.br
+
+.br
+.B dccm_tmp_t
+
+
+.br
+.B dccm_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,11 +201,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dccm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dccm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dcerpcd_selinux.8 serefpolicy-3.7.19/man/man8/dcerpcd_selinux.8
--- nsaserefpolicy/man/man8/dcerpcd_selinux.8	2013-03-15 11:41:11.563153494 +0100
+++ serefpolicy-3.7.19/man/man8/dcerpcd_selinux.8	2013-03-15 11:39:56.227151775 +0100
@@ -1,25 +1,55 @@
-.TH  "dcerpcd_selinux"  "8"  "dcerpcd" "dwalsh@redhat.com" "dcerpcd SELinux Policy documentation"
+.TH  "dcerpcd_selinux"  "8"  "13-01-04" "dcerpcd" "SELinux Policy documentation for dcerpcd"
 .SH "NAME"
 dcerpcd_selinux \- Security Enhanced Linux Policy for the dcerpcd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dcerpcd processes via flexible mandatory access control.
 
+The dcerpcd processes execute with the dcerpcd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep dcerpcd_t
+
+
+.SH "ENTRYPOINTS"
+
+The dcerpcd_t SELinux type can be entered via the "dcerpcd_exec_t" file type.  The default entrypoint paths for the dcerpcd_t domain are the following:"
+
+/usr/sbin/dcerpcd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dcerpcd policy is very flexible allowing users to setup their dcerpcd processes in as secure a method as possible.
+.PP
+The following process types are defined for dcerpcd:
+
+.EX
+.B dcerpcd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dcerpcd_t
+
+can be used to make the process type dcerpcd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dcerpcd policy is very flexible allowing users to setup their dcerpcd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dcerpcd:
 
 
 .EX
 .PP
-.B dcerpcd_exec_t 
+.B dcerpcd_exec_t
 .EE
 
 - Set files with the dcerpcd_exec_t type, if you want to transition an executable to the dcerpcd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B dcerpcd_var_lib_t 
+.B dcerpcd_var_lib_t
 .EE
 
 - Set files with the dcerpcd_var_lib_t type, if you want to store the dcerpcd files under the /var/lib directory.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B dcerpcd_var_run_t 
+.B dcerpcd_var_run_t
 .EE
 
 - Set files with the dcerpcd_var_run_t type, if you want to store the dcerpcd files under the /run directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B dcerpcd_var_socket_t 
+.B dcerpcd_var_socket_t
 .EE
 
 - Set files with the dcerpcd_var_socket_t type, if you want to treat the files as dcerpcd var socket data.
@@ -51,28 +81,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dcerpcd policy is very flexible allowing users to setup their dcerpcd processes in as secure a method as possible.
-.PP 
-The following process types are defined for dcerpcd:
+.SH "MANAGED FILES"
 
-.EX
-.B dcerpcd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dcerpcd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dcerpcd_var_lib_t
+
+	/var/lib/likewise-open/run/rpcdep.dat
+.br
+
+.br
+.B dcerpcd_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +161,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dcerpcd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dcerpcd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/deltacloudd_selinux.8 serefpolicy-3.7.19/man/man8/deltacloudd_selinux.8
--- nsaserefpolicy/man/man8/deltacloudd_selinux.8	2013-03-15 11:41:11.821153500 +0100
+++ serefpolicy-3.7.19/man/man8/deltacloudd_selinux.8	2013-03-15 11:39:57.593151807 +0100
@@ -1,25 +1,55 @@
-.TH  "deltacloudd_selinux"  "8"  "deltacloudd" "dwalsh@redhat.com" "deltacloudd SELinux Policy documentation"
+.TH  "deltacloudd_selinux"  "8"  "13-01-04" "deltacloudd" "SELinux Policy documentation for deltacloudd"
 .SH "NAME"
 deltacloudd_selinux \- Security Enhanced Linux Policy for the deltacloudd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the deltacloudd processes via flexible mandatory access control.
 
+The deltacloudd processes execute with the deltacloudd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep deltacloudd_t
+
+
+.SH "ENTRYPOINTS"
+
+The deltacloudd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,deltacloudd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the deltacloudd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/deltacloudd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux deltacloudd policy is very flexible allowing users to setup their deltacloudd processes in as secure a method as possible.
+.PP
+The following process types are defined for deltacloudd:
+
+.EX
+.B deltacloudd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a deltacloudd_t
+
+can be used to make the process type deltacloudd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux deltacloudd policy is very flexible allowing users to setup their deltacloudd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for deltacloudd:
 
 
 .EX
 .PP
-.B deltacloudd_exec_t 
+.B deltacloudd_exec_t
 .EE
 
 - Set files with the deltacloudd_exec_t type, if you want to transition an executable to the deltacloudd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B deltacloudd_log_t 
+.B deltacloudd_log_t
 .EE
 
 - Set files with the deltacloudd_log_t type, if you want to treat the data as deltacloudd log data, usually stored under the /var/log directory.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B deltacloudd_tmp_t 
+.B deltacloudd_tmp_t
 .EE
 
 - Set files with the deltacloudd_tmp_t type, if you want to store deltacloudd temporary files in the /tmp directories.
@@ -43,28 +73,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux deltacloudd policy is very flexible allowing users to setup their deltacloudd processes in as secure a method as possible.
-.PP 
-The following process types are defined for deltacloudd:
+.SH "MANAGED FILES"
 
-.EX
-.B deltacloudd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type deltacloudd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -77,11 +99,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), deltacloudd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), deltacloudd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/denyhosts_selinux.8 serefpolicy-3.7.19/man/man8/denyhosts_selinux.8
--- nsaserefpolicy/man/man8/denyhosts_selinux.8	2013-03-15 11:41:12.227153510 +0100
+++ serefpolicy-3.7.19/man/man8/denyhosts_selinux.8	2013-03-15 11:40:06.900152019 +0100
@@ -1,31 +1,55 @@
-.TH  "denyhosts_selinux"  "8"  "denyhosts" "dwalsh@redhat.com" "denyhosts SELinux Policy documentation"
+.TH  "denyhosts_selinux"  "8"  "13-01-04" "denyhosts" "SELinux Policy documentation for denyhosts"
 .SH "NAME"
 denyhosts_selinux \- Security Enhanced Linux Policy for the denyhosts processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the denyhosts processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B denyhosts
-(Deny Hosts)
-processes via flexible mandatory access
-control.  
+The denyhosts processes execute with the denyhosts_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep denyhosts_t
+
+
+.SH "ENTRYPOINTS"
+
+The denyhosts_t SELinux type can be entered via the "denyhosts_exec_t" file type.  The default entrypoint paths for the denyhosts_t domain are the following:"
+
+/usr/bin/denyhosts\.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux denyhosts policy is very flexible allowing users to setup their denyhosts processes in as secure a method as possible.
+.PP
+The following process types are defined for denyhosts:
+
+.EX
+.B denyhosts_t
+.EE
+.PP
+Note:
+.B semanage permissive -a denyhosts_t
+
+can be used to make the process type denyhosts_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux denyhosts policy is very flexible allowing users to setup their denyhosts processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for denyhosts:
 
 
 .EX
 .PP
-.B denyhosts_exec_t 
+.B denyhosts_exec_t
 .EE
 
 - Set files with the denyhosts_exec_t type, if you want to transition an executable to the denyhosts_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B denyhosts_initrc_exec_t 
+.B denyhosts_initrc_exec_t
 .EE
 
 - Set files with the denyhosts_initrc_exec_t type, if you want to transition an executable to the denyhosts_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B denyhosts_var_lib_t 
+.B denyhosts_var_lib_t
 .EE
 
 - Set files with the denyhosts_var_lib_t type, if you want to store the denyhosts files under the /var/lib directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B denyhosts_var_lock_t 
+.B denyhosts_var_lock_t
 .EE
 
 - Set files with the denyhosts_var_lock_t type, if you want to treat the files as denyhosts var lock data, stored under the /var/lock directory
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B denyhosts_var_log_t 
+.B denyhosts_var_log_t
 .EE
 
 - Set files with the denyhosts_var_log_t type, if you want to treat the data as denyhosts var log data, usually stored under the /var/log directory.
@@ -65,28 +89,102 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux denyhosts policy is very flexible allowing users to setup their denyhosts processes in as secure a method as possible.
-.PP 
-The following process types are defined for denyhosts:
+.SH "MANAGED FILES"
 
-.EX
-.B denyhosts_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type denyhosts_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B denyhosts_var_lib_t
+
+	/var/lib/denyhosts(/.*)?
+.br
+
+.br
+.B denyhosts_var_lock_t
+
+	/var/lock/subsys/denyhosts
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -99,11 +197,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), denyhosts(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), denyhosts(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/depmod_selinux.8 serefpolicy-3.7.19/man/man8/depmod_selinux.8
--- nsaserefpolicy/man/man8/depmod_selinux.8	2013-03-15 11:41:12.082153506 +0100
+++ serefpolicy-3.7.19/man/man8/depmod_selinux.8	2013-03-15 11:40:02.562151920 +0100
@@ -1,25 +1,55 @@
-.TH  "depmod_selinux"  "8"  "depmod" "dwalsh@redhat.com" "depmod SELinux Policy documentation"
+.TH  "depmod_selinux"  "8"  "13-01-04" "depmod" "SELinux Policy documentation for depmod"
 .SH "NAME"
 depmod_selinux \- Security Enhanced Linux Policy for the depmod processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the depmod processes via flexible mandatory access control.
 
+The depmod processes execute with the depmod_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep depmod_t
+
+
+.SH "ENTRYPOINTS"
+
+The depmod_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,depmod_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the depmod_t domain are the following:"
+
+/dev/cpu/mtrr, /sbin/depmod.*, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux depmod policy is very flexible allowing users to setup their depmod processes in as secure a method as possible.
+.PP
+The following process types are defined for depmod:
+
+.EX
+.B depmod_t
+.EE
+.PP
+Note:
+.B semanage permissive -a depmod_t
+
+can be used to make the process type depmod_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux depmod policy is very flexible allowing users to setup their depmod processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for depmod:
 
 
 .EX
 .PP
-.B depmod_exec_t 
+.B depmod_exec_t
 .EE
 
 - Set files with the depmod_exec_t type, if you want to transition an executable to the depmod_t domain.
@@ -27,28 +57,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux depmod policy is very flexible allowing users to setup their depmod processes in as secure a method as possible.
-.PP 
-The following process types are defined for depmod:
+.SH "MANAGED FILES"
 
-.EX
-.B depmod_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type depmod_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +83,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), depmod(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), depmod(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/devicekit_disk_selinux.8 serefpolicy-3.7.19/man/man8/devicekit_disk_selinux.8
--- nsaserefpolicy/man/man8/devicekit_disk_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/devicekit_disk_selinux.8	2013-03-15 11:39:56.329151778 +0100
@@ -0,0 +1,96 @@
+.TH  "devicekit_disk_selinux"  "8"  "13-01-04" "devicekit_disk" "SELinux Policy documentation for devicekit_disk"
+.SH "NAME"
+devicekit_disk_selinux \- Security Enhanced Linux Policy for the devicekit_disk processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the devicekit_disk processes via flexible mandatory access control.
+
+The devicekit_disk processes execute with the devicekit_disk_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep devicekit_disk_t
+
+
+.SH "ENTRYPOINTS"
+
+The devicekit_disk_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,devicekit_disk_exec_t" file types.  The default entrypoint paths for the devicekit_disk_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/libexec/udisks-daemon, /usr/libexec/devkit-disks-daemon
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux devicekit_disk policy is very flexible allowing users to setup their devicekit_disk processes in as secure a method as possible.
+.PP
+The following process types are defined for devicekit_disk:
+
+.EX
+.B devicekit_disk_t
+.EE
+.PP
+Note:
+.B semanage permissive -a devicekit_disk_t
+
+can be used to make the process type devicekit_disk_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux devicekit_disk policy is very flexible allowing users to setup their devicekit_disk processes in as secure a method as possible.
+.PP
+The following file types are defined for devicekit_disk:
+
+
+.EX
+.PP
+.B devicekit_disk_exec_t
+.EE
+
+- Set files with the devicekit_disk_exec_t type, if you want to transition an executable to the devicekit_disk_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type devicekit_disk_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), devicekit_disk(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, devicekit_selinux(8), devicekit_selinux(8), devicekit_power_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/devicekit_power_selinux.8 serefpolicy-3.7.19/man/man8/devicekit_power_selinux.8
--- nsaserefpolicy/man/man8/devicekit_power_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/devicekit_power_selinux.8	2013-03-15 11:40:02.562151920 +0100
@@ -0,0 +1,96 @@
+.TH  "devicekit_power_selinux"  "8"  "13-01-04" "devicekit_power" "SELinux Policy documentation for devicekit_power"
+.SH "NAME"
+devicekit_power_selinux \- Security Enhanced Linux Policy for the devicekit_power processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the devicekit_power processes via flexible mandatory access control.
+
+The devicekit_power processes execute with the devicekit_power_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep devicekit_power_t
+
+
+.SH "ENTRYPOINTS"
+
+The devicekit_power_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,devicekit_power_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the devicekit_power_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/libexec/upowerd, /usr/libexec/devkit-power-daemon, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux devicekit_power policy is very flexible allowing users to setup their devicekit_power processes in as secure a method as possible.
+.PP
+The following process types are defined for devicekit_power:
+
+.EX
+.B devicekit_power_t
+.EE
+.PP
+Note:
+.B semanage permissive -a devicekit_power_t
+
+can be used to make the process type devicekit_power_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux devicekit_power policy is very flexible allowing users to setup their devicekit_power processes in as secure a method as possible.
+.PP
+The following file types are defined for devicekit_power:
+
+
+.EX
+.PP
+.B devicekit_power_exec_t
+.EE
+
+- Set files with the devicekit_power_exec_t type, if you want to transition an executable to the devicekit_power_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type devicekit_power_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), devicekit_power(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, devicekit_selinux(8), devicekit_selinux(8), devicekit_disk_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/devicekit_selinux.8 serefpolicy-3.7.19/man/man8/devicekit_selinux.8
--- nsaserefpolicy/man/man8/devicekit_selinux.8	2013-03-15 11:41:10.722153475 +0100
+++ serefpolicy-3.7.19/man/man8/devicekit_selinux.8	2013-03-15 11:39:54.919151746 +0100
@@ -1,43 +1,63 @@
-.TH  "devicekit_selinux"  "8"  "devicekit" "dwalsh@redhat.com" "devicekit SELinux Policy documentation"
+.TH  "devicekit_selinux"  "8"  "13-01-04" "devicekit" "SELinux Policy documentation for devicekit"
 .SH "NAME"
 devicekit_selinux \- Security Enhanced Linux Policy for the devicekit processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the devicekit processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B devicekit
-(Devicekit modular hardware abstraction layer)
-processes via flexible mandatory access
-control.  
+The devicekit processes execute with the devicekit_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep devicekit_t
+
+
+.SH "ENTRYPOINTS"
+
+The devicekit_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,devicekit_exec_t" file types.  The default entrypoint paths for the devicekit_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/libexec/devkit-daemon
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux devicekit policy is very flexible allowing users to setup their devicekit processes in as secure a method as possible.
+.PP
+The following process types are defined for devicekit:
+
+.EX
+.B devicekit_power_t, devicekit_disk_t, devicekit_t
+.EE
+.PP
+Note:
+.B semanage permissive -a devicekit_t
+
+can be used to make the process type devicekit_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux devicekit policy is very flexible allowing users to setup their devicekit processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for devicekit:
 
 
 .EX
 .PP
-.B devicekit_disk_exec_t 
+.B devicekit_disk_exec_t
 .EE
 
 - Set files with the devicekit_disk_exec_t type, if you want to transition an executable to the devicekit_disk_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/libexec/udisks-daemon, /usr/libexec/devkit-disks-daemon
 
 .EX
 .PP
-.B devicekit_exec_t 
+.B devicekit_exec_t
 .EE
 
 - Set files with the devicekit_exec_t type, if you want to transition an executable to the devicekit_t domain.
@@ -45,19 +65,15 @@
 
 .EX
 .PP
-.B devicekit_power_exec_t 
+.B devicekit_power_exec_t
 .EE
 
 - Set files with the devicekit_power_exec_t type, if you want to transition an executable to the devicekit_power_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/libexec/devkit-power-daemon, /usr/libexec/upowerd
 
 .EX
 .PP
-.B devicekit_tmp_t 
+.B devicekit_tmp_t
 .EE
 
 - Set files with the devicekit_tmp_t type, if you want to store devicekit temporary files in the /tmp directories.
@@ -65,52 +81,36 @@
 
 .EX
 .PP
-.B devicekit_var_lib_t 
+.B devicekit_var_lib_t
 .EE
 
 - Set files with the devicekit_var_lib_t type, if you want to store the devicekit files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/udisks(/.*)?, /var/lib/DeviceKit-.*, /var/lib/upower(/.*)?
 
 .EX
 .PP
-.B devicekit_var_run_t 
+.B devicekit_var_run_t
 .EE
 
 - Set files with the devicekit_var_run_t type, if you want to store the devicekit files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/upower(/.*)?, /var/run/devkit(/.*)?, /var/run/DeviceKit-disks(/.*)?, /var/run/udisks(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux devicekit policy is very flexible allowing users to setup their devicekit processes in as secure a method as possible.
-.PP 
-The following process types are defined for devicekit:
+.SH "MANAGED FILES"
 
-.EX
-.B devicekit_power_t, devicekit_disk_t, devicekit_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type devicekit_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -123,11 +123,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), devicekit(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), devicekit(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, devicekit_disk_selinux(8), devicekit_power_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dhcpc_selinux.8 serefpolicy-3.7.19/man/man8/dhcpc_selinux.8
--- nsaserefpolicy/man/man8/dhcpc_selinux.8	2013-03-15 11:41:12.096153507 +0100
+++ serefpolicy-3.7.19/man/man8/dhcpc_selinux.8	2013-03-15 11:40:02.661151922 +0100
@@ -1,48 +1,81 @@
-.TH  "dhcpc_selinux"  "8"  "dhcpc" "dwalsh@redhat.com" "dhcpc SELinux Policy documentation"
+.TH  "dhcpc_selinux"  "8"  "13-01-04" "dhcpc" "SELinux Policy documentation for dhcpc"
 .SH "NAME"
 dhcpc_selinux \- Security Enhanced Linux Policy for the dhcpc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dhcpc processes via flexible mandatory access control.
 
+The dhcpc processes execute with the dhcpc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep dhcpc_t
+
+
+.SH "ENTRYPOINTS"
+
+The dhcpc_t SELinux type can be entered via the "dhcpc_exec_t" file type.  The default entrypoint paths for the dhcpc_t domain are the following:"
+
+/sbin/dhclient.*, /sbin/pump, /sbin/dhcdbd, /sbin/dhcpcd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
+.PP
+The following process types are defined for dhcpc:
+
+.EX
+.B dhcpc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dhcpc_t
+
+can be used to make the process type dhcpc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  dhcpc policy is extremely flexible and has several booleans that allow you to manipulate the policy and run dhcpc with the tightest access possible.
 
 
 .PP
-If you want to allow dhcpc client applications to execute iptables command, you must turn on the dhcpc_exec_iptables boolean.
+If you want to allow dhcpc client applications to execute iptables commands, you must turn on the dhcpc_exec_iptables boolean.
+
+.EX
+.B setsebool -P dhcpc_exec_iptables 1
+.EE
+
+.PP
+If you want to allow dhcpc client applications to execute iptables commands, you must turn on the dhcpc_exec_iptables boolean.
 
 .EX
 .B setsebool -P dhcpc_exec_iptables 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dhcpc:
 
 
 .EX
 .PP
-.B dhcpc_exec_t 
+.B dhcpc_exec_t
 .EE
 
 - Set files with the dhcpc_exec_t type, if you want to transition an executable to the dhcpc_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/dhcpcd, /sbin/dhclient.*, /sbin/pump, /sbin/dhcdbd
 
 .EX
 .PP
-.B dhcpc_helper_exec_t 
+.B dhcpc_helper_exec_t
 .EE
 
 - Set files with the dhcpc_helper_exec_t type, if you want to transition an executable to the dhcpc_helper_t domain.
@@ -50,19 +83,15 @@
 
 .EX
 .PP
-.B dhcpc_state_t 
+.B dhcpc_state_t
 .EE
 
 - Set files with the dhcpc_state_t type, if you want to treat the files as dhcpc state data.
 
-.br
-.TP 5
-Paths: 
-/var/lib/dhclient(/.*)?, /var/lib/dhcp3?/dhclient.*, /var/lib/wifiroamd(/.*)?, /var/lib/dhcpcd(/.*)?
 
 .EX
 .PP
-.B dhcpc_tmp_t 
+.B dhcpc_tmp_t
 .EE
 
 - Set files with the dhcpc_tmp_t type, if you want to store dhcpc temporary files in the /tmp directories.
@@ -70,7 +99,7 @@
 
 .EX
 .PP
-.B dhcpc_var_run_t 
+.B dhcpc_var_run_t
 .EE
 
 - Set files with the dhcpc_var_run_t type, if you want to store the dhcpc files under the /run directory.
@@ -78,51 +107,149 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for dhcpc:
 
 .EX
 .TP 5
-.B dhcpc_port_t 
+.B dhcpc_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 68,546
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
-.PP 
-The following process types are defined for dhcpc:
-
-.EX
-.B dhcpc_t 
+udp 68,546
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type dhcpc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dhcpc_state_t
+
+	/var/lib/dhcp3?/dhclient.*
+.br
+	/var/lib/dhcpcd(/.*)?
+.br
+	/var/lib/dhclient(/.*)?
+.br
+	/var/lib/wifiroamd(/.*)?
+.br
+
+.br
+.B dhcpc_tmp_t
+
+
+.br
+.B dhcpc_var_run_t
+
+	/var/run/dhclient.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -141,12 +268,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dhcpc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dhcpc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dhcpd_selinux.8 serefpolicy-3.7.19/man/man8/dhcpd_selinux.8
--- nsaserefpolicy/man/man8/dhcpd_selinux.8	2013-03-15 11:41:11.778153499 +0100
+++ serefpolicy-3.7.19/man/man8/dhcpd_selinux.8	2013-03-15 11:39:56.552151783 +0100
@@ -1,56 +1,73 @@
-.TH  "dhcpd_selinux"  "8"  "dhcpd" "dwalsh@redhat.com" "dhcpd SELinux Policy documentation"
+.TH  "dhcpd_selinux"  "8"  "13-01-04" "dhcpd" "SELinux Policy documentation for dhcpd"
 .SH "NAME"
 dhcpd_selinux \- Security Enhanced Linux Policy for the dhcpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dhcpd processes via flexible mandatory access control.
 
+The dhcpd processes execute with the dhcpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  dhcpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run dhcpd with the tightest access possible.
+.B ps -eZ | grep dhcpd_t
 
 
-.PP
-If you want to allow dhcpc client applications to execute iptables command, you must turn on the dhcpc_exec_iptables boolean.
+.SH "ENTRYPOINTS"
 
-.EX
-.B setsebool -P dhcpc_exec_iptables 1
-.EE
+The dhcpd_t SELinux type can be entered via the "dhcpd_exec_t" file type.  The default entrypoint paths for the dhcpd_t domain are the following:"
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+/usr/sbin/dhcpd.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to files.
 SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
-.PP 
-The following file types are defined for dhcpd:
-
+.PP
+The following process types are defined for dhcpd:
 
 .EX
-.PP
-.B dhcp_etc_t 
+.B dhcpc_t, dhcpd_t
 .EE
+.PP
+Note:
+.B semanage permissive -a dhcpd_t
 
-- Set files with the dhcp_etc_t type, if you want to store dhcp files in the /etc directories.
+can be used to make the process type dhcpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
-.br
-.TP 5
-Paths: 
-/etc/dhcp3(/.*)?, /etc/dhcp3?/dhclient.*, /etc/dhcpd(6)?\.conf, /etc/dhcpc.*, /etc/dhclient-script, /etc/dhclient.*conf, /etc/dhcp/dhcpd(6)?\.conf
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  dhcpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run dhcpd with the tightest access possible.
+
+
+.PP
+If you want to allow dhcpc client applications to execute iptables commands, you must turn on the dhcpc_exec_iptables boolean.
 
 .EX
+.B setsebool -P dhcpc_exec_iptables 1
+.EE
+
 .PP
-.B dhcp_state_t 
+If you want to allow dhcpc client applications to execute iptables commands, you must turn on the dhcpc_exec_iptables boolean.
+
+.EX
+.B setsebool -P dhcpc_exec_iptables 1
 .EE
 
-- Set files with the dhcp_state_t type, if you want to treat the files as dhcp state data.
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
+.PP
+The following file types are defined for dhcpd:
 
 
 .EX
 .PP
-.B dhcpd_exec_t 
+.B dhcpd_exec_t
 .EE
 
 - Set files with the dhcpd_exec_t type, if you want to transition an executable to the dhcpd_t domain.
@@ -58,7 +75,7 @@
 
 .EX
 .PP
-.B dhcpd_initrc_exec_t 
+.B dhcpd_initrc_exec_t
 .EE
 
 - Set files with the dhcpd_initrc_exec_t type, if you want to transition an executable to the dhcpd_initrc_t domain.
@@ -66,19 +83,15 @@
 
 .EX
 .PP
-.B dhcpd_state_t 
+.B dhcpd_state_t
 .EE
 
 - Set files with the dhcpd_state_t type, if you want to treat the files as dhcpd state data.
 
-.br
-.TP 5
-Paths: 
-/var/lib/dhcp(3)?/dhcpd\.leases.*, /var/lib/dhcpd(/.*)?
 
 .EX
 .PP
-.B dhcpd_tmp_t 
+.B dhcpd_tmp_t
 .EE
 
 - Set files with the dhcpd_tmp_t type, if you want to store dhcpd temporary files in the /tmp directories.
@@ -86,7 +99,7 @@
 
 .EX
 .PP
-.B dhcpd_var_run_t 
+.B dhcpd_var_run_t
 .EE
 
 - Set files with the dhcpd_var_run_t type, if you want to store the dhcpd files under the /run directory.
@@ -94,62 +107,120 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for dhcpd:
 
 .EX
 .TP 5
-.B dhcpc_port_t 
+.B dhcpc_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 68,546
+.EE
+udp 68,546
 .EE
 
 .EX
 .TP 5
-.B dhcpd_port_t 
+.B dhcpd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 547,548,647,847,7911
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for dhcpd:
-
-.EX
-.B dhcpc_t, dhcpd_t 
+udp 67,547,548,647,847
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type dhcpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dhcpd_state_t
+
+	/var/lib/dhcp(3)?/dhcpd\.leases.*
+.br
+	/var/lib/dhcpd(/.*)?
+.br
+
+.br
+.B dhcpd_tmp_t
+
+
+.br
+.B dhcpd_var_run_t
+
+	/var/run/dhcpd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -168,12 +239,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dhcpd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), dhcpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), dhcpc_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dictd_selinux.8 serefpolicy-3.7.19/man/man8/dictd_selinux.8
--- nsaserefpolicy/man/man8/dictd_selinux.8	2013-03-15 11:41:11.810153500 +0100
+++ serefpolicy-3.7.19/man/man8/dictd_selinux.8	2013-03-15 11:39:57.445151803 +0100
@@ -1,31 +1,55 @@
-.TH  "dictd_selinux"  "8"  "dictd" "dwalsh@redhat.com" "dictd SELinux Policy documentation"
+.TH  "dictd_selinux"  "8"  "13-01-04" "dictd" "SELinux Policy documentation for dictd"
 .SH "NAME"
 dictd_selinux \- Security Enhanced Linux Policy for the dictd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dictd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B dictd
-(Dictionary daemon)
-processes via flexible mandatory access
-control.  
+The dictd processes execute with the dictd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep dictd_t
+
+
+.SH "ENTRYPOINTS"
+
+The dictd_t SELinux type can be entered via the "dictd_exec_t" file type.  The default entrypoint paths for the dictd_t domain are the following:"
+
+/usr/sbin/dictd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
+.PP
+The following process types are defined for dictd:
+
+.EX
+.B dictd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dictd_t
+
+can be used to make the process type dictd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dictd:
 
 
 .EX
 .PP
-.B dictd_etc_t 
+.B dictd_etc_t
 .EE
 
 - Set files with the dictd_etc_t type, if you want to store dictd files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B dictd_exec_t 
+.B dictd_exec_t
 .EE
 
 - Set files with the dictd_exec_t type, if you want to transition an executable to the dictd_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B dictd_initrc_exec_t 
+.B dictd_initrc_exec_t
 .EE
 
 - Set files with the dictd_initrc_exec_t type, if you want to transition an executable to the dictd_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B dictd_var_lib_t 
+.B dictd_var_lib_t
 .EE
 
 - Set files with the dictd_var_lib_t type, if you want to store the dictd files under the /var/lib directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B dictd_var_run_t 
+.B dictd_var_run_t
 .EE
 
 - Set files with the dictd_var_run_t type, if you want to store the dictd files under the /run directory.
@@ -65,51 +89,93 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for dictd:
 
 .EX
 .TP 5
-.B dict_port_t 
+.B dict_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 2628
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
-.PP 
-The following process types are defined for dictd:
+.SH "MANAGED FILES"
 
-.EX
-.B dictd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dictd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dictd_var_run_t
+
+	/var/run/dictd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -125,11 +191,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dictd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dictd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dirsrvadmin_selinux.8 serefpolicy-3.7.19/man/man8/dirsrvadmin_selinux.8
--- nsaserefpolicy/man/man8/dirsrvadmin_selinux.8	2013-03-15 11:41:12.204153509 +0100
+++ serefpolicy-3.7.19/man/man8/dirsrvadmin_selinux.8	2013-03-15 11:40:06.310152005 +0100
@@ -1,49 +1,71 @@
-.TH  "dirsrvadmin_selinux"  "8"  "dirsrvadmin" "dwalsh@redhat.com" "dirsrvadmin SELinux Policy documentation"
+.TH  "dirsrvadmin_selinux"  "8"  "13-01-04" "dirsrvadmin" "SELinux Policy documentation for dirsrvadmin"
 .SH "NAME"
 dirsrvadmin_selinux \- Security Enhanced Linux Policy for the dirsrvadmin processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dirsrvadmin processes via flexible mandatory access control.
 
+The dirsrvadmin processes execute with the dirsrvadmin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep dirsrvadmin_t
+
+
+.SH "ENTRYPOINTS"
+
+The dirsrvadmin_t SELinux type can be entered via the "shell_exec_t,dirsrvadmin_exec_t" file types.  The default entrypoint paths for the dirsrvadmin_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/sbin/stop-ds-admin, /usr/sbin/start-ds-admin, /usr/sbin/restart-ds-admin
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dirsrvadmin policy is very flexible allowing users to setup their dirsrvadmin processes in as secure a method as possible.
+.PP
+The following process types are defined for dirsrvadmin:
+
+.EX
+.B dirsrvadmin_unconfined_script_t, dirsrvadmin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dirsrvadmin_t
+
+can be used to make the process type dirsrvadmin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dirsrvadmin policy is very flexible allowing users to setup their dirsrvadmin processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dirsrvadmin:
 
 
 .EX
 .PP
-.B dirsrvadmin_config_t 
+.B dirsrvadmin_config_t
 .EE
 
 - Set files with the dirsrvadmin_config_t type, if you want to treat the files as dirsrvadmin configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/etc/dirsrv/admin-serv(/.*)?, /etc/dirsrv/dsgw(/.*)?
 
 .EX
 .PP
-.B dirsrvadmin_exec_t 
+.B dirsrvadmin_exec_t
 .EE
 
 - Set files with the dirsrvadmin_exec_t type, if you want to transition an executable to the dirsrvadmin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/start-ds-admin, /usr/sbin/stop-ds-admin, /usr/sbin/restart-ds-admin
 
 .EX
 .PP
-.B dirsrvadmin_tmp_t 
+.B dirsrvadmin_tmp_t
 .EE
 
 - Set files with the dirsrvadmin_tmp_t type, if you want to store dirsrvadmin temporary files in the /tmp directories.
@@ -51,40 +73,76 @@
 
 .EX
 .PP
-.B dirsrvadmin_unconfined_script_exec_t 
+.B dirsrvadmin_unconfined_script_exec_t
 .EE
 
 - Set files with the dirsrvadmin_unconfined_script_exec_t type, if you want to transition an executable to the dirsrvadmin_unconfined_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/dirsrv/cgi-bin/ds_remove, /usr/lib(64)?/dirsrv/cgi-bin/ds_create
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dirsrvadmin policy is very flexible allowing users to setup their dirsrvadmin processes in as secure a method as possible.
-.PP 
-The following process types are defined for dirsrvadmin:
+.SH "MANAGED FILES"
 
-.EX
-.B dirsrvadmin_unconfined_script_t, dirsrvadmin_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dirsrvadmin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dirsrvadmin_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -97,11 +155,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dirsrvadmin(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dirsrvadmin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dirsrv_selinux(8), dirsrvadmin_unconfined_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dirsrvadmin_unconfined_script_selinux.8 serefpolicy-3.7.19/man/man8/dirsrvadmin_unconfined_script_selinux.8
--- nsaserefpolicy/man/man8/dirsrvadmin_unconfined_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/dirsrvadmin_unconfined_script_selinux.8	2013-03-15 11:40:01.915151905 +0100
@@ -0,0 +1,96 @@
+.TH  "dirsrvadmin_unconfined_script_selinux"  "8"  "13-01-04" "dirsrvadmin_unconfined_script" "SELinux Policy documentation for dirsrvadmin_unconfined_script"
+.SH "NAME"
+dirsrvadmin_unconfined_script_selinux \- Security Enhanced Linux Policy for the dirsrvadmin_unconfined_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the dirsrvadmin_unconfined_script processes via flexible mandatory access control.
+
+The dirsrvadmin_unconfined_script processes execute with the dirsrvadmin_unconfined_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep dirsrvadmin_unconfined_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The dirsrvadmin_unconfined_script_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,dirsrvadmin_unconfined_script_exec_t,sysctl_type,filesystem_type,file_type,shell_exec_t" file types.  The default entrypoint paths for the dirsrvadmin_unconfined_script_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/lib(64)?/dirsrv/cgi-bin/ds_create, /usr/lib(64)?/dirsrv/cgi-bin/ds_remove, all files on the system, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dirsrvadmin_unconfined_script policy is very flexible allowing users to setup their dirsrvadmin_unconfined_script processes in as secure a method as possible.
+.PP
+The following process types are defined for dirsrvadmin_unconfined_script:
+
+.EX
+.B dirsrvadmin_unconfined_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dirsrvadmin_unconfined_script_t
+
+can be used to make the process type dirsrvadmin_unconfined_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dirsrvadmin_unconfined_script policy is very flexible allowing users to setup their dirsrvadmin_unconfined_script processes in as secure a method as possible.
+.PP
+The following file types are defined for dirsrvadmin_unconfined_script:
+
+
+.EX
+.PP
+.B dirsrvadmin_unconfined_script_exec_t
+.EE
+
+- Set files with the dirsrvadmin_unconfined_script_exec_t type, if you want to transition an executable to the dirsrvadmin_unconfined_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type dirsrvadmin_unconfined_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), dirsrvadmin_unconfined_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dirsrv_selinux(8), dirsrvadmin_selinux(8), dirsrvadmin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dirsrv_selinux.8 serefpolicy-3.7.19/man/man8/dirsrv_selinux.8
--- nsaserefpolicy/man/man8/dirsrv_selinux.8	2013-03-15 11:41:12.022153505 +0100
+++ serefpolicy-3.7.19/man/man8/dirsrv_selinux.8	2013-03-15 11:40:01.133151887 +0100
@@ -1,31 +1,55 @@
-.TH  "dirsrv_selinux"  "8"  "dirsrv" "dwalsh@redhat.com" "dirsrv SELinux Policy documentation"
+.TH  "dirsrv_selinux"  "8"  "13-01-04" "dirsrv" "SELinux Policy documentation for dirsrv"
 .SH "NAME"
 dirsrv_selinux \- Security Enhanced Linux Policy for the dirsrv processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dirsrv processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B dirsrv
-(policy for dirsrv)
-processes via flexible mandatory access
-control.  
+The dirsrv processes execute with the dirsrv_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep dirsrv_t
+
+
+.SH "ENTRYPOINTS"
+
+The dirsrv_t SELinux type can be entered via the "dirsrv_exec_t" file type.  The default entrypoint paths for the dirsrv_t domain are the following:"
+
+/usr/sbin/ns-slapd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dirsrv policy is very flexible allowing users to setup their dirsrv processes in as secure a method as possible.
+.PP
+The following process types are defined for dirsrv:
+
+.EX
+.B dirsrvadmin_unconfined_script_t, dirsrv_snmp_t, dirsrvadmin_t, dirsrv_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dirsrv_t
+
+can be used to make the process type dirsrv_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dirsrv policy is very flexible allowing users to setup their dirsrv processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dirsrv:
 
 
 .EX
 .PP
-.B dirsrv_config_t 
+.B dirsrv_config_t
 .EE
 
 - Set files with the dirsrv_config_t type, if you want to treat the files as dirsrv configuration data, usually stored under the /etc directory.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B dirsrv_exec_t 
+.B dirsrv_exec_t
 .EE
 
 - Set files with the dirsrv_exec_t type, if you want to transition an executable to the dirsrv_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B dirsrv_share_t 
+.B dirsrv_share_t
 .EE
 
 - Set files with the dirsrv_share_t type, if you want to treat the files as dirsrv share data.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B dirsrv_snmp_exec_t 
+.B dirsrv_snmp_exec_t
 .EE
 
 - Set files with the dirsrv_snmp_exec_t type, if you want to transition an executable to the dirsrv_snmp_t domain.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B dirsrv_snmp_var_log_t 
+.B dirsrv_snmp_var_log_t
 .EE
 
 - Set files with the dirsrv_snmp_var_log_t type, if you want to treat the data as dirsrv snmp var log data, usually stored under the /var/log directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B dirsrv_snmp_var_run_t 
+.B dirsrv_snmp_var_run_t
 .EE
 
 - Set files with the dirsrv_snmp_var_run_t type, if you want to store the dirsrv snmp files under the /run directory.
@@ -73,7 +97,7 @@
 
 .EX
 .PP
-.B dirsrv_tmp_t 
+.B dirsrv_tmp_t
 .EE
 
 - Set files with the dirsrv_tmp_t type, if you want to store dirsrv temporary files in the /tmp directories.
@@ -81,7 +105,7 @@
 
 .EX
 .PP
-.B dirsrv_tmpfs_t 
+.B dirsrv_tmpfs_t
 .EE
 
 - Set files with the dirsrv_tmpfs_t type, if you want to store dirsrv files on a tmpfs file system.
@@ -89,7 +113,7 @@
 
 .EX
 .PP
-.B dirsrv_var_lib_t 
+.B dirsrv_var_lib_t
 .EE
 
 - Set files with the dirsrv_var_lib_t type, if you want to store the dirsrv files under the /var/lib directory.
@@ -97,19 +121,15 @@
 
 .EX
 .PP
-.B dirsrv_var_lock_t 
+.B dirsrv_var_lock_t
 .EE
 
 - Set files with the dirsrv_var_lock_t type, if you want to treat the files as dirsrv var lock data, stored under the /var/lock directory
 
-.br
-.TP 5
-Paths: 
-/var/lock/subsys/dirsrv, /var/lock/dirsrv(/.*)?
 
 .EX
 .PP
-.B dirsrv_var_log_t 
+.B dirsrv_var_log_t
 .EE
 
 - Set files with the dirsrv_var_log_t type, if you want to treat the data as dirsrv var log data, usually stored under the /var/log directory.
@@ -117,7 +137,7 @@
 
 .EX
 .PP
-.B dirsrv_var_run_t 
+.B dirsrv_var_run_t
 .EE
 
 - Set files with the dirsrv_var_run_t type, if you want to store the dirsrv files under the /run directory.
@@ -125,31 +145,23 @@
 
 .EX
 .PP
-.B dirsrvadmin_config_t 
+.B dirsrvadmin_config_t
 .EE
 
 - Set files with the dirsrvadmin_config_t type, if you want to treat the files as dirsrvadmin configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/etc/dirsrv/admin-serv(/.*)?, /etc/dirsrv/dsgw(/.*)?
 
 .EX
 .PP
-.B dirsrvadmin_exec_t 
+.B dirsrvadmin_exec_t
 .EE
 
 - Set files with the dirsrvadmin_exec_t type, if you want to transition an executable to the dirsrvadmin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/start-ds-admin, /usr/sbin/stop-ds-admin, /usr/sbin/restart-ds-admin
 
 .EX
 .PP
-.B dirsrvadmin_tmp_t 
+.B dirsrvadmin_tmp_t
 .EE
 
 - Set files with the dirsrvadmin_tmp_t type, if you want to store dirsrvadmin temporary files in the /tmp directories.
@@ -157,40 +169,162 @@
 
 .EX
 .PP
-.B dirsrvadmin_unconfined_script_exec_t 
+.B dirsrvadmin_unconfined_script_exec_t
 .EE
 
 - Set files with the dirsrvadmin_unconfined_script_exec_t type, if you want to transition an executable to the dirsrvadmin_unconfined_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/dirsrv/cgi-bin/ds_remove, /usr/lib(64)?/dirsrv/cgi-bin/ds_create
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dirsrv policy is very flexible allowing users to setup their dirsrv processes in as secure a method as possible.
-.PP 
-The following process types are defined for dirsrv:
+.SH "MANAGED FILES"
 
-.EX
-.B dirsrvadmin_unconfined_script_t, dirsrv_snmp_t, dirsrvadmin_t, dirsrv_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dirsrv_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dirsrv_config_t
+
+	/etc/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrv_tmp_t
+
+
+.br
+.B dirsrv_tmpfs_t
+
+
+.br
+.B dirsrv_var_lib_t
+
+	/var/lib/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrv_var_lock_t
+
+	/var/lock/dirsrv(/.*)?
+.br
+	/var/lock/subsys/dirsrv
+.br
+
+.br
+.B dirsrv_var_log_t
+
+	/var/log/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrv_var_run_t
+
+	/var/run/slapd.*
+.br
+	/var/run/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrvadmin_tmp_t
+
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -203,11 +337,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dirsrv(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dirsrv(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dirsrv_snmp_selinux(8), dirsrvadmin_selinux(8), dirsrvadmin_unconfined_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dirsrv_snmp_selinux.8 serefpolicy-3.7.19/man/man8/dirsrv_snmp_selinux.8
--- nsaserefpolicy/man/man8/dirsrv_snmp_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/dirsrv_snmp_selinux.8	2013-03-15 11:40:00.963151883 +0100
@@ -0,0 +1,186 @@
+.TH  "dirsrv_snmp_selinux"  "8"  "13-01-04" "dirsrv_snmp" "SELinux Policy documentation for dirsrv_snmp"
+.SH "NAME"
+dirsrv_snmp_selinux \- Security Enhanced Linux Policy for the dirsrv_snmp processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the dirsrv_snmp processes via flexible mandatory access control.
+
+The dirsrv_snmp processes execute with the dirsrv_snmp_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep dirsrv_snmp_t
+
+
+.SH "ENTRYPOINTS"
+
+The dirsrv_snmp_t SELinux type can be entered via the "dirsrv_snmp_exec_t" file type.  The default entrypoint paths for the dirsrv_snmp_t domain are the following:"
+
+/usr/sbin/ldap-agent-bin
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dirsrv_snmp policy is very flexible allowing users to setup their dirsrv_snmp processes in as secure a method as possible.
+.PP
+The following process types are defined for dirsrv_snmp:
+
+.EX
+.B dirsrv_snmp_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dirsrv_snmp_t
+
+can be used to make the process type dirsrv_snmp_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dirsrv_snmp policy is very flexible allowing users to setup their dirsrv_snmp processes in as secure a method as possible.
+.PP
+The following file types are defined for dirsrv_snmp:
+
+
+.EX
+.PP
+.B dirsrv_snmp_exec_t
+.EE
+
+- Set files with the dirsrv_snmp_exec_t type, if you want to transition an executable to the dirsrv_snmp_t domain.
+
+
+.EX
+.PP
+.B dirsrv_snmp_var_log_t
+.EE
+
+- Set files with the dirsrv_snmp_var_log_t type, if you want to treat the data as dirsrv snmp var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dirsrv_snmp_var_run_t
+.EE
+
+- Set files with the dirsrv_snmp_var_run_t type, if you want to store the dirsrv snmp files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type dirsrv_snmp_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dirsrv_snmp_var_log_t
+
+	/var/log/dirsrv/ldap-agent\.log.*
+.br
+
+.br
+.B dirsrv_snmp_var_run_t
+
+	/var/run/ldap-agent\.pid
+.br
+
+.br
+.B dirsrv_tmpfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B snmpd_var_lib_t
+
+	/var/agentx(/.*)?
+.br
+	/var/net-snmp(/.*)
+.br
+	/var/lib/snmp(/.*)?
+.br
+	/var/lib/net-snmp(/.*)?
+.br
+	/usr/share/snmp/mibs/\.index
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), dirsrv_snmp(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dirsrv_selinux(8), dirsrv_selinux(8), dirsrvadmin_selinux(8), dirsrvadmin_unconfined_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dkim_milter_selinux.8 serefpolicy-3.7.19/man/man8/dkim_milter_selinux.8
--- nsaserefpolicy/man/man8/dkim_milter_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/dkim_milter_selinux.8	2013-03-15 11:39:58.630151830 +0100
@@ -0,0 +1,167 @@
+.TH  "dkim_milter_selinux"  "8"  "13-01-04" "dkim_milter" "SELinux Policy documentation for dkim_milter"
+.SH "NAME"
+dkim_milter_selinux \- Security Enhanced Linux Policy for the dkim_milter processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the dkim_milter processes via flexible mandatory access control.
+
+The dkim_milter processes execute with the dkim_milter_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep dkim_milter_t
+
+
+.SH "ENTRYPOINTS"
+
+The dkim_milter_t SELinux type can be entered via the "dkim_milter_exec_t" file type.  The default entrypoint paths for the dkim_milter_t domain are the following:"
+
+/usr/sbin/opendkim, /usr/sbin/dkim-filter
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dkim_milter policy is very flexible allowing users to setup their dkim_milter processes in as secure a method as possible.
+.PP
+The following process types are defined for dkim_milter:
+
+.EX
+.B dkim_milter_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dkim_milter_t
+
+can be used to make the process type dkim_milter_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dkim_milter policy is very flexible allowing users to setup their dkim_milter processes in as secure a method as possible.
+.PP
+The following file types are defined for dkim_milter:
+
+
+.EX
+.PP
+.B dkim_milter_data_t
+.EE
+
+- Set files with the dkim_milter_data_t type, if you want to treat the files as dkim milter content.
+
+
+.EX
+.PP
+.B dkim_milter_exec_t
+.EE
+
+- Set files with the dkim_milter_exec_t type, if you want to transition an executable to the dkim_milter_t domain.
+
+
+.EX
+.PP
+.B dkim_milter_private_key_t
+.EE
+
+- Set files with the dkim_milter_private_key_t type, if you want to treat the files as dkim milter private key data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type dkim_milter_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dkim_milter_data_t
+
+	/var/run/opendkim(/.*)?
+.br
+	/var/spool/opendkim(/.*)?
+.br
+	/var/lib/dkim-milter(/.*)?
+.br
+	/var/run/dkim-milter(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), dkim_milter(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dlm_controld_selinux.8 serefpolicy-3.7.19/man/man8/dlm_controld_selinux.8
--- nsaserefpolicy/man/man8/dlm_controld_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/dlm_controld_selinux.8	2013-03-15 11:40:01.900151905 +0100
@@ -0,0 +1,195 @@
+.TH  "dlm_controld_selinux"  "8"  "13-01-04" "dlm_controld" "SELinux Policy documentation for dlm_controld"
+.SH "NAME"
+dlm_controld_selinux \- Security Enhanced Linux Policy for the dlm_controld processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the dlm_controld processes via flexible mandatory access control.
+
+The dlm_controld processes execute with the dlm_controld_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep dlm_controld_t
+
+
+.SH "ENTRYPOINTS"
+
+The dlm_controld_t SELinux type can be entered via the "dlm_controld_exec_t" file type.  The default entrypoint paths for the dlm_controld_t domain are the following:"
+
+/usr/sbin/dlm_controld
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dlm_controld policy is very flexible allowing users to setup their dlm_controld processes in as secure a method as possible.
+.PP
+The following process types are defined for dlm_controld:
+
+.EX
+.B dlm_controld_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dlm_controld_t
+
+can be used to make the process type dlm_controld_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dlm_controld policy is very flexible allowing users to setup their dlm_controld processes in as secure a method as possible.
+.PP
+The following file types are defined for dlm_controld:
+
+
+.EX
+.PP
+.B dlm_controld_exec_t
+.EE
+
+- Set files with the dlm_controld_exec_t type, if you want to transition an executable to the dlm_controld_t domain.
+
+
+.EX
+.PP
+.B dlm_controld_tmpfs_t
+.EE
+
+- Set files with the dlm_controld_tmpfs_t type, if you want to store dlm controld files on a tmpfs file system.
+
+
+.EX
+.PP
+.B dlm_controld_var_log_t
+.EE
+
+- Set files with the dlm_controld_var_log_t type, if you want to treat the data as dlm controld var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dlm_controld_var_run_t
+.EE
+
+- Set files with the dlm_controld_var_run_t type, if you want to store the dlm controld files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type dlm_controld_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cluster_var_lib_t
+
+	/var/lib/cluster(/.*)?
+.br
+
+.br
+.B configfs_t
+
+
+.br
+.B dlm_controld_tmpfs_t
+
+
+.br
+.B dlm_controld_var_log_t
+
+	/var/log/cluster/dlm_controld\.log.*
+.br
+
+.br
+.B dlm_controld_var_run_t
+
+	/var/run/dlm_controld\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), dlm_controld(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dmesg_selinux.8 serefpolicy-3.7.19/man/man8/dmesg_selinux.8
--- nsaserefpolicy/man/man8/dmesg_selinux.8	2013-03-15 11:41:11.784153499 +0100
+++ serefpolicy-3.7.19/man/man8/dmesg_selinux.8	2013-03-15 11:39:56.888151790 +0100
@@ -1,31 +1,55 @@
-.TH  "dmesg_selinux"  "8"  "dmesg" "dwalsh@redhat.com" "dmesg SELinux Policy documentation"
+.TH  "dmesg_selinux"  "8"  "13-01-04" "dmesg" "SELinux Policy documentation for dmesg"
 .SH "NAME"
 dmesg_selinux \- Security Enhanced Linux Policy for the dmesg processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dmesg processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B dmesg
-(Policy for dmesg)
-processes via flexible mandatory access
-control.  
+The dmesg processes execute with the dmesg_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep dmesg_t
+
+
+.SH "ENTRYPOINTS"
+
+The dmesg_t SELinux type can be entered via the "dmesg_exec_t" file type.  The default entrypoint paths for the dmesg_t domain are the following:"
+
+/bin/dmesg
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dmesg policy is very flexible allowing users to setup their dmesg processes in as secure a method as possible.
+.PP
+The following process types are defined for dmesg:
+
+.EX
+.B dmesg_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dmesg_t
+
+can be used to make the process type dmesg_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dmesg policy is very flexible allowing users to setup their dmesg processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dmesg:
 
 
 .EX
 .PP
-.B dmesg_exec_t 
+.B dmesg_exec_t
 .EE
 
 - Set files with the dmesg_exec_t type, if you want to transition an executable to the dmesg_t domain.
@@ -33,28 +57,116 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dmesg policy is very flexible allowing users to setup their dmesg processes in as secure a method as possible.
-.PP 
-The following process types are defined for dmesg:
+.SH "MANAGED FILES"
 
-.EX
-.B dmesg_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dmesg_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B abrt_var_run_t
+
+	/var/run/abrt(/.*)?
+.br
+	/var/run/abrtd?\.lock
+.br
+	/var/run/abrtd?\.socket
+.br
+	/var/run/abrt\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_log_t
+
+	/var/log/.*
+.br
+	/nsr/logs(/.*)?
+.br
+	/var/webmin(/.*)?
+.br
+	/var/log/cron[^/]*
+.br
+	/var/log/secure[^/]*
+.br
+	/opt/zimbra/log(/.*)?
+.br
+	/var/log/maillog[^/]*
+.br
+	/var/log/spooler[^/]*
+.br
+	/var/log/boot\.log.*
+.br
+	/var/log/messages[^/]*
+.br
+	/var/spool/rsyslog(/.*)?
+.br
+	/var/spool/bacula/log(/.*)?
+.br
+	/var/tinydns/log/main(/.*)?
+.br
+	/var/axfrdns/log/main(/.*)?
+.br
+	/var/dnscache/log/main(/.*)?
+.br
+	/usr/local/centreon/log(/.*)?
+.br
+	/var/spool/plymouth/boot\.log.*
+.br
+	/var/stockmaniac/templates_cache(/.*)?
+.br
+	/var/log
+.br
+	/var/log/dmesg
+.br
+	/var/log/syslog
+.br
+	/var/named/chroot/var/log
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +179,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dmesg(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dmesg(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dmidecode_selinux.8 serefpolicy-3.7.19/man/man8/dmidecode_selinux.8
--- nsaserefpolicy/man/man8/dmidecode_selinux.8	2013-03-15 11:41:11.931153503 +0100
+++ serefpolicy-3.7.19/man/man8/dmidecode_selinux.8	2013-03-15 11:40:00.033151862 +0100
@@ -1,64 +1,112 @@
-.TH  "dmidecode_selinux"  "8"  "dmidecode" "dwalsh@redhat.com" "dmidecode SELinux Policy documentation"
+.TH  "dmidecode_selinux"  "8"  "13-01-04" "dmidecode" "SELinux Policy documentation for dmidecode"
 .SH "NAME"
 dmidecode_selinux \- Security Enhanced Linux Policy for the dmidecode processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dmidecode processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B dmidecode
-(Decode DMI data for x86/ia64 bioses)
-processes via flexible mandatory access
-control.  
+The dmidecode processes execute with the dmidecode_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep dmidecode_t
+
+
+.SH "ENTRYPOINTS"
+
+The dmidecode_t SELinux type can be entered via the "dmidecode_exec_t" file type.  The default entrypoint paths for the dmidecode_t domain are the following:"
+
+/usr/sbin/dmidecode, /usr/sbin/ownership, /usr/sbin/vpddecode
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dmidecode policy is very flexible allowing users to setup their dmidecode processes in as secure a method as possible.
+.PP
+The following process types are defined for dmidecode:
+
+.EX
+.B dmidecode_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dmidecode_t
+
+can be used to make the process type dmidecode_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dmidecode policy is very flexible allowing users to setup their dmidecode processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dmidecode:
 
 
 .EX
 .PP
-.B dmidecode_exec_t 
+.B dmidecode_exec_t
 .EE
 
 - Set files with the dmidecode_exec_t type, if you want to transition an executable to the dmidecode_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/dmidecode, /usr/sbin/ownership, /usr/sbin/vpddecode
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dmidecode policy is very flexible allowing users to setup their dmidecode processes in as secure a method as possible.
-.PP 
-The following process types are defined for dmidecode:
+.SH "MANAGED FILES"
 
-.EX
-.B dmidecode_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dmidecode_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -71,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dmidecode(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dmidecode(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dnsmasq_selinux.8 serefpolicy-3.7.19/man/man8/dnsmasq_selinux.8
--- nsaserefpolicy/man/man8/dnsmasq_selinux.8	2013-03-15 11:41:11.872153501 +0100
+++ serefpolicy-3.7.19/man/man8/dnsmasq_selinux.8	2013-03-15 11:39:58.976151838 +0100
@@ -1,31 +1,55 @@
-.TH  "dnsmasq_selinux"  "8"  "dnsmasq" "dwalsh@redhat.com" "dnsmasq SELinux Policy documentation"
+.TH  "dnsmasq_selinux"  "8"  "13-01-04" "dnsmasq" "SELinux Policy documentation for dnsmasq"
 .SH "NAME"
 dnsmasq_selinux \- Security Enhanced Linux Policy for the dnsmasq processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dnsmasq processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B dnsmasq
-(dnsmasq DNS forwarder and DHCP server)
-processes via flexible mandatory access
-control.  
+The dnsmasq processes execute with the dnsmasq_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep dnsmasq_t
+
+
+.SH "ENTRYPOINTS"
+
+The dnsmasq_t SELinux type can be entered via the "dnsmasq_exec_t" file type.  The default entrypoint paths for the dnsmasq_t domain are the following:"
+
+/usr/sbin/dnsmasq
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dnsmasq policy is very flexible allowing users to setup their dnsmasq processes in as secure a method as possible.
+.PP
+The following process types are defined for dnsmasq:
+
+.EX
+.B dnsmasq_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dnsmasq_t
+
+can be used to make the process type dnsmasq_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dnsmasq policy is very flexible allowing users to setup their dnsmasq processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dnsmasq:
 
 
 .EX
 .PP
-.B dnsmasq_etc_t 
+.B dnsmasq_etc_t
 .EE
 
 - Set files with the dnsmasq_etc_t type, if you want to store dnsmasq files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B dnsmasq_exec_t 
+.B dnsmasq_exec_t
 .EE
 
 - Set files with the dnsmasq_exec_t type, if you want to transition an executable to the dnsmasq_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B dnsmasq_initrc_exec_t 
+.B dnsmasq_initrc_exec_t
 .EE
 
 - Set files with the dnsmasq_initrc_exec_t type, if you want to transition an executable to the dnsmasq_initrc_t domain.
@@ -49,19 +73,15 @@
 
 .EX
 .PP
-.B dnsmasq_lease_t 
+.B dnsmasq_lease_t
 .EE
 
 - Set files with the dnsmasq_lease_t type, if you want to treat the files as dnsmasq lease data.
 
-.br
-.TP 5
-Paths: 
-/var/lib/dnsmasq(/.*)?, /var/lib/misc/dnsmasq\.leases
 
 .EX
 .PP
-.B dnsmasq_var_log_t 
+.B dnsmasq_var_log_t
 .EE
 
 - Set files with the dnsmasq_var_log_t type, if you want to treat the data as dnsmasq var log data, usually stored under the /var/log directory.
@@ -69,40 +89,126 @@
 
 .EX
 .PP
-.B dnsmasq_var_run_t 
+.B dnsmasq_var_run_t
 .EE
 
 - Set files with the dnsmasq_var_run_t type, if you want to store the dnsmasq files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/dnsmasq\.pid, /var/run/libvirt/network(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dnsmasq policy is very flexible allowing users to setup their dnsmasq processes in as secure a method as possible.
-.PP 
-The following process types are defined for dnsmasq:
+.SH "MANAGED FILES"
 
-.EX
-.B dnsmasq_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dnsmasq_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B crond_var_run_t
+
+	/var/run/crond?\.pid
+.br
+	/var/run/crond?\.reboot
+.br
+	/var/run/atd\.pid
+.br
+	/var/run/fcron\.pid
+.br
+	/var/run/fcron\.fifo
+.br
+	/var/run/anacron\.pid
+.br
+
+.br
+.B dnsmasq_lease_t
+
+	/var/lib/dnsmasq(/.*)?
+.br
+	/var/lib/misc/dnsmasq\.leases
+.br
+
+.br
+.B dnsmasq_var_log_t
+
+	/var/log/dnsmasq\.log.*
+.br
+
+.br
+.B dnsmasq_var_run_t
+
+	/var/run/libvirt/network(/.*)?
+.br
+	/var/run/dnsmasq\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B virt_var_lib_t
+
+	/var/lib/oz(/.*)?
+.br
+	/var/lib/libvirt(/.*)?
+.br
+
+.br
+.B virt_var_run_t
+
+	/var/vdsm(/.*)?
+.br
+	/var/run/libvirt(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +221,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dnsmasq(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dnsmasq(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dovecot_auth_selinux.8 serefpolicy-3.7.19/man/man8/dovecot_auth_selinux.8
--- nsaserefpolicy/man/man8/dovecot_auth_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/dovecot_auth_selinux.8	2013-03-15 11:39:54.314151732 +0100
@@ -0,0 +1,180 @@
+.TH  "dovecot_auth_selinux"  "8"  "13-01-04" "dovecot_auth" "SELinux Policy documentation for dovecot_auth"
+.SH "NAME"
+dovecot_auth_selinux \- Security Enhanced Linux Policy for the dovecot_auth processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the dovecot_auth processes via flexible mandatory access control.
+
+The dovecot_auth processes execute with the dovecot_auth_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep dovecot_auth_t
+
+
+.SH "ENTRYPOINTS"
+
+The dovecot_auth_t SELinux type can be entered via the "dovecot_auth_exec_t" file type.  The default entrypoint paths for the dovecot_auth_t domain are the following:"
+
+/usr/libexec/dovecot/auth, /usr/libexec/dovecot/dovecot-auth
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dovecot_auth policy is very flexible allowing users to setup their dovecot_auth processes in as secure a method as possible.
+.PP
+The following process types are defined for dovecot_auth:
+
+.EX
+.B dovecot_auth_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dovecot_auth_t
+
+can be used to make the process type dovecot_auth_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dovecot_auth policy is very flexible allowing users to setup their dovecot_auth processes in as secure a method as possible.
+.PP
+The following file types are defined for dovecot_auth:
+
+
+.EX
+.PP
+.B dovecot_auth_exec_t
+.EE
+
+- Set files with the dovecot_auth_exec_t type, if you want to transition an executable to the dovecot_auth_t domain.
+
+
+.EX
+.PP
+.B dovecot_auth_tmp_t
+.EE
+
+- Set files with the dovecot_auth_tmp_t type, if you want to store dovecot auth temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type dovecot_auth_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dovecot_auth_tmp_t
+
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), dovecot_auth(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dovecot_selinux(8), dovecot_selinux(8), dovecot_deliver_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dovecot_deliver_selinux.8 serefpolicy-3.7.19/man/man8/dovecot_deliver_selinux.8
--- nsaserefpolicy/man/man8/dovecot_deliver_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/dovecot_deliver_selinux.8	2013-03-15 11:40:03.488151941 +0100
@@ -0,0 +1,178 @@
+.TH  "dovecot_deliver_selinux"  "8"  "13-01-04" "dovecot_deliver" "SELinux Policy documentation for dovecot_deliver"
+.SH "NAME"
+dovecot_deliver_selinux \- Security Enhanced Linux Policy for the dovecot_deliver processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the dovecot_deliver processes via flexible mandatory access control.
+
+The dovecot_deliver processes execute with the dovecot_deliver_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep dovecot_deliver_t
+
+
+.SH "ENTRYPOINTS"
+
+The dovecot_deliver_t SELinux type can be entered via the "dovecot_deliver_exec_t" file type.  The default entrypoint paths for the dovecot_deliver_t domain are the following:"
+
+/usr/libexec/dovecot/deliver, /usr/libexec/dovecot/dovecot-lda
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dovecot_deliver policy is very flexible allowing users to setup their dovecot_deliver processes in as secure a method as possible.
+.PP
+The following process types are defined for dovecot_deliver:
+
+.EX
+.B dovecot_deliver_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dovecot_deliver_t
+
+can be used to make the process type dovecot_deliver_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dovecot_deliver policy is very flexible allowing users to setup their dovecot_deliver processes in as secure a method as possible.
+.PP
+The following file types are defined for dovecot_deliver:
+
+
+.EX
+.PP
+.B dovecot_deliver_exec_t
+.EE
+
+- Set files with the dovecot_deliver_exec_t type, if you want to transition an executable to the dovecot_deliver_t domain.
+
+
+.EX
+.PP
+.B dovecot_deliver_tmp_t
+.EE
+
+- Set files with the dovecot_deliver_tmp_t type, if you want to store dovecot deliver temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type dovecot_deliver_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dovecot_deliver_tmp_t
+
+
+.br
+.B dovecot_spool_t
+
+	/var/spool/dovecot(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_home_rw_t
+
+	/root/Maildir(/.*)?
+.br
+	/home/[^/]*/Maildir(/.*)?
+.br
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), dovecot_deliver(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dovecot_selinux(8), dovecot_selinux(8), dovecot_auth_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/dovecot_selinux.8 serefpolicy-3.7.19/man/man8/dovecot_selinux.8
--- nsaserefpolicy/man/man8/dovecot_selinux.8	2013-03-15 11:41:11.926153503 +0100
+++ serefpolicy-3.7.19/man/man8/dovecot_selinux.8	2013-03-15 11:39:59.566151852 +0100
@@ -1,43 +1,63 @@
-.TH  "dovecot_selinux"  "8"  "dovecot" "dwalsh@redhat.com" "dovecot SELinux Policy documentation"
+.TH  "dovecot_selinux"  "8"  "13-01-04" "dovecot" "SELinux Policy documentation for dovecot"
 .SH "NAME"
 dovecot_selinux \- Security Enhanced Linux Policy for the dovecot processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the dovecot processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B dovecot
-(Dovecot POP and IMAP mail server)
-processes via flexible mandatory access
-control.  
+The dovecot processes execute with the dovecot_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep dovecot_t
+
+
+.SH "ENTRYPOINTS"
+
+The dovecot_t SELinux type can be entered via the "dovecot_exec_t" file type.  The default entrypoint paths for the dovecot_t domain are the following:"
+
+/usr/sbin/dovecot
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dovecot policy is very flexible allowing users to setup their dovecot processes in as secure a method as possible.
+.PP
+The following process types are defined for dovecot:
+
+.EX
+.B dovecot_deliver_t, dovecot_auth_t, dovecot_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dovecot_t
+
+can be used to make the process type dovecot_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux dovecot policy is very flexible allowing users to setup their dovecot processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for dovecot:
 
 
 .EX
 .PP
-.B dovecot_auth_exec_t 
+.B dovecot_auth_exec_t
 .EE
 
 - Set files with the dovecot_auth_exec_t type, if you want to transition an executable to the dovecot_auth_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/libexec/dovecot/auth, /usr/libexec/dovecot/dovecot-auth
 
 .EX
 .PP
-.B dovecot_auth_tmp_t 
+.B dovecot_auth_tmp_t
 .EE
 
 - Set files with the dovecot_auth_tmp_t type, if you want to store dovecot auth temporary files in the /tmp directories.
@@ -45,31 +65,23 @@
 
 .EX
 .PP
-.B dovecot_cert_t 
+.B dovecot_cert_t
 .EE
 
 - Set files with the dovecot_cert_t type, if you want to treat the files as dovecot certificate data.
 
-.br
-.TP 5
-Paths: 
-/usr/share/ssl/private/dovecot\.pem, /etc/pki/dovecot(/.*)?, /usr/share/ssl/certs/dovecot\.pem
 
 .EX
 .PP
-.B dovecot_deliver_exec_t 
+.B dovecot_deliver_exec_t
 .EE
 
 - Set files with the dovecot_deliver_exec_t type, if you want to transition an executable to the dovecot_deliver_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/libexec/dovecot/dovecot-lda, /usr/libexec/dovecot/deliver
 
 .EX
 .PP
-.B dovecot_deliver_tmp_t 
+.B dovecot_deliver_tmp_t
 .EE
 
 - Set files with the dovecot_deliver_tmp_t type, if you want to store dovecot deliver temporary files in the /tmp directories.
@@ -77,19 +89,15 @@
 
 .EX
 .PP
-.B dovecot_etc_t 
+.B dovecot_etc_t
 .EE
 
 - Set files with the dovecot_etc_t type, if you want to store dovecot files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/etc/dovecot\.conf.*, /etc/dovecot(/.*)?
 
 .EX
 .PP
-.B dovecot_exec_t 
+.B dovecot_exec_t
 .EE
 
 - Set files with the dovecot_exec_t type, if you want to transition an executable to the dovecot_t domain.
@@ -97,7 +105,7 @@
 
 .EX
 .PP
-.B dovecot_initrc_exec_t 
+.B dovecot_initrc_exec_t
 .EE
 
 - Set files with the dovecot_initrc_exec_t type, if you want to transition an executable to the dovecot_initrc_t domain.
@@ -105,7 +113,7 @@
 
 .EX
 .PP
-.B dovecot_keytab_t 
+.B dovecot_keytab_t
 .EE
 
 - Set files with the dovecot_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -113,7 +121,7 @@
 
 .EX
 .PP
-.B dovecot_passwd_t 
+.B dovecot_passwd_t
 .EE
 
 - Set files with the dovecot_passwd_t type, if you want to treat the files as dovecot passwd data.
@@ -121,7 +129,7 @@
 
 .EX
 .PP
-.B dovecot_spool_t 
+.B dovecot_spool_t
 .EE
 
 - Set files with the dovecot_spool_t type, if you want to store the dovecot files under the /var/spool directory.
@@ -129,7 +137,7 @@
 
 .EX
 .PP
-.B dovecot_tmp_t 
+.B dovecot_tmp_t
 .EE
 
 - Set files with the dovecot_tmp_t type, if you want to store dovecot temporary files in the /tmp directories.
@@ -137,31 +145,23 @@
 
 .EX
 .PP
-.B dovecot_var_lib_t 
+.B dovecot_var_lib_t
 .EE
 
 - Set files with the dovecot_var_lib_t type, if you want to store the dovecot files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/dovecot/login/ssl-parameters.dat, /var/lib/dovecot(/.*)?
 
 .EX
 .PP
-.B dovecot_var_log_t 
+.B dovecot_var_log_t
 .EE
 
 - Set files with the dovecot_var_log_t type, if you want to treat the data as dovecot var log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/dovecot\.log.*, /var/log/dovecot(/.*)?
 
 .EX
 .PP
-.B dovecot_var_run_t 
+.B dovecot_var_run_t
 .EE
 
 - Set files with the dovecot_var_run_t type, if you want to store the dovecot files under the /run directory.
@@ -169,28 +169,124 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux dovecot policy is very flexible allowing users to setup their dovecot processes in as secure a method as possible.
-.PP 
-The following process types are defined for dovecot:
+.SH "MANAGED FILES"
 
-.EX
-.B dovecot_deliver_t, dovecot_auth_t, dovecot_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type dovecot_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dovecot_spool_t
+
+	/var/spool/dovecot(/.*)?
+.br
+
+.br
+.B dovecot_tmp_t
+
+
+.br
+.B dovecot_var_lib_t
+
+	/var/lib/dovecot(/.*)?
+.br
+	/var/run/dovecot/login/ssl-parameters.dat
+.br
+
+.br
+.B dovecot_var_log_t
+
+	/var/log/dovecot(/.*)?
+.br
+	/var/log/dovecot\.log.*
+.br
+
+.br
+.B dovecot_var_run_t
+
+	/var/run/dovecot(-login)?(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_home_rw_t
+
+	/root/Maildir(/.*)?
+.br
+	/home/[^/]*/Maildir(/.*)?
+.br
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -203,11 +299,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), dovecot(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), dovecot(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, dovecot_auth_selinux(8), dovecot_deliver_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/drbd_selinux.8 serefpolicy-3.7.19/man/man8/drbd_selinux.8
--- nsaserefpolicy/man/man8/drbd_selinux.8	2013-03-15 11:41:11.837153501 +0100
+++ serefpolicy-3.7.19/man/man8/drbd_selinux.8	2013-03-15 11:39:57.741151810 +0100
@@ -1,43 +1,63 @@
-.TH  "drbd_selinux"  "8"  "drbd" "dwalsh@redhat.com" "drbd SELinux Policy documentation"
+.TH  "drbd_selinux"  "8"  "13-01-04" "drbd" "SELinux Policy documentation for drbd"
 .SH "NAME"
 drbd_selinux \- Security Enhanced Linux Policy for the drbd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the drbd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B drbd
-(policy for drbd)
-processes via flexible mandatory access
-control.  
+The drbd processes execute with the drbd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep drbd_t
+
+
+.SH "ENTRYPOINTS"
+
+The drbd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,drbd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the drbd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/lib/ocf/resource.\d/linbit/drbd, /sbin/drbdadm, /sbin/drbdsetup, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux drbd policy is very flexible allowing users to setup their drbd processes in as secure a method as possible.
+.PP
+The following process types are defined for drbd:
+
+.EX
+.B drbd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a drbd_t
+
+can be used to make the process type drbd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux drbd policy is very flexible allowing users to setup their drbd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for drbd:
 
 
 .EX
 .PP
-.B drbd_exec_t 
+.B drbd_exec_t
 .EE
 
 - Set files with the drbd_exec_t type, if you want to transition an executable to the drbd_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/drbdadm, /usr/lib/ocf/resource.\d/linbit/drbd, /sbin/drbdsetup
 
 .EX
 .PP
-.B drbd_lock_t 
+.B drbd_lock_t
 .EE
 
 - Set files with the drbd_lock_t type, if you want to treat the files as drbd lock data, stored under the /var/lock directory
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B drbd_var_lib_t 
+.B drbd_var_lib_t
 .EE
 
 - Set files with the drbd_var_lib_t type, if you want to store the drbd files under the /var/lib directory.
@@ -53,28 +73,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux drbd policy is very flexible allowing users to setup their drbd processes in as secure a method as possible.
-.PP 
-The following process types are defined for drbd:
+.SH "MANAGED FILES"
 
-.EX
-.B drbd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type drbd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -87,11 +99,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), drbd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), drbd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/dspam_selinux.8 serefpolicy-3.7.19/man/man8/dspam_selinux.8
--- nsaserefpolicy/man/man8/dspam_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/dspam_selinux.8	2013-03-15 11:40:05.455151986 +0100
@@ -0,0 +1,227 @@
+.TH  "dspam_selinux"  "8"  "13-01-04" "dspam" "SELinux Policy documentation for dspam"
+.SH "NAME"
+dspam_selinux \- Security Enhanced Linux Policy for the dspam processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the dspam processes via flexible mandatory access control.
+
+The dspam processes execute with the dspam_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep dspam_t
+
+
+.SH "ENTRYPOINTS"
+
+The dspam_t SELinux type can be entered via the "dspam_exec_t" file type.  The default entrypoint paths for the dspam_t domain are the following:"
+
+/usr/bin/dspam
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux dspam policy is very flexible allowing users to setup their dspam processes in as secure a method as possible.
+.PP
+The following process types are defined for dspam:
+
+.EX
+.B dspam_t
+.EE
+.PP
+Note:
+.B semanage permissive -a dspam_t
+
+can be used to make the process type dspam_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux dspam policy is very flexible allowing users to setup their dspam processes in as secure a method as possible.
+.PP
+The following file types are defined for dspam:
+
+
+.EX
+.PP
+.B dspam_exec_t
+.EE
+
+- Set files with the dspam_exec_t type, if you want to transition an executable to the dspam_t domain.
+
+
+.EX
+.PP
+.B dspam_initrc_exec_t
+.EE
+
+- Set files with the dspam_initrc_exec_t type, if you want to transition an executable to the dspam_initrc_t domain.
+
+
+.EX
+.PP
+.B dspam_log_t
+.EE
+
+- Set files with the dspam_log_t type, if you want to treat the data as dspam log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dspam_tmp_t
+.EE
+
+- Set files with the dspam_tmp_t type, if you want to store dspam temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dspam_var_lib_t
+.EE
+
+- Set files with the dspam_var_lib_t type, if you want to store the dspam files under the /var/lib directory.
+
+
+.EX
+.PP
+.B dspam_var_run_t
+.EE
+
+- Set files with the dspam_var_run_t type, if you want to store the dspam files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports.
+.PP
+You can see the types associated with a port by using the following command:
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports.
+SELinux dspam policy is very flexible allowing users to setup their dspam processes in as secure a method as possible.
+.PP
+The following port types are defined for dspam:
+
+.EX
+.TP 5
+.B dspam_port_t
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 10026
+.EE
+.SH "MANAGED FILES"
+
+The SELinux process type dspam_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dspam_log_t
+
+	/var/log/dspam(/.*)?
+.br
+
+.br
+.B dspam_var_lib_t
+
+	/var/lib/dspam(/.*)?
+.br
+
+.br
+.B dspam_var_run_t
+
+	/var/run/dspam(/.*)?
+.br
+
+.br
+.B httpd_dspam_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), dspam(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/entropyd_selinux.8 serefpolicy-3.7.19/man/man8/entropyd_selinux.8
--- nsaserefpolicy/man/man8/entropyd_selinux.8	2013-03-15 11:41:12.109153507 +0100
+++ serefpolicy-3.7.19/man/man8/entropyd_selinux.8	2013-03-15 11:40:03.516151942 +0100
@@ -1,25 +1,55 @@
-.TH  "entropyd_selinux"  "8"  "entropyd" "dwalsh@redhat.com" "entropyd SELinux Policy documentation"
+.TH  "entropyd_selinux"  "8"  "13-01-04" "entropyd" "SELinux Policy documentation for entropyd"
 .SH "NAME"
 entropyd_selinux \- Security Enhanced Linux Policy for the entropyd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the entropyd processes via flexible mandatory access control.
 
+The entropyd processes execute with the entropyd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep entropyd_t
+
+
+.SH "ENTRYPOINTS"
+
+The entropyd_t SELinux type can be entered via the "entropyd_exec_t" file type.  The default entrypoint paths for the entropyd_t domain are the following:"
+
+/usr/sbin/audio-entropyd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux entropyd policy is very flexible allowing users to setup their entropyd processes in as secure a method as possible.
+.PP
+The following process types are defined for entropyd:
+
+.EX
+.B entropyd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a entropyd_t
+
+can be used to make the process type entropyd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux entropyd policy is very flexible allowing users to setup their entropyd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for entropyd:
 
 
 .EX
 .PP
-.B entropyd_exec_t 
+.B entropyd_exec_t
 .EE
 
 - Set files with the entropyd_exec_t type, if you want to transition an executable to the entropyd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B entropyd_var_run_t 
+.B entropyd_var_run_t
 .EE
 
 - Set files with the entropyd_var_run_t type, if you want to store the entropyd files under the /run directory.
@@ -35,28 +65,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux entropyd policy is very flexible allowing users to setup their entropyd processes in as secure a method as possible.
-.PP 
-The following process types are defined for entropyd:
+.SH "MANAGED FILES"
 
-.EX
-.B entropyd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type entropyd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B entropyd_var_run_t
+
+	/var/run/audio-entropyd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +141,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), entropyd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), entropyd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ethereal_selinux.8 serefpolicy-3.7.19/man/man8/ethereal_selinux.8
--- nsaserefpolicy/man/man8/ethereal_selinux.8	2013-03-15 11:41:12.195153509 +0100
+++ serefpolicy-3.7.19/man/man8/ethereal_selinux.8	2013-03-15 11:40:06.287152005 +0100
@@ -1,31 +1,55 @@
-.TH  "ethereal_selinux"  "8"  "ethereal" "dwalsh@redhat.com" "ethereal SELinux Policy documentation"
+.TH  "ethereal_selinux"  "8"  "13-01-04" "ethereal" "SELinux Policy documentation for ethereal"
 .SH "NAME"
 ethereal_selinux \- Security Enhanced Linux Policy for the ethereal processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ethereal processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ethereal
-(Ethereal packet capture tool)
-processes via flexible mandatory access
-control.  
+The ethereal processes execute with the ethereal_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ethereal_t
+
+
+.SH "ENTRYPOINTS"
+
+The ethereal_t SELinux type can be entered via the "ethereal_exec_t" file type.  The default entrypoint paths for the ethereal_t domain are the following:"
+
+/usr/sbin/ethereal.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ethereal policy is very flexible allowing users to setup their ethereal processes in as secure a method as possible.
+.PP
+The following process types are defined for ethereal:
+
+.EX
+.B ethereal_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ethereal_t
+
+can be used to make the process type ethereal_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ethereal policy is very flexible allowing users to setup their ethereal processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ethereal:
 
 
 .EX
 .PP
-.B ethereal_exec_t 
+.B ethereal_exec_t
 .EE
 
 - Set files with the ethereal_exec_t type, if you want to transition an executable to the ethereal_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B ethereal_home_t 
+.B ethereal_home_t
 .EE
 
 - Set files with the ethereal_home_t type, if you want to store ethereal files in the users home directory.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B ethereal_tmp_t 
+.B ethereal_tmp_t
 .EE
 
 - Set files with the ethereal_tmp_t type, if you want to store ethereal temporary files in the /tmp directories.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B ethereal_tmpfs_t 
+.B ethereal_tmpfs_t
 .EE
 
 - Set files with the ethereal_tmpfs_t type, if you want to store ethereal files on a tmpfs file system.
@@ -57,28 +81,90 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ethereal policy is very flexible allowing users to setup their ethereal processes in as secure a method as possible.
-.PP 
-The following process types are defined for ethereal:
+.SH "MANAGED FILES"
 
-.EX
-.B ethereal_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ethereal_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B ethereal_home_t
+
+	/home/[^/]*/\.ethereal(/.*)?
+.br
+
+.br
+.B ethereal_tmp_t
+
+
+.br
+.B ethereal_tmpfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +177,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ethereal(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ethereal(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/eventlogd_selinux.8 serefpolicy-3.7.19/man/man8/eventlogd_selinux.8
--- nsaserefpolicy/man/man8/eventlogd_selinux.8	2013-03-15 11:41:12.174153508 +0100
+++ serefpolicy-3.7.19/man/man8/eventlogd_selinux.8	2013-03-15 11:40:05.293151982 +0100
@@ -1,25 +1,55 @@
-.TH  "eventlogd_selinux"  "8"  "eventlogd" "dwalsh@redhat.com" "eventlogd SELinux Policy documentation"
+.TH  "eventlogd_selinux"  "8"  "13-01-04" "eventlogd" "SELinux Policy documentation for eventlogd"
 .SH "NAME"
 eventlogd_selinux \- Security Enhanced Linux Policy for the eventlogd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the eventlogd processes via flexible mandatory access control.
 
+The eventlogd processes execute with the eventlogd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep eventlogd_t
+
+
+.SH "ENTRYPOINTS"
+
+The eventlogd_t SELinux type can be entered via the "eventlogd_exec_t" file type.  The default entrypoint paths for the eventlogd_t domain are the following:"
+
+/usr/sbin/eventlogd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux eventlogd policy is very flexible allowing users to setup their eventlogd processes in as secure a method as possible.
+.PP
+The following process types are defined for eventlogd:
+
+.EX
+.B eventlogd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a eventlogd_t
+
+can be used to make the process type eventlogd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux eventlogd policy is very flexible allowing users to setup their eventlogd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for eventlogd:
 
 
 .EX
 .PP
-.B eventlogd_exec_t 
+.B eventlogd_exec_t
 .EE
 
 - Set files with the eventlogd_exec_t type, if you want to transition an executable to the eventlogd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B eventlogd_var_lib_t 
+.B eventlogd_var_lib_t
 .EE
 
 - Set files with the eventlogd_var_lib_t type, if you want to store the eventlogd files under the /var/lib directory.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B eventlogd_var_run_t 
+.B eventlogd_var_run_t
 .EE
 
 - Set files with the eventlogd_var_run_t type, if you want to store the eventlogd files under the /run directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B eventlogd_var_socket_t 
+.B eventlogd_var_socket_t
 .EE
 
 - Set files with the eventlogd_var_socket_t type, if you want to treat the files as eventlogd var socket data.
@@ -51,28 +81,76 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux eventlogd policy is very flexible allowing users to setup their eventlogd processes in as secure a method as possible.
-.PP 
-The following process types are defined for eventlogd:
+.SH "MANAGED FILES"
 
-.EX
-.B eventlogd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type eventlogd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B eventlogd_var_lib_t
+
+	/var/lib/likewise-open/db/lwi_events.db
+.br
+
+.br
+.B eventlogd_var_run_t
+
+	/var/run/eventlogd.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +163,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), eventlogd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), eventlogd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/evtchnd_selinux.8 serefpolicy-3.7.19/man/man8/evtchnd_selinux.8
--- nsaserefpolicy/man/man8/evtchnd_selinux.8	2013-03-15 11:41:12.080153506 +0100
+++ serefpolicy-3.7.19/man/man8/evtchnd_selinux.8	2013-03-15 11:40:02.420151917 +0100
@@ -1,25 +1,55 @@
-.TH  "evtchnd_selinux"  "8"  "evtchnd" "dwalsh@redhat.com" "evtchnd SELinux Policy documentation"
+.TH  "evtchnd_selinux"  "8"  "13-01-04" "evtchnd" "SELinux Policy documentation for evtchnd"
 .SH "NAME"
 evtchnd_selinux \- Security Enhanced Linux Policy for the evtchnd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the evtchnd processes via flexible mandatory access control.
 
+The evtchnd processes execute with the evtchnd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep evtchnd_t
+
+
+.SH "ENTRYPOINTS"
+
+The evtchnd_t SELinux type can be entered via the "evtchnd_exec_t" file type.  The default entrypoint paths for the evtchnd_t domain are the following:"
+
+/usr/sbin/evtchnd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux evtchnd policy is very flexible allowing users to setup their evtchnd processes in as secure a method as possible.
+.PP
+The following process types are defined for evtchnd:
+
+.EX
+.B evtchnd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a evtchnd_t
+
+can be used to make the process type evtchnd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux evtchnd policy is very flexible allowing users to setup their evtchnd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for evtchnd:
 
 
 .EX
 .PP
-.B evtchnd_exec_t 
+.B evtchnd_exec_t
 .EE
 
 - Set files with the evtchnd_exec_t type, if you want to transition an executable to the evtchnd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B evtchnd_var_log_t 
+.B evtchnd_var_log_t
 .EE
 
 - Set files with the evtchnd_var_log_t type, if you want to treat the data as evtchnd var log data, usually stored under the /var/log directory.
@@ -35,40 +65,86 @@
 
 .EX
 .PP
-.B evtchnd_var_run_t 
+.B evtchnd_var_run_t
 .EE
 
 - Set files with the evtchnd_var_run_t type, if you want to store the evtchnd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/evtchnd\.pid, /var/run/evtchnd
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux evtchnd policy is very flexible allowing users to setup their evtchnd processes in as secure a method as possible.
-.PP 
-The following process types are defined for evtchnd:
+.SH "MANAGED FILES"
 
-.EX
-.B evtchnd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type evtchnd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B evtchnd_var_log_t
+
+	/var/log/evtchnd\.log.*
+.br
+
+.br
+.B evtchnd_var_run_t
+
+	/var/run/evtchnd
+.br
+	/var/run/evtchnd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -81,11 +157,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), evtchnd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), evtchnd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/exim_selinux.8 serefpolicy-3.7.19/man/man8/exim_selinux.8
--- nsaserefpolicy/man/man8/exim_selinux.8	2013-03-15 11:41:11.205153486 +0100
+++ serefpolicy-3.7.19/man/man8/exim_selinux.8	2013-03-15 11:39:55.398151756 +0100
@@ -1,22 +1,60 @@
-.TH  "exim_selinux"  "8"  "exim" "dwalsh@redhat.com" "exim SELinux Policy documentation"
+.TH  "exim_selinux"  "8"  "13-01-04" "exim" "SELinux Policy documentation for exim"
 .SH "NAME"
 exim_selinux \- Security Enhanced Linux Policy for the exim processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the exim processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B exim
-(Exim mail transfer agent)
-processes via flexible mandatory access
-control.  
+The exim processes execute with the exim_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep exim_t
+
+
+.SH "ENTRYPOINTS"
+
+The exim_t SELinux type can be entered via the "exim_exec_t" file type.  The default entrypoint paths for the exim_t domain are the following:"
+
+/usr/sbin/exim[0-9]?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux exim policy is very flexible allowing users to setup their exim processes in as secure a method as possible.
+.PP
+The following process types are defined for exim:
+
+.EX
+.B exim_t
+.EE
+.PP
+Note:
+.B semanage permissive -a exim_t
+
+can be used to make the process type exim_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  exim policy is extremely flexible and has several booleans that allow you to manipulate the policy and run exim with the tightest access possible.
 
 
 .PP
+If you want to allow exim to connect to databases (postgres, mysql), you must turn on the exim_can_connect_db boolean.
+
+.EX
+.B setsebool -P exim_can_connect_db 1
+.EE
+
+.PP
+If you want to allow exim to create, read, write, and delete unprivileged user files, you must turn on the exim_manage_user_files boolean.
+
+.EX
+.B setsebool -P exim_manage_user_files 1
+.EE
+
+.PP
 If you want to allow exim to read unprivileged user files, you must turn on the exim_read_user_files boolean.
 
 .EX
@@ -24,7 +62,7 @@
 .EE
 
 .PP
-If you want to allow exim to connect to databases (postgres, mysql, you must turn on the exim_can_connect_db boolean.
+If you want to allow exim to connect to databases (postgres, mysql), you must turn on the exim_can_connect_db boolean.
 
 .EX
 .B setsebool -P exim_can_connect_db 1
@@ -37,20 +75,27 @@
 .B setsebool -P exim_manage_user_files 1
 .EE
 
+.PP
+If you want to allow exim to read unprivileged user files, you must turn on the exim_read_user_files boolean.
+
+.EX
+.B setsebool -P exim_read_user_files 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux exim policy is very flexible allowing users to setup their exim processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for exim:
 
 
 .EX
 .PP
-.B exim_exec_t 
+.B exim_exec_t
 .EE
 
 - Set files with the exim_exec_t type, if you want to transition an executable to the exim_t domain.
@@ -58,7 +103,7 @@
 
 .EX
 .PP
-.B exim_initrc_exec_t 
+.B exim_initrc_exec_t
 .EE
 
 - Set files with the exim_initrc_exec_t type, if you want to transition an executable to the exim_initrc_t domain.
@@ -66,7 +111,7 @@
 
 .EX
 .PP
-.B exim_keytab_t 
+.B exim_keytab_t
 .EE
 
 - Set files with the exim_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -74,7 +119,7 @@
 
 .EX
 .PP
-.B exim_log_t 
+.B exim_log_t
 .EE
 
 - Set files with the exim_log_t type, if you want to treat the data as exim log data, usually stored under the /var/log directory.
@@ -82,7 +127,7 @@
 
 .EX
 .PP
-.B exim_spool_t 
+.B exim_spool_t
 .EE
 
 - Set files with the exim_spool_t type, if you want to store the exim files under the /var/spool directory.
@@ -90,7 +135,7 @@
 
 .EX
 .PP
-.B exim_tmp_t 
+.B exim_tmp_t
 .EE
 
 - Set files with the exim_tmp_t type, if you want to store exim temporary files in the /tmp directories.
@@ -98,7 +143,7 @@
 
 .EX
 .PP
-.B exim_var_run_t 
+.B exim_var_run_t
 .EE
 
 - Set files with the exim_var_run_t type, if you want to store the exim files under the /run directory.
@@ -106,28 +151,128 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux exim policy is very flexible allowing users to setup their exim processes in as secure a method as possible.
-.PP 
-The following process types are defined for exim:
+.SH "MANAGED FILES"
 
-.EX
-.B exim_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type exim_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B arpwatch_tmp_t
+
+
+.br
+.B dovecot_spool_t
+
+	/var/spool/dovecot(/.*)?
+.br
+
+.br
+.B exim_log_t
+
+	/var/log/exim[0-9]?(/.*)?
+.br
+
+.br
+.B exim_spool_t
+
+	/var/spool/exim[0-9]?(/.*)?
+.br
+
+.br
+.B exim_tmp_t
+
+
+.br
+.B exim_var_run_t
+
+	/var/run/exim[0-9]?\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_home_rw_t
+
+	/root/Maildir(/.*)?
+.br
+	/home/[^/]*/Maildir(/.*)?
+.br
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sendmail_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -143,12 +288,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), exim(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), exim(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/fail2ban_selinux.8 serefpolicy-3.7.19/man/man8/fail2ban_selinux.8
--- nsaserefpolicy/man/man8/fail2ban_selinux.8	2013-03-15 11:41:12.005153504 +0100
+++ serefpolicy-3.7.19/man/man8/fail2ban_selinux.8	2013-03-15 11:40:00.978151884 +0100
@@ -1,43 +1,63 @@
-.TH  "fail2ban_selinux"  "8"  "fail2ban" "dwalsh@redhat.com" "fail2ban SELinux Policy documentation"
+.TH  "fail2ban_selinux"  "8"  "13-01-04" "fail2ban" "SELinux Policy documentation for fail2ban"
 .SH "NAME"
 fail2ban_selinux \- Security Enhanced Linux Policy for the fail2ban processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the fail2ban processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B fail2ban
-(Update firewall filtering to ban IP addresses with too many password failures)
-processes via flexible mandatory access
-control.  
+The fail2ban processes execute with the fail2ban_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep fail2ban_t
+
+
+.SH "ENTRYPOINTS"
+
+The fail2ban_t SELinux type can be entered via the "fail2ban_exec_t" file type.  The default entrypoint paths for the fail2ban_t domain are the following:"
+
+/usr/bin/fail2ban, /usr/bin/fail2ban-server
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux fail2ban policy is very flexible allowing users to setup their fail2ban processes in as secure a method as possible.
+.PP
+The following process types are defined for fail2ban:
+
+.EX
+.B fail2ban_t
+.EE
+.PP
+Note:
+.B semanage permissive -a fail2ban_t
+
+can be used to make the process type fail2ban_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux fail2ban policy is very flexible allowing users to setup their fail2ban processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for fail2ban:
 
 
 .EX
 .PP
-.B fail2ban_exec_t 
+.B fail2ban_exec_t
 .EE
 
 - Set files with the fail2ban_exec_t type, if you want to transition an executable to the fail2ban_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/fail2ban-server, /usr/bin/fail2ban
 
 .EX
 .PP
-.B fail2ban_initrc_exec_t 
+.B fail2ban_initrc_exec_t
 .EE
 
 - Set files with the fail2ban_initrc_exec_t type, if you want to transition an executable to the fail2ban_initrc_t domain.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B fail2ban_log_t 
+.B fail2ban_log_t
 .EE
 
 - Set files with the fail2ban_log_t type, if you want to treat the data as fail2ban log data, usually stored under the /var/log directory.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B fail2ban_tmp_t 
+.B fail2ban_tmp_t
 .EE
 
 - Set files with the fail2ban_tmp_t type, if you want to store fail2ban temporary files in the /tmp directories.
@@ -61,7 +81,7 @@
 
 .EX
 .PP
-.B fail2ban_var_lib_t 
+.B fail2ban_var_lib_t
 .EE
 
 - Set files with the fail2ban_var_lib_t type, if you want to store the fail2ban files under the /var/lib directory.
@@ -69,7 +89,7 @@
 
 .EX
 .PP
-.B fail2ban_var_run_t 
+.B fail2ban_var_run_t
 .EE
 
 - Set files with the fail2ban_var_run_t type, if you want to store the fail2ban files under the /run directory.
@@ -77,28 +97,86 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux fail2ban policy is very flexible allowing users to setup their fail2ban processes in as secure a method as possible.
-.PP 
-The following process types are defined for fail2ban:
+.SH "MANAGED FILES"
 
-.EX
-.B fail2ban_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type fail2ban_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B fail2ban_log_t
+
+	/var/log/fail2ban\.log.*
+.br
+
+.br
+.B fail2ban_tmp_t
+
+
+.br
+.B fail2ban_var_lib_t
+
+	/var/lib/fail2ban(/.*)?
+.br
+
+.br
+.B fail2ban_var_run_t
+
+	/var/run/fail2ban.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -111,11 +189,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), fail2ban(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), fail2ban(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/fcoemon_selinux.8 serefpolicy-3.7.19/man/man8/fcoemon_selinux.8
--- nsaserefpolicy/man/man8/fcoemon_selinux.8	2013-03-15 11:41:12.097153507 +0100
+++ serefpolicy-3.7.19/man/man8/fcoemon_selinux.8	2013-03-15 11:40:02.661151922 +0100
@@ -1,31 +1,55 @@
-.TH  "fcoemon_selinux"  "8"  "fcoemon" "dwalsh@redhat.com" "fcoemon SELinux Policy documentation"
+.TH  "fcoemon_selinux"  "8"  "13-01-04" "fcoemon" "SELinux Policy documentation for fcoemon"
 .SH "NAME"
 fcoemon_selinux \- Security Enhanced Linux Policy for the fcoemon processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the fcoemon processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B fcoemon
-(policy for fcoemon)
-processes via flexible mandatory access
-control.  
+The fcoemon processes execute with the fcoemon_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep fcoemon_t
+
+
+.SH "ENTRYPOINTS"
+
+The fcoemon_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,fcoemon_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the fcoemon_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/fcoemon, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux fcoemon policy is very flexible allowing users to setup their fcoemon processes in as secure a method as possible.
+.PP
+The following process types are defined for fcoemon:
+
+.EX
+.B fcoemon_t
+.EE
+.PP
+Note:
+.B semanage permissive -a fcoemon_t
+
+can be used to make the process type fcoemon_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux fcoemon policy is very flexible allowing users to setup their fcoemon processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for fcoemon:
 
 
 .EX
 .PP
-.B fcoemon_exec_t 
+.B fcoemon_exec_t
 .EE
 
 - Set files with the fcoemon_exec_t type, if you want to transition an executable to the fcoemon_t domain.
@@ -33,40 +57,28 @@
 
 .EX
 .PP
-.B fcoemon_var_run_t 
+.B fcoemon_var_run_t
 .EE
 
 - Set files with the fcoemon_var_run_t type, if you want to store the fcoemon files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/fcm(/.*)?, /var/run/fcoemon\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux fcoemon policy is very flexible allowing users to setup their fcoemon processes in as secure a method as possible.
-.PP 
-The following process types are defined for fcoemon:
+.SH "MANAGED FILES"
 
-.EX
-.B fcoemon_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type fcoemon_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -79,11 +91,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), fcoemon(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), fcoemon(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/fenced_selinux.8 serefpolicy-3.7.19/man/man8/fenced_selinux.8
--- nsaserefpolicy/man/man8/fenced_selinux.8	2013-03-15 11:41:12.110153507 +0100
+++ serefpolicy-3.7.19/man/man8/fenced_selinux.8	2013-03-15 11:40:03.558151943 +0100
@@ -1,16 +1,53 @@
-.TH  "fenced_selinux"  "8"  "fenced" "dwalsh@redhat.com" "fenced SELinux Policy documentation"
+.TH  "fenced_selinux"  "8"  "13-01-04" "fenced" "SELinux Policy documentation for fenced"
 .SH "NAME"
 fenced_selinux \- Security Enhanced Linux Policy for the fenced processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the fenced processes via flexible mandatory access control.
 
+The fenced processes execute with the fenced_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep fenced_t
+
+
+.SH "ENTRYPOINTS"
+
+The fenced_t SELinux type can be entered via the "fenced_exec_t" file type.  The default entrypoint paths for the fenced_t domain are the following:"
+
+/usr/sbin/fenced, /usr/sbin/fence_node, /usr/sbin/fence_tool, /usr/sbin/fence_virtd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux fenced policy is very flexible allowing users to setup their fenced processes in as secure a method as possible.
+.PP
+The following process types are defined for fenced:
+
+.EX
+.B fenced_t
+.EE
+.PP
+Note:
+.B semanage permissive -a fenced_t
+
+can be used to make the process type fenced_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  fenced policy is extremely flexible and has several booleans that allow you to manipulate the policy and run fenced with the tightest access possible.
 
 
 .PP
+If you want to allow fenced domain to connect to the network using TCP, you must turn on the fenced_can_network_connect boolean.
+
+.EX
+.B setsebool -P fenced_can_network_connect 1
+.EE
+
+.PP
 If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
 
 .EX
@@ -24,32 +61,35 @@
 .B setsebool -P fenced_can_network_connect 1
 .EE
 
+.PP
+If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
+
+.EX
+.B setsebool -P fenced_can_ssh 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux fenced policy is very flexible allowing users to setup their fenced processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for fenced:
 
 
 .EX
 .PP
-.B fenced_exec_t 
+.B fenced_exec_t
 .EE
 
 - Set files with the fenced_exec_t type, if you want to transition an executable to the fenced_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/fence_node, /usr/sbin/fence_tool, /usr/sbin/fenced
 
 .EX
 .PP
-.B fenced_lock_t 
+.B fenced_lock_t
 .EE
 
 - Set files with the fenced_lock_t type, if you want to treat the files as fenced lock data, stored under the /var/lock directory
@@ -57,7 +97,7 @@
 
 .EX
 .PP
-.B fenced_tmp_t 
+.B fenced_tmp_t
 .EE
 
 - Set files with the fenced_tmp_t type, if you want to store fenced temporary files in the /tmp directories.
@@ -65,7 +105,7 @@
 
 .EX
 .PP
-.B fenced_tmpfs_t 
+.B fenced_tmpfs_t
 .EE
 
 - Set files with the fenced_tmpfs_t type, if you want to store fenced files on a tmpfs file system.
@@ -73,7 +113,7 @@
 
 .EX
 .PP
-.B fenced_var_log_t 
+.B fenced_var_log_t
 .EE
 
 - Set files with the fenced_var_log_t type, if you want to treat the data as fenced var log data, usually stored under the /var/log directory.
@@ -81,40 +121,122 @@
 
 .EX
 .PP
-.B fenced_var_run_t 
+.B fenced_var_run_t
 .EE
 
 - Set files with the fenced_var_run_t type, if you want to store the fenced files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/cluster/fenced_override, /var/run/cluster/fence_scsi.*, /var/run/fenced\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux fenced policy is very flexible allowing users to setup their fenced processes in as secure a method as possible.
-.PP 
-The following process types are defined for fenced:
+.SH "MANAGED FILES"
 
-.EX
-.B fenced_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type fenced_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cluster_var_lib_t
+
+	/var/lib/cluster(/.*)?
+.br
+
+.br
+.B fenced_lock_t
+
+	/var/lock/fence_manual\.lock
+.br
+
+.br
+.B fenced_tmp_t
+
+
+.br
+.B fenced_tmpfs_t
+
+
+.br
+.B fenced_var_log_t
+
+	/var/log/cluster/fenced\.log.*
+.br
+
+.br
+.B fenced_var_run_t
+
+	/var/run/cluster/fence_scsi.*
+.br
+	/var/run/fenced\.pid
+.br
+	/var/run/cluster/fenced_override
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B snmpd_var_lib_t
+
+	/var/agentx(/.*)?
+.br
+	/var/net-snmp(/.*)
+.br
+	/var/lib/snmp(/.*)?
+.br
+	/var/lib/net-snmp(/.*)?
+.br
+	/usr/share/snmp/mibs/\.index
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -130,12 +252,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), fenced(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), fenced(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/fetchmail_selinux.8 serefpolicy-3.7.19/man/man8/fetchmail_selinux.8
--- nsaserefpolicy/man/man8/fetchmail_selinux.8	2013-03-15 11:41:12.229153510 +0100
+++ serefpolicy-3.7.19/man/man8/fetchmail_selinux.8	2013-03-15 11:40:07.087152023 +0100
@@ -1,31 +1,55 @@
-.TH  "fetchmail_selinux"  "8"  "fetchmail" "dwalsh@redhat.com" "fetchmail SELinux Policy documentation"
+.TH  "fetchmail_selinux"  "8"  "13-01-04" "fetchmail" "SELinux Policy documentation for fetchmail"
 .SH "NAME"
 fetchmail_selinux \- Security Enhanced Linux Policy for the fetchmail processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the fetchmail processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B fetchmail
-(Remote-mail retrieval and forwarding utility)
-processes via flexible mandatory access
-control.  
+The fetchmail processes execute with the fetchmail_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep fetchmail_t
+
+
+.SH "ENTRYPOINTS"
+
+The fetchmail_t SELinux type can be entered via the "fetchmail_exec_t" file type.  The default entrypoint paths for the fetchmail_t domain are the following:"
+
+/usr/bin/fetchmail
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux fetchmail policy is very flexible allowing users to setup their fetchmail processes in as secure a method as possible.
+.PP
+The following process types are defined for fetchmail:
+
+.EX
+.B fetchmail_t
+.EE
+.PP
+Note:
+.B semanage permissive -a fetchmail_t
+
+can be used to make the process type fetchmail_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux fetchmail policy is very flexible allowing users to setup their fetchmail processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for fetchmail:
 
 
 .EX
 .PP
-.B fetchmail_etc_t 
+.B fetchmail_etc_t
 .EE
 
 - Set files with the fetchmail_etc_t type, if you want to store fetchmail files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B fetchmail_exec_t 
+.B fetchmail_exec_t
 .EE
 
 - Set files with the fetchmail_exec_t type, if you want to transition an executable to the fetchmail_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B fetchmail_uidl_cache_t 
+.B fetchmail_uidl_cache_t
 .EE
 
 - Set files with the fetchmail_uidl_cache_t type, if you want to store the files under the /var/cache directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B fetchmail_var_run_t 
+.B fetchmail_var_run_t
 .EE
 
 - Set files with the fetchmail_var_run_t type, if you want to store the fetchmail files under the /run directory.
@@ -57,28 +81,84 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux fetchmail policy is very flexible allowing users to setup their fetchmail processes in as secure a method as possible.
-.PP 
-The following process types are defined for fetchmail:
+.SH "MANAGED FILES"
 
-.EX
-.B fetchmail_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type fetchmail_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B fetchmail_uidl_cache_t
+
+	/var/mail/\.fetchmail-UIDL-cache
+.br
+
+.br
+.B fetchmail_var_run_t
+
+	/var/run/fetchmail/.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sendmail_log_t
+
+	/var/log/mail(/.*)?
+.br
+	/var/log/sendmail\.st.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +171,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), fetchmail(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), fetchmail(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/fingerd_selinux.8 serefpolicy-3.7.19/man/man8/fingerd_selinux.8
--- nsaserefpolicy/man/man8/fingerd_selinux.8	2013-03-15 11:41:11.930153503 +0100
+++ serefpolicy-3.7.19/man/man8/fingerd_selinux.8	2013-03-15 11:39:59.938151860 +0100
@@ -1,25 +1,55 @@
-.TH  "fingerd_selinux"  "8"  "fingerd" "dwalsh@redhat.com" "fingerd SELinux Policy documentation"
+.TH  "fingerd_selinux"  "8"  "13-01-04" "fingerd" "SELinux Policy documentation for fingerd"
 .SH "NAME"
 fingerd_selinux \- Security Enhanced Linux Policy for the fingerd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the fingerd processes via flexible mandatory access control.
 
+The fingerd processes execute with the fingerd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep fingerd_t
+
+
+.SH "ENTRYPOINTS"
+
+The fingerd_t SELinux type can be entered via the "fingerd_exec_t" file type.  The default entrypoint paths for the fingerd_t domain are the following:"
+
+/usr/sbin/[cef]fingerd, /etc/cron\.weekly/(c)?fingerd, /usr/sbin/in\.fingerd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
+.PP
+The following process types are defined for fingerd:
+
+.EX
+.B fingerd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a fingerd_t
+
+can be used to make the process type fingerd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for fingerd:
 
 
 .EX
 .PP
-.B fingerd_etc_t 
+.B fingerd_etc_t
 .EE
 
 - Set files with the fingerd_etc_t type, if you want to store fingerd files in the /etc directories.
@@ -27,19 +57,15 @@
 
 .EX
 .PP
-.B fingerd_exec_t 
+.B fingerd_exec_t
 .EE
 
 - Set files with the fingerd_exec_t type, if you want to transition an executable to the fingerd_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/cron\.weekly/(c)?fingerd, /usr/sbin/[cef]fingerd, /usr/sbin/in\.fingerd
 
 .EX
 .PP
-.B fingerd_log_t 
+.B fingerd_log_t
 .EE
 
 - Set files with the fingerd_log_t type, if you want to treat the data as fingerd log data, usually stored under the /var/log directory.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B fingerd_var_run_t 
+.B fingerd_var_run_t
 .EE
 
 - Set files with the fingerd_var_run_t type, if you want to store the fingerd files under the /run directory.
@@ -55,51 +81,97 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for fingerd:
 
 .EX
 .TP 5
-.B fingerd_port_t 
+.B fingerd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 79
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
-.PP 
-The following process types are defined for fingerd:
+.SH "MANAGED FILES"
 
-.EX
-.B fingerd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type fingerd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B fingerd_log_t
+
+	/var/log/cfingerd\.log.*
+.br
+
+.br
+.B fingerd_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +187,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), fingerd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), fingerd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/firewallgui_selinux.8 serefpolicy-3.7.19/man/man8/firewallgui_selinux.8
--- nsaserefpolicy/man/man8/firewallgui_selinux.8	2013-03-15 11:41:12.083153506 +0100
+++ serefpolicy-3.7.19/man/man8/firewallgui_selinux.8	2013-03-15 11:40:02.583151920 +0100
@@ -1,31 +1,55 @@
-.TH  "firewallgui_selinux"  "8"  "firewallgui" "dwalsh@redhat.com" "firewallgui SELinux Policy documentation"
+.TH  "firewallgui_selinux"  "8"  "13-01-04" "firewallgui" "SELinux Policy documentation for firewallgui"
 .SH "NAME"
 firewallgui_selinux \- Security Enhanced Linux Policy for the firewallgui processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the firewallgui processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B firewallgui
-(policy for firewallgui)
-processes via flexible mandatory access
-control.  
+The firewallgui processes execute with the firewallgui_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep firewallgui_t
+
+
+.SH "ENTRYPOINTS"
+
+The firewallgui_t SELinux type can be entered via the "firewallgui_exec_t" file type.  The default entrypoint paths for the firewallgui_t domain are the following:"
+
+/usr/share/system-config-firewall/system-config-firewall-mechanism.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux firewallgui policy is very flexible allowing users to setup their firewallgui processes in as secure a method as possible.
+.PP
+The following process types are defined for firewallgui:
+
+.EX
+.B firewallgui_t
+.EE
+.PP
+Note:
+.B semanage permissive -a firewallgui_t
+
+can be used to make the process type firewallgui_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux firewallgui policy is very flexible allowing users to setup their firewallgui processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for firewallgui:
 
 
 .EX
 .PP
-.B firewallgui_exec_t 
+.B firewallgui_exec_t
 .EE
 
 - Set files with the firewallgui_exec_t type, if you want to transition an executable to the firewallgui_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B firewallgui_tmp_t 
+.B firewallgui_tmp_t
 .EE
 
 - Set files with the firewallgui_tmp_t type, if you want to store firewallgui temporary files in the /tmp directories.
@@ -41,28 +65,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux firewallgui policy is very flexible allowing users to setup their firewallgui processes in as secure a method as possible.
-.PP 
-The following process types are defined for firewallgui:
+.SH "MANAGED FILES"
 
-.EX
-.B firewallgui_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type firewallgui_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B firewallgui_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B system_conf_t
+
+	/etc/sysctl\.conf(\.old)?
+.br
+	/etc/sysconfig/ip6?tables.*
+.br
+	/etc/sysconfig/ipvsadm.*
+.br
+	/etc/sysconfig/ebtables.*
+.br
+	/etc/sysconfig/system-config-firewall.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +145,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), firewallgui(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), firewallgui(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/firstboot_selinux.8 serefpolicy-3.7.19/man/man8/firstboot_selinux.8
--- nsaserefpolicy/man/man8/firstboot_selinux.8	2013-03-15 11:41:11.782153499 +0100
+++ serefpolicy-3.7.19/man/man8/firstboot_selinux.8	2013-03-15 11:39:56.621151784 +0100
@@ -1,34 +1,55 @@
-.TH  "firstboot_selinux"  "8"  "firstboot" "dwalsh@redhat.com" "firstboot SELinux Policy documentation"
+.TH  "firstboot_selinux"  "8"  "13-01-04" "firstboot" "SELinux Policy documentation for firstboot"
 .SH "NAME"
 firstboot_selinux \- Security Enhanced Linux Policy for the firstboot processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the firstboot processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B firstboot
-(
-Final system configuration run during the first boot
-after installation of Red Hat/Fedora systems.
-)
-processes via flexible mandatory access
-control.  
+The firstboot processes execute with the firstboot_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep firstboot_t
+
+
+.SH "ENTRYPOINTS"
+
+The firstboot_t SELinux type can be entered via the "mtrr_device_t,firstboot_exec_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the firstboot_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/firstboot, /usr/share/firstboot/firstboot\.py, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux firstboot policy is very flexible allowing users to setup their firstboot processes in as secure a method as possible.
+.PP
+The following process types are defined for firstboot:
+
+.EX
+.B firstboot_t
+.EE
+.PP
+Note:
+.B semanage permissive -a firstboot_t
+
+can be used to make the process type firstboot_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux firstboot policy is very flexible allowing users to setup their firstboot processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for firstboot:
 
 
 .EX
 .PP
-.B firstboot_etc_t 
+.B firstboot_etc_t
 .EE
 
 - Set files with the firstboot_etc_t type, if you want to store firstboot files in the /etc directories.
@@ -36,40 +57,28 @@
 
 .EX
 .PP
-.B firstboot_exec_t 
+.B firstboot_exec_t
 .EE
 
 - Set files with the firstboot_exec_t type, if you want to transition an executable to the firstboot_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/share/firstboot/firstboot\.py, /usr/sbin/firstboot
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux firstboot policy is very flexible allowing users to setup their firstboot processes in as secure a method as possible.
-.PP 
-The following process types are defined for firstboot:
+.SH "MANAGED FILES"
 
-.EX
-.B firstboot_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type firstboot_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -82,11 +91,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), firstboot(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), firstboot(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/foghorn_selinux.8 serefpolicy-3.7.19/man/man8/foghorn_selinux.8
--- nsaserefpolicy/man/man8/foghorn_selinux.8	2013-03-15 11:41:11.884153502 +0100
+++ serefpolicy-3.7.19/man/man8/foghorn_selinux.8	2013-03-15 11:39:59.313151846 +0100
@@ -1,25 +1,55 @@
-.TH  "foghorn_selinux"  "8"  "foghorn" "dwalsh@redhat.com" "foghorn SELinux Policy documentation"
+.TH  "foghorn_selinux"  "8"  "13-01-04" "foghorn" "SELinux Policy documentation for foghorn"
 .SH "NAME"
 foghorn_selinux \- Security Enhanced Linux Policy for the foghorn processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the foghorn processes via flexible mandatory access control.
 
+The foghorn processes execute with the foghorn_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep foghorn_t
+
+
+.SH "ENTRYPOINTS"
+
+The foghorn_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,foghorn_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the foghorn_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/foghorn, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux foghorn policy is very flexible allowing users to setup their foghorn processes in as secure a method as possible.
+.PP
+The following process types are defined for foghorn:
+
+.EX
+.B foghorn_t
+.EE
+.PP
+Note:
+.B semanage permissive -a foghorn_t
+
+can be used to make the process type foghorn_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux foghorn policy is very flexible allowing users to setup their foghorn processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for foghorn:
 
 
 .EX
 .PP
-.B foghorn_exec_t 
+.B foghorn_exec_t
 .EE
 
 - Set files with the foghorn_exec_t type, if you want to transition an executable to the foghorn_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B foghorn_tmpfs_t 
+.B foghorn_tmpfs_t
 .EE
 
 - Set files with the foghorn_tmpfs_t type, if you want to store foghorn files on a tmpfs file system.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B foghorn_var_log_t 
+.B foghorn_var_log_t
 .EE
 
 - Set files with the foghorn_var_log_t type, if you want to treat the data as foghorn var log data, usually stored under the /var/log directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B foghorn_var_run_t 
+.B foghorn_var_run_t
 .EE
 
 - Set files with the foghorn_var_run_t type, if you want to store the foghorn files under the /run directory.
@@ -51,28 +81,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux foghorn policy is very flexible allowing users to setup their foghorn processes in as secure a method as possible.
-.PP 
-The following process types are defined for foghorn:
+.SH "MANAGED FILES"
 
-.EX
-.B foghorn_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type foghorn_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +107,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), foghorn(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), foghorn(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/fprintd_selinux.8 serefpolicy-3.7.19/man/man8/fprintd_selinux.8
--- nsaserefpolicy/man/man8/fprintd_selinux.8	2013-03-15 11:41:12.062153506 +0100
+++ serefpolicy-3.7.19/man/man8/fprintd_selinux.8	2013-03-15 11:40:02.064151909 +0100
@@ -1,31 +1,55 @@
-.TH  "fprintd_selinux"  "8"  "fprintd" "dwalsh@redhat.com" "fprintd SELinux Policy documentation"
+.TH  "fprintd_selinux"  "8"  "13-01-04" "fprintd" "SELinux Policy documentation for fprintd"
 .SH "NAME"
 fprintd_selinux \- Security Enhanced Linux Policy for the fprintd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the fprintd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B fprintd
-(DBus fingerprint reader service)
-processes via flexible mandatory access
-control.  
+The fprintd processes execute with the fprintd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep fprintd_t
+
+
+.SH "ENTRYPOINTS"
+
+The fprintd_t SELinux type can be entered via the "fprintd_exec_t" file type.  The default entrypoint paths for the fprintd_t domain are the following:"
+
+/usr/libexec/fprintd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux fprintd policy is very flexible allowing users to setup their fprintd processes in as secure a method as possible.
+.PP
+The following process types are defined for fprintd:
+
+.EX
+.B fprintd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a fprintd_t
+
+can be used to make the process type fprintd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux fprintd policy is very flexible allowing users to setup their fprintd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for fprintd:
 
 
 .EX
 .PP
-.B fprintd_exec_t 
+.B fprintd_exec_t
 .EE
 
 - Set files with the fprintd_exec_t type, if you want to transition an executable to the fprintd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B fprintd_var_lib_t 
+.B fprintd_var_lib_t
 .EE
 
 - Set files with the fprintd_var_lib_t type, if you want to store the fprintd files under the /var/lib directory.
@@ -41,28 +65,62 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux fprintd policy is very flexible allowing users to setup their fprintd processes in as secure a method as possible.
-.PP 
-The following process types are defined for fprintd:
+.SH "MANAGED FILES"
 
-.EX
-.B fprintd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type fprintd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B fprintd_var_lib_t
+
+	/var/lib/fprint(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +133,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), fprintd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), fprintd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/freshclam_selinux.8 serefpolicy-3.7.19/man/man8/freshclam_selinux.8
--- nsaserefpolicy/man/man8/freshclam_selinux.8	2013-03-15 11:41:11.936153503 +0100
+++ serefpolicy-3.7.19/man/man8/freshclam_selinux.8	2013-03-15 11:40:00.292151868 +0100
@@ -1,25 +1,55 @@
-.TH  "freshclam_selinux"  "8"  "freshclam" "dwalsh@redhat.com" "freshclam SELinux Policy documentation"
+.TH  "freshclam_selinux"  "8"  "13-01-04" "freshclam" "SELinux Policy documentation for freshclam"
 .SH "NAME"
 freshclam_selinux \- Security Enhanced Linux Policy for the freshclam processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the freshclam processes via flexible mandatory access control.
 
+The freshclam processes execute with the freshclam_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep freshclam_t
+
+
+.SH "ENTRYPOINTS"
+
+The freshclam_t SELinux type can be entered via the "freshclam_exec_t" file type.  The default entrypoint paths for the freshclam_t domain are the following:"
+
+/usr/bin/freshclam
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux freshclam policy is very flexible allowing users to setup their freshclam processes in as secure a method as possible.
+.PP
+The following process types are defined for freshclam:
+
+.EX
+.B freshclam_t
+.EE
+.PP
+Note:
+.B semanage permissive -a freshclam_t
+
+can be used to make the process type freshclam_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux freshclam policy is very flexible allowing users to setup their freshclam processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for freshclam:
 
 
 .EX
 .PP
-.B freshclam_exec_t 
+.B freshclam_exec_t
 .EE
 
 - Set files with the freshclam_exec_t type, if you want to transition an executable to the freshclam_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B freshclam_var_log_t 
+.B freshclam_var_log_t
 .EE
 
 - Set files with the freshclam_var_log_t type, if you want to treat the data as freshclam var log data, usually stored under the /var/log directory.
@@ -35,28 +65,100 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux freshclam policy is very flexible allowing users to setup their freshclam processes in as secure a method as possible.
-.PP 
-The following process types are defined for freshclam:
+.SH "MANAGED FILES"
 
-.EX
-.B freshclam_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type freshclam_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B antivirus_db_t
+
+	/var/opt/f-secure(/.*)?
+.br
+
+.br
+.B clamd_var_lib_t
+
+	/var/clamav(/.*)?
+.br
+	/var/lib/clamd.*
+.br
+	/var/lib/clamav(/.*)?
+.br
+
+.br
+.B clamd_var_run_t
+
+	/var/run/clamd.*
+.br
+	/var/run/clamav.*
+.br
+	/var/run/amavis(d)?/clamd\.pid
+.br
+	/var/spool/MailScanner(/.*)?
+.br
+	/var/spool/amavisd/clamd\.sock
+.br
+
+.br
+.B freshclam_var_log_t
+
+	/var/log/clamav/freshclam.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +171,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), freshclam(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), freshclam(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/fsadm_selinux.8 serefpolicy-3.7.19/man/man8/fsadm_selinux.8
--- nsaserefpolicy/man/man8/fsadm_selinux.8	2013-03-15 11:41:12.139153508 +0100
+++ serefpolicy-3.7.19/man/man8/fsadm_selinux.8	2013-03-15 11:40:04.067151954 +0100
@@ -1,37 +1,63 @@
-.TH  "fsadm_selinux"  "8"  "fsadm" "dwalsh@redhat.com" "fsadm SELinux Policy documentation"
+.TH  "fsadm_selinux"  "8"  "13-01-04" "fsadm" "SELinux Policy documentation for fsadm"
 .SH "NAME"
 fsadm_selinux \- Security Enhanced Linux Policy for the fsadm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the fsadm processes via flexible mandatory access control.
 
+The fsadm processes execute with the fsadm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep fsadm_t
+
+
+.SH "ENTRYPOINTS"
+
+The fsadm_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,fsadm_exec_t" file types.  The default entrypoint paths for the fsadm_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /sbin/fsck.*, /sbin/mkfs.*, /sbin/jfs_.*, /sbin/swapon.*, /sbin/resize.*fs, /sbin/losetup.*, /sbin/reiserfs(ck|tune), /sbin/dump, /sbin/partx, /sbin/fdisk, /sbin/blkid, /sbin/sfdisk, /usr/bin/raw, /sbin/parted, /sbin/mke2fs, /sbin/mke4fs, /sbin/mkraid, /sbin/lsraid, /sbin/hdparm, /sbin/e4fsck, /sbin/findfs, /sbin/e2fsck, /sbin/cfdisk, /sbin/tune2fs, /sbin/mkdosfs, /sbin/e2label, /sbin/dosfsck, /sbin/dumpe2fs, /sbin/blockdev, /sbin/raidstart, /sbin/scsi_info, /sbin/partprobe, /sbin/mkreiserfs, /sbin/raidautorun, /usr/bin/syslinux, /sbin/install-mbr, /usr/sbin/smartctl, /sbin/make_reiser4, /usr/sbin/clubufflush, /usr/bin/scsi_unique_id, /usr/bin/partition_uuid
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux fsadm policy is very flexible allowing users to setup their fsadm processes in as secure a method as possible.
+.PP
+The following process types are defined for fsadm:
+
+.EX
+.B fsadm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a fsadm_t
+
+can be used to make the process type fsadm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux fsadm policy is very flexible allowing users to setup their fsadm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for fsadm:
 
 
 .EX
 .PP
-.B fsadm_exec_t 
+.B fsadm_exec_t
 .EE
 
 - Set files with the fsadm_exec_t type, if you want to transition an executable to the fsadm_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/partx, /sbin/blockdev, /sbin/mkfs.*, /sbin/dumpe2fs, /sbin/mkdosfs, /sbin/e4fsck, /sbin/blkid, /usr/bin/partition_uuid, /sbin/raidautorun, /sbin/mke2fs, /sbin/mkreiserfs, /sbin/sfdisk, /sbin/tune2fs, /sbin/make_reiser4, /sbin/partprobe, /sbin/dump, /sbin/swapon.*, /usr/bin/scsi_unique_id, /sbin/findfs, /sbin/install-mbr, /usr/sbin/smartctl, /usr/bin/syslinux, /usr/sbin/clubufflush, /sbin/losetup.*, /sbin/resize.*fs, /sbin/parted, /sbin/dosfsck, /sbin/e2label, /sbin/mkraid, /sbin/scsi_info, /sbin/e2fsck, /sbin/fsck.*, /sbin/jfs_.*, /sbin/raidstart, /sbin/lsraid, /sbin/reiserfs(ck|tune), /sbin/fdisk, /usr/bin/raw, /sbin/mke4fs, /sbin/cfdisk, /sbin/hdparm
 
 .EX
 .PP
-.B fsadm_log_t 
+.B fsadm_log_t
 .EE
 
 - Set files with the fsadm_log_t type, if you want to treat the data as fsadm log data, usually stored under the /var/log directory.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B fsadm_tmp_t 
+.B fsadm_tmp_t
 .EE
 
 - Set files with the fsadm_tmp_t type, if you want to store fsadm temporary files in the /tmp directories.
@@ -47,28 +73,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux fsadm policy is very flexible allowing users to setup their fsadm processes in as secure a method as possible.
-.PP 
-The following process types are defined for fsadm:
+.SH "MANAGED FILES"
 
-.EX
-.B fsadm_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type fsadm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -81,11 +99,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), fsadm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), fsadm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/fsdaemon_selinux.8 serefpolicy-3.7.19/man/man8/fsdaemon_selinux.8
--- nsaserefpolicy/man/man8/fsdaemon_selinux.8	2013-03-15 11:41:11.991153504 +0100
+++ serefpolicy-3.7.19/man/man8/fsdaemon_selinux.8	2013-03-15 11:40:00.940151883 +0100
@@ -1,25 +1,55 @@
-.TH  "fsdaemon_selinux"  "8"  "fsdaemon" "dwalsh@redhat.com" "fsdaemon SELinux Policy documentation"
+.TH  "fsdaemon_selinux"  "8"  "13-01-04" "fsdaemon" "SELinux Policy documentation for fsdaemon"
 .SH "NAME"
 fsdaemon_selinux \- Security Enhanced Linux Policy for the fsdaemon processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the fsdaemon processes via flexible mandatory access control.
 
+The fsdaemon processes execute with the fsdaemon_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep fsdaemon_t
+
+
+.SH "ENTRYPOINTS"
+
+The fsdaemon_t SELinux type can be entered via the "fsdaemon_exec_t" file type.  The default entrypoint paths for the fsdaemon_t domain are the following:"
+
+/usr/sbin/smartd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux fsdaemon policy is very flexible allowing users to setup their fsdaemon processes in as secure a method as possible.
+.PP
+The following process types are defined for fsdaemon:
+
+.EX
+.B fsdaemon_t
+.EE
+.PP
+Note:
+.B semanage permissive -a fsdaemon_t
+
+can be used to make the process type fsdaemon_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux fsdaemon policy is very flexible allowing users to setup their fsdaemon processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for fsdaemon:
 
 
 .EX
 .PP
-.B fsdaemon_exec_t 
+.B fsdaemon_exec_t
 .EE
 
 - Set files with the fsdaemon_exec_t type, if you want to transition an executable to the fsdaemon_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B fsdaemon_initrc_exec_t 
+.B fsdaemon_initrc_exec_t
 .EE
 
 - Set files with the fsdaemon_initrc_exec_t type, if you want to transition an executable to the fsdaemon_initrc_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B fsdaemon_tmp_t 
+.B fsdaemon_tmp_t
 .EE
 
 - Set files with the fsdaemon_tmp_t type, if you want to store fsdaemon temporary files in the /tmp directories.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B fsdaemon_var_run_t 
+.B fsdaemon_var_run_t
 .EE
 
 - Set files with the fsdaemon_var_run_t type, if you want to store the fsdaemon files under the /run directory.
@@ -51,28 +81,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux fsdaemon policy is very flexible allowing users to setup their fsdaemon processes in as secure a method as possible.
-.PP 
-The following process types are defined for fsdaemon:
+.SH "MANAGED FILES"
 
-.EX
-.B fsdaemon_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type fsdaemon_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B fsdaemon_tmp_t
+
+
+.br
+.B fsdaemon_var_run_t
+
+	/var/run/smartd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +161,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), fsdaemon(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), fsdaemon(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ftpdctl_selinux.8 serefpolicy-3.7.19/man/man8/ftpdctl_selinux.8
--- nsaserefpolicy/man/man8/ftpdctl_selinux.8	2013-03-15 11:41:10.908153479 +0100
+++ serefpolicy-3.7.19/man/man8/ftpdctl_selinux.8	2013-03-15 11:39:55.187151752 +0100
@@ -1,25 +1,55 @@
-.TH  "ftpdctl_selinux"  "8"  "ftpdctl" "dwalsh@redhat.com" "ftpdctl SELinux Policy documentation"
+.TH  "ftpdctl_selinux"  "8"  "13-01-04" "ftpdctl" "SELinux Policy documentation for ftpdctl"
 .SH "NAME"
 ftpdctl_selinux \- Security Enhanced Linux Policy for the ftpdctl processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ftpdctl processes via flexible mandatory access control.
 
+The ftpdctl processes execute with the ftpdctl_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ftpdctl_t
+
+
+.SH "ENTRYPOINTS"
+
+The ftpdctl_t SELinux type can be entered via the "ftpdctl_exec_t" file type.  The default entrypoint paths for the ftpdctl_t domain are the following:"
+
+/usr/bin/ftpdctl
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ftpdctl policy is very flexible allowing users to setup their ftpdctl processes in as secure a method as possible.
+.PP
+The following process types are defined for ftpdctl:
+
+.EX
+.B ftpdctl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ftpdctl_t
+
+can be used to make the process type ftpdctl_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ftpdctl policy is very flexible allowing users to setup their ftpdctl processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ftpdctl:
 
 
 .EX
 .PP
-.B ftpdctl_exec_t 
+.B ftpdctl_exec_t
 .EE
 
 - Set files with the ftpdctl_exec_t type, if you want to transition an executable to the ftpdctl_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B ftpdctl_tmp_t 
+.B ftpdctl_tmp_t
 .EE
 
 - Set files with the ftpdctl_tmp_t type, if you want to store ftpdctl temporary files in the /tmp directories.
@@ -35,28 +65,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ftpdctl policy is very flexible allowing users to setup their ftpdctl processes in as secure a method as possible.
-.PP 
-The following process types are defined for ftpdctl:
+.SH "MANAGED FILES"
 
-.EX
-.B ftpdctl_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ftpdctl_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +127,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ftpdctl(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ftpdctl(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ftpd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ftpd_selinux.8 serefpolicy-3.7.19/man/man8/ftpd_selinux.8
--- nsaserefpolicy/man/man8/ftpd_selinux.8	2013-03-15 11:41:12.191153509 +0100
+++ serefpolicy-3.7.19/man/man8/ftpd_selinux.8	2013-03-15 11:40:06.046151999 +0100
@@ -1,21 +1,44 @@
-.TH  "ftpd_selinux"  "8"  "ftpd" "dwalsh@redhat.com" "ftpd SELinux Policy documentation"
+.TH  "ftpd_selinux"  "8"  "13-01-04" "ftpd" "SELinux Policy documentation for ftpd"
 .SH "NAME"
 ftpd_selinux \- Security Enhanced Linux Policy for the ftpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ftpd processes via flexible mandatory access control.
 
+The ftpd processes execute with the ftpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  ftpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ftpd with the tightest access possible.
+.B ps -eZ | grep ftpd_t
+
+
+.SH "ENTRYPOINTS"
 
+The ftpd_t SELinux type can be entered via the "ftpd_exec_t" file type.  The default entrypoint paths for the ftpd_t domain are the following:"
 
+/usr/sbin/ftpwho, /usr/sbin/vsftpd, /usr/sbin/in\.ftpd, /usr/sbin/proftpd, /usr/sbin/muddleftpd, /usr/kerberos/sbin/ftpd, /etc/cron\.monthly/proftpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-If you want to allow ftp to read and write files in the user home directorie, you must turn on the ftp_home_dir boolean.
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
+.PP
+The following process types are defined for ftpd:
 
 .EX
-.B setsebool -P ftp_home_dir 1
+.B ftpd_t, ftpdctl_t
 .EE
+.PP
+Note:
+.B semanage permissive -a ftpd_t
+
+can be used to make the process type ftpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  ftpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ftpd with the tightest access possible.
+
 
 .PP
 If you want to allow ftp servers to login to local users and read/write all files on the system, governed by DAC, you must turn on the allow_ftpd_full_access boolean.
@@ -25,13 +48,55 @@
 .EE
 
 .PP
-If you want to allow ftp servers to use connect to mysql databas, you must turn on the ftpd_connect_db boolean.
+If you want to allow ftp servers to use cifs used for public file transfer services, you must turn on the allow_ftpd_use_cifs boolean.
+
+.EX
+.B setsebool -P allow_ftpd_use_cifs 1
+.EE
+
+.PP
+If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+
+.EX
+.B setsebool -P httpd_enable_ftp_server 1
+.EE
+
+.PP
+If you want to allow ftp servers to use nfs used for public file transfer services, you must turn on the allow_ftpd_use_nfs boolean.
+
+.EX
+.B setsebool -P allow_ftpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow ftp servers to use bind to all unreserved ports for passive mode, you must turn on the ftpd_use_passive_mode boolean.
+
+.EX
+.B setsebool -P ftpd_use_passive_mode 1
+.EE
+
+.PP
+If you want to allow ftp to read and write files in the user home directories, you must turn on the ftp_home_dir boolean.
+
+.EX
+.B setsebool -P ftp_home_dir 1
+.EE
+
+.PP
+If you want to allow ftp servers to use connect to mysql database, you must turn on the ftpd_connect_db boolean.
 
 .EX
 .B setsebool -P ftpd_connect_db 1
 .EE
 
 .PP
+If you want to allow ftp servers to login to local users and read/write all files on the system, governed by DAC, you must turn on the allow_ftpd_full_access boolean.
+
+.EX
+.B setsebool -P allow_ftpd_full_access 1
+.EE
+
+.PP
 If you want to allow ftp servers to use cifs used for public file transfer services, you must turn on the allow_ftpd_use_cifs boolean.
 
 .EX
@@ -39,6 +104,13 @@
 .EE
 
 .PP
+If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+
+.EX
+.B setsebool -P httpd_enable_ftp_server 1
+.EE
+
+.PP
 If you want to allow ftp servers to use nfs used for public file transfer services, you must turn on the allow_ftpd_use_nfs boolean.
 
 .EX
@@ -46,10 +118,38 @@
 .EE
 
 .PP
-If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+If you want to allow ftp servers to use bind to all unreserved ports for passive mode, you must turn on the ftpd_use_passive_mode boolean.
 
 .EX
-.B setsebool -P httpd_enable_ftp_server 1
+.B setsebool -P ftpd_use_passive_mode 1
+.EE
+
+.PP
+If you want to allow ftp to read and write files in the user home directories, you must turn on the ftp_home_dir boolean.
+
+.EX
+.B setsebool -P ftp_home_dir 1
+.EE
+
+.PP
+If you want to allow ftp servers to use connect to mysql database, you must turn on the ftpd_connect_db boolean.
+
+.EX
+.B setsebool -P ftpd_connect_db 1
+.EE
+
+.PP
+If you want to allow tftp to modify public files used for public file transfer services, you must turn on the tftp_anon_write boolean.
+
+.EX
+.B setsebool -P tftp_anon_write 1
+.EE
+
+.PP
+If you want to allow ftp servers to upload files,  used for public file transfer services. Directories must be labeled public_content_rw_t, you must turn on the allow_ftpd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_ftpd_anon_write 1
 .EE
 
 .SH SHARING FILES
@@ -63,7 +163,7 @@
 .B restorecon -F -R -v /var/ftpd
 .pp
 .TP
-Allow ftpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_ftpd_anon_write boolean to be set.
+Allow ftpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_ftpdd_anon_write boolean to be set.
 .PP
 .B
 semanage fcontext -a -t public_content_rw_t "/var/ftpd/incoming(/.*)?"
@@ -86,19 +186,19 @@
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ftpd:
 
 
 .EX
 .PP
-.B ftpd_etc_t 
+.B ftpd_etc_t
 .EE
 
 - Set files with the ftpd_etc_t type, if you want to store ftpd files in the /etc directories.
@@ -106,31 +206,23 @@
 
 .EX
 .PP
-.B ftpd_exec_t 
+.B ftpd_exec_t
 .EE
 
 - Set files with the ftpd_exec_t type, if you want to transition an executable to the ftpd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/vsftpd, /usr/sbin/ftpwho, /etc/cron\.monthly/proftpd, /usr/sbin/muddleftpd, /usr/sbin/in\.ftpd, /usr/sbin/proftpd, /usr/kerberos/sbin/ftpd
 
 .EX
 .PP
-.B ftpd_initrc_exec_t 
+.B ftpd_initrc_exec_t
 .EE
 
 - Set files with the ftpd_initrc_exec_t type, if you want to transition an executable to the ftpd_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/proftpd, /etc/rc\.d/init\.d/vsftpd
 
 .EX
 .PP
-.B ftpd_keytab_t 
+.B ftpd_keytab_t
 .EE
 
 - Set files with the ftpd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -138,7 +230,7 @@
 
 .EX
 .PP
-.B ftpd_lock_t 
+.B ftpd_lock_t
 .EE
 
 - Set files with the ftpd_lock_t type, if you want to treat the files as ftpd lock data, stored under the /var/lock directory
@@ -146,7 +238,7 @@
 
 .EX
 .PP
-.B ftpd_tmp_t 
+.B ftpd_tmp_t
 .EE
 
 - Set files with the ftpd_tmp_t type, if you want to store ftpd temporary files in the /tmp directories.
@@ -154,7 +246,7 @@
 
 .EX
 .PP
-.B ftpd_tmpfs_t 
+.B ftpd_tmpfs_t
 .EE
 
 - Set files with the ftpd_tmpfs_t type, if you want to store ftpd files on a tmpfs file system.
@@ -162,7 +254,7 @@
 
 .EX
 .PP
-.B ftpd_var_run_t 
+.B ftpd_var_run_t
 .EE
 
 - Set files with the ftpd_var_run_t type, if you want to store the ftpd files under the /run directory.
@@ -170,7 +262,7 @@
 
 .EX
 .PP
-.B ftpdctl_exec_t 
+.B ftpdctl_exec_t
 .EE
 
 - Set files with the ftpdctl_exec_t type, if you want to transition an executable to the ftpdctl_t domain.
@@ -178,7 +270,7 @@
 
 .EX
 .PP
-.B ftpdctl_tmp_t 
+.B ftpdctl_tmp_t
 .EE
 
 - Set files with the ftpdctl_tmp_t type, if you want to store ftpdctl temporary files in the /tmp directories.
@@ -186,62 +278,190 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ftpd:
 
 .EX
 .TP 5
-.B ftp_data_port_t 
+.B ftp_data_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 20
 .EE
 
 .EX
 .TP 5
-.B ftp_port_t 
+.B ftp_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 21,990
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for ftpd:
-
-.EX
-.B ftpd_t, ftpdctl_t 
+udp 990
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type ftpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B ftpd_lock_t
+
+
+.br
+.B ftpd_tmp_t
+
+
+.br
+.B ftpd_tmpfs_t
+
+
+.br
+.B ftpd_var_run_t
+
+	/var/run/proftpd.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
+
+.br
+.B xferlog_t
+
+	/var/log/vsftpd.*
+.br
+	/var/log/xferlog.*
+.br
+	/var/log/proftpd(/.*)?
+.br
+	/var/log/xferreport.*
+.br
+	/var/log/muddleftpd\.log.*
+.br
+	/usr/libexec/webmin/vsftpd/webalizer/xfer_log
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -260,12 +480,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ftpd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), ftpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), ftpdctl_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/games_selinux.8 serefpolicy-3.7.19/man/man8/games_selinux.8
--- nsaserefpolicy/man/man8/games_selinux.8	2013-03-15 11:41:11.785153499 +0100
+++ serefpolicy-3.7.19/man/man8/games_selinux.8	2013-03-15 11:39:57.047151794 +0100
@@ -1,55 +1,71 @@
-.TH  "games_selinux"  "8"  "games" "dwalsh@redhat.com" "games SELinux Policy documentation"
+.TH  "games_selinux"  "8"  "13-01-04" "games" "SELinux Policy documentation for games"
 .SH "NAME"
 games_selinux \- Security Enhanced Linux Policy for the games processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the games processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B games
-(Games)
-processes via flexible mandatory access
-control.  
+The games processes execute with the games_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep games_t
+
+
+.SH "ENTRYPOINTS"
+
+The games_t SELinux type can be entered via the "games_exec_t" file type.  The default entrypoint paths for the games_t domain are the following:"
+
+/usr/lib(64)?/games(/.*)?, /usr/games/.*, /usr/bin/civclient.*, /usr/bin/civserver.*, /usr/bin/sol, /usr/bin/micq, /usr/bin/kolf, /usr/bin/kpat, /usr/bin/gnect, /usr/bin/gtali, /usr/bin/iagno, /usr/bin/ksame, /usr/bin/ktron, /usr/bin/kwin4, /usr/bin/lskat, /usr/bin/gataxx, /usr/bin/glines, /usr/bin/klines, /usr/bin/kmines, /usr/bin/kpoker, /usr/bin/ksnake, /usr/bin/gnomine, /usr/bin/gnotski, /usr/bin/katomic, /usr/bin/kbounce, /usr/bin/kshisen, /usr/bin/ksirtet, /usr/bin/gnibbles, /usr/bin/gnobots2, /usr/bin/mahjongg, /usr/bin/atlantik, /usr/bin/kenolaba, /usr/bin/klickety, /usr/bin/konquest, /usr/bin/kreversi, /usr/bin/ksokoban, /usr/bin/blackjack, /usr/bin/gnotravex, /usr/bin/kblackbox, /usr/bin/kfouleggs, /usr/bin/kmahjongg, /usr/bin/kwin4proc, /usr/bin/lskatproc, /usr/bin/Maelstrom, /usr/bin/same-gnome, /usr/bin/kasteroids, /usr/bin/ksmiletris, /usr/bin/kspaceduel, /usr/bin/ktuberling, /usr/bin/kbackgammon, /usr/bin/kbattleship, /usr/bin/kgoldrunner, /usr/bin/gnome-stones, /usr/bin/kjumpingcube
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux games policy is very flexible allowing users to setup their games processes in as secure a method as possible.
+.PP
+The following process types are defined for games:
+
+.EX
+.B games_t, games_srv_t
+.EE
+.PP
+Note:
+.B semanage permissive -a games_t
+
+can be used to make the process type games_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux games policy is very flexible allowing users to setup their games processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for games:
 
 
 .EX
 .PP
-.B games_data_t 
+.B games_data_t
 .EE
 
 - Set files with the games_data_t type, if you want to treat the files as games content.
 
-.br
-.TP 5
-Paths: 
-/var/games(/.*)?, /var/lib/games(/.*)?
 
 .EX
 .PP
-.B games_exec_t 
+.B games_exec_t
 .EE
 
 - Set files with the games_exec_t type, if you want to transition an executable to the games_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/sol, /usr/bin/blackjack, /usr/bin/micq, /usr/bin/kshisen, /usr/bin/klickety, /usr/bin/lskat, /usr/bin/atlantik, /usr/bin/ksame, /usr/bin/kgoldrunner, /usr/bin/lskatproc, /usr/bin/gataxx, /usr/bin/katomic, /usr/bin/Maelstrom, /usr/bin/ksmiletris, /usr/bin/gnect, /usr/bin/gnotravex, /usr/bin/gnomine, /usr/bin/ksirtet, /usr/bin/kbattleship, /usr/bin/ktuberling, /usr/bin/klines, /usr/bin/kenolaba, /usr/bin/kmahjongg, /usr/bin/ksnake, /usr/bin/kbackgammon, /usr/games/.*, /usr/bin/civserver.*, /usr/bin/civclient.*, /usr/bin/kwin4, /usr/bin/ktron, /usr/bin/gnibbles, /usr/bin/mahjongg, /usr/bin/kblackbox, /usr/bin/kjumpingcube, /usr/bin/gnotski, /usr/bin/same-gnome, /usr/bin/kasteroids, /usr/bin/kolf, /usr/bin/konquest, /usr/bin/kreversi, /usr/bin/ksokoban, /usr/lib/games(/.*)?, /usr/bin/glines, /usr/bin/gnobots2, /usr/bin/kpoker, /usr/bin/kfouleggs, /usr/bin/kspaceduel, /usr/bin/kpat, /usr/bin/kbounce, /usr/bin/iagno, /usr/bin/gtali, /usr/bin/kwin4proc, /usr/bin/kmines, /usr/bin/gnome-stones
 
 .EX
 .PP
-.B games_srv_var_run_t 
+.B games_srv_var_run_t
 .EE
 
 - Set files with the games_srv_var_run_t type, if you want to store the games srv files under the /run directory.
@@ -57,7 +73,7 @@
 
 .EX
 .PP
-.B games_tmp_t 
+.B games_tmp_t
 .EE
 
 - Set files with the games_tmp_t type, if you want to store games temporary files in the /tmp directories.
@@ -65,7 +81,7 @@
 
 .EX
 .PP
-.B games_tmpfs_t 
+.B games_tmpfs_t
 .EE
 
 - Set files with the games_tmpfs_t type, if you want to store games files on a tmpfs file system.
@@ -73,28 +89,88 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux games policy is very flexible allowing users to setup their games processes in as secure a method as possible.
-.PP 
-The following process types are defined for games:
+.SH "MANAGED FILES"
 
-.EX
-.B games_t, games_srv_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type games_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B games_data_t
+
+	/var/games(/.*)?
+.br
+	/var/lib/games(/.*)?
+.br
+
+.br
+.B games_tmp_t
+
+
+.br
+.B games_tmpfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -107,11 +183,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), games(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), games(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/gconfdefaultsm_selinux.8 serefpolicy-3.7.19/man/man8/gconfdefaultsm_selinux.8
--- nsaserefpolicy/man/man8/gconfdefaultsm_selinux.8	2013-03-15 11:41:10.124153462 +0100
+++ serefpolicy-3.7.19/man/man8/gconfdefaultsm_selinux.8	2013-03-15 11:39:54.172151729 +0100
@@ -1,25 +1,55 @@
-.TH  "gconfdefaultsm_selinux"  "8"  "gconfdefaultsm" "dwalsh@redhat.com" "gconfdefaultsm SELinux Policy documentation"
+.TH  "gconfdefaultsm_selinux"  "8"  "13-01-04" "gconfdefaultsm" "SELinux Policy documentation for gconfdefaultsm"
 .SH "NAME"
 gconfdefaultsm_selinux \- Security Enhanced Linux Policy for the gconfdefaultsm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the gconfdefaultsm processes via flexible mandatory access control.
 
+The gconfdefaultsm processes execute with the gconfdefaultsm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep gconfdefaultsm_t
+
+
+.SH "ENTRYPOINTS"
+
+The gconfdefaultsm_t SELinux type can be entered via the "gconfdefaultsm_exec_t" file type.  The default entrypoint paths for the gconfdefaultsm_t domain are the following:"
+
+/usr/libexec/gconf-defaults-mechanism
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gconfdefaultsm policy is very flexible allowing users to setup their gconfdefaultsm processes in as secure a method as possible.
+.PP
+The following process types are defined for gconfdefaultsm:
+
+.EX
+.B gconfdefaultsm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gconfdefaultsm_t
+
+can be used to make the process type gconfdefaultsm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux gconfdefaultsm policy is very flexible allowing users to setup their gconfdefaultsm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for gconfdefaultsm:
 
 
 .EX
 .PP
-.B gconfdefaultsm_exec_t 
+.B gconfdefaultsm_exec_t
 .EE
 
 - Set files with the gconfdefaultsm_exec_t type, if you want to transition an executable to the gconfdefaultsm_t domain.
@@ -27,28 +57,78 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux gconfdefaultsm policy is very flexible allowing users to setup their gconfdefaultsm processes in as secure a method as possible.
-.PP 
-The following process types are defined for gconfdefaultsm:
+.SH "MANAGED FILES"
 
-.EX
-.B gconfdefaultsm_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type gconfdefaultsm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B gconf_etc_t
+
+	/etc/gconf(/.*)?
+.br
+
+.br
+.B gconf_home_t
+
+	/root/\.local.*
+.br
+	/root/\.gconf(d)?(/.*)?
+.br
+	/home/[^/]*/\.local.*
+.br
+	/home/[^/]*/\.gconf(d)?(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +141,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), gconfdefaultsm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), gconfdefaultsm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, gconfd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/gconfd_selinux.8 serefpolicy-3.7.19/man/man8/gconfd_selinux.8
--- nsaserefpolicy/man/man8/gconfd_selinux.8	2013-03-15 11:41:11.783153499 +0100
+++ serefpolicy-3.7.19/man/man8/gconfd_selinux.8	2013-03-15 11:39:56.738151787 +0100
@@ -1,53 +1,55 @@
-.TH  "gconfd_selinux"  "8"  "gconfd" "dwalsh@redhat.com" "gconfd SELinux Policy documentation"
+.TH  "gconfd_selinux"  "8"  "13-01-04" "gconfd" "SELinux Policy documentation for gconfd"
 .SH "NAME"
 gconfd_selinux \- Security Enhanced Linux Policy for the gconfd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the gconfd processes via flexible mandatory access control.
 
+The gconfd processes execute with the gconfd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-.PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
-.PP
-Policy governs the access confined processes have to these files. 
-SELinux gconfd policy is very flexible allowing users to setup their gconfd processes in as secure a method as possible.
-.PP 
-The following file types are defined for gconfd:
+.B ps -eZ | grep gconfd_t
 
 
-.EX
-.PP
-.B gconf_etc_t 
-.EE
+.SH "ENTRYPOINTS"
 
-- Set files with the gconf_etc_t type, if you want to store gconf files in the /etc directories.
+The gconfd_t SELinux type can be entered via the "gconfd_exec_t" file type.  The default entrypoint paths for the gconfd_t domain are the following:"
 
 
-.EX
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-.B gconf_home_t 
-.EE
-
-- Set files with the gconf_home_t type, if you want to store gconf files in the users home directory.
-
-.br
-.TP 5
-Paths: 
-/root/\.gconf(d)?(/.*)?, /root/\.local.*
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gconfd policy is very flexible allowing users to setup their gconfd processes in as secure a method as possible.
+.PP
+The following process types are defined for gconfd:
 
 .EX
-.PP
-.B gconf_tmp_t 
+.B gconfdefaultsm_t, gconfd_t
 .EE
+.PP
+Note:
+.B semanage permissive -a gconfd_t
 
-- Set files with the gconf_tmp_t type, if you want to store gconf temporary files in the /tmp directories.
+can be used to make the process type gconfd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux gconfd policy is very flexible allowing users to setup their gconfd processes in as secure a method as possible.
+.PP
+The following file types are defined for gconfd:
 
 
 .EX
 .PP
-.B gconfd_exec_t 
+.B gconfd_exec_t
 .EE
 
 - Set files with the gconfd_exec_t type, if you want to transition an executable to the gconfd_t domain.
@@ -55,7 +57,7 @@
 
 .EX
 .PP
-.B gconfdefaultsm_exec_t 
+.B gconfdefaultsm_exec_t
 .EE
 
 - Set files with the gconfdefaultsm_exec_t type, if you want to transition an executable to the gconfdefaultsm_t domain.
@@ -63,28 +65,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux gconfd policy is very flexible allowing users to setup their gconfd processes in as secure a method as possible.
-.PP 
-The following process types are defined for gconfd:
+.SH "MANAGED FILES"
 
-.EX
-.B gconfdefaultsm_t, gconfd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type gconfd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B gconf_home_t
+
+	/root/\.local.*
+.br
+	/root/\.gconf(d)?(/.*)?
+.br
+	/home/[^/]*/\.local.*
+.br
+	/home/[^/]*/\.gconf(d)?(/.*)?
+.br
+
+.br
+.B gconf_tmp_t
+
+	/tmp/gconfd-.*/.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -97,11 +145,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), gconfd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), gconfd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, gconfdefaultsm_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/getty_selinux.8 serefpolicy-3.7.19/man/man8/getty_selinux.8
--- nsaserefpolicy/man/man8/getty_selinux.8	2013-03-15 11:41:10.330153466 +0100
+++ serefpolicy-3.7.19/man/man8/getty_selinux.8	2013-03-15 11:39:54.476151735 +0100
@@ -1,31 +1,55 @@
-.TH  "getty_selinux"  "8"  "getty" "dwalsh@redhat.com" "getty SELinux Policy documentation"
+.TH  "getty_selinux"  "8"  "13-01-04" "getty" "SELinux Policy documentation for getty"
 .SH "NAME"
 getty_selinux \- Security Enhanced Linux Policy for the getty processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the getty processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B getty
-(Policy for getty)
-processes via flexible mandatory access
-control.  
+The getty processes execute with the getty_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep getty_t
+
+
+.SH "ENTRYPOINTS"
+
+The getty_t SELinux type can be entered via the "getty_exec_t" file type.  The default entrypoint paths for the getty_t domain are the following:"
+
+/sbin/.*getty
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux getty policy is very flexible allowing users to setup their getty processes in as secure a method as possible.
+.PP
+The following process types are defined for getty:
+
+.EX
+.B getty_t
+.EE
+.PP
+Note:
+.B semanage permissive -a getty_t
+
+can be used to make the process type getty_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux getty policy is very flexible allowing users to setup their getty processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for getty:
 
 
 .EX
 .PP
-.B getty_etc_t 
+.B getty_etc_t
 .EE
 
 - Set files with the getty_etc_t type, if you want to store getty files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B getty_exec_t 
+.B getty_exec_t
 .EE
 
 - Set files with the getty_exec_t type, if you want to transition an executable to the getty_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B getty_lock_t 
+.B getty_lock_t
 .EE
 
 - Set files with the getty_lock_t type, if you want to treat the files as getty lock data, stored under the /var/lock directory
@@ -49,19 +73,15 @@
 
 .EX
 .PP
-.B getty_log_t 
+.B getty_log_t
 .EE
 
 - Set files with the getty_log_t type, if you want to treat the data as getty log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/mgetty\.log.*, /var/log/vgetty\.log\..*
 
 .EX
 .PP
-.B getty_tmp_t 
+.B getty_tmp_t
 .EE
 
 - Set files with the getty_tmp_t type, if you want to store getty temporary files in the /tmp directories.
@@ -69,40 +89,118 @@
 
 .EX
 .PP
-.B getty_var_run_t 
+.B getty_var_run_t
 .EE
 
 - Set files with the getty_var_run_t type, if you want to store the getty files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/spool/voice(/.*)?, /var/spool/fax(/.*)?, /var/run/mgetty\.pid.*
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux getty policy is very flexible allowing users to setup their getty processes in as secure a method as possible.
-.PP 
-The following process types are defined for getty:
+.SH "MANAGED FILES"
 
-.EX
-.B getty_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type getty_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B getty_lock_t
+
+
+.br
+.B getty_log_t
+
+	/var/log/mgetty\.log.*
+.br
+	/var/log/vgetty\.log\..*
+.br
+
+.br
+.B getty_tmp_t
+
+
+.br
+.B getty_var_run_t
+
+	/var/spool/fax(/.*)?
+.br
+	/var/spool/voice(/.*)?
+.br
+	/var/run/mgetty\.pid.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_run_t
+
+	/var/run/.*
+.br
+	/var/run
+.br
+	/var/spool/postfix/pid
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +213,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), getty(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), getty(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/gfs_controld_selinux.8 serefpolicy-3.7.19/man/man8/gfs_controld_selinux.8
--- nsaserefpolicy/man/man8/gfs_controld_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/gfs_controld_selinux.8	2013-03-15 11:40:06.115152001 +0100
@@ -0,0 +1,191 @@
+.TH  "gfs_controld_selinux"  "8"  "13-01-04" "gfs_controld" "SELinux Policy documentation for gfs_controld"
+.SH "NAME"
+gfs_controld_selinux \- Security Enhanced Linux Policy for the gfs_controld processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the gfs_controld processes via flexible mandatory access control.
+
+The gfs_controld processes execute with the gfs_controld_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep gfs_controld_t
+
+
+.SH "ENTRYPOINTS"
+
+The gfs_controld_t SELinux type can be entered via the "gfs_controld_exec_t" file type.  The default entrypoint paths for the gfs_controld_t domain are the following:"
+
+/usr/sbin/gfs_controld
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gfs_controld policy is very flexible allowing users to setup their gfs_controld processes in as secure a method as possible.
+.PP
+The following process types are defined for gfs_controld:
+
+.EX
+.B gfs_controld_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gfs_controld_t
+
+can be used to make the process type gfs_controld_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux gfs_controld policy is very flexible allowing users to setup their gfs_controld processes in as secure a method as possible.
+.PP
+The following file types are defined for gfs_controld:
+
+
+.EX
+.PP
+.B gfs_controld_exec_t
+.EE
+
+- Set files with the gfs_controld_exec_t type, if you want to transition an executable to the gfs_controld_t domain.
+
+
+.EX
+.PP
+.B gfs_controld_tmpfs_t
+.EE
+
+- Set files with the gfs_controld_tmpfs_t type, if you want to store gfs controld files on a tmpfs file system.
+
+
+.EX
+.PP
+.B gfs_controld_var_log_t
+.EE
+
+- Set files with the gfs_controld_var_log_t type, if you want to treat the data as gfs controld var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B gfs_controld_var_run_t
+.EE
+
+- Set files with the gfs_controld_var_run_t type, if you want to store the gfs controld files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type gfs_controld_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cluster_var_lib_t
+
+	/var/lib/cluster(/.*)?
+.br
+
+.br
+.B gfs_controld_tmpfs_t
+
+
+.br
+.B gfs_controld_var_log_t
+
+	/var/log/cluster/gfs_controld\.log.*
+.br
+
+.br
+.B gfs_controld_var_run_t
+
+	/var/run/gfs_controld\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), gfs_controld(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/gitosis_selinux.8 serefpolicy-3.7.19/man/man8/gitosis_selinux.8
--- nsaserefpolicy/man/man8/gitosis_selinux.8	2013-03-15 11:41:10.171153463 +0100
+++ serefpolicy-3.7.19/man/man8/gitosis_selinux.8	2013-03-15 11:39:54.276151731 +0100
@@ -1,16 +1,40 @@
-.TH  "gitosis_selinux"  "8"  "gitosis" "dwalsh@redhat.com" "gitosis SELinux Policy documentation"
+.TH  "gitosis_selinux"  "8"  "13-01-04" "gitosis" "SELinux Policy documentation for gitosis"
 .SH "NAME"
 gitosis_selinux \- Security Enhanced Linux Policy for the gitosis processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the gitosis processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B gitosis
-(Tools for managing and hosting git repositories)
-processes via flexible mandatory access
-control.  
+The gitosis processes execute with the gitosis_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep gitosis_t
+
+
+.SH "ENTRYPOINTS"
+
+The gitosis_t SELinux type can be entered via the "gitosis_exec_t" file type.  The default entrypoint paths for the gitosis_t domain are the following:"
+
+/usr/bin/gitosis-serve, /usr/bin/gl-auth-command
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gitosis policy is very flexible allowing users to setup their gitosis processes in as secure a method as possible.
+.PP
+The following process types are defined for gitosis:
+
+.EX
+.B gitosis_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gitosis_t
+
+can be used to make the process type gitosis_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  gitosis policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gitosis with the tightest access possible.
@@ -23,65 +47,100 @@
 .B setsebool -P git_cgit_read_gitosis_content 1
 .EE
 
+.PP
+If you want to allow cgit to access gitosis files, you must turn on the git_cgit_read_gitosis_content boolean.
+
+.EX
+.B setsebool -P git_cgit_read_gitosis_content 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux gitosis policy is very flexible allowing users to setup their gitosis processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for gitosis:
 
 
 .EX
 .PP
-.B gitosis_exec_t 
+.B gitosis_exec_t
 .EE
 
 - Set files with the gitosis_exec_t type, if you want to transition an executable to the gitosis_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/gitosis-serve, /usr/bin/gl-auth-command
 
 .EX
 .PP
-.B gitosis_var_lib_t 
+.B gitosis_var_lib_t
 .EE
 
 - Set files with the gitosis_var_lib_t type, if you want to store the gitosis files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/gitolite(/.*)?, /var/lib/gitosis(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux gitosis policy is very flexible allowing users to setup their gitosis processes in as secure a method as possible.
-.PP 
-The following process types are defined for gitosis:
+.SH "MANAGED FILES"
 
-.EX
-.B gitosis_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type gitosis_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B gitosis_var_lib_t
+
+	/var/lib/gitosis(/.*)?
+.br
+	/var/lib/gitolite(3)?(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -97,12 +156,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), gitosis(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), gitosis(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/git_shell_selinux.8 serefpolicy-3.7.19/man/man8/git_shell_selinux.8
--- nsaserefpolicy/man/man8/git_shell_selinux.8	2013-03-15 11:41:12.158153508 +0100
+++ serefpolicy-3.7.19/man/man8/git_shell_selinux.8	2013-03-15 11:40:04.323151960 +0100
@@ -1,6 +1,6 @@
 .TH  "git_shell_selinux"  "8"  "git_shell" "mgrepl@redhat.com" "git_shell SELinux Policy documentation"
 .SH "NAME"
-git_shell_u \- \fBgit_shell user role\fP - Security Enhanced Linux Policy 
+git_shell_u \- \fBgit_shell user role\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
@@ -10,9 +10,9 @@
 
 The SELinux user will usually login to a system with a context that looks like:
 
-.B git_shell_u:git_shell_r:git_shell_u:s0-s0:c0.c1023
+.B git_shell_u:git_shell_r:git_shell_t:s0-s0:c0.c1023
 
-Linux users are automatically assigned an SELinux users at login.  
+Linux users are automatically assigned an SELinux users at login.
 Login programs use the SELinux User to assign initial context to the user's shell.
 
 SELinux policy uses the context to control the user's access.
@@ -36,111 +36,15 @@
 
 .SH SUDO
 
-The SELinux type git_shell_t is not allowed to execute sudo. 
-
 .SH X WINDOWS LOGIN
 
 The SELinux user git_shell_u is not able to X Windows login.
 
-.SH TERMINAL LOGIN
-
-The SELinux user git_shell_u is not able to terminal login.
-
 .SH NETWORK
 
-.TP
-The SELinux user git_shell_u is able to connect to the following tcp ports.
-
-.B dns_port_t: 53
-
-.B ocsp_port_t: 9080
-
-.B kerberos_port_t: 88,750,4444
-
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  git_shell_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run git_shell_t with the tightest access possible.
-
-
-.PP
-If you want to allow users to connect to the local mysql server, you must turn on the allow_user_mysql_connect boolean.
-
-.EX
-.B setsebool -P allow_user_mysql_connect 1
-.EE
-
-.PP
-If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
-
-.EX
-.B setsebool -P user_ping 1
-.EE
-
-.PP
-If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
-
-.EX
-.B setsebool -P user_ttyfile_stat 1
-.EE
-
-.PP
-If you want to allow user music sharing, you must turn on the user_share_music boolean.
-
-.EX
-.B setsebool -P user_share_music 1
-.EE
-
-.PP
-If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
-
-.EX
-.B setsebool -P user_direct_dri 1
-.EE
-
-.PP
-If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
-
-.EX
-.B setsebool -P user_rw_noexattrfile 1
-.EE
-
-.PP
-If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
-
-.EX
-.B setsebool -P user_tcp_server 1
-.EE
-
-.PP
-If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
-
-.EX
-.B setsebool -P user_direct_mouse 1
-.EE
-
-.PP
-If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
-
-.EX
-.B setsebool -P user_setrlimit 1
-.EE
-
-.PP
-If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
-
-.EX
-.B setsebool -P allow_user_postgresql_connect 1
-.EE
-
-.PP
-If you want to allow users to read system messages, you must turn on the user_dmesg boolean.
-
-.EX
-.B setsebool -P user_dmesg 1
-.EE
-
 .SH HOME_EXEC
 
-The SELinux user git_shell_u is able execute home content files.
+The SELinux user git_shell_u is not able execute home content files.
 
 .SH TRANSITIONS
 
@@ -154,7 +58,7 @@
 
 Execute the following to see the types that the SELinux user git_shell_t can execute without transitioning:
 
-.B sesearch -A -s git_shell_t -c file -p execute_no_trans
+.B search -A -s git_shell_t -c file -p execute_no_trans
 
 .TP
 
@@ -162,22 +66,82 @@
 
 Execute the following to see the types that the SELinux user git_shell_t can execute and transition:
 
-.B $ sesearch -A -s git_shell_t -c process -p transition
+.B $ search -A -s git_shell_t -c process -p transition
 
 
-.SH "COMMANDS"
+.SH "MANAGED FILES"
+
+The SELinux process type git_shell_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
+.br
+.B git_system_content_t
+
+	/srv/git(/.*)?
+.br
+	/var/lib/git(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
 
-.B system-config-selinux 
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), git_shell(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, gitosis_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/glance_api_selinux.8 serefpolicy-3.7.19/man/man8/glance_api_selinux.8
--- nsaserefpolicy/man/man8/glance_api_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/glance_api_selinux.8	2013-03-15 11:40:05.367151984 +0100
@@ -0,0 +1,104 @@
+.TH  "glance_api_selinux"  "8"  "13-01-04" "glance_api" "SELinux Policy documentation for glance_api"
+.SH "NAME"
+glance_api_selinux \- Security Enhanced Linux Policy for the glance_api processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the glance_api processes via flexible mandatory access control.
+
+The glance_api processes execute with the glance_api_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep glance_api_t
+
+
+.SH "ENTRYPOINTS"
+
+The glance_api_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,glance_api_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the glance_api_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/glance-api, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux glance_api policy is very flexible allowing users to setup their glance_api processes in as secure a method as possible.
+.PP
+The following process types are defined for glance_api:
+
+.EX
+.B glance_api_t
+.EE
+.PP
+Note:
+.B semanage permissive -a glance_api_t
+
+can be used to make the process type glance_api_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux glance_api policy is very flexible allowing users to setup their glance_api processes in as secure a method as possible.
+.PP
+The following file types are defined for glance_api:
+
+
+.EX
+.PP
+.B glance_api_exec_t
+.EE
+
+- Set files with the glance_api_exec_t type, if you want to transition an executable to the glance_api_t domain.
+
+
+.EX
+.PP
+.B glance_api_initrc_exec_t
+.EE
+
+- Set files with the glance_api_initrc_exec_t type, if you want to transition an executable to the glance_api_initrc_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type glance_api_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), glance_api(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, glance_registry_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/glance_registry_selinux.8 serefpolicy-3.7.19/man/man8/glance_registry_selinux.8
--- nsaserefpolicy/man/man8/glance_registry_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/glance_registry_selinux.8	2013-03-15 11:39:57.833151812 +0100
@@ -0,0 +1,140 @@
+.TH  "glance_registry_selinux"  "8"  "13-01-04" "glance_registry" "SELinux Policy documentation for glance_registry"
+.SH "NAME"
+glance_registry_selinux \- Security Enhanced Linux Policy for the glance_registry processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the glance_registry processes via flexible mandatory access control.
+
+The glance_registry processes execute with the glance_registry_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep glance_registry_t
+
+
+.SH "ENTRYPOINTS"
+
+The glance_registry_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,glance_registry_exec_t" file types.  The default entrypoint paths for the glance_registry_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/glance-registry
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux glance_registry policy is very flexible allowing users to setup their glance_registry processes in as secure a method as possible.
+.PP
+The following process types are defined for glance_registry:
+
+.EX
+.B glance_registry_t
+.EE
+.PP
+Note:
+.B semanage permissive -a glance_registry_t
+
+can be used to make the process type glance_registry_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux glance_registry policy is very flexible allowing users to setup their glance_registry processes in as secure a method as possible.
+.PP
+The following file types are defined for glance_registry:
+
+
+.EX
+.PP
+.B glance_registry_exec_t
+.EE
+
+- Set files with the glance_registry_exec_t type, if you want to transition an executable to the glance_registry_t domain.
+
+
+.EX
+.PP
+.B glance_registry_initrc_exec_t
+.EE
+
+- Set files with the glance_registry_initrc_exec_t type, if you want to transition an executable to the glance_registry_initrc_t domain.
+
+
+.EX
+.PP
+.B glance_registry_tmp_t
+.EE
+
+- Set files with the glance_registry_tmp_t type, if you want to store glance registry temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports.
+.PP
+You can see the types associated with a port by using the following command:
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports.
+SELinux glance_registry policy is very flexible allowing users to setup their glance_registry processes in as secure a method as possible.
+.PP
+The following port types are defined for glance_registry:
+
+.EX
+.TP 5
+.B glance_registry_port_t
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 9191
+.EE
+udp 9191
+.EE
+.SH "MANAGED FILES"
+
+The SELinux process type glance_registry_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), glance_registry(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, glance_api_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/glusterd_selinux.8 serefpolicy-3.7.19/man/man8/glusterd_selinux.8
--- nsaserefpolicy/man/man8/glusterd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/glusterd_selinux.8	2013-03-15 11:39:58.185151820 +0100
@@ -0,0 +1,143 @@
+.TH  "glusterd_selinux"  "8"  "13-01-04" "glusterd" "SELinux Policy documentation for glusterd"
+.SH "NAME"
+glusterd_selinux \- Security Enhanced Linux Policy for the glusterd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the glusterd processes via flexible mandatory access control.
+
+The glusterd processes execute with the glusterd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep glusterd_t
+
+
+.SH "ENTRYPOINTS"
+
+The glusterd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,glusterd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the glusterd_t domain are the following:"
+
+/dev/cpu/mtrr, /opt/glusterfs/[^/]+/sbin/glusterfsd, /usr/sbin/glusterfsd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux glusterd policy is very flexible allowing users to setup their glusterd processes in as secure a method as possible.
+.PP
+The following process types are defined for glusterd:
+
+.EX
+.B glusterd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a glusterd_t
+
+can be used to make the process type glusterd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux glusterd policy is very flexible allowing users to setup their glusterd processes in as secure a method as possible.
+.PP
+The following file types are defined for glusterd:
+
+
+.EX
+.PP
+.B glusterd_etc_t
+.EE
+
+- Set files with the glusterd_etc_t type, if you want to store glusterd files in the /etc directories.
+
+
+.EX
+.PP
+.B glusterd_exec_t
+.EE
+
+- Set files with the glusterd_exec_t type, if you want to transition an executable to the glusterd_t domain.
+
+
+.EX
+.PP
+.B glusterd_initrc_exec_t
+.EE
+
+- Set files with the glusterd_initrc_exec_t type, if you want to transition an executable to the glusterd_initrc_t domain.
+
+
+.EX
+.PP
+.B glusterd_log_t
+.EE
+
+- Set files with the glusterd_log_t type, if you want to treat the data as glusterd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B glusterd_tmp_t
+.EE
+
+- Set files with the glusterd_tmp_t type, if you want to store glusterd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B glusterd_var_lib_t
+.EE
+
+- Set files with the glusterd_var_lib_t type, if you want to store the glusterd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B glusterd_var_run_t
+.EE
+
+- Set files with the glusterd_var_run_t type, if you want to store the glusterd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type glusterd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), glusterd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/gnomeclock_selinux.8 serefpolicy-3.7.19/man/man8/gnomeclock_selinux.8
--- nsaserefpolicy/man/man8/gnomeclock_selinux.8	2013-03-15 11:41:12.125153507 +0100
+++ serefpolicy-3.7.19/man/man8/gnomeclock_selinux.8	2013-03-15 11:40:03.738151947 +0100
@@ -1,31 +1,55 @@
-.TH  "gnomeclock_selinux"  "8"  "gnomeclock" "dwalsh@redhat.com" "gnomeclock SELinux Policy documentation"
+.TH  "gnomeclock_selinux"  "8"  "13-01-04" "gnomeclock" "SELinux Policy documentation for gnomeclock"
 .SH "NAME"
 gnomeclock_selinux \- Security Enhanced Linux Policy for the gnomeclock processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the gnomeclock processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B gnomeclock
-(Gnome clock handler for setting the time)
-processes via flexible mandatory access
-control.  
+The gnomeclock processes execute with the gnomeclock_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep gnomeclock_t
+
+
+.SH "ENTRYPOINTS"
+
+The gnomeclock_t SELinux type can be entered via the "gnomeclock_exec_t" file type.  The default entrypoint paths for the gnomeclock_t domain are the following:"
+
+/usr/libexec/gnome-clock-applet-mechanism
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gnomeclock policy is very flexible allowing users to setup their gnomeclock processes in as secure a method as possible.
+.PP
+The following process types are defined for gnomeclock:
+
+.EX
+.B gnomeclock_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gnomeclock_t
+
+can be used to make the process type gnomeclock_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux gnomeclock policy is very flexible allowing users to setup their gnomeclock processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for gnomeclock:
 
 
 .EX
 .PP
-.B gnomeclock_exec_t 
+.B gnomeclock_exec_t
 .EE
 
 - Set files with the gnomeclock_exec_t type, if you want to transition an executable to the gnomeclock_t domain.
@@ -33,28 +57,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux gnomeclock policy is very flexible allowing users to setup their gnomeclock processes in as secure a method as possible.
-.PP 
-The following process types are defined for gnomeclock:
+.SH "MANAGED FILES"
 
-.EX
-.B gnomeclock_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type gnomeclock_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B locale_t
+
+	/usr/lib/locale(/.*)?
+.br
+	/usr/share/locale(/.*)?
+.br
+	/usr/share/zoneinfo(/.*)?
+.br
+	/usr/share/X11/locale(/.*)?
+.br
+	/etc/timezone
+.br
+	/etc/localtime
+.br
+	/etc/sysconfig/clock
+.br
+	/etc/avahi/etc/localtime
+.br
+	/var/empty/sshd/etc/localtime
+.br
+	/var/spool/postfix/etc/localtime
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +143,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), gnomeclock(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), gnomeclock(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/gnomesystemmm_selinux.8 serefpolicy-3.7.19/man/man8/gnomesystemmm_selinux.8
--- nsaserefpolicy/man/man8/gnomesystemmm_selinux.8	2013-03-15 11:41:11.858153501 +0100
+++ serefpolicy-3.7.19/man/man8/gnomesystemmm_selinux.8	2013-03-15 11:39:58.774151834 +0100
@@ -1,25 +1,55 @@
-.TH  "gnomesystemmm_selinux"  "8"  "gnomesystemmm" "dwalsh@redhat.com" "gnomesystemmm SELinux Policy documentation"
+.TH  "gnomesystemmm_selinux"  "8"  "13-01-04" "gnomesystemmm" "SELinux Policy documentation for gnomesystemmm"
 .SH "NAME"
 gnomesystemmm_selinux \- Security Enhanced Linux Policy for the gnomesystemmm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the gnomesystemmm processes via flexible mandatory access control.
 
+The gnomesystemmm processes execute with the gnomesystemmm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep gnomesystemmm_t
+
+
+.SH "ENTRYPOINTS"
+
+The gnomesystemmm_t SELinux type can be entered via the "gnomesystemmm_exec_t" file type.  The default entrypoint paths for the gnomesystemmm_t domain are the following:"
+
+/usr/libexec/gnome-system-monitor-mechanism
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gnomesystemmm policy is very flexible allowing users to setup their gnomesystemmm processes in as secure a method as possible.
+.PP
+The following process types are defined for gnomesystemmm:
+
+.EX
+.B gnomesystemmm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gnomesystemmm_t
+
+can be used to make the process type gnomesystemmm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux gnomesystemmm policy is very flexible allowing users to setup their gnomesystemmm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for gnomesystemmm:
 
 
 .EX
 .PP
-.B gnomesystemmm_exec_t 
+.B gnomesystemmm_exec_t
 .EE
 
 - Set files with the gnomesystemmm_exec_t type, if you want to transition an executable to the gnomesystemmm_t domain.
@@ -27,28 +57,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux gnomesystemmm policy is very flexible allowing users to setup their gnomesystemmm processes in as secure a method as possible.
-.PP 
-The following process types are defined for gnomesystemmm:
+.SH "MANAGED FILES"
 
-.EX
-.B gnomesystemmm_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type gnomesystemmm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), gnomesystemmm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), gnomesystemmm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/gpg_agent_selinux.8 serefpolicy-3.7.19/man/man8/gpg_agent_selinux.8
--- nsaserefpolicy/man/man8/gpg_agent_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/gpg_agent_selinux.8	2013-03-15 11:40:03.794151948 +0100
@@ -0,0 +1,177 @@
+.TH  "gpg_agent_selinux"  "8"  "13-01-04" "gpg_agent" "SELinux Policy documentation for gpg_agent"
+.SH "NAME"
+gpg_agent_selinux \- Security Enhanced Linux Policy for the gpg_agent processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the gpg_agent processes via flexible mandatory access control.
+
+The gpg_agent processes execute with the gpg_agent_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep gpg_agent_t
+
+
+.SH "ENTRYPOINTS"
+
+The gpg_agent_t SELinux type can be entered via the "gpg_agent_exec_t" file type.  The default entrypoint paths for the gpg_agent_t domain are the following:"
+
+/usr/bin/gpg-agent
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gpg_agent policy is very flexible allowing users to setup their gpg_agent processes in as secure a method as possible.
+.PP
+The following process types are defined for gpg_agent:
+
+.EX
+.B gpg_agent_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gpg_agent_t
+
+can be used to make the process type gpg_agent_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  gpg_agent policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gpg_agent with the tightest access possible.
+
+
+.PP
+If you want to allow usage of the gpg-agent --write-env-file option. This also allows gpg-agent to manage user files, you must turn on the gpg_agent_env_file boolean.
+
+.EX
+.B setsebool -P gpg_agent_env_file 1
+.EE
+
+.PP
+If you want to allow usage of the gpg-agent --write-env-file option. This also allows gpg-agent to manage user files, you must turn on the gpg_agent_env_file boolean.
+
+.EX
+.B setsebool -P gpg_agent_env_file 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux gpg_agent policy is very flexible allowing users to setup their gpg_agent processes in as secure a method as possible.
+.PP
+The following file types are defined for gpg_agent:
+
+
+.EX
+.PP
+.B gpg_agent_exec_t
+.EE
+
+- Set files with the gpg_agent_exec_t type, if you want to transition an executable to the gpg_agent_t domain.
+
+
+.EX
+.PP
+.B gpg_agent_tmp_t
+.EE
+
+- Set files with the gpg_agent_tmp_t type, if you want to store gpg agent temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type gpg_agent_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B gpg_agent_tmp_t
+
+
+.br
+.B gpg_secret_t
+
+	/root/\.gnupg(/.+)?
+.br
+	/home/[^/]*/\.gnupg(/.+)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), gpg_agent(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), gpg_selinux(8), gpg_selinux(8), gpg_helper_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/gpg_helper_selinux.8 serefpolicy-3.7.19/man/man8/gpg_helper_selinux.8
--- nsaserefpolicy/man/man8/gpg_helper_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/gpg_helper_selinux.8	2013-03-15 11:39:55.476151758 +0100
@@ -0,0 +1,132 @@
+.TH  "gpg_helper_selinux"  "8"  "13-01-04" "gpg_helper" "SELinux Policy documentation for gpg_helper"
+.SH "NAME"
+gpg_helper_selinux \- Security Enhanced Linux Policy for the gpg_helper processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the gpg_helper processes via flexible mandatory access control.
+
+The gpg_helper processes execute with the gpg_helper_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep gpg_helper_t
+
+
+.SH "ENTRYPOINTS"
+
+The gpg_helper_t SELinux type can be entered via the "gpg_helper_exec_t" file type.  The default entrypoint paths for the gpg_helper_t domain are the following:"
+
+/usr/lib(64)?/gnupg/gpgkeys.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gpg_helper policy is very flexible allowing users to setup their gpg_helper processes in as secure a method as possible.
+.PP
+The following process types are defined for gpg_helper:
+
+.EX
+.B gpg_helper_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gpg_helper_t
+
+can be used to make the process type gpg_helper_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux gpg_helper policy is very flexible allowing users to setup their gpg_helper processes in as secure a method as possible.
+.PP
+The following file types are defined for gpg_helper:
+
+
+.EX
+.PP
+.B gpg_helper_exec_t
+.EE
+
+- Set files with the gpg_helper_exec_t type, if you want to transition an executable to the gpg_helper_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type gpg_helper_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), gpg_helper(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, gpg_selinux(8), gpg_selinux(8), gpg_agent_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/gpg_selinux.8 serefpolicy-3.7.19/man/man8/gpg_selinux.8
--- nsaserefpolicy/man/man8/gpg_selinux.8	2013-03-15 11:41:11.834153501 +0100
+++ serefpolicy-3.7.19/man/man8/gpg_selinux.8	2013-03-15 11:39:57.695151809 +0100
@@ -1,22 +1,53 @@
-.TH  "gpg_selinux"  "8"  "gpg" "dwalsh@redhat.com" "gpg SELinux Policy documentation"
+.TH  "gpg_selinux"  "8"  "13-01-04" "gpg" "SELinux Policy documentation for gpg"
 .SH "NAME"
 gpg_selinux \- Security Enhanced Linux Policy for the gpg processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the gpg processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B gpg
-(Policy for GNU Privacy Guard and related programs)
-processes via flexible mandatory access
-control.  
+The gpg processes execute with the gpg_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep gpg_t
+
+
+.SH "ENTRYPOINTS"
+
+The gpg_t SELinux type can be entered via the "gpg_exec_t" file type.  The default entrypoint paths for the gpg_t domain are the following:"
+
+/usr/lib(64)?/gnupg/.*, /usr/bin/gpg(2)?, /usr/bin/kgpg
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gpg policy is very flexible allowing users to setup their gpg processes in as secure a method as possible.
+.PP
+The following process types are defined for gpg:
+
+.EX
+.B gpg_t, gpg_pinentry_t, gpg_helper_t, gpg_web_t, gpg_agent_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gpg_t
+
+can be used to make the process type gpg_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  gpg policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gpg with the tightest access possible.
 
 
 .PP
+If you want to allow httpd to run gpg in gpg-web domain, you must turn on the httpd_use_gpg boolean.
+
+.EX
+.B setsebool -P httpd_use_gpg 1
+.EE
+
+.PP
 If you want to allow usage of the gpg-agent --write-env-file option. This also allows gpg-agent to manage user files, you must turn on the gpg_agent_env_file boolean.
 
 .EX
@@ -24,12 +55,26 @@
 .EE
 
 .PP
-If you want to allow httpd to run gpg in gpg-web domai, you must turn on the httpd_use_gpg boolean.
+If you want to allow httpd to run gpg in gpg-web domain, you must turn on the httpd_use_gpg boolean.
 
 .EX
 .B setsebool -P httpd_use_gpg 1
 .EE
 
+.PP
+If you want to allow usage of the gpg-agent --write-env-file option. This also allows gpg-agent to manage user files, you must turn on the gpg_agent_env_file boolean.
+
+.EX
+.B setsebool -P gpg_agent_env_file 1
+.EE
+
+.PP
+If you want to allow gpg web domain to modify public files used for public file transfer services, you must turn on the gpg_web_anon_write boolean.
+
+.EX
+.B setsebool -P gpg_web_anon_write 1
+.EE
+
 .SH SHARING FILES
 If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
 .TP
@@ -41,7 +86,7 @@
 .B restorecon -F -R -v /var/gpg
 .pp
 .TP
-Allow gpg servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_gpg_anon_write boolean to be set.
+Allow gpg servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_gpgd_anon_write boolean to be set.
 .PP
 .B
 semanage fcontext -a -t public_content_rw_t "/var/gpg/incoming(/.*)?"
@@ -57,19 +102,19 @@
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux gpg policy is very flexible allowing users to setup their gpg processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for gpg:
 
 
 .EX
 .PP
-.B gpg_agent_exec_t 
+.B gpg_agent_exec_t
 .EE
 
 - Set files with the gpg_agent_exec_t type, if you want to transition an executable to the gpg_agent_t domain.
@@ -77,7 +122,7 @@
 
 .EX
 .PP
-.B gpg_agent_tmp_t 
+.B gpg_agent_tmp_t
 .EE
 
 - Set files with the gpg_agent_tmp_t type, if you want to store gpg agent temporary files in the /tmp directories.
@@ -85,19 +130,15 @@
 
 .EX
 .PP
-.B gpg_exec_t 
+.B gpg_exec_t
 .EE
 
 - Set files with the gpg_exec_t type, if you want to transition an executable to the gpg_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/gnupg/.*, /usr/bin/gpg(2)?, /usr/bin/kgpg
 
 .EX
 .PP
-.B gpg_helper_exec_t 
+.B gpg_helper_exec_t
 .EE
 
 - Set files with the gpg_helper_exec_t type, if you want to transition an executable to the gpg_helper_t domain.
@@ -105,7 +146,7 @@
 
 .EX
 .PP
-.B gpg_pinentry_tmp_t 
+.B gpg_pinentry_tmp_t
 .EE
 
 - Set files with the gpg_pinentry_tmp_t type, if you want to store gpg pinentry temporary files in the /tmp directories.
@@ -113,7 +154,7 @@
 
 .EX
 .PP
-.B gpg_pinentry_tmpfs_t 
+.B gpg_pinentry_tmpfs_t
 .EE
 
 - Set files with the gpg_pinentry_tmpfs_t type, if you want to store gpg pinentry files on a tmpfs file system.
@@ -121,7 +162,7 @@
 
 .EX
 .PP
-.B gpg_secret_t 
+.B gpg_secret_t
 .EE
 
 - Set files with the gpg_secret_t type, if you want to treat the files as gpg se secret data.
@@ -129,28 +170,106 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux gpg policy is very flexible allowing users to setup their gpg processes in as secure a method as possible.
-.PP 
-The following process types are defined for gpg:
+.SH "MANAGED FILES"
 
-.EX
-.B gpg_t, gpg_pinentry_t, gpg_helper_t, gpg_web_t, gpg_agent_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type gpg_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_mail_t
+
+	/etc/mail(/.*)?
+.br
+
+.br
+.B gpg_agent_tmp_t
+
+
+.br
+.B gpg_secret_t
+
+	/root/\.gnupg(/.+)?
+.br
+	/home/[^/]*/\.gnupg(/.+)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mozilla_home_t
+
+	/home/[^/]*/\.java(/.*)?
+.br
+	/home/[^/]*/\.galeon(/.*)?
+.br
+	/home/[^/]*/\.mozilla(/.*)?
+.br
+	/home/[^/]*/\.phoenix(/.*)?
+.br
+	/home/[^/]*/\.netscape(/.*)?
+.br
+	/home/[^/]*/\.thunderbird(/.*)?
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -166,12 +285,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), gpg(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), gpg(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), gpg_agent_selinux(8), gpg_helper_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/gpm_selinux.8 serefpolicy-3.7.19/man/man8/gpm_selinux.8
--- nsaserefpolicy/man/man8/gpm_selinux.8	2013-03-15 11:41:12.172153508 +0100
+++ serefpolicy-3.7.19/man/man8/gpm_selinux.8	2013-03-15 11:40:05.120151978 +0100
@@ -1,31 +1,55 @@
-.TH  "gpm_selinux"  "8"  "gpm" "dwalsh@redhat.com" "gpm SELinux Policy documentation"
+.TH  "gpm_selinux"  "8"  "13-01-04" "gpm" "SELinux Policy documentation for gpm"
 .SH "NAME"
 gpm_selinux \- Security Enhanced Linux Policy for the gpm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the gpm processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B gpm
-(General Purpose Mouse driver)
-processes via flexible mandatory access
-control.  
+The gpm processes execute with the gpm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep gpm_t
+
+
+.SH "ENTRYPOINTS"
+
+The gpm_t SELinux type can be entered via the "gpm_exec_t" file type.  The default entrypoint paths for the gpm_t domain are the following:"
+
+/usr/sbin/gpm
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gpm policy is very flexible allowing users to setup their gpm processes in as secure a method as possible.
+.PP
+The following process types are defined for gpm:
+
+.EX
+.B gpm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gpm_t
+
+can be used to make the process type gpm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux gpm policy is very flexible allowing users to setup their gpm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for gpm:
 
 
 .EX
 .PP
-.B gpm_conf_t 
+.B gpm_conf_t
 .EE
 
 - Set files with the gpm_conf_t type, if you want to treat the files as gpm configuration data, usually stored under the /etc directory.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B gpm_exec_t 
+.B gpm_exec_t
 .EE
 
 - Set files with the gpm_exec_t type, if you want to transition an executable to the gpm_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B gpm_tmp_t 
+.B gpm_tmp_t
 .EE
 
 - Set files with the gpm_tmp_t type, if you want to store gpm temporary files in the /tmp directories.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B gpm_var_run_t 
+.B gpm_var_run_t
 .EE
 
 - Set files with the gpm_var_run_t type, if you want to store the gpm files under the /run directory.
@@ -57,40 +81,80 @@
 
 .EX
 .PP
-.B gpmctl_t 
+.B gpmctl_t
 .EE
 
 - Set files with the gpmctl_t type, if you want to treat the files as gpmctl data.
 
-.br
-.TP 5
-Paths: 
-/dev/gpmctl, /dev/gpmdata
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux gpm policy is very flexible allowing users to setup their gpm processes in as secure a method as possible.
-.PP 
-The following process types are defined for gpm:
+.SH "MANAGED FILES"
 
-.EX
-.B gpm_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type gpm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B gpm_tmp_t
+
+
+.br
+.B gpm_var_run_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,11 +167,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), gpm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), gpm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/gpsd_selinux.8 serefpolicy-3.7.19/man/man8/gpsd_selinux.8
--- nsaserefpolicy/man/man8/gpsd_selinux.8	2013-03-15 11:41:11.871153501 +0100
+++ serefpolicy-3.7.19/man/man8/gpsd_selinux.8	2013-03-15 11:39:58.947151837 +0100
@@ -1,31 +1,55 @@
-.TH  "gpsd_selinux"  "8"  "gpsd" "dwalsh@redhat.com" "gpsd SELinux Policy documentation"
+.TH  "gpsd_selinux"  "8"  "13-01-04" "gpsd" "SELinux Policy documentation for gpsd"
 .SH "NAME"
 gpsd_selinux \- Security Enhanced Linux Policy for the gpsd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the gpsd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B gpsd
-(gpsd monitor daemon)
-processes via flexible mandatory access
-control.  
+The gpsd processes execute with the gpsd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep gpsd_t
+
+
+.SH "ENTRYPOINTS"
+
+The gpsd_t SELinux type can be entered via the "gpsd_exec_t" file type.  The default entrypoint paths for the gpsd_t domain are the following:"
+
+/usr/sbin/gpsd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
+.PP
+The following process types are defined for gpsd:
+
+.EX
+.B gpsd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gpsd_t
+
+can be used to make the process type gpsd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for gpsd:
 
 
 .EX
 .PP
-.B gpsd_exec_t 
+.B gpsd_exec_t
 .EE
 
 - Set files with the gpsd_exec_t type, if you want to transition an executable to the gpsd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B gpsd_initrc_exec_t 
+.B gpsd_initrc_exec_t
 .EE
 
 - Set files with the gpsd_initrc_exec_t type, if you want to transition an executable to the gpsd_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B gpsd_tmpfs_t 
+.B gpsd_tmpfs_t
 .EE
 
 - Set files with the gpsd_tmpfs_t type, if you want to store gpsd files on a tmpfs file system.
@@ -49,63 +73,115 @@
 
 .EX
 .PP
-.B gpsd_var_run_t 
+.B gpsd_var_run_t
 .EE
 
 - Set files with the gpsd_var_run_t type, if you want to store the gpsd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/gpsd\.sock, /var/run/gpsd\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for gpsd:
 
 .EX
 .TP 5
-.B gpsd_port_t 
+.B gpsd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 2947
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
-.PP 
-The following process types are defined for gpsd:
+.SH "MANAGED FILES"
 
-.EX
-.B gpsd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type gpsd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B chronyd_tmpfs_t
+
+
+.br
+.B gpsd_tmpfs_t
+
+
+.br
+.B gpsd_var_run_t
+
+	/var/run/gpsd\.pid
+.br
+	/var/run/gpsd\.sock
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B ntpd_tmpfs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -121,11 +197,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), gpsd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), gpsd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/greylist_milter_selinux.8 serefpolicy-3.7.19/man/man8/greylist_milter_selinux.8
--- nsaserefpolicy/man/man8/greylist_milter_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/greylist_milter_selinux.8	2013-03-15 11:40:06.217152003 +0100
@@ -0,0 +1,157 @@
+.TH  "greylist_milter_selinux"  "8"  "13-01-04" "greylist_milter" "SELinux Policy documentation for greylist_milter"
+.SH "NAME"
+greylist_milter_selinux \- Security Enhanced Linux Policy for the greylist_milter processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the greylist_milter processes via flexible mandatory access control.
+
+The greylist_milter processes execute with the greylist_milter_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep greylist_milter_t
+
+
+.SH "ENTRYPOINTS"
+
+The greylist_milter_t SELinux type can be entered via the "greylist_milter_exec_t" file type.  The default entrypoint paths for the greylist_milter_t domain are the following:"
+
+/usr/sbin/milter-greylist
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux greylist_milter policy is very flexible allowing users to setup their greylist_milter processes in as secure a method as possible.
+.PP
+The following process types are defined for greylist_milter:
+
+.EX
+.B greylist_milter_t
+.EE
+.PP
+Note:
+.B semanage permissive -a greylist_milter_t
+
+can be used to make the process type greylist_milter_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux greylist_milter policy is very flexible allowing users to setup their greylist_milter processes in as secure a method as possible.
+.PP
+The following file types are defined for greylist_milter:
+
+
+.EX
+.PP
+.B greylist_milter_data_t
+.EE
+
+- Set files with the greylist_milter_data_t type, if you want to treat the files as greylist milter content.
+
+
+.EX
+.PP
+.B greylist_milter_exec_t
+.EE
+
+- Set files with the greylist_milter_exec_t type, if you want to transition an executable to the greylist_milter_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type greylist_milter_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B greylist_milter_data_t
+
+	/var/lib/milter-greylist(/.*)?
+.br
+	/var/run/milter-greylist(/.*)?
+.br
+	/var/run/milter-greylist\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), greylist_milter(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/groupadd_selinux.8 serefpolicy-3.7.19/man/man8/groupadd_selinux.8
--- nsaserefpolicy/man/man8/groupadd_selinux.8	2013-03-15 11:41:11.109153484 +0100
+++ serefpolicy-3.7.19/man/man8/groupadd_selinux.8	2013-03-15 11:39:55.357151756 +0100
@@ -1,58 +1,200 @@
-.TH  "groupadd_selinux"  "8"  "groupadd" "dwalsh@redhat.com" "groupadd SELinux Policy documentation"
+.TH  "groupadd_selinux"  "8"  "13-01-04" "groupadd" "SELinux Policy documentation for groupadd"
 .SH "NAME"
 groupadd_selinux \- Security Enhanced Linux Policy for the groupadd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the groupadd processes via flexible mandatory access control.
 
+The groupadd processes execute with the groupadd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep groupadd_t
+
+
+.SH "ENTRYPOINTS"
+
+The groupadd_t SELinux type can be entered via the "groupadd_exec_t" file type.  The default entrypoint paths for the groupadd_t domain are the following:"
+
+/usr/bin/gpasswd, /usr/sbin/gpasswd, /usr/sbin/groupdel, /usr/sbin/groupmod, /usr/sbin/groupadd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux groupadd policy is very flexible allowing users to setup their groupadd processes in as secure a method as possible.
+.PP
+The following process types are defined for groupadd:
+
+.EX
+.B groupadd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a groupadd_t
+
+can be used to make the process type groupadd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux groupadd policy is very flexible allowing users to setup their groupadd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for groupadd:
 
 
 .EX
 .PP
-.B groupadd_exec_t 
+.B groupadd_exec_t
 .EE
 
 - Set files with the groupadd_exec_t type, if you want to transition an executable to the groupadd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/gpasswd, /usr/bin/gpasswd, /usr/sbin/groupdel, /usr/sbin/groupadd, /usr/sbin/groupmod
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux groupadd policy is very flexible allowing users to setup their groupadd processes in as secure a method as possible.
-.PP 
-The following process types are defined for groupadd:
+.SH "MANAGED FILES"
 
-.EX
-.B groupadd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type groupadd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_t
+
+	/etc/.*
+.br
+	/var/db/.*\.db
+.br
+	/usr/etc(/.*)?
+.br
+	/var/ftp/etc(/.*)?
+.br
+	/usr/local/etc(/.*)?
+.br
+	/var/lib/openshift/.limits.d(/.*)?
+.br
+	/var/lib/openshift/.openshift-proxy.d(/.*)?
+.br
+	/var/lib/openshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/lib/stickshift/.limits.d(/.*)?
+.br
+	/var/lib/stickshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/named/chroot/etc(/.*)?
+.br
+	/etc/ipsec\.d/examples(/.*)?
+.br
+	/var/spool/postfix/etc(/.*)?
+.br
+	/etc
+.br
+	/etc/localtime
+.br
+	/etc/cups/client\.conf
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B security_t
+
+
+.br
+.B shadow_t
+
+	/etc/shadow.*
+.br
+	/etc/gshadow.*
+.br
+	/var/db/shadow.*
+.br
+	/etc/passwd\.adjunct.*
+.br
+	/etc/\.pwd\.lock
+.br
+	/etc/group\.lock
+.br
+	/etc/passwd\.lock
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +207,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), groupadd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), groupadd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/groupd_selinux.8 serefpolicy-3.7.19/man/man8/groupd_selinux.8
--- nsaserefpolicy/man/man8/groupd_selinux.8	2013-03-15 11:41:12.223153509 +0100
+++ serefpolicy-3.7.19/man/man8/groupd_selinux.8	2013-03-15 11:40:06.680152014 +0100
@@ -1,25 +1,55 @@
-.TH  "groupd_selinux"  "8"  "groupd" "dwalsh@redhat.com" "groupd SELinux Policy documentation"
+.TH  "groupd_selinux"  "8"  "13-01-04" "groupd" "SELinux Policy documentation for groupd"
 .SH "NAME"
 groupd_selinux \- Security Enhanced Linux Policy for the groupd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the groupd processes via flexible mandatory access control.
 
+The groupd processes execute with the groupd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep groupd_t
+
+
+.SH "ENTRYPOINTS"
+
+The groupd_t SELinux type can be entered via the "groupd_exec_t" file type.  The default entrypoint paths for the groupd_t domain are the following:"
+
+/usr/sbin/groupd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux groupd policy is very flexible allowing users to setup their groupd processes in as secure a method as possible.
+.PP
+The following process types are defined for groupd:
+
+.EX
+.B groupadd_t, groupd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a groupd_t
+
+can be used to make the process type groupd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux groupd policy is very flexible allowing users to setup their groupd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for groupd:
 
 
 .EX
 .PP
-.B groupd_exec_t 
+.B groupd_exec_t
 .EE
 
 - Set files with the groupd_exec_t type, if you want to transition an executable to the groupd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B groupd_tmpfs_t 
+.B groupd_tmpfs_t
 .EE
 
 - Set files with the groupd_tmpfs_t type, if you want to store groupd files on a tmpfs file system.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B groupd_var_log_t 
+.B groupd_var_log_t
 .EE
 
 - Set files with the groupd_var_log_t type, if you want to treat the data as groupd var log data, usually stored under the /var/log directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B groupd_var_run_t 
+.B groupd_var_run_t
 .EE
 
 - Set files with the groupd_var_run_t type, if you want to store the groupd files under the /run directory.
@@ -51,28 +81,84 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux groupd policy is very flexible allowing users to setup their groupd processes in as secure a method as possible.
-.PP 
-The following process types are defined for groupd:
+.SH "MANAGED FILES"
 
-.EX
-.B groupadd_t, groupd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type groupd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cluster_var_lib_t
+
+	/var/lib/cluster(/.*)?
+.br
+
+.br
+.B groupd_tmpfs_t
+
+
+.br
+.B groupd_var_log_t
+
+
+.br
+.B groupd_var_run_t
+
+	/var/run/groupd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +171,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), groupd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), groupd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, groupadd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/gssd_selinux.8 serefpolicy-3.7.19/man/man8/gssd_selinux.8
--- nsaserefpolicy/man/man8/gssd_selinux.8	2013-03-15 11:41:11.935153503 +0100
+++ serefpolicy-3.7.19/man/man8/gssd_selinux.8	2013-03-15 11:40:00.112151864 +0100
@@ -1,10 +1,40 @@
-.TH  "gssd_selinux"  "8"  "gssd" "dwalsh@redhat.com" "gssd SELinux Policy documentation"
+.TH  "gssd_selinux"  "8"  "13-01-04" "gssd" "SELinux Policy documentation for gssd"
 .SH "NAME"
 gssd_selinux \- Security Enhanced Linux Policy for the gssd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the gssd processes via flexible mandatory access control.
 
+The gssd processes execute with the gssd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep gssd_t
+
+
+.SH "ENTRYPOINTS"
+
+The gssd_t SELinux type can be entered via the "gssd_exec_t" file type.  The default entrypoint paths for the gssd_t domain are the following:"
+
+/usr/sbin/rpc\.gssd, /usr/sbin/rpc\.svcgssd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux gssd policy is very flexible allowing users to setup their gssd processes in as secure a method as possible.
+.PP
+The following process types are defined for gssd:
+
+.EX
+.B gssd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a gssd_t
+
+can be used to make the process type gssd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  gssd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gssd with the tightest access possible.
@@ -17,32 +47,35 @@
 .B setsebool -P allow_gssd_read_tmp 1
 .EE
 
+.PP
+If you want to allow gssd to read temp directory.  For access to kerberos tgt, you must turn on the allow_gssd_read_tmp boolean.
+
+.EX
+.B setsebool -P allow_gssd_read_tmp 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux gssd policy is very flexible allowing users to setup their gssd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for gssd:
 
 
 .EX
 .PP
-.B gssd_exec_t 
+.B gssd_exec_t
 .EE
 
 - Set files with the gssd_exec_t type, if you want to transition an executable to the gssd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/rpc\.gssd, /usr/sbin/rpc\.svcgssd
 
 .EX
 .PP
-.B gssd_keytab_t 
+.B gssd_keytab_t
 .EE
 
 - Set files with the gssd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -50,7 +83,7 @@
 
 .EX
 .PP
-.B gssd_tmp_t 
+.B gssd_tmp_t
 .EE
 
 - Set files with the gssd_tmp_t type, if you want to store gssd temporary files in the /tmp directories.
@@ -58,28 +91,96 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux gssd policy is very flexible allowing users to setup their gssd processes in as secure a method as possible.
-.PP 
-The following process types are defined for gssd:
+.SH "MANAGED FILES"
 
-.EX
-.B gssd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type gssd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B gssd_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B var_lib_nfs_t
+
+	/var/lib/nfs(/.*)?
+.br
+
+.br
+.B xdm_tmp_t
+
+	/tmp/\.X11-unix(/.*)?
+.br
+	/tmp/\.ICE-unix(/.*)?
+.br
+	/tmp/\.X0-lock
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -95,12 +196,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), gssd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), gssd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/guest_selinux.8 serefpolicy-3.7.19/man/man8/guest_selinux.8
--- nsaserefpolicy/man/man8/guest_selinux.8	2013-03-15 11:41:12.217153509 +0100
+++ serefpolicy-3.7.19/man/man8/guest_selinux.8	2013-03-15 11:40:06.472152009 +0100
@@ -1,6 +1,6 @@
 .TH  "guest_selinux"  "8"  "guest" "mgrepl@redhat.com" "guest SELinux Policy documentation"
 .SH "NAME"
-guest_u \- \fBLeast privledge terminal user\fP - Security Enhanced Linux Policy 
+guest_u \- \fBLeast privledge terminal user\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
@@ -10,9 +10,9 @@
 
 The SELinux user will usually login to a system with a context that looks like:
 
-.B guest_u:guest_r:guest_u:s0-s0:c0.c1023
+.B guest_u:guest_r:guest_t:s0-s0:c0.c1023
 
-Linux users are automatically assigned an SELinux users at login.  
+Linux users are automatically assigned an SELinux users at login.
 Login programs use the SELinux User to assign initial context to the user's shell.
 
 SELinux policy uses the context to control the user's access.
@@ -36,8 +36,6 @@
 
 .SH SUDO
 
-The SELinux type guest_t is not allowed to execute sudo. 
-
 .SH X WINDOWS LOGIN
 
 The SELinux user guest_u is not able to X Windows login.
@@ -47,79 +45,69 @@
 .TP
 The SELinux user guest_u is able to connect to the following tcp ports.
 
-.B dns_port_t: 53
-
 .B ldap_port_t: 389,636,3268
 
+.B dns_port_t: 53
+
 .B kerberos_port_t: 88,750
 
 .B ocsp_port_t: 9080
 
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  guest_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run guest_t with the tightest access possible.
-
+.TP
+The SELinux user guest_u is able to connect to the following tcp ports.
 
-.PP
-If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+.B ldap_port_t: 389,636,3268
 
-.EX
-.B setsebool -P allow_user_mysql_connect 1
-.EE
+.B dns_port_t: 53
 
-.PP
-If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+.B kerberos_port_t: 88,750
 
-.EX
-.B setsebool -P user_setrlimit 1
-.EE
+.B ocsp_port_t: 9080
 
-.PP
-If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  guest policy is extremely flexible and has several booleans that allow you to manipulate the policy and run guest with the tightest access possible.
 
-.EX
-.B setsebool -P user_ping 1
-.EE
 
 .PP
-If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+If you want to allow xguest users to mount removable media, you must turn on the xguest_mount_media boolean.
 
 .EX
-.B setsebool -P user_ttyfile_stat 1
+.B setsebool -P xguest_mount_media 1
 .EE
 
 .PP
-If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+If you want to allow xguest to configure Network Manager and connect to apache ports, you must turn on the xguest_connect_network boolean.
 
 .EX
-.B setsebool -P user_direct_dri 1
+.B setsebool -P xguest_connect_network 1
 .EE
 
 .PP
-If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+If you want to allow xguest to use blue tooth devices, you must turn on the xguest_use_bluetooth boolean.
 
 .EX
-.B setsebool -P user_rw_noexattrfile 1
+.B setsebool -P xguest_use_bluetooth 1
 .EE
 
 .PP
-If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+If you want to allow xguest users to mount removable media, you must turn on the xguest_mount_media boolean.
 
 .EX
-.B setsebool -P user_tcp_server 1
+.B setsebool -P xguest_mount_media 1
 .EE
 
 .PP
-If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+If you want to allow xguest to configure Network Manager and connect to apache ports, you must turn on the xguest_connect_network boolean.
 
 .EX
-.B setsebool -P user_direct_mouse 1
+.B setsebool -P xguest_connect_network 1
 .EE
 
 .PP
-If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+If you want to allow xguest to use blue tooth devices, you must turn on the xguest_use_bluetooth boolean.
 
 .EX
-.B setsebool -P allow_user_postgresql_connect 1
+.B setsebool -P xguest_use_bluetooth 1
 .EE
 
 .SH HOME_EXEC
@@ -138,7 +126,7 @@
 
 Execute the following to see the types that the SELinux user guest_t can execute without transitioning:
 
-.B sesearch -A -s guest_t -c file -p execute_no_trans
+.B search -A -s guest_t -c file -p execute_no_trans
 
 .TP
 
@@ -146,22 +134,133 @@
 
 Execute the following to see the types that the SELinux user guest_t can execute and transition:
 
-.B $ sesearch -A -s guest_t -c process -p transition
+.B $ search -A -s guest_t -c process -p transition
 
 
-.SH "COMMANDS"
+.SH "MANAGED FILES"
+
+The SELinux process type guest_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
+.br
+.B httpd_user_content_t
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
+	/home/[^/]*/((www)|(web)|(public_html))(/.+)?
+.br
 
-.B system-config-selinux 
+.br
+.B httpd_user_htaccess_t
+
+
+.br
+.B httpd_user_ra_content_t
+
+
+.br
+.B httpd_user_rw_content_t
+
+
+.br
+.B httpd_user_script_exec_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_type
+
+	all user home files
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), guest(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/hald_acl_selinux.8 serefpolicy-3.7.19/man/man8/hald_acl_selinux.8
--- nsaserefpolicy/man/man8/hald_acl_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/hald_acl_selinux.8	2013-03-15 11:40:03.002151930 +0100
@@ -0,0 +1,154 @@
+.TH  "hald_acl_selinux"  "8"  "13-01-04" "hald_acl" "SELinux Policy documentation for hald_acl"
+.SH "NAME"
+hald_acl_selinux \- Security Enhanced Linux Policy for the hald_acl processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the hald_acl processes via flexible mandatory access control.
+
+The hald_acl processes execute with the hald_acl_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep hald_acl_t
+
+
+.SH "ENTRYPOINTS"
+
+The hald_acl_t SELinux type can be entered via the "hald_acl_exec_t" file type.  The default entrypoint paths for the hald_acl_t domain are the following:"
+
+/usr/libexec/hal-acl-tool
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hald_acl policy is very flexible allowing users to setup their hald_acl processes in as secure a method as possible.
+.PP
+The following process types are defined for hald_acl:
+
+.EX
+.B hald_acl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hald_acl_t
+
+can be used to make the process type hald_acl_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux hald_acl policy is very flexible allowing users to setup their hald_acl processes in as secure a method as possible.
+.PP
+The following file types are defined for hald_acl:
+
+
+.EX
+.PP
+.B hald_acl_exec_t
+.EE
+
+- Set files with the hald_acl_exec_t type, if you want to transition an executable to the hald_acl_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type hald_acl_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B hald_var_lib_t
+
+	/var/lib/hal(/.*)?
+.br
+
+.br
+.B hald_var_run_t
+
+	/var/run/pm(/.*)?
+.br
+	/var/run/vbe.*
+.br
+	/var/run/hald(/.*)?
+.br
+	/var/run/synce.*
+.br
+	/var/run/pm-utils(/.*)?
+.br
+	/var/run/haldaemon\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), hald_acl(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, hald_selinux(8), hald_selinux(8), hald_dccm_selinux(8), hald_keymap_selinux(8), hald_mac_selinux(8), hald_sonypic_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/hald_dccm_selinux.8 serefpolicy-3.7.19/man/man8/hald_dccm_selinux.8
--- nsaserefpolicy/man/man8/hald_dccm_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/hald_dccm_selinux.8	2013-03-15 11:39:56.142151773 +0100
@@ -0,0 +1,162 @@
+.TH  "hald_dccm_selinux"  "8"  "13-01-04" "hald_dccm" "SELinux Policy documentation for hald_dccm"
+.SH "NAME"
+hald_dccm_selinux \- Security Enhanced Linux Policy for the hald_dccm processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the hald_dccm processes via flexible mandatory access control.
+
+The hald_dccm processes execute with the hald_dccm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep hald_dccm_t
+
+
+.SH "ENTRYPOINTS"
+
+The hald_dccm_t SELinux type can be entered via the "hald_dccm_exec_t" file type.  The default entrypoint paths for the hald_dccm_t domain are the following:"
+
+/usr/libexec/hal-dccm
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hald_dccm policy is very flexible allowing users to setup their hald_dccm processes in as secure a method as possible.
+.PP
+The following process types are defined for hald_dccm:
+
+.EX
+.B hald_dccm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hald_dccm_t
+
+can be used to make the process type hald_dccm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux hald_dccm policy is very flexible allowing users to setup their hald_dccm processes in as secure a method as possible.
+.PP
+The following file types are defined for hald_dccm:
+
+
+.EX
+.PP
+.B hald_dccm_exec_t
+.EE
+
+- Set files with the hald_dccm_exec_t type, if you want to transition an executable to the hald_dccm_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type hald_dccm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B hald_var_lib_t
+
+	/var/lib/hal(/.*)?
+.br
+
+.br
+.B hald_var_run_t
+
+	/var/run/pm(/.*)?
+.br
+	/var/run/vbe.*
+.br
+	/var/run/hald(/.*)?
+.br
+	/var/run/synce.*
+.br
+	/var/run/pm-utils(/.*)?
+.br
+	/var/run/haldaemon\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), hald_dccm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, hald_selinux(8), hald_selinux(8), hald_acl_selinux(8), hald_keymap_selinux(8), hald_mac_selinux(8), hald_sonypic_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/hald_keymap_selinux.8 serefpolicy-3.7.19/man/man8/hald_keymap_selinux.8
--- nsaserefpolicy/man/man8/hald_keymap_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/hald_keymap_selinux.8	2013-03-15 11:39:55.413151757 +0100
@@ -0,0 +1,146 @@
+.TH  "hald_keymap_selinux"  "8"  "13-01-04" "hald_keymap" "SELinux Policy documentation for hald_keymap"
+.SH "NAME"
+hald_keymap_selinux \- Security Enhanced Linux Policy for the hald_keymap processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the hald_keymap processes via flexible mandatory access control.
+
+The hald_keymap processes execute with the hald_keymap_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep hald_keymap_t
+
+
+.SH "ENTRYPOINTS"
+
+The hald_keymap_t SELinux type can be entered via the "hald_keymap_exec_t" file type.  The default entrypoint paths for the hald_keymap_t domain are the following:"
+
+/usr/bin/hal-setup-keymap
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hald_keymap policy is very flexible allowing users to setup their hald_keymap processes in as secure a method as possible.
+.PP
+The following process types are defined for hald_keymap:
+
+.EX
+.B hald_keymap_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hald_keymap_t
+
+can be used to make the process type hald_keymap_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux hald_keymap policy is very flexible allowing users to setup their hald_keymap processes in as secure a method as possible.
+.PP
+The following file types are defined for hald_keymap:
+
+
+.EX
+.PP
+.B hald_keymap_exec_t
+.EE
+
+- Set files with the hald_keymap_exec_t type, if you want to transition an executable to the hald_keymap_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type hald_keymap_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B hald_var_lib_t
+
+	/var/lib/hal(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), hald_keymap(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, hald_selinux(8), hald_selinux(8), hald_acl_selinux(8), hald_dccm_selinux(8), hald_mac_selinux(8), hald_sonypic_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/hald_mac_selinux.8 serefpolicy-3.7.19/man/man8/hald_mac_selinux.8
--- nsaserefpolicy/man/man8/hald_mac_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/hald_mac_selinux.8	2013-03-15 11:39:54.110151727 +0100
@@ -0,0 +1,146 @@
+.TH  "hald_mac_selinux"  "8"  "13-01-04" "hald_mac" "SELinux Policy documentation for hald_mac"
+.SH "NAME"
+hald_mac_selinux \- Security Enhanced Linux Policy for the hald_mac processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the hald_mac processes via flexible mandatory access control.
+
+The hald_mac processes execute with the hald_mac_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep hald_mac_t
+
+
+.SH "ENTRYPOINTS"
+
+The hald_mac_t SELinux type can be entered via the "hald_mac_exec_t" file type.  The default entrypoint paths for the hald_mac_t domain are the following:"
+
+/usr/sbin/radeontool, /usr/libexec/hald-addon-macbook-backlight, /usr/libexec/hald-addon-macbookpro-backlight
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hald_mac policy is very flexible allowing users to setup their hald_mac processes in as secure a method as possible.
+.PP
+The following process types are defined for hald_mac:
+
+.EX
+.B hald_mac_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hald_mac_t
+
+can be used to make the process type hald_mac_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux hald_mac policy is very flexible allowing users to setup their hald_mac processes in as secure a method as possible.
+.PP
+The following file types are defined for hald_mac:
+
+
+.EX
+.PP
+.B hald_mac_exec_t
+.EE
+
+- Set files with the hald_mac_exec_t type, if you want to transition an executable to the hald_mac_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type hald_mac_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B hald_var_lib_t
+
+	/var/lib/hal(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), hald_mac(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, hald_selinux(8), hald_selinux(8), hald_acl_selinux(8), hald_dccm_selinux(8), hald_keymap_selinux(8), hald_sonypic_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/hald_selinux.8 serefpolicy-3.7.19/man/man8/hald_selinux.8
--- nsaserefpolicy/man/man8/hald_selinux.8	2013-03-15 11:41:12.223153509 +0100
+++ serefpolicy-3.7.19/man/man8/hald_selinux.8	2013-03-15 11:40:06.594152012 +0100
@@ -1,25 +1,55 @@
-.TH  "hald_selinux"  "8"  "hald" "dwalsh@redhat.com" "hald SELinux Policy documentation"
+.TH  "hald_selinux"  "8"  "13-01-04" "hald" "SELinux Policy documentation for hald"
 .SH "NAME"
 hald_selinux \- Security Enhanced Linux Policy for the hald processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the hald processes via flexible mandatory access control.
 
+The hald processes execute with the hald_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep hald_t
+
+
+.SH "ENTRYPOINTS"
+
+The hald_t SELinux type can be entered via the "hald_exec_t" file type.  The default entrypoint paths for the hald_t domain are the following:"
+
+/usr/sbin/hald, /usr/libexec/hal-hotplug-map, /etc/hal/device\.d/printer_remove\.hal, /etc/hal/capability\.d/printer_update\.hal
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hald policy is very flexible allowing users to setup their hald processes in as secure a method as possible.
+.PP
+The following process types are defined for hald:
+
+.EX
+.B hald_mac_t, hald_dccm_t, hald_sonypic_t, hald_acl_t, hald_t, hald_keymap_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hald_t
+
+can be used to make the process type hald_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux hald policy is very flexible allowing users to setup their hald processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for hald:
 
 
 .EX
 .PP
-.B hald_acl_exec_t 
+.B hald_acl_exec_t
 .EE
 
 - Set files with the hald_acl_exec_t type, if you want to transition an executable to the hald_acl_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B hald_cache_t 
+.B hald_cache_t
 .EE
 
 - Set files with the hald_cache_t type, if you want to store the files under the /var/cache directory.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B hald_dccm_exec_t 
+.B hald_dccm_exec_t
 .EE
 
 - Set files with the hald_dccm_exec_t type, if you want to transition an executable to the hald_dccm_t domain.
@@ -43,19 +73,15 @@
 
 .EX
 .PP
-.B hald_exec_t 
+.B hald_exec_t
 .EE
 
 - Set files with the hald_exec_t type, if you want to transition an executable to the hald_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/hal/device\.d/printer_remove\.hal, /usr/libexec/hal-hotplug-map, /etc/hal/capability\.d/printer_update\.hal, /usr/sbin/hald
 
 .EX
 .PP
-.B hald_keymap_exec_t 
+.B hald_keymap_exec_t
 .EE
 
 - Set files with the hald_keymap_exec_t type, if you want to transition an executable to the hald_keymap_t domain.
@@ -63,31 +89,23 @@
 
 .EX
 .PP
-.B hald_log_t 
+.B hald_log_t
 .EE
 
 - Set files with the hald_log_t type, if you want to treat the data as hald log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/pm(/.*)?, /var/log/pm-.*\.log
 
 .EX
 .PP
-.B hald_mac_exec_t 
+.B hald_mac_exec_t
 .EE
 
 - Set files with the hald_mac_exec_t type, if you want to transition an executable to the hald_mac_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/radeontool, /usr/libexec/hald-addon-macbook-backlight, /usr/libexec/hald-addon-macbookpro-backlight
 
 .EX
 .PP
-.B hald_sonypic_exec_t 
+.B hald_sonypic_exec_t
 .EE
 
 - Set files with the hald_sonypic_exec_t type, if you want to transition an executable to the hald_sonypic_t domain.
@@ -95,7 +113,7 @@
 
 .EX
 .PP
-.B hald_tmp_t 
+.B hald_tmp_t
 .EE
 
 - Set files with the hald_tmp_t type, if you want to store hald temporary files in the /tmp directories.
@@ -103,7 +121,7 @@
 
 .EX
 .PP
-.B hald_var_lib_t 
+.B hald_var_lib_t
 .EE
 
 - Set files with the hald_var_lib_t type, if you want to store the hald files under the /var/lib directory.
@@ -111,40 +129,224 @@
 
 .EX
 .PP
-.B hald_var_run_t 
+.B hald_var_run_t
 .EE
 
 - Set files with the hald_var_run_t type, if you want to store the hald files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/haldaemon\.pid, /var/run/hald(/.*)?, /var/run/synce.*, /var/run/vbe.*, /var/run/pm-utils(/.*)?, /var/run/pm(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux hald policy is very flexible allowing users to setup their hald processes in as secure a method as possible.
-.PP 
-The following process types are defined for hald:
+.SH "MANAGED FILES"
 
-.EX
-.B hald_mac_t, hald_dccm_t, hald_sonypic_t, hald_acl_t, hald_t, hald_keymap_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type hald_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cardmgr_var_run_t
+
+	/var/lib/pcmcia(/.*)?
+.br
+	/var/run/stab
+.br
+	/var/run/cardmgr\.pid
+.br
+
+.br
+.B dosfs_t
+
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B hald_cache_t
+
+	/var/cache/hald(/.*)?
+.br
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B hald_tmp_t
+
+
+.br
+.B hald_var_lib_t
+
+	/var/lib/hal(/.*)?
+.br
+
+.br
+.B hald_var_run_t
+
+	/var/run/pm(/.*)?
+.br
+	/var/run/vbe.*
+.br
+	/var/run/hald(/.*)?
+.br
+	/var/run/synce.*
+.br
+	/var/run/pm-utils(/.*)?
+.br
+	/var/run/haldaemon\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
+
+
+.br
+.B virt_image_type
+
+	all virtual image files
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -157,11 +359,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), hald(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), hald(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, hald_acl_selinux(8), hald_dccm_selinux(8), hald_keymap_selinux(8), hald_mac_selinux(8), hald_sonypic_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/hald_sonypic_selinux.8 serefpolicy-3.7.19/man/man8/hald_sonypic_selinux.8
--- nsaserefpolicy/man/man8/hald_sonypic_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/hald_sonypic_selinux.8	2013-03-15 11:39:56.356151778 +0100
@@ -0,0 +1,146 @@
+.TH  "hald_sonypic_selinux"  "8"  "13-01-04" "hald_sonypic" "SELinux Policy documentation for hald_sonypic"
+.SH "NAME"
+hald_sonypic_selinux \- Security Enhanced Linux Policy for the hald_sonypic processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the hald_sonypic processes via flexible mandatory access control.
+
+The hald_sonypic processes execute with the hald_sonypic_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep hald_sonypic_t
+
+
+.SH "ENTRYPOINTS"
+
+The hald_sonypic_t SELinux type can be entered via the "hald_sonypic_exec_t" file type.  The default entrypoint paths for the hald_sonypic_t domain are the following:"
+
+/usr/libexec/hal-system-sonypic
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hald_sonypic policy is very flexible allowing users to setup their hald_sonypic processes in as secure a method as possible.
+.PP
+The following process types are defined for hald_sonypic:
+
+.EX
+.B hald_sonypic_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hald_sonypic_t
+
+can be used to make the process type hald_sonypic_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux hald_sonypic policy is very flexible allowing users to setup their hald_sonypic processes in as secure a method as possible.
+.PP
+The following file types are defined for hald_sonypic:
+
+
+.EX
+.PP
+.B hald_sonypic_exec_t
+.EE
+
+- Set files with the hald_sonypic_exec_t type, if you want to transition an executable to the hald_sonypic_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type hald_sonypic_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B hald_var_lib_t
+
+	/var/lib/hal(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), hald_sonypic(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, hald_selinux(8), hald_selinux(8), hald_acl_selinux(8), hald_dccm_selinux(8), hald_keymap_selinux(8), hald_mac_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/hddtemp_selinux.8 serefpolicy-3.7.19/man/man8/hddtemp_selinux.8
--- nsaserefpolicy/man/man8/hddtemp_selinux.8	2013-03-15 11:41:12.087153506 +0100
+++ serefpolicy-3.7.19/man/man8/hddtemp_selinux.8	2013-03-15 11:40:02.621151921 +0100
@@ -1,31 +1,55 @@
-.TH  "hddtemp_selinux"  "8"  "hddtemp" "dwalsh@redhat.com" "hddtemp SELinux Policy documentation"
+.TH  "hddtemp_selinux"  "8"  "13-01-04" "hddtemp" "SELinux Policy documentation for hddtemp"
 .SH "NAME"
 hddtemp_selinux \- Security Enhanced Linux Policy for the hddtemp processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the hddtemp processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B hddtemp
-(hddtemp hard disk temperature tool running as a daemon)
-processes via flexible mandatory access
-control.  
+The hddtemp processes execute with the hddtemp_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep hddtemp_t
+
+
+.SH "ENTRYPOINTS"
+
+The hddtemp_t SELinux type can be entered via the "hddtemp_exec_t" file type.  The default entrypoint paths for the hddtemp_t domain are the following:"
+
+/usr/sbin/hddtemp
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
+.PP
+The following process types are defined for hddtemp:
+
+.EX
+.B hddtemp_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hddtemp_t
+
+can be used to make the process type hddtemp_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for hddtemp:
 
 
 .EX
 .PP
-.B hddtemp_exec_t 
+.B hddtemp_exec_t
 .EE
 
 - Set files with the hddtemp_exec_t type, if you want to transition an executable to the hddtemp_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B hddtemp_initrc_exec_t 
+.B hddtemp_initrc_exec_t
 .EE
 
 - Set files with the hddtemp_initrc_exec_t type, if you want to transition an executable to the hddtemp_initrc_t domain.
@@ -41,51 +65,87 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for hddtemp:
 
 .EX
 .TP 5
-.B hddtemp_port_t 
+.B hddtemp_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 7634
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
-.PP 
-The following process types are defined for hddtemp:
+.SH "MANAGED FILES"
 
-.EX
-.B hddtemp_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type hddtemp_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -101,11 +161,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), hddtemp(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), hddtemp(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/hostname_selinux.8 serefpolicy-3.7.19/man/man8/hostname_selinux.8
--- nsaserefpolicy/man/man8/hostname_selinux.8	2013-03-15 11:41:12.072153506 +0100
+++ serefpolicy-3.7.19/man/man8/hostname_selinux.8	2013-03-15 11:40:02.354151915 +0100
@@ -1,31 +1,55 @@
-.TH  "hostname_selinux"  "8"  "hostname" "dwalsh@redhat.com" "hostname SELinux Policy documentation"
+.TH  "hostname_selinux"  "8"  "13-01-04" "hostname" "SELinux Policy documentation for hostname"
 .SH "NAME"
 hostname_selinux \- Security Enhanced Linux Policy for the hostname processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the hostname processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B hostname
-(Policy for changing the system host name)
-processes via flexible mandatory access
-control.  
+The hostname processes execute with the hostname_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep hostname_t
+
+
+.SH "ENTRYPOINTS"
+
+The hostname_t SELinux type can be entered via the "hostname_exec_t" file type.  The default entrypoint paths for the hostname_t domain are the following:"
+
+/bin/hostname
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hostname policy is very flexible allowing users to setup their hostname processes in as secure a method as possible.
+.PP
+The following process types are defined for hostname:
+
+.EX
+.B hostname_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hostname_t
+
+can be used to make the process type hostname_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux hostname policy is very flexible allowing users to setup their hostname processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for hostname:
 
 
 .EX
 .PP
-.B hostname_exec_t 
+.B hostname_exec_t
 .EE
 
 - Set files with the hostname_exec_t type, if you want to transition an executable to the hostname_t domain.
@@ -33,28 +57,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux hostname policy is very flexible allowing users to setup their hostname processes in as secure a method as possible.
-.PP 
-The following process types are defined for hostname:
+.SH "MANAGED FILES"
 
-.EX
-.B hostname_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type hostname_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), hostname(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), hostname(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/hotplug_selinux.8 serefpolicy-3.7.19/man/man8/hotplug_selinux.8
--- nsaserefpolicy/man/man8/hotplug_selinux.8	2013-03-15 11:41:11.788153500 +0100
+++ serefpolicy-3.7.19/man/man8/hotplug_selinux.8	2013-03-15 11:39:57.398151802 +0100
@@ -1,34 +1,55 @@
-.TH  "hotplug_selinux"  "8"  "hotplug" "dwalsh@redhat.com" "hotplug SELinux Policy documentation"
+.TH  "hotplug_selinux"  "8"  "13-01-04" "hotplug" "SELinux Policy documentation for hotplug"
 .SH "NAME"
 hotplug_selinux \- Security Enhanced Linux Policy for the hotplug processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the hotplug processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B hotplug
-(
-Policy for hotplug system, for supporting the
-connection and disconnection of devices at runtime.
-)
-processes via flexible mandatory access
-control.  
+The hotplug processes execute with the hotplug_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep hotplug_t
+
+
+.SH "ENTRYPOINTS"
+
+The hotplug_t SELinux type can be entered via the "hotplug_etc_t,hotplug_exec_t" file types.  The default entrypoint paths for the hotplug_t domain are the following:"
+
+/etc/hotplug(/.*)?, /etc/hotplug\.d/.*, /sbin/hotplug, /sbin/netplugd, /etc/hotplug/firmware\.agent
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hotplug policy is very flexible allowing users to setup their hotplug processes in as secure a method as possible.
+.PP
+The following process types are defined for hotplug:
+
+.EX
+.B hotplug_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hotplug_t
+
+can be used to make the process type hotplug_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux hotplug policy is very flexible allowing users to setup their hotplug processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for hotplug:
 
 
 .EX
 .PP
-.B hotplug_etc_t 
+.B hotplug_etc_t
 .EE
 
 - Set files with the hotplug_etc_t type, if you want to store hotplug files in the /etc directories.
@@ -36,52 +57,178 @@
 
 .EX
 .PP
-.B hotplug_exec_t 
+.B hotplug_exec_t
 .EE
 
 - Set files with the hotplug_exec_t type, if you want to transition an executable to the hotplug_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/hotplug, /etc/hotplug/firmware\.agent, /etc/hotplug\.d/.*, /sbin/netplugd
 
 .EX
 .PP
-.B hotplug_var_run_t 
+.B hotplug_var_run_t
 .EE
 
 - Set files with the hotplug_var_run_t type, if you want to store the hotplug files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/hotplug(/.*)?, /var/run/usb(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux hotplug policy is very flexible allowing users to setup their hotplug processes in as secure a method as possible.
-.PP 
-The following process types are defined for hotplug:
+.SH "MANAGED FILES"
 
-.EX
-.B hotplug_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type hotplug_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dhcp_etc_t
+
+	/etc/dhcpc.*
+.br
+	/etc/dhcp3(/.*)?
+.br
+	/etc/dhcpd(6)?\.conf
+.br
+	/etc/dhcp3?/dhclient.*
+.br
+	/etc/dhclient.*conf
+.br
+	/etc/dhcp/dhcpd(6)?\.conf
+.br
+	/etc/dhclient-script
+.br
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B hotplug_var_run_t
+
+	/var/run/usb(/.*)?
+.br
+	/var/run/hotplug(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -94,11 +241,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), hotplug(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), hotplug(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/howl_selinux.8 serefpolicy-3.7.19/man/man8/howl_selinux.8
--- nsaserefpolicy/man/man8/howl_selinux.8	2013-03-15 11:41:12.106153507 +0100
+++ serefpolicy-3.7.19/man/man8/howl_selinux.8	2013-03-15 11:40:03.455151940 +0100
@@ -1,43 +1,63 @@
-.TH  "howl_selinux"  "8"  "howl" "dwalsh@redhat.com" "howl SELinux Policy documentation"
+.TH  "howl_selinux"  "8"  "13-01-04" "howl" "SELinux Policy documentation for howl"
 .SH "NAME"
 howl_selinux \- Security Enhanced Linux Policy for the howl processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the howl processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B howl
-(Port of Apple Rendezvous multicast DNS)
-processes via flexible mandatory access
-control.  
+The howl processes execute with the howl_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep howl_t
+
+
+.SH "ENTRYPOINTS"
+
+The howl_t SELinux type can be entered via the "howl_exec_t" file type.  The default entrypoint paths for the howl_t domain are the following:"
+
+/usr/bin/nifd, /usr/bin/mDNSResponder
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux howl policy is very flexible allowing users to setup their howl processes in as secure a method as possible.
+.PP
+The following process types are defined for howl:
+
+.EX
+.B howl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a howl_t
+
+can be used to make the process type howl_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux howl policy is very flexible allowing users to setup their howl processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for howl:
 
 
 .EX
 .PP
-.B howl_exec_t 
+.B howl_exec_t
 .EE
 
 - Set files with the howl_exec_t type, if you want to transition an executable to the howl_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/mDNSResponder, /usr/bin/nifd
 
 .EX
 .PP
-.B howl_var_run_t 
+.B howl_var_run_t
 .EE
 
 - Set files with the howl_var_run_t type, if you want to store the howl files under the /run directory.
@@ -45,51 +65,107 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux howl policy is very flexible allowing users to setup their howl processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for howl:
 
 .EX
 .TP 5
-.B howl_port_t 
+.B howl_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5335
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux howl policy is very flexible allowing users to setup their howl processes in as secure a method as possible.
-.PP 
-The following process types are defined for howl:
-
-.EX
-.B howl_t 
+udp 5353
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type howl_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B howl_var_run_t
+
+	/var/run/nifd\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -105,11 +181,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), howl(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), howl(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/hplip_selinux.8 serefpolicy-3.7.19/man/man8/hplip_selinux.8
--- nsaserefpolicy/man/man8/hplip_selinux.8	2013-03-15 11:41:12.102153507 +0100
+++ serefpolicy-3.7.19/man/man8/hplip_selinux.8	2013-03-15 11:40:03.122151933 +0100
@@ -1,25 +1,55 @@
-.TH  "hplip_selinux"  "8"  "hplip" "dwalsh@redhat.com" "hplip SELinux Policy documentation"
+.TH  "hplip_selinux"  "8"  "13-01-04" "hplip" "SELinux Policy documentation for hplip"
 .SH "NAME"
 hplip_selinux \- Security Enhanced Linux Policy for the hplip processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the hplip processes via flexible mandatory access control.
 
+The hplip processes execute with the hplip_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep hplip_t
+
+
+.SH "ENTRYPOINTS"
+
+The hplip_t SELinux type can be entered via the "hplip_exec_t" file type.  The default entrypoint paths for the hplip_t domain are the following:"
+
+/usr/sbin/hp-[^/]+, /usr/share/hplip/.*\.py, /usr/lib/cups/backend/hp.*, /usr/lib64/cups/backend/hp.*, /usr/bin/hpijs, /usr/sbin/hpiod
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
+.PP
+The following process types are defined for hplip:
+
+.EX
+.B hplip_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hplip_t
+
+can be used to make the process type hplip_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for hplip:
 
 
 .EX
 .PP
-.B hplip_etc_t 
+.B hplip_etc_t
 .EE
 
 - Set files with the hplip_etc_t type, if you want to store hplip files in the /etc directories.
@@ -27,19 +57,15 @@
 
 .EX
 .PP
-.B hplip_exec_t 
+.B hplip_exec_t
 .EE
 
 - Set files with the hplip_exec_t type, if you want to transition an executable to the hplip_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib64/cups/backend/hp.*, /usr/bin/hpijs, /usr/share/hplip/.*\.py, /usr/sbin/hp-[^/]+, /usr/lib/cups/backend/hp.*, /usr/sbin/hpiod
 
 .EX
 .PP
-.B hplip_tmp_t 
+.B hplip_tmp_t
 .EE
 
 - Set files with the hplip_tmp_t type, if you want to store hplip temporary files in the /tmp directories.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B hplip_var_lib_t 
+.B hplip_var_lib_t
 .EE
 
 - Set files with the hplip_var_lib_t type, if you want to store the hplip files under the /var/lib directory.
@@ -55,63 +81,131 @@
 
 .EX
 .PP
-.B hplip_var_run_t 
+.B hplip_var_run_t
 .EE
 
 - Set files with the hplip_var_run_t type, if you want to store the hplip files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/hp.*\.pid, /var/run/hp.*\.port
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for hplip:
 
 .EX
 .TP 5
-.B hplip_port_t 
+.B hplip_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 1782,2207,2208,8290,50000,50002,8292,9100,9101,9102,9220,9221,9222,9280,9281,9282,9290,9291
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
-.PP 
-The following process types are defined for hplip:
+.SH "MANAGED FILES"
+
+The SELinux process type hplip_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B cupsd_tmp_t
+
+
+.br
+.B hplip_var_lib_t
+
+	/var/lib/hp(/.*)?
+.br
+
+.br
+.B hplip_var_run_t
+
+	/var/run/hp.*\.pid
+.br
+	/var/run/hp.*\.port
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B print_spool_t
+
+	/var/spool/lpd(/.*)?
+.br
+	/var/spool/cups(/.*)?
+.br
+	/var/spool/cups-pdf(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
 
-.EX
-.B hplip_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -127,11 +221,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), hplip(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), hplip(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/httpd_apcupsd_cgi_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_apcupsd_cgi_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_apcupsd_cgi_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_apcupsd_cgi_script_selinux.8	2013-03-15 11:40:03.510151942 +0100
@@ -0,0 +1,136 @@
+.TH  "httpd_apcupsd_cgi_script_selinux"  "8"  "13-01-04" "httpd_apcupsd_cgi_script" "SELinux Policy documentation for httpd_apcupsd_cgi_script"
+.SH "NAME"
+httpd_apcupsd_cgi_script_selinux \- Security Enhanced Linux Policy for the httpd_apcupsd_cgi_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_apcupsd_cgi_script processes via flexible mandatory access control.
+
+The httpd_apcupsd_cgi_script processes execute with the httpd_apcupsd_cgi_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_apcupsd_cgi_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_apcupsd_cgi_script_t SELinux type can be entered via the "shell_exec_t,httpd_apcupsd_cgi_script_exec_t,httpd_apcupsd_cgi_script_exec_t" file types.  The default entrypoint paths for the httpd_apcupsd_cgi_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /var/www/cgi-bin/apcgui(/.*)?, /var/www/apcupsd/multimon\.cgi, /var/www/apcupsd/upsimage\.cgi, /var/www/apcupsd/upsstats\.cgi, /var/www/apcupsd/upsfstats\.cgi, /var/www/cgi-bin/apcgui(/.*)?, /var/www/apcupsd/multimon\.cgi, /var/www/apcupsd/upsimage\.cgi, /var/www/apcupsd/upsstats\.cgi, /var/www/apcupsd/upsfstats\.cgi
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_apcupsd_cgi_script policy is very flexible allowing users to setup their httpd_apcupsd_cgi_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_apcupsd_cgi_script:
+
+.EX
+.B httpd_apcupsd_cgi_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_apcupsd_cgi_script_t
+
+can be used to make the process type httpd_apcupsd_cgi_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_apcupsd_cgi_script policy is very flexible allowing users to setup their httpd_apcupsd_cgi_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_apcupsd_cgi_script:
+
+
+.EX
+.PP
+.B httpd_apcupsd_cgi_script_exec_t
+.EE
+
+- Set files with the httpd_apcupsd_cgi_script_exec_t type, if you want to transition an executable to the httpd_apcupsd_cgi_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_apcupsd_cgi_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_apcupsd_cgi_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_apcupsd_cgi_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_awstats_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_awstats_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_awstats_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_awstats_script_selinux.8	2013-03-15 11:39:53.978151724 +0100
@@ -0,0 +1,140 @@
+.TH  "httpd_awstats_script_selinux"  "8"  "13-01-04" "httpd_awstats_script" "SELinux Policy documentation for httpd_awstats_script"
+.SH "NAME"
+httpd_awstats_script_selinux \- Security Enhanced Linux Policy for the httpd_awstats_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_awstats_script processes via flexible mandatory access control.
+
+The httpd_awstats_script processes execute with the httpd_awstats_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_awstats_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_awstats_script_t SELinux type can be entered via the "shell_exec_t,httpd_awstats_script_exec_t,httpd_awstats_script_exec_t" file types.  The default entrypoint paths for the httpd_awstats_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/share/awstats/wwwroot/cgi-bin(/.*)?, /usr/share/awstats/wwwroot/cgi-bin(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_awstats_script policy is very flexible allowing users to setup their httpd_awstats_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_awstats_script:
+
+.EX
+.B httpd_awstats_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_awstats_script_t
+
+can be used to make the process type httpd_awstats_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_awstats_script policy is very flexible allowing users to setup their httpd_awstats_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_awstats_script:
+
+
+.EX
+.PP
+.B httpd_awstats_script_exec_t
+.EE
+
+- Set files with the httpd_awstats_script_exec_t type, if you want to transition an executable to the httpd_awstats_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_awstats_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B awstats_tmp_t
+
+
+.br
+.B httpd_awstats_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_awstats_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_bugzilla_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_bugzilla_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_bugzilla_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_bugzilla_script_selinux.8	2013-03-15 11:40:02.158151911 +0100
@@ -0,0 +1,142 @@
+.TH  "httpd_bugzilla_script_selinux"  "8"  "13-01-04" "httpd_bugzilla_script" "SELinux Policy documentation for httpd_bugzilla_script"
+.SH "NAME"
+httpd_bugzilla_script_selinux \- Security Enhanced Linux Policy for the httpd_bugzilla_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_bugzilla_script processes via flexible mandatory access control.
+
+The httpd_bugzilla_script processes execute with the httpd_bugzilla_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_bugzilla_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_bugzilla_script_t SELinux type can be entered via the "httpd_bugzilla_script_exec_t,shell_exec_t,httpd_bugzilla_script_exec_t" file types.  The default entrypoint paths for the httpd_bugzilla_script_t domain are the following:"
+
+/usr/share/bugzilla(/.*)?, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/share/bugzilla(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_bugzilla_script policy is very flexible allowing users to setup their httpd_bugzilla_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_bugzilla_script:
+
+.EX
+.B httpd_bugzilla_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_bugzilla_script_t
+
+can be used to make the process type httpd_bugzilla_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_bugzilla_script policy is very flexible allowing users to setup their httpd_bugzilla_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_bugzilla_script:
+
+
+.EX
+.PP
+.B httpd_bugzilla_script_exec_t
+.EE
+
+- Set files with the httpd_bugzilla_script_exec_t type, if you want to transition an executable to the httpd_bugzilla_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_bugzilla_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_bugzilla_rw_content_t
+
+	/var/lib/bugzilla(/.*)?
+.br
+
+.br
+.B httpd_bugzilla_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_bugzilla_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_cobbler_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_cobbler_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_cobbler_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_cobbler_script_selinux.8	2013-03-15 11:40:06.301152005 +0100
@@ -0,0 +1,136 @@
+.TH  "httpd_cobbler_script_selinux"  "8"  "13-01-04" "httpd_cobbler_script" "SELinux Policy documentation for httpd_cobbler_script"
+.SH "NAME"
+httpd_cobbler_script_selinux \- Security Enhanced Linux Policy for the httpd_cobbler_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_cobbler_script processes via flexible mandatory access control.
+
+The httpd_cobbler_script processes execute with the httpd_cobbler_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_cobbler_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_cobbler_script_t SELinux type can be entered via the "httpd_cobbler_script_exec_t,shell_exec_t,httpd_cobbler_script_exec_t" file types.  The default entrypoint paths for the httpd_cobbler_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_cobbler_script policy is very flexible allowing users to setup their httpd_cobbler_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_cobbler_script:
+
+.EX
+.B httpd_cobbler_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_cobbler_script_t
+
+can be used to make the process type httpd_cobbler_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_cobbler_script policy is very flexible allowing users to setup their httpd_cobbler_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_cobbler_script:
+
+
+.EX
+.PP
+.B httpd_cobbler_script_exec_t
+.EE
+
+- Set files with the httpd_cobbler_script_exec_t type, if you want to transition an executable to the httpd_cobbler_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_cobbler_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_cobbler_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_cobbler_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_cvs_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_cvs_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_cvs_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_cvs_script_selinux.8	2013-03-15 11:40:02.537151919 +0100
@@ -0,0 +1,140 @@
+.TH  "httpd_cvs_script_selinux"  "8"  "13-01-04" "httpd_cvs_script" "SELinux Policy documentation for httpd_cvs_script"
+.SH "NAME"
+httpd_cvs_script_selinux \- Security Enhanced Linux Policy for the httpd_cvs_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_cvs_script processes via flexible mandatory access control.
+
+The httpd_cvs_script processes execute with the httpd_cvs_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_cvs_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_cvs_script_t SELinux type can be entered via the "shell_exec_t,httpd_cvs_script_exec_t,httpd_cvs_script_exec_t" file types.  The default entrypoint paths for the httpd_cvs_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /var/www/cgi-bin/cvsweb\.cgi, /usr/share/cvsweb/cvsweb\.cgi, /var/www/cgi-bin/cvsweb\.cgi, /usr/share/cvsweb/cvsweb\.cgi
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_cvs_script policy is very flexible allowing users to setup their httpd_cvs_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_cvs_script:
+
+.EX
+.B httpd_cvs_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_cvs_script_t
+
+can be used to make the process type httpd_cvs_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_cvs_script policy is very flexible allowing users to setup their httpd_cvs_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_cvs_script:
+
+
+.EX
+.PP
+.B httpd_cvs_script_exec_t
+.EE
+
+- Set files with the httpd_cvs_script_exec_t type, if you want to transition an executable to the httpd_cvs_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_cvs_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cvs_tmp_t
+
+
+.br
+.B httpd_cvs_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_cvs_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_dirsrvadmin_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_dirsrvadmin_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_dirsrvadmin_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_dirsrvadmin_script_selinux.8	2013-03-15 11:39:58.113151818 +0100
@@ -0,0 +1,182 @@
+.TH  "httpd_dirsrvadmin_script_selinux"  "8"  "13-01-04" "httpd_dirsrvadmin_script" "SELinux Policy documentation for httpd_dirsrvadmin_script"
+.SH "NAME"
+httpd_dirsrvadmin_script_selinux \- Security Enhanced Linux Policy for the httpd_dirsrvadmin_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_dirsrvadmin_script processes via flexible mandatory access control.
+
+The httpd_dirsrvadmin_script processes execute with the httpd_dirsrvadmin_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_dirsrvadmin_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_dirsrvadmin_script_t SELinux type can be entered via the "shell_exec_t,httpd_dirsrvadmin_script_exec_t,httpd_dirsrvadmin_script_exec_t" file types.  The default entrypoint paths for the httpd_dirsrvadmin_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/lib(64)?/dirsrv/cgi-bin(/.*)?, /usr/lib(64)?/dirsrv/dsgw-cgi-bin(/.*)?, /usr/lib(64)?/dirsrv/cgi-bin(/.*)?, /usr/lib(64)?/dirsrv/dsgw-cgi-bin(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_dirsrvadmin_script policy is very flexible allowing users to setup their httpd_dirsrvadmin_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_dirsrvadmin_script:
+
+.EX
+.B httpd_dirsrvadmin_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_dirsrvadmin_script_t
+
+can be used to make the process type httpd_dirsrvadmin_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_dirsrvadmin_script policy is very flexible allowing users to setup their httpd_dirsrvadmin_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_dirsrvadmin_script:
+
+
+.EX
+.PP
+.B httpd_dirsrvadmin_script_exec_t
+.EE
+
+- Set files with the httpd_dirsrvadmin_script_exec_t type, if you want to transition an executable to the httpd_dirsrvadmin_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_dirsrvadmin_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dirsrv_config_t
+
+	/etc/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrv_var_lib_t
+
+	/var/lib/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrv_var_lock_t
+
+	/var/lock/dirsrv(/.*)?
+.br
+	/var/lock/subsys/dirsrv
+.br
+
+.br
+.B dirsrv_var_log_t
+
+	/var/log/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrv_var_run_t
+
+	/var/run/slapd.*
+.br
+	/var/run/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrvadmin_config_t
+
+	/etc/dirsrv/dsgw(/.*)?
+.br
+	/etc/dirsrv/admin-serv(/.*)?
+.br
+
+.br
+.B dirsrvadmin_tmp_t
+
+
+.br
+.B httpd_dirsrvadmin_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_dirsrvadmin_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_dspam_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_dspam_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_dspam_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_dspam_script_selinux.8	2013-03-15 11:40:01.417151894 +0100
@@ -0,0 +1,136 @@
+.TH  "httpd_dspam_script_selinux"  "8"  "13-01-04" "httpd_dspam_script" "SELinux Policy documentation for httpd_dspam_script"
+.SH "NAME"
+httpd_dspam_script_selinux \- Security Enhanced Linux Policy for the httpd_dspam_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_dspam_script processes via flexible mandatory access control.
+
+The httpd_dspam_script processes execute with the httpd_dspam_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_dspam_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_dspam_script_t SELinux type can be entered via the "httpd_dspam_script_exec_t,shell_exec_t,httpd_dspam_script_exec_t" file types.  The default entrypoint paths for the httpd_dspam_script_t domain are the following:"
+
+/usr/share/dspam-web/dspam\.cgi, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/share/dspam-web/dspam\.cgi
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_dspam_script policy is very flexible allowing users to setup their httpd_dspam_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_dspam_script:
+
+.EX
+.B httpd_dspam_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_dspam_script_t
+
+can be used to make the process type httpd_dspam_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_dspam_script policy is very flexible allowing users to setup their httpd_dspam_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_dspam_script:
+
+
+.EX
+.PP
+.B httpd_dspam_script_exec_t
+.EE
+
+- Set files with the httpd_dspam_script_exec_t type, if you want to transition an executable to the httpd_dspam_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_dspam_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_dspam_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_dspam_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_git_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_git_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_git_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_git_script_selinux.8	2013-03-15 11:39:55.406151757 +0100
@@ -0,0 +1,138 @@
+.TH  "httpd_git_script_selinux"  "8"  "13-01-04" "httpd_git_script" "SELinux Policy documentation for httpd_git_script"
+.SH "NAME"
+httpd_git_script_selinux \- Security Enhanced Linux Policy for the httpd_git_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_git_script processes via flexible mandatory access control.
+
+The httpd_git_script processes execute with the httpd_git_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_git_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_git_script_t SELinux type can be entered via the "shell_exec_t,httpd_git_script_exec_t,httpd_git_script_exec_t" file types.  The default entrypoint paths for the httpd_git_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /var/www/git/gitweb.cgi, /var/www/cgi-bin/cgit, /var/www/git/gitweb.cgi, /var/www/cgi-bin/cgit
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_git_script policy is very flexible allowing users to setup their httpd_git_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_git_script:
+
+.EX
+.B httpd_git_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_git_script_t
+
+can be used to make the process type httpd_git_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_git_script policy is very flexible allowing users to setup their httpd_git_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_git_script:
+
+
+.EX
+.PP
+.B httpd_git_script_exec_t
+.EE
+
+- Set files with the httpd_git_script_exec_t type, if you want to transition an executable to the httpd_git_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_git_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_git_rw_content_t
+
+	/var/cache/cgit(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_git_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_helper_selinux.8 serefpolicy-3.7.19/man/man8/httpd_helper_selinux.8
--- nsaserefpolicy/man/man8/httpd_helper_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_helper_selinux.8	2013-03-15 11:40:00.953151883 +0100
@@ -0,0 +1,132 @@
+.TH  "httpd_helper_selinux"  "8"  "13-01-04" "httpd_helper" "SELinux Policy documentation for httpd_helper"
+.SH "NAME"
+httpd_helper_selinux \- Security Enhanced Linux Policy for the httpd_helper processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_helper processes via flexible mandatory access control.
+
+The httpd_helper processes execute with the httpd_helper_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_helper_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_helper_t SELinux type can be entered via the "httpd_helper_exec_t" file type.  The default entrypoint paths for the httpd_helper_t domain are the following:"
+
+/usr/bin/htsslpass
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_helper policy is very flexible allowing users to setup their httpd_helper processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_helper:
+
+.EX
+.B httpd_helper_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_helper_t
+
+can be used to make the process type httpd_helper_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_helper policy is very flexible allowing users to setup their httpd_helper processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_helper:
+
+
+.EX
+.PP
+.B httpd_helper_exec_t
+.EE
+
+- Set files with the httpd_helper_exec_t type, if you want to transition an executable to the httpd_helper_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_helper_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_helper(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_mediawiki_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_mediawiki_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_mediawiki_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_mediawiki_script_selinux.8	2013-03-15 11:40:00.892151882 +0100
@@ -0,0 +1,142 @@
+.TH  "httpd_mediawiki_script_selinux"  "8"  "13-01-04" "httpd_mediawiki_script" "SELinux Policy documentation for httpd_mediawiki_script"
+.SH "NAME"
+httpd_mediawiki_script_selinux \- Security Enhanced Linux Policy for the httpd_mediawiki_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_mediawiki_script processes via flexible mandatory access control.
+
+The httpd_mediawiki_script processes execute with the httpd_mediawiki_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_mediawiki_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_mediawiki_script_t SELinux type can be entered via the "shell_exec_t,httpd_mediawiki_script_exec_t,httpd_mediawiki_script_exec_t" file types.  The default entrypoint paths for the httpd_mediawiki_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/lib(64)?/mediawiki/math/texvc, /usr/lib(64)?/mediawiki/math/texvc_tex, /usr/lib(64)?/mediawiki/math/texvc_tes, /usr/lib(64)?/mediawiki/math/texvc, /usr/lib(64)?/mediawiki/math/texvc_tex, /usr/lib(64)?/mediawiki/math/texvc_tes
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_mediawiki_script policy is very flexible allowing users to setup their httpd_mediawiki_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_mediawiki_script:
+
+.EX
+.B httpd_mediawiki_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_mediawiki_script_t
+
+can be used to make the process type httpd_mediawiki_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_mediawiki_script policy is very flexible allowing users to setup their httpd_mediawiki_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_mediawiki_script:
+
+
+.EX
+.PP
+.B httpd_mediawiki_script_exec_t
+.EE
+
+- Set files with the httpd_mediawiki_script_exec_t type, if you want to transition an executable to the httpd_mediawiki_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_mediawiki_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_mediawiki_rw_content_t
+
+	/var/www/wiki(/.*)?
+.br
+
+.br
+.B httpd_mediawiki_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_mediawiki_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_munin_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_munin_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_munin_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_munin_script_selinux.8	2013-03-15 11:39:55.379151756 +0100
@@ -0,0 +1,136 @@
+.TH  "httpd_munin_script_selinux"  "8"  "13-01-04" "httpd_munin_script" "SELinux Policy documentation for httpd_munin_script"
+.SH "NAME"
+httpd_munin_script_selinux \- Security Enhanced Linux Policy for the httpd_munin_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_munin_script processes via flexible mandatory access control.
+
+The httpd_munin_script processes execute with the httpd_munin_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_munin_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_munin_script_t SELinux type can be entered via the "httpd_munin_script_exec_t,shell_exec_t,httpd_munin_script_exec_t" file types.  The default entrypoint paths for the httpd_munin_script_t domain are the following:"
+
+/var/www/html/munin/cgi(/.*)?, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /var/www/html/munin/cgi(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_munin_script policy is very flexible allowing users to setup their httpd_munin_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_munin_script:
+
+.EX
+.B httpd_munin_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_munin_script_t
+
+can be used to make the process type httpd_munin_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_munin_script policy is very flexible allowing users to setup their httpd_munin_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_munin_script:
+
+
+.EX
+.PP
+.B httpd_munin_script_exec_t
+.EE
+
+- Set files with the httpd_munin_script_exec_t type, if you want to transition an executable to the httpd_munin_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_munin_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_munin_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_munin_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_nagios_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_nagios_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_nagios_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_nagios_script_selinux.8	2013-03-15 11:39:56.388151779 +0100
@@ -0,0 +1,136 @@
+.TH  "httpd_nagios_script_selinux"  "8"  "13-01-04" "httpd_nagios_script" "SELinux Policy documentation for httpd_nagios_script"
+.SH "NAME"
+httpd_nagios_script_selinux \- Security Enhanced Linux Policy for the httpd_nagios_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_nagios_script processes via flexible mandatory access control.
+
+The httpd_nagios_script processes execute with the httpd_nagios_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_nagios_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_nagios_script_t SELinux type can be entered via the "httpd_nagios_script_exec_t,shell_exec_t,httpd_nagios_script_exec_t" file types.  The default entrypoint paths for the httpd_nagios_script_t domain are the following:"
+
+/usr/lib(64)?/nagios/cgi(/.*)?, /usr/lib(64)?/cgi-bin/nagios(/.+)?, /usr/lib(64)?/nagios/cgi-bin(/.*)?, /usr/lib(64)?/cgi-bin/netsaint(/.*)?, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/lib(64)?/nagios/cgi(/.*)?, /usr/lib(64)?/cgi-bin/nagios(/.+)?, /usr/lib(64)?/nagios/cgi-bin(/.*)?, /usr/lib(64)?/cgi-bin/netsaint(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_nagios_script policy is very flexible allowing users to setup their httpd_nagios_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_nagios_script:
+
+.EX
+.B httpd_nagios_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_nagios_script_t
+
+can be used to make the process type httpd_nagios_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_nagios_script policy is very flexible allowing users to setup their httpd_nagios_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_nagios_script:
+
+
+.EX
+.PP
+.B httpd_nagios_script_exec_t
+.EE
+
+- Set files with the httpd_nagios_script_exec_t type, if you want to transition an executable to the httpd_nagios_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_nagios_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_nagios_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_nagios_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_nutups_cgi_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_nutups_cgi_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_nutups_cgi_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_nutups_cgi_script_selinux.8	2013-03-15 11:40:06.008151999 +0100
@@ -0,0 +1,136 @@
+.TH  "httpd_nutups_cgi_script_selinux"  "8"  "13-01-04" "httpd_nutups_cgi_script" "SELinux Policy documentation for httpd_nutups_cgi_script"
+.SH "NAME"
+httpd_nutups_cgi_script_selinux \- Security Enhanced Linux Policy for the httpd_nutups_cgi_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_nutups_cgi_script processes via flexible mandatory access control.
+
+The httpd_nutups_cgi_script processes execute with the httpd_nutups_cgi_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_nutups_cgi_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_nutups_cgi_script_t SELinux type can be entered via the "shell_exec_t,httpd_nutups_cgi_script_exec_t,httpd_nutups_cgi_script_exec_t" file types.  The default entrypoint paths for the httpd_nutups_cgi_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /var/www/nut-cgi-bin/upsset\.cgi, /var/www/nut-cgi-bin/upsimage\.cgi, /var/www/nut-cgi-bin/upsstats\.cgi, /var/www/nut-cgi-bin/upsset\.cgi, /var/www/nut-cgi-bin/upsimage\.cgi, /var/www/nut-cgi-bin/upsstats\.cgi
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_nutups_cgi_script policy is very flexible allowing users to setup their httpd_nutups_cgi_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_nutups_cgi_script:
+
+.EX
+.B httpd_nutups_cgi_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_nutups_cgi_script_t
+
+can be used to make the process type httpd_nutups_cgi_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_nutups_cgi_script policy is very flexible allowing users to setup their httpd_nutups_cgi_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_nutups_cgi_script:
+
+
+.EX
+.PP
+.B httpd_nutups_cgi_script_exec_t
+.EE
+
+- Set files with the httpd_nutups_cgi_script_exec_t type, if you want to transition an executable to the httpd_nutups_cgi_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_nutups_cgi_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_nutups_cgi_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_nutups_cgi_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_openshift_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_openshift_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_openshift_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_openshift_script_selinux.8	2013-03-15 11:39:58.996151839 +0100
@@ -0,0 +1,136 @@
+.TH  "httpd_openshift_script_selinux"  "8"  "13-01-04" "httpd_openshift_script" "SELinux Policy documentation for httpd_openshift_script"
+.SH "NAME"
+httpd_openshift_script_selinux \- Security Enhanced Linux Policy for the httpd_openshift_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_openshift_script processes via flexible mandatory access control.
+
+The httpd_openshift_script processes execute with the httpd_openshift_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_openshift_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_openshift_script_t SELinux type can be entered via the "shell_exec_t,httpd_openshift_script_exec_t,httpd_openshift_script_exec_t" file types.  The default entrypoint paths for the httpd_openshift_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/s?bin/(oo|rhc)-restorer-wrapper.sh, /usr/s?bin/(oo|rhc)-restorer-wrapper.sh
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_openshift_script policy is very flexible allowing users to setup their httpd_openshift_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_openshift_script:
+
+.EX
+.B httpd_openshift_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_openshift_script_t
+
+can be used to make the process type httpd_openshift_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_openshift_script policy is very flexible allowing users to setup their httpd_openshift_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_openshift_script:
+
+
+.EX
+.PP
+.B httpd_openshift_script_exec_t
+.EE
+
+- Set files with the httpd_openshift_script_exec_t type, if you want to transition an executable to the httpd_openshift_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_openshift_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_openshift_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_openshift_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_php_selinux.8 serefpolicy-3.7.19/man/man8/httpd_php_selinux.8
--- nsaserefpolicy/man/man8/httpd_php_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_php_selinux.8	2013-03-15 11:40:03.588151943 +0100
@@ -0,0 +1,144 @@
+.TH  "httpd_php_selinux"  "8"  "13-01-04" "httpd_php" "SELinux Policy documentation for httpd_php"
+.SH "NAME"
+httpd_php_selinux \- Security Enhanced Linux Policy for the httpd_php processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_php processes via flexible mandatory access control.
+
+The httpd_php processes execute with the httpd_php_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_php_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_php_t SELinux type can be entered via the "httpd_php_exec_t" file type.  The default entrypoint paths for the httpd_php_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_php policy is very flexible allowing users to setup their httpd_php processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_php:
+
+.EX
+.B httpd_php_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_php_t
+
+can be used to make the process type httpd_php_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_php policy is very flexible allowing users to setup their httpd_php processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_php:
+
+
+.EX
+.PP
+.B httpd_php_exec_t
+.EE
+
+- Set files with the httpd_php_exec_t type, if you want to transition an executable to the httpd_php_t domain.
+
+
+.EX
+.PP
+.B httpd_php_tmp_t
+.EE
+
+- Set files with the httpd_php_tmp_t type, if you want to store httpd php temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_php_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_php_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_php(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_prewikka_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_prewikka_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_prewikka_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_prewikka_script_selinux.8	2013-03-15 11:40:07.564152034 +0100
@@ -0,0 +1,136 @@
+.TH  "httpd_prewikka_script_selinux"  "8"  "13-01-04" "httpd_prewikka_script" "SELinux Policy documentation for httpd_prewikka_script"
+.SH "NAME"
+httpd_prewikka_script_selinux \- Security Enhanced Linux Policy for the httpd_prewikka_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_prewikka_script processes via flexible mandatory access control.
+
+The httpd_prewikka_script processes execute with the httpd_prewikka_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_prewikka_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_prewikka_script_t SELinux type can be entered via the "httpd_prewikka_script_exec_t,shell_exec_t,httpd_prewikka_script_exec_t" file types.  The default entrypoint paths for the httpd_prewikka_script_t domain are the following:"
+
+/usr/share/prewikka/cgi-bin(/.*)?, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/share/prewikka/cgi-bin(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_prewikka_script policy is very flexible allowing users to setup their httpd_prewikka_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_prewikka_script:
+
+.EX
+.B httpd_prewikka_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_prewikka_script_t
+
+can be used to make the process type httpd_prewikka_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_prewikka_script policy is very flexible allowing users to setup their httpd_prewikka_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_prewikka_script:
+
+
+.EX
+.PP
+.B httpd_prewikka_script_exec_t
+.EE
+
+- Set files with the httpd_prewikka_script_exec_t type, if you want to transition an executable to the httpd_prewikka_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_prewikka_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_prewikka_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_prewikka_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_rotatelogs_selinux.8 serefpolicy-3.7.19/man/man8/httpd_rotatelogs_selinux.8
--- nsaserefpolicy/man/man8/httpd_rotatelogs_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_rotatelogs_selinux.8	2013-03-15 11:39:58.532151828 +0100
@@ -0,0 +1,164 @@
+.TH  "httpd_rotatelogs_selinux"  "8"  "13-01-04" "httpd_rotatelogs" "SELinux Policy documentation for httpd_rotatelogs"
+.SH "NAME"
+httpd_rotatelogs_selinux \- Security Enhanced Linux Policy for the httpd_rotatelogs processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_rotatelogs processes via flexible mandatory access control.
+
+The httpd_rotatelogs processes execute with the httpd_rotatelogs_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_rotatelogs_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_rotatelogs_t SELinux type can be entered via the "httpd_rotatelogs_exec_t" file type.  The default entrypoint paths for the httpd_rotatelogs_t domain are the following:"
+
+/usr/sbin/rotatelogs
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_rotatelogs policy is very flexible allowing users to setup their httpd_rotatelogs processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_rotatelogs:
+
+.EX
+.B httpd_rotatelogs_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_rotatelogs_t
+
+can be used to make the process type httpd_rotatelogs_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_rotatelogs policy is very flexible allowing users to setup their httpd_rotatelogs processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_rotatelogs:
+
+
+.EX
+.PP
+.B httpd_rotatelogs_exec_t
+.EE
+
+- Set files with the httpd_rotatelogs_exec_t type, if you want to transition an executable to the httpd_rotatelogs_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_rotatelogs_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_log_t
+
+	/var/log/cacti(/.*)?
+.br
+	/var/log/httpd(/.*)?
+.br
+	/var/log/apache(2)?(/.*)?
+.br
+	/var/log/cherokee(/.*)?
+.br
+	/var/log/lighttpd(/.*)?
+.br
+	/var/log/apache-ssl(2)?(/.*)?
+.br
+	/var/log/cgiwrap\.log.*
+.br
+	/var/www/stickshift/[^/]*/log(/.*)?
+.br
+	/var/lib/openshift/\.log/httpd(/.*)?
+.br
+	/etc/httpd/logs
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_rotatelogs(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_selinux.8 serefpolicy-3.7.19/man/man8/httpd_selinux.8
--- nsaserefpolicy/man/man8/httpd_selinux.8	2013-03-15 11:41:12.240153510 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_selinux.8	2013-03-15 11:40:07.617152035 +0100
@@ -1,106 +1,326 @@
-.TH  "httpd_selinux"  "8"  "httpd" "dwalsh@redhat.com" "httpd SELinux Policy documentation"
+.TH  "httpd_selinux"  "8"  "13-01-04" "httpd" "SELinux Policy documentation for httpd"
 .SH "NAME"
 httpd_selinux \- Security Enhanced Linux Policy for the httpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the httpd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B httpd
-(Apache web server)
-processes via flexible mandatory access
-control.  
+The httpd processes execute with the httpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep httpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_t SELinux type can be entered via the "httpd_exec_t" file type.  The default entrypoint paths for the httpd_t domain are the following:"
+
+/usr/sbin/httpd(\.worker)?, /usr/sbin/apache(2)?, /usr/lib/apache-ssl/.+, /usr/sbin/apache-ssl(2)?, /usr/sbin/cherokee, /usr/sbin/lighttpd, /usr/bin/mongrel_rails
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd:
+
+.EX
+.B httpd_cvs_script_t, httpd_rotatelogs_t, httpd_bugzilla_script_t, httpd_smokeping_cgi_script_t, httpd_nagios_script_t, httpd_dirsrvadmin_script_t, httpd_suexec_t, httpd_php_t, httpd_w3c_validator_script_t, httpd_user_script_t, httpd_awstats_script_t, httpd_apcupsd_cgi_script_t, httpd_nutups_cgi_script_t, httpd_munin_script_t, httpd_openshift_script_t, httpd_sys_script_t, httpd_dspam_script_t, httpd_prewikka_script_t, httpd_git_script_t, httpd_unconfined_script_t, httpd_t, httpd_helper_t, httpd_squid_script_t, httpd_cobbler_script_t, httpd_mediawiki_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_t
+
+can be used to make the process type httpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  httpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run httpd with the tightest access possible.
 
 
 .PP
-If you want to allow httpd to act as a rela, you must turn on the httpd_can_network_relay boolean.
+If you want to allow httpd processes to manage IPA content, you must turn on the httpd_manage_ipa boolean.
+
+.EX
+.B setsebool -P httpd_manage_ipa 1
+.EE
+
+.PP
+If you want to allow Apache to run in stickshift mode, not transition to passenger, you must turn on the httpd_run_stickshift boolean.
+
+.EX
+.B setsebool -P httpd_run_stickshift 1
+.EE
+
+.PP
+If you want to allow httpd to access openstack ports, you must turn on the httpd_use_openstack boolean.
+
+.EX
+.B setsebool -P httpd_use_openstack 1
+.EE
+
+.PP
+If you want to allow Apache to use mod_auth_pam, you must turn on the allow_httpd_mod_auth_pam boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_pam 1
+.EE
+
+.PP
+If you want to allow httpd daemon to change system limits, you must turn on the httpd_setrlimit boolean.
+
+.EX
+.B setsebool -P httpd_setrlimit 1
+.EE
+
+.PP
+If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+
+.EX
+.B setsebool -P httpd_enable_ftp_server 1
+.EE
+
+.PP
+If you want to allow httpd to access nfs file systems, you must turn on the httpd_use_nfs boolean.
+
+.EX
+.B setsebool -P httpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow httpd to act as a relay, you must turn on the httpd_can_network_relay boolean.
 
 .EX
 .B setsebool -P httpd_can_network_relay 1
 .EE
 
 .PP
-If you want to allow HTTPD scripts and modules to connect to databases over the network, you must turn on the httpd_can_network_connect_db boolean.
+If you want to allow http daemon to check spam, you must turn on the httpd_can_check_spam boolean.
 
 .EX
-.B setsebool -P httpd_can_network_connect_db 1
+.B setsebool -P httpd_can_check_spam 1
+.EE
+
+.PP
+If you want to unify HTTPD to communicate with the terminal. Needed for entering the passphrase for certificates at the terminal, you must turn on the httpd_tty_comm boolean.
+
+.EX
+.B setsebool -P httpd_tty_comm 1
+.EE
+
+.PP
+If you want to unify HTTPD handling of all content files, you must turn on the httpd_unified boolean.
+
+.EX
+.B setsebool -P httpd_unified 1
+.EE
+
+.PP
+If you want to allow httpd to connect to memcache server, you must turn on the httpd_can_network_memcache boolean.
+
+.EX
+.B setsebool -P httpd_can_network_memcache 1
 .EE
 
 .PP
-If you want to allow httpd to run gpg in gpg-web domai, you must turn on the httpd_use_gpg boolean.
+If you want to allow httpd to run gpg in gpg-web domain, you must turn on the httpd_use_gpg boolean.
 
 .EX
 .B setsebool -P httpd_use_gpg 1
 .EE
 
 .PP
-If you want to allow httpd cgi suppor, you must turn on the httpd_enable_cgi boolean.
+If you want to allow httpd to use built in scripting (usually php), you must turn on the httpd_builtin_scripting boolean.
+
+.EX
+.B setsebool -P httpd_builtin_scripting 1
+.EE
+
+.PP
+If you want to allow http daemon to send mail, you must turn on the httpd_can_sendmail boolean.
+
+.EX
+.B setsebool -P httpd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow httpd cgi support, you must turn on the httpd_enable_cgi boolean.
 
 .EX
 .B setsebool -P httpd_enable_cgi 1
 .EE
 
 .PP
-If you want to allow httpd to access cifs file system, you must turn on the httpd_use_cifs boolean.
+If you want to allow httpd to read user content, you must turn on the httpd_read_user_content boolean.
 
 .EX
-.B setsebool -P httpd_use_cifs 1
+.B setsebool -P httpd_read_user_content 1
 .EE
 
 .PP
-If you want to allow Apache to use mod_auth_pa, you must turn on the allow_httpd_mod_auth_pam boolean.
+If you want to allow Apache to query NS records, you must turn on the httpd_verify_dns boolean.
 
 .EX
-.B setsebool -P allow_httpd_mod_auth_pam 1
+.B setsebool -P httpd_verify_dns 1
 .EE
 
 .PP
-If you want to allow httpd to read home directorie, you must turn on the httpd_enable_homedirs boolean.
+If you want to allow BIND to bind apache port, you must turn on the named_bind_http_port boolean.
 
 .EX
-.B setsebool -P httpd_enable_homedirs 1
+.B setsebool -P named_bind_http_port 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to cobbler over the network, you must turn on the httpd_can_network_connect_cobbler boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_cobbler 1
 .EE
 
 .PP
-If you want to allow Apache to communicate with avahi service via dbu, you must turn on the httpd_dbus_avahi boolean.
+If you want to allow Apache to communicate with avahi service via dbus, you must turn on the httpd_dbus_avahi boolean.
 
 .EX
 .B setsebool -P httpd_dbus_avahi 1
 .EE
 
 .PP
-If you want to unify HTTPD handling of all content files, you must turn on the httpd_unified boolean.
+If you want to allow httpd to read home directories, you must turn on the httpd_enable_homedirs boolean.
 
 .EX
-.B setsebool -P httpd_unified 1
+.B setsebool -P httpd_enable_homedirs 1
 .EE
 
 .PP
-If you want to allow HTTPD scripts and modules to connect to the network using TCP, you must turn on the httpd_can_network_connect boolean.
+If you want to allow HTTPD to run SSI executables in the same domain as system CGI scripts, you must turn on the httpd_ssi_exec boolean.
 
 .EX
-.B setsebool -P httpd_can_network_connect 1
+.B setsebool -P httpd_ssi_exec 1
+.EE
+
+.PP
+If you want to allow Apache to execute tmp content, you must turn on the httpd_tmp_exec boolean.
+
+.EX
+.B setsebool -P httpd_tmp_exec 1
+.EE
+
+.PP
+If you want to allow httpd to access cifs file systems, you must turn on the httpd_use_cifs boolean.
+
+.EX
+.B setsebool -P httpd_use_cifs 1
 .EE
 
 .PP
-If you want to allow httpd scripts and modules execmem/execstac, you must turn on the httpd_execmem boolean.
+If you want to allow httpd scripts and modules execmem/execstack, you must turn on the httpd_execmem boolean.
 
 .EX
 .B setsebool -P httpd_execmem 1
 .EE
 
 .PP
-If you want to allow Apache to use mod_auth_ntlm_winbin, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
+If you want to allow Apache to use mod_auth_ntlm_winbind, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
 
 .EX
 .B setsebool -P allow_httpd_mod_auth_ntlm_winbind 1
 .EE
 
 .PP
+If you want to allow HTTPD scripts and modules to connect to the network using TCP, you must turn on the httpd_can_network_connect boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to databases over the network, you must turn on the httpd_can_network_connect_db boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_db 1
+.EE
+
+.PP
+If you want to allow ssh with chroot env to apache content, you must turn on the ssh_chroot_manage_apache_content boolean.
+
+.EX
+.B setsebool -P ssh_chroot_manage_apache_content 1
+.EE
+
+.PP
+If you want to allow httpd processes to manage IPA content, you must turn on the httpd_manage_ipa boolean.
+
+.EX
+.B setsebool -P httpd_manage_ipa 1
+.EE
+
+.PP
+If you want to allow Apache to run in stickshift mode, not transition to passenger, you must turn on the httpd_run_stickshift boolean.
+
+.EX
+.B setsebool -P httpd_run_stickshift 1
+.EE
+
+.PP
+If you want to allow httpd to access openstack ports, you must turn on the httpd_use_openstack boolean.
+
+.EX
+.B setsebool -P httpd_use_openstack 1
+.EE
+
+.PP
+If you want to allow Apache to use mod_auth_pam, you must turn on the allow_httpd_mod_auth_pam boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_pam 1
+.EE
+
+.PP
+If you want to allow httpd daemon to change system limits, you must turn on the httpd_setrlimit boolean.
+
+.EX
+.B setsebool -P httpd_setrlimit 1
+.EE
+
+.PP
+If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+
+.EX
+.B setsebool -P httpd_enable_ftp_server 1
+.EE
+
+.PP
+If you want to allow httpd to access nfs file systems, you must turn on the httpd_use_nfs boolean.
+
+.EX
+.B setsebool -P httpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow Apache to modify public files used for public file transfer services. Directories/Files must be labeled public_rw_content_t, you must turn on the allow_httpd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_httpd_anon_write 1
+.EE
+
+.PP
+If you want to allow httpd to act as a relay, you must turn on the httpd_can_network_relay boolean.
+
+.EX
+.B setsebool -P httpd_can_network_relay 1
+.EE
+
+.PP
+If you want to allow http daemon to check spam, you must turn on the httpd_can_check_spam boolean.
+
+.EX
+.B setsebool -P httpd_can_check_spam 1
+.EE
+
+.PP
 If you want to unify HTTPD to communicate with the terminal. Needed for entering the passphrase for certificates at the terminal, you must turn on the httpd_tty_comm boolean.
 
 .EX
@@ -108,59 +328,66 @@
 .EE
 
 .PP
-If you want to allow httpd to read user conten, you must turn on the httpd_read_user_content boolean.
+If you want to unify HTTPD handling of all content files, you must turn on the httpd_unified boolean.
 
 .EX
-.B setsebool -P httpd_read_user_content 1
+.B setsebool -P httpd_unified 1
 .EE
 
 .PP
-If you want to allow httpd to access nfs file system, you must turn on the httpd_use_nfs boolean.
+If you want to allow httpd to connect to memcache server, you must turn on the httpd_can_network_memcache boolean.
 
 .EX
-.B setsebool -P httpd_use_nfs 1
+.B setsebool -P httpd_can_network_memcache 1
 .EE
 
 .PP
-If you want to allow Apache to execute tmp content, you must turn on the httpd_tmp_exec boolean.
+If you want to allow httpd to run gpg in gpg-web domain, you must turn on the httpd_use_gpg boolean.
 
 .EX
-.B setsebool -P httpd_tmp_exec 1
+.B setsebool -P httpd_use_gpg 1
 .EE
 
 .PP
-If you want to allow httpd processes to manage IPA conten, you must turn on the httpd_manage_ipa boolean.
+If you want to allow httpd to use built in scripting (usually php), you must turn on the httpd_builtin_scripting boolean.
 
 .EX
-.B setsebool -P httpd_manage_ipa 1
+.B setsebool -P httpd_builtin_scripting 1
 .EE
 
 .PP
-If you want to allow http daemon to send mai, you must turn on the httpd_can_sendmail boolean.
+If you want to allow http daemon to send mail, you must turn on the httpd_can_sendmail boolean.
 
 .EX
 .B setsebool -P httpd_can_sendmail 1
 .EE
 
 .PP
-If you want to allow httpd to use built in scripting (usually php, you must turn on the httpd_builtin_scripting boolean.
+If you want to allow httpd cgi support, you must turn on the httpd_enable_cgi boolean.
 
 .EX
-.B setsebool -P httpd_builtin_scripting 1
+.B setsebool -P httpd_enable_cgi 1
 .EE
 
 .PP
-If you want to allow http daemon to check spa, you must turn on the httpd_can_check_spam boolean.
+If you want to allow httpd to read user content, you must turn on the httpd_read_user_content boolean.
 
 .EX
-.B setsebool -P httpd_can_check_spam 1
+.B setsebool -P httpd_read_user_content 1
 .EE
 
 .PP
-If you want to allow httpd to connect to memcache serve, you must turn on the httpd_can_network_memcache boolean.
+If you want to allow Apache to query NS records, you must turn on the httpd_verify_dns boolean.
 
 .EX
-.B setsebool -P httpd_can_network_memcache 1
+.B setsebool -P httpd_verify_dns 1
+.EE
+
+.PP
+If you want to allow BIND to bind apache port, you must turn on the named_bind_http_port boolean.
+
+.EX
+.B setsebool -P named_bind_http_port 1
 .EE
 
 .PP
@@ -171,6 +398,20 @@
 .EE
 
 .PP
+If you want to allow Apache to communicate with avahi service via dbus, you must turn on the httpd_dbus_avahi boolean.
+
+.EX
+.B setsebool -P httpd_dbus_avahi 1
+.EE
+
+.PP
+If you want to allow httpd to read home directories, you must turn on the httpd_enable_homedirs boolean.
+
+.EX
+.B setsebool -P httpd_enable_homedirs 1
+.EE
+
+.PP
 If you want to allow HTTPD to run SSI executables in the same domain as system CGI scripts, you must turn on the httpd_ssi_exec boolean.
 
 .EX
@@ -178,17 +419,52 @@
 .EE
 
 .PP
-If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+If you want to allow Apache to execute tmp content, you must turn on the httpd_tmp_exec boolean.
 
 .EX
-.B setsebool -P httpd_enable_ftp_server 1
+.B setsebool -P httpd_tmp_exec 1
 .EE
 
 .PP
-If you want to allow httpd daemon to change system limit, you must turn on the httpd_setrlimit boolean.
+If you want to allow httpd to access cifs file systems, you must turn on the httpd_use_cifs boolean.
 
 .EX
-.B setsebool -P httpd_setrlimit 1
+.B setsebool -P httpd_use_cifs 1
+.EE
+
+.PP
+If you want to allow apache scripts to write to public content.  Directories/Files must be labeled public_rw_content_t, you must turn on the allow_httpd_sys_script_anon_write boolean.
+
+.EX
+.B setsebool -P allow_httpd_sys_script_anon_write 1
+.EE
+
+.PP
+If you want to allow httpd scripts and modules execmem/execstack, you must turn on the httpd_execmem boolean.
+
+.EX
+.B setsebool -P httpd_execmem 1
+.EE
+
+.PP
+If you want to allow Apache to use mod_auth_ntlm_winbind, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_ntlm_winbind 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to the network using TCP, you must turn on the httpd_can_network_connect boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to databases over the network, you must turn on the httpd_can_network_connect_db boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_db 1
 .EE
 
 .SH SHARING FILES
@@ -202,7 +478,7 @@
 .B restorecon -F -R -v /var/httpd
 .pp
 .TP
-Allow httpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_httpd_anon_write boolean to be set.
+Allow httpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_httpdd_anon_write boolean to be set.
 .PP
 .B
 semanage fcontext -a -t public_content_rw_t "/var/httpd/incoming(/.*)?"
@@ -211,33 +487,33 @@
 
 
 .PP
-If you want to allow apache scripts to write to public content.  Directories/Files must be labeled public_rw_content_t., you must turn on the allow_httpd_sys_script_anon_write boolean.
+If you want to allow Apache to modify public files used for public file transfer services. Directories/Files must be labeled public_rw_content_t., you must turn on the allow_httpd_anon_write boolean.
 
 .EX
-.B setsebool -P allow_httpd_sys_script_anon_write 1
+.B setsebool -P allow_httpd_anon_write 1
 .EE
 
 .PP
-If you want to allow Apache to modify public files used for public file transfer services. Directories/Files must be labeled public_rw_content_t., you must turn on the allow_httpd_anon_write boolean.
+If you want to allow apache scripts to write to public content.  Directories/Files must be labeled public_rw_content_t., you must turn on the allow_httpd_sys_script_anon_write boolean.
 
 .EX
-.B setsebool -P allow_httpd_anon_write 1
+.B setsebool -P allow_httpd_sys_script_anon_write 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for httpd:
 
 
 .EX
 .PP
-.B httpd_apcupsd_cgi_content_t 
+.B httpd_apcupsd_cgi_content_t
 .EE
 
 - Set files with the httpd_apcupsd_cgi_content_t type, if you want to treat the files as httpd apcupsd cgi content.
@@ -245,7 +521,7 @@
 
 .EX
 .PP
-.B httpd_apcupsd_cgi_htaccess_t 
+.B httpd_apcupsd_cgi_htaccess_t
 .EE
 
 - Set files with the httpd_apcupsd_cgi_htaccess_t type, if you want to treat the file as a httpd apcupsd cgi access file.
@@ -253,15 +529,15 @@
 
 .EX
 .PP
-.B httpd_apcupsd_cgi_ra_content_t 
+.B httpd_apcupsd_cgi_ra_content_t
 .EE
 
-- Set files with the httpd_apcupsd_cgi_ra_content_t type, if you want to treat the files as httpd apcupsd cgi read/append content.
+- Set files with the httpd_apcupsd_cgi_ra_content_t type, if you want to treat the files as httpd apcupsd cgi  read/append content.
 
 
 .EX
 .PP
-.B httpd_apcupsd_cgi_rw_content_t 
+.B httpd_apcupsd_cgi_rw_content_t
 .EE
 
 - Set files with the httpd_apcupsd_cgi_rw_content_t type, if you want to treat the files as httpd apcupsd cgi read/write content.
@@ -269,19 +545,15 @@
 
 .EX
 .PP
-.B httpd_apcupsd_cgi_script_exec_t 
+.B httpd_apcupsd_cgi_script_exec_t
 .EE
 
 - Set files with the httpd_apcupsd_cgi_script_exec_t type, if you want to transition an executable to the httpd_apcupsd_cgi_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/var/www/apcupsd/upsfstats\.cgi, /var/www/apcupsd/upsimage\.cgi, /var/www/apcupsd/multimon\.cgi, /var/www/cgi-bin/apcgui(/.*)?, /var/www/apcupsd/upsstats\.cgi
 
 .EX
 .PP
-.B httpd_awstats_content_t 
+.B httpd_awstats_content_t
 .EE
 
 - Set files with the httpd_awstats_content_t type, if you want to treat the files as httpd awstats content.
@@ -289,7 +561,7 @@
 
 .EX
 .PP
-.B httpd_awstats_htaccess_t 
+.B httpd_awstats_htaccess_t
 .EE
 
 - Set files with the httpd_awstats_htaccess_t type, if you want to treat the file as a httpd awstats access file.
@@ -297,15 +569,15 @@
 
 .EX
 .PP
-.B httpd_awstats_ra_content_t 
+.B httpd_awstats_ra_content_t
 .EE
 
-- Set files with the httpd_awstats_ra_content_t type, if you want to treat the files as httpd awstats read/append content.
+- Set files with the httpd_awstats_ra_content_t type, if you want to treat the files as httpd awstats  read/append content.
 
 
 .EX
 .PP
-.B httpd_awstats_rw_content_t 
+.B httpd_awstats_rw_content_t
 .EE
 
 - Set files with the httpd_awstats_rw_content_t type, if you want to treat the files as httpd awstats read/write content.
@@ -313,7 +585,7 @@
 
 .EX
 .PP
-.B httpd_awstats_script_exec_t 
+.B httpd_awstats_script_exec_t
 .EE
 
 - Set files with the httpd_awstats_script_exec_t type, if you want to transition an executable to the httpd_awstats_script_t domain.
@@ -321,7 +593,7 @@
 
 .EX
 .PP
-.B httpd_bugzilla_content_t 
+.B httpd_bugzilla_content_t
 .EE
 
 - Set files with the httpd_bugzilla_content_t type, if you want to treat the files as httpd bugzilla content.
@@ -329,7 +601,7 @@
 
 .EX
 .PP
-.B httpd_bugzilla_htaccess_t 
+.B httpd_bugzilla_htaccess_t
 .EE
 
 - Set files with the httpd_bugzilla_htaccess_t type, if you want to treat the file as a httpd bugzilla access file.
@@ -337,15 +609,15 @@
 
 .EX
 .PP
-.B httpd_bugzilla_ra_content_t 
+.B httpd_bugzilla_ra_content_t
 .EE
 
-- Set files with the httpd_bugzilla_ra_content_t type, if you want to treat the files as httpd bugzilla read/append content.
+- Set files with the httpd_bugzilla_ra_content_t type, if you want to treat the files as httpd bugzilla  read/append content.
 
 
 .EX
 .PP
-.B httpd_bugzilla_rw_content_t 
+.B httpd_bugzilla_rw_content_t
 .EE
 
 - Set files with the httpd_bugzilla_rw_content_t type, if you want to treat the files as httpd bugzilla read/write content.
@@ -353,7 +625,7 @@
 
 .EX
 .PP
-.B httpd_bugzilla_script_exec_t 
+.B httpd_bugzilla_script_exec_t
 .EE
 
 - Set files with the httpd_bugzilla_script_exec_t type, if you want to transition an executable to the httpd_bugzilla_script_t domain.
@@ -361,7 +633,7 @@
 
 .EX
 .PP
-.B httpd_bugzilla_tmp_t 
+.B httpd_bugzilla_tmp_t
 .EE
 
 - Set files with the httpd_bugzilla_tmp_t type, if you want to store httpd bugzilla temporary files in the /tmp directories.
@@ -369,19 +641,15 @@
 
 .EX
 .PP
-.B httpd_cache_t 
+.B httpd_cache_t
 .EE
 
 - Set files with the httpd_cache_t type, if you want to store the files under the /var/cache directory.
 
-.br
-.TP 5
-Paths: 
-/var/cache/php-.*, /var/cache/mediawiki(/.*)?, /var/cache/lighttpd(/.*)?, /var/cache/mod_gnutls(/.*)?, /var/cache/mod_ssl(/.*)?, /var/cache/mod_.*, /var/cache/ssl.*\.sem, /var/cache/php-mmcache(/.*)?, /var/cache/httpd(/.*)?, /var/cache/rt3(/.*)?, /var/cache/php-eaccelerator(/.*)?, /var/cache/mason(/.*)?, /var/cache/mod_proxy(/.*)?
 
 .EX
 .PP
-.B httpd_cobbler_content_t 
+.B httpd_cobbler_content_t
 .EE
 
 - Set files with the httpd_cobbler_content_t type, if you want to treat the files as httpd cobbler content.
@@ -389,7 +657,7 @@
 
 .EX
 .PP
-.B httpd_cobbler_htaccess_t 
+.B httpd_cobbler_htaccess_t
 .EE
 
 - Set files with the httpd_cobbler_htaccess_t type, if you want to treat the file as a httpd cobbler access file.
@@ -397,15 +665,15 @@
 
 .EX
 .PP
-.B httpd_cobbler_ra_content_t 
+.B httpd_cobbler_ra_content_t
 .EE
 
-- Set files with the httpd_cobbler_ra_content_t type, if you want to treat the files as httpd cobbler read/append content.
+- Set files with the httpd_cobbler_ra_content_t type, if you want to treat the files as httpd cobbler  read/append content.
 
 
 .EX
 .PP
-.B httpd_cobbler_rw_content_t 
+.B httpd_cobbler_rw_content_t
 .EE
 
 - Set files with the httpd_cobbler_rw_content_t type, if you want to treat the files as httpd cobbler read/write content.
@@ -413,7 +681,7 @@
 
 .EX
 .PP
-.B httpd_cobbler_script_exec_t 
+.B httpd_cobbler_script_exec_t
 .EE
 
 - Set files with the httpd_cobbler_script_exec_t type, if you want to transition an executable to the httpd_cobbler_script_t domain.
@@ -421,19 +689,15 @@
 
 .EX
 .PP
-.B httpd_config_t 
+.B httpd_config_t
 .EE
 
 - Set files with the httpd_config_t type, if you want to treat the files as httpd configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/etc/vhosts, /etc/httpd(/.*)?, /etc/apache(2)?(/.*)?, /etc/apache-ssl(2)?(/.*)?, /etc/lighttpd(/.*)?
 
 .EX
 .PP
-.B httpd_cvs_content_t 
+.B httpd_cvs_content_t
 .EE
 
 - Set files with the httpd_cvs_content_t type, if you want to treat the files as httpd cvs content.
@@ -441,7 +705,7 @@
 
 .EX
 .PP
-.B httpd_cvs_htaccess_t 
+.B httpd_cvs_htaccess_t
 .EE
 
 - Set files with the httpd_cvs_htaccess_t type, if you want to treat the file as a httpd cvs access file.
@@ -449,15 +713,15 @@
 
 .EX
 .PP
-.B httpd_cvs_ra_content_t 
+.B httpd_cvs_ra_content_t
 .EE
 
-- Set files with the httpd_cvs_ra_content_t type, if you want to treat the files as httpd cvs read/append content.
+- Set files with the httpd_cvs_ra_content_t type, if you want to treat the files as httpd cvs  read/append content.
 
 
 .EX
 .PP
-.B httpd_cvs_rw_content_t 
+.B httpd_cvs_rw_content_t
 .EE
 
 - Set files with the httpd_cvs_rw_content_t type, if you want to treat the files as httpd cvs read/write content.
@@ -465,19 +729,15 @@
 
 .EX
 .PP
-.B httpd_cvs_script_exec_t 
+.B httpd_cvs_script_exec_t
 .EE
 
 - Set files with the httpd_cvs_script_exec_t type, if you want to transition an executable to the httpd_cvs_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/share/cvsweb/cvsweb\.cgi, /var/www/cgi-bin/cvsweb\.cgi
 
 .EX
 .PP
-.B httpd_dirsrvadmin_content_t 
+.B httpd_dirsrvadmin_content_t
 .EE
 
 - Set files with the httpd_dirsrvadmin_content_t type, if you want to treat the files as httpd dirsrvadmin content.
@@ -485,7 +745,7 @@
 
 .EX
 .PP
-.B httpd_dirsrvadmin_htaccess_t 
+.B httpd_dirsrvadmin_htaccess_t
 .EE
 
 - Set files with the httpd_dirsrvadmin_htaccess_t type, if you want to treat the file as a httpd dirsrvadmin access file.
@@ -493,15 +753,15 @@
 
 .EX
 .PP
-.B httpd_dirsrvadmin_ra_content_t 
+.B httpd_dirsrvadmin_ra_content_t
 .EE
 
-- Set files with the httpd_dirsrvadmin_ra_content_t type, if you want to treat the files as httpd dirsrvadmin read/append content.
+- Set files with the httpd_dirsrvadmin_ra_content_t type, if you want to treat the files as httpd dirsrvadmin  read/append content.
 
 
 .EX
 .PP
-.B httpd_dirsrvadmin_rw_content_t 
+.B httpd_dirsrvadmin_rw_content_t
 .EE
 
 - Set files with the httpd_dirsrvadmin_rw_content_t type, if you want to treat the files as httpd dirsrvadmin read/write content.
@@ -509,31 +769,63 @@
 
 .EX
 .PP
-.B httpd_dirsrvadmin_script_exec_t 
+.B httpd_dirsrvadmin_script_exec_t
 .EE
 
 - Set files with the httpd_dirsrvadmin_script_exec_t type, if you want to transition an executable to the httpd_dirsrvadmin_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/dirsrv/cgi-bin(/.*)?, /usr/lib(64)?/dirsrv/dsgw-cgi-bin(/.*)?
 
 .EX
 .PP
-.B httpd_exec_t 
+.B httpd_dspam_content_t
+.EE
+
+- Set files with the httpd_dspam_content_t type, if you want to treat the files as httpd dspam content.
+
+
+.EX
+.PP
+.B httpd_dspam_htaccess_t
+.EE
+
+- Set files with the httpd_dspam_htaccess_t type, if you want to treat the file as a httpd dspam access file.
+
+
+.EX
+.PP
+.B httpd_dspam_ra_content_t
+.EE
+
+- Set files with the httpd_dspam_ra_content_t type, if you want to treat the files as httpd dspam  read/append content.
+
+
+.EX
+.PP
+.B httpd_dspam_rw_content_t
+.EE
+
+- Set files with the httpd_dspam_rw_content_t type, if you want to treat the files as httpd dspam read/write content.
+
+
+.EX
+.PP
+.B httpd_dspam_script_exec_t
+.EE
+
+- Set files with the httpd_dspam_script_exec_t type, if you want to transition an executable to the httpd_dspam_script_t domain.
+
+
+.EX
+.PP
+.B httpd_exec_t
 .EE
 
 - Set files with the httpd_exec_t type, if you want to transition an executable to the httpd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/apache(2)?, /usr/bin/mongrel_rails, /usr/sbin/lighttpd, /usr/lib/apache-ssl/.+, /usr/sbin/httpd(\.worker)?, /usr/sbin/apache-ssl(2)?
 
 .EX
 .PP
-.B httpd_git_content_t 
+.B httpd_git_content_t
 .EE
 
 - Set files with the httpd_git_content_t type, if you want to treat the files as httpd git content.
@@ -541,7 +833,7 @@
 
 .EX
 .PP
-.B httpd_git_htaccess_t 
+.B httpd_git_htaccess_t
 .EE
 
 - Set files with the httpd_git_htaccess_t type, if you want to treat the file as a httpd git access file.
@@ -549,15 +841,15 @@
 
 .EX
 .PP
-.B httpd_git_ra_content_t 
+.B httpd_git_ra_content_t
 .EE
 
-- Set files with the httpd_git_ra_content_t type, if you want to treat the files as httpd git read/append content.
+- Set files with the httpd_git_ra_content_t type, if you want to treat the files as httpd git  read/append content.
 
 
 .EX
 .PP
-.B httpd_git_rw_content_t 
+.B httpd_git_rw_content_t
 .EE
 
 - Set files with the httpd_git_rw_content_t type, if you want to treat the files as httpd git read/write content.
@@ -565,19 +857,15 @@
 
 .EX
 .PP
-.B httpd_git_script_exec_t 
+.B httpd_git_script_exec_t
 .EE
 
 - Set files with the httpd_git_script_exec_t type, if you want to transition an executable to the httpd_git_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/var/www/cgi-bin/cgit, /var/www/git/gitweb.cgi
 
 .EX
 .PP
-.B httpd_helper_exec_t 
+.B httpd_helper_exec_t
 .EE
 
 - Set files with the httpd_helper_exec_t type, if you want to transition an executable to the httpd_helper_t domain.
@@ -585,19 +873,15 @@
 
 .EX
 .PP
-.B httpd_initrc_exec_t 
+.B httpd_initrc_exec_t
 .EE
 
 - Set files with the httpd_initrc_exec_t type, if you want to transition an executable to the httpd_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/httpd, /etc/rc\.d/init\.d/lighttpd
 
 .EX
 .PP
-.B httpd_keytab_t 
+.B httpd_keytab_t
 .EE
 
 - Set files with the httpd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -605,7 +889,7 @@
 
 .EX
 .PP
-.B httpd_lock_t 
+.B httpd_lock_t
 .EE
 
 - Set files with the httpd_lock_t type, if you want to treat the files as httpd lock data, stored under the /var/lock directory
@@ -613,31 +897,23 @@
 
 .EX
 .PP
-.B httpd_log_t 
+.B httpd_log_t
 .EE
 
 - Set files with the httpd_log_t type, if you want to treat the data as httpd log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/apache-ssl(2)?(/.*)?, /var/log/httpd(/.*)?, /var/log/cgiwrap\.log.*, /var/log/lighttpd(/.*)?, /etc/httpd/logs, /var/log/apache(2)?(/.*)?, /var/log/cacti(/.*)?
 
 .EX
 .PP
-.B httpd_mediawiki_content_t 
+.B httpd_mediawiki_content_t
 .EE
 
 - Set files with the httpd_mediawiki_content_t type, if you want to treat the files as httpd mediawiki content.
 
-.br
-.TP 5
-Paths: 
-/var/www/wiki/.*\.php, /usr/share/mediawiki(/.*)?
 
 .EX
 .PP
-.B httpd_mediawiki_htaccess_t 
+.B httpd_mediawiki_htaccess_t
 .EE
 
 - Set files with the httpd_mediawiki_htaccess_t type, if you want to treat the file as a httpd mediawiki access file.
@@ -645,15 +921,15 @@
 
 .EX
 .PP
-.B httpd_mediawiki_ra_content_t 
+.B httpd_mediawiki_ra_content_t
 .EE
 
-- Set files with the httpd_mediawiki_ra_content_t type, if you want to treat the files as httpd mediawiki read/append content.
+- Set files with the httpd_mediawiki_ra_content_t type, if you want to treat the files as httpd mediawiki  read/append content.
 
 
 .EX
 .PP
-.B httpd_mediawiki_rw_content_t 
+.B httpd_mediawiki_rw_content_t
 .EE
 
 - Set files with the httpd_mediawiki_rw_content_t type, if you want to treat the files as httpd mediawiki read/write content.
@@ -661,167 +937,191 @@
 
 .EX
 .PP
-.B httpd_mediawiki_script_exec_t 
+.B httpd_mediawiki_script_exec_t
 .EE
 
 - Set files with the httpd_mediawiki_script_exec_t type, if you want to transition an executable to the httpd_mediawiki_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/mediawiki/math/texvc, /usr/lib(64)?/mediawiki/math/texvc_tex, /usr/lib(64)?/mediawiki/math/texvc_tes
 
 .EX
 .PP
-.B httpd_mediawiki_tmp_t 
+.B httpd_mediawiki_tmp_t
+.EE
+
+- Set files with the httpd_mediawiki_tmp_t type, if you want to store httpd mediawiki temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_modules_t
+.EE
+
+- Set files with the httpd_modules_t type, if you want to treat the files as httpd modules.
+
+
+.EX
+.PP
+.B httpd_munin_content_t
+.EE
+
+- Set files with the httpd_munin_content_t type, if you want to treat the files as httpd munin content.
+
+
+.EX
+.PP
+.B httpd_munin_htaccess_t
+.EE
+
+- Set files with the httpd_munin_htaccess_t type, if you want to treat the file as a httpd munin access file.
+
+
+.EX
+.PP
+.B httpd_munin_ra_content_t
+.EE
+
+- Set files with the httpd_munin_ra_content_t type, if you want to treat the files as httpd munin  read/append content.
+
+
+.EX
+.PP
+.B httpd_munin_rw_content_t
 .EE
 
-- Set files with the httpd_mediawiki_tmp_t type, if you want to store httpd mediawiki temporary files in the /tmp directories.
+- Set files with the httpd_munin_rw_content_t type, if you want to treat the files as httpd munin read/write content.
 
 
 .EX
 .PP
-.B httpd_modules_t 
+.B httpd_munin_script_exec_t
 .EE
 
-- Set files with the httpd_modules_t type, if you want to treat the files as httpd modules.
+- Set files with the httpd_munin_script_exec_t type, if you want to transition an executable to the httpd_munin_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/lighttpd(/.*)?, /usr/lib(64)?/apache2/modules(/.*)?, /usr/lib(64)?/apache(/.*)?, /etc/httpd/modules, /usr/lib(64)?/httpd(/.*)?
 
 .EX
 .PP
-.B httpd_munin_content_t 
+.B httpd_nagios_content_t
 .EE
 
-- Set files with the httpd_munin_content_t type, if you want to treat the files as httpd munin content.
+- Set files with the httpd_nagios_content_t type, if you want to treat the files as httpd nagios content.
 
 
 .EX
 .PP
-.B httpd_munin_htaccess_t 
+.B httpd_nagios_htaccess_t
 .EE
 
-- Set files with the httpd_munin_htaccess_t type, if you want to treat the file as a httpd munin access file.
+- Set files with the httpd_nagios_htaccess_t type, if you want to treat the file as a httpd nagios access file.
 
 
 .EX
 .PP
-.B httpd_munin_ra_content_t 
+.B httpd_nagios_ra_content_t
 .EE
 
-- Set files with the httpd_munin_ra_content_t type, if you want to treat the files as httpd munin read/append content.
+- Set files with the httpd_nagios_ra_content_t type, if you want to treat the files as httpd nagios  read/append content.
 
 
 .EX
 .PP
-.B httpd_munin_rw_content_t 
+.B httpd_nagios_rw_content_t
 .EE
 
-- Set files with the httpd_munin_rw_content_t type, if you want to treat the files as httpd munin read/write content.
+- Set files with the httpd_nagios_rw_content_t type, if you want to treat the files as httpd nagios read/write content.
 
 
 .EX
 .PP
-.B httpd_munin_script_exec_t 
+.B httpd_nagios_script_exec_t
 .EE
 
-- Set files with the httpd_munin_script_exec_t type, if you want to transition an executable to the httpd_munin_script_t domain.
+- Set files with the httpd_nagios_script_exec_t type, if you want to transition an executable to the httpd_nagios_script_t domain.
 
 
 .EX
 .PP
-.B httpd_nagios_content_t 
+.B httpd_nutups_cgi_content_t
 .EE
 
-- Set files with the httpd_nagios_content_t type, if you want to treat the files as httpd nagios content.
+- Set files with the httpd_nutups_cgi_content_t type, if you want to treat the files as httpd nutups cgi content.
 
 
 .EX
 .PP
-.B httpd_nagios_htaccess_t 
+.B httpd_nutups_cgi_htaccess_t
 .EE
 
-- Set files with the httpd_nagios_htaccess_t type, if you want to treat the file as a httpd nagios access file.
+- Set files with the httpd_nutups_cgi_htaccess_t type, if you want to treat the file as a httpd nutups cgi access file.
 
 
 .EX
 .PP
-.B httpd_nagios_ra_content_t 
+.B httpd_nutups_cgi_ra_content_t
 .EE
 
-- Set files with the httpd_nagios_ra_content_t type, if you want to treat the files as httpd nagios read/append content.
+- Set files with the httpd_nutups_cgi_ra_content_t type, if you want to treat the files as httpd nutups cgi  read/append content.
 
 
 .EX
 .PP
-.B httpd_nagios_rw_content_t 
+.B httpd_nutups_cgi_rw_content_t
 .EE
 
-- Set files with the httpd_nagios_rw_content_t type, if you want to treat the files as httpd nagios read/write content.
+- Set files with the httpd_nutups_cgi_rw_content_t type, if you want to treat the files as httpd nutups cgi read/write content.
 
 
 .EX
 .PP
-.B httpd_nagios_script_exec_t 
+.B httpd_nutups_cgi_script_exec_t
 .EE
 
-- Set files with the httpd_nagios_script_exec_t type, if you want to transition an executable to the httpd_nagios_script_t domain.
+- Set files with the httpd_nutups_cgi_script_exec_t type, if you want to transition an executable to the httpd_nutups_cgi_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/nagios/cgi(/.*)?, /usr/lib(64)?/cgi-bin/nagios(/.+)?, /usr/lib(64)?/cgi-bin/netsaint(/.*)?, /usr/lib(64)?/nagios/cgi-bin(/.*)?
 
 .EX
 .PP
-.B httpd_nutups_cgi_content_t 
+.B httpd_openshift_content_t
 .EE
 
-- Set files with the httpd_nutups_cgi_content_t type, if you want to treat the files as httpd nutups cgi content.
+- Set files with the httpd_openshift_content_t type, if you want to treat the files as httpd openshift content.
 
 
 .EX
 .PP
-.B httpd_nutups_cgi_htaccess_t 
+.B httpd_openshift_htaccess_t
 .EE
 
-- Set files with the httpd_nutups_cgi_htaccess_t type, if you want to treat the file as a httpd nutups cgi access file.
+- Set files with the httpd_openshift_htaccess_t type, if you want to treat the file as a httpd openshift access file.
 
 
 .EX
 .PP
-.B httpd_nutups_cgi_ra_content_t 
+.B httpd_openshift_ra_content_t
 .EE
 
-- Set files with the httpd_nutups_cgi_ra_content_t type, if you want to treat the files as httpd nutups cgi read/append content.
+- Set files with the httpd_openshift_ra_content_t type, if you want to treat the files as httpd openshift  read/append content.
 
 
 .EX
 .PP
-.B httpd_nutups_cgi_rw_content_t 
+.B httpd_openshift_rw_content_t
 .EE
 
-- Set files with the httpd_nutups_cgi_rw_content_t type, if you want to treat the files as httpd nutups cgi read/write content.
+- Set files with the httpd_openshift_rw_content_t type, if you want to treat the files as httpd openshift read/write content.
 
 
 .EX
 .PP
-.B httpd_nutups_cgi_script_exec_t 
+.B httpd_openshift_script_exec_t
 .EE
 
-- Set files with the httpd_nutups_cgi_script_exec_t type, if you want to transition an executable to the httpd_nutups_cgi_script_t domain.
+- Set files with the httpd_openshift_script_exec_t type, if you want to transition an executable to the httpd_openshift_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/var/www/nut-cgi-bin/upsstats\.cgi, /var/www/nut-cgi-bin/upsimage\.cgi, /var/www/nut-cgi-bin/upsset\.cgi
 
 .EX
 .PP
-.B httpd_php_exec_t 
+.B httpd_php_exec_t
 .EE
 
 - Set files with the httpd_php_exec_t type, if you want to transition an executable to the httpd_php_t domain.
@@ -829,7 +1129,7 @@
 
 .EX
 .PP
-.B httpd_php_tmp_t 
+.B httpd_php_tmp_t
 .EE
 
 - Set files with the httpd_php_tmp_t type, if you want to store httpd php temporary files in the /tmp directories.
@@ -837,7 +1137,7 @@
 
 .EX
 .PP
-.B httpd_prewikka_content_t 
+.B httpd_prewikka_content_t
 .EE
 
 - Set files with the httpd_prewikka_content_t type, if you want to treat the files as httpd prewikka content.
@@ -845,7 +1145,7 @@
 
 .EX
 .PP
-.B httpd_prewikka_htaccess_t 
+.B httpd_prewikka_htaccess_t
 .EE
 
 - Set files with the httpd_prewikka_htaccess_t type, if you want to treat the file as a httpd prewikka access file.
@@ -853,15 +1153,15 @@
 
 .EX
 .PP
-.B httpd_prewikka_ra_content_t 
+.B httpd_prewikka_ra_content_t
 .EE
 
-- Set files with the httpd_prewikka_ra_content_t type, if you want to treat the files as httpd prewikka read/append content.
+- Set files with the httpd_prewikka_ra_content_t type, if you want to treat the files as httpd prewikka  read/append content.
 
 
 .EX
 .PP
-.B httpd_prewikka_rw_content_t 
+.B httpd_prewikka_rw_content_t
 .EE
 
 - Set files with the httpd_prewikka_rw_content_t type, if you want to treat the files as httpd prewikka read/write content.
@@ -869,7 +1169,7 @@
 
 .EX
 .PP
-.B httpd_prewikka_script_exec_t 
+.B httpd_prewikka_script_exec_t
 .EE
 
 - Set files with the httpd_prewikka_script_exec_t type, if you want to transition an executable to the httpd_prewikka_script_t domain.
@@ -877,7 +1177,7 @@
 
 .EX
 .PP
-.B httpd_rotatelogs_exec_t 
+.B httpd_rotatelogs_exec_t
 .EE
 
 - Set files with the httpd_rotatelogs_exec_t type, if you want to transition an executable to the httpd_rotatelogs_t domain.
@@ -885,7 +1185,7 @@
 
 .EX
 .PP
-.B httpd_smokeping_cgi_content_t 
+.B httpd_smokeping_cgi_content_t
 .EE
 
 - Set files with the httpd_smokeping_cgi_content_t type, if you want to treat the files as httpd smokeping cgi content.
@@ -893,7 +1193,7 @@
 
 .EX
 .PP
-.B httpd_smokeping_cgi_htaccess_t 
+.B httpd_smokeping_cgi_htaccess_t
 .EE
 
 - Set files with the httpd_smokeping_cgi_htaccess_t type, if you want to treat the file as a httpd smokeping cgi access file.
@@ -901,15 +1201,15 @@
 
 .EX
 .PP
-.B httpd_smokeping_cgi_ra_content_t 
+.B httpd_smokeping_cgi_ra_content_t
 .EE
 
-- Set files with the httpd_smokeping_cgi_ra_content_t type, if you want to treat the files as httpd smokeping cgi read/append content.
+- Set files with the httpd_smokeping_cgi_ra_content_t type, if you want to treat the files as httpd smokeping cgi  read/append content.
 
 
 .EX
 .PP
-.B httpd_smokeping_cgi_rw_content_t 
+.B httpd_smokeping_cgi_rw_content_t
 .EE
 
 - Set files with the httpd_smokeping_cgi_rw_content_t type, if you want to treat the files as httpd smokeping cgi read/write content.
@@ -917,7 +1217,7 @@
 
 .EX
 .PP
-.B httpd_smokeping_cgi_script_exec_t 
+.B httpd_smokeping_cgi_script_exec_t
 .EE
 
 - Set files with the httpd_smokeping_cgi_script_exec_t type, if you want to transition an executable to the httpd_smokeping_cgi_script_t domain.
@@ -925,7 +1225,7 @@
 
 .EX
 .PP
-.B httpd_squid_content_t 
+.B httpd_squid_content_t
 .EE
 
 - Set files with the httpd_squid_content_t type, if you want to treat the files as httpd squid content.
@@ -933,7 +1233,7 @@
 
 .EX
 .PP
-.B httpd_squid_htaccess_t 
+.B httpd_squid_htaccess_t
 .EE
 
 - Set files with the httpd_squid_htaccess_t type, if you want to treat the file as a httpd squid access file.
@@ -941,15 +1241,15 @@
 
 .EX
 .PP
-.B httpd_squid_ra_content_t 
+.B httpd_squid_ra_content_t
 .EE
 
-- Set files with the httpd_squid_ra_content_t type, if you want to treat the files as httpd squid read/append content.
+- Set files with the httpd_squid_ra_content_t type, if you want to treat the files as httpd squid  read/append content.
 
 
 .EX
 .PP
-.B httpd_squid_rw_content_t 
+.B httpd_squid_rw_content_t
 .EE
 
 - Set files with the httpd_squid_rw_content_t type, if you want to treat the files as httpd squid read/write content.
@@ -957,19 +1257,15 @@
 
 .EX
 .PP
-.B httpd_squid_script_exec_t 
+.B httpd_squid_script_exec_t
 .EE
 
 - Set files with the httpd_squid_script_exec_t type, if you want to transition an executable to the httpd_squid_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib64/squid/cachemgr\.cgi, /usr/lib/squid/cachemgr\.cgi
 
 .EX
 .PP
-.B httpd_squirrelmail_t 
+.B httpd_squirrelmail_t
 .EE
 
 - Set files with the httpd_squirrelmail_t type, if you want to treat the files as httpd squirrelmail data.
@@ -977,19 +1273,15 @@
 
 .EX
 .PP
-.B httpd_suexec_exec_t 
+.B httpd_suexec_exec_t
 .EE
 
 - Set files with the httpd_suexec_exec_t type, if you want to transition an executable to the httpd_suexec_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/apache(2)?/suexec(2)?, /usr/lib(64)?/cgi-bin/(nph-)?cgiwrap(d)?, /usr/sbin/suexec
 
 .EX
 .PP
-.B httpd_suexec_tmp_t 
+.B httpd_suexec_tmp_t
 .EE
 
 - Set files with the httpd_suexec_tmp_t type, if you want to store httpd suexec temporary files in the /tmp directories.
@@ -997,19 +1289,15 @@
 
 .EX
 .PP
-.B httpd_sys_content_t 
+.B httpd_sys_content_t
 .EE
 
 - Set files with the httpd_sys_content_t type, if you want to treat the files as httpd sys content.
 
-.br
-.TP 5
-Paths: 
-/usr/share/icecast(/.*)?, /usr/share/htdig(/.*)?, /etc/htdig(/.*)?, /var/www/svn/conf(/.*)?, /usr/share/mythtv/data(/.*)?, /var/lib/htdig(/.*)?, /srv/gallery2(/.*)?, /srv/([^/]*/)?www(/.*)?, /usr/share/ntop/html(/.*)?, /usr/share/mythweb(/.*)?, /var/lib/cacti/rra(/.*)?, /usr/share/openca/htdocs(/.*)?, /usr/share/selinux-policy[^/]*/html(/.*)?, /usr/share/drupal.*, /var/lib/trac(/.*)?, /var/www(/.*)?, /var/www/icons(/.*)?
 
 .EX
 .PP
-.B httpd_sys_htaccess_t 
+.B httpd_sys_htaccess_t
 .EE
 
 - Set files with the httpd_sys_htaccess_t type, if you want to treat the file as a httpd sys access file.
@@ -1017,39 +1305,31 @@
 
 .EX
 .PP
-.B httpd_sys_ra_content_t 
+.B httpd_sys_ra_content_t
 .EE
 
-- Set files with the httpd_sys_ra_content_t type, if you want to treat the files as httpd sys read/append content.
+- Set files with the httpd_sys_ra_content_t type, if you want to treat the files as httpd sys  read/append content.
 
 
 .EX
 .PP
-.B httpd_sys_rw_content_t 
+.B httpd_sys_rw_content_t
 .EE
 
 - Set files with the httpd_sys_rw_content_t type, if you want to treat the files as httpd sys read/write content.
 
-.br
-.TP 5
-Paths: 
-/var/spool/viewvc(/.*)?, /etc/mock/koji(/.*)?, /var/lib/svn(/.*)?, /var/spool/gosa(/.*)?, /etc/zabbix/web(/.*)?, /etc/drupal.*, /var/www/gallery/albums(/.*)?, /var/lib/koji(/.*)?, /var/www/html/configuration\.php, /usr/share/wordpress/wp-content/upgrade(/.*)?, /etc/dokuwiki(/.*)?, /var/lib/drupal.*, /usr/share/wordpress-mu/wp-content(/.*)?, /var/www/moodledata(/.*)?, /usr/share/wordpress/wp-content/uploads(/.*)?, /var/www/svn(/.*)?
 
 .EX
 .PP
-.B httpd_sys_script_exec_t 
+.B httpd_sys_script_exec_t
 .EE
 
 - Set files with the httpd_sys_script_exec_t type, if you want to transition an executable to the httpd_sys_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/var/www/svn/hooks(/.*)?, /usr/share/mythweb/mythweb\.pl, /usr/share/wordpress/.*\.php, /usr/lib/cgi-bin(/.*)?, /var/www/perl(/.*)?, /usr/share/mythtv/mythweather/scripts(/.*)?, /usr/share/wordpress-mu/wp-config\.php, /var/www/html/[^/]*/cgi-bin(/.*)?, /var/www/[^/]*/cgi-bin(/.*)?, /var/www/cgi-bin(/.*)?
 
 .EX
 .PP
-.B httpd_tmp_t 
+.B httpd_tmp_t
 .EE
 
 - Set files with the httpd_tmp_t type, if you want to store httpd temporary files in the /tmp directories.
@@ -1057,7 +1337,7 @@
 
 .EX
 .PP
-.B httpd_tmpfs_t 
+.B httpd_tmpfs_t
 .EE
 
 - Set files with the httpd_tmpfs_t type, if you want to store httpd files on a tmpfs file system.
@@ -1065,7 +1345,7 @@
 
 .EX
 .PP
-.B httpd_unconfined_script_exec_t 
+.B httpd_unconfined_script_exec_t
 .EE
 
 - Set files with the httpd_unconfined_script_exec_t type, if you want to transition an executable to the httpd_unconfined_script_t domain.
@@ -1073,7 +1353,7 @@
 
 .EX
 .PP
-.B httpd_user_content_t 
+.B httpd_user_content_t
 .EE
 
 - Set files with the httpd_user_content_t type, if you want to treat the files as httpd user content.
@@ -1081,7 +1361,7 @@
 
 .EX
 .PP
-.B httpd_user_htaccess_t 
+.B httpd_user_htaccess_t
 .EE
 
 - Set files with the httpd_user_htaccess_t type, if you want to treat the file as a httpd user access file.
@@ -1089,15 +1369,15 @@
 
 .EX
 .PP
-.B httpd_user_ra_content_t 
+.B httpd_user_ra_content_t
 .EE
 
-- Set files with the httpd_user_ra_content_t type, if you want to treat the files as httpd user read/append content.
+- Set files with the httpd_user_ra_content_t type, if you want to treat the files as httpd user  read/append content.
 
 
 .EX
 .PP
-.B httpd_user_rw_content_t 
+.B httpd_user_rw_content_t
 .EE
 
 - Set files with the httpd_user_rw_content_t type, if you want to treat the files as httpd user read/write content.
@@ -1105,7 +1385,7 @@
 
 .EX
 .PP
-.B httpd_user_script_exec_t 
+.B httpd_user_script_exec_t
 .EE
 
 - Set files with the httpd_user_script_exec_t type, if you want to transition an executable to the httpd_user_script_t domain.
@@ -1113,31 +1393,23 @@
 
 .EX
 .PP
-.B httpd_var_lib_t 
+.B httpd_var_lib_t
 .EE
 
 - Set files with the httpd_var_lib_t type, if you want to store the httpd files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/rt3/data/RT-Shredder(/.*)?, /var/lib/httpd(/.*)?, /var/lib/dav(/.*)?
 
 .EX
 .PP
-.B httpd_var_run_t 
+.B httpd_var_run_t
 .EE
 
 - Set files with the httpd_var_run_t type, if you want to store the httpd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/mod_.*, /var/run/apache.*, /var/run/lighttpd(/.*)?, /var/run/gcache_port, /var/run/httpd.*, /var/run/wsgi.*, /var/lib/php/session(/.*)?
 
 .EX
 .PP
-.B httpd_w3c_validator_content_t 
+.B httpd_w3c_validator_content_t
 .EE
 
 - Set files with the httpd_w3c_validator_content_t type, if you want to treat the files as httpd w3c validator content.
@@ -1145,7 +1417,7 @@
 
 .EX
 .PP
-.B httpd_w3c_validator_htaccess_t 
+.B httpd_w3c_validator_htaccess_t
 .EE
 
 - Set files with the httpd_w3c_validator_htaccess_t type, if you want to treat the file as a httpd w3c validator access file.
@@ -1153,15 +1425,15 @@
 
 .EX
 .PP
-.B httpd_w3c_validator_ra_content_t 
+.B httpd_w3c_validator_ra_content_t
 .EE
 
-- Set files with the httpd_w3c_validator_ra_content_t type, if you want to treat the files as httpd w3c validator read/append content.
+- Set files with the httpd_w3c_validator_ra_content_t type, if you want to treat the files as httpd w3c validator  read/append content.
 
 
 .EX
 .PP
-.B httpd_w3c_validator_rw_content_t 
+.B httpd_w3c_validator_rw_content_t
 .EE
 
 - Set files with the httpd_w3c_validator_rw_content_t type, if you want to treat the files as httpd w3c validator read/write content.
@@ -1169,19 +1441,15 @@
 
 .EX
 .PP
-.B httpd_w3c_validator_script_exec_t 
+.B httpd_w3c_validator_script_exec_t
 .EE
 
 - Set files with the httpd_w3c_validator_script_exec_t type, if you want to transition an executable to the httpd_w3c_validator_script_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/share/w3c-markup-validator/cgi-bin(/.*)?, /usr/lib/cgi-bin/check
 
 .EX
 .PP
-.B httpd_w3c_validator_tmp_t 
+.B httpd_w3c_validator_tmp_t
 .EE
 
 - Set files with the httpd_w3c_validator_tmp_t type, if you want to store httpd w3c validator temporary files in the /tmp directories.
@@ -1189,62 +1457,362 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for httpd:
 
 .EX
 .TP 5
-.B http_cache_port_t 
+.B http_cache_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 3128,8080,8118,8123,10001-10010
+.EE
+udp 3130
 .EE
 
 .EX
 .TP 5
-.B http_port_t 
+.B http_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 80,443,488,8008,8009,8443
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for httpd:
+.SH "MANAGED FILES"
 
-.EX
-.B httpd_cvs_script_t, httpd_rotatelogs_t, httpd_bugzilla_script_t, httpd_smokeping_cgi_script_t, httpd_nagios_script_t, httpd_dirsrvadmin_script_t, httpd_suexec_t, httpd_php_t, httpd_w3c_validator_script_t, httpd_user_script_t, httpd_awstats_script_t, httpd_apcupsd_cgi_script_t, httpd_nutups_cgi_script_t, httpd_munin_script_t, httpd_sys_script_t, httpd_prewikka_script_t, httpd_git_script_t, httpd_unconfined_script_t, httpd_t, httpd_helper_t, httpd_squid_script_t, httpd_cobbler_script_t, httpd_mediawiki_script_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type httpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dirsrv_config_t
+
+	/etc/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrv_var_log_t
+
+	/var/log/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrv_var_run_t
+
+	/var/run/slapd.*
+.br
+	/var/run/dirsrv(/.*)?
+.br
+
+.br
+.B dirsrvadmin_config_t
+
+	/etc/dirsrv/dsgw(/.*)?
+.br
+	/etc/dirsrv/admin-serv(/.*)?
+.br
+
+.br
+.B dirsrvadmin_tmp_t
+
+
+.br
+.B httpd_apcupsd_cgi_rw_content_t
+
+
+.br
+.B httpd_awstats_rw_content_t
+
+
+.br
+.B httpd_bugzilla_rw_content_t
+
+	/var/lib/bugzilla(/.*)?
+.br
+
+.br
+.B httpd_cache_t
+
+	/var/cache/rt3(/.*)?
+.br
+	/var/cache/ssl.*\.sem
+.br
+	/var/cache/mod_.*
+.br
+	/var/cache/php-.*
+.br
+	/var/cache/httpd(/.*)?
+.br
+	/var/cache/mason(/.*)?
+.br
+	/var/cache/mod_ssl(/.*)?
+.br
+	/var/cache/lighttpd(/.*)?
+.br
+	/var/cache/mediawiki(/.*)?
+.br
+	/var/cache/mod_proxy(/.*)?
+.br
+	/var/cache/mod_gnutls(/.*)?
+.br
+	/var/cache/php-mmcache(/.*)?
+.br
+	/var/cache/php-eaccelerator(/.*)?
+.br
+
+.br
+.B httpd_cobbler_rw_content_t
+
+
+.br
+.B httpd_cvs_rw_content_t
+
+
+.br
+.B httpd_dirsrvadmin_rw_content_t
+
+
+.br
+.B httpd_dspam_rw_content_t
+
+
+.br
+.B httpd_git_rw_content_t
+
+	/var/cache/cgit(/.*)?
+.br
+
+.br
+.B httpd_lock_t
+
+
+.br
+.B httpd_mediawiki_rw_content_t
+
+	/var/www/wiki(/.*)?
+.br
+
+.br
+.B httpd_munin_rw_content_t
+
+
+.br
+.B httpd_nagios_rw_content_t
+
+
+.br
+.B httpd_nutups_cgi_rw_content_t
+
+
+.br
+.B httpd_openshift_rw_content_t
+
+
+.br
+.B httpd_prewikka_rw_content_t
+
+
+.br
+.B httpd_smokeping_cgi_rw_content_t
+
+
+.br
+.B httpd_squid_rw_content_t
+
+
+.br
+.B httpd_squirrelmail_t
+
+	/var/lib/squirrelmail/prefs(/.*)?
+.br
+
+.br
+.B httpd_sys_rw_content_t
+
+	/etc/drupal.*
+.br
+	/var/lib/svn(/.*)?
+.br
+	/var/www/svn(/.*)?
+.br
+	/etc/dokuwiki(/.*)?
+.br
+	/var/lib/koji(/.*)?
+.br
+	/etc/mock/koji(/.*)?
+.br
+	/var/www/html/[^/]*/sites/default/files(/.*)?
+.br
+	/var/www/html/[^/]*/sites/default/settings\.php
+.br
+	/var/lib/drupal.*
+.br
+	/etc/zabbix/web(/.*)?
+.br
+	/var/log/z-push(/.*)?
+.br
+	/var/spool/gosa(/.*)?
+.br
+	/var/spool/viewvc(/.*)?
+.br
+	/var/www/moodledata(/.*)?
+.br
+	/var/www/gallery/albums(/.*)?
+.br
+	/usr/share/wordpress-mu/wp-content(/.*)?
+.br
+	/usr/share/wordpress/wp-content/uploads(/.*)?
+.br
+	/usr/share/wordpress/wp-content/upgrade(/.*)?
+.br
+	/var/www/html/configuration\.php
+.br
+
+.br
+.B httpd_tmp_t
+
+
+.br
+.B httpd_tmpfs_t
+
+
+.br
+.B httpd_user_rw_content_t
+
+
+.br
+.B httpd_var_lib_t
+
+	/var/lib/dav(/.*)?
+.br
+	/var/lib/httpd(/.*)?
+.br
+	/var/lib/z-push(/.*)?
+.br
+	/var/lib/cherokee(/.*)?
+.br
+	/var/lib/rt3/data/RT-Shredder(/.*)?
+.br
+
+.br
+.B httpd_var_run_t
+
+	/var/run/mod_.*
+.br
+	/var/run/wsgi.*
+.br
+	/var/run/httpd.*
+.br
+	/var/run/apache.*
+.br
+	/var/run/lighttpd(/.*)?
+.br
+	/var/lib/php/session(/.*)?
+.br
+	/var/run/gcache_port
+.br
+
+.br
+.B httpd_w3c_validator_rw_content_t
+
+
+.br
+.B httpdcontent
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B passenger_tmp_t
+
+
+.br
+.B passenger_var_run_t
+
+	/var/run/passenger(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B squirrelmail_spool_t
+
+	/var/spool/squirrelmail(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B zarafa_var_lib_t
+
+	/var/lib/zarafa(/.*)?
+.br
+	/var/lib/zarafa-webapp(/.*)?
+.br
+	/var/lib/zarafa-webaccess(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -1263,12 +1831,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), httpd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), httpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_smokeping_cgi_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_smokeping_cgi_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_smokeping_cgi_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_smokeping_cgi_script_selinux.8	2013-03-15 11:40:01.241151890 +0100
@@ -0,0 +1,142 @@
+.TH  "httpd_smokeping_cgi_script_selinux"  "8"  "13-01-04" "httpd_smokeping_cgi_script" "SELinux Policy documentation for httpd_smokeping_cgi_script"
+.SH "NAME"
+httpd_smokeping_cgi_script_selinux \- Security Enhanced Linux Policy for the httpd_smokeping_cgi_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_smokeping_cgi_script processes via flexible mandatory access control.
+
+The httpd_smokeping_cgi_script processes execute with the httpd_smokeping_cgi_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_smokeping_cgi_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_smokeping_cgi_script_t SELinux type can be entered via the "shell_exec_t,httpd_smokeping_cgi_script_exec_t,httpd_smokeping_cgi_script_exec_t" file types.  The default entrypoint paths for the httpd_smokeping_cgi_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/share/smokeping/cgi(/.*)?, /usr/share/smokeping/cgi(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_smokeping_cgi_script policy is very flexible allowing users to setup their httpd_smokeping_cgi_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_smokeping_cgi_script:
+
+.EX
+.B httpd_smokeping_cgi_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_smokeping_cgi_script_t
+
+can be used to make the process type httpd_smokeping_cgi_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_smokeping_cgi_script policy is very flexible allowing users to setup their httpd_smokeping_cgi_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_smokeping_cgi_script:
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_script_exec_t
+.EE
+
+- Set files with the httpd_smokeping_cgi_script_exec_t type, if you want to transition an executable to the httpd_smokeping_cgi_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_smokeping_cgi_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_smokeping_cgi_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B smokeping_var_lib_t
+
+	/var/lib/smokeping(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_smokeping_cgi_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_squid_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_squid_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_squid_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_squid_script_selinux.8	2013-03-15 11:40:07.107152024 +0100
@@ -0,0 +1,136 @@
+.TH  "httpd_squid_script_selinux"  "8"  "13-01-04" "httpd_squid_script" "SELinux Policy documentation for httpd_squid_script"
+.SH "NAME"
+httpd_squid_script_selinux \- Security Enhanced Linux Policy for the httpd_squid_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_squid_script processes via flexible mandatory access control.
+
+The httpd_squid_script processes execute with the httpd_squid_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_squid_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_squid_script_t SELinux type can be entered via the "httpd_squid_script_exec_t,shell_exec_t,httpd_squid_script_exec_t" file types.  The default entrypoint paths for the httpd_squid_script_t domain are the following:"
+
+/usr/lib/squid/cachemgr\.cgi, /usr/lib64/squid/cachemgr\.cgi, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/lib/squid/cachemgr\.cgi, /usr/lib64/squid/cachemgr\.cgi
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_squid_script policy is very flexible allowing users to setup their httpd_squid_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_squid_script:
+
+.EX
+.B httpd_squid_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_squid_script_t
+
+can be used to make the process type httpd_squid_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_squid_script policy is very flexible allowing users to setup their httpd_squid_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_squid_script:
+
+
+.EX
+.PP
+.B httpd_squid_script_exec_t
+.EE
+
+- Set files with the httpd_squid_script_exec_t type, if you want to transition an executable to the httpd_squid_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_squid_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_squid_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_squid_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_suexec_selinux.8 serefpolicy-3.7.19/man/man8/httpd_suexec_selinux.8
--- nsaserefpolicy/man/man8/httpd_suexec_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_suexec_selinux.8	2013-03-15 11:40:00.527151874 +0100
@@ -0,0 +1,144 @@
+.TH  "httpd_suexec_selinux"  "8"  "13-01-04" "httpd_suexec" "SELinux Policy documentation for httpd_suexec"
+.SH "NAME"
+httpd_suexec_selinux \- Security Enhanced Linux Policy for the httpd_suexec processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_suexec processes via flexible mandatory access control.
+
+The httpd_suexec processes execute with the httpd_suexec_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_suexec_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_suexec_t SELinux type can be entered via the "httpd_suexec_exec_t" file type.  The default entrypoint paths for the httpd_suexec_t domain are the following:"
+
+/usr/lib(64)?/apache(2)?/suexec(2)?, /usr/lib(64)?/cgi-bin/(nph-)?cgiwrap(d)?, /usr/sbin/suexec
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_suexec policy is very flexible allowing users to setup their httpd_suexec processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_suexec:
+
+.EX
+.B httpd_suexec_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_suexec_t
+
+can be used to make the process type httpd_suexec_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_suexec policy is very flexible allowing users to setup their httpd_suexec processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_suexec:
+
+
+.EX
+.PP
+.B httpd_suexec_exec_t
+.EE
+
+- Set files with the httpd_suexec_exec_t type, if you want to transition an executable to the httpd_suexec_t domain.
+
+
+.EX
+.PP
+.B httpd_suexec_tmp_t
+.EE
+
+- Set files with the httpd_suexec_tmp_t type, if you want to store httpd suexec temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_suexec_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_suexec_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_suexec(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_sys_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_sys_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_sys_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_sys_script_selinux.8	2013-03-15 11:39:57.162151797 +0100
@@ -0,0 +1,222 @@
+.TH  "httpd_sys_script_selinux"  "8"  "13-01-04" "httpd_sys_script" "SELinux Policy documentation for httpd_sys_script"
+.SH "NAME"
+httpd_sys_script_selinux \- Security Enhanced Linux Policy for the httpd_sys_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_sys_script processes via flexible mandatory access control.
+
+The httpd_sys_script processes execute with the httpd_sys_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_sys_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_sys_script_t SELinux type can be entered via the "shell_exec_t,httpd_sys_script_exec_t,httpd_sys_content_t,cifs_t,nfs_t,httpd_sys_script_exec_t,httpd_sys_content_t,httpdcontent" file types.  The default entrypoint paths for the httpd_sys_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /var/www/[^/]*/cgi-bin(/.*)?, /var/www/perl(/.*)?, /var/www/html/[^/]*/cgi-bin(/.*)?, /usr/lib/cgi-bin(/.*)?, /var/www/cgi-bin(/.*)?, /var/www/svn/hooks(/.*)?, /usr/share/wordpress/.*\.php, /usr/share/wordpress/wp-includes/.*\.php, /usr/share/mythtv/mythweather/scripts(/.*)?, /usr/share/mythweb/mythweb\.pl, /usr/share/wordpress-mu/wp-config\.php, /srv/([^/]*/)?www(/.*)?, /var/www(/.*)?, /etc/htdig(/.*)?, /srv/gallery2(/.*)?, /var/lib/trac(/.*)?, /var/lib/htdig(/.*)?, /var/www/icons(/.*)?, /usr/share/htdig(/.*)?, /usr/share/drupal.*, /var/www/svn/conf(/.*)?, /usr/share/icecast(/.*)?, /usr/share/mythweb(/.*)?, /var/lib/cacti/rra(/.*)?, /usr/share/ntop/html(/.*)?, /var/lib/graphite-web(/.*), /usr/share/mythtv/data(/.*)?, /usr/share/openca/htdocs(/.*)?, /usr/share/selinux-policy[^/]*/html(/.*)?, /var/www/[^/]*/cgi-bin(/.*)?, /var/www/perl(/.*)?, /var/www/html/[^/]*/cgi-bin(/.*)?, /usr/lib/cgi-bin(/.*)?, /var/www/cgi-bin(/.*)?, /var/www/svn/hooks(/.*)?, /usr/share/wordpress/.*\.php, /usr/share/wordpress/wp-includes/.*\.php, /usr/share/mythtv/mythweather/scripts(/.*)?, /usr/share/mythweb/mythweb\.pl, /usr/share/wordpress-mu/wp-config\.php, /srv/([^/]*/)?www(/.*)?, /var/www(/.*)?, /etc/htdig(/.*)?, /srv/gallery2(/.*)?, /var/lib/trac(/.*)?, /var/lib/htdig(/.*)?, /var/www/icons(/.*)?, /usr/share/htdig(/.*)?, /usr/share/drupal.*, /var/www/svn/conf(/.*)?, /usr/share/icecast(/.*)?, /usr/share/mythweb(/.*)?, /var/lib/cacti/rra(/.*)?, /usr/share/ntop/html(/.*)?, /var/lib/graphite-web(/.*), /usr/share/mythtv/data(/.*)?, /usr/share/openca/htdocs(/.*)?, /usr/share/selinux-policy[^/]*/html(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_sys_script policy is very flexible allowing users to setup their httpd_sys_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_sys_script:
+
+.EX
+.B httpd_sys_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_sys_script_t
+
+can be used to make the process type httpd_sys_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  httpd_sys_script policy is extremely flexible and has several booleans that allow you to manipulate the policy and run httpd_sys_script with the tightest access possible.
+
+
+.PP
+If you want to allow apache scripts to write to public content.  Directories/Files must be labeled public_rw_content_t, you must turn on the allow_httpd_sys_script_anon_write boolean.
+
+.EX
+.B setsebool -P allow_httpd_sys_script_anon_write 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow httpd_sys_script servers to read the /var/httpd_sys_script directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/httpd_sys_script(/.*)?"
+.br
+.B restorecon -F -R -v /var/httpd_sys_script
+.pp
+.TP
+Allow httpd_sys_script servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_httpd_sys_scriptd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/httpd_sys_script/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/httpd_sys_script/incoming
+
+
+.PP
+If you want to allow apache scripts to write to public content.  Directories/Files must be labeled public_rw_content_t., you must turn on the allow_httpd_sys_script_anon_write boolean.
+
+.EX
+.B setsebool -P allow_httpd_sys_script_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_sys_script policy is very flexible allowing users to setup their httpd_sys_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_sys_script:
+
+
+.EX
+.PP
+.B httpd_sys_script_exec_t
+.EE
+
+- Set files with the httpd_sys_script_exec_t type, if you want to transition an executable to the httpd_sys_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_sys_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_sys_rw_content_t
+
+	/etc/drupal.*
+.br
+	/var/lib/svn(/.*)?
+.br
+	/var/www/svn(/.*)?
+.br
+	/etc/dokuwiki(/.*)?
+.br
+	/var/lib/koji(/.*)?
+.br
+	/etc/mock/koji(/.*)?
+.br
+	/var/www/html/[^/]*/sites/default/files(/.*)?
+.br
+	/var/www/html/[^/]*/sites/default/settings\.php
+.br
+	/var/lib/drupal.*
+.br
+	/etc/zabbix/web(/.*)?
+.br
+	/var/log/z-push(/.*)?
+.br
+	/var/spool/gosa(/.*)?
+.br
+	/var/spool/viewvc(/.*)?
+.br
+	/var/www/moodledata(/.*)?
+.br
+	/var/www/gallery/albums(/.*)?
+.br
+	/usr/share/wordpress-mu/wp-content(/.*)?
+.br
+	/usr/share/wordpress/wp-content/uploads(/.*)?
+.br
+	/usr/share/wordpress/wp-content/upgrade(/.*)?
+.br
+	/var/www/html/configuration\.php
+.br
+
+.br
+.B httpd_tmp_t
+
+
+.br
+.B httpdcontent
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_sys_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_unconfined_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_unconfined_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_unconfined_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_unconfined_script_selinux.8	2013-03-15 11:39:57.435151803 +0100
@@ -0,0 +1,96 @@
+.TH  "httpd_unconfined_script_selinux"  "8"  "13-01-04" "httpd_unconfined_script" "SELinux Policy documentation for httpd_unconfined_script"
+.SH "NAME"
+httpd_unconfined_script_selinux \- Security Enhanced Linux Policy for the httpd_unconfined_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_unconfined_script processes via flexible mandatory access control.
+
+The httpd_unconfined_script processes execute with the httpd_unconfined_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_unconfined_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_unconfined_script_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,httpd_unconfined_script_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the httpd_unconfined_script_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_unconfined_script policy is very flexible allowing users to setup their httpd_unconfined_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_unconfined_script:
+
+.EX
+.B httpd_unconfined_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_unconfined_script_t
+
+can be used to make the process type httpd_unconfined_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_unconfined_script policy is very flexible allowing users to setup their httpd_unconfined_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_unconfined_script:
+
+
+.EX
+.PP
+.B httpd_unconfined_script_exec_t
+.EE
+
+- Set files with the httpd_unconfined_script_exec_t type, if you want to transition an executable to the httpd_unconfined_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_unconfined_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_unconfined_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_user_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_user_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_user_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_user_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_user_script_selinux.8	2013-03-15 11:39:58.495151827 +0100
@@ -0,0 +1,146 @@
+.TH  "httpd_user_script_selinux"  "8"  "13-01-04" "httpd_user_script" "SELinux Policy documentation for httpd_user_script"
+.SH "NAME"
+httpd_user_script_selinux \- Security Enhanced Linux Policy for the httpd_user_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_user_script processes via flexible mandatory access control.
+
+The httpd_user_script processes execute with the httpd_user_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_user_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_user_script_t SELinux type can be entered via the "httpd_user_script_exec_t,shell_exec_t,httpd_user_script_exec_t,httpdcontent" file types.  The default entrypoint paths for the httpd_user_script_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_user_script policy is very flexible allowing users to setup their httpd_user_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_user_script:
+
+.EX
+.B httpd_user_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_user_script_t
+
+can be used to make the process type httpd_user_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_user_script policy is very flexible allowing users to setup their httpd_user_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_user_script:
+
+
+.EX
+.PP
+.B httpd_user_script_exec_t
+.EE
+
+- Set files with the httpd_user_script_exec_t type, if you want to transition an executable to the httpd_user_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_user_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_user_content_t
+
+	/home/[^/]*/((www)|(web)|(public_html))(/.+)?
+.br
+
+.br
+.B httpd_user_ra_content_t
+
+
+.br
+.B httpd_user_rw_content_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_user_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_w3c_validator_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/httpd_w3c_validator_script_selinux.8 serefpolicy-3.7.19/man/man8/httpd_w3c_validator_script_selinux.8
--- nsaserefpolicy/man/man8/httpd_w3c_validator_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/httpd_w3c_validator_script_selinux.8	2013-03-15 11:40:06.547152011 +0100
@@ -0,0 +1,140 @@
+.TH  "httpd_w3c_validator_script_selinux"  "8"  "13-01-04" "httpd_w3c_validator_script" "SELinux Policy documentation for httpd_w3c_validator_script"
+.SH "NAME"
+httpd_w3c_validator_script_selinux \- Security Enhanced Linux Policy for the httpd_w3c_validator_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the httpd_w3c_validator_script processes via flexible mandatory access control.
+
+The httpd_w3c_validator_script processes execute with the httpd_w3c_validator_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep httpd_w3c_validator_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The httpd_w3c_validator_script_t SELinux type can be entered via the "httpd_w3c_validator_script_exec_t,shell_exec_t,httpd_w3c_validator_script_exec_t" file types.  The default entrypoint paths for the httpd_w3c_validator_script_t domain are the following:"
+
+/usr/share/w3c-markup-validator/cgi-bin(/.*)?, /usr/lib/cgi-bin/check, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/share/w3c-markup-validator/cgi-bin(/.*)?, /usr/lib/cgi-bin/check
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux httpd_w3c_validator_script policy is very flexible allowing users to setup their httpd_w3c_validator_script processes in as secure a method as possible.
+.PP
+The following process types are defined for httpd_w3c_validator_script:
+
+.EX
+.B httpd_w3c_validator_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a httpd_w3c_validator_script_t
+
+can be used to make the process type httpd_w3c_validator_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux httpd_w3c_validator_script policy is very flexible allowing users to setup their httpd_w3c_validator_script processes in as secure a method as possible.
+.PP
+The following file types are defined for httpd_w3c_validator_script:
+
+
+.EX
+.PP
+.B httpd_w3c_validator_script_exec_t
+.EE
+
+- Set files with the httpd_w3c_validator_script_exec_t type, if you want to transition an executable to the httpd_w3c_validator_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type httpd_w3c_validator_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_w3c_validator_rw_content_t
+
+
+.br
+.B httpd_w3c_validator_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), httpd_w3c_validator_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, httpd_selinux(8), httpd_selinux(8), httpd_apcupsd_cgi_script_selinux(8), httpd_awstats_script_selinux(8), httpd_bugzilla_script_selinux(8), httpd_cobbler_script_selinux(8), httpd_cvs_script_selinux(8), httpd_dirsrvadmin_script_selinux(8), httpd_dspam_script_selinux(8), httpd_git_script_selinux(8), httpd_helper_selinux(8), httpd_mediawiki_script_selinux(8), httpd_munin_script_selinux(8), httpd_nagios_script_selinux(8), httpd_nutups_cgi_script_selinux(8), httpd_openshift_script_selinux(8), httpd_php_selinux(8), httpd_prewikka_script_selinux(8), httpd_rotatelogs_selinux(8), httpd_smokeping_cgi_script_selinux(8), httpd_squid_script_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/hwclock_selinux.8 serefpolicy-3.7.19/man/man8/hwclock_selinux.8
--- nsaserefpolicy/man/man8/hwclock_selinux.8	2013-03-15 11:41:11.945153503 +0100
+++ serefpolicy-3.7.19/man/man8/hwclock_selinux.8	2013-03-15 11:40:00.496151873 +0100
@@ -1,25 +1,55 @@
-.TH  "hwclock_selinux"  "8"  "hwclock" "dwalsh@redhat.com" "hwclock SELinux Policy documentation"
+.TH  "hwclock_selinux"  "8"  "13-01-04" "hwclock" "SELinux Policy documentation for hwclock"
 .SH "NAME"
 hwclock_selinux \- Security Enhanced Linux Policy for the hwclock processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the hwclock processes via flexible mandatory access control.
 
+The hwclock processes execute with the hwclock_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep hwclock_t
+
+
+.SH "ENTRYPOINTS"
+
+The hwclock_t SELinux type can be entered via the "hwclock_exec_t" file type.  The default entrypoint paths for the hwclock_t domain are the following:"
+
+/sbin/hwclock
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux hwclock policy is very flexible allowing users to setup their hwclock processes in as secure a method as possible.
+.PP
+The following process types are defined for hwclock:
+
+.EX
+.B hwclock_t
+.EE
+.PP
+Note:
+.B semanage permissive -a hwclock_t
+
+can be used to make the process type hwclock_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux hwclock policy is very flexible allowing users to setup their hwclock processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for hwclock:
 
 
 .EX
 .PP
-.B hwclock_exec_t 
+.B hwclock_exec_t
 .EE
 
 - Set files with the hwclock_exec_t type, if you want to transition an executable to the hwclock_t domain.
@@ -27,28 +57,62 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux hwclock policy is very flexible allowing users to setup their hwclock processes in as secure a method as possible.
-.PP 
-The following process types are defined for hwclock:
+.SH "MANAGED FILES"
 
-.EX
-.B hwclock_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type hwclock_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B adjtime_t
+
+	/etc/adjtime
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +125,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), hwclock(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), hwclock(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/iceauth_selinux.8 serefpolicy-3.7.19/man/man8/iceauth_selinux.8
--- nsaserefpolicy/man/man8/iceauth_selinux.8	2013-03-15 11:41:12.230153510 +0100
+++ serefpolicy-3.7.19/man/man8/iceauth_selinux.8	2013-03-15 11:40:07.096152023 +0100
@@ -1,37 +1,63 @@
-.TH  "iceauth_selinux"  "8"  "iceauth" "dwalsh@redhat.com" "iceauth SELinux Policy documentation"
+.TH  "iceauth_selinux"  "8"  "13-01-04" "iceauth" "SELinux Policy documentation for iceauth"
 .SH "NAME"
 iceauth_selinux \- Security Enhanced Linux Policy for the iceauth processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the iceauth processes via flexible mandatory access control.
 
+The iceauth processes execute with the iceauth_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep iceauth_t
+
+
+.SH "ENTRYPOINTS"
+
+The iceauth_t SELinux type can be entered via the "iceauth_exec_t" file type.  The default entrypoint paths for the iceauth_t domain are the following:"
+
+/usr/bin/iceauth, /usr/X11R6/bin/iceauth
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux iceauth policy is very flexible allowing users to setup their iceauth processes in as secure a method as possible.
+.PP
+The following process types are defined for iceauth:
+
+.EX
+.B iceauth_t
+.EE
+.PP
+Note:
+.B semanage permissive -a iceauth_t
+
+can be used to make the process type iceauth_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux iceauth policy is very flexible allowing users to setup their iceauth processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for iceauth:
 
 
 .EX
 .PP
-.B iceauth_exec_t 
+.B iceauth_exec_t
 .EE
 
 - Set files with the iceauth_exec_t type, if you want to transition an executable to the iceauth_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/iceauth, /usr/X11R6/bin/iceauth
 
 .EX
 .PP
-.B iceauth_home_t 
+.B iceauth_home_t
 .EE
 
 - Set files with the iceauth_home_t type, if you want to store iceauth files in the users home directory.
@@ -39,28 +65,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux iceauth policy is very flexible allowing users to setup their iceauth processes in as secure a method as possible.
-.PP 
-The following process types are defined for iceauth:
+.SH "MANAGED FILES"
 
-.EX
-.B iceauth_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type iceauth_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B iceauth_home_t
+
+	/home/[^/]*/\.DCOP.*
+.br
+	/home/[^/]*/\.ICEauthority.*
+.br
+	/home/[^/]*/\.ICEauthority.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -73,11 +141,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), iceauth(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), iceauth(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/icecast_selinux.8 serefpolicy-3.7.19/man/man8/icecast_selinux.8
--- nsaserefpolicy/man/man8/icecast_selinux.8	2013-03-15 11:41:11.846153501 +0100
+++ serefpolicy-3.7.19/man/man8/icecast_selinux.8	2013-03-15 11:39:58.076151818 +0100
@@ -1,16 +1,40 @@
-.TH  "icecast_selinux"  "8"  "icecast" "dwalsh@redhat.com" "icecast SELinux Policy documentation"
+.TH  "icecast_selinux"  "8"  "13-01-04" "icecast" "SELinux Policy documentation for icecast"
 .SH "NAME"
 icecast_selinux \- Security Enhanced Linux Policy for the icecast processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the icecast processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B icecast
-( ShoutCast compatible streaming media server)
-processes via flexible mandatory access
-control.  
+The icecast processes execute with the icecast_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep icecast_t
+
+
+.SH "ENTRYPOINTS"
+
+The icecast_t SELinux type can be entered via the "icecast_exec_t" file type.  The default entrypoint paths for the icecast_t domain are the following:"
+
+/usr/bin/icecast
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux icecast policy is very flexible allowing users to setup their icecast processes in as secure a method as possible.
+.PP
+The following process types are defined for icecast:
+
+.EX
+.B icecast_t
+.EE
+.PP
+Note:
+.B semanage permissive -a icecast_t
+
+can be used to make the process type icecast_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  icecast policy is extremely flexible and has several booleans that allow you to manipulate the policy and run icecast with the tightest access possible.
@@ -23,20 +47,27 @@
 .B setsebool -P icecast_connect_any 1
 .EE
 
+.PP
+If you want to allow icecast to connect to all ports, not just sound ports, you must turn on the icecast_connect_any boolean.
+
+.EX
+.B setsebool -P icecast_connect_any 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux icecast policy is very flexible allowing users to setup their icecast processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for icecast:
 
 
 .EX
 .PP
-.B icecast_exec_t 
+.B icecast_exec_t
 .EE
 
 - Set files with the icecast_exec_t type, if you want to transition an executable to the icecast_t domain.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B icecast_initrc_exec_t 
+.B icecast_initrc_exec_t
 .EE
 
 - Set files with the icecast_initrc_exec_t type, if you want to transition an executable to the icecast_initrc_t domain.
@@ -52,7 +83,7 @@
 
 .EX
 .PP
-.B icecast_log_t 
+.B icecast_log_t
 .EE
 
 - Set files with the icecast_log_t type, if you want to treat the data as icecast log data, usually stored under the /var/log directory.
@@ -60,7 +91,7 @@
 
 .EX
 .PP
-.B icecast_var_run_t 
+.B icecast_var_run_t
 .EE
 
 - Set files with the icecast_var_run_t type, if you want to store the icecast files under the /run directory.
@@ -68,28 +99,76 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux icecast policy is very flexible allowing users to setup their icecast processes in as secure a method as possible.
-.PP 
-The following process types are defined for icecast:
+.SH "MANAGED FILES"
 
-.EX
-.B icecast_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type icecast_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B icecast_log_t
+
+	/var/log/icecast(/.*)?
+.br
+
+.br
+.B icecast_var_run_t
+
+	/var/run/icecast(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -105,12 +184,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), icecast(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), icecast(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ifconfig_selinux.8 serefpolicy-3.7.19/man/man8/ifconfig_selinux.8
--- nsaserefpolicy/man/man8/ifconfig_selinux.8	2013-03-15 11:41:12.060153506 +0100
+++ serefpolicy-3.7.19/man/man8/ifconfig_selinux.8	2013-03-15 11:40:01.901151905 +0100
@@ -1,58 +1,130 @@
-.TH  "ifconfig_selinux"  "8"  "ifconfig" "dwalsh@redhat.com" "ifconfig SELinux Policy documentation"
+.TH  "ifconfig_selinux"  "8"  "13-01-04" "ifconfig" "SELinux Policy documentation for ifconfig"
 .SH "NAME"
 ifconfig_selinux \- Security Enhanced Linux Policy for the ifconfig processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ifconfig processes via flexible mandatory access control.
 
+The ifconfig processes execute with the ifconfig_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ifconfig_t
+
+
+.SH "ENTRYPOINTS"
+
+The ifconfig_t SELinux type can be entered via the "ifconfig_exec_t" file type.  The default entrypoint paths for the ifconfig_t domain are the following:"
+
+/bin/ip, /sbin/ip, /sbin/tc, /usr/sbin/tc, /sbin/ethtool, /sbin/ifconfig, /sbin/iwconfig, /sbin/mii-tool, /sbin/ipx_interface, /sbin/ipx_configure, /sbin/ipx_internal_net
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ifconfig policy is very flexible allowing users to setup their ifconfig processes in as secure a method as possible.
+.PP
+The following process types are defined for ifconfig:
+
+.EX
+.B ifconfig_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ifconfig_t
+
+can be used to make the process type ifconfig_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ifconfig policy is very flexible allowing users to setup their ifconfig processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ifconfig:
 
 
 .EX
 .PP
-.B ifconfig_exec_t 
+.B ifconfig_exec_t
 .EE
 
 - Set files with the ifconfig_exec_t type, if you want to transition an executable to the ifconfig_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/tc, /sbin/ipx_configure, /sbin/ipx_interface, /usr/sbin/tc, /sbin/ipx_internal_net, /bin/ip, /sbin/iwconfig, /sbin/ifconfig, /sbin/mii-tool, /sbin/ethtool, /sbin/ip
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ifconfig policy is very flexible allowing users to setup their ifconfig processes in as secure a method as possible.
-.PP 
-The following process types are defined for ifconfig:
+.SH "MANAGED FILES"
 
-.EX
-.B ifconfig_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ifconfig_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B ipsec_var_run_t
+
+	/var/racoon(/.*)?
+.br
+	/var/run/pluto(/.*)?
+.br
+	/var/run/racoon\.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +137,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ifconfig(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ifconfig(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/inetd_child_selinux.8 serefpolicy-3.7.19/man/man8/inetd_child_selinux.8
--- nsaserefpolicy/man/man8/inetd_child_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/inetd_child_selinux.8	2013-03-15 11:39:57.624151807 +0100
@@ -0,0 +1,140 @@
+.TH  "inetd_child_selinux"  "8"  "13-01-04" "inetd_child" "SELinux Policy documentation for inetd_child"
+.SH "NAME"
+inetd_child_selinux \- Security Enhanced Linux Policy for the inetd_child processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the inetd_child processes via flexible mandatory access control.
+
+The inetd_child processes execute with the inetd_child_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep inetd_child_t
+
+
+.SH "ENTRYPOINTS"
+
+The inetd_child_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,inetd_child_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the inetd_child_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/in\..*d, /usr/local/lib/pysieved/pysieved.*\.py, /usr/sbin/identd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux inetd_child policy is very flexible allowing users to setup their inetd_child processes in as secure a method as possible.
+.PP
+The following process types are defined for inetd_child:
+
+.EX
+.B inetd_child_t
+.EE
+.PP
+Note:
+.B semanage permissive -a inetd_child_t
+
+can be used to make the process type inetd_child_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux inetd_child policy is very flexible allowing users to setup their inetd_child processes in as secure a method as possible.
+.PP
+The following file types are defined for inetd_child:
+
+
+.EX
+.PP
+.B inetd_child_exec_t
+.EE
+
+- Set files with the inetd_child_exec_t type, if you want to transition an executable to the inetd_child_t domain.
+
+
+.EX
+.PP
+.B inetd_child_tmp_t
+.EE
+
+- Set files with the inetd_child_tmp_t type, if you want to store inetd child temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B inetd_child_var_run_t
+.EE
+
+- Set files with the inetd_child_var_run_t type, if you want to store the inetd child files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports.
+.PP
+You can see the types associated with a port by using the following command:
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports.
+SELinux inetd_child policy is very flexible allowing users to setup their inetd_child processes in as secure a method as possible.
+.PP
+The following port types are defined for inetd_child:
+
+.EX
+.TP 5
+.B inetd_child_port_t
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 1,7,9,13,19,37,512,543,544,891,892,2105,5666
+.EE
+udp 1,7,9,13,19,37,891,892
+.EE
+.SH "MANAGED FILES"
+
+The SELinux process type inetd_child_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), inetd_child(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, inetd_selinux(8), inetd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/inetd_selinux.8 serefpolicy-3.7.19/man/man8/inetd_selinux.8
--- nsaserefpolicy/man/man8/inetd_selinux.8	2013-03-15 11:41:11.013153482 +0100
+++ serefpolicy-3.7.19/man/man8/inetd_selinux.8	2013-03-15 11:39:55.249151753 +0100
@@ -1,43 +1,63 @@
-.TH  "inetd_selinux"  "8"  "inetd" "dwalsh@redhat.com" "inetd SELinux Policy documentation"
+.TH  "inetd_selinux"  "8"  "13-01-04" "inetd" "SELinux Policy documentation for inetd"
 .SH "NAME"
 inetd_selinux \- Security Enhanced Linux Policy for the inetd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the inetd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B inetd
-(Internet services daemon)
-processes via flexible mandatory access
-control.  
+The inetd processes execute with the inetd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep inetd_t
+
+
+.SH "ENTRYPOINTS"
+
+The inetd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,inetd_exec_t" file types.  The default entrypoint paths for the inetd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/inetd, /usr/sbin/xinetd, /usr/sbin/rlinetd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
+.PP
+The following process types are defined for inetd:
+
+.EX
+.B inetd_t, inetd_child_t
+.EE
+.PP
+Note:
+.B semanage permissive -a inetd_t
+
+can be used to make the process type inetd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for inetd:
 
 
 .EX
 .PP
-.B inetd_child_exec_t 
+.B inetd_child_exec_t
 .EE
 
 - Set files with the inetd_child_exec_t type, if you want to transition an executable to the inetd_child_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/identd, /usr/local/lib/pysieved/pysieved.*\.py, /usr/sbin/in\..*d
 
 .EX
 .PP
-.B inetd_child_tmp_t 
+.B inetd_child_tmp_t
 .EE
 
 - Set files with the inetd_child_tmp_t type, if you want to store inetd child temporary files in the /tmp directories.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B inetd_child_var_run_t 
+.B inetd_child_var_run_t
 .EE
 
 - Set files with the inetd_child_var_run_t type, if you want to store the inetd child files under the /run directory.
@@ -53,19 +73,15 @@
 
 .EX
 .PP
-.B inetd_exec_t 
+.B inetd_exec_t
 .EE
 
 - Set files with the inetd_exec_t type, if you want to transition an executable to the inetd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/inetd, /usr/sbin/xinetd, /usr/sbin/rlinetd
 
 .EX
 .PP
-.B inetd_log_t 
+.B inetd_log_t
 .EE
 
 - Set files with the inetd_log_t type, if you want to treat the data as inetd log data, usually stored under the /var/log directory.
@@ -73,7 +89,7 @@
 
 .EX
 .PP
-.B inetd_tmp_t 
+.B inetd_tmp_t
 .EE
 
 - Set files with the inetd_tmp_t type, if you want to store inetd temporary files in the /tmp directories.
@@ -81,7 +97,7 @@
 
 .EX
 .PP
-.B inetd_var_run_t 
+.B inetd_var_run_t
 .EE
 
 - Set files with the inetd_var_run_t type, if you want to store the inetd files under the /run directory.
@@ -89,51 +105,45 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for inetd:
 
 .EX
 .TP 5
-.B inetd_child_port_t 
+.B inetd_child_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 1,7,9,13,19,37,512,543,544,891,892,2105,5666
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
-.PP 
-The following process types are defined for inetd:
-
-.EX
-.B inetd_t, inetd_child_t 
+udp 1,7,9,13,19,37,891,892
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type inetd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -149,11 +159,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), inetd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), inetd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, inetd_child_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/initrc_selinux.8 serefpolicy-3.7.19/man/man8/initrc_selinux.8
--- nsaserefpolicy/man/man8/initrc_selinux.8	2013-03-15 11:41:12.158153508 +0100
+++ serefpolicy-3.7.19/man/man8/initrc_selinux.8	2013-03-15 11:40:04.323151960 +0100
@@ -1,25 +1,55 @@
-.TH  "initrc_selinux"  "8"  "initrc" "dwalsh@redhat.com" "initrc SELinux Policy documentation"
+.TH  "initrc_selinux"  "8"  "13-01-04" "initrc" "SELinux Policy documentation for initrc"
 .SH "NAME"
 initrc_selinux \- Security Enhanced Linux Policy for the initrc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the initrc processes via flexible mandatory access control.
 
+The initrc processes execute with the initrc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep initrc_t
+
+
+.SH "ENTRYPOINTS"
+
+The initrc_t SELinux type can be entered via the "mtrr_device_t,ksmtuned_initrc_exec_t,tuned_initrc_exec_t,fsdaemon_initrc_exec_t,nova_scheduler_initrc_exec_t,tgtd_initrc_exec_t,hddtemp_initrc_exec_t,rhsmcertd_initrc_exec_t,svnserve_initrc_exec_t,dovecot_initrc_exec_t,zebra_initrc_exec_t,lldpad_initrc_exec_t,munin_initrc_exec_t,soundd_initrc_exec_t,unlabeled_t,proc_type,uuidd_initrc_exec_t,postfix_initrc_exec_t,aisexec_initrc_exec_t,auditd_initrc_exec_t,ctdbd_initrc_exec_t,glusterd_initrc_exec_t,saslauthd_initrc_exec_t,postgresql_initrc_exec_t,kerberos_initrc_exec_t,apcupsd_initrc_exec_t,cupsd_initrc_exec_t,wdmd_initrc_exec_t,keystone_initrc_exec_t,nova_direct_initrc_exec_t,exim_initrc_exec_t,ftpd_initrc_exec_t,nagios_initrc_exec_t,cgred_initrc_exec_t,shorewall_initrc_exec_t,likewise_initrc_exec_t,cfengine_initrc_exec_t,initrc_exec_t,postgrey_initrc_exec_t,avahi_initrc_exec_t,gpsd_initrc_exec_t,privoxy_initrc_exec_t,psad_initrc_exec_t,pppd_initrc_exec_t,canna_initrc_exec_t,shell_exec_t,samba_initrc_exec_t,nova_ajax_initrc_exec_t,pacemaker_initrc_exec_t,rgmanager_initrc_exec_t,amavis_initrc_exec_t,tor_initrc_exec_t,arpwatch_initrc_exec_t,radvd_initrc_exec_t,abrt_initrc_exec_t,ipsec_initrc_exec_t,puppet_initrc_exec_t,pads_initrc_exec_t,named_initrc_exec_t,squid_initrc_exec_t,cvs_initrc_exec_t,rwho_initrc_exec_t,nova_cert_initrc_exec_t,l2tpd_initrc_exec_t,portreserve_initrc_exec_t,afs_initrc_exec_t,spamd_initrc_exec_t,nis_initrc_exec_t,sysctl_type,icecast_initrc_exec_t,rpcd_initrc_exec_t,mpd_initrc_exec_t,nslcd_initrc_exec_t,slpd_initrc_exec_t,memcached_initrc_exec_t,qpidd_initrc_exec_t,smokeping_initrc_exec_t,bcfg2_initrc_exec_t,fail2ban_initrc_exec_t,sssd_initrc_exec_t,zabbix_initrc_exec_t,sshd_initrc_exec_t,dspam_initrc_exec_t,setrans_initrc_exec_t,cmirrord_initrc_exec_t,iptables_initrc_exec_t,NetworkManager_initrc_exec_t,rpcbind_initrc_exec_t,jabberd_initrc_exec_t,vhostmd_initrc_exec_t,filesystem_type,certmaster_initrc_exec_t,mysqld_initrc_exec_t,crond_initrc_exec_t,asterisk_initrc_exec_t,corosync_initrc_exec_t,ypbind_initrc_exec_t,clvmd_initrc_exec_t,dhcpc_helper_exec_t,prelude_initrc_exec_t,nova_objectstore_initrc_exec_t,file_type,dnsmasq_initrc_exec_t,slapd_initrc_exec_t,clamd_initrc_exec_t,syslogd_initrc_exec_t,ulogd_initrc_exec_t,sendmail_initrc_exec_t,nova_network_initrc_exec_t,openvpn_initrc_exec_t,quantum_initrc_exec_t,cobblerd_initrc_exec_t,bitlbee_initrc_exec_t,sanlock_initrc_exec_t,cgconfig_initrc_exec_t,mongod_initrc_exec_t,automount_initrc_exec_t,roundup_initrc_exec_t,certmonger_initrc_exec_t,snort_initrc_exec_t,snmpd_initrc_exec_t,glance_api_initrc_exec_t,ntop_initrc_exec_t,ntpd_initrc_exec_t,aiccu_initrc_exec_t,nscd_initrc_exec_t,mysqlmanagerd_initrc_exec_t,nova_api_initrc_exec_t,bluetooth_initrc_exec_t,chronyd_initrc_exec_t,kerneloops_initrc_exec_t,boinc_initrc_exec_t,nfsd_initrc_exec_t,matahari_initrc_exec_t,denyhosts_initrc_exec_t,varnishlog_initrc_exec_t,nova_console_initrc_exec_t,dictd_initrc_exec_t,ricci_initrc_exec_t,innd_initrc_exec_t,pingd_initrc_exec_t,nova_compute_initrc_exec_t,iwhd_initrc_exec_t,nova_volume_initrc_exec_t,radiusd_initrc_exec_t,dhcpd_initrc_exec_t,lircd_initrc_exec_t,cyrus_initrc_exec_t,varnishd_initrc_exec_t,virtd_initrc_exec_t,piranha_pulse_initrc_exec_t,rhnsd_initrc_exec_t,glance_registry_initrc_exec_t,nova_vncproxy_initrc_exec_t,puppetmaster_initrc_exec_t,httpd_initrc_exec_t,kdump_initrc_exec_t,bin_t" file types.  The default entrypoint paths for the initrc_t domain are the following:"
+
+/dev/cpu/mtrr, /etc/rc\.d/init\.d/ksmtuned, /etc/rc\.d/init\.d/tuned, /etc/rc\.d/init\.d/smartd, /etc/rc\.d/etc/init\.d/openstack-nova-scheduler, /etc/rc\.d/init\.d/tgtd, /etc/rc\.d/init\.d/hddtemp, /etc/rc\.d/init\.d/rhsmcertd, /etc/rc.d/init.d/svnserve, /etc/rc\.d/init\.d/dovecot, /etc/rc\.d/init\.d/bgpd, /etc/rc\.d/init\.d/ripd, /etc/rc\.d/init\.d/ospfd, /etc/rc\.d/init\.d/zebra, /etc/rc\.d/init\.d/ospf6d, /etc/rc\.d/init\.d/ripngd, /etc/rc\.d/init\.d/lldpad, /etc/rc\.d/init\.d/munin-node, /etc/rc\.d/init\.d/nasd, /etc/rc\.d/init\.d/uuidd, /etc/rc\.d/init\.d/postfix, /etc/rc\.d/init\.d/openais, /etc/rc\.d/init\.d/auditd, /etc/rc\.d/init\.d/ctdb, /usr/sbin/glusterd, /etc/rc\.d/init\.d/glusterd, /etc/rc\.d/init\.d/saslauthd, /etc/rc\.d/init\.d/(se)?postgresql, /etc/rc\.d/init\.d/kprop, /etc/rc\.d/init\.d/kadmin, /etc/rc\.d/init\.d/krb524d, /etc/rc\.d/init\.d/krb5kdc, /etc/rc\.d/init\.d/apcupsd, /etc/rc\.d/init\.d/cups, /etc/rc\.d/init\.d/wdmd, /etc/rc\.d/init\.d/keystone, /etc/rc\.d/etc/init\.d/openstack-nova-direct-api, /etc/rc\.d/init\.d/exim, /etc/rc\.d/init\.d/vsftpd, /etc/rc\.d/init\.d/proftpd, /etc/rc\.d/init\.d/nrpe, /etc/rc\.d/init\.d/nagios, /etc/rc\.d/init\.d/cgred, /etc/rc\.d/init\.d/shorewall, /etc/rc\.d/init\.d/shorewall-lite, /etc/rc\.d/init\.d/lwiod, /etc/rc\.d/init\.d/lwsmd, /etc/rc\.d/init\.d/lsassd, /etc/rc\.d/init\.d/lwregd, /etc/rc\.d/init\.d/dcerpcd, /etc/rc\.d/init\.d/srvsvcd, /etc/rc\.d/init\.d/eventlogd, /etc/rc\.d/init\.d/netlogond, /etc/rc\.d/init\.d/cf-execd, /etc/rc\.d/init\.d/cf-serverd, /etc/rc\.d/init\.d/cf-monitord, /etc/init\.d/.*, /etc/rc\.d/rc\.[^/]+, /etc/rc\.d/init\.d/.*, /usr/libexec/dcc/stop-.*, /usr/libexec/dcc/start-.*, /etc/rc\.d/rc, /etc/X11/prefdm, /usr/sbin/startx, /usr/bin/sepg_ctl, /usr/sbin/apachectl, /usr/sbin/ldap-agent, /usr/sbin/start-dirsrv, /usr/sbin/open_init_pty, /usr/sbin/restart-dirsrv, /etc/sysconfig/network-scripts/ifup-ipsec, /usr/share/system-config-services/system-config-services-mechanism\.py, /etc/rc\.d/init\.d/postgrey, /etc/rc\.d/init\.d/avahi.*, /etc/rc\.d/init\.d/gpsd, /etc/rc\.d/init\.d/privoxy, /etc/rc\.d/init\.d/psad, /etc/ppp/(auth|ip(v6|x)?)-(up|down), /etc/rc\.d/init\.d/ppp, /etc/rc\.d/init\.d/canna, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /etc/rc\.d/init\.d/nmb, /etc/rc\.d/init\.d/smb, /etc/rc\.d/init\.d/winbind, /etc/rc\.d/init\.d/pacemaker, /etc/rc\.d/init\.d/cpglockd, /etc/rc\.d/init\.d/rgmanager, /etc/rc\.d/init\.d/heartbeat, /etc/rc\.d/init\.d/amavis, /etc/rc\.d/init\.d/amavisd-snmp, /etc/rc\.d/init\.d/tor, /etc/rc\.d/init\.d/arpwatch, /etc/rc\.d/init\.d/radvd, /etc/rc\.d/init\.d/abrt, /etc/rc\.d/init\.d/ipsec, /etc/rc\.d/init\.d/racoon, /etc/rc\.d/init\.d/puppet, /etc/rc\.d/init\.d/pads, /etc/rc\.d/init\.d/named, /etc/rc\.d/init\.d/unbound, /etc/rc\.d/init\.d/squid, /etc/rc\.d/init\.d/rwhod, /etc/rc\.d/etc/init\.d/openstack-nova-cert, /etc/rc\.d/init\.d/xl2tpd, /etc/rc\.d/init\.d/prol2tpd, /etc/rc\.d/init\.d/openl2tpd, /etc/rc\.d/init\.d/portreserve, /etc/rc\.d/init\.d/afs, /etc/rc\.d/init\.d/openafs-client, /etc/rc\.d/init\.d/mimedefang.*, /etc/rc\.d/init\.d/spamd, /etc/rc\.d/init\.d/pyzord, /etc/rc\.d/init\.d/spamassassin, /etc/rc\.d/init\.d/ypserv, /etc/rc\.d/init\.d/ypxfrd, /etc/rc\.d/init\.d/yppasswdd, /etc/rc\.d/init\.d/icecast, /etc/rc\.d/init\.d/nfslock, /etc/rc\.d/init\.d/rpcidmapd, /etc/rc\.d/init\.d/mpd, /etc/rc\.d/init\.d/nslcd, /etc/rc\.d/init\.d/slpd, /etc/rc\.d/init\.d/memcached, /etc/rc\.d/init\.d/qpidd, /etc/rc\.d/init\.d/smokeping, /etc/rc\.d/init\.d/bcfg2, /etc/rc\.d/init\.d/fail2ban, /etc/rc\.d/init\.d/sssd, /etc/rc\.d/init\.d/zabbix, /etc/rc\.d/init\.d/sshd, /etc/rc\.d/init\.d/dspam, /etc/rc\.d/init\.d/mcstrans, /etc/rc\.d/init\.d/cmirrord, /etc/rc\.d/init\.d/ip6?tables, /usr/libexec/nm-dispatcher.action, /etc/NetworkManager/dispatcher\.d(/.*), /etc/rc\.d/init\.d/wicd, /etc/rc\.d/init\.d/rpcbind, /etc/rc\.d/init\.d/jabber, /etc/rc\.d/init\.d/vhostmd, /etc/rc\.d/init\.d/certmaster, /etc/rc\.d/init\.d/mysqld, /etc/rc\.d/init\.d/atd, /etc/rc\.d/init\.d/asterisk, /etc/rc\.d/init\.d/corosync, /etc/rc\.d/init\.d/ypbind, /etc/firestarter/firestarter\.sh, /etc/rc\.d/init\.d/prelude-lml, /etc/rc\.d/init\.d/prelude-manager, /etc/rc\.d/init\.d/prelude-correlator, /etc/rc\.d/etc/init\.d/openstack-nova-objectstore, all files on the system, /etc/rc\.d/init\.d/dnsmasq, /etc/rc\.d/init\.d/slapd, /etc/rc\.d/init\.d/clamd-wrapper, /etc/rc\.d/init\.d/rsyslog, /etc/rc\.d/init\.d/ulogd, /etc/rc\.d/init\.d/sendmail, /etc/rc\.d/etc/init\.d/openstack-nova-network, /etc/rc\.d/init\.d/openvpn, /etc/rc\.d/init\.d/quantum-server, /etc/rc\.d/init\.d/cobblerd, /etc/rc\.d/init\.d/bitlbee, /etc/rc\.d/init\.d/sanlock, /etc/rc\.d/init\.d/cgconfig, /etc/rc\.d/init\.d/mongod, /etc/rc\.d/init\.d/autofs, /etc/rc\.d/init\.d/roundup, /etc/rc\.d/init\.d/certmonger, /etc/rc\.d/init\.d/snortd, /etc/rc\.d/init\.d/snmpd, /etc/rc\.d/init\.d/snmptrapd, /etc/rc\.d/init\.d/openstack-glance-api, /etc/rc\.d/init\.d/ntpd, /etc/rc\.d/init\.d/aiccu, /etc/rc\.d/init\.d/nscd, /etc/rc\.d/init\.d/mysqlmanager, /etc/rc\.d/etc/init\.d/openstack-nova-api, /etc/rc\.d/etc/init\.d/openstack-nova-metadata-api, /etc/rc\.d/init\.d/dund, /etc/rc\.d/init\.d/pand, /etc/rc\.d/init\.d/bluetooth, /etc/rc\.d/init\.d/chronyd, /etc/rc\.d/init\.d/kerneloops, /etc/rc\.d/init\.d/boinc-client, /etc/rc\.d/init\.d/nfs, /etc/rc\.d/init\.d/matahari-net, /etc/rc\.d/init\.d/matahari-rpc, /etc/rc\.d/init\.d/matahari-host, /etc/rc\.d/init\.d/matahari-broker, /etc/rc\.d/init\.d/matahari-network, /etc/rc\.d/init\.d/matahari-service, /etc/rc\.d/init\.d/matahari-sysconfig, /etc/rc\.d/init\.d/matahari-sysconfig-console, /etc/rc\.d/init\.d/denyhosts, /etc/rc\.d/init\.d/varnishlog, /etc/rc\.d/init\.d/varnishncsa, /etc/rc\.d/etc/init\.d/openstack-nova-console, /etc/rc\.d/etc/init\.d/openstack-nova-consoleauth, /etc/rc\.d/init\.d/dictd, /etc/rc\.d/init\.d/ricci, /etc/rc\.d/init\.d/innd, /etc/rc\.d/init\.d/whatsup-pingd, /etc/rc\.d/init\.d/iwhd, /etc/rc\.d/etc/init\.d/openstack-nova-volume, /etc/rc\.d/init\.d/radiusd, /etc/rc\.d/init\.d/dhcpd(6)?, /etc/rc\.d/init\.d/lirc, /etc/rc\.d/init\.d/cyrus-imapd, /etc/rc\.d/init\.d/varnish, /etc/rc\.d/init\.d/libvirtd, /etc/rc\.d/init\.d/pulse, /etc/rc\.d/init\.d/rhnsd, /etc/rc\.d/init\.d/openstack-glance-registry, /etc/rc\.d/etc/init\.d/openstack-nova-xvpvncproxy, /etc/rc\.d/init\.d/puppetmaster, /etc/init\.d/cherokee, /etc/rc\.d/init\.d/httpd, /etc/rc\.d/init\.d/lighttpd, /etc/rc\.d/init\.d/kdump, /bin/.*, /opt/(.*/)?bin(/.*)?, /usr/(.*/)?Bin(/.*)?, /usr/(.*/)?bin(/.*)?, /usr/(.*/)?sbin(/.*)?, /opt/(.*/)?sbin(/.*)?, /opt/(.*/)?libexec(/.*)?, /sbin/.*, /usr/lib(64)?/dpkg/.+, /usr/lib(64)?/rpm/rpmd, /usr/lib(64)?/rpm/rpmk, /usr/lib(64)?/rpm/rpmv, /usr/lib(64)?/rpm/rpmq, /usr/lib(64)?/ipsec/.*, /usr/lib(.*/)?bin(/.*)?, /usr/lib(64)?/cups(/.*)?, /usr/lib(.*/)?sbin(/.*)?, /usr/lib(64)?/xfce4(/.*)?, /usr/lib(64)?/sftp-server, /usr/lib(64)?/xen/bin(/.*)?, /usr/lib(64)?/courier(/.*)?, /usr/lib(64)?/apt/methods.+, /usr/lib(64)?/pm-utils(/.*)?, /usr/lib(64)?/news/bin(/.*)?, /usr/lib(64)?/cyrus-imapd/.*, /usr/lib(64)?/debug/bin(/.*)?, /usr/lib(64)?/debug/sbin(/.*)?, /usr/lib(64)?/misc/sftp-server, /usr/lib(64)?/portage/bin(/.*)?, /usr/lib(64)?/mailman/bin(/.*)?, /usr/lib(64)?/emacsen-common/.*, /usr/lib(64)?/mailman/mail(/.*)?, /usr/lib(64)?/debug/usr/bin(/.*)?, /usr/lib(64)?/nspluginwrapper/np.*, /usr/lib(64)?/nagios/plugins(/.*)?, /usr/lib(64)?/[^/]*/run-mozilla\.sh, /usr/lib(64)?/debug/usr/sbin(/.*)?, /usr/lib(64)?/vte/gnome-pty-helper, /usr/lib(64)?/gimp/.*/plug-ins(/.*)?, /usr/lib(64)?/netsaint/plugins(/.*)?, /usr/lib(64)?/debug/usr/libexec(/.*)?, /usr/lib(64)?/chromium-browser/chrome, /usr/lib(64)?/ConsoleKit/scripts(/.*)?, /usr/lib(64)?/pgsql/test/regress/.*\.sh, /usr/lib(64)?/[^/]*firefox[^/]*/firefox, /usr/lib(64)?/[^/]*/mozilla-xremote-client, /usr/lib(64)?/ConsoleKit/run-session.d(/.*)?, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird, /usr/lib(64)?/thunderbird.*/mozilla-xremote-client, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird-bin, /usr/lib(64)?/[^/]*thunderbird[^/]*/open-browser\.sh, /etc/gdm/[^/]+, /etc/gdm/[^/]+/.*, /etc/cron.daily(/.*)?, /etc/cron.hourly(/.*)?, /etc/cron.weekly(/.*)?, /etc/cron.monthly(/.*)?, /usr/lib/.*/program(/.*)?, /lib/udev/[^/]*, /etc/avahi/.*\.action, /usr/lib/qt.*/bin(/.*)?, /usr/lib64/.*/program(/.*)?, /usr/lib/yp/.+, /lib64/udev/[^/]*, /var/ftp/bin(/.*)?, /usr/libexec(/.*)?, /etc/kde/env(/.*)?, /etc/profile.d(/.*)?, /etc/hotplug/.*rc, /etc/hotplug/.*agent, /usr/lib64/yp/.+, /var/qmail/bin(/.*)?, /usr/lib/fence(/.*)?, /etc/X11/xinit(/.*)?, /etc/netplug\.d(/.*)?, /usr/local/lib(64)?/ipsec/.*, /usr/X11R6/lib(64)?/X11/xkb/xkbcomp, /etc/ppp/ip-up\..*, /etc/cipe/ip-up.*, /etc/pm/power\.d(/.*)?, /etc/pm/sleep\.d(/.*)?, /var/mailman/bin(/.*)?, /etc/xen/scripts(/.*)?, /etc/ppp/ipv6-up\..*, /etc/ppp/ip-down\..*, /etc/cipe/ip-down.*, /usr/share/hplip/[^/]*, /etc/vmware-tools(/.*)?, /etc/kde/shutdown(/.*)?, /etc/acpi/actions(/.*)?, /etc/pki/tls/misc(/.*)?, /usr/local/Printer(/.*)?, /usr/local/Brother(/.*)?, /opt/google/chrome(/.*)?, /usr/lib/bluetooth(/.*)?, /usr/lib/ruby/gems(/.*)?/helper-scripts(/.*)?, /usr/share/debconf/.+, /etc/ppp/ipv6-down\..*, /usr/share/cluster/.*\.sh, /usr/share/sectool/.*\.py, /usr/share/ssl/misc(/.*)?, /usr/share/e16/misc(/.*)?, /usr/lib/ccache/bin(/.*)?, /etc/racoon/scripts(/.*)?, /usr/lib/ruby/gems/.*/agents(/.*)?, /usr/local/Brother/(.*/)?inf/setup.*, /usr/local/Brother/(.*/)?inf/brprintconf.*, /usr/share/mc/extfs/.*, /etc/mcelog/triggers(/.*)?, /etc/dhcp/dhclient\.d(/.*)?, /emul/ia32-linux/bin(/.*)?, /usr/lib64/bluetooth(/.*)?, /emul/ia32-linux/usr(/.*)?/bin(/.*)?, /emul/ia32-linux/usr(/.*)?/Bin(/.*)?, /emul/ia32-linux/usr(/.*)?/sbin(/.*)?, /usr/lib/wicd/monitor.py, /usr/share/createrepo(/.*)?, /emul/ia32-linux/sbin(/.*)?, /usr/share/hal/scripts(/.*)?, /usr/lib/vmware-tools/(s)?bin64(/.*)?, /usr/lib/vmware-tools/(s)?bin32(/.*)?, /etc/gdm/XKeepsCrashing[^/]*, /usr/lib/oracle/xe/apps(/.*)?, /usr/share/smolt/client(/.*)?, /usr/share/Modules/init(/.*)?, /usr/share/apr-0/build/[^/]+\.sh, /usr/share/shorewall-perl(/.*)?, /usr/share/shorewall-lite(/.*)?, /usr/share/turboprint/lib(/.*)?, /usr/share/vhostmd/scripts(/.*)?, /usr/share/shorewall6-lite(/.*)?, /usr/share/shorewall-shell(/.*)?, /etc/ConsoleKit/run-seat\.d(/.*)?, /usr/share/sandbox/sandboxX.sh, /usr/share/denyhosts/plugins(/.*)?, /usr/share/denyhosts/scripts(/.*)?, /emul/ia32-linux/usr/libexec(/.*)?, /usr/share/PackageKit/helpers(/.*)?, /etc/ConsoleKit/run-session\.d(/.*)?, /etc/hotplug\.d/default/default.*, /usr/share/cluster/checkquorum.*, /usr/local/linuxprinter/filters(/.*)?, /opt/gutenprint/cups/lib/filter(/.*)?, /usr/share/system-config-network(/netconfig)?/[^/]+\.py, /etc/sysconfig/network-scripts/net.*, /etc/sysconfig/network-scripts/ifup.*, /etc/sysconfig/network-scripts/init.*, /etc/sysconfig/network-scripts/ifdown.*, /opt/OpenPrinting-Gutenprint/cups/lib/filter(/.*)?, /usr/share/gedit-2/plugins/externaltools/tools(/.*)?, /bin, /sbin, /dev/MAKEDEV, /var/qmail/rc, /var/qmail/bin, /etc/mail/make, /bin/mountpoint, /lib/udev/scsi_id, /sbin/mkfs\.cramfs, /etc/xen/qemu-ifup, /etc/sysconfig/init, /etc/apcupsd/commok, /etc/sysconfig/crond, /etc/X11/xdm/Xsetup_0, /etc/init\.d/functions, /etc/apcupsd/changeme, /etc/apcupsd/onbattery, /etc/sysconfig/libvirtd, /etc/apcupsd/offbattery, /etc/apcupsd/apccontrol, /etc/X11/xdm/GiveConsole, /etc/X11/xdm/TakeConsole, /etc/apcupsd/commfailure, /etc/sysconfig/netconsole, /etc/rc\.d/init\.d/functions, /etc/apcupsd/masterconnect, /etc/apcupsd/mastertimeout, /usr/share/pydict/pydict\.py, /usr/share/clamav/clamd-gen, /sbin/insmod_ksymoops_clean, /etc/mgetty\+sendfax/new_fax, /etc/sysconfig/readonly-root, /usr/share/cvs/contrib/rcs2log, /usr/share/hwbrowser/hwbrowser, /usr/share/shorewall/getparams, /usr/share/cluster/SAPDatabase, /usr/share/cluster/SAPInstance, /usr/share/apr-0/build/libtool, /etc/hotplug/hotplug\.functions, /usr/share/texmf/web2c/mktexdir, /usr/share/texmf/web2c/mktexnam, /usr/share/texmf/web2c/mktexupd, /usr/share/shorewall/configpath, /etc/mcelog/cache-error-trigger, /usr/share/shorewall/compiler\.pl, /usr/share/dayplanner/dayplanner, /usr/libexec/openssh/sftp-server, /usr/share/texmf/texconfig/tcfmgr, /usr/share/clamav/freshclam-sleep, /usr/share/cluster/ocf-shellfuncs, /usr/share/cluster/svclib_nfslock, /usr/share/pwlib/make/ptlib-config, /usr/share/fedora-usermgmt/wrapper, /usr/share/printconf/util/print\.py, /etc/pki/tls/certs/make-dummy-cert, /usr/share/rhn/rhn_applet/applet\.py, /usr/share/authconfig/authconfig\.py, /usr/share/spamassassin/sa-update\.cron, /usr/share/selinux/devel/policygentool, /usr/share/gnucash/finance-quote-check, /usr/share/cluster/fence_scsi_check\.pl, /usr/share/switchdesk/switchdesk-gui\.py, /usr/share/authconfig/authconfig-tui\.py, /usr/share/authconfig/authconfig-gtk\.py, /usr/share/gnucash/finance-quote-helper, /usr/share/gitolite/hooks/common/update, /usr/share/system-config-services/gui\.py, /lib/security/pam_krb5/pam_krb5_storetmp, /usr/share/system-config-netboot/pxeos\.py, /usr/share/system-config-printer/applet\.py, /usr/share/system-config-nfs/nfs-export\.py, /usr/share/system-config-selinux/polgen\.py, /lib64/security/pam_krb5/pam_krb5_storetmp, /usr/share/PackageKit/pk-upgrade-distro\.sh, /usr/share/system-config-netboot/pxeboot\.py, /usr/share/rhn/rhn_applet/needed-packages\.py, /usr/share/system-logviewer/system-logviewer\.py, /usr/share/system-config-network/neat-control\.py, /usr/share/system-config-services/serviceconf\.py, /usr/share/hal/device-manager/hal-device-manager, /usr/share/system-config-lvm/system-config-lvm\.py, /usr/share/system-config-nfs/system-config-nfs\.py, /usr/share/system-config-httpd/system-config-httpd, /usr/share/system-config-mouse/system-config-mouse, /usr/share/system-config-users/system-config-users, /usr/share/system-config-date/system-config-date\.py, /usr/share/gitolite/hooks/gitolite-admin/post-update, /usr/share/system-config-samba/system-config-samba\.py, /usr/share/system-config-display/system-config-display, /usr/share/system-config-keyboard/system-config-keyboard, /usr/share/system-config-language/system-config-language, /usr/share/system-config-services/system-config-services, /usr/share/system-config-netboot/system-config-netboot\.py, /usr/share/system-config-selinux/system-config-selinux\.py, /usr/share/system-config-soundcard/system-config-soundcard, /usr/share/system-config-rootpassword/system-config-rootpassword, /usr/share/system-config-securitylevel/system-config-securitylevel\.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux initrc policy is very flexible allowing users to setup their initrc processes in as secure a method as possible.
+.PP
+The following process types are defined for initrc:
+
+.EX
+.B initrc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a initrc_t
+
+can be used to make the process type initrc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux initrc policy is very flexible allowing users to setup their initrc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for initrc:
 
 
 .EX
 .PP
-.B initrc_devpts_t 
+.B initrc_devpts_t
 .EE
 
 - Set files with the initrc_devpts_t type, if you want to treat the files as initrc devpts data.
@@ -27,19 +57,15 @@
 
 .EX
 .PP
-.B initrc_exec_t 
+.B initrc_exec_t
 .EE
 
 - Set files with the initrc_exec_t type, if you want to transition an executable to the initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/startx, /etc/rc\.d/rc, /usr/libexec/dcc/stop-.*, /etc/sysconfig/network-scripts/ifup-ipsec, /usr/sbin/start-dirsrv, /usr/sbin/open_init_pty, /usr/sbin/ldap-agent, /usr/share/system-config-services/system-config-services-mechanism\.py, /etc/rc\.d/rc\.[^/]+, /etc/rc\.d/init\.d/.*, /usr/libexec/dcc/start-.*, /usr/sbin/restart-dirsrv, /etc/X11/prefdm, /usr/sbin/apachectl, /etc/init\.d/.*, /usr/bin/sepg_ctl
 
 .EX
 .PP
-.B initrc_state_t 
+.B initrc_state_t
 .EE
 
 - Set files with the initrc_state_t type, if you want to treat the files as initrc state data.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B initrc_tmp_t 
+.B initrc_tmp_t
 .EE
 
 - Set files with the initrc_tmp_t type, if you want to store initrc temporary files in the /tmp directories.
@@ -55,40 +81,28 @@
 
 .EX
 .PP
-.B initrc_var_run_t 
+.B initrc_var_run_t
 .EE
 
 - Set files with the initrc_var_run_t type, if you want to store the initrc files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/setmixer_flag, /var/run/runlevel\.dir, /var/run/random-seed, /var/run/utmp
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux initrc policy is very flexible allowing users to setup their initrc processes in as secure a method as possible.
-.PP 
-The following process types are defined for initrc:
+.SH "MANAGED FILES"
 
-.EX
-.B initrc_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type initrc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -101,11 +115,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), initrc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), initrc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, init_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/init_selinux.8 serefpolicy-3.7.19/man/man8/init_selinux.8
--- nsaserefpolicy/man/man8/init_selinux.8	2013-03-15 11:41:12.146153508 +0100
+++ serefpolicy-3.7.19/man/man8/init_selinux.8	2013-03-15 11:40:04.198151957 +0100
@@ -1,16 +1,40 @@
-.TH  "init_selinux"  "8"  "init" "dwalsh@redhat.com" "init SELinux Policy documentation"
+.TH  "init_selinux"  "8"  "13-01-04" "init" "SELinux Policy documentation for init"
 .SH "NAME"
 init_selinux \- Security Enhanced Linux Policy for the init processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the init processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B init
-(System initialization programs (init and init scripts))
-processes via flexible mandatory access
-control.  
+The init processes execute with the init_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep init_t
+
+
+.SH "ENTRYPOINTS"
+
+The init_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,init_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the init_t domain are the following:"
+
+/dev/cpu/mtrr, /sbin/init(ng)?, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux init policy is very flexible allowing users to setup their init processes in as secure a method as possible.
+.PP
+The following process types are defined for init:
+
+.EX
+.B initrc_t, init_t
+.EE
+.PP
+Note:
+.B semanage permissive -a init_t
+
+can be used to make the process type init_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  init policy is extremely flexible and has several booleans that allow you to manipulate the policy and run init with the tightest access possible.
@@ -23,20 +47,27 @@
 .B setsebool -P init_upstart 1
 .EE
 
+.PP
+If you want to enable support for upstart as the init program, you must turn on the init_upstart boolean.
+
+.EX
+.B setsebool -P init_upstart 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux init policy is very flexible allowing users to setup their init processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for init:
 
 
 .EX
 .PP
-.B init_exec_t 
+.B init_exec_t
 .EE
 
 - Set files with the init_exec_t type, if you want to transition an executable to the init_t domain.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B init_var_run_t 
+.B init_var_run_t
 .EE
 
 - Set files with the init_var_run_t type, if you want to store the init files under the /run directory.
@@ -52,7 +83,7 @@
 
 .EX
 .PP
-.B initctl_t 
+.B initctl_t
 .EE
 
 - Set files with the initctl_t type, if you want to treat the files as initctl data.
@@ -60,7 +91,7 @@
 
 .EX
 .PP
-.B initrc_devpts_t 
+.B initrc_devpts_t
 .EE
 
 - Set files with the initrc_devpts_t type, if you want to treat the files as initrc devpts data.
@@ -68,19 +99,15 @@
 
 .EX
 .PP
-.B initrc_exec_t 
+.B initrc_exec_t
 .EE
 
 - Set files with the initrc_exec_t type, if you want to transition an executable to the initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/startx, /etc/rc\.d/rc, /usr/libexec/dcc/stop-.*, /etc/sysconfig/network-scripts/ifup-ipsec, /usr/sbin/start-dirsrv, /usr/sbin/open_init_pty, /usr/sbin/ldap-agent, /usr/share/system-config-services/system-config-services-mechanism\.py, /etc/rc\.d/rc\.[^/]+, /etc/rc\.d/init\.d/.*, /usr/libexec/dcc/start-.*, /usr/sbin/restart-dirsrv, /etc/X11/prefdm, /usr/sbin/apachectl, /etc/init\.d/.*, /usr/bin/sepg_ctl
 
 .EX
 .PP
-.B initrc_state_t 
+.B initrc_state_t
 .EE
 
 - Set files with the initrc_state_t type, if you want to treat the files as initrc state data.
@@ -88,7 +115,7 @@
 
 .EX
 .PP
-.B initrc_tmp_t 
+.B initrc_tmp_t
 .EE
 
 - Set files with the initrc_tmp_t type, if you want to store initrc temporary files in the /tmp directories.
@@ -96,40 +123,28 @@
 
 .EX
 .PP
-.B initrc_var_run_t 
+.B initrc_var_run_t
 .EE
 
 - Set files with the initrc_var_run_t type, if you want to store the initrc files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/setmixer_flag, /var/run/runlevel\.dir, /var/run/random-seed, /var/run/utmp
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux init policy is very flexible allowing users to setup their init processes in as secure a method as possible.
-.PP 
-The following process types are defined for init:
+.SH "MANAGED FILES"
 
-.EX
-.B initrc_t, init_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type init_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -145,12 +160,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), init(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), init(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), initrc_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/innd_selinux.8 serefpolicy-3.7.19/man/man8/innd_selinux.8
--- nsaserefpolicy/man/man8/innd_selinux.8	2013-03-15 11:41:12.225153509 +0100
+++ serefpolicy-3.7.19/man/man8/innd_selinux.8	2013-03-15 11:40:06.810152017 +0100
@@ -1,25 +1,55 @@
-.TH  "innd_selinux"  "8"  "innd" "dwalsh@redhat.com" "innd SELinux Policy documentation"
+.TH  "innd_selinux"  "8"  "13-01-04" "innd" "SELinux Policy documentation for innd"
 .SH "NAME"
 innd_selinux \- Security Enhanced Linux Policy for the innd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the innd processes via flexible mandatory access control.
 
+The innd processes execute with the innd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep innd_t
+
+
+.SH "ENTRYPOINTS"
+
+The innd_t SELinux type can be entered via the "innd_exec_t" file type.  The default entrypoint paths for the innd_t domain are the following:"
+
+/usr/lib(64)?/news/bin/inews, /usr/lib(64)?/news/bin/inndf, /usr/lib(64)?/news/bin/nnrpd, /usr/lib(64)?/news/bin/rnews, /usr/lib(64)?/news/bin/expire, /usr/lib(64)?/news/bin/fastrm, /usr/lib(64)?/news/bin/shlock, /usr/lib(64)?/news/bin/actsync, /usr/lib(64)?/news/bin/archive, /usr/lib(64)?/news/bin/batcher, /usr/lib(64)?/news/bin/ctlinnd, /usr/lib(64)?/news/bin/getlist, /usr/lib(64)?/news/bin/innfeed, /usr/lib(64)?/news/bin/innxmit, /usr/lib(64)?/news/bin/makedbz, /usr/lib(64)?/news/bin/nntpget, /usr/lib(64)?/news/bin/buffchan, /usr/lib(64)?/news/bin/convdate, /usr/lib(64)?/news/bin/cvtbatch, /usr/lib(64)?/news/bin/filechan, /usr/lib(64)?/news/bin/overchan, /usr/lib(64)?/news/bin/inndstart, /usr/lib(64)?/news/bin/innxbatch, /usr/lib(64)?/news/bin/expireover, /usr/lib(64)?/news/bin/innconfval, /usr/lib(64)?/news/bin/shrinkfile, /usr/lib(64)?/news/bin/grephistory, /usr/lib(64)?/news/bin/makehistory, /usr/lib(64)?/news/bin/newsrequeue, /usr/lib(64)?/news/bin/ovdb_recover, /usr/lib(64)?/news/bin/prunehistory, /usr/lib(64)?/news/bin/startinnfeed, /usr/sbin/innd.*, /usr/bin/suck, /etc/news/boot, /usr/bin/inews, /usr/bin/rnews, /usr/bin/rpost, /usr/sbin/in\.nnrpd, /usr/lib/news/bin/sm, /usr/lib/news/bin/innd, /usr/lib64/news/bin/sm, /usr/lib64/news/bin/innd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
+.PP
+The following process types are defined for innd:
+
+.EX
+.B innd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a innd_t
+
+can be used to make the process type innd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for innd:
 
 
 .EX
 .PP
-.B innd_etc_t 
+.B innd_etc_t
 .EE
 
 - Set files with the innd_etc_t type, if you want to store innd files in the /etc directories.
@@ -27,19 +57,15 @@
 
 .EX
 .PP
-.B innd_exec_t 
+.B innd_exec_t
 .EE
 
 - Set files with the innd_exec_t type, if you want to transition an executable to the innd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/news/bin/startinnfeed, /usr/bin/suck, /usr/lib(64)?/news/bin/expireover, /usr/lib(64)?/news/bin/nntpget, /usr/sbin/in\.nnrpd, /usr/lib(64)?/news/bin/batcher, /usr/lib64/news/bin/innd, /usr/lib/news/bin/innd, /usr/lib(64)?/news/bin/overchan, /usr/lib(64)?/news/bin/newsrequeue, /usr/lib(64)?/news/bin/innxmit, /usr/lib(64)?/news/bin/archive, /usr/lib(64)?/news/bin/getlist, /usr/lib(64)?/news/bin/buffchan, /usr/bin/inews, /usr/sbin/innd.*, /usr/lib(64)?/news/bin/inndstart, /usr/lib(64)?/news/bin/inndf, /usr/lib(64)?/news/bin/shlock, /usr/bin/rpost, /etc/news/boot, /usr/lib(64)?/news/bin/makedbz, /usr/lib(64)?/news/bin/innfeed, /usr/lib64/news/bin/sm, /usr/lib(64)?/news/bin/convdate, /usr/bin/rnews, /usr/lib(64)?/news/bin/expire, /usr/lib(64)?/news/bin/actsync, /usr/lib(64)?/news/bin/ctlinnd, /usr/lib(64)?/news/bin/inews, /usr/lib(64)?/news/bin/filechan, /usr/lib(64)?/news/bin/grephistory, /usr/lib/news/bin/sm, /usr/lib(64)?/news/bin/ovdb_recover, /usr/lib(64)?/news/bin/cvtbatch, /usr/lib(64)?/news/bin/prunehistory, /usr/lib(64)?/news/bin/innxbatch, /usr/lib(64)?/news/bin/nnrpd, /usr/lib(64)?/news/bin/innconfval, /usr/lib(64)?/news/bin/makehistory, /usr/lib(64)?/news/bin/fastrm, /usr/lib(64)?/news/bin/rnews, /usr/lib(64)?/news/bin/shrinkfile
 
 .EX
 .PP
-.B innd_initrc_exec_t 
+.B innd_initrc_exec_t
 .EE
 
 - Set files with the innd_initrc_exec_t type, if you want to transition an executable to the innd_initrc_t domain.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B innd_log_t 
+.B innd_log_t
 .EE
 
 - Set files with the innd_log_t type, if you want to treat the data as innd log data, usually stored under the /var/log directory.
@@ -55,7 +81,7 @@
 
 .EX
 .PP
-.B innd_var_lib_t 
+.B innd_var_lib_t
 .EE
 
 - Set files with the innd_var_lib_t type, if you want to store the innd files under the /var/lib directory.
@@ -63,63 +89,121 @@
 
 .EX
 .PP
-.B innd_var_run_t 
+.B innd_var_run_t
 .EE
 
 - Set files with the innd_var_run_t type, if you want to store the innd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/innd(/.*)?, /var/run/news(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for innd:
 
 .EX
 .TP 5
-.B innd_port_t 
+.B innd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 119
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
-.PP 
-The following process types are defined for innd:
+.SH "MANAGED FILES"
 
-.EX
-.B innd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type innd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B innd_log_t
+
+	/var/log/news(/.*)?
+.br
+
+.br
+.B innd_var_lib_t
+
+	/var/lib/news(/.*)?
+.br
+
+.br
+.B innd_var_run_t
+
+	/var/run/innd(/.*)?
+.br
+	/var/run/news(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B news_spool_t
+
+	/var/spool/news(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -135,11 +219,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), innd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), innd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/insmod_selinux.8 serefpolicy-3.7.19/man/man8/insmod_selinux.8
--- nsaserefpolicy/man/man8/insmod_selinux.8	2013-03-15 11:41:12.230153510 +0100
+++ serefpolicy-3.7.19/man/man8/insmod_selinux.8	2013-03-15 11:40:07.088152023 +0100
@@ -1,16 +1,53 @@
-.TH  "insmod_selinux"  "8"  "insmod" "dwalsh@redhat.com" "insmod SELinux Policy documentation"
+.TH  "insmod_selinux"  "8"  "13-01-04" "insmod" "SELinux Policy documentation for insmod"
 .SH "NAME"
 insmod_selinux \- Security Enhanced Linux Policy for the insmod processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the insmod processes via flexible mandatory access control.
 
+The insmod processes execute with the insmod_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep insmod_t
+
+
+.SH "ENTRYPOINTS"
+
+The insmod_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,insmod_exec_t" file types.  The default entrypoint paths for the insmod_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /sbin/rmmod.*, /sbin/insmod.*, /sbin/modprobe.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux insmod policy is very flexible allowing users to setup their insmod processes in as secure a method as possible.
+.PP
+The following process types are defined for insmod:
+
+.EX
+.B insmod_t
+.EE
+.PP
+Note:
+.B semanage permissive -a insmod_t
+
+can be used to make the process type insmod_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  insmod policy is extremely flexible and has several booleans that allow you to manipulate the policy and run insmod with the tightest access possible.
 
 
 .PP
+If you want to allow pppd to load kernel modules for certain modems, you must turn on the pppd_can_insmod boolean.
+
+.EX
+.B setsebool -P pppd_can_insmod 1
+.EE
+
+.PP
 If you want to disable transitions to insmod, you must turn on the secure_mode_insmod boolean.
 
 .EX
@@ -18,38 +55,41 @@
 .EE
 
 .PP
-If you want to allow pppd to load kernel modules for certain modem, you must turn on the pppd_can_insmod boolean.
+If you want to allow pppd to load kernel modules for certain modems, you must turn on the pppd_can_insmod boolean.
 
 .EX
 .B setsebool -P pppd_can_insmod 1
 .EE
 
+.PP
+If you want to disable transitions to insmod, you must turn on the secure_mode_insmod boolean.
+
+.EX
+.B setsebool -P secure_mode_insmod 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux insmod policy is very flexible allowing users to setup their insmod processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for insmod:
 
 
 .EX
 .PP
-.B insmod_exec_t 
+.B insmod_exec_t
 .EE
 
 - Set files with the insmod_exec_t type, if you want to transition an executable to the insmod_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/modprobe.*, /sbin/rmmod.*, /sbin/insmod.*
 
 .EX
 .PP
-.B insmod_tmpfs_t 
+.B insmod_tmpfs_t
 .EE
 
 - Set files with the insmod_tmpfs_t type, if you want to store insmod files on a tmpfs file system.
@@ -57,28 +97,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux insmod policy is very flexible allowing users to setup their insmod processes in as secure a method as possible.
-.PP 
-The following process types are defined for insmod:
+.SH "MANAGED FILES"
 
-.EX
-.B insmod_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type insmod_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -94,12 +126,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), insmod(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), insmod(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ipsec_mgmt_selinux.8 serefpolicy-3.7.19/man/man8/ipsec_mgmt_selinux.8
--- nsaserefpolicy/man/man8/ipsec_mgmt_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/ipsec_mgmt_selinux.8	2013-03-15 11:40:06.752152016 +0100
@@ -0,0 +1,216 @@
+.TH  "ipsec_mgmt_selinux"  "8"  "13-01-04" "ipsec_mgmt" "SELinux Policy documentation for ipsec_mgmt"
+.SH "NAME"
+ipsec_mgmt_selinux \- Security Enhanced Linux Policy for the ipsec_mgmt processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the ipsec_mgmt processes via flexible mandatory access control.
+
+The ipsec_mgmt processes execute with the ipsec_mgmt_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep ipsec_mgmt_t
+
+
+.SH "ENTRYPOINTS"
+
+The ipsec_mgmt_t SELinux type can be entered via the "shell_exec_t,ipsec_mgmt_exec_t" file types.  The default entrypoint paths for the ipsec_mgmt_t domain are the following:"
+
+/bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /usr/lib(64)?/ipsec/_plutorun, /usr/lib(64)?/ipsec/_plutoload, /usr/sbin/ipsec, /usr/libexec/ipsec/_plutorun, /usr/libexec/ipsec/_plutoload, /usr/libexec/nm-openswan-service
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ipsec_mgmt policy is very flexible allowing users to setup their ipsec_mgmt processes in as secure a method as possible.
+.PP
+The following process types are defined for ipsec_mgmt:
+
+.EX
+.B ipsec_mgmt_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ipsec_mgmt_t
+
+can be used to make the process type ipsec_mgmt_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ipsec_mgmt policy is very flexible allowing users to setup their ipsec_mgmt processes in as secure a method as possible.
+.PP
+The following file types are defined for ipsec_mgmt:
+
+
+.EX
+.PP
+.B ipsec_mgmt_exec_t
+.EE
+
+- Set files with the ipsec_mgmt_exec_t type, if you want to transition an executable to the ipsec_mgmt_t domain.
+
+
+.EX
+.PP
+.B ipsec_mgmt_lock_t
+.EE
+
+- Set files with the ipsec_mgmt_lock_t type, if you want to treat the files as ipsec mgmt lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B ipsec_mgmt_var_run_t
+.EE
+
+- Set files with the ipsec_mgmt_var_run_t type, if you want to store the ipsec mgmt files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type ipsec_mgmt_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B ipsec_key_file_t
+
+	/etc/ipsec\.d(/.*)?
+.br
+	/etc/racoon/certs(/.*)?
+.br
+	/etc/ipsec\.secrets
+.br
+	/etc/racoon/psk\.txt
+.br
+
+.br
+.B ipsec_log_t
+
+	/var/log/pluto\.log.*
+.br
+
+.br
+.B ipsec_mgmt_lock_t
+
+	/var/lock/subsys/ipsec
+.br
+
+.br
+.B ipsec_mgmt_var_run_t
+
+
+.br
+.B ipsec_tmp_t
+
+
+.br
+.B ipsec_var_run_t
+
+	/var/racoon(/.*)?
+.br
+	/var/run/pluto(/.*)?
+.br
+	/var/run/racoon\.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), ipsec_mgmt(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ipsec_selinux(8), ipsec_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ipsec_selinux.8 serefpolicy-3.7.19/man/man8/ipsec_selinux.8
--- nsaserefpolicy/man/man8/ipsec_selinux.8	2013-03-15 11:41:11.981153504 +0100
+++ serefpolicy-3.7.19/man/man8/ipsec_selinux.8	2013-03-15 11:40:00.929151883 +0100
@@ -1,79 +1,87 @@
-.TH  "ipsec_selinux"  "8"  "ipsec" "dwalsh@redhat.com" "ipsec SELinux Policy documentation"
+.TH  "ipsec_selinux"  "8"  "13-01-04" "ipsec" "SELinux Policy documentation for ipsec"
 .SH "NAME"
 ipsec_selinux \- Security Enhanced Linux Policy for the ipsec processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ipsec processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ipsec
-(TCP/IP encryption)
-processes via flexible mandatory access
-control.  
+The ipsec processes execute with the ipsec_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ipsec_t
+
+
+.SH "ENTRYPOINTS"
+
+The ipsec_t SELinux type can be entered via the "ipsec_exec_t" file type.  The default entrypoint paths for the ipsec_t domain are the following:"
+
+/usr/lib(64)?/ipsec/spi, /usr/lib(64)?/ipsec/pluto, /usr/lib(64)?/ipsec/eroute, /usr/lib(64)?/ipsec/klipsdebug, /usr/local/lib(64)?/ipsec/spi, /usr/local/lib(64)?/ipsec/pluto, /usr/local/lib(64)?/ipsec/eroute, /usr/local/lib(64)?/ipsec/klipsdebug, /usr/libexec/ipsec/spi, /usr/libexec/ipsec/pluto, /usr/libexec/ipsec/eroute, /usr/libexec/ipsec/klipsdebug
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
+.PP
+The following process types are defined for ipsec:
+
+.EX
+.B ipsec_t, ipsec_mgmt_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ipsec_t
+
+can be used to make the process type ipsec_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ipsec:
 
 
 .EX
 .PP
-.B ipsec_conf_file_t 
+.B ipsec_conf_file_t
 .EE
 
 - Set files with the ipsec_conf_file_t type, if you want to treat the files as ipsec conf content.
 
-.br
-.TP 5
-Paths: 
-/etc/ipsec\.conf, /etc/racoon(/.*)?
 
 .EX
 .PP
-.B ipsec_exec_t 
+.B ipsec_exec_t
 .EE
 
 - Set files with the ipsec_exec_t type, if you want to transition an executable to the ipsec_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/ipsec/eroute, /usr/lib(64)?/ipsec/pluto, /usr/lib(64)?/ipsec/spi, /usr/local/lib(64)?/ipsec/eroute, /usr/libexec/ipsec/eroute, /usr/libexec/ipsec/pluto, /usr/local/lib(64)?/ipsec/klipsdebug, /usr/local/lib(64)?/ipsec/spi, /usr/local/lib(64)?/ipsec/pluto, /usr/libexec/ipsec/spi, /usr/lib(64)?/ipsec/klipsdebug, /usr/libexec/ipsec/klipsdebug
 
 .EX
 .PP
-.B ipsec_initrc_exec_t 
+.B ipsec_initrc_exec_t
 .EE
 
 - Set files with the ipsec_initrc_exec_t type, if you want to transition an executable to the ipsec_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/racoon, /etc/rc\.d/init\.d/ipsec
 
 .EX
 .PP
-.B ipsec_key_file_t 
+.B ipsec_key_file_t
 .EE
 
 - Set files with the ipsec_key_file_t type, if you want to treat the files as ipsec key content.
 
-.br
-.TP 5
-Paths: 
-/etc/ipsec\.secrets, /etc/racoon/certs(/.*)?, /etc/racoon/psk\.txt, /etc/ipsec\.d(/.*)?
 
 .EX
 .PP
-.B ipsec_log_t 
+.B ipsec_log_t
 .EE
 
 - Set files with the ipsec_log_t type, if you want to treat the data as ipsec log data, usually stored under the /var/log directory.
@@ -81,19 +89,15 @@
 
 .EX
 .PP
-.B ipsec_mgmt_exec_t 
+.B ipsec_mgmt_exec_t
 .EE
 
 - Set files with the ipsec_mgmt_exec_t type, if you want to transition an executable to the ipsec_mgmt_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/libexec/ipsec/_plutoload, /usr/libexec/nm-openswan-service, /usr/lib(64)?/ipsec/_plutoload, /usr/sbin/ipsec, /usr/libexec/ipsec/_plutorun, /usr/lib(64)?/ipsec/_plutorun
 
 .EX
 .PP
-.B ipsec_mgmt_lock_t 
+.B ipsec_mgmt_lock_t
 .EE
 
 - Set files with the ipsec_mgmt_lock_t type, if you want to treat the files as ipsec mgmt lock data, stored under the /var/lock directory
@@ -101,7 +105,7 @@
 
 .EX
 .PP
-.B ipsec_mgmt_var_run_t 
+.B ipsec_mgmt_var_run_t
 .EE
 
 - Set files with the ipsec_mgmt_var_run_t type, if you want to store the ipsec mgmt files under the /run directory.
@@ -109,7 +113,7 @@
 
 .EX
 .PP
-.B ipsec_tmp_t 
+.B ipsec_tmp_t
 .EE
 
 - Set files with the ipsec_tmp_t type, if you want to store ipsec temporary files in the /tmp directories.
@@ -117,63 +121,153 @@
 
 .EX
 .PP
-.B ipsec_var_run_t 
+.B ipsec_var_run_t
 .EE
 
 - Set files with the ipsec_var_run_t type, if you want to store the ipsec files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/racoon\.pid, /var/run/pluto(/.*)?, /var/racoon(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ipsec:
 
 .EX
 .TP 5
-.B ipsecnat_port_t 
+.B ipsecnat_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 4500
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
-.PP 
-The following process types are defined for ipsec:
-
-.EX
-.B ipsec_t, ipsec_mgmt_t 
+udp 4500
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type ipsec_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B ipsec_key_file_t
+
+	/etc/ipsec\.d(/.*)?
+.br
+	/etc/racoon/certs(/.*)?
+.br
+	/etc/ipsec\.secrets
+.br
+	/etc/racoon/psk\.txt
+.br
+
+.br
+.B ipsec_tmp_t
+
+
+.br
+.B ipsec_var_run_t
+
+	/var/racoon(/.*)?
+.br
+	/var/run/pluto(/.*)?
+.br
+	/var/run/racoon\.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -189,11 +283,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ipsec(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ipsec(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ipsec_mgmt_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/iptables_selinux.8 serefpolicy-3.7.19/man/man8/iptables_selinux.8
--- nsaserefpolicy/man/man8/iptables_selinux.8	2013-03-15 11:41:12.099153507 +0100
+++ serefpolicy-3.7.19/man/man8/iptables_selinux.8	2013-03-15 11:40:02.692151923 +0100
@@ -1,54 +1,81 @@
-.TH  "iptables_selinux"  "8"  "iptables" "dwalsh@redhat.com" "iptables SELinux Policy documentation"
+.TH  "iptables_selinux"  "8"  "13-01-04" "iptables" "SELinux Policy documentation for iptables"
 .SH "NAME"
 iptables_selinux \- Security Enhanced Linux Policy for the iptables processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the iptables processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B iptables
-(Policy for iptables)
-processes via flexible mandatory access
-control.  
+The iptables processes execute with the iptables_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep iptables_t
+
+
+.SH "ENTRYPOINTS"
+
+The iptables_t SELinux type can be entered via the "iptables_exec_t" file type.  The default entrypoint paths for the iptables_t domain are the following:"
+
+/sbin/ip6?tables.*, /sbin/ip6?tables-multi.*, /sbin/ip6?tables-restore.*, /sbin/ipchains.*, /usr/sbin/ipchains.*, /sbin/ipvsadm, /sbin/ebtables, /usr/sbin/iptables, /sbin/ipvsadm-save, /sbin/ipvsadm-restore, /sbin/ebtables-restore, /usr/sbin/iptables-multi, /usr/sbin/iptables-restore
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux iptables policy is very flexible allowing users to setup their iptables processes in as secure a method as possible.
+.PP
+The following process types are defined for iptables:
+
+.EX
+.B iptables_t
+.EE
+.PP
+Note:
+.B semanage permissive -a iptables_t
+
+can be used to make the process type iptables_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  iptables policy is extremely flexible and has several booleans that allow you to manipulate the policy and run iptables with the tightest access possible.
 
 
 .PP
-If you want to allow dhcpc client applications to execute iptables command, you must turn on the dhcpc_exec_iptables boolean.
+If you want to allow dhcpc client applications to execute iptables commands, you must turn on the dhcpc_exec_iptables boolean.
+
+.EX
+.B setsebool -P dhcpc_exec_iptables 1
+.EE
+
+.PP
+If you want to allow dhcpc client applications to execute iptables commands, you must turn on the dhcpc_exec_iptables boolean.
 
 .EX
 .B setsebool -P dhcpc_exec_iptables 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux iptables policy is very flexible allowing users to setup their iptables processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for iptables:
 
 
 .EX
 .PP
-.B iptables_exec_t 
+.B iptables_exec_t
 .EE
 
 - Set files with the iptables_exec_t type, if you want to transition an executable to the iptables_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/ebtables-restore, /usr/sbin/ipchains.*, /usr/sbin/iptables-restore, /sbin/ipvsadm-save, /sbin/ipchains.*, /sbin/ip6?tables, /usr/sbin/iptables, /sbin/ipvsadm, /usr/sbin/iptables-multi, /sbin/ipvsadm-restore, /sbin/ebtables, /sbin/ip6?tables-multi, /sbin/ip6?tables-restore
 
 .EX
 .PP
-.B iptables_initrc_exec_t 
+.B iptables_initrc_exec_t
 .EE
 
 - Set files with the iptables_initrc_exec_t type, if you want to transition an executable to the iptables_initrc_t domain.
@@ -56,7 +83,7 @@
 
 .EX
 .PP
-.B iptables_tmp_t 
+.B iptables_tmp_t
 .EE
 
 - Set files with the iptables_tmp_t type, if you want to store iptables temporary files in the /tmp directories.
@@ -64,7 +91,7 @@
 
 .EX
 .PP
-.B iptables_var_run_t 
+.B iptables_var_run_t
 .EE
 
 - Set files with the iptables_var_run_t type, if you want to store the iptables files under the /run directory.
@@ -72,28 +99,164 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux iptables policy is very flexible allowing users to setup their iptables processes in as secure a method as possible.
-.PP 
-The following process types are defined for iptables:
+.SH "MANAGED FILES"
 
-.EX
-.B iptables_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type iptables_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B iptables_tmp_t
+
+
+.br
+.B iptables_var_run_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B psad_tmp_t
+
+
+.br
+.B psad_var_log_t
+
+	/var/log/psad(/.*)?
+.br
+
+.br
+.B shorewall_var_lib_t
+
+	/var/lib/shorewall(/.*)?
+.br
+	/var/lib/shorewall6(/.*)?
+.br
+	/var/lib/shorewall-lite(/.*)?
+.br
+
+.br
+.B system_conf_t
+
+	/etc/sysctl\.conf(\.old)?
+.br
+	/etc/sysconfig/ip6?tables.*
+.br
+	/etc/sysconfig/ipvsadm.*
+.br
+	/etc/sysconfig/ebtables.*
+.br
+	/etc/sysconfig/system-config-firewall.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -109,12 +272,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), iptables(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), iptables(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/irc_selinux.8 serefpolicy-3.7.19/man/man8/irc_selinux.8
--- nsaserefpolicy/man/man8/irc_selinux.8	2013-03-15 11:41:11.847153501 +0100
+++ serefpolicy-3.7.19/man/man8/irc_selinux.8	2013-03-15 11:39:58.077151818 +0100
@@ -1,43 +1,63 @@
-.TH  "irc_selinux"  "8"  "irc" "dwalsh@redhat.com" "irc SELinux Policy documentation"
+.TH  "irc_selinux"  "8"  "13-01-04" "irc" "SELinux Policy documentation for irc"
 .SH "NAME"
 irc_selinux \- Security Enhanced Linux Policy for the irc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the irc processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B irc
-(IRC client policy)
-processes via flexible mandatory access
-control.  
+The irc processes execute with the irc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep irc_t
+
+
+.SH "ENTRYPOINTS"
+
+The irc_t SELinux type can be entered via the "irc_exec_t" file type.  The default entrypoint paths for the irc_t domain are the following:"
+
+/usr/bin/[st]irc, /usr/bin/ircII, /usr/bin/tinyirc
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
+.PP
+The following process types are defined for irc:
+
+.EX
+.B irc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a irc_t
+
+can be used to make the process type irc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for irc:
 
 
 .EX
 .PP
-.B irc_exec_t 
+.B irc_exec_t
 .EE
 
 - Set files with the irc_exec_t type, if you want to transition an executable to the irc_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/ircII, /usr/bin/tinyirc, /usr/bin/[st]irc
 
 .EX
 .PP
-.B irc_home_t 
+.B irc_home_t
 .EE
 
 - Set files with the irc_home_t type, if you want to store irc files in the users home directory.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B irc_tmp_t 
+.B irc_tmp_t
 .EE
 
 - Set files with the irc_tmp_t type, if you want to store irc temporary files in the /tmp directories.
@@ -53,51 +73,93 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for irc:
 
 .EX
 .TP 5
-.B ircd_port_t 
+.B ircd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 6667
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
-.PP 
-The following process types are defined for irc:
+.SH "MANAGED FILES"
 
-.EX
-.B irc_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type irc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B irc_home_t
+
+	/home/[^/]*/\.ircmotd
+.br
+
+.br
+.B irc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -113,11 +175,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), irc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), irc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/irqbalance_selinux.8 serefpolicy-3.7.19/man/man8/irqbalance_selinux.8
--- nsaserefpolicy/man/man8/irqbalance_selinux.8	2013-03-15 11:41:12.089153506 +0100
+++ serefpolicy-3.7.19/man/man8/irqbalance_selinux.8	2013-03-15 11:40:02.660151922 +0100
@@ -1,31 +1,55 @@
-.TH  "irqbalance_selinux"  "8"  "irqbalance" "dwalsh@redhat.com" "irqbalance SELinux Policy documentation"
+.TH  "irqbalance_selinux"  "8"  "13-01-04" "irqbalance" "SELinux Policy documentation for irqbalance"
 .SH "NAME"
 irqbalance_selinux \- Security Enhanced Linux Policy for the irqbalance processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the irqbalance processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B irqbalance
-(IRQ balancing daemon)
-processes via flexible mandatory access
-control.  
+The irqbalance processes execute with the irqbalance_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep irqbalance_t
+
+
+.SH "ENTRYPOINTS"
+
+The irqbalance_t SELinux type can be entered via the "irqbalance_exec_t" file type.  The default entrypoint paths for the irqbalance_t domain are the following:"
+
+/usr/sbin/irqbalance
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux irqbalance policy is very flexible allowing users to setup their irqbalance processes in as secure a method as possible.
+.PP
+The following process types are defined for irqbalance:
+
+.EX
+.B irqbalance_t
+.EE
+.PP
+Note:
+.B semanage permissive -a irqbalance_t
+
+can be used to make the process type irqbalance_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux irqbalance policy is very flexible allowing users to setup their irqbalance processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for irqbalance:
 
 
 .EX
 .PP
-.B irqbalance_exec_t 
+.B irqbalance_exec_t
 .EE
 
 - Set files with the irqbalance_exec_t type, if you want to transition an executable to the irqbalance_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B irqbalance_var_run_t 
+.B irqbalance_var_run_t
 .EE
 
 - Set files with the irqbalance_var_run_t type, if you want to store the irqbalance files under the /run directory.
@@ -41,28 +65,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux irqbalance policy is very flexible allowing users to setup their irqbalance processes in as secure a method as possible.
-.PP 
-The following process types are defined for irqbalance:
+.SH "MANAGED FILES"
 
-.EX
-.B irqbalance_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type irqbalance_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B irqbalance_var_run_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +139,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), irqbalance(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), irqbalance(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/irssi_selinux.8 serefpolicy-3.7.19/man/man8/irssi_selinux.8
--- nsaserefpolicy/man/man8/irssi_selinux.8	2013-03-15 11:41:12.120153507 +0100
+++ serefpolicy-3.7.19/man/man8/irssi_selinux.8	2013-03-15 11:40:03.568151943 +0100
@@ -1,10 +1,40 @@
-.TH  "irssi_selinux"  "8"  "irssi" "dwalsh@redhat.com" "irssi SELinux Policy documentation"
+.TH  "irssi_selinux"  "8"  "13-01-04" "irssi" "SELinux Policy documentation for irssi"
 .SH "NAME"
 irssi_selinux \- Security Enhanced Linux Policy for the irssi processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the irssi processes via flexible mandatory access control.
 
+The irssi processes execute with the irssi_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep irssi_t
+
+
+.SH "ENTRYPOINTS"
+
+The irssi_t SELinux type can be entered via the "irssi_exec_t" file type.  The default entrypoint paths for the irssi_t domain are the following:"
+
+/usr/bin/irssi
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux irssi policy is very flexible allowing users to setup their irssi processes in as secure a method as possible.
+.PP
+The following process types are defined for irssi:
+
+.EX
+.B irssi_t
+.EE
+.PP
+Note:
+.B semanage permissive -a irssi_t
+
+can be used to make the process type irssi_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  irssi policy is extremely flexible and has several booleans that allow you to manipulate the policy and run irssi with the tightest access possible.
@@ -17,20 +47,27 @@
 .B setsebool -P irssi_use_full_network 1
 .EE
 
+.PP
+If you want to allow the Irssi IRC Client to connect to any port, and to bind to any unreserved port, you must turn on the irssi_use_full_network boolean.
+
+.EX
+.B setsebool -P irssi_use_full_network 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux irssi policy is very flexible allowing users to setup their irssi processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for irssi:
 
 
 .EX
 .PP
-.B irssi_etc_t 
+.B irssi_etc_t
 .EE
 
 - Set files with the irssi_etc_t type, if you want to store irssi files in the /etc directories.
@@ -38,7 +75,7 @@
 
 .EX
 .PP
-.B irssi_exec_t 
+.B irssi_exec_t
 .EE
 
 - Set files with the irssi_exec_t type, if you want to transition an executable to the irssi_t domain.
@@ -46,7 +83,7 @@
 
 .EX
 .PP
-.B irssi_home_t 
+.B irssi_home_t
 .EE
 
 - Set files with the irssi_home_t type, if you want to store irssi files in the users home directory.
@@ -54,28 +91,66 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux irssi policy is very flexible allowing users to setup their irssi processes in as secure a method as possible.
-.PP 
-The following process types are defined for irssi:
+.SH "MANAGED FILES"
 
-.EX
-.B irssi_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type irssi_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B irssi_home_t
+
+	/home/[^/]*/\.irssi(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,12 +166,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), irssi(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), irssi(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/iscsid_selinux.8 serefpolicy-3.7.19/man/man8/iscsid_selinux.8
--- nsaserefpolicy/man/man8/iscsid_selinux.8	2013-03-15 11:41:10.417153468 +0100
+++ serefpolicy-3.7.19/man/man8/iscsid_selinux.8	2013-03-15 11:39:54.583151738 +0100
@@ -1,121 +1,171 @@
-.TH  "iscsid_selinux"  "8"  "iscsid" "dwalsh@redhat.com" "iscsid SELinux Policy documentation"
+.TH  "iscsid_selinux"  "8"  "13-01-04" "iscsid" "SELinux Policy documentation for iscsid"
 .SH "NAME"
 iscsid_selinux \- Security Enhanced Linux Policy for the iscsid processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the iscsid processes via flexible mandatory access control.
 
+The iscsid processes execute with the iscsid_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-.PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
-.PP
-Policy governs the access confined processes have to these files. 
-SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
-.PP 
-The following file types are defined for iscsid:
+.B ps -eZ | grep iscsid_t
 
 
-.EX
-.PP
-.B iscsi_lock_t 
-.EE
-
-- Set files with the iscsi_lock_t type, if you want to treat the files as iscsi lock data, stored under the /var/lock directory
+.SH "ENTRYPOINTS"
 
+The iscsid_t SELinux type can be entered via the "iscsid_exec_t" file type.  The default entrypoint paths for the iscsid_t domain are the following:"
 
-.EX
+/sbin/iscsid, /sbin/iscsiuio, /sbin/brcm_iscsiuio
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-.B iscsi_log_t 
-.EE
-
-- Set files with the iscsi_log_t type, if you want to treat the data as iscsi log data, usually stored under the /var/log directory.
-
-
-.EX
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-.B iscsi_tmp_t 
-.EE
-
-- Set files with the iscsi_tmp_t type, if you want to store iscsi temporary files in the /tmp directories.
-
+Policy governs the access confined processes have to files.
+SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
+.PP
+The following process types are defined for iscsid:
 
 .EX
-.PP
-.B iscsi_var_lib_t 
+.B iscsid_t
 .EE
+.PP
+Note:
+.B semanage permissive -a iscsid_t
 
-- Set files with the iscsi_var_lib_t type, if you want to store the iscsi files under the /var/lib directory.
-
+can be used to make the process type iscsid_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
-.EX
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
 .PP
-.B iscsi_var_run_t 
-.EE
-
-- Set files with the iscsi_var_run_t type, if you want to store the iscsi files under the /run directory.
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
+.PP
+The following file types are defined for iscsid:
 
 
 .EX
 .PP
-.B iscsid_exec_t 
+.B iscsid_exec_t
 .EE
 
 - Set files with the iscsid_exec_t type, if you want to transition an executable to the iscsid_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/iscsid, /sbin/brcm_iscsiuio, /sbin/iscsiuio
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for iscsid:
 
 .EX
 .TP 5
-.B iscsi_port_t 
+.B iscsi_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 3260
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
-.PP 
-The following process types are defined for iscsid:
+.SH "MANAGED FILES"
 
-.EX
-.B iscsid_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type iscsid_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B iscsi_lock_t
+
+	/var/lock/iscsi(/.*)?
+.br
+
+.br
+.B iscsi_log_t
+
+	/var/log/brcm-iscsi\.log.*
+.br
+
+.br
+.B iscsi_tmp_t
+
+
+.br
+.B iscsi_var_run_t
+
+	/var/run/iscsid\.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -131,11 +181,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), iscsid(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), iscsid(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/iwhd_selinux.8 serefpolicy-3.7.19/man/man8/iwhd_selinux.8
--- nsaserefpolicy/man/man8/iwhd_selinux.8	2013-03-15 11:41:12.183153509 +0100
+++ serefpolicy-3.7.19/man/man8/iwhd_selinux.8	2013-03-15 11:40:05.909151996 +0100
@@ -1,25 +1,55 @@
-.TH  "iwhd_selinux"  "8"  "iwhd" "dwalsh@redhat.com" "iwhd SELinux Policy documentation"
+.TH  "iwhd_selinux"  "8"  "13-01-04" "iwhd" "SELinux Policy documentation for iwhd"
 .SH "NAME"
 iwhd_selinux \- Security Enhanced Linux Policy for the iwhd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the iwhd processes via flexible mandatory access control.
 
+The iwhd processes execute with the iwhd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep iwhd_t
+
+
+.SH "ENTRYPOINTS"
+
+The iwhd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,iwhd_exec_t" file types.  The default entrypoint paths for the iwhd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/iwhd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux iwhd policy is very flexible allowing users to setup their iwhd processes in as secure a method as possible.
+.PP
+The following process types are defined for iwhd:
+
+.EX
+.B iwhd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a iwhd_t
+
+can be used to make the process type iwhd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux iwhd policy is very flexible allowing users to setup their iwhd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for iwhd:
 
 
 .EX
 .PP
-.B iwhd_exec_t 
+.B iwhd_exec_t
 .EE
 
 - Set files with the iwhd_exec_t type, if you want to transition an executable to the iwhd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B iwhd_initrc_exec_t 
+.B iwhd_initrc_exec_t
 .EE
 
 - Set files with the iwhd_initrc_exec_t type, if you want to transition an executable to the iwhd_initrc_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B iwhd_log_t 
+.B iwhd_log_t
 .EE
 
 - Set files with the iwhd_log_t type, if you want to treat the data as iwhd log data, usually stored under the /var/log directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B iwhd_var_lib_t 
+.B iwhd_var_lib_t
 .EE
 
 - Set files with the iwhd_var_lib_t type, if you want to store the iwhd files under the /var/lib directory.
@@ -51,7 +81,7 @@
 
 .EX
 .PP
-.B iwhd_var_run_t 
+.B iwhd_var_run_t
 .EE
 
 - Set files with the iwhd_var_run_t type, if you want to store the iwhd files under the /run directory.
@@ -59,28 +89,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux iwhd policy is very flexible allowing users to setup their iwhd processes in as secure a method as possible.
-.PP 
-The following process types are defined for iwhd:
+.SH "MANAGED FILES"
 
-.EX
-.B iwhd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type iwhd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -93,11 +115,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), iwhd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), iwhd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/jabberd_router_selinux.8 serefpolicy-3.7.19/man/man8/jabberd_router_selinux.8
--- nsaserefpolicy/man/man8/jabberd_router_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/jabberd_router_selinux.8	2013-03-15 11:40:06.339152006 +0100
@@ -0,0 +1,158 @@
+.TH  "jabberd_router_selinux"  "8"  "13-01-04" "jabberd_router" "SELinux Policy documentation for jabberd_router"
+.SH "NAME"
+jabberd_router_selinux \- Security Enhanced Linux Policy for the jabberd_router processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the jabberd_router processes via flexible mandatory access control.
+
+The jabberd_router processes execute with the jabberd_router_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep jabberd_router_t
+
+
+.SH "ENTRYPOINTS"
+
+The jabberd_router_t SELinux type can be entered via the "jabberd_router_exec_t" file type.  The default entrypoint paths for the jabberd_router_t domain are the following:"
+
+/usr/bin/c2s, /usr/bin/router
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux jabberd_router policy is very flexible allowing users to setup their jabberd_router processes in as secure a method as possible.
+.PP
+The following process types are defined for jabberd_router:
+
+.EX
+.B jabberd_router_t
+.EE
+.PP
+Note:
+.B semanage permissive -a jabberd_router_t
+
+can be used to make the process type jabberd_router_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux jabberd_router policy is very flexible allowing users to setup their jabberd_router processes in as secure a method as possible.
+.PP
+The following file types are defined for jabberd_router:
+
+
+.EX
+.PP
+.B jabberd_router_exec_t
+.EE
+
+- Set files with the jabberd_router_exec_t type, if you want to transition an executable to the jabberd_router_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type jabberd_router_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B jabberd_log_t
+
+	/var/log/jabber(/.*)?
+.br
+
+.br
+.B jabberd_var_lib_t
+
+	/var/lib/jabber(/.*)?
+.br
+	/var/lib/jabberd(/.*)?
+.br
+
+.br
+.B jabberd_var_run_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), jabberd_router(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, jabberd_selinux(8), jabberd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/jabberd_selinux.8 serefpolicy-3.7.19/man/man8/jabberd_selinux.8
--- nsaserefpolicy/man/man8/jabberd_selinux.8	2013-03-15 11:41:12.217153509 +0100
+++ serefpolicy-3.7.19/man/man8/jabberd_selinux.8	2013-03-15 11:40:06.520152010 +0100
@@ -1,37 +1,63 @@
-.TH  "jabberd_selinux"  "8"  "jabberd" "dwalsh@redhat.com" "jabberd SELinux Policy documentation"
+.TH  "jabberd_selinux"  "8"  "13-01-04" "jabberd" "SELinux Policy documentation for jabberd"
 .SH "NAME"
 jabberd_selinux \- Security Enhanced Linux Policy for the jabberd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the jabberd processes via flexible mandatory access control.
 
+The jabberd processes execute with the jabberd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep jabberd_t
+
+
+.SH "ENTRYPOINTS"
+
+The jabberd_t SELinux type can be entered via the "jabberd_exec_t" file type.  The default entrypoint paths for the jabberd_t domain are the following:"
+
+/usr/bin/sm, /usr/bin/s2s, /usr/sbin/jabberd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
+.PP
+The following process types are defined for jabberd:
+
+.EX
+.B jabberd_router_t, jabberd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a jabberd_t
+
+can be used to make the process type jabberd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for jabberd:
 
 
 .EX
 .PP
-.B jabberd_exec_t 
+.B jabberd_exec_t
 .EE
 
 - Set files with the jabberd_exec_t type, if you want to transition an executable to the jabberd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/jabberd, /usr/bin/s2s, /usr/bin/sm
 
 .EX
 .PP
-.B jabberd_initrc_exec_t 
+.B jabberd_initrc_exec_t
 .EE
 
 - Set files with the jabberd_initrc_exec_t type, if you want to transition an executable to the jabberd_initrc_t domain.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B jabberd_log_t 
+.B jabberd_log_t
 .EE
 
 - Set files with the jabberd_log_t type, if you want to treat the data as jabberd log data, usually stored under the /var/log directory.
@@ -47,31 +73,23 @@
 
 .EX
 .PP
-.B jabberd_router_exec_t 
+.B jabberd_router_exec_t
 .EE
 
 - Set files with the jabberd_router_exec_t type, if you want to transition an executable to the jabberd_router_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/c2s, /usr/bin/router
 
 .EX
 .PP
-.B jabberd_var_lib_t 
+.B jabberd_var_lib_t
 .EE
 
 - Set files with the jabberd_var_lib_t type, if you want to store the jabberd files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/jabberd(/.*)?, /var/lib/jabber(/.*)?
 
 .EX
 .PP
-.B jabberd_var_run_t 
+.B jabberd_var_run_t
 .EE
 
 - Set files with the jabberd_var_run_t type, if you want to store the jabberd files under the /run directory.
@@ -79,73 +97,127 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for jabberd:
 
 .EX
 .TP 5
-.B jabber_client_port_t 
+.B jabber_client_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5222,5223
 .EE
 
 .EX
 .TP 5
-.B jabber_interserver_port_t 
+.B jabber_interserver_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5269
 .EE
 
 .EX
 .TP 5
-.B jabber_router_port_t 
+.B jabber_router_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5347
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
-.PP 
-The following process types are defined for jabberd:
+.SH "MANAGED FILES"
 
-.EX
-.B jabberd_router_t, jabberd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type jabberd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B jabberd_log_t
+
+	/var/log/jabber(/.*)?
+.br
+
+.br
+.B jabberd_var_lib_t
+
+	/var/lib/jabber(/.*)?
+.br
+	/var/lib/jabberd(/.*)?
+.br
+
+.br
+.B jabberd_var_run_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -161,11 +233,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), jabberd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), jabberd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, jabberd_router_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/java_selinux.8 serefpolicy-3.7.19/man/man8/java_selinux.8
--- nsaserefpolicy/man/man8/java_selinux.8	2013-03-15 11:41:12.204153509 +0100
+++ serefpolicy-3.7.19/man/man8/java_selinux.8	2013-03-15 11:40:06.288152005 +0100
@@ -1,54 +1,81 @@
-.TH  "java_selinux"  "8"  "java" "dwalsh@redhat.com" "java SELinux Policy documentation"
+.TH  "java_selinux"  "8"  "13-01-04" "java" "SELinux Policy documentation for java"
 .SH "NAME"
 java_selinux \- Security Enhanced Linux Policy for the java processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the java processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B java
-(Java virtual machine)
-processes via flexible mandatory access
-control.  
+The java processes execute with the java_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep java_t
+
+
+.SH "ENTRYPOINTS"
+
+The java_t SELinux type can be entered via the "java_exec_t" file type.  The default entrypoint paths for the java_t domain are the following:"
+
+/usr/(.*/)?bin/java.*, /opt/(.*/)?bin/java[^/]*, /usr/lib(.*/)?bin/java[^/]*, /usr/lib(64)?/eclipse/eclipse, /opt/matlab.*/bin.*/MATLAB.*, /usr/matlab.*/bin.*/MATLAB.*, /usr/Aptana[^/]*/AptanaStudio, /opt/ibm/java.*/(bin|javaws)(/.*)?, /usr/lib/opera(/.*)?/opera, /usr/lib/opera(/.*)?/works, /usr/bin/octave-[^/]*, /usr/java/eclipse[^/]*/eclipse, /usr/lib/jvm/java(.*/)bin(/.*)?, /opt/local/matlab.*/bin.*/MATLAB.*, /usr/local/matlab.*/bin.*/MATLAB.*, /usr/lib64/jvm/java(.*/)bin(/.*)?, /opt/ibm/lotus/Symphony/framework/rcp/eclipse/plugins(/.*)?, /usr/bin/gij, /usr/bin/frysk, /usr/bin/grmic, /usr/bin/fastjar, /usr/bin/gkeytool, /usr/bin/gcj-dbtool, /usr/bin/gjarsigner, /usr/bin/jv-convert, /usr/bin/grmiregistry, /usr/bin/gappletviewer
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux java policy is very flexible allowing users to setup their java processes in as secure a method as possible.
+.PP
+The following process types are defined for java:
+
+.EX
+.B java_t
+.EE
+.PP
+Note:
+.B semanage permissive -a java_t
+
+can be used to make the process type java_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  java policy is extremely flexible and has several booleans that allow you to manipulate the policy and run java with the tightest access possible.
 
 
 .PP
-If you want to allow java executable stac, you must turn on the allow_java_execstack boolean.
+If you want to allow java executable stack, you must turn on the allow_java_execstack boolean.
+
+.EX
+.B setsebool -P allow_java_execstack 1
+.EE
+
+.PP
+If you want to allow java executable stack, you must turn on the allow_java_execstack boolean.
 
 .EX
 .B setsebool -P allow_java_execstack 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux java policy is very flexible allowing users to setup their java processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for java:
 
 
 .EX
 .PP
-.B java_exec_t 
+.B java_exec_t
 .EE
 
 - Set files with the java_exec_t type, if you want to transition an executable to the java_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/gcj-dbtool, /usr/bin/fastjar, /usr/bin/gij, /usr/(.*/)?bin/java.*, /usr/lib/jvm/java(.*/)bin(/.*)?, /usr/bin/jv-convert, /usr/bin/gkeytool, /usr/lib/opera(/.*)?/opera, /opt/local/matlab.*/bin.*/MATLAB.*, /usr/matlab.*/bin.*/MATLAB.*, /usr/bin/gjarsigner, /usr/java/eclipse[^/]*/eclipse, /usr/lib/opera(/.*)?/works, /opt/(.*/)?bin/java[^/]*, /usr/lib64/jvm/java(.*/)bin(/.*)?, /opt/ibm/lotus/Symphony/framework/rcp/eclipse/plugins(/.*)?, /usr/bin/octave-[^/]*, /usr/bin/grmic, /usr/local/matlab.*/bin.*/MATLAB.*, /usr/Aptana[^/]*/AptanaStudio, /opt/ibm/java.*/(bin|javaws)(/.*)?, /usr/bin/grmiregistry, /usr/bin/gappletviewer, /opt/matlab.*/bin.*/MATLAB.*, /usr/lib/eclipse/eclipse, /usr/bin/frysk, /usr/lib(.*/)?bin/java[^/]*
 
 .EX
 .PP
-.B java_tmp_t 
+.B java_tmp_t
 .EE
 
 - Set files with the java_tmp_t type, if you want to store java temporary files in the /tmp directories.
@@ -56,7 +83,7 @@
 
 .EX
 .PP
-.B java_tmpfs_t 
+.B java_tmpfs_t
 .EE
 
 - Set files with the java_tmpfs_t type, if you want to store java files on a tmpfs file system.
@@ -64,28 +91,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux java policy is very flexible allowing users to setup their java processes in as secure a method as possible.
-.PP 
-The following process types are defined for java:
+.SH "MANAGED FILES"
 
-.EX
-.B java_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type java_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B java_tmp_t
+
+
+.br
+.B java_tmpfs_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -101,12 +180,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), java(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), java(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/kadmind_selinux.8 serefpolicy-3.7.19/man/man8/kadmind_selinux.8
--- nsaserefpolicy/man/man8/kadmind_selinux.8	2013-03-15 11:41:12.071153506 +0100
+++ serefpolicy-3.7.19/man/man8/kadmind_selinux.8	2013-03-15 11:40:02.278151913 +0100
@@ -1,37 +1,63 @@
-.TH  "kadmind_selinux"  "8"  "kadmind" "dwalsh@redhat.com" "kadmind SELinux Policy documentation"
+.TH  "kadmind_selinux"  "8"  "13-01-04" "kadmind" "SELinux Policy documentation for kadmind"
 .SH "NAME"
 kadmind_selinux \- Security Enhanced Linux Policy for the kadmind processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the kadmind processes via flexible mandatory access control.
 
+The kadmind processes execute with the kadmind_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep kadmind_t
+
+
+.SH "ENTRYPOINTS"
+
+The kadmind_t SELinux type can be entered via the "kadmind_exec_t" file type.  The default entrypoint paths for the kadmind_t domain are the following:"
+
+/usr/(local/)?(kerberos/)?sbin/kadmind, /usr/kerberos/sbin/kadmin\.local
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux kadmind policy is very flexible allowing users to setup their kadmind processes in as secure a method as possible.
+.PP
+The following process types are defined for kadmind:
+
+.EX
+.B kadmind_t
+.EE
+.PP
+Note:
+.B semanage permissive -a kadmind_t
+
+can be used to make the process type kadmind_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux kadmind policy is very flexible allowing users to setup their kadmind processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for kadmind:
 
 
 .EX
 .PP
-.B kadmind_exec_t 
+.B kadmind_exec_t
 .EE
 
 - Set files with the kadmind_exec_t type, if you want to transition an executable to the kadmind_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/(local/)?(kerberos/)?sbin/kadmind, /usr/kerberos/sbin/kadmin\.local
 
 .EX
 .PP
-.B kadmind_log_t 
+.B kadmind_log_t
 .EE
 
 - Set files with the kadmind_log_t type, if you want to treat the data as kadmind log data, usually stored under the /var/log directory.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B kadmind_tmp_t 
+.B kadmind_tmp_t
 .EE
 
 - Set files with the kadmind_tmp_t type, if you want to store kadmind temporary files in the /tmp directories.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B kadmind_var_run_t 
+.B kadmind_var_run_t
 .EE
 
 - Set files with the kadmind_var_run_t type, if you want to store the kadmind files under the /run directory.
@@ -55,28 +81,114 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux kadmind policy is very flexible allowing users to setup their kadmind processes in as secure a method as possible.
-.PP 
-The following process types are defined for kadmind:
+.SH "MANAGED FILES"
 
-.EX
-.B kadmind_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type kadmind_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B kadmind_log_t
+
+	/var/log/kadmin(d)?\.log.*
+.br
+
+.br
+.B kadmind_tmp_t
+
+
+.br
+.B kadmind_var_run_t
+
+
+.br
+.B krb5kdc_conf_t
+
+	/etc/krb5kdc(/.*)?
+.br
+	/var/kerberos/krb5kdc(/.*)?
+.br
+	/usr/local/var/krb5kdc(/.*)?
+.br
+
+.br
+.B krb5kdc_lock_t
+
+	/var/kerberos/krb5kdc/principal.*\.ok
+.br
+	/var/kerberos/krb5kdc/from_master.*
+.br
+
+.br
+.B krb5kdc_principal_t
+
+	/etc/krb5kdc/principal.*
+.br
+	/var/kerberos/krb5kdc/principal.*
+.br
+	/usr/local/var/krb5kdc/principal.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -89,11 +201,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), kadmind(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), kadmind(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/kdumpgui_selinux.8 serefpolicy-3.7.19/man/man8/kdumpgui_selinux.8
--- nsaserefpolicy/man/man8/kdumpgui_selinux.8	2013-03-15 11:41:12.163153508 +0100
+++ serefpolicy-3.7.19/man/man8/kdumpgui_selinux.8	2013-03-15 11:40:04.411151962 +0100
@@ -1,31 +1,55 @@
-.TH  "kdumpgui_selinux"  "8"  "kdumpgui" "dwalsh@redhat.com" "kdumpgui SELinux Policy documentation"
+.TH  "kdumpgui_selinux"  "8"  "13-01-04" "kdumpgui" "SELinux Policy documentation for kdumpgui"
 .SH "NAME"
 kdumpgui_selinux \- Security Enhanced Linux Policy for the kdumpgui processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the kdumpgui processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B kdumpgui
-(system-config-kdump policy)
-processes via flexible mandatory access
-control.  
+The kdumpgui processes execute with the kdumpgui_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep kdumpgui_t
+
+
+.SH "ENTRYPOINTS"
+
+The kdumpgui_t SELinux type can be entered via the "kdumpgui_exec_t" file type.  The default entrypoint paths for the kdumpgui_t domain are the following:"
+
+/usr/share/system-config-kdump/system-config-kdump-backend.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux kdumpgui policy is very flexible allowing users to setup their kdumpgui processes in as secure a method as possible.
+.PP
+The following process types are defined for kdumpgui:
+
+.EX
+.B kdumpgui_t
+.EE
+.PP
+Note:
+.B semanage permissive -a kdumpgui_t
+
+can be used to make the process type kdumpgui_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux kdumpgui policy is very flexible allowing users to setup their kdumpgui processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for kdumpgui:
 
 
 .EX
 .PP
-.B kdumpgui_exec_t 
+.B kdumpgui_exec_t
 .EE
 
 - Set files with the kdumpgui_exec_t type, if you want to transition an executable to the kdumpgui_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B kdumpgui_tmp_t 
+.B kdumpgui_tmp_t
 .EE
 
 - Set files with the kdumpgui_tmp_t type, if you want to store kdumpgui temporary files in the /tmp directories.
@@ -41,28 +65,154 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux kdumpgui policy is very flexible allowing users to setup their kdumpgui processes in as secure a method as possible.
-.PP 
-The following process types are defined for kdumpgui:
+.SH "MANAGED FILES"
 
-.EX
-.B kdumpgui_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type kdumpgui_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B boot_t
+
+	/boot/.*
+.br
+	/vmlinuz.*
+.br
+	/initrd\.img.*
+.br
+	/boot
+.br
+
+.br
+.B bootloader_etc_t
+
+	/etc/zipl\.conf.*
+.br
+	/etc/lilo\.conf.*
+.br
+	/etc/yaboot\.conf.*
+.br
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B kdump_etc_t
+
+	/etc/kdump\.conf
+.br
+
+.br
+.B kdumpgui_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +225,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), kdumpgui(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), kdumpgui(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, kdump_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/kdump_selinux.8 serefpolicy-3.7.19/man/man8/kdump_selinux.8
--- nsaserefpolicy/man/man8/kdump_selinux.8	2013-03-15 11:41:10.104153461 +0100
+++ serefpolicy-3.7.19/man/man8/kdump_selinux.8	2013-03-15 11:39:54.167151728 +0100
@@ -1,31 +1,55 @@
-.TH  "kdump_selinux"  "8"  "kdump" "dwalsh@redhat.com" "kdump SELinux Policy documentation"
+.TH  "kdump_selinux"  "8"  "13-01-04" "kdump" "SELinux Policy documentation for kdump"
 .SH "NAME"
 kdump_selinux \- Security Enhanced Linux Policy for the kdump processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the kdump processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B kdump
-(Kernel crash dumping mechanism)
-processes via flexible mandatory access
-control.  
+The kdump processes execute with the kdump_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep kdump_t
+
+
+.SH "ENTRYPOINTS"
+
+The kdump_t SELinux type can be entered via the "kdump_exec_t" file type.  The default entrypoint paths for the kdump_t domain are the following:"
+
+/sbin/kdump, /sbin/kexec
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux kdump policy is very flexible allowing users to setup their kdump processes in as secure a method as possible.
+.PP
+The following process types are defined for kdump:
+
+.EX
+.B kdumpgui_t, kdump_t
+.EE
+.PP
+Note:
+.B semanage permissive -a kdump_t
+
+can be used to make the process type kdump_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux kdump policy is very flexible allowing users to setup their kdump processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for kdump:
 
 
 .EX
 .PP
-.B kdump_etc_t 
+.B kdump_etc_t
 .EE
 
 - Set files with the kdump_etc_t type, if you want to store kdump files in the /etc directories.
@@ -33,19 +57,15 @@
 
 .EX
 .PP
-.B kdump_exec_t 
+.B kdump_exec_t
 .EE
 
 - Set files with the kdump_exec_t type, if you want to transition an executable to the kdump_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/kdump, /sbin/kexec
 
 .EX
 .PP
-.B kdump_initrc_exec_t 
+.B kdump_initrc_exec_t
 .EE
 
 - Set files with the kdump_initrc_exec_t type, if you want to transition an executable to the kdump_initrc_t domain.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B kdumpgui_exec_t 
+.B kdumpgui_exec_t
 .EE
 
 - Set files with the kdumpgui_exec_t type, if you want to transition an executable to the kdumpgui_t domain.
@@ -61,7 +81,7 @@
 
 .EX
 .PP
-.B kdumpgui_tmp_t 
+.B kdumpgui_tmp_t
 .EE
 
 - Set files with the kdumpgui_tmp_t type, if you want to store kdumpgui temporary files in the /tmp directories.
@@ -69,28 +89,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux kdump policy is very flexible allowing users to setup their kdump processes in as secure a method as possible.
-.PP 
-The following process types are defined for kdump:
+.SH "MANAGED FILES"
 
-.EX
-.B kdumpgui_t, kdump_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type kdump_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,11 +151,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), kdump(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), kdump(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, kdumpgui_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/kerneloops_selinux.8 serefpolicy-3.7.19/man/man8/kerneloops_selinux.8
--- nsaserefpolicy/man/man8/kerneloops_selinux.8	2013-03-15 11:41:12.130153507 +0100
+++ serefpolicy-3.7.19/man/man8/kerneloops_selinux.8	2013-03-15 11:40:03.921151951 +0100
@@ -1,31 +1,55 @@
-.TH  "kerneloops_selinux"  "8"  "kerneloops" "dwalsh@redhat.com" "kerneloops SELinux Policy documentation"
+.TH  "kerneloops_selinux"  "8"  "13-01-04" "kerneloops" "SELinux Policy documentation for kerneloops"
 .SH "NAME"
 kerneloops_selinux \- Security Enhanced Linux Policy for the kerneloops processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the kerneloops processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B kerneloops
-(Service for reporting kernel oopses to kerneloops.org)
-processes via flexible mandatory access
-control.  
+The kerneloops processes execute with the kerneloops_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep kerneloops_t
+
+
+.SH "ENTRYPOINTS"
+
+The kerneloops_t SELinux type can be entered via the "kerneloops_exec_t" file type.  The default entrypoint paths for the kerneloops_t domain are the following:"
+
+/usr/sbin/kerneloops
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux kerneloops policy is very flexible allowing users to setup their kerneloops processes in as secure a method as possible.
+.PP
+The following process types are defined for kerneloops:
+
+.EX
+.B kerneloops_t
+.EE
+.PP
+Note:
+.B semanage permissive -a kerneloops_t
+
+can be used to make the process type kerneloops_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux kerneloops policy is very flexible allowing users to setup their kerneloops processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for kerneloops:
 
 
 .EX
 .PP
-.B kerneloops_exec_t 
+.B kerneloops_exec_t
 .EE
 
 - Set files with the kerneloops_exec_t type, if you want to transition an executable to the kerneloops_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B kerneloops_initrc_exec_t 
+.B kerneloops_initrc_exec_t
 .EE
 
 - Set files with the kerneloops_initrc_exec_t type, if you want to transition an executable to the kerneloops_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B kerneloops_tmp_t 
+.B kerneloops_tmp_t
 .EE
 
 - Set files with the kerneloops_tmp_t type, if you want to store kerneloops temporary files in the /tmp directories.
@@ -49,28 +73,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux kerneloops policy is very flexible allowing users to setup their kerneloops processes in as secure a method as possible.
-.PP 
-The following process types are defined for kerneloops:
+.SH "MANAGED FILES"
 
-.EX
-.B kerneloops_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type kerneloops_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B kerneloops_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +147,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), kerneloops(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), kerneloops(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/keystone_selinux.8 serefpolicy-3.7.19/man/man8/keystone_selinux.8
--- nsaserefpolicy/man/man8/keystone_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/keystone_selinux.8	2013-03-15 11:40:02.681151923 +0100
@@ -0,0 +1,135 @@
+.TH  "keystone_selinux"  "8"  "13-01-04" "keystone" "SELinux Policy documentation for keystone"
+.SH "NAME"
+keystone_selinux \- Security Enhanced Linux Policy for the keystone processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the keystone processes via flexible mandatory access control.
+
+The keystone processes execute with the keystone_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep keystone_t
+
+
+.SH "ENTRYPOINTS"
+
+The keystone_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,keystone_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the keystone_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/keystone-all, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux keystone policy is very flexible allowing users to setup their keystone processes in as secure a method as possible.
+.PP
+The following process types are defined for keystone:
+
+.EX
+.B keystone_t
+.EE
+.PP
+Note:
+.B semanage permissive -a keystone_t
+
+can be used to make the process type keystone_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux keystone policy is very flexible allowing users to setup their keystone processes in as secure a method as possible.
+.PP
+The following file types are defined for keystone:
+
+
+.EX
+.PP
+.B keystone_exec_t
+.EE
+
+- Set files with the keystone_exec_t type, if you want to transition an executable to the keystone_t domain.
+
+
+.EX
+.PP
+.B keystone_initrc_exec_t
+.EE
+
+- Set files with the keystone_initrc_exec_t type, if you want to transition an executable to the keystone_initrc_t domain.
+
+
+.EX
+.PP
+.B keystone_log_t
+.EE
+
+- Set files with the keystone_log_t type, if you want to treat the data as keystone log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B keystone_tmp_t
+.EE
+
+- Set files with the keystone_tmp_t type, if you want to store keystone temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B keystone_var_lib_t
+.EE
+
+- Set files with the keystone_var_lib_t type, if you want to store the keystone files under the /var/lib directory.
+
+
+.EX
+.PP
+.B keystone_var_run_t
+.EE
+
+- Set files with the keystone_var_run_t type, if you want to store the keystone files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type keystone_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), keystone(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/kismet_selinux.8 serefpolicy-3.7.19/man/man8/kismet_selinux.8
--- nsaserefpolicy/man/man8/kismet_selinux.8	2013-03-15 11:41:12.176153508 +0100
+++ serefpolicy-3.7.19/man/man8/kismet_selinux.8	2013-03-15 11:40:05.325151983 +0100
@@ -1,31 +1,55 @@
-.TH  "kismet_selinux"  "8"  "kismet" "dwalsh@redhat.com" "kismet SELinux Policy documentation"
+.TH  "kismet_selinux"  "8"  "13-01-04" "kismet" "SELinux Policy documentation for kismet"
 .SH "NAME"
 kismet_selinux \- Security Enhanced Linux Policy for the kismet processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the kismet processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B kismet
-(Kismet is an 802.11 layer2 wireless network detector, sniffer, and intrusion detection system)
-processes via flexible mandatory access
-control.  
+The kismet processes execute with the kismet_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep kismet_t
+
+
+.SH "ENTRYPOINTS"
+
+The kismet_t SELinux type can be entered via the "kismet_exec_t" file type.  The default entrypoint paths for the kismet_t domain are the following:"
+
+/usr/bin/kismet
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
+.PP
+The following process types are defined for kismet:
+
+.EX
+.B kismet_t
+.EE
+.PP
+Note:
+.B semanage permissive -a kismet_t
+
+can be used to make the process type kismet_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for kismet:
 
 
 .EX
 .PP
-.B kismet_exec_t 
+.B kismet_exec_t
 .EE
 
 - Set files with the kismet_exec_t type, if you want to transition an executable to the kismet_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B kismet_home_t 
+.B kismet_home_t
 .EE
 
 - Set files with the kismet_home_t type, if you want to store kismet files in the users home directory.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B kismet_log_t 
+.B kismet_log_t
 .EE
 
 - Set files with the kismet_log_t type, if you want to treat the data as kismet log data, usually stored under the /var/log directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B kismet_tmp_t 
+.B kismet_tmp_t
 .EE
 
 - Set files with the kismet_tmp_t type, if you want to store kismet temporary files in the /tmp directories.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B kismet_tmpfs_t 
+.B kismet_tmpfs_t
 .EE
 
 - Set files with the kismet_tmpfs_t type, if you want to store kismet files on a tmpfs file system.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B kismet_var_lib_t 
+.B kismet_var_lib_t
 .EE
 
 - Set files with the kismet_var_lib_t type, if you want to store the kismet files under the /var/lib directory.
@@ -73,7 +97,7 @@
 
 .EX
 .PP
-.B kismet_var_run_t 
+.B kismet_var_run_t
 .EE
 
 - Set files with the kismet_var_run_t type, if you want to store the kismet files under the /run directory.
@@ -81,51 +105,111 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for kismet:
 
 .EX
 .TP 5
-.B kismet_port_t 
+.B kismet_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 2501
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
-.PP 
-The following process types are defined for kismet:
+.SH "MANAGED FILES"
 
-.EX
-.B kismet_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type kismet_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B kismet_home_t
+
+	/home/[^/]*/\.kismet(/.*)?
+.br
+
+.br
+.B kismet_log_t
+
+	/var/log/kismet(/.*)?
+.br
+
+.br
+.B kismet_tmp_t
+
+
+.br
+.B kismet_tmpfs_t
+
+
+.br
+.B kismet_var_lib_t
+
+	/var/lib/kismet(/.*)?
+.br
+
+.br
+.B kismet_var_run_t
+
+	/var/run/kismet_server.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -141,11 +225,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), kismet(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), kismet(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/klogd_selinux.8 serefpolicy-3.7.19/man/man8/klogd_selinux.8
--- nsaserefpolicy/man/man8/klogd_selinux.8	2013-03-15 11:41:12.051153506 +0100
+++ serefpolicy-3.7.19/man/man8/klogd_selinux.8	2013-03-15 11:40:01.846151904 +0100
@@ -1,37 +1,63 @@
-.TH  "klogd_selinux"  "8"  "klogd" "dwalsh@redhat.com" "klogd SELinux Policy documentation"
+.TH  "klogd_selinux"  "8"  "13-01-04" "klogd" "SELinux Policy documentation for klogd"
 .SH "NAME"
 klogd_selinux \- Security Enhanced Linux Policy for the klogd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the klogd processes via flexible mandatory access control.
 
+The klogd processes execute with the klogd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep klogd_t
+
+
+.SH "ENTRYPOINTS"
+
+The klogd_t SELinux type can be entered via the "klogd_exec_t" file type.  The default entrypoint paths for the klogd_t domain are the following:"
+
+/sbin/klogd, /sbin/rklogd, /usr/sbin/klogd, /usr/sbin/rklogd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux klogd policy is very flexible allowing users to setup their klogd processes in as secure a method as possible.
+.PP
+The following process types are defined for klogd:
+
+.EX
+.B klogd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a klogd_t
+
+can be used to make the process type klogd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux klogd policy is very flexible allowing users to setup their klogd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for klogd:
 
 
 .EX
 .PP
-.B klogd_exec_t 
+.B klogd_exec_t
 .EE
 
 - Set files with the klogd_exec_t type, if you want to transition an executable to the klogd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/rklogd, /sbin/klogd, /sbin/rklogd, /usr/sbin/klogd
 
 .EX
 .PP
-.B klogd_tmp_t 
+.B klogd_tmp_t
 .EE
 
 - Set files with the klogd_tmp_t type, if you want to store klogd temporary files in the /tmp directories.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B klogd_var_run_t 
+.B klogd_var_run_t
 .EE
 
 - Set files with the klogd_var_run_t type, if you want to store the klogd files under the /run directory.
@@ -47,28 +73,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux klogd policy is very flexible allowing users to setup their klogd processes in as secure a method as possible.
-.PP 
-The following process types are defined for klogd:
+.SH "MANAGED FILES"
 
-.EX
-.B klogd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type klogd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B klogd_tmp_t
+
+
+.br
+.B klogd_var_run_t
+
+	/var/run/klogd\.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -81,11 +153,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), klogd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), klogd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/kpropd_selinux.8 serefpolicy-3.7.19/man/man8/kpropd_selinux.8
--- nsaserefpolicy/man/man8/kpropd_selinux.8	2013-03-15 11:41:12.179153508 +0100
+++ serefpolicy-3.7.19/man/man8/kpropd_selinux.8	2013-03-15 11:40:05.871151995 +0100
@@ -1,25 +1,55 @@
-.TH  "kpropd_selinux"  "8"  "kpropd" "dwalsh@redhat.com" "kpropd SELinux Policy documentation"
+.TH  "kpropd_selinux"  "8"  "13-01-04" "kpropd" "SELinux Policy documentation for kpropd"
 .SH "NAME"
 kpropd_selinux \- Security Enhanced Linux Policy for the kpropd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the kpropd processes via flexible mandatory access control.
 
+The kpropd processes execute with the kpropd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep kpropd_t
+
+
+.SH "ENTRYPOINTS"
+
+The kpropd_t SELinux type can be entered via the "kpropd_exec_t" file type.  The default entrypoint paths for the kpropd_t domain are the following:"
+
+/usr/kerberos/sbin/kpropd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
+.PP
+The following process types are defined for kpropd:
+
+.EX
+.B kpropd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a kpropd_t
+
+can be used to make the process type kpropd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for kpropd:
 
 
 .EX
 .PP
-.B kpropd_exec_t 
+.B kpropd_exec_t
 .EE
 
 - Set files with the kpropd_exec_t type, if you want to transition an executable to the kpropd_t domain.
@@ -27,51 +57,123 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for kpropd:
 
 .EX
 .TP 5
-.B kprop_port_t 
+.B kprop_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 754
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
-.PP 
-The following process types are defined for kpropd:
+.SH "MANAGED FILES"
 
-.EX
-.B kpropd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type kpropd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B krb5kdc_lock_t
+
+	/var/kerberos/krb5kdc/principal.*\.ok
+.br
+	/var/kerberos/krb5kdc/from_master.*
+.br
+
+.br
+.B krb5kdc_principal_t
+
+	/etc/krb5kdc/principal.*
+.br
+	/var/kerberos/krb5kdc/principal.*
+.br
+	/usr/local/var/krb5kdc/principal.*
+.br
+
+.br
+.B krb5kdc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -87,11 +189,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), kpropd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), kpropd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/krb5kdc_selinux.8 serefpolicy-3.7.19/man/man8/krb5kdc_selinux.8
--- nsaserefpolicy/man/man8/krb5kdc_selinux.8	2013-03-15 11:41:12.040153505 +0100
+++ serefpolicy-3.7.19/man/man8/krb5kdc_selinux.8	2013-03-15 11:40:01.846151904 +0100
@@ -1,37 +1,63 @@
-.TH  "krb5kdc_selinux"  "8"  "krb5kdc" "dwalsh@redhat.com" "krb5kdc SELinux Policy documentation"
+.TH  "krb5kdc_selinux"  "8"  "13-01-04" "krb5kdc" "SELinux Policy documentation for krb5kdc"
 .SH "NAME"
 krb5kdc_selinux \- Security Enhanced Linux Policy for the krb5kdc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the krb5kdc processes via flexible mandatory access control.
 
+The krb5kdc processes execute with the krb5kdc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep krb5kdc_t
+
+
+.SH "ENTRYPOINTS"
+
+The krb5kdc_t SELinux type can be entered via the "krb5kdc_exec_t" file type.  The default entrypoint paths for the krb5kdc_t domain are the following:"
+
+/usr/(local/)?(kerberos/)?sbin/krb5kdc
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux krb5kdc policy is very flexible allowing users to setup their krb5kdc processes in as secure a method as possible.
+.PP
+The following process types are defined for krb5kdc:
+
+.EX
+.B krb5kdc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a krb5kdc_t
+
+can be used to make the process type krb5kdc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux krb5kdc policy is very flexible allowing users to setup their krb5kdc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for krb5kdc:
 
 
 .EX
 .PP
-.B krb5kdc_conf_t 
+.B krb5kdc_conf_t
 .EE
 
 - Set files with the krb5kdc_conf_t type, if you want to treat the files as krb5kdc configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/var/kerberos/krb5kdc(/.*)?, /etc/krb5kdc(/.*)?, /usr/local/var/krb5kdc(/.*)?
 
 .EX
 .PP
-.B krb5kdc_exec_t 
+.B krb5kdc_exec_t
 .EE
 
 - Set files with the krb5kdc_exec_t type, if you want to transition an executable to the krb5kdc_t domain.
@@ -39,19 +65,15 @@
 
 .EX
 .PP
-.B krb5kdc_lock_t 
+.B krb5kdc_lock_t
 .EE
 
 - Set files with the krb5kdc_lock_t type, if you want to treat the files as krb5kdc lock data, stored under the /var/lock directory
 
-.br
-.TP 5
-Paths: 
-/var/kerberos/krb5kdc/principal.*\.ok, /var/kerberos/krb5kdc/from_master.*
 
 .EX
 .PP
-.B krb5kdc_log_t 
+.B krb5kdc_log_t
 .EE
 
 - Set files with the krb5kdc_log_t type, if you want to treat the data as krb5kdc log data, usually stored under the /var/log directory.
@@ -59,19 +81,15 @@
 
 .EX
 .PP
-.B krb5kdc_principal_t 
+.B krb5kdc_principal_t
 .EE
 
 - Set files with the krb5kdc_principal_t type, if you want to treat the files as krb5kdc principal data.
 
-.br
-.TP 5
-Paths: 
-/etc/krb5kdc/principal.*, /var/kerberos/krb5kdc/principal.*, /usr/local/var/krb5kdc/principal.*
 
 .EX
 .PP
-.B krb5kdc_tmp_t 
+.B krb5kdc_tmp_t
 .EE
 
 - Set files with the krb5kdc_tmp_t type, if you want to store krb5kdc temporary files in the /tmp directories.
@@ -79,7 +97,7 @@
 
 .EX
 .PP
-.B krb5kdc_var_run_t 
+.B krb5kdc_var_run_t
 .EE
 
 - Set files with the krb5kdc_var_run_t type, if you want to store the krb5kdc files under the /run directory.
@@ -87,28 +105,104 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux krb5kdc policy is very flexible allowing users to setup their krb5kdc processes in as secure a method as possible.
-.PP 
-The following process types are defined for krb5kdc:
+.SH "MANAGED FILES"
 
-.EX
-.B krb5kdc_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type krb5kdc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5kdc_lock_t
+
+	/var/kerberos/krb5kdc/principal.*\.ok
+.br
+	/var/kerberos/krb5kdc/from_master.*
+.br
+
+.br
+.B krb5kdc_log_t
+
+	/var/log/krb5kdc\.log.*
+.br
+
+.br
+.B krb5kdc_principal_t
+
+	/etc/krb5kdc/principal.*
+.br
+	/var/kerberos/krb5kdc/principal.*
+.br
+	/usr/local/var/krb5kdc/principal.*
+.br
+
+.br
+.B krb5kdc_tmp_t
+
+
+.br
+.B krb5kdc_var_run_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -121,11 +215,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), krb5kdc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), krb5kdc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ksmtuned_selinux.8 serefpolicy-3.7.19/man/man8/ksmtuned_selinux.8
--- nsaserefpolicy/man/man8/ksmtuned_selinux.8	2013-03-15 11:41:10.574153472 +0100
+++ serefpolicy-3.7.19/man/man8/ksmtuned_selinux.8	2013-03-15 11:39:54.653151739 +0100
@@ -1,31 +1,55 @@
-.TH  "ksmtuned_selinux"  "8"  "ksmtuned" "dwalsh@redhat.com" "ksmtuned SELinux Policy documentation"
+.TH  "ksmtuned_selinux"  "8"  "13-01-04" "ksmtuned" "SELinux Policy documentation for ksmtuned"
 .SH "NAME"
 ksmtuned_selinux \- Security Enhanced Linux Policy for the ksmtuned processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ksmtuned processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ksmtuned
-(Kernel Samepage Merging (KSM) Tuning Daemon)
-processes via flexible mandatory access
-control.  
+The ksmtuned processes execute with the ksmtuned_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ksmtuned_t
+
+
+.SH "ENTRYPOINTS"
+
+The ksmtuned_t SELinux type can be entered via the "ksmtuned_exec_t" file type.  The default entrypoint paths for the ksmtuned_t domain are the following:"
+
+/usr/sbin/ksmtuned
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ksmtuned policy is very flexible allowing users to setup their ksmtuned processes in as secure a method as possible.
+.PP
+The following process types are defined for ksmtuned:
+
+.EX
+.B ksmtuned_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ksmtuned_t
+
+can be used to make the process type ksmtuned_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ksmtuned policy is very flexible allowing users to setup their ksmtuned processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ksmtuned:
 
 
 .EX
 .PP
-.B ksmtuned_exec_t 
+.B ksmtuned_exec_t
 .EE
 
 - Set files with the ksmtuned_exec_t type, if you want to transition an executable to the ksmtuned_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B ksmtuned_initrc_exec_t 
+.B ksmtuned_initrc_exec_t
 .EE
 
 - Set files with the ksmtuned_initrc_exec_t type, if you want to transition an executable to the ksmtuned_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B ksmtuned_log_t 
+.B ksmtuned_log_t
 .EE
 
 - Set files with the ksmtuned_log_t type, if you want to treat the data as ksmtuned log data, usually stored under the /var/log directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B ksmtuned_var_run_t 
+.B ksmtuned_var_run_t
 .EE
 
 - Set files with the ksmtuned_var_run_t type, if you want to store the ksmtuned files under the /run directory.
@@ -57,28 +81,82 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ksmtuned policy is very flexible allowing users to setup their ksmtuned processes in as secure a method as possible.
-.PP 
-The following process types are defined for ksmtuned:
+.SH "MANAGED FILES"
 
-.EX
-.B ksmtuned_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ksmtuned_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B ksmtuned_log_t
+
+	/var/log/ksmtuned.*
+.br
+
+.br
+.B ksmtuned_var_run_t
+
+	/var/run/ksmtune\.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +169,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ksmtuned(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ksmtuned(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ktalkd_selinux.8 serefpolicy-3.7.19/man/man8/ktalkd_selinux.8
--- nsaserefpolicy/man/man8/ktalkd_selinux.8	2013-03-15 11:41:11.866153501 +0100
+++ serefpolicy-3.7.19/man/man8/ktalkd_selinux.8	2013-03-15 11:39:58.859151835 +0100
@@ -1,37 +1,63 @@
-.TH  "ktalkd_selinux"  "8"  "ktalkd" "dwalsh@redhat.com" "ktalkd SELinux Policy documentation"
+.TH  "ktalkd_selinux"  "8"  "13-01-04" "ktalkd" "SELinux Policy documentation for ktalkd"
 .SH "NAME"
 ktalkd_selinux \- Security Enhanced Linux Policy for the ktalkd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ktalkd processes via flexible mandatory access control.
 
+The ktalkd processes execute with the ktalkd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ktalkd_t
+
+
+.SH "ENTRYPOINTS"
+
+The ktalkd_t SELinux type can be entered via the "ktalkd_exec_t" file type.  The default entrypoint paths for the ktalkd_t domain are the following:"
+
+/usr/bin/ktalkd, /usr/sbin/in\.talkd, /usr/sbin/in\.ntalkd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
+.PP
+The following process types are defined for ktalkd:
+
+.EX
+.B ktalkd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ktalkd_t
+
+can be used to make the process type ktalkd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ktalkd:
 
 
 .EX
 .PP
-.B ktalkd_exec_t 
+.B ktalkd_exec_t
 .EE
 
 - Set files with the ktalkd_exec_t type, if you want to transition an executable to the ktalkd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/in\.talkd, /usr/bin/ktalkd, /usr/sbin/in\.ntalkd
 
 .EX
 .PP
-.B ktalkd_log_t 
+.B ktalkd_log_t
 .EE
 
 - Set files with the ktalkd_log_t type, if you want to treat the data as ktalkd log data, usually stored under the /var/log directory.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B ktalkd_tmp_t 
+.B ktalkd_tmp_t
 .EE
 
 - Set files with the ktalkd_tmp_t type, if you want to store ktalkd temporary files in the /tmp directories.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B ktalkd_var_run_t 
+.B ktalkd_var_run_t
 .EE
 
 - Set files with the ktalkd_var_run_t type, if you want to store the ktalkd files under the /run directory.
@@ -55,51 +81,93 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ktalkd:
 
 .EX
 .TP 5
-.B ktalkd_port_t 
+.B ktalkd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 517,518
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
-.PP 
-The following process types are defined for ktalkd:
+.SH "MANAGED FILES"
 
-.EX
-.B ktalkd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ktalkd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B ktalkd_log_t
+
+	/var/log/talkd.*
+.br
+
+.br
+.B ktalkd_tmp_t
+
+
+.br
+.B ktalkd_var_run_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +183,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ktalkd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ktalkd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/kudzu_selinux.8 serefpolicy-3.7.19/man/man8/kudzu_selinux.8
--- nsaserefpolicy/man/man8/kudzu_selinux.8	2013-03-15 11:41:11.878153502 +0100
+++ serefpolicy-3.7.19/man/man8/kudzu_selinux.8	2013-03-15 11:39:59.157151842 +0100
@@ -1,43 +1,63 @@
-.TH  "kudzu_selinux"  "8"  "kudzu" "dwalsh@redhat.com" "kudzu SELinux Policy documentation"
+.TH  "kudzu_selinux"  "8"  "13-01-04" "kudzu" "SELinux Policy documentation for kudzu"
 .SH "NAME"
 kudzu_selinux \- Security Enhanced Linux Policy for the kudzu processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the kudzu processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B kudzu
-(Hardware detection and configuration tools)
-processes via flexible mandatory access
-control.  
+The kudzu processes execute with the kudzu_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep kudzu_t
+
+
+.SH "ENTRYPOINTS"
+
+The kudzu_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,kudzu_exec_t" file types.  The default entrypoint paths for the kudzu_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /sbin/kudzu, /sbin/kmodule, /usr/sbin/kudzu
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux kudzu policy is very flexible allowing users to setup their kudzu processes in as secure a method as possible.
+.PP
+The following process types are defined for kudzu:
+
+.EX
+.B kudzu_t
+.EE
+.PP
+Note:
+.B semanage permissive -a kudzu_t
+
+can be used to make the process type kudzu_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux kudzu policy is very flexible allowing users to setup their kudzu processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for kudzu:
 
 
 .EX
 .PP
-.B kudzu_exec_t 
+.B kudzu_exec_t
 .EE
 
 - Set files with the kudzu_exec_t type, if you want to transition an executable to the kudzu_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/kudzu, /sbin/kudzu, /sbin/kmodule
 
 .EX
 .PP
-.B kudzu_tmp_t 
+.B kudzu_tmp_t
 .EE
 
 - Set files with the kudzu_tmp_t type, if you want to store kudzu temporary files in the /tmp directories.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B kudzu_var_run_t 
+.B kudzu_var_run_t
 .EE
 
 - Set files with the kudzu_var_run_t type, if you want to store the kudzu files under the /run directory.
@@ -53,28 +73,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux kudzu policy is very flexible allowing users to setup their kudzu processes in as secure a method as possible.
-.PP 
-The following process types are defined for kudzu:
+.SH "MANAGED FILES"
 
-.EX
-.B kudzu_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type kudzu_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -87,11 +99,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), kudzu(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), kudzu(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/l2tpd_selinux.8 serefpolicy-3.7.19/man/man8/l2tpd_selinux.8
--- nsaserefpolicy/man/man8/l2tpd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/l2tpd_selinux.8	2013-03-15 11:40:05.242151981 +0100
@@ -0,0 +1,147 @@
+.TH  "l2tpd_selinux"  "8"  "13-01-04" "l2tpd" "SELinux Policy documentation for l2tpd"
+.SH "NAME"
+l2tpd_selinux \- Security Enhanced Linux Policy for the l2tpd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the l2tpd processes via flexible mandatory access control.
+
+The l2tpd processes execute with the l2tpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep l2tpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The l2tpd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,l2tpd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the l2tpd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/xl2tpd, /usr/sbin/prol2tpd, /usr/sbin/openl2tpd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux l2tpd policy is very flexible allowing users to setup their l2tpd processes in as secure a method as possible.
+.PP
+The following process types are defined for l2tpd:
+
+.EX
+.B l2tpd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a l2tpd_t
+
+can be used to make the process type l2tpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux l2tpd policy is very flexible allowing users to setup their l2tpd processes in as secure a method as possible.
+.PP
+The following file types are defined for l2tpd:
+
+
+.EX
+.PP
+.B l2tpd_exec_t
+.EE
+
+- Set files with the l2tpd_exec_t type, if you want to transition an executable to the l2tpd_t domain.
+
+
+.EX
+.PP
+.B l2tpd_initrc_exec_t
+.EE
+
+- Set files with the l2tpd_initrc_exec_t type, if you want to transition an executable to the l2tpd_initrc_t domain.
+
+
+.EX
+.PP
+.B l2tpd_tmp_t
+.EE
+
+- Set files with the l2tpd_tmp_t type, if you want to store l2tpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B l2tpd_var_run_t
+.EE
+
+- Set files with the l2tpd_var_run_t type, if you want to store the l2tpd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports.
+.PP
+You can see the types associated with a port by using the following command:
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports.
+SELinux l2tpd policy is very flexible allowing users to setup their l2tpd processes in as secure a method as possible.
+.PP
+The following port types are defined for l2tpd:
+
+.EX
+.TP 5
+.B l2tp_port_t
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 1701
+.EE
+udp 1701
+.EE
+.SH "MANAGED FILES"
+
+The SELinux process type l2tpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), l2tpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ldconfig_selinux.8 serefpolicy-3.7.19/man/man8/ldconfig_selinux.8
--- nsaserefpolicy/man/man8/ldconfig_selinux.8	2013-03-15 11:41:10.807153477 +0100
+++ serefpolicy-3.7.19/man/man8/ldconfig_selinux.8	2013-03-15 11:39:54.995151747 +0100
@@ -1,25 +1,55 @@
-.TH  "ldconfig_selinux"  "8"  "ldconfig" "dwalsh@redhat.com" "ldconfig SELinux Policy documentation"
+.TH  "ldconfig_selinux"  "8"  "13-01-04" "ldconfig" "SELinux Policy documentation for ldconfig"
 .SH "NAME"
 ldconfig_selinux \- Security Enhanced Linux Policy for the ldconfig processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ldconfig processes via flexible mandatory access control.
 
+The ldconfig processes execute with the ldconfig_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ldconfig_t
+
+
+.SH "ENTRYPOINTS"
+
+The ldconfig_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,ldconfig_exec_t" file types.  The default entrypoint paths for the ldconfig_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /sbin/ldconfig
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ldconfig policy is very flexible allowing users to setup their ldconfig processes in as secure a method as possible.
+.PP
+The following process types are defined for ldconfig:
+
+.EX
+.B ldconfig_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ldconfig_t
+
+can be used to make the process type ldconfig_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ldconfig policy is very flexible allowing users to setup their ldconfig processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ldconfig:
 
 
 .EX
 .PP
-.B ldconfig_cache_t 
+.B ldconfig_cache_t
 .EE
 
 - Set files with the ldconfig_cache_t type, if you want to store the files under the /var/cache directory.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B ldconfig_exec_t 
+.B ldconfig_exec_t
 .EE
 
 - Set files with the ldconfig_exec_t type, if you want to transition an executable to the ldconfig_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B ldconfig_tmp_t 
+.B ldconfig_tmp_t
 .EE
 
 - Set files with the ldconfig_tmp_t type, if you want to store ldconfig temporary files in the /tmp directories.
@@ -43,28 +73,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ldconfig policy is very flexible allowing users to setup their ldconfig processes in as secure a method as possible.
-.PP 
-The following process types are defined for ldconfig:
+.SH "MANAGED FILES"
 
-.EX
-.B ldconfig_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ldconfig_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -77,11 +99,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ldconfig(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ldconfig(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/libvirt_selinux.8 serefpolicy-3.7.19/man/man8/libvirt_selinux.8
--- nsaserefpolicy/man/man8/libvirt_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/libvirt_selinux.8	2013-03-15 11:39:57.110151796 +0100
@@ -0,0 +1 @@
+.so man8/virtd_selinux.8
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/lircd_selinux.8 serefpolicy-3.7.19/man/man8/lircd_selinux.8
--- nsaserefpolicy/man/man8/lircd_selinux.8	2013-03-15 11:41:11.839153501 +0100
+++ serefpolicy-3.7.19/man/man8/lircd_selinux.8	2013-03-15 11:39:58.023151816 +0100
@@ -1,31 +1,55 @@
-.TH  "lircd_selinux"  "8"  "lircd" "dwalsh@redhat.com" "lircd SELinux Policy documentation"
+.TH  "lircd_selinux"  "8"  "13-01-04" "lircd" "SELinux Policy documentation for lircd"
 .SH "NAME"
 lircd_selinux \- Security Enhanced Linux Policy for the lircd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lircd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B lircd
-(Linux infared remote control daemon)
-processes via flexible mandatory access
-control.  
+The lircd processes execute with the lircd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep lircd_t
+
+
+.SH "ENTRYPOINTS"
+
+The lircd_t SELinux type can be entered via the "lircd_exec_t" file type.  The default entrypoint paths for the lircd_t domain are the following:"
+
+/usr/sbin/lircd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
+.PP
+The following process types are defined for lircd:
+
+.EX
+.B lircd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lircd_t
+
+can be used to make the process type lircd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lircd:
 
 
 .EX
 .PP
-.B lircd_etc_t 
+.B lircd_etc_t
 .EE
 
 - Set files with the lircd_etc_t type, if you want to store lircd files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B lircd_exec_t 
+.B lircd_exec_t
 .EE
 
 - Set files with the lircd_exec_t type, if you want to transition an executable to the lircd_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B lircd_initrc_exec_t 
+.B lircd_initrc_exec_t
 .EE
 
 - Set files with the lircd_initrc_exec_t type, if you want to transition an executable to the lircd_initrc_t domain.
@@ -49,63 +73,111 @@
 
 .EX
 .PP
-.B lircd_var_run_t 
+.B lircd_var_run_t
 .EE
 
 - Set files with the lircd_var_run_t type, if you want to store the lircd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/lirc(/.*)?, /var/run/lircd(/.*)?, /var/run/lircd\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for lircd:
 
 .EX
 .TP 5
-.B lirc_port_t 
+.B lirc_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 8765
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
-.PP 
-The following process types are defined for lircd:
+.SH "MANAGED FILES"
 
-.EX
-.B lircd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lircd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B lircd_var_run_t
+
+	/var/run/lirc(/.*)?
+.br
+	/var/run/lircd(/.*)?
+.br
+	/var/run/lircd\.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_lock_t
+
+	/var/lock(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -121,11 +193,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lircd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), lircd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/livecd_selinux.8 serefpolicy-3.7.19/man/man8/livecd_selinux.8
--- nsaserefpolicy/man/man8/livecd_selinux.8	2013-03-15 11:41:12.105153507 +0100
+++ serefpolicy-3.7.19/man/man8/livecd_selinux.8	2013-03-15 11:40:03.346151938 +0100
@@ -1,31 +1,55 @@
-.TH  "livecd_selinux"  "8"  "livecd" "dwalsh@redhat.com" "livecd SELinux Policy documentation"
+.TH  "livecd_selinux"  "8"  "13-01-04" "livecd" "SELinux Policy documentation for livecd"
 .SH "NAME"
 livecd_selinux \- Security Enhanced Linux Policy for the livecd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the livecd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B livecd
-(policy for livecd)
-processes via flexible mandatory access
-control.  
+The livecd processes execute with the livecd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep livecd_t
+
+
+.SH "ENTRYPOINTS"
+
+The livecd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,livecd_exec_t,file_type" file types.  The default entrypoint paths for the livecd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/livecd-creator, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux livecd policy is very flexible allowing users to setup their livecd processes in as secure a method as possible.
+.PP
+The following process types are defined for livecd:
+
+.EX
+.B livecd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a livecd_t
+
+can be used to make the process type livecd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux livecd policy is very flexible allowing users to setup their livecd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for livecd:
 
 
 .EX
 .PP
-.B livecd_exec_t 
+.B livecd_exec_t
 .EE
 
 - Set files with the livecd_exec_t type, if you want to transition an executable to the livecd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B livecd_tmp_t 
+.B livecd_tmp_t
 .EE
 
 - Set files with the livecd_tmp_t type, if you want to store livecd temporary files in the /tmp directories.
@@ -41,28 +65,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux livecd policy is very flexible allowing users to setup their livecd processes in as secure a method as possible.
-.PP 
-The following process types are defined for livecd:
+.SH "MANAGED FILES"
 
-.EX
-.B livecd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type livecd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +91,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), livecd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), livecd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/lldpad_selinux.8 serefpolicy-3.7.19/man/man8/lldpad_selinux.8
--- nsaserefpolicy/man/man8/lldpad_selinux.8	2013-03-15 11:41:12.175153508 +0100
+++ serefpolicy-3.7.19/man/man8/lldpad_selinux.8	2013-03-15 11:40:05.309151983 +0100
@@ -1,31 +1,55 @@
-.TH  "lldpad_selinux"  "8"  "lldpad" "dwalsh@redhat.com" "lldpad SELinux Policy documentation"
+.TH  "lldpad_selinux"  "8"  "13-01-04" "lldpad" "SELinux Policy documentation for lldpad"
 .SH "NAME"
 lldpad_selinux \- Security Enhanced Linux Policy for the lldpad processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lldpad processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B lldpad
-(policy for lldpad)
-processes via flexible mandatory access
-control.  
+The lldpad processes execute with the lldpad_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep lldpad_t
+
+
+.SH "ENTRYPOINTS"
+
+The lldpad_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,lldpad_exec_t" file types.  The default entrypoint paths for the lldpad_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/lldpad
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lldpad policy is very flexible allowing users to setup their lldpad processes in as secure a method as possible.
+.PP
+The following process types are defined for lldpad:
+
+.EX
+.B lldpad_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lldpad_t
+
+can be used to make the process type lldpad_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lldpad policy is very flexible allowing users to setup their lldpad processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lldpad:
 
 
 .EX
 .PP
-.B lldpad_exec_t 
+.B lldpad_exec_t
 .EE
 
 - Set files with the lldpad_exec_t type, if you want to transition an executable to the lldpad_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B lldpad_initrc_exec_t 
+.B lldpad_initrc_exec_t
 .EE
 
 - Set files with the lldpad_initrc_exec_t type, if you want to transition an executable to the lldpad_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B lldpad_tmpfs_t 
+.B lldpad_tmpfs_t
 .EE
 
 - Set files with the lldpad_tmpfs_t type, if you want to store lldpad files on a tmpfs file system.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B lldpad_var_lib_t 
+.B lldpad_var_lib_t
 .EE
 
 - Set files with the lldpad_var_lib_t type, if you want to store the lldpad files under the /var/lib directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B lldpad_var_run_t 
+.B lldpad_var_run_t
 .EE
 
 - Set files with the lldpad_var_run_t type, if you want to store the lldpad files under the /run directory.
@@ -65,28 +89,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lldpad policy is very flexible allowing users to setup their lldpad processes in as secure a method as possible.
-.PP 
-The following process types are defined for lldpad:
+.SH "MANAGED FILES"
 
-.EX
-.B lldpad_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lldpad_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -99,11 +115,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lldpad(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), lldpad(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/loadkeys_selinux.8 serefpolicy-3.7.19/man/man8/loadkeys_selinux.8
--- nsaserefpolicy/man/man8/loadkeys_selinux.8	2013-03-15 11:41:11.213153486 +0100
+++ serefpolicy-3.7.19/man/man8/loadkeys_selinux.8	2013-03-15 11:39:55.405151757 +0100
@@ -1,64 +1,112 @@
-.TH  "loadkeys_selinux"  "8"  "loadkeys" "dwalsh@redhat.com" "loadkeys SELinux Policy documentation"
+.TH  "loadkeys_selinux"  "8"  "13-01-04" "loadkeys" "SELinux Policy documentation for loadkeys"
 .SH "NAME"
 loadkeys_selinux \- Security Enhanced Linux Policy for the loadkeys processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the loadkeys processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B loadkeys
-(Load keyboard mappings)
-processes via flexible mandatory access
-control.  
+The loadkeys processes execute with the loadkeys_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep loadkeys_t
+
+
+.SH "ENTRYPOINTS"
+
+The loadkeys_t SELinux type can be entered via the "loadkeys_exec_t" file type.  The default entrypoint paths for the loadkeys_t domain are the following:"
+
+/bin/unikeys, /bin/loadkeys
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux loadkeys policy is very flexible allowing users to setup their loadkeys processes in as secure a method as possible.
+.PP
+The following process types are defined for loadkeys:
+
+.EX
+.B loadkeys_t
+.EE
+.PP
+Note:
+.B semanage permissive -a loadkeys_t
+
+can be used to make the process type loadkeys_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux loadkeys policy is very flexible allowing users to setup their loadkeys processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for loadkeys:
 
 
 .EX
 .PP
-.B loadkeys_exec_t 
+.B loadkeys_exec_t
 .EE
 
 - Set files with the loadkeys_exec_t type, if you want to transition an executable to the loadkeys_t domain.
 
-.br
-.TP 5
-Paths: 
-/bin/unikeys, /bin/loadkeys
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux loadkeys policy is very flexible allowing users to setup their loadkeys processes in as secure a method as possible.
-.PP 
-The following process types are defined for loadkeys:
+.SH "MANAGED FILES"
 
-.EX
-.B loadkeys_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type loadkeys_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -71,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), loadkeys(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), loadkeys(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/load_policy_selinux.8 serefpolicy-3.7.19/man/man8/load_policy_selinux.8
--- nsaserefpolicy/man/man8/load_policy_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/load_policy_selinux.8	2013-03-15 11:40:04.570151966 +0100
@@ -0,0 +1,136 @@
+.TH  "load_policy_selinux"  "8"  "13-01-04" "load_policy" "SELinux Policy documentation for load_policy"
+.SH "NAME"
+load_policy_selinux \- Security Enhanced Linux Policy for the load_policy processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the load_policy processes via flexible mandatory access control.
+
+The load_policy processes execute with the load_policy_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep load_policy_t
+
+
+.SH "ENTRYPOINTS"
+
+The load_policy_t SELinux type can be entered via the "load_policy_exec_t" file type.  The default entrypoint paths for the load_policy_t domain are the following:"
+
+/sbin/load_policy, /usr/sbin/load_policy
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux load_policy policy is very flexible allowing users to setup their load_policy processes in as secure a method as possible.
+.PP
+The following process types are defined for load_policy:
+
+.EX
+.B load_policy_t
+.EE
+.PP
+Note:
+.B semanage permissive -a load_policy_t
+
+can be used to make the process type load_policy_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux load_policy policy is very flexible allowing users to setup their load_policy processes in as secure a method as possible.
+.PP
+The following file types are defined for load_policy:
+
+
+.EX
+.PP
+.B load_policy_exec_t
+.EE
+
+- Set files with the load_policy_exec_t type, if you want to transition an executable to the load_policy_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type load_policy_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B boolean_type
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), load_policy(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, loadkeys_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/locate_selinux.8 serefpolicy-3.7.19/man/man8/locate_selinux.8
--- nsaserefpolicy/man/man8/locate_selinux.8	2013-03-15 11:41:12.022153505 +0100
+++ serefpolicy-3.7.19/man/man8/locate_selinux.8	2013-03-15 11:40:01.133151887 +0100
@@ -1,25 +1,55 @@
-.TH  "locate_selinux"  "8"  "locate" "dwalsh@redhat.com" "locate SELinux Policy documentation"
+.TH  "locate_selinux"  "8"  "13-01-04" "locate" "SELinux Policy documentation for locate"
 .SH "NAME"
 locate_selinux \- Security Enhanced Linux Policy for the locate processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the locate processes via flexible mandatory access control.
 
+The locate processes execute with the locate_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep locate_t
+
+
+.SH "ENTRYPOINTS"
+
+The locate_t SELinux type can be entered via the "locate_exec_t" file type.  The default entrypoint paths for the locate_t domain are the following:"
+
+/usr/bin/updatedb
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux locate policy is very flexible allowing users to setup their locate processes in as secure a method as possible.
+.PP
+The following process types are defined for locate:
+
+.EX
+.B locate_t
+.EE
+.PP
+Note:
+.B semanage permissive -a locate_t
+
+can be used to make the process type locate_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux locate policy is very flexible allowing users to setup their locate processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for locate:
 
 
 .EX
 .PP
-.B locate_exec_t 
+.B locate_exec_t
 .EE
 
 - Set files with the locate_exec_t type, if you want to transition an executable to the locate_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B locate_log_t 
+.B locate_log_t
 .EE
 
 - Set files with the locate_log_t type, if you want to treat the data as locate log data, usually stored under the /var/log directory.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B locate_var_lib_t 
+.B locate_var_lib_t
 .EE
 
 - Set files with the locate_var_lib_t type, if you want to store the locate files under the /var/lib directory.
@@ -43,28 +73,62 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux locate policy is very flexible allowing users to setup their locate processes in as secure a method as possible.
-.PP 
-The following process types are defined for locate:
+.SH "MANAGED FILES"
 
-.EX
-.B locate_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type locate_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B locate_var_lib_t
+
+	/var/lib/[sm]locate(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -77,11 +141,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), locate(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), locate(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/lockdev_selinux.8 serefpolicy-3.7.19/man/man8/lockdev_selinux.8
--- nsaserefpolicy/man/man8/lockdev_selinux.8	2013-03-15 11:41:11.762153499 +0100
+++ serefpolicy-3.7.19/man/man8/lockdev_selinux.8	2013-03-15 11:39:56.401151779 +0100
@@ -1,31 +1,55 @@
-.TH  "lockdev_selinux"  "8"  "lockdev" "dwalsh@redhat.com" "lockdev SELinux Policy documentation"
+.TH  "lockdev_selinux"  "8"  "13-01-04" "lockdev" "SELinux Policy documentation for lockdev"
 .SH "NAME"
 lockdev_selinux \- Security Enhanced Linux Policy for the lockdev processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lockdev processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B lockdev
-(device locking policy for lockdev)
-processes via flexible mandatory access
-control.  
+The lockdev processes execute with the lockdev_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep lockdev_t
+
+
+.SH "ENTRYPOINTS"
+
+The lockdev_t SELinux type can be entered via the "lockdev_exec_t" file type.  The default entrypoint paths for the lockdev_t domain are the following:"
+
+/usr/sbin/lockdev
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lockdev policy is very flexible allowing users to setup their lockdev processes in as secure a method as possible.
+.PP
+The following process types are defined for lockdev:
+
+.EX
+.B lockdev_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lockdev_t
+
+can be used to make the process type lockdev_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lockdev policy is very flexible allowing users to setup their lockdev processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lockdev:
 
 
 .EX
 .PP
-.B lockdev_exec_t 
+.B lockdev_exec_t
 .EE
 
 - Set files with the lockdev_exec_t type, if you want to transition an executable to the lockdev_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B lockdev_lock_t 
+.B lockdev_lock_t
 .EE
 
 - Set files with the lockdev_lock_t type, if you want to treat the files as lockdev lock data, stored under the /var/lock directory
@@ -41,28 +65,60 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lockdev policy is very flexible allowing users to setup their lockdev processes in as secure a method as possible.
-.PP 
-The following process types are defined for lockdev:
+.SH "MANAGED FILES"
 
-.EX
-.B lockdev_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lockdev_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B lockdev_lock_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +131,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lockdev(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), lockdev(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/logadm_selinux.8 serefpolicy-3.7.19/man/man8/logadm_selinux.8
--- nsaserefpolicy/man/man8/logadm_selinux.8	2013-03-15 11:41:12.237153510 +0100
+++ serefpolicy-3.7.19/man/man8/logadm_selinux.8	2013-03-15 11:40:07.234152027 +0100
@@ -1,65 +1,185 @@
 .TH  "logadm_selinux"  "8"  "logadm" "mgrepl@redhat.com" "logadm SELinux Policy documentation"
 .SH "NAME"
-logadm_r \- \fBLog administrator role\fP - Security Enhanced Linux Policy 
+logadm_r \- \fBLog administrator role\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
-SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+SELinux supports Roles Based Access Control (RBAC), some Linux roles are login roles, while other roles need to be transition into.
 
-Note: The examples in the man page will user the staff_u user.
+.I Note:
+Examples in this man page will use the
+.B staff_u
+SELinux user.
 
-Non login roles are usually used for administrative tasks.
-
-Roles usually have default types assigned to them. 
+Non login roles are usually used for administrative tasks. For example, tasks that require root privileges.  Roles control which types a user can run processes with. Roles often have default types assigned to them.
 
 The default type for the logadm_r role is logadm_t.
 
-You can use the 
-.B newrole 
+The
+.B newrole
 program to transition directly to this role.
 
 .B newrole -r logadm_r -t logadm_t
 
-.B sudo 
-can also be setup to transition to this role using the visudo command.
+.B sudo
+is the preferred method to do transition from one role to another.  You setup sudo to transition to logadm_r by adding a similar line to the /etc/sudoers file.
 
 USERNAME ALL=(ALL) ROLE=logadm_r TYPE=logadm_t COMMAND
+
 .br
 sudo will run COMMAND as staff_u:logadm_r:logadm_t:LEVEL
 
-If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+When using a a non login role, you need to setup SELinux so that your SELinux user can reach logadm_r role.
 
-You can see all of the assigned SELinux roles using the following
+Execute the following to see all of the assigned SELinux roles:
 
 .B semanage user -l
 
-If you wanted to add logadm_r to the staff_u user, you would execute:
+You need to add logadm_r to the staff_u user.  You could setup the staff_u user to be able to use the logadm_r role with a command like:
 
-.B $ semanage user -m -R 'staff_r logadm_r' staff_u 
+.B $ semanage user -m -R 'staff_r system_r logadm_r' staff_u
 
 
+.SH "MANAGED FILES"
 
-SELinux policy also controls which roles can transition to a different role.  
-You can list these rules using the following command.
+The SELinux process type logadm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
 
-.B sesearch --role_allow
+.br
+.B auditd_etc_t
 
-SELinux policy allows the staff_r role can transition to the logadm_r role.
+	/etc/audit(/.*)?
+.br
 
+.br
+.B auditd_log_t
 
-.SH "COMMANDS"
+	/var/log/audit(/.*)?
+.br
+	/var/log/audit\.log.*
+.br
+
+.br
+.B auditd_var_run_t
+
+	/var/run/auditd\.pid
+.br
+	/var/run/auditd_sock
+.br
+	/var/run/audit_events
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B klogd_tmp_t
+
+
+.br
+.B klogd_var_run_t
+
+	/var/run/klogd\.pid
+.br
+
+.br
+.B logfile
+
+	all log files
+.br
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
+.br
+.B mnt_t
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B syslog_conf_t
+
+	/etc/syslog.conf
+.br
+	/etc/rsyslog.conf
+.br
+
+.br
+.B syslogd_tmp_t
+
+
+.br
+.B syslogd_var_lib_t
+
+	/var/lib/rsyslog(/.*)?
+.br
+	/var/lib/syslog-ng(/.*)?
+.br
+	/var/lib/syslog-ng.persist
+.br
+
+.br
+.B syslogd_var_run_t
+
+	/var/run/syslog-ng.ctl
+.br
+	/var/run/syslog-ng(/.*)?
+.br
+	/var/log/syslog-ng(/.*)?
+.br
+	/var/run/metalog\.pid
+.br
+	/var/run/syslogd\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
 
-.B system-config-selinux 
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), logadm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/logrotate_selinux.8 serefpolicy-3.7.19/man/man8/logrotate_selinux.8
--- nsaserefpolicy/man/man8/logrotate_selinux.8	2013-03-15 11:41:11.366153490 +0100
+++ serefpolicy-3.7.19/man/man8/logrotate_selinux.8	2013-03-15 11:39:55.561151760 +0100
@@ -1,43 +1,63 @@
-.TH  "logrotate_selinux"  "8"  "logrotate" "dwalsh@redhat.com" "logrotate SELinux Policy documentation"
+.TH  "logrotate_selinux"  "8"  "13-01-04" "logrotate" "SELinux Policy documentation for logrotate"
 .SH "NAME"
 logrotate_selinux \- Security Enhanced Linux Policy for the logrotate processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the logrotate processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B logrotate
-(Rotate and archive system logs)
-processes via flexible mandatory access
-control.  
+The logrotate processes execute with the logrotate_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep logrotate_t
+
+
+.SH "ENTRYPOINTS"
+
+The logrotate_t SELinux type can be entered via the "logrotate_exec_t" file type.  The default entrypoint paths for the logrotate_t domain are the following:"
+
+/etc/cron\.(daily|weekly)/sysklogd, /usr/sbin/logrotate
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux logrotate policy is very flexible allowing users to setup their logrotate processes in as secure a method as possible.
+.PP
+The following process types are defined for logrotate:
+
+.EX
+.B logrotate_t, logrotate_mail_t
+.EE
+.PP
+Note:
+.B semanage permissive -a logrotate_t
+
+can be used to make the process type logrotate_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux logrotate policy is very flexible allowing users to setup their logrotate processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for logrotate:
 
 
 .EX
 .PP
-.B logrotate_exec_t 
+.B logrotate_exec_t
 .EE
 
 - Set files with the logrotate_exec_t type, if you want to transition an executable to the logrotate_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/cron\.(daily|weekly)/sysklogd, /usr/sbin/logrotate
 
 .EX
 .PP
-.B logrotate_lock_t 
+.B logrotate_lock_t
 .EE
 
 - Set files with the logrotate_lock_t type, if you want to treat the files as logrotate lock data, stored under the /var/lock directory
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B logrotate_mail_tmp_t 
+.B logrotate_mail_tmp_t
 .EE
 
 - Set files with the logrotate_mail_tmp_t type, if you want to store logrotate mail temporary files in the /tmp directories.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B logrotate_tmp_t 
+.B logrotate_tmp_t
 .EE
 
 - Set files with the logrotate_tmp_t type, if you want to store logrotate temporary files in the /tmp directories.
@@ -61,7 +81,7 @@
 
 .EX
 .PP
-.B logrotate_var_lib_t 
+.B logrotate_var_lib_t
 .EE
 
 - Set files with the logrotate_var_lib_t type, if you want to store the logrotate files under the /var/lib directory.
@@ -69,28 +89,116 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux logrotate policy is very flexible allowing users to setup their logrotate processes in as secure a method as possible.
-.PP 
-The following process types are defined for logrotate:
+.SH "MANAGED FILES"
 
-.EX
-.B logrotate_t, logrotate_mail_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type logrotate_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B abrt_var_cache_t
+
+	/var/cache/abrt(/.*)?
+.br
+	/var/spool/abrt(/.*)?
+.br
+	/var/cache/abrt-di(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B logfile
+
+	all log files
+.br
+
+.br
+.B logrotate_lock_t
+
+
+.br
+.B logrotate_tmp_t
+
+
+.br
+.B logrotate_var_lib_t
+
+	/var/lib/logrotate\.status
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B named_cache_t
+
+	/var/named/data(/.*)?
+.br
+	/var/named/slaves(/.*)?
+.br
+	/var/named/dynamic(/.*)?
+.br
+	/var/named/chroot/var/tmp(/.*)?
+.br
+	/var/named/chroot/var/named/data(/.*)?
+.br
+	/var/named/chroot/var/named/slaves(/.*)?
+.br
+	/var/named/chroot/var/named/dynamic(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_spool_t
+
+	/var/spool(/.*)?
+.br
+
+.br
+.B varnishlog_log_t
+
+	/var/log/varnish(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,11 +211,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), logrotate(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), logrotate(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/logwatch_selinux.8 serefpolicy-3.7.19/man/man8/logwatch_selinux.8
--- nsaserefpolicy/man/man8/logwatch_selinux.8	2013-03-15 11:41:11.830153500 +0100
+++ serefpolicy-3.7.19/man/man8/logwatch_selinux.8	2013-03-15 11:39:57.695151809 +0100
@@ -1,55 +1,71 @@
-.TH  "logwatch_selinux"  "8"  "logwatch" "dwalsh@redhat.com" "logwatch SELinux Policy documentation"
+.TH  "logwatch_selinux"  "8"  "13-01-04" "logwatch" "SELinux Policy documentation for logwatch"
 .SH "NAME"
 logwatch_selinux \- Security Enhanced Linux Policy for the logwatch processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the logwatch processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B logwatch
-(System log analyzer and reporter)
-processes via flexible mandatory access
-control.  
+The logwatch processes execute with the logwatch_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep logwatch_t
+
+
+.SH "ENTRYPOINTS"
+
+The logwatch_t SELinux type can be entered via the "logwatch_exec_t" file type.  The default entrypoint paths for the logwatch_t domain are the following:"
+
+/usr/sbin/epylog, /usr/sbin/logcheck, /usr/share/logwatch/scripts/logwatch\.pl
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux logwatch policy is very flexible allowing users to setup their logwatch processes in as secure a method as possible.
+.PP
+The following process types are defined for logwatch:
+
+.EX
+.B logwatch_t, logwatch_mail_t
+.EE
+.PP
+Note:
+.B semanage permissive -a logwatch_t
+
+can be used to make the process type logwatch_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux logwatch policy is very flexible allowing users to setup their logwatch processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for logwatch:
 
 
 .EX
 .PP
-.B logwatch_cache_t 
+.B logwatch_cache_t
 .EE
 
 - Set files with the logwatch_cache_t type, if you want to store the files under the /var/cache directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/epylog(/.*)?, /var/cache/logwatch(/.*)?, /var/lib/logcheck(/.*)?
 
 .EX
 .PP
-.B logwatch_exec_t 
+.B logwatch_exec_t
 .EE
 
 - Set files with the logwatch_exec_t type, if you want to transition an executable to the logwatch_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/logcheck, /usr/sbin/epylog, /usr/share/logwatch/scripts/logwatch\.pl
 
 .EX
 .PP
-.B logwatch_lock_t 
+.B logwatch_lock_t
 .EE
 
 - Set files with the logwatch_lock_t type, if you want to treat the files as logwatch lock data, stored under the /var/lock directory
@@ -57,7 +73,7 @@
 
 .EX
 .PP
-.B logwatch_mail_tmp_t 
+.B logwatch_mail_tmp_t
 .EE
 
 - Set files with the logwatch_mail_tmp_t type, if you want to store logwatch mail temporary files in the /tmp directories.
@@ -65,7 +81,7 @@
 
 .EX
 .PP
-.B logwatch_tmp_t 
+.B logwatch_tmp_t
 .EE
 
 - Set files with the logwatch_tmp_t type, if you want to store logwatch temporary files in the /tmp directories.
@@ -73,7 +89,7 @@
 
 .EX
 .PP
-.B logwatch_var_run_t 
+.B logwatch_var_run_t
 .EE
 
 - Set files with the logwatch_var_run_t type, if you want to store the logwatch files under the /run directory.
@@ -81,28 +97,82 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux logwatch policy is very flexible allowing users to setup their logwatch processes in as secure a method as possible.
-.PP 
-The following process types are defined for logwatch:
+.SH "MANAGED FILES"
 
-.EX
-.B logwatch_t, logwatch_mail_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type logwatch_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B logwatch_cache_t
+
+	/var/lib/epylog(/.*)?
+.br
+	/var/lib/logcheck(/.*)?
+.br
+	/var/cache/logwatch(/.*)?
+.br
+
+.br
+.B logwatch_lock_t
+
+	/var/log/logcheck/.+
+.br
+
+.br
+.B logwatch_tmp_t
+
+
+.br
+.B logwatch_var_run_t
+
+	/var/run/epylog\.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +185,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), logwatch(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), logwatch(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/lpd_selinux.8 serefpolicy-3.7.19/man/man8/lpd_selinux.8
--- nsaserefpolicy/man/man8/lpd_selinux.8	2013-03-15 11:41:11.926153503 +0100
+++ serefpolicy-3.7.19/man/man8/lpd_selinux.8	2013-03-15 11:39:59.633151853 +0100
@@ -1,42 +1,73 @@
-.TH  "lpd_selinux"  "8"  "lpd" "dwalsh@redhat.com" "lpd SELinux Policy documentation"
+.TH  "lpd_selinux"  "8"  "13-01-04" "lpd" "SELinux Policy documentation for lpd"
 .SH "NAME"
 lpd_selinux \- Security Enhanced Linux Policy for the lpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lpd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B lpd
-(Line printer daemon)
-processes via flexible mandatory access
-control.  
+The lpd processes execute with the lpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep lpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The lpd_t SELinux type can be entered via the "lpd_exec_t" file type.  The default entrypoint paths for the lpd_t domain are the following:"
+
+/usr/sbin/lpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lpd policy is very flexible allowing users to setup their lpd processes in as secure a method as possible.
+.PP
+The following process types are defined for lpd:
+
+.EX
+.B lpd_t, lpr_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lpd_t
+
+can be used to make the process type lpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  lpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run lpd with the tightest access possible.
 
 
 .PP
-If you want to use lpd server instead of cup, you must turn on the use_lpd_server boolean.
+If you want to use lpd server instead of cups, you must turn on the use_lpd_server boolean.
+
+.EX
+.B setsebool -P use_lpd_server 1
+.EE
+
+.PP
+If you want to use lpd server instead of cups, you must turn on the use_lpd_server boolean.
 
 .EX
 .B setsebool -P use_lpd_server 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lpd policy is very flexible allowing users to setup their lpd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lpd:
 
 
 .EX
 .PP
-.B lpd_exec_t 
+.B lpd_exec_t
 .EE
 
 - Set files with the lpd_exec_t type, if you want to transition an executable to the lpd_t domain.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B lpd_tmp_t 
+.B lpd_tmp_t
 .EE
 
 - Set files with the lpd_tmp_t type, if you want to store lpd temporary files in the /tmp directories.
@@ -52,7 +83,7 @@
 
 .EX
 .PP
-.B lpd_var_run_t 
+.B lpd_var_run_t
 .EE
 
 - Set files with the lpd_var_run_t type, if you want to store the lpd files under the /run directory.
@@ -60,28 +91,84 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lpd policy is very flexible allowing users to setup their lpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for lpd:
+.SH "MANAGED FILES"
 
-.EX
-.B lpd_t, lpr_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B lpd_tmp_t
+
+
+.br
+.B lpd_var_run_t
+
+	/var/run/lprng(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B print_spool_t
+
+	/var/spool/lpd(/.*)?
+.br
+	/var/spool/cups(/.*)?
+.br
+	/var/spool/cups-pdf(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -97,12 +184,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lpd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), lpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), lpr_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/lpr_selinux.8 serefpolicy-3.7.19/man/man8/lpr_selinux.8
--- nsaserefpolicy/man/man8/lpr_selinux.8	2013-03-15 11:41:09.780153454 +0100
+++ serefpolicy-3.7.19/man/man8/lpr_selinux.8	2013-03-15 11:39:53.927151723 +0100
@@ -1,37 +1,63 @@
-.TH  "lpr_selinux"  "8"  "lpr" "dwalsh@redhat.com" "lpr SELinux Policy documentation"
+.TH  "lpr_selinux"  "8"  "13-01-04" "lpr" "SELinux Policy documentation for lpr"
 .SH "NAME"
 lpr_selinux \- Security Enhanced Linux Policy for the lpr processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lpr processes via flexible mandatory access control.
 
+The lpr processes execute with the lpr_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep lpr_t
+
+
+.SH "ENTRYPOINTS"
+
+The lpr_t SELinux type can be entered via the "lpr_exec_t" file type.  The default entrypoint paths for the lpr_t domain are the following:"
+
+/usr/bin/lp(\.cups)?, /usr/bin/lpq(\.cups)?, /usr/bin/lpr(\.cups)?, /usr/bin/lprm(\.cups)?, /usr/sbin/lpc(\.cups)?, /usr/bin/cancel(\.cups)?, /usr/bin/lpstat(\.cups)?, /opt/gutenprint/s?bin(/.*)?, /usr/local/linuxprinter/bin/l?lpr, /usr/sbin/accept, /usr/sbin/lpinfo, /usr/sbin/lpmove, /usr/sbin/lpadmin, /usr/bin/lpoptions
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lpr policy is very flexible allowing users to setup their lpr processes in as secure a method as possible.
+.PP
+The following process types are defined for lpr:
+
+.EX
+.B lpr_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lpr_t
+
+can be used to make the process type lpr_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lpr policy is very flexible allowing users to setup their lpr processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lpr:
 
 
 .EX
 .PP
-.B lpr_exec_t 
+.B lpr_exec_t
 .EE
 
 - Set files with the lpr_exec_t type, if you want to transition an executable to the lpr_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/lpinfo, /usr/sbin/accept, /usr/bin/cancel(\.cups)?, /usr/bin/lp(\.cups)?, /usr/bin/lpstat(\.cups)?, /usr/sbin/lpc(\.cups)?, /usr/local/linuxprinter/bin/l?lpr, /usr/bin/lpoptions, /usr/bin/lpq(\.cups)?, /usr/sbin/lpadmin, /opt/gutenprint/s?bin(/.*)?, /usr/bin/lpr(\.cups)?, /usr/sbin/lpmove, /usr/bin/lprm(\.cups)?
 
 .EX
 .PP
-.B lpr_tmp_t 
+.B lpr_tmp_t
 .EE
 
 - Set files with the lpr_tmp_t type, if you want to store lpr temporary files in the /tmp directories.
@@ -39,28 +65,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lpr policy is very flexible allowing users to setup their lpr processes in as secure a method as possible.
-.PP 
-The following process types are defined for lpr:
+.SH "MANAGED FILES"
 
-.EX
-.B lpr_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lpr_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -73,11 +127,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lpr(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), lpr(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/lsassd_selinux.8 serefpolicy-3.7.19/man/man8/lsassd_selinux.8
--- nsaserefpolicy/man/man8/lsassd_selinux.8	2013-03-15 11:41:11.366153490 +0100
+++ serefpolicy-3.7.19/man/man8/lsassd_selinux.8	2013-03-15 11:39:55.560151760 +0100
@@ -1,25 +1,55 @@
-.TH  "lsassd_selinux"  "8"  "lsassd" "dwalsh@redhat.com" "lsassd SELinux Policy documentation"
+.TH  "lsassd_selinux"  "8"  "13-01-04" "lsassd" "SELinux Policy documentation for lsassd"
 .SH "NAME"
 lsassd_selinux \- Security Enhanced Linux Policy for the lsassd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lsassd processes via flexible mandatory access control.
 
+The lsassd processes execute with the lsassd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep lsassd_t
+
+
+.SH "ENTRYPOINTS"
+
+The lsassd_t SELinux type can be entered via the "lsassd_exec_t,user_home_t" file types.  The default entrypoint paths for the lsassd_t domain are the following:"
+
+/usr/sbin/lsassd, /home/[^/]*/.+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lsassd policy is very flexible allowing users to setup their lsassd processes in as secure a method as possible.
+.PP
+The following process types are defined for lsassd:
+
+.EX
+.B lsassd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lsassd_t
+
+can be used to make the process type lsassd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lsassd policy is very flexible allowing users to setup their lsassd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lsassd:
 
 
 .EX
 .PP
-.B lsassd_exec_t 
+.B lsassd_exec_t
 .EE
 
 - Set files with the lsassd_exec_t type, if you want to transition an executable to the lsassd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B lsassd_tmp_t 
+.B lsassd_tmp_t
 .EE
 
 - Set files with the lsassd_tmp_t type, if you want to store lsassd temporary files in the /tmp directories.
@@ -35,19 +65,15 @@
 
 .EX
 .PP
-.B lsassd_var_lib_t 
+.B lsassd_var_lib_t
 .EE
 
 - Set files with the lsassd_var_lib_t type, if you want to store the lsassd files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/likewise-open/lsasd\.err, /var/lib/likewise-open/krb5ccr_lsass, /var/lib/likewise-open/db/lsass-adstate\.filedb, /var/lib/likewise-open/db/lsass-adcache\.db, /var/lib/likewise-open/db/sam\.db
 
 .EX
 .PP
-.B lsassd_var_run_t 
+.B lsassd_var_run_t
 .EE
 
 - Set files with the lsassd_var_run_t type, if you want to store the lsassd files under the /run directory.
@@ -55,40 +81,228 @@
 
 .EX
 .PP
-.B lsassd_var_socket_t 
+.B lsassd_var_socket_t
 .EE
 
 - Set files with the lsassd_var_socket_t type, if you want to treat the files as lsassd var socket data.
 
-.br
-.TP 5
-Paths: 
-/var/lib/likewise-open/rpc/lsass, /var/lib/likewise-open/\.lsassd, /var/lib/likewise-open/\.ntlmd
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lsassd policy is very flexible allowing users to setup their lsassd processes in as secure a method as possible.
-.PP 
-The following process types are defined for lsassd:
+.SH "MANAGED FILES"
 
-.EX
-.B lsassd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lsassd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B etc_t
+
+	/etc/.*
+.br
+	/var/db/.*\.db
+.br
+	/usr/etc(/.*)?
+.br
+	/var/ftp/etc(/.*)?
+.br
+	/usr/local/etc(/.*)?
+.br
+	/var/lib/openshift/.limits.d(/.*)?
+.br
+	/var/lib/openshift/.openshift-proxy.d(/.*)?
+.br
+	/var/lib/openshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/lib/stickshift/.limits.d(/.*)?
+.br
+	/var/lib/stickshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/named/chroot/etc(/.*)?
+.br
+	/etc/ipsec\.d/examples(/.*)?
+.br
+	/var/spool/postfix/etc(/.*)?
+.br
+	/etc
+.br
+	/etc/localtime
+.br
+	/etc/cups/client\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_keytab_t
+
+	/etc/krb5\.keytab
+.br
+	/etc/krb5kdc/kadm5\.keytab
+.br
+	/var/kerberos/krb5kdc/kadm5\.keytab
+.br
+
+.br
+.B likewise_etc_t
+
+	/etc/likewise-open(/.*)?
+.br
+
+.br
+.B lsassd_tmp_t
+
+
+.br
+.B lsassd_var_lib_t
+
+	/var/lib/likewise-open/lsasd\.err
+.br
+	/var/lib/likewise-open/db/sam\.db
+.br
+	/var/lib/likewise-open/krb5ccr_lsass
+.br
+	/var/lib/likewise-open/db/lsass-adcache\.db
+.br
+	/var/lib/likewise-open/db/lsass-adstate\.filedb
+.br
+
+.br
+.B lsassd_var_run_t
+
+	/var/run/lsassd.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_type
+
+	all user home files
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -101,11 +315,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lsassd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), lsassd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/lvm_selinux.8 serefpolicy-3.7.19/man/man8/lvm_selinux.8
--- nsaserefpolicy/man/man8/lvm_selinux.8	2013-03-15 11:41:12.178153508 +0100
+++ serefpolicy-3.7.19/man/man8/lvm_selinux.8	2013-03-15 11:40:05.518151987 +0100
@@ -1,31 +1,55 @@
-.TH  "lvm_selinux"  "8"  "lvm" "dwalsh@redhat.com" "lvm SELinux Policy documentation"
+.TH  "lvm_selinux"  "8"  "13-01-04" "lvm" "SELinux Policy documentation for lvm"
 .SH "NAME"
 lvm_selinux \- Security Enhanced Linux Policy for the lvm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lvm processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B lvm
-(Policy for logical volume management programs)
-processes via flexible mandatory access
-control.  
+The lvm processes execute with the lvm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep lvm_t
+
+
+.SH "ENTRYPOINTS"
+
+The lvm_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,lvm_exec_t" file types.  The default entrypoint paths for the lvm_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /lib/lvm-10/.*, /lib/lvm-200/.*, /sbin/lvs, /sbin/vgs, /sbin/pvs, /sbin/lvm, /sbin/vgck, /sbin/pvdata, /sbin/pvmove, /sbin/pvscan, /sbin/lvscan, /sbin/kpartx, /sbin/lvmsar, /sbin/dmraid, /sbin/vgscan, /sbin/vgmerge, /sbin/dmsetup, /sbin/e2fsadm, /sbin/lvmsadc, /sbin/lvmetad, /sbin/vgsplit, /usr/sbin/lvm, /sbin/vgchange, /sbin/vgexport, /sbin/vgcreate, /sbin/vgextend, /sbin/vgimport, /sbin/vgreduce, /sbin/vgremove, /sbin/vgrename, /sbin/pvchange, /sbin/pvcreate, /sbin/pvremove, /sbin/lvreduce, /sbin/lvrename, /sbin/lvresize, /sbin/lvremove, /sbin/lvchange, /sbin/lvextend, /sbin/lvcreate, /sbin/vgdisplay, /sbin/vgmknodes, /sbin/pvdisplay, /sbin/lvdisplay, /sbin/lvmchange, /sbin/vgwrapper, /sbin/multipathd, /sbin/lvm\.static, /sbin/cryptsetup, /sbin/vgcfgbackup, /sbin/lvmdiskscan, /sbin/mount\.crypt, /sbin/vgcfgrestore, /sbin/lvmiopversion, /sbin/vgscan\.static, /sbin/dmsetup\.static, /sbin/vgchange\.static, /sbin/multipath\.static, /lib/udev/udisks-lvm-pv-export
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lvm policy is very flexible allowing users to setup their lvm processes in as secure a method as possible.
+.PP
+The following process types are defined for lvm:
+
+.EX
+.B lvm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lvm_t
+
+can be used to make the process type lvm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lvm policy is very flexible allowing users to setup their lvm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lvm:
 
 
 .EX
 .PP
-.B lvm_etc_t 
+.B lvm_etc_t
 .EE
 
 - Set files with the lvm_etc_t type, if you want to store lvm files in the /etc directories.
@@ -33,43 +57,31 @@
 
 .EX
 .PP
-.B lvm_exec_t 
+.B lvm_exec_t
 .EE
 
 - Set files with the lvm_exec_t type, if you want to transition an executable to the lvm_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/dmraid, /sbin/pvremove, /sbin/vgextend, /lib/lvm-200/.*, /sbin/vgmerge, /sbin/vgrename, /sbin/lvdisplay, /sbin/pvs, /sbin/lvmdiskscan, /sbin/lvresize, /sbin/vgmknodes, /sbin/pvmove, /sbin/multipath\.static, /sbin/vgck, /sbin/pvscan, /sbin/pvcreate, /sbin/lvreduce, /sbin/vgscan, /sbin/lvremove, /sbin/dmsetup, /usr/sbin/lvm, /sbin/vgchange, /sbin/lvm\.static, /sbin/vgcfgbackup, /sbin/e2fsadm, /sbin/lvm, /sbin/pvdata, /sbin/lvextend, /sbin/vgcfgrestore, /sbin/vgs, /sbin/lvmchange, /sbin/vgimport, /sbin/vgremove, /sbin/dmsetup\.static, /sbin/lvmsar, /sbin/lvmsadc, /sbin/lvmiopversion, /sbin/pvchange, /sbin/pvdisplay, /sbin/vgsplit, /sbin/multipathd, /sbin/cryptsetup, /sbin/vgwrapper, /sbin/lvchange, /sbin/mount\.crypt, /sbin/vgcreate, /sbin/vgreduce, /sbin/lvrename, /sbin/vgscan\.static, /sbin/vgexport, /sbin/lvs, /sbin/vgchange\.static, /sbin/kpartx, /lib/lvm-10/.*, /sbin/lvscan, /sbin/lvcreate, /sbin/vgdisplay, /lib/udev/udisks-lvm-pv-export
 
 .EX
 .PP
-.B lvm_lock_t 
+.B lvm_lock_t
 .EE
 
 - Set files with the lvm_lock_t type, if you want to treat the files as lvm lock data, stored under the /var/lock directory
 
-.br
-.TP 5
-Paths: 
-/var/lock/lvm(/.*)?, /etc/lvm/lock(/.*)?
 
 .EX
 .PP
-.B lvm_metadata_t 
+.B lvm_metadata_t
 .EE
 
 - Set files with the lvm_metadata_t type, if you want to treat the files as lvm metadata data.
 
-.br
-.TP 5
-Paths: 
-/etc/lvm/backup(/.*)?, /var/cache/multipathd(/.*)?, /etc/lvmtab\.d(/.*)?, /etc/lvmtab(/.*)?, /etc/lvm/\.cache, /etc/lvm/archive(/.*)?, /etc/lvm/cache(/.*)?
 
 .EX
 .PP
-.B lvm_tmp_t 
+.B lvm_tmp_t
 .EE
 
 - Set files with the lvm_tmp_t type, if you want to store lvm temporary files in the /tmp directories.
@@ -77,7 +89,7 @@
 
 .EX
 .PP
-.B lvm_var_lib_t 
+.B lvm_var_lib_t
 .EE
 
 - Set files with the lvm_var_lib_t type, if you want to store the lvm files under the /var/lib directory.
@@ -85,40 +97,28 @@
 
 .EX
 .PP
-.B lvm_var_run_t 
+.B lvm_var_run_t
 .EE
 
 - Set files with the lvm_var_run_t type, if you want to store the lvm files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/multipathd\.sock, /var/run/dmevent.*
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lvm policy is very flexible allowing users to setup their lvm processes in as secure a method as possible.
-.PP 
-The following process types are defined for lvm:
+.SH "MANAGED FILES"
 
-.EX
-.B lvm_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lvm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -131,11 +131,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lvm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), lvm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/lwiod_selinux.8 serefpolicy-3.7.19/man/man8/lwiod_selinux.8
--- nsaserefpolicy/man/man8/lwiod_selinux.8	2013-03-15 11:41:12.225153509 +0100
+++ serefpolicy-3.7.19/man/man8/lwiod_selinux.8	2013-03-15 11:40:06.801152017 +0100
@@ -1,25 +1,55 @@
-.TH  "lwiod_selinux"  "8"  "lwiod" "dwalsh@redhat.com" "lwiod SELinux Policy documentation"
+.TH  "lwiod_selinux"  "8"  "13-01-04" "lwiod" "SELinux Policy documentation for lwiod"
 .SH "NAME"
 lwiod_selinux \- Security Enhanced Linux Policy for the lwiod processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lwiod processes via flexible mandatory access control.
 
+The lwiod processes execute with the lwiod_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep lwiod_t
+
+
+.SH "ENTRYPOINTS"
+
+The lwiod_t SELinux type can be entered via the "lwiod_exec_t" file type.  The default entrypoint paths for the lwiod_t domain are the following:"
+
+/usr/sbin/lwiod
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lwiod policy is very flexible allowing users to setup their lwiod processes in as secure a method as possible.
+.PP
+The following process types are defined for lwiod:
+
+.EX
+.B lwiod_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lwiod_t
+
+can be used to make the process type lwiod_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lwiod policy is very flexible allowing users to setup their lwiod processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lwiod:
 
 
 .EX
 .PP
-.B lwiod_exec_t 
+.B lwiod_exec_t
 .EE
 
 - Set files with the lwiod_exec_t type, if you want to transition an executable to the lwiod_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B lwiod_var_lib_t 
+.B lwiod_var_lib_t
 .EE
 
 - Set files with the lwiod_var_lib_t type, if you want to store the lwiod files under the /var/lib directory.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B lwiod_var_run_t 
+.B lwiod_var_run_t
 .EE
 
 - Set files with the lwiod_var_run_t type, if you want to store the lwiod files under the /run directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B lwiod_var_socket_t 
+.B lwiod_var_socket_t
 .EE
 
 - Set files with the lwiod_var_socket_t type, if you want to treat the files as lwiod var socket data.
@@ -51,28 +81,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lwiod policy is very flexible allowing users to setup their lwiod processes in as secure a method as possible.
-.PP 
-The following process types are defined for lwiod:
+.SH "MANAGED FILES"
 
-.EX
-.B lwiod_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lwiod_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_conf_t
+
+	/etc/krb5\.conf
+.br
+
+.br
+.B lwiod_var_lib_t
+
+
+.br
+.B lwiod_var_run_t
+
+	/var/run/lwiod.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +167,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lwiod(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), lwiod(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/lwregd_selinux.8 serefpolicy-3.7.19/man/man8/lwregd_selinux.8
--- nsaserefpolicy/man/man8/lwregd_selinux.8	2013-03-15 11:41:12.169153508 +0100
+++ serefpolicy-3.7.19/man/man8/lwregd_selinux.8	2013-03-15 11:40:04.718151969 +0100
@@ -1,25 +1,55 @@
-.TH  "lwregd_selinux"  "8"  "lwregd" "dwalsh@redhat.com" "lwregd SELinux Policy documentation"
+.TH  "lwregd_selinux"  "8"  "13-01-04" "lwregd" "SELinux Policy documentation for lwregd"
 .SH "NAME"
 lwregd_selinux \- Security Enhanced Linux Policy for the lwregd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lwregd processes via flexible mandatory access control.
 
+The lwregd processes execute with the lwregd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep lwregd_t
+
+
+.SH "ENTRYPOINTS"
+
+The lwregd_t SELinux type can be entered via the "lwregd_exec_t" file type.  The default entrypoint paths for the lwregd_t domain are the following:"
+
+/usr/sbin/lwregd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lwregd policy is very flexible allowing users to setup their lwregd processes in as secure a method as possible.
+.PP
+The following process types are defined for lwregd:
+
+.EX
+.B lwregd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lwregd_t
+
+can be used to make the process type lwregd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lwregd policy is very flexible allowing users to setup their lwregd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lwregd:
 
 
 .EX
 .PP
-.B lwregd_exec_t 
+.B lwregd_exec_t
 .EE
 
 - Set files with the lwregd_exec_t type, if you want to transition an executable to the lwregd_t domain.
@@ -27,19 +57,15 @@
 
 .EX
 .PP
-.B lwregd_var_lib_t 
+.B lwregd_var_lib_t
 .EE
 
 - Set files with the lwregd_var_lib_t type, if you want to store the lwregd files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/likewise-open/db/registry\.db, /var/lib/likewise-open/regsd\.err
 
 .EX
 .PP
-.B lwregd_var_run_t 
+.B lwregd_var_run_t
 .EE
 
 - Set files with the lwregd_var_run_t type, if you want to store the lwregd files under the /run directory.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B lwregd_var_socket_t 
+.B lwregd_var_socket_t
 .EE
 
 - Set files with the lwregd_var_socket_t type, if you want to treat the files as lwregd var socket data.
@@ -55,28 +81,78 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lwregd policy is very flexible allowing users to setup their lwregd processes in as secure a method as possible.
-.PP 
-The following process types are defined for lwregd:
+.SH "MANAGED FILES"
 
-.EX
-.B lwregd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lwregd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B lwregd_var_lib_t
+
+	/var/lib/likewise-open/regsd\.err
+.br
+	/var/lib/likewise-open/db/registry\.db
+.br
+
+.br
+.B lwregd_var_run_t
+
+	/var/run/lwregd.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -89,11 +165,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lwregd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), lwregd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/lwsmd_selinux.8 serefpolicy-3.7.19/man/man8/lwsmd_selinux.8
--- nsaserefpolicy/man/man8/lwsmd_selinux.8	2013-03-15 11:41:11.350153490 +0100
+++ serefpolicy-3.7.19/man/man8/lwsmd_selinux.8	2013-03-15 11:39:55.560151760 +0100
@@ -1,25 +1,55 @@
-.TH  "lwsmd_selinux"  "8"  "lwsmd" "dwalsh@redhat.com" "lwsmd SELinux Policy documentation"
+.TH  "lwsmd_selinux"  "8"  "13-01-04" "lwsmd" "SELinux Policy documentation for lwsmd"
 .SH "NAME"
 lwsmd_selinux \- Security Enhanced Linux Policy for the lwsmd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the lwsmd processes via flexible mandatory access control.
 
+The lwsmd processes execute with the lwsmd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep lwsmd_t
+
+
+.SH "ENTRYPOINTS"
+
+The lwsmd_t SELinux type can be entered via the "lwsmd_exec_t" file type.  The default entrypoint paths for the lwsmd_t domain are the following:"
+
+/usr/sbin/lwsmd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux lwsmd policy is very flexible allowing users to setup their lwsmd processes in as secure a method as possible.
+.PP
+The following process types are defined for lwsmd:
+
+.EX
+.B lwsmd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a lwsmd_t
+
+can be used to make the process type lwsmd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux lwsmd policy is very flexible allowing users to setup their lwsmd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for lwsmd:
 
 
 .EX
 .PP
-.B lwsmd_exec_t 
+.B lwsmd_exec_t
 .EE
 
 - Set files with the lwsmd_exec_t type, if you want to transition an executable to the lwsmd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B lwsmd_var_lib_t 
+.B lwsmd_var_lib_t
 .EE
 
 - Set files with the lwsmd_var_lib_t type, if you want to store the lwsmd files under the /var/lib directory.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B lwsmd_var_run_t 
+.B lwsmd_var_run_t
 .EE
 
 - Set files with the lwsmd_var_run_t type, if you want to store the lwsmd files under the /run directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B lwsmd_var_socket_t 
+.B lwsmd_var_socket_t
 .EE
 
 - Set files with the lwsmd_var_socket_t type, if you want to treat the files as lwsmd var socket data.
@@ -51,28 +81,72 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux lwsmd policy is very flexible allowing users to setup their lwsmd processes in as secure a method as possible.
-.PP 
-The following process types are defined for lwsmd:
+.SH "MANAGED FILES"
 
-.EX
-.B lwsmd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type lwsmd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B lwsmd_var_lib_t
+
+
+.br
+.B lwsmd_var_run_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +159,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), lwsmd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), lwsmd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/mailman_cgi_selinux.8 serefpolicy-3.7.19/man/man8/mailman_cgi_selinux.8
--- nsaserefpolicy/man/man8/mailman_cgi_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/mailman_cgi_selinux.8	2013-03-15 11:39:54.238151730 +0100
@@ -0,0 +1,174 @@
+.TH  "mailman_cgi_selinux"  "8"  "13-01-04" "mailman_cgi" "SELinux Policy documentation for mailman_cgi"
+.SH "NAME"
+mailman_cgi_selinux \- Security Enhanced Linux Policy for the mailman_cgi processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the mailman_cgi processes via flexible mandatory access control.
+
+The mailman_cgi processes execute with the mailman_cgi_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep mailman_cgi_t
+
+
+.SH "ENTRYPOINTS"
+
+The mailman_cgi_t SELinux type can be entered via the "mailman_cgi_exec_t" file type.  The default entrypoint paths for the mailman_cgi_t domain are the following:"
+
+/usr/lib(64)?/mailman/cgi-bin/.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mailman_cgi policy is very flexible allowing users to setup their mailman_cgi processes in as secure a method as possible.
+.PP
+The following process types are defined for mailman_cgi:
+
+.EX
+.B mailman_cgi_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mailman_cgi_t
+
+can be used to make the process type mailman_cgi_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux mailman_cgi policy is very flexible allowing users to setup their mailman_cgi processes in as secure a method as possible.
+.PP
+The following file types are defined for mailman_cgi:
+
+
+.EX
+.PP
+.B mailman_cgi_exec_t
+.EE
+
+- Set files with the mailman_cgi_exec_t type, if you want to transition an executable to the mailman_cgi_t domain.
+
+
+.EX
+.PP
+.B mailman_cgi_tmp_t
+.EE
+
+- Set files with the mailman_cgi_tmp_t type, if you want to store mailman cgi temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type mailman_cgi_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mailman_archive_t
+
+	/var/lib/mailman/archives(/.*)?
+.br
+
+.br
+.B mailman_cgi_tmp_t
+
+
+.br
+.B mailman_data_t
+
+	/etc/mailman(/.*)?
+.br
+	/var/lib/mailman(/.*)?
+.br
+	/var/spool/mailman(/.*)?
+.br
+
+.br
+.B mailman_lock_t
+
+	/var/run/mailman(/.*)?
+.br
+	/var/lock/mailman(/.*)?
+.br
+
+.br
+.B mailman_log_t
+
+	/var/log/mailman(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), mailman_cgi(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, mailman_mail_selinux(8), mailman_queue_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mailman_mail_selinux.8 serefpolicy-3.7.19/man/man8/mailman_mail_selinux.8
--- nsaserefpolicy/man/man8/mailman_mail_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/mailman_mail_selinux.8	2013-03-15 11:40:05.029151976 +0100
@@ -0,0 +1,186 @@
+.TH  "mailman_mail_selinux"  "8"  "13-01-04" "mailman_mail" "SELinux Policy documentation for mailman_mail"
+.SH "NAME"
+mailman_mail_selinux \- Security Enhanced Linux Policy for the mailman_mail processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the mailman_mail processes via flexible mandatory access control.
+
+The mailman_mail processes execute with the mailman_mail_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep mailman_mail_t
+
+
+.SH "ENTRYPOINTS"
+
+The mailman_mail_t SELinux type can be entered via the "mailman_mail_exec_t" file type.  The default entrypoint paths for the mailman_mail_t domain are the following:"
+
+/usr/lib(64)?/mailman/mail/mailman, /usr/lib(64)?/mailman/bin/mailmanctl, /usr/lib(64)?/mailman/scripts/mailman
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mailman_mail policy is very flexible allowing users to setup their mailman_mail processes in as secure a method as possible.
+.PP
+The following process types are defined for mailman_mail:
+
+.EX
+.B mailman_mail_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mailman_mail_t
+
+can be used to make the process type mailman_mail_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux mailman_mail policy is very flexible allowing users to setup their mailman_mail processes in as secure a method as possible.
+.PP
+The following file types are defined for mailman_mail:
+
+
+.EX
+.PP
+.B mailman_mail_exec_t
+.EE
+
+- Set files with the mailman_mail_exec_t type, if you want to transition an executable to the mailman_mail_t domain.
+
+
+.EX
+.PP
+.B mailman_mail_tmp_t
+.EE
+
+- Set files with the mailman_mail_tmp_t type, if you want to store mailman mail temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type mailman_mail_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mailman_archive_t
+
+	/var/lib/mailman/archives(/.*)?
+.br
+
+.br
+.B mailman_data_t
+
+	/etc/mailman(/.*)?
+.br
+	/var/lib/mailman(/.*)?
+.br
+	/var/spool/mailman(/.*)?
+.br
+
+.br
+.B mailman_lock_t
+
+	/var/run/mailman(/.*)?
+.br
+	/var/lock/mailman(/.*)?
+.br
+
+.br
+.B mailman_log_t
+
+	/var/log/mailman(/.*)?
+.br
+
+.br
+.B mailman_mail_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), mailman_mail(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, mailman_cgi_selinux(8), mailman_queue_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mailman_queue_selinux.8 serefpolicy-3.7.19/man/man8/mailman_queue_selinux.8
--- nsaserefpolicy/man/man8/mailman_queue_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/mailman_queue_selinux.8	2013-03-15 11:40:01.914151905 +0100
@@ -0,0 +1,198 @@
+.TH  "mailman_queue_selinux"  "8"  "13-01-04" "mailman_queue" "SELinux Policy documentation for mailman_queue"
+.SH "NAME"
+mailman_queue_selinux \- Security Enhanced Linux Policy for the mailman_queue processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the mailman_queue processes via flexible mandatory access control.
+
+The mailman_queue processes execute with the mailman_queue_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep mailman_queue_t
+
+
+.SH "ENTRYPOINTS"
+
+The mailman_queue_t SELinux type can be entered via the "mailman_queue_exec_t" file type.  The default entrypoint paths for the mailman_queue_t domain are the following:"
+
+/usr/lib(64)?/mailman/bin/qrunner, /usr/lib/mailman/cron/.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mailman_queue policy is very flexible allowing users to setup their mailman_queue processes in as secure a method as possible.
+.PP
+The following process types are defined for mailman_queue:
+
+.EX
+.B mailman_queue_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mailman_queue_t
+
+can be used to make the process type mailman_queue_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux mailman_queue policy is very flexible allowing users to setup their mailman_queue processes in as secure a method as possible.
+.PP
+The following file types are defined for mailman_queue:
+
+
+.EX
+.PP
+.B mailman_queue_exec_t
+.EE
+
+- Set files with the mailman_queue_exec_t type, if you want to transition an executable to the mailman_queue_t domain.
+
+
+.EX
+.PP
+.B mailman_queue_tmp_t
+.EE
+
+- Set files with the mailman_queue_tmp_t type, if you want to store mailman queue temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type mailman_queue_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mailman_archive_t
+
+	/var/lib/mailman/archives(/.*)?
+.br
+
+.br
+.B mailman_data_t
+
+	/etc/mailman(/.*)?
+.br
+	/var/lib/mailman(/.*)?
+.br
+	/var/spool/mailman(/.*)?
+.br
+
+.br
+.B mailman_lock_t
+
+	/var/run/mailman(/.*)?
+.br
+	/var/lock/mailman(/.*)?
+.br
+
+.br
+.B mailman_log_t
+
+	/var/log/mailman(/.*)?
+.br
+
+.br
+.B mailman_queue_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), mailman_queue(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, mailman_cgi_selinux(8), mailman_mail_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/matahari_hostd_selinux.8 serefpolicy-3.7.19/man/man8/matahari_hostd_selinux.8
--- nsaserefpolicy/man/man8/matahari_hostd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/matahari_hostd_selinux.8	2013-03-15 11:40:01.154151888 +0100
@@ -0,0 +1,146 @@
+.TH  "matahari_hostd_selinux"  "8"  "13-01-04" "matahari_hostd" "SELinux Policy documentation for matahari_hostd"
+.SH "NAME"
+matahari_hostd_selinux \- Security Enhanced Linux Policy for the matahari_hostd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the matahari_hostd processes via flexible mandatory access control.
+
+The matahari_hostd processes execute with the matahari_hostd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep matahari_hostd_t
+
+
+.SH "ENTRYPOINTS"
+
+The matahari_hostd_t SELinux type can be entered via the "matahari_hostd_exec_t" file type.  The default entrypoint paths for the matahari_hostd_t domain are the following:"
+
+/usr/sbin/matahari-hostd, /usr/sbin/matahari-qmf-hostd, /usr/sbin/matahari-dbus-hostd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux matahari_hostd policy is very flexible allowing users to setup their matahari_hostd processes in as secure a method as possible.
+.PP
+The following process types are defined for matahari_hostd:
+
+.EX
+.B matahari_hostd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a matahari_hostd_t
+
+can be used to make the process type matahari_hostd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux matahari_hostd policy is very flexible allowing users to setup their matahari_hostd processes in as secure a method as possible.
+.PP
+The following file types are defined for matahari_hostd:
+
+
+.EX
+.PP
+.B matahari_hostd_exec_t
+.EE
+
+- Set files with the matahari_hostd_exec_t type, if you want to transition an executable to the matahari_hostd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type matahari_hostd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mtrr_device_t
+
+	/dev/cpu/mtrr
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), matahari_hostd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, matahari_netd_selinux(8), matahari_rpcd_selinux(8), matahari_serviced_selinux(8), matahari_sysconfigd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/matahari_netd_selinux.8 serefpolicy-3.7.19/man/man8/matahari_netd_selinux.8
--- nsaserefpolicy/man/man8/matahari_netd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/matahari_netd_selinux.8	2013-03-15 11:40:05.952151997 +0100
@@ -0,0 +1,140 @@
+.TH  "matahari_netd_selinux"  "8"  "13-01-04" "matahari_netd" "SELinux Policy documentation for matahari_netd"
+.SH "NAME"
+matahari_netd_selinux \- Security Enhanced Linux Policy for the matahari_netd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the matahari_netd processes via flexible mandatory access control.
+
+The matahari_netd processes execute with the matahari_netd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep matahari_netd_t
+
+
+.SH "ENTRYPOINTS"
+
+The matahari_netd_t SELinux type can be entered via the "matahari_netd_exec_t" file type.  The default entrypoint paths for the matahari_netd_t domain are the following:"
+
+/usr/sbin/matahari-netd, /usr/sbin/matahari-qmf-networkd, /usr/sbin/matahari-dbus-networkd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux matahari_netd policy is very flexible allowing users to setup their matahari_netd processes in as secure a method as possible.
+.PP
+The following process types are defined for matahari_netd:
+
+.EX
+.B matahari_netd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a matahari_netd_t
+
+can be used to make the process type matahari_netd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux matahari_netd policy is very flexible allowing users to setup their matahari_netd processes in as secure a method as possible.
+.PP
+The following file types are defined for matahari_netd:
+
+
+.EX
+.PP
+.B matahari_netd_exec_t
+.EE
+
+- Set files with the matahari_netd_exec_t type, if you want to transition an executable to the matahari_netd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type matahari_netd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), matahari_netd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, matahari_hostd_selinux(8), matahari_rpcd_selinux(8), matahari_serviced_selinux(8), matahari_sysconfigd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/matahari_rpcd_selinux.8 serefpolicy-3.7.19/man/man8/matahari_rpcd_selinux.8
--- nsaserefpolicy/man/man8/matahari_rpcd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/matahari_rpcd_selinux.8	2013-03-15 11:40:04.940151974 +0100
@@ -0,0 +1,140 @@
+.TH  "matahari_rpcd_selinux"  "8"  "13-01-04" "matahari_rpcd" "SELinux Policy documentation for matahari_rpcd"
+.SH "NAME"
+matahari_rpcd_selinux \- Security Enhanced Linux Policy for the matahari_rpcd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the matahari_rpcd processes via flexible mandatory access control.
+
+The matahari_rpcd processes execute with the matahari_rpcd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep matahari_rpcd_t
+
+
+.SH "ENTRYPOINTS"
+
+The matahari_rpcd_t SELinux type can be entered via the "matahari_rpcd_exec_t" file type.  The default entrypoint paths for the matahari_rpcd_t domain are the following:"
+
+/usr/sbin/matahari-qmf-rpcd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux matahari_rpcd policy is very flexible allowing users to setup their matahari_rpcd processes in as secure a method as possible.
+.PP
+The following process types are defined for matahari_rpcd:
+
+.EX
+.B matahari_rpcd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a matahari_rpcd_t
+
+can be used to make the process type matahari_rpcd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux matahari_rpcd policy is very flexible allowing users to setup their matahari_rpcd processes in as secure a method as possible.
+.PP
+The following file types are defined for matahari_rpcd:
+
+
+.EX
+.PP
+.B matahari_rpcd_exec_t
+.EE
+
+- Set files with the matahari_rpcd_exec_t type, if you want to transition an executable to the matahari_rpcd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type matahari_rpcd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), matahari_rpcd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, matahari_hostd_selinux(8), matahari_netd_selinux(8), matahari_serviced_selinux(8), matahari_sysconfigd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/matahari_serviced_selinux.8 serefpolicy-3.7.19/man/man8/matahari_serviced_selinux.8
--- nsaserefpolicy/man/man8/matahari_serviced_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/matahari_serviced_selinux.8	2013-03-15 11:40:03.455151940 +0100
@@ -0,0 +1,140 @@
+.TH  "matahari_serviced_selinux"  "8"  "13-01-04" "matahari_serviced" "SELinux Policy documentation for matahari_serviced"
+.SH "NAME"
+matahari_serviced_selinux \- Security Enhanced Linux Policy for the matahari_serviced processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the matahari_serviced processes via flexible mandatory access control.
+
+The matahari_serviced processes execute with the matahari_serviced_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep matahari_serviced_t
+
+
+.SH "ENTRYPOINTS"
+
+The matahari_serviced_t SELinux type can be entered via the "matahari_serviced_exec_t" file type.  The default entrypoint paths for the matahari_serviced_t domain are the following:"
+
+/usr/sbin/matahari-serviced, /usr/sbin/matahari-qmf-serviced, /usr/sbin/matahari-dbus-serviced
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux matahari_serviced policy is very flexible allowing users to setup their matahari_serviced processes in as secure a method as possible.
+.PP
+The following process types are defined for matahari_serviced:
+
+.EX
+.B matahari_serviced_t
+.EE
+.PP
+Note:
+.B semanage permissive -a matahari_serviced_t
+
+can be used to make the process type matahari_serviced_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux matahari_serviced policy is very flexible allowing users to setup their matahari_serviced processes in as secure a method as possible.
+.PP
+The following file types are defined for matahari_serviced:
+
+
+.EX
+.PP
+.B matahari_serviced_exec_t
+.EE
+
+- Set files with the matahari_serviced_exec_t type, if you want to transition an executable to the matahari_serviced_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type matahari_serviced_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), matahari_serviced(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, matahari_hostd_selinux(8), matahari_netd_selinux(8), matahari_rpcd_selinux(8), matahari_sysconfigd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/matahari_sysconfigd_selinux.8 serefpolicy-3.7.19/man/man8/matahari_sysconfigd_selinux.8
--- nsaserefpolicy/man/man8/matahari_sysconfigd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/matahari_sysconfigd_selinux.8	2013-03-15 11:39:59.051151840 +0100
@@ -0,0 +1,140 @@
+.TH  "matahari_sysconfigd_selinux"  "8"  "13-01-04" "matahari_sysconfigd" "SELinux Policy documentation for matahari_sysconfigd"
+.SH "NAME"
+matahari_sysconfigd_selinux \- Security Enhanced Linux Policy for the matahari_sysconfigd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the matahari_sysconfigd processes via flexible mandatory access control.
+
+The matahari_sysconfigd processes execute with the matahari_sysconfigd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep matahari_sysconfigd_t
+
+
+.SH "ENTRYPOINTS"
+
+The matahari_sysconfigd_t SELinux type can be entered via the "matahari_sysconfigd_exec_t" file type.  The default entrypoint paths for the matahari_sysconfigd_t domain are the following:"
+
+/usr/sbin/matahari-qmf-sysconfigd, /usr/sbin/matahari-dbus-sysconfigd, /usr/sbin/matahari-qmf-sysconfig-consoled
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux matahari_sysconfigd policy is very flexible allowing users to setup their matahari_sysconfigd processes in as secure a method as possible.
+.PP
+The following process types are defined for matahari_sysconfigd:
+
+.EX
+.B matahari_sysconfigd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a matahari_sysconfigd_t
+
+can be used to make the process type matahari_sysconfigd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux matahari_sysconfigd policy is very flexible allowing users to setup their matahari_sysconfigd processes in as secure a method as possible.
+.PP
+The following file types are defined for matahari_sysconfigd:
+
+
+.EX
+.PP
+.B matahari_sysconfigd_exec_t
+.EE
+
+- Set files with the matahari_sysconfigd_exec_t type, if you want to transition an executable to the matahari_sysconfigd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type matahari_sysconfigd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), matahari_sysconfigd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, matahari_hostd_selinux(8), matahari_netd_selinux(8), matahari_rpcd_selinux(8), matahari_serviced_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mcelog_selinux.8 serefpolicy-3.7.19/man/man8/mcelog_selinux.8
--- nsaserefpolicy/man/man8/mcelog_selinux.8	2013-03-15 11:41:11.664153497 +0100
+++ serefpolicy-3.7.19/man/man8/mcelog_selinux.8	2013-03-15 11:39:56.340151778 +0100
@@ -1,31 +1,55 @@
-.TH  "mcelog_selinux"  "8"  "mcelog" "dwalsh@redhat.com" "mcelog SELinux Policy documentation"
+.TH  "mcelog_selinux"  "8"  "13-01-04" "mcelog" "SELinux Policy documentation for mcelog"
 .SH "NAME"
 mcelog_selinux \- Security Enhanced Linux Policy for the mcelog processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mcelog processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B mcelog
-(policy for mcelog)
-processes via flexible mandatory access
-control.  
+The mcelog processes execute with the mcelog_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep mcelog_t
+
+
+.SH "ENTRYPOINTS"
+
+The mcelog_t SELinux type can be entered via the "mcelog_exec_t" file type.  The default entrypoint paths for the mcelog_t domain are the following:"
+
+/usr/sbin/mcelog
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mcelog policy is very flexible allowing users to setup their mcelog processes in as secure a method as possible.
+.PP
+The following process types are defined for mcelog:
+
+.EX
+.B mcelog_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mcelog_t
+
+can be used to make the process type mcelog_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mcelog policy is very flexible allowing users to setup their mcelog processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mcelog:
 
 
 .EX
 .PP
-.B mcelog_exec_t 
+.B mcelog_exec_t
 .EE
 
 - Set files with the mcelog_exec_t type, if you want to transition an executable to the mcelog_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B mcelog_log_t 
+.B mcelog_log_t
 .EE
 
 - Set files with the mcelog_log_t type, if you want to treat the data as mcelog log data, usually stored under the /var/log directory.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B mcelog_var_run_t 
+.B mcelog_var_run_t
 .EE
 
 - Set files with the mcelog_var_run_t type, if you want to store the mcelog files under the /run directory.
@@ -49,28 +73,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mcelog policy is very flexible allowing users to setup their mcelog processes in as secure a method as possible.
-.PP 
-The following process types are defined for mcelog:
+.SH "MANAGED FILES"
 
-.EX
-.B mcelog_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mcelog_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mcelog_log_t
+
+	/var/log/mcelog.*
+.br
+
+.br
+.B mcelog_var_run_t
+
+	/var/run/mcelog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +153,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mcelog(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), mcelog(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/mdadm_selinux.8 serefpolicy-3.7.19/man/man8/mdadm_selinux.8
--- nsaserefpolicy/man/man8/mdadm_selinux.8	2013-03-15 11:41:12.212153509 +0100
+++ serefpolicy-3.7.19/man/man8/mdadm_selinux.8	2013-03-15 11:40:06.448152009 +0100
@@ -1,37 +1,63 @@
-.TH  "mdadm_selinux"  "8"  "mdadm" "dwalsh@redhat.com" "mdadm SELinux Policy documentation"
+.TH  "mdadm_selinux"  "8"  "13-01-04" "mdadm" "SELinux Policy documentation for mdadm"
 .SH "NAME"
 mdadm_selinux \- Security Enhanced Linux Policy for the mdadm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mdadm processes via flexible mandatory access control.
 
+The mdadm processes execute with the mdadm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep mdadm_t
+
+
+.SH "ENTRYPOINTS"
+
+The mdadm_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,mdadm_exec_t" file types.  The default entrypoint paths for the mdadm_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /sbin/mdadm, /sbin/mdmpd, /usr/sbin/iprdump, /usr/sbin/iprinit, /usr/sbin/iprupdate
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mdadm policy is very flexible allowing users to setup their mdadm processes in as secure a method as possible.
+.PP
+The following process types are defined for mdadm:
+
+.EX
+.B mdadm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mdadm_t
+
+can be used to make the process type mdadm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mdadm policy is very flexible allowing users to setup their mdadm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mdadm:
 
 
 .EX
 .PP
-.B mdadm_exec_t 
+.B mdadm_exec_t
 .EE
 
 - Set files with the mdadm_exec_t type, if you want to transition an executable to the mdadm_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/mdmpd, /usr/sbin/iprinit, /usr/sbin/iprupdate, /usr/sbin/iprdump, /sbin/mdadm
 
 .EX
 .PP
-.B mdadm_map_t 
+.B mdadm_map_t
 .EE
 
 - Set files with the mdadm_map_t type, if you want to treat the files as mdadm map data.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B mdadm_var_run_t 
+.B mdadm_var_run_t
 .EE
 
 - Set files with the mdadm_var_run_t type, if you want to store the mdadm files under the /run directory.
@@ -47,28 +73,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mdadm policy is very flexible allowing users to setup their mdadm processes in as secure a method as possible.
-.PP 
-The following process types are defined for mdadm:
+.SH "MANAGED FILES"
 
-.EX
-.B mdadm_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mdadm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -81,11 +99,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mdadm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), mdadm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/memcached_selinux.8 serefpolicy-3.7.19/man/man8/memcached_selinux.8
--- nsaserefpolicy/man/man8/memcached_selinux.8	2013-03-15 11:41:11.945153503 +0100
+++ serefpolicy-3.7.19/man/man8/memcached_selinux.8	2013-03-15 11:40:00.427151871 +0100
@@ -1,42 +1,73 @@
-.TH  "memcached_selinux"  "8"  "memcached" "dwalsh@redhat.com" "memcached SELinux Policy documentation"
+.TH  "memcached_selinux"  "8"  "13-01-04" "memcached" "SELinux Policy documentation for memcached"
 .SH "NAME"
 memcached_selinux \- Security Enhanced Linux Policy for the memcached processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the memcached processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B memcached
-(high-performance memory object caching system)
-processes via flexible mandatory access
-control.  
+The memcached processes execute with the memcached_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep memcached_t
+
+
+.SH "ENTRYPOINTS"
+
+The memcached_t SELinux type can be entered via the "memcached_exec_t" file type.  The default entrypoint paths for the memcached_t domain are the following:"
+
+/usr/bin/memcached
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
+.PP
+The following process types are defined for memcached:
+
+.EX
+.B memcached_t
+.EE
+.PP
+Note:
+.B semanage permissive -a memcached_t
+
+can be used to make the process type memcached_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  memcached policy is extremely flexible and has several booleans that allow you to manipulate the policy and run memcached with the tightest access possible.
 
 
 .PP
-If you want to allow httpd to connect to memcache serve, you must turn on the httpd_can_network_memcache boolean.
+If you want to allow httpd to connect to memcache server, you must turn on the httpd_can_network_memcache boolean.
+
+.EX
+.B setsebool -P httpd_can_network_memcache 1
+.EE
+
+.PP
+If you want to allow httpd to connect to memcache server, you must turn on the httpd_can_network_memcache boolean.
 
 .EX
 .B setsebool -P httpd_can_network_memcache 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for memcached:
 
 
 .EX
 .PP
-.B memcached_exec_t 
+.B memcached_exec_t
 .EE
 
 - Set files with the memcached_exec_t type, if you want to transition an executable to the memcached_t domain.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B memcached_initrc_exec_t 
+.B memcached_initrc_exec_t
 .EE
 
 - Set files with the memcached_initrc_exec_t type, if you want to transition an executable to the memcached_initrc_t domain.
@@ -52,63 +83,105 @@
 
 .EX
 .PP
-.B memcached_var_run_t 
+.B memcached_var_run_t
 .EE
 
 - Set files with the memcached_var_run_t type, if you want to store the memcached files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/ipa_memcached(/.*)?, /var/run/memcached(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for memcached:
 
 .EX
 .TP 5
-.B memcache_port_t 
+.B memcache_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 11211
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
-.PP 
-The following process types are defined for memcached:
-
-.EX
-.B memcached_t 
+udp 11211
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type memcached_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B memcached_var_run_t
+
+	/var/run/memcached(/.*)?
+.br
+	/var/run/ipa_memcached(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -127,12 +200,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), memcached(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), memcached(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mencoder_selinux.8 serefpolicy-3.7.19/man/man8/mencoder_selinux.8
--- nsaserefpolicy/man/man8/mencoder_selinux.8	2013-03-15 11:41:12.071153506 +0100
+++ serefpolicy-3.7.19/man/man8/mencoder_selinux.8	2013-03-15 11:40:02.279151913 +0100
@@ -1,25 +1,55 @@
-.TH  "mencoder_selinux"  "8"  "mencoder" "dwalsh@redhat.com" "mencoder SELinux Policy documentation"
+.TH  "mencoder_selinux"  "8"  "13-01-04" "mencoder" "SELinux Policy documentation for mencoder"
 .SH "NAME"
 mencoder_selinux \- Security Enhanced Linux Policy for the mencoder processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mencoder processes via flexible mandatory access control.
 
+The mencoder processes execute with the mencoder_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep mencoder_t
+
+
+.SH "ENTRYPOINTS"
+
+The mencoder_t SELinux type can be entered via the "mencoder_exec_t" file type.  The default entrypoint paths for the mencoder_t domain are the following:"
+
+/usr/bin/mencoder
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mencoder policy is very flexible allowing users to setup their mencoder processes in as secure a method as possible.
+.PP
+The following process types are defined for mencoder:
+
+.EX
+.B mencoder_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mencoder_t
+
+can be used to make the process type mencoder_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mencoder policy is very flexible allowing users to setup their mencoder processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mencoder:
 
 
 .EX
 .PP
-.B mencoder_exec_t 
+.B mencoder_exec_t
 .EE
 
 - Set files with the mencoder_exec_t type, if you want to transition an executable to the mencoder_t domain.
@@ -27,28 +57,66 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mencoder policy is very flexible allowing users to setup their mencoder processes in as secure a method as possible.
-.PP 
-The following process types are defined for mencoder:
+.SH "MANAGED FILES"
 
-.EX
-.B mencoder_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mencoder_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mplayer_home_t
+
+	/home/[^/]*/\.mplayer(/.*)?
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +129,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mencoder(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), mencoder(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/modemmanager_selinux.8 serefpolicy-3.7.19/man/man8/modemmanager_selinux.8
--- nsaserefpolicy/man/man8/modemmanager_selinux.8	2013-03-15 11:41:11.420153491 +0100
+++ serefpolicy-3.7.19/man/man8/modemmanager_selinux.8	2013-03-15 11:39:55.602151761 +0100
@@ -1,31 +1,55 @@
-.TH  "modemmanager_selinux"  "8"  "modemmanager" "dwalsh@redhat.com" "modemmanager SELinux Policy documentation"
+.TH  "modemmanager_selinux"  "8"  "13-01-04" "modemmanager" "SELinux Policy documentation for modemmanager"
 .SH "NAME"
 modemmanager_selinux \- Security Enhanced Linux Policy for the modemmanager processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the modemmanager processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B modemmanager
-(Provides a DBus interface to communicate with mobile broadband (GSM, CDMA, UMTS, ...) cards)
-processes via flexible mandatory access
-control.  
+The modemmanager processes execute with the modemmanager_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep modemmanager_t
+
+
+.SH "ENTRYPOINTS"
+
+The modemmanager_t SELinux type can be entered via the "modemmanager_exec_t" file type.  The default entrypoint paths for the modemmanager_t domain are the following:"
+
+/usr/sbin/modem-manager
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux modemmanager policy is very flexible allowing users to setup their modemmanager processes in as secure a method as possible.
+.PP
+The following process types are defined for modemmanager:
+
+.EX
+.B modemmanager_t
+.EE
+.PP
+Note:
+.B semanage permissive -a modemmanager_t
+
+can be used to make the process type modemmanager_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux modemmanager policy is very flexible allowing users to setup their modemmanager processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for modemmanager:
 
 
 .EX
 .PP
-.B modemmanager_exec_t 
+.B modemmanager_exec_t
 .EE
 
 - Set files with the modemmanager_exec_t type, if you want to transition an executable to the modemmanager_t domain.
@@ -33,28 +57,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux modemmanager policy is very flexible allowing users to setup their modemmanager processes in as secure a method as possible.
-.PP 
-The following process types are defined for modemmanager:
+.SH "MANAGED FILES"
 
-.EX
-.B modemmanager_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type modemmanager_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), modemmanager(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), modemmanager(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/mongod_selinux.8 serefpolicy-3.7.19/man/man8/mongod_selinux.8
--- nsaserefpolicy/man/man8/mongod_selinux.8	2013-03-15 11:41:12.163153508 +0100
+++ serefpolicy-3.7.19/man/man8/mongod_selinux.8	2013-03-15 11:40:04.410151962 +0100
@@ -1,37 +1,63 @@
-.TH  "mongod_selinux"  "8"  "mongod" "dwalsh@redhat.com" "mongod SELinux Policy documentation"
+.TH  "mongod_selinux"  "8"  "13-01-04" "mongod" "SELinux Policy documentation for mongod"
 .SH "NAME"
 mongod_selinux \- Security Enhanced Linux Policy for the mongod processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mongod processes via flexible mandatory access control.
 
+The mongod processes execute with the mongod_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep mongod_t
+
+
+.SH "ENTRYPOINTS"
+
+The mongod_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,mongod_exec_t" file types.  The default entrypoint paths for the mongod_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/mongod, /usr/share/aeolus-conductor/dbomatic/dbomatic
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
+.PP
+The following process types are defined for mongod:
+
+.EX
+.B mongod_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mongod_t
+
+can be used to make the process type mongod_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mongod:
 
 
 .EX
 .PP
-.B mongod_exec_t 
+.B mongod_exec_t
 .EE
 
 - Set files with the mongod_exec_t type, if you want to transition an executable to the mongod_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/mongod, /usr/share/aeolus-conductor/dbomatic/dbomatic
 
 .EX
 .PP
-.B mongod_initrc_exec_t 
+.B mongod_initrc_exec_t
 .EE
 
 - Set files with the mongod_initrc_exec_t type, if you want to transition an executable to the mongod_initrc_t domain.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B mongod_log_t 
+.B mongod_log_t
 .EE
 
 - Set files with the mongod_log_t type, if you want to treat the data as mongod log data, usually stored under the /var/log directory.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B mongod_tmp_t 
+.B mongod_tmp_t
 .EE
 
 - Set files with the mongod_tmp_t type, if you want to store mongod temporary files in the /tmp directories.
@@ -55,7 +81,7 @@
 
 .EX
 .PP
-.B mongod_var_lib_t 
+.B mongod_var_lib_t
 .EE
 
 - Set files with the mongod_var_lib_t type, if you want to store the mongod files under the /var/lib directory.
@@ -63,63 +89,51 @@
 
 .EX
 .PP
-.B mongod_var_run_t 
+.B mongod_var_run_t
 .EE
 
 - Set files with the mongod_var_run_t type, if you want to store the mongod files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/mongodb(/.*)?, /var/run/aeolus/dbomatic\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for mongod:
 
 .EX
 .TP 5
-.B mongod_port_t 
+.B mongod_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 27017
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
-.PP 
-The following process types are defined for mongod:
+.SH "MANAGED FILES"
 
-.EX
-.B mongod_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mongod_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -135,11 +149,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mongod(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), mongod(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/mono_selinux.8 serefpolicy-3.7.19/man/man8/mono_selinux.8
--- nsaserefpolicy/man/man8/mono_selinux.8	2013-03-15 11:41:11.229153487 +0100
+++ serefpolicy-3.7.19/man/man8/mono_selinux.8	2013-03-15 11:39:55.461151758 +0100
@@ -1,31 +1,55 @@
-.TH  "mono_selinux"  "8"  "mono" "dwalsh@redhat.com" "mono SELinux Policy documentation"
+.TH  "mono_selinux"  "8"  "13-01-04" "mono" "SELinux Policy documentation for mono"
 .SH "NAME"
 mono_selinux \- Security Enhanced Linux Policy for the mono processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mono processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B mono
-(Run .NET server and client applications on Linux)
-processes via flexible mandatory access
-control.  
+The mono processes execute with the mono_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep mono_t
+
+
+.SH "ENTRYPOINTS"
+
+The mono_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,mono_exec_t" file types.  The default entrypoint paths for the mono_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/mono.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mono policy is very flexible allowing users to setup their mono processes in as secure a method as possible.
+.PP
+The following process types are defined for mono:
+
+.EX
+.B mono_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mono_t
+
+can be used to make the process type mono_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mono policy is very flexible allowing users to setup their mono processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mono:
 
 
 .EX
 .PP
-.B mono_exec_t 
+.B mono_exec_t
 .EE
 
 - Set files with the mono_exec_t type, if you want to transition an executable to the mono_t domain.
@@ -33,51 +57,43 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux mono policy is very flexible allowing users to setup their mono processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for mono:
 
 .EX
 .TP 5
-.B monopd_port_t 
+.B monopd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 1234
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mono policy is very flexible allowing users to setup their mono processes in as secure a method as possible.
-.PP 
-The following process types are defined for mono:
+.SH "MANAGED FILES"
 
-.EX
-.B mono_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mono_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -93,11 +109,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mono(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), mono(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/mount_selinux.8 serefpolicy-3.7.19/man/man8/mount_selinux.8
--- nsaserefpolicy/man/man8/mount_selinux.8	2013-03-15 11:41:11.849153501 +0100
+++ serefpolicy-3.7.19/man/man8/mount_selinux.8	2013-03-15 11:39:58.694151832 +0100
@@ -1,22 +1,53 @@
-.TH  "mount_selinux"  "8"  "mount" "dwalsh@redhat.com" "mount SELinux Policy documentation"
+.TH  "mount_selinux"  "8"  "13-01-04" "mount" "SELinux Policy documentation for mount"
 .SH "NAME"
 mount_selinux \- Security Enhanced Linux Policy for the mount processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mount processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B mount
-(Policy for mount)
-processes via flexible mandatory access
-control.  
+The mount processes execute with the mount_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep mount_t
+
+
+.SH "ENTRYPOINTS"
+
+The mount_t SELinux type can be entered via the "mount_exec_t,fusermount_exec_t" file types.  The default entrypoint paths for the mount_t domain are the following:"
+
+/bin/mount.*, /bin/umount.*, /sbin/mount.*, /sbin/umount.*, /bin/fusermount, /usr/bin/fusermount
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mount policy is very flexible allowing users to setup their mount processes in as secure a method as possible.
+.PP
+The following process types are defined for mount:
+
+.EX
+.B mount_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mount_t
+
+can be used to make the process type mount_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  mount policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mount with the tightest access possible.
 
 
 .PP
+If you want to allow xguest users to mount removable media, you must turn on the xguest_mount_media boolean.
+
+.EX
+.B setsebool -P xguest_mount_media 1
+.EE
+
+.PP
 If you want to allow the mount command to mount any directory or file, you must turn on the allow_mount_anyfile boolean.
 
 .EX
@@ -24,38 +55,41 @@
 .EE
 
 .PP
-If you want to allow xguest users to mount removable medi, you must turn on the xguest_mount_media boolean.
+If you want to allow xguest users to mount removable media, you must turn on the xguest_mount_media boolean.
 
 .EX
 .B setsebool -P xguest_mount_media 1
 .EE
 
+.PP
+If you want to allow the mount command to mount any directory or file, you must turn on the allow_mount_anyfile boolean.
+
+.EX
+.B setsebool -P allow_mount_anyfile 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mount policy is very flexible allowing users to setup their mount processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mount:
 
 
 .EX
 .PP
-.B mount_exec_t 
+.B mount_exec_t
 .EE
 
 - Set files with the mount_exec_t type, if you want to transition an executable to the mount_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/mount.*, /sbin/umount.*, /bin/umount.*, /bin/mount.*
 
 .EX
 .PP
-.B mount_loopback_t 
+.B mount_loopback_t
 .EE
 
 - Set files with the mount_loopback_t type, if you want to treat the files as mount loopback data.
@@ -63,7 +97,7 @@
 
 .EX
 .PP
-.B mount_tmp_t 
+.B mount_tmp_t
 .EE
 
 - Set files with the mount_tmp_t type, if you want to store mount temporary files in the /tmp directories.
@@ -71,40 +105,154 @@
 
 .EX
 .PP
-.B mount_var_run_t 
+.B mount_var_run_t
 .EE
 
 - Set files with the mount_var_run_t type, if you want to store the mount files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/davfs2(/.*)?, /var/cache/davfs2(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mount policy is very flexible allowing users to setup their mount processes in as secure a method as possible.
-.PP 
-The following process types are defined for mount:
+.SH "MANAGED FILES"
 
-.EX
-.B mount_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mount_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mount_tmp_t
+
+
+.br
+.B mount_var_run_t
+
+	/var/run/davfs2(/.*)?
+.br
+	/var/cache/davfs2(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -120,12 +268,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mount(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), mount(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mozilla_plugin_config_selinux.8 serefpolicy-3.7.19/man/man8/mozilla_plugin_config_selinux.8
--- nsaserefpolicy/man/man8/mozilla_plugin_config_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/mozilla_plugin_config_selinux.8	2013-03-15 11:40:04.507151964 +0100
@@ -0,0 +1,162 @@
+.TH  "mozilla_plugin_config_selinux"  "8"  "13-01-04" "mozilla_plugin_config" "SELinux Policy documentation for mozilla_plugin_config"
+.SH "NAME"
+mozilla_plugin_config_selinux \- Security Enhanced Linux Policy for the mozilla_plugin_config processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the mozilla_plugin_config processes via flexible mandatory access control.
+
+The mozilla_plugin_config processes execute with the mozilla_plugin_config_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep mozilla_plugin_config_t
+
+
+.SH "ENTRYPOINTS"
+
+The mozilla_plugin_config_t SELinux type can be entered via the "mozilla_plugin_config_exec_t" file type.  The default entrypoint paths for the mozilla_plugin_config_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mozilla_plugin_config policy is very flexible allowing users to setup their mozilla_plugin_config processes in as secure a method as possible.
+.PP
+The following process types are defined for mozilla_plugin_config:
+
+.EX
+.B mozilla_plugin_config_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mozilla_plugin_config_t
+
+can be used to make the process type mozilla_plugin_config_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux mozilla_plugin_config policy is very flexible allowing users to setup their mozilla_plugin_config processes in as secure a method as possible.
+.PP
+The following file types are defined for mozilla_plugin_config:
+
+
+.EX
+.PP
+.B mozilla_plugin_config_exec_t
+.EE
+
+- Set files with the mozilla_plugin_config_exec_t type, if you want to transition an executable to the mozilla_plugin_config_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type mozilla_plugin_config_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mozilla_home_t
+
+	/home/[^/]*/\.java(/.*)?
+.br
+	/home/[^/]*/\.galeon(/.*)?
+.br
+	/home/[^/]*/\.mozilla(/.*)?
+.br
+	/home/[^/]*/\.phoenix(/.*)?
+.br
+	/home/[^/]*/\.netscape(/.*)?
+.br
+	/home/[^/]*/\.thunderbird(/.*)?
+.br
+
+.br
+.B mozilla_plugin_rw_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), mozilla_plugin_config(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, mozilla_selinux(8), mozilla_selinux(8), mozilla_plugin_selinux(8), mozilla_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mozilla_plugin_selinux.8 serefpolicy-3.7.19/man/man8/mozilla_plugin_selinux.8
--- nsaserefpolicy/man/man8/mozilla_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/mozilla_plugin_selinux.8	2013-03-15 11:40:04.633151967 +0100
@@ -0,0 +1,251 @@
+.TH  "mozilla_plugin_selinux"  "8"  "13-01-04" "mozilla_plugin" "SELinux Policy documentation for mozilla_plugin"
+.SH "NAME"
+mozilla_plugin_selinux \- Security Enhanced Linux Policy for the mozilla_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the mozilla_plugin processes via flexible mandatory access control.
+
+The mozilla_plugin processes execute with the mozilla_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep mozilla_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The mozilla_plugin_t SELinux type can be entered via the "mozilla_plugin_exec_t" file type.  The default entrypoint paths for the mozilla_plugin_t domain are the following:"
+
+/usr/lib(64)?/xulrunner[^/]*/plugin-container
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mozilla_plugin policy is very flexible allowing users to setup their mozilla_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for mozilla_plugin:
+
+.EX
+.B mozilla_plugin_config_t, mozilla_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mozilla_plugin_t
+
+can be used to make the process type mozilla_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mozilla_plugin policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mozilla_plugin with the tightest access possible.
+
+
+.PP
+If you want to allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container, you must turn on the unconfined_mozilla_plugin_transition boolean.
+
+.EX
+.B setsebool -P unconfined_mozilla_plugin_transition 1
+.EE
+
+.PP
+If you want to allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container, you must turn on the unconfined_mozilla_plugin_transition boolean.
+
+.EX
+.B setsebool -P unconfined_mozilla_plugin_transition 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux mozilla_plugin policy is very flexible allowing users to setup their mozilla_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for mozilla_plugin:
+
+
+.EX
+.PP
+.B mozilla_plugin_config_exec_t
+.EE
+
+- Set files with the mozilla_plugin_config_exec_t type, if you want to transition an executable to the mozilla_plugin_config_t domain.
+
+
+.EX
+.PP
+.B mozilla_plugin_exec_t
+.EE
+
+- Set files with the mozilla_plugin_exec_t type, if you want to transition an executable to the mozilla_plugin_t domain.
+
+
+.EX
+.PP
+.B mozilla_plugin_rw_t
+.EE
+
+- Set files with the mozilla_plugin_rw_t type, if you want to treat the files as mozilla plugin read/write content.
+
+
+.EX
+.PP
+.B mozilla_plugin_tmp_t
+.EE
+
+- Set files with the mozilla_plugin_tmp_t type, if you want to store mozilla plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mozilla_plugin_tmpfs_t
+.EE
+
+- Set files with the mozilla_plugin_tmpfs_t type, if you want to store mozilla plugin files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type mozilla_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B gnome_home_type
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mozilla_home_t
+
+	/home/[^/]*/\.java(/.*)?
+.br
+	/home/[^/]*/\.galeon(/.*)?
+.br
+	/home/[^/]*/\.mozilla(/.*)?
+.br
+	/home/[^/]*/\.phoenix(/.*)?
+.br
+	/home/[^/]*/\.netscape(/.*)?
+.br
+	/home/[^/]*/\.thunderbird(/.*)?
+.br
+
+.br
+.B mozilla_plugin_tmp_t
+
+
+.br
+.B mozilla_plugin_tmpfs_t
+
+
+.br
+.B nsplugin_home_t
+
+	/home/[^/]*/\.adobe(/.*)?
+.br
+	/home/[^/]*/\.macromedia(/.*)?
+.br
+	/home/[^/]*/\.gcjwebplugin(/.*)?
+.br
+	/home/[^/]*/\.icedteaplugin(/.*)?
+.br
+
+.br
+.B pulseaudio_home_t
+
+	/home/[^/]*/\.pulse(/.*)?
+.br
+	/home/[^/]*/\.pulse-cookie
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), mozilla_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), mozilla_selinux(8), mozilla_selinux(8), mozilla_plugin_config_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mozilla_selinux.8 serefpolicy-3.7.19/man/man8/mozilla_selinux.8
--- nsaserefpolicy/man/man8/mozilla_selinux.8	2013-03-15 11:41:11.932153503 +0100
+++ serefpolicy-3.7.19/man/man8/mozilla_selinux.8	2013-03-15 11:40:00.034151862 +0100
@@ -1,23 +1,61 @@
-.TH  "mozilla_selinux"  "8"  "mozilla" "dwalsh@redhat.com" "mozilla SELinux Policy documentation"
+.TH  "mozilla_selinux"  "8"  "13-01-04" "mozilla" "SELinux Policy documentation for mozilla"
 .SH "NAME"
 mozilla_selinux \- Security Enhanced Linux Policy for the mozilla processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mozilla processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B mozilla
-(Policy for Mozilla and related web browsers)
-processes via flexible mandatory access
-control.  
+The mozilla processes execute with the mozilla_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep mozilla_t
+
+
+.SH "ENTRYPOINTS"
+
+The mozilla_t SELinux type can be entered via the "mozilla_exec_t" file type.  The default entrypoint paths for the mozilla_t domain are the following:"
+
+/usr/lib(64)?/galeon/galeon, /usr/lib(64)?/mozilla[^/]*/reg.+, /usr/lib(64)?/netscape/base-4/wrapper, /usr/lib(64)?/mozilla[^/]*/mozilla-.*, /usr/lib(64)?/firefox[^/]*/mozilla-.*, /usr/lib(64)?/[^/]*firefox[^/]*/firefox-bin, /usr/lib(64)?/netscape/.+/communicator/communicator-smotif\.real, /usr/lib/[^/]*firefox[^/]*/firefox, /usr/lib64/[^/]*firefox[^/]*/firefox, /usr/bin/mozilla-[0-9].*, /usr/bin/mozilla-bin-[0-9].*, /usr/bin/mozilla, /usr/bin/netscape, /usr/bin/epiphany, /usr/bin/epiphany-bin, /usr/bin/mozilla-snapshot
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mozilla policy is very flexible allowing users to setup their mozilla processes in as secure a method as possible.
+.PP
+The following process types are defined for mozilla:
+
+.EX
+.B mozilla_t, mozilla_plugin_config_t, mozilla_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mozilla_t
+
+can be used to make the process type mozilla_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  mozilla policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mozilla with the tightest access possible.
 
 
 .PP
-If you want to control mozilla content acces, you must turn on the mozilla_read_content boolean.
+If you want to control mozilla content access, you must turn on the mozilla_read_content boolean.
+
+.EX
+.B setsebool -P mozilla_read_content 1
+.EE
+
+.PP
+If you want to allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container, you must turn on the unconfined_mozilla_plugin_transition boolean.
+
+.EX
+.B setsebool -P unconfined_mozilla_plugin_transition 1
+.EE
+
+.PP
+If you want to control mozilla content access, you must turn on the mozilla_read_content boolean.
 
 .EX
 .B setsebool -P mozilla_read_content 1
@@ -31,19 +69,19 @@
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mozilla policy is very flexible allowing users to setup their mozilla processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mozilla:
 
 
 .EX
 .PP
-.B mozilla_conf_t 
+.B mozilla_conf_t
 .EE
 
 - Set files with the mozilla_conf_t type, if you want to treat the files as mozilla configuration data, usually stored under the /etc directory.
@@ -51,19 +89,15 @@
 
 .EX
 .PP
-.B mozilla_exec_t 
+.B mozilla_exec_t
 .EE
 
 - Set files with the mozilla_exec_t type, if you want to transition an executable to the mozilla_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/mozilla[^/]*/mozilla-.*, /usr/lib(64)?/netscape/.+/communicator/communicator-smotif\.real, /usr/lib(64)?/galeon/galeon, /usr/lib(64)?/firefox[^/]*/mozilla-.*, /usr/lib/[^/]*firefox[^/]*/firefox, /usr/lib(64)?/mozilla[^/]*/reg.+, /usr/bin/netscape, /usr/bin/mozilla-bin-[0-9].*, /usr/bin/epiphany-bin, /usr/bin/mozilla-snapshot, /usr/lib(64)?/netscape/base-4/wrapper, /usr/lib64/[^/]*firefox[^/]*/firefox, /usr/bin/mozilla-[0-9].*, /usr/lib(64)?/[^/]*firefox[^/]*/firefox-bin, /usr/bin/mozilla, /usr/bin/epiphany
 
 .EX
 .PP
-.B mozilla_home_t 
+.B mozilla_home_t
 .EE
 
 - Set files with the mozilla_home_t type, if you want to store mozilla files in the users home directory.
@@ -71,7 +105,7 @@
 
 .EX
 .PP
-.B mozilla_plugin_config_exec_t 
+.B mozilla_plugin_config_exec_t
 .EE
 
 - Set files with the mozilla_plugin_config_exec_t type, if you want to transition an executable to the mozilla_plugin_config_t domain.
@@ -79,7 +113,7 @@
 
 .EX
 .PP
-.B mozilla_plugin_exec_t 
+.B mozilla_plugin_exec_t
 .EE
 
 - Set files with the mozilla_plugin_exec_t type, if you want to transition an executable to the mozilla_plugin_t domain.
@@ -87,7 +121,7 @@
 
 .EX
 .PP
-.B mozilla_plugin_rw_t 
+.B mozilla_plugin_rw_t
 .EE
 
 - Set files with the mozilla_plugin_rw_t type, if you want to treat the files as mozilla plugin read/write content.
@@ -95,7 +129,7 @@
 
 .EX
 .PP
-.B mozilla_plugin_tmp_t 
+.B mozilla_plugin_tmp_t
 .EE
 
 - Set files with the mozilla_plugin_tmp_t type, if you want to store mozilla plugin temporary files in the /tmp directories.
@@ -103,7 +137,7 @@
 
 .EX
 .PP
-.B mozilla_plugin_tmpfs_t 
+.B mozilla_plugin_tmpfs_t
 .EE
 
 - Set files with the mozilla_plugin_tmpfs_t type, if you want to store mozilla plugin files on a tmpfs file system.
@@ -111,7 +145,7 @@
 
 .EX
 .PP
-.B mozilla_tmpfs_t 
+.B mozilla_tmpfs_t
 .EE
 
 - Set files with the mozilla_tmpfs_t type, if you want to store mozilla files on a tmpfs file system.
@@ -119,28 +153,138 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mozilla policy is very flexible allowing users to setup their mozilla processes in as secure a method as possible.
-.PP 
-The following process types are defined for mozilla:
+.SH "MANAGED FILES"
 
-.EX
-.B mozilla_t, mozilla_plugin_config_t, mozilla_plugin_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mozilla_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B gconf_home_t
+
+	/root/\.local.*
+.br
+	/root/\.gconf(d)?(/.*)?
+.br
+	/home/[^/]*/\.local.*
+.br
+	/home/[^/]*/\.gconf(d)?(/.*)?
+.br
+
+.br
+.B gnome_home_type
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mozilla_home_t
+
+	/home/[^/]*/\.java(/.*)?
+.br
+	/home/[^/]*/\.galeon(/.*)?
+.br
+	/home/[^/]*/\.mozilla(/.*)?
+.br
+	/home/[^/]*/\.phoenix(/.*)?
+.br
+	/home/[^/]*/\.netscape(/.*)?
+.br
+	/home/[^/]*/\.thunderbird(/.*)?
+.br
+
+.br
+.B mozilla_tmpfs_t
+
+
+.br
+.B nfs_t
+
+
+.br
+.B nsplugin_home_t
+
+	/home/[^/]*/\.adobe(/.*)?
+.br
+	/home/[^/]*/\.macromedia(/.*)?
+.br
+	/home/[^/]*/\.gcjwebplugin(/.*)?
+.br
+	/home/[^/]*/\.icedteaplugin(/.*)?
+.br
+
+.br
+.B nsplugin_rw_t
+
+	/usr/lib(64)?/mozilla/plugins-wrapped(/.*)?
+.br
+
+.br
+.B pulseaudio_home_t
+
+	/home/[^/]*/\.pulse(/.*)?
+.br
+	/home/[^/]*/\.pulse-cookie
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B tmpfs_t
+
+	/dev/shm
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -156,12 +300,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mozilla(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), mozilla(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), mozilla_plugin_selinux(8), mozilla_plugin_config_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mpd_selinux.8 serefpolicy-3.7.19/man/man8/mpd_selinux.8
--- nsaserefpolicy/man/man8/mpd_selinux.8	2013-03-15 11:41:12.239153510 +0100
+++ serefpolicy-3.7.19/man/man8/mpd_selinux.8	2013-03-15 11:40:07.486152032 +0100
@@ -1,30 +1,61 @@
-.TH  "mpd_selinux"  "8"  "mpd" "dwalsh@redhat.com" "mpd SELinux Policy documentation"
+.TH  "mpd_selinux"  "8"  "13-01-04" "mpd" "SELinux Policy documentation for mpd"
 .SH "NAME"
 mpd_selinux \- Security Enhanced Linux Policy for the mpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mpd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B mpd
-(policy for daemon for playing music)
-processes via flexible mandatory access
-control.  
+The mpd processes execute with the mpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep mpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The mpd_t SELinux type can be entered via the "mpd_exec_t" file type.  The default entrypoint paths for the mpd_t domain are the following:"
+
+/usr/bin/mpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
+.PP
+The following process types are defined for mpd:
+
+.EX
+.B mpd_t, mplayer_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mpd_t
+
+can be used to make the process type mpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  mpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mpd with the tightest access possible.
 
 
 .PP
-If you want to allow mplayer executable stac, you must turn on the allow_mplayer_execstack boolean.
+If you want to allow gssd to read temp directory.  For access to kerberos tgt, you must turn on the allow_gssd_read_tmp boolean.
+
+.EX
+.B setsebool -P allow_gssd_read_tmp 1
+.EE
+
+.PP
+If you want to allow mplayer executable stack, you must turn on the allow_mplayer_execstack boolean.
 
 .EX
 .B setsebool -P allow_mplayer_execstack 1
 .EE
 
 .PP
-If you want to allow all daemons to write corefiles to , you must turn on the allow_daemons_dump_core boolean.
+If you want to allow all daemons to write corefiles to /, you must turn on the allow_daemons_dump_core boolean.
 
 .EX
 .B setsebool -P allow_daemons_dump_core 1
@@ -44,32 +75,49 @@
 .B setsebool -P allow_gssd_read_tmp 1
 .EE
 
+.PP
+If you want to allow mplayer executable stack, you must turn on the allow_mplayer_execstack boolean.
+
+.EX
+.B setsebool -P allow_mplayer_execstack 1
+.EE
+
+.PP
+If you want to allow all daemons to write corefiles to /, you must turn on the allow_daemons_dump_core boolean.
+
+.EX
+.B setsebool -P allow_daemons_dump_core 1
+.EE
+
+.PP
+If you want to allow Apache to execute tmp content, you must turn on the httpd_tmp_exec boolean.
+
+.EX
+.B setsebool -P httpd_tmp_exec 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mpd:
 
 
 .EX
 .PP
-.B mpd_data_t 
+.B mpd_data_t
 .EE
 
 - Set files with the mpd_data_t type, if you want to treat the files as mpd content.
 
-.br
-.TP 5
-Paths: 
-/var/lib/mpd/playlists(/.*)?, /var/lib/mpd/music(/.*)?
 
 .EX
 .PP
-.B mpd_etc_t 
+.B mpd_etc_t
 .EE
 
 - Set files with the mpd_etc_t type, if you want to store mpd files in the /etc directories.
@@ -77,7 +125,7 @@
 
 .EX
 .PP
-.B mpd_exec_t 
+.B mpd_exec_t
 .EE
 
 - Set files with the mpd_exec_t type, if you want to transition an executable to the mpd_t domain.
@@ -85,7 +133,7 @@
 
 .EX
 .PP
-.B mpd_initrc_exec_t 
+.B mpd_initrc_exec_t
 .EE
 
 - Set files with the mpd_initrc_exec_t type, if you want to transition an executable to the mpd_initrc_t domain.
@@ -93,7 +141,7 @@
 
 .EX
 .PP
-.B mpd_log_t 
+.B mpd_log_t
 .EE
 
 - Set files with the mpd_log_t type, if you want to treat the data as mpd log data, usually stored under the /var/log directory.
@@ -101,7 +149,7 @@
 
 .EX
 .PP
-.B mpd_tmp_t 
+.B mpd_tmp_t
 .EE
 
 - Set files with the mpd_tmp_t type, if you want to store mpd temporary files in the /tmp directories.
@@ -109,7 +157,7 @@
 
 .EX
 .PP
-.B mpd_tmpfs_t 
+.B mpd_tmpfs_t
 .EE
 
 - Set files with the mpd_tmpfs_t type, if you want to store mpd files on a tmpfs file system.
@@ -117,7 +165,7 @@
 
 .EX
 .PP
-.B mpd_var_lib_t 
+.B mpd_var_lib_t
 .EE
 
 - Set files with the mpd_var_lib_t type, if you want to store the mpd files under the /var/lib directory.
@@ -125,51 +173,113 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for mpd:
 
 .EX
 .TP 5
-.B mpd_port_t 
+.B mpd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 6600
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for mpd:
+.SH "MANAGED FILES"
 
-.EX
-.B mpd_t, mplayer_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mpd_data_t
+
+	/var/lib/mpd/music(/.*)?
+.br
+	/var/lib/mpd/playlists(/.*)?
+.br
+
+.br
+.B mpd_tmp_t
+
+
+.br
+.B mpd_tmpfs_t
+
+
+.br
+.B mpd_var_lib_t
+
+	/var/lib/mpd(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -188,12 +298,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mpd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), mpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), mplayer_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mplayer_selinux.8 serefpolicy-3.7.19/man/man8/mplayer_selinux.8
--- nsaserefpolicy/man/man8/mplayer_selinux.8	2013-03-15 11:41:12.238153510 +0100
+++ serefpolicy-3.7.19/man/man8/mplayer_selinux.8	2013-03-15 11:40:07.436152031 +0100
@@ -1,42 +1,73 @@
-.TH  "mplayer_selinux"  "8"  "mplayer" "dwalsh@redhat.com" "mplayer SELinux Policy documentation"
+.TH  "mplayer_selinux"  "8"  "13-01-04" "mplayer" "SELinux Policy documentation for mplayer"
 .SH "NAME"
 mplayer_selinux \- Security Enhanced Linux Policy for the mplayer processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mplayer processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B mplayer
-(Mplayer media player and encoder)
-processes via flexible mandatory access
-control.  
+The mplayer processes execute with the mplayer_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep mplayer_t
+
+
+.SH "ENTRYPOINTS"
+
+The mplayer_t SELinux type can be entered via the "mplayer_exec_t" file type.  The default entrypoint paths for the mplayer_t domain are the following:"
+
+/usr/bin/vlc, /usr/bin/xine, /usr/bin/mplayer
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mplayer policy is very flexible allowing users to setup their mplayer processes in as secure a method as possible.
+.PP
+The following process types are defined for mplayer:
+
+.EX
+.B mplayer_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mplayer_t
+
+can be used to make the process type mplayer_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  mplayer policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mplayer with the tightest access possible.
 
 
 .PP
-If you want to allow mplayer executable stac, you must turn on the allow_mplayer_execstack boolean.
+If you want to allow mplayer executable stack, you must turn on the allow_mplayer_execstack boolean.
+
+.EX
+.B setsebool -P allow_mplayer_execstack 1
+.EE
+
+.PP
+If you want to allow mplayer executable stack, you must turn on the allow_mplayer_execstack boolean.
 
 .EX
 .B setsebool -P allow_mplayer_execstack 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mplayer policy is very flexible allowing users to setup their mplayer processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mplayer:
 
 
 .EX
 .PP
-.B mplayer_etc_t 
+.B mplayer_etc_t
 .EE
 
 - Set files with the mplayer_etc_t type, if you want to store mplayer files in the /etc directories.
@@ -44,19 +75,15 @@
 
 .EX
 .PP
-.B mplayer_exec_t 
+.B mplayer_exec_t
 .EE
 
 - Set files with the mplayer_exec_t type, if you want to transition an executable to the mplayer_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/vlc, /usr/bin/mplayer, /usr/bin/xine
 
 .EX
 .PP
-.B mplayer_home_t 
+.B mplayer_home_t
 .EE
 
 - Set files with the mplayer_home_t type, if you want to store mplayer files in the users home directory.
@@ -64,7 +91,7 @@
 
 .EX
 .PP
-.B mplayer_tmpfs_t 
+.B mplayer_tmpfs_t
 .EE
 
 - Set files with the mplayer_tmpfs_t type, if you want to store mplayer files on a tmpfs file system.
@@ -72,28 +99,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mplayer policy is very flexible allowing users to setup their mplayer processes in as secure a method as possible.
-.PP 
-The following process types are defined for mplayer:
+.SH "MANAGED FILES"
 
-.EX
-.B mplayer_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mplayer_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mplayer_home_t
+
+	/home/[^/]*/\.mplayer(/.*)?
+.br
+
+.br
+.B mplayer_tmpfs_t
+
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -109,12 +188,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mplayer(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), mplayer(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mrtg_selinux.8 serefpolicy-3.7.19/man/man8/mrtg_selinux.8
--- nsaserefpolicy/man/man8/mrtg_selinux.8	2013-03-15 11:41:11.783153499 +0100
+++ serefpolicy-3.7.19/man/man8/mrtg_selinux.8	2013-03-15 11:39:56.661151785 +0100
@@ -1,31 +1,55 @@
-.TH  "mrtg_selinux"  "8"  "mrtg" "dwalsh@redhat.com" "mrtg SELinux Policy documentation"
+.TH  "mrtg_selinux"  "8"  "13-01-04" "mrtg" "SELinux Policy documentation for mrtg"
 .SH "NAME"
 mrtg_selinux \- Security Enhanced Linux Policy for the mrtg processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mrtg processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B mrtg
-(Network traffic graphing)
-processes via flexible mandatory access
-control.  
+The mrtg processes execute with the mrtg_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep mrtg_t
+
+
+.SH "ENTRYPOINTS"
+
+The mrtg_t SELinux type can be entered via the "mrtg_exec_t" file type.  The default entrypoint paths for the mrtg_t domain are the following:"
+
+/usr/bin/mrtg
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mrtg policy is very flexible allowing users to setup their mrtg processes in as secure a method as possible.
+.PP
+The following process types are defined for mrtg:
+
+.EX
+.B mrtg_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mrtg_t
+
+can be used to make the process type mrtg_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mrtg policy is very flexible allowing users to setup their mrtg processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mrtg:
 
 
 .EX
 .PP
-.B mrtg_etc_t 
+.B mrtg_etc_t
 .EE
 
 - Set files with the mrtg_etc_t type, if you want to store mrtg files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B mrtg_exec_t 
+.B mrtg_exec_t
 .EE
 
 - Set files with the mrtg_exec_t type, if you want to transition an executable to the mrtg_t domain.
@@ -41,19 +65,15 @@
 
 .EX
 .PP
-.B mrtg_lock_t 
+.B mrtg_lock_t
 .EE
 
 - Set files with the mrtg_lock_t type, if you want to treat the files as mrtg lock data, stored under the /var/lock directory
 
-.br
-.TP 5
-Paths: 
-/var/lock/mrtg(/.*)?, /etc/mrtg/mrtg\.ok
 
 .EX
 .PP
-.B mrtg_log_t 
+.B mrtg_log_t
 .EE
 
 - Set files with the mrtg_log_t type, if you want to treat the data as mrtg log data, usually stored under the /var/log directory.
@@ -61,7 +81,7 @@
 
 .EX
 .PP
-.B mrtg_var_lib_t 
+.B mrtg_var_lib_t
 .EE
 
 - Set files with the mrtg_var_lib_t type, if you want to store the mrtg files under the /var/lib directory.
@@ -69,7 +89,7 @@
 
 .EX
 .PP
-.B mrtg_var_run_t 
+.B mrtg_var_run_t
 .EE
 
 - Set files with the mrtg_var_run_t type, if you want to store the mrtg files under the /run directory.
@@ -77,28 +97,122 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mrtg policy is very flexible allowing users to setup their mrtg processes in as secure a method as possible.
-.PP 
-The following process types are defined for mrtg:
+.SH "MANAGED FILES"
 
-.EX
-.B mrtg_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mrtg_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_sys_content_t
+
+	/srv/([^/]*/)?www(/.*)?
+.br
+	/var/www(/.*)?
+.br
+	/etc/htdig(/.*)?
+.br
+	/srv/gallery2(/.*)?
+.br
+	/var/lib/trac(/.*)?
+.br
+	/var/lib/htdig(/.*)?
+.br
+	/var/www/icons(/.*)?
+.br
+	/usr/share/htdig(/.*)?
+.br
+	/usr/share/drupal.*
+.br
+	/var/www/svn/conf(/.*)?
+.br
+	/usr/share/icecast(/.*)?
+.br
+	/usr/share/mythweb(/.*)?
+.br
+	/var/lib/cacti/rra(/.*)?
+.br
+	/usr/share/ntop/html(/.*)?
+.br
+	/var/lib/graphite-web(/.*)
+.br
+	/usr/share/mythtv/data(/.*)?
+.br
+	/usr/share/openca/htdocs(/.*)?
+.br
+	/usr/share/selinux-policy[^/]*/html(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mrtg_lock_t
+
+	/var/lock/mrtg(/.*)?
+.br
+	/etc/mrtg/mrtg\.ok
+.br
+
+.br
+.B mrtg_log_t
+
+	/var/log/mrtg(/.*)?
+.br
+
+.br
+.B mrtg_var_lib_t
+
+	/var/lib/mrtg(/.*)?
+.br
+
+.br
+.B mrtg_var_run_t
+
+	/var/run/mrtg\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -111,11 +225,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mrtg(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), mrtg(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/munin_disk_plugin_selinux.8 serefpolicy-3.7.19/man/man8/munin_disk_plugin_selinux.8
--- nsaserefpolicy/man/man8/munin_disk_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/munin_disk_plugin_selinux.8	2013-03-15 11:40:04.873151973 +0100
@@ -0,0 +1,156 @@
+.TH  "munin_disk_plugin_selinux"  "8"  "13-01-04" "munin_disk_plugin" "SELinux Policy documentation for munin_disk_plugin"
+.SH "NAME"
+munin_disk_plugin_selinux \- Security Enhanced Linux Policy for the munin_disk_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the munin_disk_plugin processes via flexible mandatory access control.
+
+The munin_disk_plugin processes execute with the munin_disk_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep munin_disk_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The munin_disk_plugin_t SELinux type can be entered via the "munin_disk_plugin_exec_t" file type.  The default entrypoint paths for the munin_disk_plugin_t domain are the following:"
+
+/usr/share/munin/plugins/df.*, /usr/share/munin/plugins/smart_.*, /usr/share/munin/plugins/hddtemp.*, /usr/share/munin/plugins/diskstat.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux munin_disk_plugin policy is very flexible allowing users to setup their munin_disk_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for munin_disk_plugin:
+
+.EX
+.B munin_disk_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a munin_disk_plugin_t
+
+can be used to make the process type munin_disk_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux munin_disk_plugin policy is very flexible allowing users to setup their munin_disk_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for munin_disk_plugin:
+
+
+.EX
+.PP
+.B munin_disk_plugin_exec_t
+.EE
+
+- Set files with the munin_disk_plugin_exec_t type, if you want to transition an executable to the munin_disk_plugin_t domain.
+
+
+.EX
+.PP
+.B munin_disk_plugin_tmp_t
+.EE
+
+- Set files with the munin_disk_plugin_tmp_t type, if you want to store munin disk plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type munin_disk_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B munin_disk_plugin_tmp_t
+
+
+.br
+.B munin_plugin_state_t
+
+	/var/lib/munin/plugin-state(/.*)?
+.br
+
+.br
+.B munin_var_lib_t
+
+	/var/lib/munin(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), munin_disk_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, munin_selinux(8), munin_selinux(8), munin_mail_plugin_selinux(8), munin_selinux_plugin_selinux(8), munin_services_plugin_selinux(8), munin_system_plugin_selinux(8), munin_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/munin_mail_plugin_selinux.8 serefpolicy-3.7.19/man/man8/munin_mail_plugin_selinux.8
--- nsaserefpolicy/man/man8/munin_mail_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/munin_mail_plugin_selinux.8	2013-03-15 11:39:59.775151856 +0100
@@ -0,0 +1,156 @@
+.TH  "munin_mail_plugin_selinux"  "8"  "13-01-04" "munin_mail_plugin" "SELinux Policy documentation for munin_mail_plugin"
+.SH "NAME"
+munin_mail_plugin_selinux \- Security Enhanced Linux Policy for the munin_mail_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the munin_mail_plugin processes via flexible mandatory access control.
+
+The munin_mail_plugin processes execute with the munin_mail_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep munin_mail_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The munin_mail_plugin_t SELinux type can be entered via the "munin_mail_plugin_exec_t" file type.  The default entrypoint paths for the munin_mail_plugin_t domain are the following:"
+
+/usr/share/munin/plugins/qmail.*, /usr/share/munin/plugins/exim_mail.*, /usr/share/munin/plugins/sendmail_.*, /usr/share/munin/plugins/courier_mta_.*, /usr/share/munin/plugins/postfix_mail.*, /usr/share/munin/plugins/mailman, /usr/share/munin/plugins/mailscanner
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux munin_mail_plugin policy is very flexible allowing users to setup their munin_mail_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for munin_mail_plugin:
+
+.EX
+.B munin_mail_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a munin_mail_plugin_t
+
+can be used to make the process type munin_mail_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux munin_mail_plugin policy is very flexible allowing users to setup their munin_mail_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for munin_mail_plugin:
+
+
+.EX
+.PP
+.B munin_mail_plugin_exec_t
+.EE
+
+- Set files with the munin_mail_plugin_exec_t type, if you want to transition an executable to the munin_mail_plugin_t domain.
+
+
+.EX
+.PP
+.B munin_mail_plugin_tmp_t
+.EE
+
+- Set files with the munin_mail_plugin_tmp_t type, if you want to store munin mail plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type munin_mail_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B munin_mail_plugin_tmp_t
+
+
+.br
+.B munin_plugin_state_t
+
+	/var/lib/munin/plugin-state(/.*)?
+.br
+
+.br
+.B munin_var_lib_t
+
+	/var/lib/munin(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), munin_mail_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, munin_selinux(8), munin_selinux(8), munin_disk_plugin_selinux(8), munin_selinux_plugin_selinux(8), munin_services_plugin_selinux(8), munin_system_plugin_selinux(8), munin_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/munin_selinux.8 serefpolicy-3.7.19/man/man8/munin_selinux.8
--- nsaserefpolicy/man/man8/munin_selinux.8	2013-03-15 11:41:11.849153501 +0100
+++ serefpolicy-3.7.19/man/man8/munin_selinux.8	2013-03-15 11:39:58.674151831 +0100
@@ -1,43 +1,63 @@
-.TH  "munin_selinux"  "8"  "munin" "dwalsh@redhat.com" "munin SELinux Policy documentation"
+.TH  "munin_selinux"  "8"  "13-01-04" "munin" "SELinux Policy documentation for munin"
 .SH "NAME"
 munin_selinux \- Security Enhanced Linux Policy for the munin processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the munin processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B munin
-(Munin network-wide load graphing (formerly LRRD))
-processes via flexible mandatory access
-control.  
+The munin processes execute with the munin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep munin_t
+
+
+.SH "ENTRYPOINTS"
+
+The munin_t SELinux type can be entered via the "munin_exec_t" file type.  The default entrypoint paths for the munin_t domain are the following:"
+
+/usr/bin/munin-.*, /usr/sbin/munin-.*, /usr/share/munin/munin-.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
+.PP
+The following process types are defined for munin:
+
+.EX
+.B munin_mail_plugin_t, munin_disk_plugin_t, munin_services_plugin_t, munin_selinux_plugin_t, munin_system_plugin_t, munin_unconfined_plugin_t, munin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a munin_t
+
+can be used to make the process type munin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for munin:
 
 
 .EX
 .PP
-.B munin_disk_plugin_exec_t 
+.B munin_disk_plugin_exec_t
 .EE
 
 - Set files with the munin_disk_plugin_exec_t type, if you want to transition an executable to the munin_disk_plugin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/share/munin/plugins/smart_.*, /usr/share/munin/plugins/diskstat.*, /usr/share/munin/plugins/hddtemp.*, /usr/share/munin/plugins/df.*
 
 .EX
 .PP
-.B munin_disk_plugin_tmp_t 
+.B munin_disk_plugin_tmp_t
 .EE
 
 - Set files with the munin_disk_plugin_tmp_t type, if you want to store munin disk plugin temporary files in the /tmp directories.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B munin_etc_t 
+.B munin_etc_t
 .EE
 
 - Set files with the munin_etc_t type, if you want to store munin files in the /etc directories.
@@ -53,19 +73,15 @@
 
 .EX
 .PP
-.B munin_exec_t 
+.B munin_exec_t
 .EE
 
 - Set files with the munin_exec_t type, if you want to transition an executable to the munin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/munin-.*, /usr/share/munin/munin-.*, /usr/share/munin/plugins/.*, /usr/bin/munin-.*
 
 .EX
 .PP
-.B munin_initrc_exec_t 
+.B munin_initrc_exec_t
 .EE
 
 - Set files with the munin_initrc_exec_t type, if you want to transition an executable to the munin_initrc_t domain.
@@ -73,7 +89,7 @@
 
 .EX
 .PP
-.B munin_log_t 
+.B munin_log_t
 .EE
 
 - Set files with the munin_log_t type, if you want to treat the data as munin log data, usually stored under the /var/log directory.
@@ -81,19 +97,15 @@
 
 .EX
 .PP
-.B munin_mail_plugin_exec_t 
+.B munin_mail_plugin_exec_t
 .EE
 
 - Set files with the munin_mail_plugin_exec_t type, if you want to transition an executable to the munin_mail_plugin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/share/munin/plugins/postfix_mail.*, /usr/share/munin/plugins/mailman, /usr/share/munin/plugins/mailscanner, /usr/share/munin/plugins/courier_mta_.*, /usr/share/munin/plugins/exim_mail.*, /usr/share/munin/plugins/qmail.*, /usr/share/munin/plugins/sendmail_.*
 
 .EX
 .PP
-.B munin_mail_plugin_tmp_t 
+.B munin_mail_plugin_tmp_t
 .EE
 
 - Set files with the munin_mail_plugin_tmp_t type, if you want to store munin mail plugin temporary files in the /tmp directories.
@@ -101,7 +113,7 @@
 
 .EX
 .PP
-.B munin_plugin_state_t 
+.B munin_plugin_state_t
 .EE
 
 - Set files with the munin_plugin_state_t type, if you want to treat the files as munin plugin state data.
@@ -109,7 +121,7 @@
 
 .EX
 .PP
-.B munin_selinux_plugin_exec_t 
+.B munin_selinux_plugin_exec_t
 .EE
 
 - Set files with the munin_selinux_plugin_exec_t type, if you want to transition an executable to the munin_selinux_plugin_t domain.
@@ -117,7 +129,7 @@
 
 .EX
 .PP
-.B munin_selinux_plugin_tmp_t 
+.B munin_selinux_plugin_tmp_t
 .EE
 
 - Set files with the munin_selinux_plugin_tmp_t type, if you want to store munin selinux plugin temporary files in the /tmp directories.
@@ -125,19 +137,15 @@
 
 .EX
 .PP
-.B munin_services_plugin_exec_t 
+.B munin_services_plugin_exec_t
 .EE
 
 - Set files with the munin_services_plugin_exec_t type, if you want to transition an executable to the munin_services_plugin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/share/munin/plugins/samba, /usr/share/munin/plugins/ping_, /usr/share/munin/plugins/snmp_.*, /usr/share/munin/plugins/named, /usr/share/munin/plugins/varnish_.*, /usr/share/munin/plugins/tomcat_.*, /usr/share/munin/plugins/postgres_.*, /usr/share/munin/plugins/asterisk_.*, /usr/share/munin/plugins/lpstat, /usr/share/munin/plugins/mysql_.*, /usr/share/munin/plugins/slapd_.*, /usr/share/munin/plugins/nut.*, /usr/share/munin/plugins/apache_.*, /usr/share/munin/plugins/squid_.*, /usr/share/munin/plugins/fail2ban, /usr/share/munin/plugins/openvpn, /usr/share/munin/plugins/http_loadtime, /usr/share/munin/plugins/ntp_.*
 
 .EX
 .PP
-.B munin_services_plugin_tmp_t 
+.B munin_services_plugin_tmp_t
 .EE
 
 - Set files with the munin_services_plugin_tmp_t type, if you want to store munin services plugin temporary files in the /tmp directories.
@@ -145,19 +153,15 @@
 
 .EX
 .PP
-.B munin_system_plugin_exec_t 
+.B munin_system_plugin_exec_t
 .EE
 
 - Set files with the munin_system_plugin_exec_t type, if you want to transition an executable to the munin_system_plugin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/share/munin/plugins/proc_pri, /usr/share/munin/plugins/swap, /usr/share/munin/plugins/interrupts, /usr/share/munin/plugins/cpu.*, /usr/share/munin/plugins/load, /usr/share/munin/plugins/processes, /usr/share/munin/plugins/iostat.*, /usr/share/munin/plugins/nfs.*, /usr/share/munin/plugins/yum, /usr/share/munin/plugins/munin_*, /usr/share/munin/plugins/irqstats, /usr/share/munin/plugins/threads, /usr/share/munin/plugins/netstat, /usr/share/munin/plugins/acpi, /usr/share/munin/plugins/forks, /usr/share/munin/plugins/uptime, /usr/share/munin/plugins/users, /usr/share/munin/plugins/memory, /usr/share/munin/plugins/if_.*, /usr/share/munin/plugins/open_files
 
 .EX
 .PP
-.B munin_system_plugin_tmp_t 
+.B munin_system_plugin_tmp_t
 .EE
 
 - Set files with the munin_system_plugin_tmp_t type, if you want to store munin system plugin temporary files in the /tmp directories.
@@ -165,7 +169,7 @@
 
 .EX
 .PP
-.B munin_tmp_t 
+.B munin_tmp_t
 .EE
 
 - Set files with the munin_tmp_t type, if you want to store munin temporary files in the /tmp directories.
@@ -173,7 +177,23 @@
 
 .EX
 .PP
-.B munin_var_lib_t 
+.B munin_unconfined_plugin_exec_t
+.EE
+
+- Set files with the munin_unconfined_plugin_exec_t type, if you want to transition an executable to the munin_unconfined_plugin_t domain.
+
+
+.EX
+.PP
+.B munin_unconfined_plugin_tmp_t
+.EE
+
+- Set files with the munin_unconfined_plugin_tmp_t type, if you want to store munin unconfined plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B munin_var_lib_t
 .EE
 
 - Set files with the munin_var_lib_t type, if you want to store the munin files under the /var/lib directory.
@@ -181,7 +201,7 @@
 
 .EX
 .PP
-.B munin_var_run_t 
+.B munin_var_run_t
 .EE
 
 - Set files with the munin_var_run_t type, if you want to store the munin files under the /run directory.
@@ -189,51 +209,123 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for munin:
 
 .EX
 .TP 5
-.B munin_port_t 
+.B munin_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 4949
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
-.PP 
-The following process types are defined for munin:
-
-.EX
-.B munin_mail_plugin_t, munin_disk_plugin_t, munin_services_plugin_t, munin_selinux_plugin_t, munin_system_plugin_t, munin_t 
+udp 4949
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type munin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_munin_content_t
+
+	/var/www/html/munin(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B munin_log_t
+
+	/var/log/munin.*
+.br
+
+.br
+.B munin_plugin_state_t
+
+	/var/lib/munin/plugin-state(/.*)?
+.br
+
+.br
+.B munin_tmp_t
+
+
+.br
+.B munin_var_lib_t
+
+	/var/lib/munin(/.*)?
+.br
+
+.br
+.B munin_var_run_t
+
+	/var/run/munin(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -249,11 +341,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), munin(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), munin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, munin_disk_plugin_selinux(8), munin_mail_plugin_selinux(8), munin_selinux_plugin_selinux(8), munin_services_plugin_selinux(8), munin_system_plugin_selinux(8), munin_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/munin_selinux_plugin_selinux.8 serefpolicy-3.7.19/man/man8/munin_selinux_plugin_selinux.8
--- nsaserefpolicy/man/man8/munin_selinux_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/munin_selinux_plugin_selinux.8	2013-03-15 11:40:06.726152015 +0100
@@ -0,0 +1,150 @@
+.TH  "munin_selinux_plugin_selinux"  "8"  "13-01-04" "munin_selinux_plugin" "SELinux Policy documentation for munin_selinux_plugin"
+.SH "NAME"
+munin_selinux_plugin_selinux \- Security Enhanced Linux Policy for the munin_selinux_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the munin_selinux_plugin processes via flexible mandatory access control.
+
+The munin_selinux_plugin processes execute with the munin_selinux_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep munin_selinux_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The munin_selinux_plugin_t SELinux type can be entered via the "munin_selinux_plugin_exec_t" file type.  The default entrypoint paths for the munin_selinux_plugin_t domain are the following:"
+
+/usr/share/munin/plugins/selinux_avcstat
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux munin_selinux_plugin policy is very flexible allowing users to setup their munin_selinux_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for munin_selinux_plugin:
+
+.EX
+.B munin_selinux_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a munin_selinux_plugin_t
+
+can be used to make the process type munin_selinux_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux munin_selinux_plugin policy is very flexible allowing users to setup their munin_selinux_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for munin_selinux_plugin:
+
+
+.EX
+.PP
+.B munin_selinux_plugin_exec_t
+.EE
+
+- Set files with the munin_selinux_plugin_exec_t type, if you want to transition an executable to the munin_selinux_plugin_t domain.
+
+
+.EX
+.PP
+.B munin_selinux_plugin_tmp_t
+.EE
+
+- Set files with the munin_selinux_plugin_tmp_t type, if you want to store munin selinux plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type munin_selinux_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B munin_plugin_state_t
+
+	/var/lib/munin/plugin-state(/.*)?
+.br
+
+.br
+.B munin_selinux_plugin_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), munin_selinux_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, munin_selinux(8), munin_selinux(8), munin_disk_plugin_selinux(8), munin_mail_plugin_selinux(8), munin_services_plugin_selinux(8), munin_system_plugin_selinux(8), munin_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/munin_services_plugin_selinux.8 serefpolicy-3.7.19/man/man8/munin_services_plugin_selinux.8
--- nsaserefpolicy/man/man8/munin_services_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/munin_services_plugin_selinux.8	2013-03-15 11:40:07.021152022 +0100
@@ -0,0 +1,150 @@
+.TH  "munin_services_plugin_selinux"  "8"  "13-01-04" "munin_services_plugin" "SELinux Policy documentation for munin_services_plugin"
+.SH "NAME"
+munin_services_plugin_selinux \- Security Enhanced Linux Policy for the munin_services_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the munin_services_plugin processes via flexible mandatory access control.
+
+The munin_services_plugin processes execute with the munin_services_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep munin_services_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The munin_services_plugin_t SELinux type can be entered via the "munin_services_plugin_exec_t" file type.  The default entrypoint paths for the munin_services_plugin_t domain are the following:"
+
+/usr/share/munin/plugins/nut.*, /usr/share/munin/plugins/ntp_.*, /usr/share/munin/plugins/snmp_.*, /usr/share/munin/plugins/mysql_.*, /usr/share/munin/plugins/slapd_.*, /usr/share/munin/plugins/squid_.*, /usr/share/munin/plugins/apache_.*, /usr/share/munin/plugins/tomcat_.*, /usr/share/munin/plugins/varnish_.*, /usr/share/munin/plugins/asterisk_.*, /usr/share/munin/plugins/postgres_.*, /usr/share/munin/plugins/named, /usr/share/munin/plugins/ping_, /usr/share/munin/plugins/samba, /usr/share/munin/plugins/lpstat, /usr/share/munin/plugins/openvpn, /usr/share/munin/plugins/fail2ban, /usr/share/munin/plugins/http_loadtime
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux munin_services_plugin policy is very flexible allowing users to setup their munin_services_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for munin_services_plugin:
+
+.EX
+.B munin_services_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a munin_services_plugin_t
+
+can be used to make the process type munin_services_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux munin_services_plugin policy is very flexible allowing users to setup their munin_services_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for munin_services_plugin:
+
+
+.EX
+.PP
+.B munin_services_plugin_exec_t
+.EE
+
+- Set files with the munin_services_plugin_exec_t type, if you want to transition an executable to the munin_services_plugin_t domain.
+
+
+.EX
+.PP
+.B munin_services_plugin_tmp_t
+.EE
+
+- Set files with the munin_services_plugin_tmp_t type, if you want to store munin services plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type munin_services_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B munin_plugin_state_t
+
+	/var/lib/munin/plugin-state(/.*)?
+.br
+
+.br
+.B munin_services_plugin_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), munin_services_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, munin_selinux(8), munin_selinux(8), munin_disk_plugin_selinux(8), munin_mail_plugin_selinux(8), munin_selinux_plugin_selinux(8), munin_system_plugin_selinux(8), munin_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/munin_system_plugin_selinux.8 serefpolicy-3.7.19/man/man8/munin_system_plugin_selinux.8
--- nsaserefpolicy/man/man8/munin_system_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/munin_system_plugin_selinux.8	2013-03-15 11:39:54.456151735 +0100
@@ -0,0 +1,156 @@
+.TH  "munin_system_plugin_selinux"  "8"  "13-01-04" "munin_system_plugin" "SELinux Policy documentation for munin_system_plugin"
+.SH "NAME"
+munin_system_plugin_selinux \- Security Enhanced Linux Policy for the munin_system_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the munin_system_plugin processes via flexible mandatory access control.
+
+The munin_system_plugin processes execute with the munin_system_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep munin_system_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The munin_system_plugin_t SELinux type can be entered via the "munin_system_plugin_exec_t" file type.  The default entrypoint paths for the munin_system_plugin_t domain are the following:"
+
+/usr/share/munin/plugins/cpu.*, /usr/share/munin/plugins/if_.*, /usr/share/munin/plugins/nfs.*, /usr/share/munin/plugins/munin_*, /usr/share/munin/plugins/iostat.*, /usr/share/munin/plugins/yum, /usr/share/munin/plugins/acpi, /usr/share/munin/plugins/load, /usr/share/munin/plugins/swap, /usr/share/munin/plugins/forks, /usr/share/munin/plugins/users, /usr/share/munin/plugins/memory, /usr/share/munin/plugins/uptime, /usr/share/munin/plugins/netstat, /usr/share/munin/plugins/threads, /usr/share/munin/plugins/unbound, /usr/share/munin/plugins/irqstats, /usr/share/munin/plugins/proc_pri, /usr/share/munin/plugins/processes, /usr/share/munin/plugins/interrupts, /usr/share/munin/plugins/open_files
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux munin_system_plugin policy is very flexible allowing users to setup their munin_system_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for munin_system_plugin:
+
+.EX
+.B munin_system_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a munin_system_plugin_t
+
+can be used to make the process type munin_system_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux munin_system_plugin policy is very flexible allowing users to setup their munin_system_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for munin_system_plugin:
+
+
+.EX
+.PP
+.B munin_system_plugin_exec_t
+.EE
+
+- Set files with the munin_system_plugin_exec_t type, if you want to transition an executable to the munin_system_plugin_t domain.
+
+
+.EX
+.PP
+.B munin_system_plugin_tmp_t
+.EE
+
+- Set files with the munin_system_plugin_tmp_t type, if you want to store munin system plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type munin_system_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B munin_plugin_state_t
+
+	/var/lib/munin/plugin-state(/.*)?
+.br
+
+.br
+.B munin_system_plugin_tmp_t
+
+
+.br
+.B munin_var_lib_t
+
+	/var/lib/munin(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), munin_system_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, munin_selinux(8), munin_selinux(8), munin_disk_plugin_selinux(8), munin_mail_plugin_selinux(8), munin_selinux_plugin_selinux(8), munin_services_plugin_selinux(8), munin_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/munin_unconfined_plugin_selinux.8 serefpolicy-3.7.19/man/man8/munin_unconfined_plugin_selinux.8
--- nsaserefpolicy/man/man8/munin_unconfined_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/munin_unconfined_plugin_selinux.8	2013-03-15 11:39:57.301151800 +0100
@@ -0,0 +1,104 @@
+.TH  "munin_unconfined_plugin_selinux"  "8"  "13-01-04" "munin_unconfined_plugin" "SELinux Policy documentation for munin_unconfined_plugin"
+.SH "NAME"
+munin_unconfined_plugin_selinux \- Security Enhanced Linux Policy for the munin_unconfined_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the munin_unconfined_plugin processes via flexible mandatory access control.
+
+The munin_unconfined_plugin processes execute with the munin_unconfined_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep munin_unconfined_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The munin_unconfined_plugin_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,munin_unconfined_plugin_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the munin_unconfined_plugin_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/share/munin/plugins/.*, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux munin_unconfined_plugin policy is very flexible allowing users to setup their munin_unconfined_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for munin_unconfined_plugin:
+
+.EX
+.B munin_unconfined_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a munin_unconfined_plugin_t
+
+can be used to make the process type munin_unconfined_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux munin_unconfined_plugin policy is very flexible allowing users to setup their munin_unconfined_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for munin_unconfined_plugin:
+
+
+.EX
+.PP
+.B munin_unconfined_plugin_exec_t
+.EE
+
+- Set files with the munin_unconfined_plugin_exec_t type, if you want to transition an executable to the munin_unconfined_plugin_t domain.
+
+
+.EX
+.PP
+.B munin_unconfined_plugin_tmp_t
+.EE
+
+- Set files with the munin_unconfined_plugin_tmp_t type, if you want to store munin unconfined plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type munin_unconfined_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), munin_unconfined_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, munin_selinux(8), munin_selinux(8), munin_disk_plugin_selinux(8), munin_mail_plugin_selinux(8), munin_selinux_plugin_selinux(8), munin_services_plugin_selinux(8), munin_system_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mysqld_safe_selinux.8 serefpolicy-3.7.19/man/man8/mysqld_safe_selinux.8
--- nsaserefpolicy/man/man8/mysqld_safe_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/mysqld_safe_selinux.8	2013-03-15 11:39:54.161151728 +0100
@@ -0,0 +1,162 @@
+.TH  "mysqld_safe_selinux"  "8"  "13-01-04" "mysqld_safe" "SELinux Policy documentation for mysqld_safe"
+.SH "NAME"
+mysqld_safe_selinux \- Security Enhanced Linux Policy for the mysqld_safe processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the mysqld_safe processes via flexible mandatory access control.
+
+The mysqld_safe processes execute with the mysqld_safe_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep mysqld_safe_t
+
+
+.SH "ENTRYPOINTS"
+
+The mysqld_safe_t SELinux type can be entered via the "mysqld_safe_exec_t" file type.  The default entrypoint paths for the mysqld_safe_t domain are the following:"
+
+/usr/bin/mysqld_safe
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mysqld_safe policy is very flexible allowing users to setup their mysqld_safe processes in as secure a method as possible.
+.PP
+The following process types are defined for mysqld_safe:
+
+.EX
+.B mysqld_safe_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mysqld_safe_t
+
+can be used to make the process type mysqld_safe_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux mysqld_safe policy is very flexible allowing users to setup their mysqld_safe processes in as secure a method as possible.
+.PP
+The following file types are defined for mysqld_safe:
+
+
+.EX
+.PP
+.B mysqld_safe_exec_t
+.EE
+
+- Set files with the mysqld_safe_exec_t type, if you want to transition an executable to the mysqld_safe_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type mysqld_safe_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mysqld_db_t
+
+	/var/lib/mysql(/.*)?
+.br
+	/var/lib/squeezeboxserver(/.*)?
+.br
+
+.br
+.B mysqld_log_t
+
+	/var/log/mysql.*
+.br
+
+.br
+.B mysqld_var_run_t
+
+	/var/run/mysqld(/.*)?
+.br
+	/var/lib/mysql/mysql\.sock
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), mysqld_safe(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, mysqld_selinux(8), mysqld_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mysqld_selinux.8 serefpolicy-3.7.19/man/man8/mysqld_selinux.8
--- nsaserefpolicy/man/man8/mysqld_selinux.8	2013-03-15 11:41:11.946153503 +0100
+++ serefpolicy-3.7.19/man/man8/mysqld_selinux.8	2013-03-15 11:40:00.600151875 +0100
@@ -1,79 +1,111 @@
-.TH  "mysqld_selinux"  "8"  "mysqld" "dwalsh@redhat.com" "mysqld SELinux Policy documentation"
+.TH  "mysqld_selinux"  "8"  "13-01-04" "mysqld" "SELinux Policy documentation for mysqld"
 .SH "NAME"
 mysqld_selinux \- Security Enhanced Linux Policy for the mysqld processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mysqld processes via flexible mandatory access control.
 
+The mysqld processes execute with the mysqld_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep mysqld_t
+
+
+.SH "ENTRYPOINTS"
+
+The mysqld_t SELinux type can be entered via the "mysqld_exec_t" file type.  The default entrypoint paths for the mysqld_t domain are the following:"
+
+/usr/sbin/mysqld(-max)?, /usr/libexec/mysqld
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
+.PP
+The following process types are defined for mysqld:
+
+.EX
+.B mysqld_safe_t, mysqlmanagerd_t, mysqld_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mysqld_t
+
+can be used to make the process type mysqld_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  mysqld policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mysqld with the tightest access possible.
 
 
 .PP
-If you want to allow users to connect to mysq, you must turn on the allow_user_mysql_connect boolean.
+If you want to allow mysqld to connect to all ports, you must turn on the mysql_connect_any boolean.
+
+.EX
+.B setsebool -P mysql_connect_any 1
+.EE
+
+.PP
+If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
 
 .EX
 .B setsebool -P allow_user_mysql_connect 1
 .EE
 
 .PP
-If you want to allow mysqld to connect to all port, you must turn on the mysql_connect_any boolean.
+If you want to allow mysqld to connect to all ports, you must turn on the mysql_connect_any boolean.
 
 .EX
 .B setsebool -P mysql_connect_any 1
 .EE
 
+.PP
+If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mysqld:
 
 
 .EX
 .PP
-.B mysqld_db_t 
+.B mysqld_db_t
 .EE
 
 - Set files with the mysqld_db_t type, if you want to treat the files as mysqld database content.
 
-.br
-.TP 5
-Paths: 
-/var/lib/squeezeboxserver(/.*)?, /var/lib/mysql(/.*)?
 
 .EX
 .PP
-.B mysqld_etc_t 
+.B mysqld_etc_t
 .EE
 
 - Set files with the mysqld_etc_t type, if you want to store mysqld files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/etc/my\.cnf, /etc/mysql(/.*)?
 
 .EX
 .PP
-.B mysqld_exec_t 
+.B mysqld_exec_t
 .EE
 
 - Set files with the mysqld_exec_t type, if you want to transition an executable to the mysqld_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/libexec/mysqld, /usr/sbin/mysqld(-max)?
 
 .EX
 .PP
-.B mysqld_initrc_exec_t 
+.B mysqld_initrc_exec_t
 .EE
 
 - Set files with the mysqld_initrc_exec_t type, if you want to transition an executable to the mysqld_initrc_t domain.
@@ -81,7 +113,7 @@
 
 .EX
 .PP
-.B mysqld_log_t 
+.B mysqld_log_t
 .EE
 
 - Set files with the mysqld_log_t type, if you want to treat the data as mysqld log data, usually stored under the /var/log directory.
@@ -89,7 +121,7 @@
 
 .EX
 .PP
-.B mysqld_safe_exec_t 
+.B mysqld_safe_exec_t
 .EE
 
 - Set files with the mysqld_safe_exec_t type, if you want to transition an executable to the mysqld_safe_t domain.
@@ -97,7 +129,7 @@
 
 .EX
 .PP
-.B mysqld_tmp_t 
+.B mysqld_tmp_t
 .EE
 
 - Set files with the mysqld_tmp_t type, if you want to store mysqld temporary files in the /tmp directories.
@@ -105,74 +137,136 @@
 
 .EX
 .PP
-.B mysqld_var_run_t 
+.B mysqld_var_run_t
 .EE
 
 - Set files with the mysqld_var_run_t type, if you want to store the mysqld files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/mysqld(/.*)?, /var/lib/mysql/mysql\.sock
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for mysqld:
 
 .EX
 .TP 5
-.B mysqld_port_t 
+.B mysqld_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 1186,3306,63132-63164
 .EE
 
 .EX
 .TP 5
-.B mysqlmanagerd_port_t 
+.B mysqlmanagerd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 2273
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
-.PP 
-The following process types are defined for mysqld:
+.SH "MANAGED FILES"
 
-.EX
-.B mysqld_safe_t, mysqlmanagerd_t, mysqld_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mysqld_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B hugetlbfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mysqld_db_t
+
+	/var/lib/mysql(/.*)?
+.br
+	/var/lib/squeezeboxserver(/.*)?
+.br
+
+.br
+.B mysqld_log_t
+
+	/var/log/mysql.*
+.br
+
+.br
+.B mysqld_tmp_t
+
+
+.br
+.B mysqld_var_run_t
+
+	/var/run/mysqld(/.*)?
+.br
+	/var/lib/mysql/mysql\.sock
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -191,12 +285,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mysqld(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), mysqld(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), mysqld_safe_selinux(8), mysqlmanagerd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/mysqlmanagerd_selinux.8 serefpolicy-3.7.19/man/man8/mysqlmanagerd_selinux.8
--- nsaserefpolicy/man/man8/mysqlmanagerd_selinux.8	2013-03-15 11:41:12.030153505 +0100
+++ serefpolicy-3.7.19/man/man8/mysqlmanagerd_selinux.8	2013-03-15 11:40:01.486151895 +0100
@@ -1,25 +1,55 @@
-.TH  "mysqlmanagerd_selinux"  "8"  "mysqlmanagerd" "dwalsh@redhat.com" "mysqlmanagerd SELinux Policy documentation"
+.TH  "mysqlmanagerd_selinux"  "8"  "13-01-04" "mysqlmanagerd" "SELinux Policy documentation for mysqlmanagerd"
 .SH "NAME"
 mysqlmanagerd_selinux \- Security Enhanced Linux Policy for the mysqlmanagerd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the mysqlmanagerd processes via flexible mandatory access control.
 
+The mysqlmanagerd processes execute with the mysqlmanagerd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep mysqlmanagerd_t
+
+
+.SH "ENTRYPOINTS"
+
+The mysqlmanagerd_t SELinux type can be entered via the "mysqlmanagerd_exec_t" file type.  The default entrypoint paths for the mysqlmanagerd_t domain are the following:"
+
+/usr/sbin/mysqlmanager
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
+.PP
+The following process types are defined for mysqlmanagerd:
+
+.EX
+.B mysqlmanagerd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a mysqlmanagerd_t
+
+can be used to make the process type mysqlmanagerd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for mysqlmanagerd:
 
 
 .EX
 .PP
-.B mysqlmanagerd_exec_t 
+.B mysqlmanagerd_exec_t
 .EE
 
 - Set files with the mysqlmanagerd_exec_t type, if you want to transition an executable to the mysqlmanagerd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B mysqlmanagerd_initrc_exec_t 
+.B mysqlmanagerd_initrc_exec_t
 .EE
 
 - Set files with the mysqlmanagerd_initrc_exec_t type, if you want to transition an executable to the mysqlmanagerd_initrc_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B mysqlmanagerd_var_run_t 
+.B mysqlmanagerd_var_run_t
 .EE
 
 - Set files with the mysqlmanagerd_var_run_t type, if you want to store the mysqlmanagerd files under the /run directory.
@@ -43,51 +73,93 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for mysqlmanagerd:
 
 .EX
 .TP 5
-.B mysqlmanagerd_port_t 
+.B mysqlmanagerd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 2273
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
-.PP 
-The following process types are defined for mysqlmanagerd:
+.SH "MANAGED FILES"
 
-.EX
-.B mysqlmanagerd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type mysqlmanagerd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mysqlmanagerd_var_run_t
+
+	/var/run/mysqld/mysqlmanager.*
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,11 +175,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), mysqlmanagerd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), mysqlmanagerd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/nagios_admin_plugin_selinux.8 serefpolicy-3.7.19/man/man8/nagios_admin_plugin_selinux.8
--- nsaserefpolicy/man/man8/nagios_admin_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nagios_admin_plugin_selinux.8	2013-03-15 11:40:02.003151907 +0100
@@ -0,0 +1,132 @@
+.TH  "nagios_admin_plugin_selinux"  "8"  "13-01-04" "nagios_admin_plugin" "SELinux Policy documentation for nagios_admin_plugin"
+.SH "NAME"
+nagios_admin_plugin_selinux \- Security Enhanced Linux Policy for the nagios_admin_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nagios_admin_plugin processes via flexible mandatory access control.
+
+The nagios_admin_plugin processes execute with the nagios_admin_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nagios_admin_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The nagios_admin_plugin_t SELinux type can be entered via the "nagios_admin_plugin_exec_t" file type.  The default entrypoint paths for the nagios_admin_plugin_t domain are the following:"
+
+/usr/lib(64)?/nagios/plugins/check_file_age
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nagios_admin_plugin policy is very flexible allowing users to setup their nagios_admin_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for nagios_admin_plugin:
+
+.EX
+.B nagios_admin_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nagios_admin_plugin_t
+
+can be used to make the process type nagios_admin_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nagios_admin_plugin policy is very flexible allowing users to setup their nagios_admin_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for nagios_admin_plugin:
+
+
+.EX
+.PP
+.B nagios_admin_plugin_exec_t
+.EE
+
+- Set files with the nagios_admin_plugin_exec_t type, if you want to transition an executable to the nagios_admin_plugin_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nagios_admin_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nagios_admin_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nagios_selinux(8), nagios_selinux(8), nagios_checkdisk_plugin_selinux(8), nagios_eventhandler_plugin_selinux(8), nagios_mail_plugin_selinux(8), nagios_services_plugin_selinux(8), nagios_system_plugin_selinux(8), nagios_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nagios_checkdisk_plugin_selinux.8 serefpolicy-3.7.19/man/man8/nagios_checkdisk_plugin_selinux.8
--- nsaserefpolicy/man/man8/nagios_checkdisk_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nagios_checkdisk_plugin_selinux.8	2013-03-15 11:39:55.333151755 +0100
@@ -0,0 +1,132 @@
+.TH  "nagios_checkdisk_plugin_selinux"  "8"  "13-01-04" "nagios_checkdisk_plugin" "SELinux Policy documentation for nagios_checkdisk_plugin"
+.SH "NAME"
+nagios_checkdisk_plugin_selinux \- Security Enhanced Linux Policy for the nagios_checkdisk_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nagios_checkdisk_plugin processes via flexible mandatory access control.
+
+The nagios_checkdisk_plugin processes execute with the nagios_checkdisk_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nagios_checkdisk_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The nagios_checkdisk_plugin_t SELinux type can be entered via the "nagios_checkdisk_plugin_exec_t" file type.  The default entrypoint paths for the nagios_checkdisk_plugin_t domain are the following:"
+
+/usr/lib(64)?/nagios/plugins/check_disk, /usr/lib(64)?/nagios/plugins/check_disk_smb, /usr/lib(64)?/nagios/plugins/check_ide_smart, /usr/lib(64)?/nagios/plugins/check_linux_raid
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nagios_checkdisk_plugin policy is very flexible allowing users to setup their nagios_checkdisk_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for nagios_checkdisk_plugin:
+
+.EX
+.B nagios_checkdisk_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nagios_checkdisk_plugin_t
+
+can be used to make the process type nagios_checkdisk_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nagios_checkdisk_plugin policy is very flexible allowing users to setup their nagios_checkdisk_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for nagios_checkdisk_plugin:
+
+
+.EX
+.PP
+.B nagios_checkdisk_plugin_exec_t
+.EE
+
+- Set files with the nagios_checkdisk_plugin_exec_t type, if you want to transition an executable to the nagios_checkdisk_plugin_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nagios_checkdisk_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nagios_checkdisk_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nagios_selinux(8), nagios_selinux(8), nagios_admin_plugin_selinux(8), nagios_eventhandler_plugin_selinux(8), nagios_mail_plugin_selinux(8), nagios_services_plugin_selinux(8), nagios_system_plugin_selinux(8), nagios_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nagios_eventhandler_plugin_selinux.8 serefpolicy-3.7.19/man/man8/nagios_eventhandler_plugin_selinux.8
--- nsaserefpolicy/man/man8/nagios_eventhandler_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nagios_eventhandler_plugin_selinux.8	2013-03-15 11:40:06.770152016 +0100
@@ -0,0 +1,104 @@
+.TH  "nagios_eventhandler_plugin_selinux"  "8"  "13-01-04" "nagios_eventhandler_plugin" "SELinux Policy documentation for nagios_eventhandler_plugin"
+.SH "NAME"
+nagios_eventhandler_plugin_selinux \- Security Enhanced Linux Policy for the nagios_eventhandler_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nagios_eventhandler_plugin processes via flexible mandatory access control.
+
+The nagios_eventhandler_plugin processes execute with the nagios_eventhandler_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nagios_eventhandler_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The nagios_eventhandler_plugin_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,nagios_eventhandler_plugin_exec_t,file_type" file types.  The default entrypoint paths for the nagios_eventhandler_plugin_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/lib(64)?/nagios/plugins/eventhandlers(/.*)?, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nagios_eventhandler_plugin policy is very flexible allowing users to setup their nagios_eventhandler_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for nagios_eventhandler_plugin:
+
+.EX
+.B nagios_eventhandler_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nagios_eventhandler_plugin_t
+
+can be used to make the process type nagios_eventhandler_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nagios_eventhandler_plugin policy is very flexible allowing users to setup their nagios_eventhandler_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for nagios_eventhandler_plugin:
+
+
+.EX
+.PP
+.B nagios_eventhandler_plugin_exec_t
+.EE
+
+- Set files with the nagios_eventhandler_plugin_exec_t type, if you want to transition an executable to the nagios_eventhandler_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_eventhandler_plugin_tmp_t
+.EE
+
+- Set files with the nagios_eventhandler_plugin_tmp_t type, if you want to store nagios eventhandler plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nagios_eventhandler_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nagios_eventhandler_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nagios_selinux(8), nagios_selinux(8), nagios_admin_plugin_selinux(8), nagios_checkdisk_plugin_selinux(8), nagios_mail_plugin_selinux(8), nagios_services_plugin_selinux(8), nagios_system_plugin_selinux(8), nagios_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nagios_mail_plugin_selinux.8 serefpolicy-3.7.19/man/man8/nagios_mail_plugin_selinux.8
--- nsaserefpolicy/man/man8/nagios_mail_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nagios_mail_plugin_selinux.8	2013-03-15 11:39:55.145151751 +0100
@@ -0,0 +1,132 @@
+.TH  "nagios_mail_plugin_selinux"  "8"  "13-01-04" "nagios_mail_plugin" "SELinux Policy documentation for nagios_mail_plugin"
+.SH "NAME"
+nagios_mail_plugin_selinux \- Security Enhanced Linux Policy for the nagios_mail_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nagios_mail_plugin processes via flexible mandatory access control.
+
+The nagios_mail_plugin processes execute with the nagios_mail_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nagios_mail_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The nagios_mail_plugin_t SELinux type can be entered via the "nagios_mail_plugin_exec_t" file type.  The default entrypoint paths for the nagios_mail_plugin_t domain are the following:"
+
+/usr/lib(64)?/nagios/plugins/check_mailq
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nagios_mail_plugin policy is very flexible allowing users to setup their nagios_mail_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for nagios_mail_plugin:
+
+.EX
+.B nagios_mail_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nagios_mail_plugin_t
+
+can be used to make the process type nagios_mail_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nagios_mail_plugin policy is very flexible allowing users to setup their nagios_mail_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for nagios_mail_plugin:
+
+
+.EX
+.PP
+.B nagios_mail_plugin_exec_t
+.EE
+
+- Set files with the nagios_mail_plugin_exec_t type, if you want to transition an executable to the nagios_mail_plugin_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nagios_mail_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nagios_mail_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nagios_selinux(8), nagios_selinux(8), nagios_admin_plugin_selinux(8), nagios_checkdisk_plugin_selinux(8), nagios_eventhandler_plugin_selinux(8), nagios_services_plugin_selinux(8), nagios_system_plugin_selinux(8), nagios_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nagios_selinux.8 serefpolicy-3.7.19/man/man8/nagios_selinux.8
--- nsaserefpolicy/man/man8/nagios_selinux.8	2013-03-15 11:41:12.108153507 +0100
+++ serefpolicy-3.7.19/man/man8/nagios_selinux.8	2013-03-15 11:40:03.510151942 +0100
@@ -1,31 +1,55 @@
-.TH  "nagios_selinux"  "8"  "nagios" "dwalsh@redhat.com" "nagios SELinux Policy documentation"
+.TH  "nagios_selinux"  "8"  "13-01-04" "nagios" "SELinux Policy documentation for nagios"
 .SH "NAME"
 nagios_selinux \- Security Enhanced Linux Policy for the nagios processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the nagios processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B nagios
-(Net Saint / NAGIOS - network monitoring server)
-processes via flexible mandatory access
-control.  
+The nagios processes execute with the nagios_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep nagios_t
+
+
+.SH "ENTRYPOINTS"
+
+The nagios_t SELinux type can be entered via the "nagios_exec_t" file type.  The default entrypoint paths for the nagios_t domain are the following:"
+
+/usr/s?bin/nagios
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nagios policy is very flexible allowing users to setup their nagios processes in as secure a method as possible.
+.PP
+The following process types are defined for nagios:
+
+.EX
+.B nagios_t, nagios_mail_plugin_t, nagios_checkdisk_plugin_t, nagios_services_plugin_t, nagios_eventhandler_plugin_t, nagios_system_plugin_t, nagios_unconfined_plugin_t, nagios_admin_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nagios_t
+
+can be used to make the process type nagios_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux nagios policy is very flexible allowing users to setup their nagios processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for nagios:
 
 
 .EX
 .PP
-.B nagios_admin_plugin_exec_t 
+.B nagios_admin_plugin_exec_t
 .EE
 
 - Set files with the nagios_admin_plugin_exec_t type, if you want to transition an executable to the nagios_admin_plugin_t domain.
@@ -33,19 +57,15 @@
 
 .EX
 .PP
-.B nagios_checkdisk_plugin_exec_t 
+.B nagios_checkdisk_plugin_exec_t
 .EE
 
 - Set files with the nagios_checkdisk_plugin_exec_t type, if you want to transition an executable to the nagios_checkdisk_plugin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/nagios/plugins/check_disk, /usr/lib(64)?/nagios/plugins/check_ide_smart, /usr/lib(64)?/nagios/plugins/check_disk_smb, /usr/lib(64)?/nagios/plugins/check_linux_raid
 
 .EX
 .PP
-.B nagios_etc_t 
+.B nagios_etc_t
 .EE
 
 - Set files with the nagios_etc_t type, if you want to store nagios files in the /etc directories.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B nagios_eventhandler_plugin_exec_t 
+.B nagios_eventhandler_plugin_exec_t
 .EE
 
 - Set files with the nagios_eventhandler_plugin_exec_t type, if you want to transition an executable to the nagios_eventhandler_plugin_t domain.
@@ -61,7 +81,15 @@
 
 .EX
 .PP
-.B nagios_exec_t 
+.B nagios_eventhandler_plugin_tmp_t
+.EE
+
+- Set files with the nagios_eventhandler_plugin_tmp_t type, if you want to store nagios eventhandler plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nagios_exec_t
 .EE
 
 - Set files with the nagios_exec_t type, if you want to transition an executable to the nagios_t domain.
@@ -69,31 +97,23 @@
 
 .EX
 .PP
-.B nagios_initrc_exec_t 
+.B nagios_initrc_exec_t
 .EE
 
 - Set files with the nagios_initrc_exec_t type, if you want to transition an executable to the nagios_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/nagios, /etc/rc\.d/init\.d/nrpe
 
 .EX
 .PP
-.B nagios_log_t 
+.B nagios_log_t
 .EE
 
 - Set files with the nagios_log_t type, if you want to treat the data as nagios log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/netsaint(/.*)?, /var/log/nagios(/.*)?
 
 .EX
 .PP
-.B nagios_mail_plugin_exec_t 
+.B nagios_mail_plugin_exec_t
 .EE
 
 - Set files with the nagios_mail_plugin_exec_t type, if you want to transition an executable to the nagios_mail_plugin_t domain.
@@ -101,19 +121,15 @@
 
 .EX
 .PP
-.B nagios_services_plugin_exec_t 
+.B nagios_services_plugin_exec_t
 .EE
 
 - Set files with the nagios_services_plugin_exec_t type, if you want to transition an executable to the nagios_services_plugin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/nagios/plugins/check_smtp, /usr/lib(64)?/nagios/plugins/check_breeze, /usr/lib(64)?/nagios/plugins/check_ups, /usr/lib(64)?/nagios/plugins/check_pgsql, /usr/lib(64)?/nagios/plugins/check_ntp.*, /usr/lib(64)?/nagios/plugins/check_ssh, /usr/lib(64)?/nagios/plugins/check_mysql_query, /usr/lib(64)?/nagios/plugins/check_nrpe, /usr/lib(64)?/nagios/plugins/check_ping, /usr/lib(64)?/nagios/plugins/check_ircd, /usr/lib(64)?/nagios/plugins/check_cluster, /usr/lib(64)?/nagios/plugins/check_tcp, /usr/lib(64)?/nagios/plugins/check_real, /usr/lib(64)?/nagios/plugins/check_dhcp, /usr/lib(64)?/nagios/plugins/check_ldap, /usr/lib(64)?/nagios/plugins/check_sip, /usr/lib(64)?/nagios/plugins/check_mysql, /usr/lib(64)?/nagios/plugins/check_rpc, /usr/lib(64)?/nagios/plugins/check_fping, /usr/lib(64)?/nagios/plugins/check_http, /usr/lib(64)?/nagios/plugins/check_dig, /usr/lib(64)?/nagios/plugins/check_game, /usr/lib(64)?/nagios/plugins/check_time, /usr/lib(64)?/nagios/plugins/check_radius, /usr/lib(64)?/nagios/plugins/check_hpjd, /usr/lib(64)?/nagios/plugins/check_dns, /usr/lib(64)?/nagios/plugins/check_icmp, /usr/lib(64)?/nagios/plugins/check_snmp.*, /usr/lib(64)?/nagios/plugins/check_nt, /usr/lib(64)?/nagios/plugins/check_dummy, /usr/lib(64)?/nagios/plugins/check_oracle
 
 .EX
 .PP
-.B nagios_spool_t 
+.B nagios_spool_t
 .EE
 
 - Set files with the nagios_spool_t type, if you want to store the nagios files under the /var/spool directory.
@@ -121,19 +137,15 @@
 
 .EX
 .PP
-.B nagios_system_plugin_exec_t 
+.B nagios_system_plugin_exec_t
 .EE
 
 - Set files with the nagios_system_plugin_exec_t type, if you want to transition an executable to the nagios_system_plugin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/nagios/plugins/check_flexlm, /usr/lib(64)?/nagios/plugins/check_wave, /usr/lib(64)?/nagios/plugins/check_nagios, /usr/lib(64)?/nagios/plugins/check_mrtgtraf, /usr/lib(64)?/nagios/plugins/check_overcr, /usr/lib(64)?/nagios/plugins/check_procs, /usr/lib(64)?/nagios/plugins/check_log, /usr/lib(64)?/nagios/plugins/check_users, /usr/lib(64)?/nagios/plugins/check_nwstat, /usr/lib(64)?/nagios/plugins/check_load, /usr/lib(64)?/nagios/plugins/check_ifoperstatus, /usr/lib(64)?/nagios/plugins/check_mrtg, /usr/lib(64)?/nagios/plugins/check_swap, /usr/lib(64)?/nagios/plugins/check_sensors, /usr/lib(64)?/nagios/plugins/check_ifstatus
 
 .EX
 .PP
-.B nagios_system_plugin_tmp_t 
+.B nagios_system_plugin_tmp_t
 .EE
 
 - Set files with the nagios_system_plugin_tmp_t type, if you want to store nagios system plugin temporary files in the /tmp directories.
@@ -141,7 +153,7 @@
 
 .EX
 .PP
-.B nagios_tmp_t 
+.B nagios_tmp_t
 .EE
 
 - Set files with the nagios_tmp_t type, if you want to store nagios temporary files in the /tmp directories.
@@ -149,7 +161,7 @@
 
 .EX
 .PP
-.B nagios_unconfined_plugin_exec_t 
+.B nagios_unconfined_plugin_exec_t
 .EE
 
 - Set files with the nagios_unconfined_plugin_exec_t type, if you want to transition an executable to the nagios_unconfined_plugin_t domain.
@@ -157,7 +169,7 @@
 
 .EX
 .PP
-.B nagios_var_run_t 
+.B nagios_var_run_t
 .EE
 
 - Set files with the nagios_var_run_t type, if you want to store the nagios files under the /run directory.
@@ -165,28 +177,82 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux nagios policy is very flexible allowing users to setup their nagios processes in as secure a method as possible.
-.PP 
-The following process types are defined for nagios:
+.SH "MANAGED FILES"
 
-.EX
-.B nagios_t, nagios_mail_plugin_t, nagios_checkdisk_plugin_t, nagios_services_plugin_t, nagios_eventhandler_plugin_t, nagios_system_plugin_t, nagios_unconfined_plugin_t, nagios_admin_plugin_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type nagios_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nagios_log_t
+
+	/var/log/nagios(/.*)?
+.br
+	/var/log/netsaint(/.*)?
+.br
+
+.br
+.B nagios_tmp_t
+
+
+.br
+.B nagios_var_run_t
+
+	/var/run/nagios.*
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -199,11 +265,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), nagios(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), nagios(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nagios_admin_plugin_selinux(8), nagios_checkdisk_plugin_selinux(8), nagios_eventhandler_plugin_selinux(8), nagios_mail_plugin_selinux(8), nagios_services_plugin_selinux(8), nagios_system_plugin_selinux(8), nagios_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nagios_services_plugin_selinux.8 serefpolicy-3.7.19/man/man8/nagios_services_plugin_selinux.8
--- nsaserefpolicy/man/man8/nagios_services_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nagios_services_plugin_selinux.8	2013-03-15 11:40:06.868152018 +0100
@@ -0,0 +1,132 @@
+.TH  "nagios_services_plugin_selinux"  "8"  "13-01-04" "nagios_services_plugin" "SELinux Policy documentation for nagios_services_plugin"
+.SH "NAME"
+nagios_services_plugin_selinux \- Security Enhanced Linux Policy for the nagios_services_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nagios_services_plugin processes via flexible mandatory access control.
+
+The nagios_services_plugin processes execute with the nagios_services_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nagios_services_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The nagios_services_plugin_t SELinux type can be entered via the "nagios_services_plugin_exec_t" file type.  The default entrypoint paths for the nagios_services_plugin_t domain are the following:"
+
+/usr/lib(64)?/nagios/plugins/check_nt, /usr/lib(64)?/nagios/plugins/check_dig, /usr/lib(64)?/nagios/plugins/check_dns, /usr/lib(64)?/nagios/plugins/check_rpc, /usr/lib(64)?/nagios/plugins/check_tcp, /usr/lib(64)?/nagios/plugins/check_sip, /usr/lib(64)?/nagios/plugins/check_ssh, /usr/lib(64)?/nagios/plugins/check_ups, /usr/lib(64)?/nagios/plugins/check_dhcp, /usr/lib(64)?/nagios/plugins/check_game, /usr/lib(64)?/nagios/plugins/check_hpjd, /usr/lib(64)?/nagios/plugins/check_http, /usr/lib(64)?/nagios/plugins/check_icmp, /usr/lib(64)?/nagios/plugins/check_ircd, /usr/lib(64)?/nagios/plugins/check_ldap, /usr/lib(64)?/nagios/plugins/check_nrpe, /usr/lib(64)?/nagios/plugins/check_ping, /usr/lib(64)?/nagios/plugins/check_real, /usr/lib(64)?/nagios/plugins/check_time, /usr/lib(64)?/nagios/plugins/check_smtp, /usr/lib(64)?/nagios/plugins/check_dummy, /usr/lib(64)?/nagios/plugins/check_fping, /usr/lib(64)?/nagios/plugins/check_mysql, /usr/lib(64)?/nagios/plugins/check_ntp.*, /usr/lib(64)?/nagios/plugins/check_pgsql, /usr/lib(64)?/nagios/plugins/check_breeze, /usr/lib(64)?/nagios/plugins/check_oracle, /usr/lib(64)?/nagios/plugins/check_radius, /usr/lib(64)?/nagios/plugins/check_snmp.*, /usr/lib(64)?/nagios/plugins/check_cluster, /usr/lib(64)?/nagios/plugins/check_mysql_query
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nagios_services_plugin policy is very flexible allowing users to setup their nagios_services_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for nagios_services_plugin:
+
+.EX
+.B nagios_services_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nagios_services_plugin_t
+
+can be used to make the process type nagios_services_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nagios_services_plugin policy is very flexible allowing users to setup their nagios_services_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for nagios_services_plugin:
+
+
+.EX
+.PP
+.B nagios_services_plugin_exec_t
+.EE
+
+- Set files with the nagios_services_plugin_exec_t type, if you want to transition an executable to the nagios_services_plugin_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nagios_services_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nagios_services_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nagios_selinux(8), nagios_selinux(8), nagios_admin_plugin_selinux(8), nagios_checkdisk_plugin_selinux(8), nagios_eventhandler_plugin_selinux(8), nagios_mail_plugin_selinux(8), nagios_system_plugin_selinux(8), nagios_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nagios_system_plugin_selinux.8 serefpolicy-3.7.19/man/man8/nagios_system_plugin_selinux.8
--- nsaserefpolicy/man/man8/nagios_system_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nagios_system_plugin_selinux.8	2013-03-15 11:40:05.132151979 +0100
@@ -0,0 +1,148 @@
+.TH  "nagios_system_plugin_selinux"  "8"  "13-01-04" "nagios_system_plugin" "SELinux Policy documentation for nagios_system_plugin"
+.SH "NAME"
+nagios_system_plugin_selinux \- Security Enhanced Linux Policy for the nagios_system_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nagios_system_plugin processes via flexible mandatory access control.
+
+The nagios_system_plugin processes execute with the nagios_system_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nagios_system_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The nagios_system_plugin_t SELinux type can be entered via the "nagios_system_plugin_exec_t" file type.  The default entrypoint paths for the nagios_system_plugin_t domain are the following:"
+
+/usr/lib(64)?/nagios/plugins/check_log, /usr/lib(64)?/nagios/plugins/check_load, /usr/lib(64)?/nagios/plugins/check_mrtg, /usr/lib(64)?/nagios/plugins/check_swap, /usr/lib(64)?/nagios/plugins/check_wave, /usr/lib(64)?/nagios/plugins/check_procs, /usr/lib(64)?/nagios/plugins/check_users, /usr/lib(64)?/nagios/plugins/check_flexlm, /usr/lib(64)?/nagios/plugins/check_nagios, /usr/lib(64)?/nagios/plugins/check_nwstat, /usr/lib(64)?/nagios/plugins/check_overcr, /usr/lib(64)?/nagios/plugins/check_sensors, /usr/lib(64)?/nagios/plugins/check_ifstatus, /usr/lib(64)?/nagios/plugins/check_mrtgtraf, /usr/lib(64)?/nagios/plugins/check_ifoperstatus
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nagios_system_plugin policy is very flexible allowing users to setup their nagios_system_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for nagios_system_plugin:
+
+.EX
+.B nagios_system_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nagios_system_plugin_t
+
+can be used to make the process type nagios_system_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nagios_system_plugin policy is very flexible allowing users to setup their nagios_system_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for nagios_system_plugin:
+
+
+.EX
+.PP
+.B nagios_system_plugin_exec_t
+.EE
+
+- Set files with the nagios_system_plugin_exec_t type, if you want to transition an executable to the nagios_system_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_system_plugin_tmp_t
+.EE
+
+- Set files with the nagios_system_plugin_tmp_t type, if you want to store nagios system plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nagios_system_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nagios_eventhandler_plugin_tmp_t
+
+
+.br
+.B nagios_system_plugin_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nagios_system_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nagios_selinux(8), nagios_selinux(8), nagios_admin_plugin_selinux(8), nagios_checkdisk_plugin_selinux(8), nagios_eventhandler_plugin_selinux(8), nagios_mail_plugin_selinux(8), nagios_services_plugin_selinux(8), nagios_unconfined_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nagios_unconfined_plugin_selinux.8 serefpolicy-3.7.19/man/man8/nagios_unconfined_plugin_selinux.8
--- nsaserefpolicy/man/man8/nagios_unconfined_plugin_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nagios_unconfined_plugin_selinux.8	2013-03-15 11:40:06.091152000 +0100
@@ -0,0 +1,96 @@
+.TH  "nagios_unconfined_plugin_selinux"  "8"  "13-01-04" "nagios_unconfined_plugin" "SELinux Policy documentation for nagios_unconfined_plugin"
+.SH "NAME"
+nagios_unconfined_plugin_selinux \- Security Enhanced Linux Policy for the nagios_unconfined_plugin processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nagios_unconfined_plugin processes via flexible mandatory access control.
+
+The nagios_unconfined_plugin processes execute with the nagios_unconfined_plugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nagios_unconfined_plugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The nagios_unconfined_plugin_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,nagios_unconfined_plugin_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the nagios_unconfined_plugin_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/lib(64)?/nagios/plugins/check_by_ssh, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nagios_unconfined_plugin policy is very flexible allowing users to setup their nagios_unconfined_plugin processes in as secure a method as possible.
+.PP
+The following process types are defined for nagios_unconfined_plugin:
+
+.EX
+.B nagios_unconfined_plugin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nagios_unconfined_plugin_t
+
+can be used to make the process type nagios_unconfined_plugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nagios_unconfined_plugin policy is very flexible allowing users to setup their nagios_unconfined_plugin processes in as secure a method as possible.
+.PP
+The following file types are defined for nagios_unconfined_plugin:
+
+
+.EX
+.PP
+.B nagios_unconfined_plugin_exec_t
+.EE
+
+- Set files with the nagios_unconfined_plugin_exec_t type, if you want to transition an executable to the nagios_unconfined_plugin_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nagios_unconfined_plugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nagios_unconfined_plugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nagios_selinux(8), nagios_selinux(8), nagios_admin_plugin_selinux(8), nagios_checkdisk_plugin_selinux(8), nagios_eventhandler_plugin_selinux(8), nagios_mail_plugin_selinux(8), nagios_services_plugin_selinux(8), nagios_system_plugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/named_selinux.8 serefpolicy-3.7.19/man/man8/named_selinux.8
--- nsaserefpolicy/man/man8/named_selinux.8	2013-03-15 11:41:12.159153508 +0100
+++ serefpolicy-3.7.19/man/man8/named_selinux.8	2013-03-15 11:40:04.341151961 +0100
@@ -1,16 +1,40 @@
-.TH  "named_selinux"  "8"  "named" "dwalsh@redhat.com" "named SELinux Policy documentation"
+.TH  "named_selinux"  "8"  "13-01-04" "named" "SELinux Policy documentation for named"
 .SH "NAME"
 named_selinux \- Security Enhanced Linux Policy for the named processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the named processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B named
-(Berkeley internet name domain DNS server)
-processes via flexible mandatory access
-control.  
+The named processes execute with the named_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep named_t
+
+
+.SH "ENTRYPOINTS"
+
+The named_t SELinux type can be entered via the "named_checkconf_exec_t,named_exec_t" file types.  The default entrypoint paths for the named_t domain are the following:"
+
+/usr/sbin/named-checkconf, /usr/sbin/named, /usr/sbin/lwresd, /usr/sbin/unbound
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux named policy is very flexible allowing users to setup their named processes in as secure a method as possible.
+.PP
+The following process types are defined for named:
+
+.EX
+.B named_t, namespace_init_t
+.EE
+.PP
+Note:
+.B semanage permissive -a named_t
+
+can be used to make the process type named_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  named policy is extremely flexible and has several booleans that allow you to manipulate the policy and run named with the tightest access possible.
@@ -23,32 +47,84 @@
 .B setsebool -P named_write_master_zones 1
 .EE
 
+.PP
+If you want to allow BIND to bind apache port, you must turn on the named_bind_http_port boolean.
+
+.EX
+.B setsebool -P named_bind_http_port 1
+.EE
+
+.PP
+If you want to allow BIND to bind apache port, you must turn on the named_bind_http_port boolean.
+
+.EX
+.B setsebool -P named_bind_http_port 1
+.EE
+
+.PP
+If you want to allow Git daemon session to bind tcp sockets to all unreserved ports, you must turn on the git_session_bind_all_unreserved_ports boolean.
+
+.EX
+.B setsebool -P git_session_bind_all_unreserved_ports 1
+.EE
+
+.PP
+If you want to allow system to run with NIS, you must turn on the allow_ypbind boolean.
+
+.EX
+.B setsebool -P allow_ypbind 1
+.EE
+
+.PP
+If you want to allow Apache to use mod_auth_ntlm_winbind, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_ntlm_winbind 1
+.EE
+
+.PP
+If you want to allow tor daemon to bind tcp sockets to all unreserved ports, you must turn on the tor_bind_all_unreserved_ports boolean.
+
+.EX
+.B setsebool -P tor_bind_all_unreserved_ports 1
+.EE
+
+.PP
+If you want to allow BIND to write the master zone files. Generally this is used for dynamic DNS or zone transfers, you must turn on the named_write_master_zones boolean.
+
+.EX
+.B setsebool -P named_write_master_zones 1
+.EE
+
+.PP
+If you want to allow BIND to bind apache port, you must turn on the named_bind_http_port boolean.
+
+.EX
+.B setsebool -P named_bind_http_port 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux named policy is very flexible allowing users to setup their named processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for named:
 
 
 .EX
 .PP
-.B named_cache_t 
+.B named_cache_t
 .EE
 
 - Set files with the named_cache_t type, if you want to store the files under the /var/cache directory.
 
-.br
-.TP 5
-Paths: 
-/var/named/slaves(/.*)?, /var/named/chroot/var/named/data(/.*)?, /var/named/chroot/var/tmp(/.*)?, /var/named/data(/.*)?, /var/named/chroot/var/named/slaves(/.*)?, /var/named/dynamic(/.*)?, /var/named/chroot/var/named/dynamic(/.*)?
 
 .EX
 .PP
-.B named_checkconf_exec_t 
+.B named_checkconf_exec_t
 .EE
 
 - Set files with the named_checkconf_exec_t type, if you want to transition an executable to the named_checkconf_t domain.
@@ -56,43 +132,31 @@
 
 .EX
 .PP
-.B named_conf_t 
+.B named_conf_t
 .EE
 
 - Set files with the named_conf_t type, if you want to treat the files as named configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/var/named/chroot/etc/named\.root\.hints, /var/named/chroot(/.*)?, /var/named/named\.ca, /etc/unbound(/.*)?, /var/named/chroot/etc/named\.caching-nameserver\.conf, /etc/named\.root\.hints, /var/named/chroot/etc/named\.rfc1912.zones, /etc/named\.rfc1912.zones, /etc/named\.caching-nameserver\.conf, /etc/named\.conf, /var/named/chroot/var/named/named\.ca, /var/named/chroot/etc/named\.conf, /etc/rndc.*
 
 .EX
 .PP
-.B named_exec_t 
+.B named_exec_t
 .EE
 
 - Set files with the named_exec_t type, if you want to transition an executable to the named_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/unbound, /usr/sbin/named, /usr/sbin/lwresd
 
 .EX
 .PP
-.B named_initrc_exec_t 
+.B named_initrc_exec_t
 .EE
 
 - Set files with the named_initrc_exec_t type, if you want to transition an executable to the named_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/named, /etc/rc\.d/init\.d/unbound
 
 .EX
 .PP
-.B named_keytab_t 
+.B named_keytab_t
 .EE
 
 - Set files with the named_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -100,19 +164,15 @@
 
 .EX
 .PP
-.B named_log_t 
+.B named_log_t
 .EE
 
 - Set files with the named_log_t type, if you want to treat the data as named log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/named.*, /var/named/chroot/var/log/named.*
 
 .EX
 .PP
-.B named_tmp_t 
+.B named_tmp_t
 .EE
 
 - Set files with the named_tmp_t type, if you want to store named temporary files in the /tmp directories.
@@ -120,52 +180,126 @@
 
 .EX
 .PP
-.B named_var_run_t 
+.B named_var_run_t
 .EE
 
 - Set files with the named_var_run_t type, if you want to store the named files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/named/chroot/var/run/named.*, /var/run/ndc, /var/run/bind(/.*)?, /var/run/named(/.*)?, /var/run/unbound(/.*)?
 
 .EX
 .PP
-.B named_zone_t 
+.B named_zone_t
 .EE
 
 - Set files with the named_zone_t type, if you want to treat the files as named zone data.
 
-.br
-.TP 5
-Paths: 
-/var/named/chroot/var/named(/.*)?, /var/named(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux named policy is very flexible allowing users to setup their named processes in as secure a method as possible.
-.PP 
-The following process types are defined for named:
+.SH "MANAGED FILES"
 
-.EX
-.B named_t, namespace_init_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type named_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B named_cache_t
+
+	/var/named/data(/.*)?
+.br
+	/var/named/slaves(/.*)?
+.br
+	/var/named/dynamic(/.*)?
+.br
+	/var/named/chroot/var/tmp(/.*)?
+.br
+	/var/named/chroot/var/named/data(/.*)?
+.br
+	/var/named/chroot/var/named/slaves(/.*)?
+.br
+	/var/named/chroot/var/named/dynamic(/.*)?
+.br
+
+.br
+.B named_log_t
+
+	/var/log/named.*
+.br
+	/var/named/chroot/var/log/named.*
+.br
+
+.br
+.B named_tmp_t
+
+	/var/tmp/DNS_25
+.br
+
+.br
+.B named_var_run_t
+
+	/var/run/bind(/.*)?
+.br
+	/var/run/named(/.*)?
+.br
+	/var/run/unbound(/.*)?
+.br
+	/var/named/chroot/var/run/named.*
+.br
+	/var/run/ndc
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -181,12 +315,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), named(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), named(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), namespace_init_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/namespace_init_selinux.8 serefpolicy-3.7.19/man/man8/namespace_init_selinux.8
--- nsaserefpolicy/man/man8/namespace_init_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/namespace_init_selinux.8	2013-03-15 11:40:02.659151922 +0100
@@ -0,0 +1,141 @@
+.TH  "namespace_init_selinux"  "8"  "13-01-04" "namespace_init" "SELinux Policy documentation for namespace_init"
+.SH "NAME"
+namespace_init_selinux \- Security Enhanced Linux Policy for the namespace_init processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the namespace_init processes via flexible mandatory access control.
+
+The namespace_init processes execute with the namespace_init_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep namespace_init_t
+
+
+.SH "ENTRYPOINTS"
+
+The namespace_init_t SELinux type can be entered via the "namespace_init_exec_t" file type.  The default entrypoint paths for the namespace_init_t domain are the following:"
+
+/etc/security/namespace.init
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux namespace_init policy is very flexible allowing users to setup their namespace_init processes in as secure a method as possible.
+.PP
+The following process types are defined for namespace_init:
+
+.EX
+.B namespace_init_t
+.EE
+.PP
+Note:
+.B semanage permissive -a namespace_init_t
+
+can be used to make the process type namespace_init_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux namespace_init policy is very flexible allowing users to setup their namespace_init processes in as secure a method as possible.
+.PP
+The following file types are defined for namespace_init:
+
+
+.EX
+.PP
+.B namespace_init_exec_t
+.EE
+
+- Set files with the namespace_init_exec_t type, if you want to transition an executable to the namespace_init_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type namespace_init_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), namespace_init(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ncftool_selinux.8 serefpolicy-3.7.19/man/man8/ncftool_selinux.8
--- nsaserefpolicy/man/man8/ncftool_selinux.8	2013-03-15 11:41:11.859153501 +0100
+++ serefpolicy-3.7.19/man/man8/ncftool_selinux.8	2013-03-15 11:39:58.840151835 +0100
@@ -1,16 +1,40 @@
-.TH  "ncftool_selinux"  "8"  "ncftool" "dwalsh@redhat.com" "ncftool SELinux Policy documentation"
+.TH  "ncftool_selinux"  "8"  "13-01-04" "ncftool" "SELinux Policy documentation for ncftool"
 .SH "NAME"
 ncftool_selinux \- Security Enhanced Linux Policy for the ncftool processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ncftool processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ncftool
-(policy for ncftool)
-processes via flexible mandatory access
-control.  
+The ncftool processes execute with the ncftool_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ncftool_t
+
+
+.SH "ENTRYPOINTS"
+
+The ncftool_t SELinux type can be entered via the "ncftool_exec_t" file type.  The default entrypoint paths for the ncftool_t domain are the following:"
+
+/usr/bin/ncftool
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ncftool policy is very flexible allowing users to setup their ncftool processes in as secure a method as possible.
+.PP
+The following process types are defined for ncftool:
+
+.EX
+.B ncftool_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ncftool_t
+
+can be used to make the process type ncftool_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  ncftool policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ncftool with the tightest access possible.
@@ -23,20 +47,27 @@
 .B setsebool -P ncftool_read_user_content 1
 .EE
 
+.PP
+If you want to allow ncftool to read user content, you must turn on the ncftool_read_user_content boolean.
+
+.EX
+.B setsebool -P ncftool_read_user_content 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ncftool policy is very flexible allowing users to setup their ncftool processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ncftool:
 
 
 .EX
 .PP
-.B ncftool_exec_t 
+.B ncftool_exec_t
 .EE
 
 - Set files with the ncftool_exec_t type, if you want to transition an executable to the ncftool_t domain.
@@ -44,28 +75,96 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ncftool policy is very flexible allowing users to setup their ncftool processes in as secure a method as possible.
-.PP 
-The following process types are defined for ncftool:
+.SH "MANAGED FILES"
 
-.EX
-.B ncftool_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ncftool_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B system_conf_t
+
+	/etc/sysctl\.conf(\.old)?
+.br
+	/etc/sysconfig/ip6?tables.*
+.br
+	/etc/sysconfig/ipvsadm.*
+.br
+	/etc/sysconfig/ebtables.*
+.br
+	/etc/sysconfig/system-config-firewall.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -81,12 +180,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ncftool(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ncftool(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ndc_selinux.8 serefpolicy-3.7.19/man/man8/ndc_selinux.8
--- nsaserefpolicy/man/man8/ndc_selinux.8	2013-03-15 11:41:12.159153508 +0100
+++ serefpolicy-3.7.19/man/man8/ndc_selinux.8	2013-03-15 11:40:04.356151961 +0100
@@ -1,25 +1,55 @@
-.TH  "ndc_selinux"  "8"  "ndc" "dwalsh@redhat.com" "ndc SELinux Policy documentation"
+.TH  "ndc_selinux"  "8"  "13-01-04" "ndc" "SELinux Policy documentation for ndc"
 .SH "NAME"
 ndc_selinux \- Security Enhanced Linux Policy for the ndc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ndc processes via flexible mandatory access control.
 
+The ndc processes execute with the ndc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ndc_t
+
+
+.SH "ENTRYPOINTS"
+
+The ndc_t SELinux type can be entered via the "ndc_exec_t" file type.  The default entrypoint paths for the ndc_t domain are the following:"
+
+/usr/sbin/r?ndc
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ndc policy is very flexible allowing users to setup their ndc processes in as secure a method as possible.
+.PP
+The following process types are defined for ndc:
+
+.EX
+.B ndc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ndc_t
+
+can be used to make the process type ndc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ndc policy is very flexible allowing users to setup their ndc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ndc:
 
 
 .EX
 .PP
-.B ndc_exec_t 
+.B ndc_exec_t
 .EE
 
 - Set files with the ndc_exec_t type, if you want to transition an executable to the ndc_t domain.
@@ -27,28 +57,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ndc policy is very flexible allowing users to setup their ndc processes in as secure a method as possible.
-.PP 
-The following process types are defined for ndc:
+.SH "MANAGED FILES"
 
-.EX
-.B ndc_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ndc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ndc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ndc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/netlabel_mgmt_selinux.8 serefpolicy-3.7.19/man/man8/netlabel_mgmt_selinux.8
--- nsaserefpolicy/man/man8/netlabel_mgmt_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/netlabel_mgmt_selinux.8	2013-03-15 11:40:05.325151983 +0100
@@ -0,0 +1,131 @@
+.TH  "netlabel_mgmt_selinux"  "8"  "13-01-04" "netlabel_mgmt" "SELinux Policy documentation for netlabel_mgmt"
+.SH "NAME"
+netlabel_mgmt_selinux \- Security Enhanced Linux Policy for the netlabel_mgmt processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the netlabel_mgmt processes via flexible mandatory access control.
+
+The netlabel_mgmt processes execute with the netlabel_mgmt_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep netlabel_mgmt_t
+
+
+.SH "ENTRYPOINTS"
+
+The netlabel_mgmt_t SELinux type can be entered via the "netlabel_mgmt_exec_t" file type.  The default entrypoint paths for the netlabel_mgmt_t domain are the following:"
+
+/sbin/netlabelctl
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux netlabel_mgmt policy is very flexible allowing users to setup their netlabel_mgmt processes in as secure a method as possible.
+.PP
+The following process types are defined for netlabel_mgmt:
+
+.EX
+.B netlabel_mgmt_t
+.EE
+.PP
+Note:
+.B semanage permissive -a netlabel_mgmt_t
+
+can be used to make the process type netlabel_mgmt_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux netlabel_mgmt policy is very flexible allowing users to setup their netlabel_mgmt processes in as secure a method as possible.
+.PP
+The following file types are defined for netlabel_mgmt:
+
+
+.EX
+.PP
+.B netlabel_mgmt_exec_t
+.EE
+
+- Set files with the netlabel_mgmt_exec_t type, if you want to transition an executable to the netlabel_mgmt_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type netlabel_mgmt_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), netlabel_mgmt(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/netlogond_selinux.8 serefpolicy-3.7.19/man/man8/netlogond_selinux.8
--- nsaserefpolicy/man/man8/netlogond_selinux.8	2013-03-15 11:41:12.088153506 +0100
+++ serefpolicy-3.7.19/man/man8/netlogond_selinux.8	2013-03-15 11:40:02.660151922 +0100
@@ -1,25 +1,55 @@
-.TH  "netlogond_selinux"  "8"  "netlogond" "dwalsh@redhat.com" "netlogond SELinux Policy documentation"
+.TH  "netlogond_selinux"  "8"  "13-01-04" "netlogond" "SELinux Policy documentation for netlogond"
 .SH "NAME"
 netlogond_selinux \- Security Enhanced Linux Policy for the netlogond processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the netlogond processes via flexible mandatory access control.
 
+The netlogond processes execute with the netlogond_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep netlogond_t
+
+
+.SH "ENTRYPOINTS"
+
+The netlogond_t SELinux type can be entered via the "netlogond_exec_t" file type.  The default entrypoint paths for the netlogond_t domain are the following:"
+
+/usr/sbin/netlogond
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux netlogond policy is very flexible allowing users to setup their netlogond processes in as secure a method as possible.
+.PP
+The following process types are defined for netlogond:
+
+.EX
+.B netlogond_t
+.EE
+.PP
+Note:
+.B semanage permissive -a netlogond_t
+
+can be used to make the process type netlogond_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux netlogond policy is very flexible allowing users to setup their netlogond processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for netlogond:
 
 
 .EX
 .PP
-.B netlogond_exec_t 
+.B netlogond_exec_t
 .EE
 
 - Set files with the netlogond_exec_t type, if you want to transition an executable to the netlogond_t domain.
@@ -27,19 +57,15 @@
 
 .EX
 .PP
-.B netlogond_var_lib_t 
+.B netlogond_var_lib_t
 .EE
 
 - Set files with the netlogond_var_lib_t type, if you want to store the netlogond files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/likewise-open/krb5-affinity.conf, /var/lib/likewise-open/LWNetsd\.err
 
 .EX
 .PP
-.B netlogond_var_run_t 
+.B netlogond_var_run_t
 .EE
 
 - Set files with the netlogond_var_run_t type, if you want to store the netlogond files under the /run directory.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B netlogond_var_socket_t 
+.B netlogond_var_socket_t
 .EE
 
 - Set files with the netlogond_var_socket_t type, if you want to treat the files as netlogond var socket data.
@@ -55,28 +81,84 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux netlogond policy is very flexible allowing users to setup their netlogond processes in as secure a method as possible.
-.PP 
-The following process types are defined for netlogond:
+.SH "MANAGED FILES"
 
-.EX
-.B netlogond_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type netlogond_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B likewise_etc_t
+
+	/etc/likewise-open(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B netlogond_var_lib_t
+
+	/var/lib/likewise-open/krb5-affinity.conf
+.br
+	/var/lib/likewise-open/LWNetsd\.err
+.br
+
+.br
+.B netlogond_var_run_t
+
+	/var/run/netlogond.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -89,11 +171,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), netlogond(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), netlogond(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/netutils_selinux.8 serefpolicy-3.7.19/man/man8/netutils_selinux.8
--- nsaserefpolicy/man/man8/netutils_selinux.8	2013-03-15 11:41:12.120153507 +0100
+++ serefpolicy-3.7.19/man/man8/netutils_selinux.8	2013-03-15 11:40:03.579151943 +0100
@@ -1,43 +1,63 @@
-.TH  "netutils_selinux"  "8"  "netutils" "dwalsh@redhat.com" "netutils SELinux Policy documentation"
+.TH  "netutils_selinux"  "8"  "13-01-04" "netutils" "SELinux Policy documentation for netutils"
 .SH "NAME"
 netutils_selinux \- Security Enhanced Linux Policy for the netutils processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the netutils processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B netutils
-(Network analysis utilities)
-processes via flexible mandatory access
-control.  
+The netutils processes execute with the netutils_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep netutils_t
+
+
+.SH "ENTRYPOINTS"
+
+The netutils_t SELinux type can be entered via the "netutils_exec_t" file type.  The default entrypoint paths for the netutils_t domain are the following:"
+
+/sbin/arping, /usr/sbin/tcpdump
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux netutils policy is very flexible allowing users to setup their netutils processes in as secure a method as possible.
+.PP
+The following process types are defined for netutils:
+
+.EX
+.B netutils_t
+.EE
+.PP
+Note:
+.B semanage permissive -a netutils_t
+
+can be used to make the process type netutils_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux netutils policy is very flexible allowing users to setup their netutils processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for netutils:
 
 
 .EX
 .PP
-.B netutils_exec_t 
+.B netutils_exec_t
 .EE
 
 - Set files with the netutils_exec_t type, if you want to transition an executable to the netutils_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/arping, /usr/sbin/tcpdump
 
 .EX
 .PP
-.B netutils_tmp_t 
+.B netutils_tmp_t
 .EE
 
 - Set files with the netutils_tmp_t type, if you want to store netutils temporary files in the /tmp directories.
@@ -45,28 +65,60 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux netutils policy is very flexible allowing users to setup their netutils processes in as secure a method as possible.
-.PP 
-The following process types are defined for netutils:
+.SH "MANAGED FILES"
 
-.EX
-.B netutils_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type netutils_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B netutils_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -79,11 +131,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), netutils(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), netutils(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/NetworkManager_selinux.8 serefpolicy-3.7.19/man/man8/NetworkManager_selinux.8
--- nsaserefpolicy/man/man8/NetworkManager_selinux.8	2013-03-15 11:41:12.139153508 +0100
+++ serefpolicy-3.7.19/man/man8/NetworkManager_selinux.8	2013-03-15 11:40:04.005151953 +0100
@@ -1,67 +1,79 @@
-.TH  "NetworkManager_selinux"  "8"  "NetworkManager" "dwalsh@redhat.com" "NetworkManager SELinux Policy documentation"
+.TH  "NetworkManager_selinux"  "8"  "13-01-04" "NetworkManager" "SELinux Policy documentation for NetworkManager"
 .SH "NAME"
 NetworkManager_selinux \- Security Enhanced Linux Policy for the NetworkManager processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the NetworkManager processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B NetworkManager
-(Manager for dynamically switching between networks)
-processes via flexible mandatory access
-control.  
+The NetworkManager processes execute with the NetworkManager_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep NetworkManager_t
+
+
+.SH "ENTRYPOINTS"
+
+The NetworkManager_t SELinux type can be entered via the "NetworkManager_exec_t" file type.  The default entrypoint paths for the NetworkManager_t domain are the following:"
+
+/usr/s?bin/NetworkManager, /usr/s?bin/wpa_supplicant, /usr/sbin/wicd, /sbin/wpa_supplicant, /usr/sbin/nm-system-settings, /usr/sbin/NetworkManagerDispatcher
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux NetworkManager policy is very flexible allowing users to setup their NetworkManager processes in as secure a method as possible.
+.PP
+The following process types are defined for NetworkManager:
+
+.EX
+.B NetworkManager_t
+.EE
+.PP
+Note:
+.B semanage permissive -a NetworkManager_t
+
+can be used to make the process type NetworkManager_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux NetworkManager policy is very flexible allowing users to setup their NetworkManager processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for NetworkManager:
 
 
 .EX
 .PP
-.B NetworkManager_exec_t 
+.B NetworkManager_exec_t
 .EE
 
 - Set files with the NetworkManager_exec_t type, if you want to transition an executable to the NetworkManager_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/s?bin/wpa_supplicant, /sbin/wpa_supplicant, /usr/sbin/nm-system-settings, /usr/sbin/wicd, /usr/s?bin/NetworkManager, /usr/sbin/NetworkManagerDispatcher
 
 .EX
 .PP
-.B NetworkManager_initrc_exec_t 
+.B NetworkManager_initrc_exec_t
 .EE
 
 - Set files with the NetworkManager_initrc_exec_t type, if you want to transition an executable to the NetworkManager_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/wicd, /usr/libexec/nm-dispatcher.action, /etc/NetworkManager/dispatcher\.d(/.*)
 
 .EX
 .PP
-.B NetworkManager_log_t 
+.B NetworkManager_log_t
 .EE
 
 - Set files with the NetworkManager_log_t type, if you want to treat the data as NetworkManager log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/wicd\.log, /var/log/wpa_supplicant.*, /var/log/wicd(/.*)?
 
 .EX
 .PP
-.B NetworkManager_tmp_t 
+.B NetworkManager_tmp_t
 .EE
 
 - Set files with the NetworkManager_tmp_t type, if you want to store NetworkManager temporary files in the /tmp directories.
@@ -69,52 +81,194 @@
 
 .EX
 .PP
-.B NetworkManager_var_lib_t 
+.B NetworkManager_var_lib_t
 .EE
 
 - Set files with the NetworkManager_var_lib_t type, if you want to store the NetworkManager files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/etc/wicd/wired-settings.conf, /etc/NetworkManager/system-connections(/.*)?, /var/lib/wicd(/.*)?, /etc/NetworkManager(/.*)?, /etc/wicd/manager-settings.conf, /etc/wicd/wireless-settings.conf, /var/lib/NetworkManager(/.*)?
 
 .EX
 .PP
-.B NetworkManager_var_run_t 
+.B NetworkManager_var_run_t
 .EE
 
 - Set files with the NetworkManager_var_run_t type, if you want to store the NetworkManager files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/wpa_supplicant-global, /var/run/nm-dhclient.*, /var/run/wpa_supplicant(/.*)?, /var/run/NetworkManager\.pid, /var/run/NetworkManager(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux NetworkManager policy is very flexible allowing users to setup their NetworkManager processes in as secure a method as possible.
-.PP 
-The following process types are defined for NetworkManager:
+.SH "MANAGED FILES"
 
-.EX
-.B NetworkManager_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type NetworkManager_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B NetworkManager_log_t
+
+	/var/log/wicd(/.*)?
+.br
+	/var/log/wicd\.log.*
+.br
+	/var/log/wpa_supplicant.*
+.br
+
+.br
+.B NetworkManager_tmp_t
+
+
+.br
+.B NetworkManager_var_lib_t
+
+	/var/lib/wicd(/.*)?
+.br
+	/etc/NetworkManager(/.*)?
+.br
+	/var/lib/NetworkManager(/.*)?
+.br
+	/etc/wicd/wired-settings.conf
+.br
+	/etc/wicd/manager-settings.conf
+.br
+	/etc/wicd/wireless-settings.conf
+.br
+	/etc/NetworkManager/system-connections(/.*)?
+.br
+
+.br
+.B NetworkManager_var_run_t
+
+	/var/run/nm-dhclient.*
+.br
+	/var/run/NetworkManager(/.*)?
+.br
+	/var/run/wpa_supplicant(/.*)?
+.br
+	/var/run/NetworkManager\.pid
+.br
+	/var/run/wpa_supplicant-global
+.br
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B named_cache_t
+
+	/var/named/data(/.*)?
+.br
+	/var/named/slaves(/.*)?
+.br
+	/var/named/dynamic(/.*)?
+.br
+	/var/named/chroot/var/tmp(/.*)?
+.br
+	/var/named/chroot/var/named/data(/.*)?
+.br
+	/var/named/chroot/var/named/slaves(/.*)?
+.br
+	/var/named/chroot/var/named/dynamic(/.*)?
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B pppd_var_run_t
+
+	/var/run/(i)?ppp.*pid[^/]*
+.br
+	/var/run/ppp(/.*)?
+.br
+	/var/run/pppd[0-9]*\.tdb
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -127,11 +281,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), NetworkManager(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), NetworkManager(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/newrole_selinux.8 serefpolicy-3.7.19/man/man8/newrole_selinux.8
--- nsaserefpolicy/man/man8/newrole_selinux.8	2013-03-15 11:41:12.177153508 +0100
+++ serefpolicy-3.7.19/man/man8/newrole_selinux.8	2013-03-15 11:40:05.495151987 +0100
@@ -1,25 +1,55 @@
-.TH  "newrole_selinux"  "8"  "newrole" "dwalsh@redhat.com" "newrole SELinux Policy documentation"
+.TH  "newrole_selinux"  "8"  "13-01-04" "newrole" "SELinux Policy documentation for newrole"
 .SH "NAME"
 newrole_selinux \- Security Enhanced Linux Policy for the newrole processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the newrole processes via flexible mandatory access control.
 
+The newrole processes execute with the newrole_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep newrole_t
+
+
+.SH "ENTRYPOINTS"
+
+The newrole_t SELinux type can be entered via the "newrole_exec_t" file type.  The default entrypoint paths for the newrole_t domain are the following:"
+
+/usr/bin/newrole
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux newrole policy is very flexible allowing users to setup their newrole processes in as secure a method as possible.
+.PP
+The following process types are defined for newrole:
+
+.EX
+.B newrole_t
+.EE
+.PP
+Note:
+.B semanage permissive -a newrole_t
+
+can be used to make the process type newrole_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux newrole policy is very flexible allowing users to setup their newrole processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for newrole:
 
 
 .EX
 .PP
-.B newrole_exec_t 
+.B newrole_exec_t
 .EE
 
 - Set files with the newrole_exec_t type, if you want to transition an executable to the newrole_t domain.
@@ -27,28 +57,112 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux newrole policy is very flexible allowing users to setup their newrole processes in as secure a method as possible.
-.PP 
-The following process types are defined for newrole:
+.SH "MANAGED FILES"
 
-.EX
-.B newrole_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type newrole_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +175,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), newrole(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), newrole(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/nfsd_selinux.8 serefpolicy-3.7.19/man/man8/nfsd_selinux.8
--- nsaserefpolicy/man/man8/nfsd_selinux.8	2013-03-15 11:41:11.997153504 +0100
+++ serefpolicy-3.7.19/man/man8/nfsd_selinux.8	2013-03-15 11:40:00.971151884 +0100
@@ -1,41 +1,78 @@
-.TH  "nfsd_selinux"  "8"  "nfsd" "dwalsh@redhat.com" "nfsd SELinux Policy documentation"
+.TH  "nfsd_selinux"  "8"  "13-01-04" "nfsd" "SELinux Policy documentation for nfsd"
 .SH "NAME"
 nfsd_selinux \- Security Enhanced Linux Policy for the nfsd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the nfsd processes via flexible mandatory access control.
 
+The nfsd processes execute with the nfsd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep nfsd_t
+
+
+.SH "ENTRYPOINTS"
+
+The nfsd_t SELinux type can be entered via the "nfsd_exec_t" file type.  The default entrypoint paths for the nfsd_t domain are the following:"
+
+/usr/sbin/rpc\.nfsd, /usr/sbin/rpc\.mountd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nfsd policy is very flexible allowing users to setup their nfsd processes in as secure a method as possible.
+.PP
+The following process types are defined for nfsd:
+
+.EX
+.B nfsd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nfsd_t
+
+can be used to make the process type nfsd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  nfsd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run nfsd with the tightest access possible.
 
 
 .PP
-If you want to allow virt to manage nfs file, you must turn on the virt_use_nfs boolean.
+If you want to allow httpd to access nfs file systems, you must turn on the httpd_use_nfs boolean.
+
+.EX
+.B setsebool -P httpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow virt to manage nfs files, you must turn on the virt_use_nfs boolean.
 
 .EX
 .B setsebool -P virt_use_nfs 1
 .EE
 
 .PP
-If you want to support NFS home directorie, you must turn on the use_nfs_home_dirs boolean.
+If you want to allow qemu to use nfs file systems, you must turn on the qemu_use_nfs boolean.
 
 .EX
-.B setsebool -P use_nfs_home_dirs 1
+.B setsebool -P qemu_use_nfs 1
 .EE
 
 .PP
-If you want to allow xen to manage nfs file, you must turn on the xen_use_nfs boolean.
+If you want to allow sge to access nfs file systems, you must turn on the sge_use_nfs boolean.
 
 .EX
-.B setsebool -P xen_use_nfs 1
+.B setsebool -P sge_use_nfs 1
 .EE
 
 .PP
-If you want to allow ftp servers to use nfs used for public file transfer services, you must turn on the allow_ftpd_use_nfs boolean.
+If you want to allow Cobbler to access nfs file systems, you must turn on the cobbler_use_nfs boolean.
 
 .EX
-.B setsebool -P allow_ftpd_use_nfs 1
+.B setsebool -P cobbler_use_nfs 1
 .EE
 
 .PP
@@ -46,34 +83,69 @@
 .EE
 
 .PP
-If you want to allow qemu to use nfs file system, you must turn on the qemu_use_nfs boolean.
+If you want to allow rsync servers to share nfs files systems, you must turn on the rsync_use_nfs boolean.
 
 .EX
-.B setsebool -P qemu_use_nfs 1
+.B setsebool -P rsync_use_nfs 1
 .EE
 
 .PP
-If you want to allow rsync servers to share nfs files system, you must turn on the rsync_use_nfs boolean.
+If you want to allow samba to export NFS volumes, you must turn on the samba_share_nfs boolean.
 
 .EX
-.B setsebool -P rsync_use_nfs 1
+.B setsebool -P samba_share_nfs 1
 .EE
 
 .PP
-If you want to allow Cobbler to access nfs file systems, you must turn on the cobbler_use_nfs boolean.
+If you want to allow ftp servers to use nfs used for public file transfer services, you must turn on the allow_ftpd_use_nfs boolean.
 
 .EX
-.B setsebool -P cobbler_use_nfs 1
+.B setsebool -P allow_ftpd_use_nfs 1
 .EE
 
 .PP
-If you want to allow httpd to access nfs file system, you must turn on the httpd_use_nfs boolean.
+If you want to allow xen to manage nfs files, you must turn on the xen_use_nfs boolean.
+
+.EX
+.B setsebool -P xen_use_nfs 1
+.EE
+
+.PP
+If you want to allow sanlock to manage nfs files, you must turn on the sanlock_use_nfs boolean.
+
+.EX
+.B setsebool -P sanlock_use_nfs 1
+.EE
+
+.PP
+If you want to support NFS home directories, you must turn on the use_nfs_home_dirs boolean.
+
+.EX
+.B setsebool -P use_nfs_home_dirs 1
+.EE
+
+.PP
+If you want to allow httpd to access nfs file systems, you must turn on the httpd_use_nfs boolean.
 
 .EX
 .B setsebool -P httpd_use_nfs 1
 .EE
 
 .PP
+If you want to allow virt to manage nfs files, you must turn on the virt_use_nfs boolean.
+
+.EX
+.B setsebool -P virt_use_nfs 1
+.EE
+
+.PP
+If you want to allow qemu to use nfs file systems, you must turn on the qemu_use_nfs boolean.
+
+.EX
+.B setsebool -P qemu_use_nfs 1
+.EE
+
+.PP
 If you want to allow sge to access nfs file systems, you must turn on the sge_use_nfs boolean.
 
 .EX
@@ -81,10 +153,24 @@
 .EE
 
 .PP
-If you want to allow confined virtual guests to manage nfs file, you must turn on the sanlock_use_nfs boolean.
+If you want to allow Cobbler to access nfs file systems, you must turn on the cobbler_use_nfs boolean.
 
 .EX
-.B setsebool -P sanlock_use_nfs 1
+.B setsebool -P cobbler_use_nfs 1
+.EE
+
+.PP
+If you want to allow Git daemon system to access nfs file systems, you must turn on the git_system_use_nfs boolean.
+
+.EX
+.B setsebool -P git_system_use_nfs 1
+.EE
+
+.PP
+If you want to allow rsync servers to share nfs files systems, you must turn on the rsync_use_nfs boolean.
+
+.EX
+.B setsebool -P rsync_use_nfs 1
 .EE
 
 .PP
@@ -94,40 +180,56 @@
 .B setsebool -P samba_share_nfs 1
 .EE
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+If you want to allow ftp servers to use nfs used for public file transfer services, you must turn on the allow_ftpd_use_nfs boolean.
+
+.EX
+.B setsebool -P allow_ftpd_use_nfs 1
+.EE
+
 .PP
-Policy governs the access confined processes have to these files. 
-SELinux nfsd policy is very flexible allowing users to setup their nfsd processes in as secure a method as possible.
-.PP 
-The following file types are defined for nfsd:
+If you want to allow xen to manage nfs files, you must turn on the xen_use_nfs boolean.
+
+.EX
+.B setsebool -P xen_use_nfs 1
+.EE
 
+.PP
+If you want to allow sanlock to manage nfs files, you must turn on the sanlock_use_nfs boolean.
 
 .EX
+.B setsebool -P sanlock_use_nfs 1
+.EE
+
 .PP
-.B nfs_t 
+If you want to support NFS home directories, you must turn on the use_nfs_home_dirs boolean.
+
+.EX
+.B setsebool -P use_nfs_home_dirs 1
 .EE
 
-- Set files with the nfs_t type, if you want to treat the files as nfs data.
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nfsd policy is very flexible allowing users to setup their nfsd processes in as secure a method as possible.
+.PP
+The following file types are defined for nfsd:
 
 
 .EX
 .PP
-.B nfsd_exec_t 
+.B nfsd_exec_t
 .EE
 
 - Set files with the nfsd_exec_t type, if you want to transition an executable to the nfsd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/rpc\.mountd, /usr/sbin/rpc\.nfsd
 
 .EX
 .PP
-.B nfsd_initrc_exec_t 
+.B nfsd_initrc_exec_t
 .EE
 
 - Set files with the nfsd_initrc_exec_t type, if you want to transition an executable to the nfsd_initrc_t domain.
@@ -135,7 +237,7 @@
 
 .EX
 .PP
-.B nfsd_ro_t 
+.B nfsd_ro_t
 .EE
 
 - Set files with the nfsd_ro_t type, if you want to treat the files as nfsd read/only content.
@@ -143,7 +245,7 @@
 
 .EX
 .PP
-.B nfsd_rw_t 
+.B nfsd_rw_t
 .EE
 
 - Set files with the nfsd_rw_t type, if you want to treat the files as nfsd read/write content.
@@ -151,28 +253,82 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux nfsd policy is very flexible allowing users to setup their nfsd processes in as secure a method as possible.
-.PP 
-The following process types are defined for nfsd:
+.SH "MANAGED FILES"
 
-.EX
-.B nfsd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type nfsd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfsd_fs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_lib_nfs_t
+
+	/var/lib/nfs(/.*)?
+.br
+
+.br
+.B var_lib_t
+
+	/opt/(.*/)?var/lib(64)?(/.*)?
+.br
+	/var/lib(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -188,12 +344,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), nfsd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), nfsd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nmbd_selinux.8 serefpolicy-3.7.19/man/man8/nmbd_selinux.8
--- nsaserefpolicy/man/man8/nmbd_selinux.8	2013-03-15 11:41:11.871153501 +0100
+++ serefpolicy-3.7.19/man/man8/nmbd_selinux.8	2013-03-15 11:39:58.955151838 +0100
@@ -1,25 +1,55 @@
-.TH  "nmbd_selinux"  "8"  "nmbd" "dwalsh@redhat.com" "nmbd SELinux Policy documentation"
+.TH  "nmbd_selinux"  "8"  "13-01-04" "nmbd" "SELinux Policy documentation for nmbd"
 .SH "NAME"
 nmbd_selinux \- Security Enhanced Linux Policy for the nmbd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the nmbd processes via flexible mandatory access control.
 
+The nmbd processes execute with the nmbd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep nmbd_t
+
+
+.SH "ENTRYPOINTS"
+
+The nmbd_t SELinux type can be entered via the "nmbd_exec_t" file type.  The default entrypoint paths for the nmbd_t domain are the following:"
+
+/usr/sbin/nmbd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
+.PP
+The following process types are defined for nmbd:
+
+.EX
+.B nmbd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nmbd_t
+
+can be used to make the process type nmbd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for nmbd:
 
 
 .EX
 .PP
-.B nmbd_exec_t 
+.B nmbd_exec_t
 .EE
 
 - Set files with the nmbd_exec_t type, if you want to transition an executable to the nmbd_t domain.
@@ -27,63 +57,139 @@
 
 .EX
 .PP
-.B nmbd_var_run_t 
+.B nmbd_var_run_t
 .EE
 
 - Set files with the nmbd_var_run_t type, if you want to store the nmbd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/samba/messages\.tdb, /var/run/samba/namelist\.debug, /var/run/nmbd\.pid, /var/run/samba/unexpected\.tdb, /var/run/samba/nmbd\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for nmbd:
 
 .EX
 .TP 5
-.B nmbd_port_t 
+.B nmbd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 137,138
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
-.PP 
-The following process types are defined for nmbd:
+.SH "MANAGED FILES"
 
-.EX
-.B nmbd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type nmbd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B ctdbd_var_lib_t
+
+	/etc/ctdb(/.*)?
+.br
+	/var/ctdb(/.*)?
+.br
+	/var/ctdbd(/.*)?
+.br
+	/var/lib/ctdbd(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nmbd_var_run_t
+
+	/var/run/nmbd\.pid
+.br
+	/var/run/samba/nmbd\.pid
+.br
+	/var/run/samba/messages\.tdb
+.br
+	/var/run/samba/namelist\.debug
+.br
+	/var/run/samba/unexpected\.tdb
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B samba_log_t
+
+	/var/log/samba(/.*)?
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -99,11 +205,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), nmbd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), nmbd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/nova_ajax_selinux.8 serefpolicy-3.7.19/man/man8/nova_ajax_selinux.8
--- nsaserefpolicy/man/man8/nova_ajax_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_ajax_selinux.8	2013-03-15 11:39:58.967151838 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_ajax_selinux"  "8"  "13-01-04" "nova_ajax" "SELinux Policy documentation for nova_ajax"
+.SH "NAME"
+nova_ajax_selinux \- Security Enhanced Linux Policy for the nova_ajax processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_ajax processes via flexible mandatory access control.
+
+The nova_ajax processes execute with the nova_ajax_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_ajax_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_ajax_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,nova_ajax_exec_t" file types.  The default entrypoint paths for the nova_ajax_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/nova-ajax-console-proxy
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_ajax policy is very flexible allowing users to setup their nova_ajax processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_ajax:
+
+.EX
+.B nova_ajax_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_ajax_t
+
+can be used to make the process type nova_ajax_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_ajax policy is very flexible allowing users to setup their nova_ajax processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_ajax:
+
+
+.EX
+.PP
+.B nova_ajax_exec_t
+.EE
+
+- Set files with the nova_ajax_exec_t type, if you want to transition an executable to the nova_ajax_t domain.
+
+
+.EX
+.PP
+.B nova_ajax_initrc_exec_t
+.EE
+
+- Set files with the nova_ajax_initrc_exec_t type, if you want to transition an executable to the nova_ajax_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_ajax_tmp_t
+.EE
+
+- Set files with the nova_ajax_tmp_t type, if you want to store nova ajax temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_ajax_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_ajax(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_api_selinux(8), nova_cert_selinux(8), nova_compute_selinux(8), nova_console_selinux(8), nova_direct_selinux(8), nova_network_selinux(8), nova_objectstore_selinux(8), nova_scheduler_selinux(8), nova_vncproxy_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_api_selinux.8 serefpolicy-3.7.19/man/man8/nova_api_selinux.8
--- nsaserefpolicy/man/man8/nova_api_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_api_selinux.8	2013-03-15 11:39:58.376151824 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_api_selinux"  "8"  "13-01-04" "nova_api" "SELinux Policy documentation for nova_api"
+.SH "NAME"
+nova_api_selinux \- Security Enhanced Linux Policy for the nova_api processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_api processes via flexible mandatory access control.
+
+The nova_api processes execute with the nova_api_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_api_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_api_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,nova_api_exec_t" file types.  The default entrypoint paths for the nova_api_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/nova-api, /usr//bin/nova-api-metadata
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_api policy is very flexible allowing users to setup their nova_api processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_api:
+
+.EX
+.B nova_api_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_api_t
+
+can be used to make the process type nova_api_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_api policy is very flexible allowing users to setup their nova_api processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_api:
+
+
+.EX
+.PP
+.B nova_api_exec_t
+.EE
+
+- Set files with the nova_api_exec_t type, if you want to transition an executable to the nova_api_t domain.
+
+
+.EX
+.PP
+.B nova_api_initrc_exec_t
+.EE
+
+- Set files with the nova_api_initrc_exec_t type, if you want to transition an executable to the nova_api_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_api_tmp_t
+.EE
+
+- Set files with the nova_api_tmp_t type, if you want to store nova api temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_api_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_api(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_cert_selinux(8), nova_compute_selinux(8), nova_console_selinux(8), nova_direct_selinux(8), nova_network_selinux(8), nova_objectstore_selinux(8), nova_scheduler_selinux(8), nova_vncproxy_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_cert_selinux.8 serefpolicy-3.7.19/man/man8/nova_cert_selinux.8
--- nsaserefpolicy/man/man8/nova_cert_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_cert_selinux.8	2013-03-15 11:39:54.185151729 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_cert_selinux"  "8"  "13-01-04" "nova_cert" "SELinux Policy documentation for nova_cert"
+.SH "NAME"
+nova_cert_selinux \- Security Enhanced Linux Policy for the nova_cert processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_cert processes via flexible mandatory access control.
+
+The nova_cert processes execute with the nova_cert_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_cert_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_cert_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,nova_cert_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the nova_cert_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/nova-cert, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_cert policy is very flexible allowing users to setup their nova_cert processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_cert:
+
+.EX
+.B nova_cert_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_cert_t
+
+can be used to make the process type nova_cert_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_cert policy is very flexible allowing users to setup their nova_cert processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_cert:
+
+
+.EX
+.PP
+.B nova_cert_exec_t
+.EE
+
+- Set files with the nova_cert_exec_t type, if you want to transition an executable to the nova_cert_t domain.
+
+
+.EX
+.PP
+.B nova_cert_initrc_exec_t
+.EE
+
+- Set files with the nova_cert_initrc_exec_t type, if you want to transition an executable to the nova_cert_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_cert_tmp_t
+.EE
+
+- Set files with the nova_cert_tmp_t type, if you want to store nova cert temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_cert_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_cert(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_api_selinux(8), nova_compute_selinux(8), nova_console_selinux(8), nova_direct_selinux(8), nova_network_selinux(8), nova_objectstore_selinux(8), nova_scheduler_selinux(8), nova_vncproxy_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_compute_selinux.8 serefpolicy-3.7.19/man/man8/nova_compute_selinux.8
--- nsaserefpolicy/man/man8/nova_compute_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_compute_selinux.8	2013-03-15 11:40:05.701151992 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_compute_selinux"  "8"  "13-01-04" "nova_compute" "SELinux Policy documentation for nova_compute"
+.SH "NAME"
+nova_compute_selinux \- Security Enhanced Linux Policy for the nova_compute processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_compute processes via flexible mandatory access control.
+
+The nova_compute processes execute with the nova_compute_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_compute_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_compute_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,nova_compute_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the nova_compute_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_compute policy is very flexible allowing users to setup their nova_compute processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_compute:
+
+.EX
+.B nova_compute_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_compute_t
+
+can be used to make the process type nova_compute_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_compute policy is very flexible allowing users to setup their nova_compute processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_compute:
+
+
+.EX
+.PP
+.B nova_compute_exec_t
+.EE
+
+- Set files with the nova_compute_exec_t type, if you want to transition an executable to the nova_compute_t domain.
+
+
+.EX
+.PP
+.B nova_compute_initrc_exec_t
+.EE
+
+- Set files with the nova_compute_initrc_exec_t type, if you want to transition an executable to the nova_compute_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_compute_tmp_t
+.EE
+
+- Set files with the nova_compute_tmp_t type, if you want to store nova compute temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_compute_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_compute(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_api_selinux(8), nova_cert_selinux(8), nova_console_selinux(8), nova_direct_selinux(8), nova_network_selinux(8), nova_objectstore_selinux(8), nova_scheduler_selinux(8), nova_vncproxy_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_console_selinux.8 serefpolicy-3.7.19/man/man8/nova_console_selinux.8
--- nsaserefpolicy/man/man8/nova_console_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_console_selinux.8	2013-03-15 11:40:03.546151942 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_console_selinux"  "8"  "13-01-04" "nova_console" "SELinux Policy documentation for nova_console"
+.SH "NAME"
+nova_console_selinux \- Security Enhanced Linux Policy for the nova_console processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_console processes via flexible mandatory access control.
+
+The nova_console processes execute with the nova_console_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_console_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_console_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,nova_console_exec_t,file_type" file types.  The default entrypoint paths for the nova_console_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/nova-console.*, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_console policy is very flexible allowing users to setup their nova_console processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_console:
+
+.EX
+.B nova_console_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_console_t
+
+can be used to make the process type nova_console_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_console policy is very flexible allowing users to setup their nova_console processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_console:
+
+
+.EX
+.PP
+.B nova_console_exec_t
+.EE
+
+- Set files with the nova_console_exec_t type, if you want to transition an executable to the nova_console_t domain.
+
+
+.EX
+.PP
+.B nova_console_initrc_exec_t
+.EE
+
+- Set files with the nova_console_initrc_exec_t type, if you want to transition an executable to the nova_console_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_console_tmp_t
+.EE
+
+- Set files with the nova_console_tmp_t type, if you want to store nova console temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_console_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_console(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_api_selinux(8), nova_cert_selinux(8), nova_compute_selinux(8), nova_direct_selinux(8), nova_network_selinux(8), nova_objectstore_selinux(8), nova_scheduler_selinux(8), nova_vncproxy_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_direct_selinux.8 serefpolicy-3.7.19/man/man8/nova_direct_selinux.8
--- nsaserefpolicy/man/man8/nova_direct_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_direct_selinux.8	2013-03-15 11:40:05.325151983 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_direct_selinux"  "8"  "13-01-04" "nova_direct" "SELinux Policy documentation for nova_direct"
+.SH "NAME"
+nova_direct_selinux \- Security Enhanced Linux Policy for the nova_direct processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_direct processes via flexible mandatory access control.
+
+The nova_direct processes execute with the nova_direct_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_direct_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_direct_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,nova_direct_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the nova_direct_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/nova-direct-api, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_direct policy is very flexible allowing users to setup their nova_direct processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_direct:
+
+.EX
+.B nova_direct_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_direct_t
+
+can be used to make the process type nova_direct_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_direct policy is very flexible allowing users to setup their nova_direct processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_direct:
+
+
+.EX
+.PP
+.B nova_direct_exec_t
+.EE
+
+- Set files with the nova_direct_exec_t type, if you want to transition an executable to the nova_direct_t domain.
+
+
+.EX
+.PP
+.B nova_direct_initrc_exec_t
+.EE
+
+- Set files with the nova_direct_initrc_exec_t type, if you want to transition an executable to the nova_direct_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_direct_tmp_t
+.EE
+
+- Set files with the nova_direct_tmp_t type, if you want to store nova direct temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_direct_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_direct(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_api_selinux(8), nova_cert_selinux(8), nova_compute_selinux(8), nova_console_selinux(8), nova_network_selinux(8), nova_objectstore_selinux(8), nova_scheduler_selinux(8), nova_vncproxy_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_network_selinux.8 serefpolicy-3.7.19/man/man8/nova_network_selinux.8
--- nsaserefpolicy/man/man8/nova_network_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_network_selinux.8	2013-03-15 11:40:00.138151865 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_network_selinux"  "8"  "13-01-04" "nova_network" "SELinux Policy documentation for nova_network"
+.SH "NAME"
+nova_network_selinux \- Security Enhanced Linux Policy for the nova_network processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_network processes via flexible mandatory access control.
+
+The nova_network processes execute with the nova_network_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_network_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_network_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,nova_network_exec_t" file types.  The default entrypoint paths for the nova_network_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/nova-network
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_network policy is very flexible allowing users to setup their nova_network processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_network:
+
+.EX
+.B nova_network_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_network_t
+
+can be used to make the process type nova_network_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_network policy is very flexible allowing users to setup their nova_network processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_network:
+
+
+.EX
+.PP
+.B nova_network_exec_t
+.EE
+
+- Set files with the nova_network_exec_t type, if you want to transition an executable to the nova_network_t domain.
+
+
+.EX
+.PP
+.B nova_network_initrc_exec_t
+.EE
+
+- Set files with the nova_network_initrc_exec_t type, if you want to transition an executable to the nova_network_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_network_tmp_t
+.EE
+
+- Set files with the nova_network_tmp_t type, if you want to store nova network temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_network_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_network(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_api_selinux(8), nova_cert_selinux(8), nova_compute_selinux(8), nova_console_selinux(8), nova_direct_selinux(8), nova_objectstore_selinux(8), nova_scheduler_selinux(8), nova_vncproxy_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_objectstore_selinux.8 serefpolicy-3.7.19/man/man8/nova_objectstore_selinux.8
--- nsaserefpolicy/man/man8/nova_objectstore_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_objectstore_selinux.8	2013-03-15 11:40:01.221151889 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_objectstore_selinux"  "8"  "13-01-04" "nova_objectstore" "SELinux Policy documentation for nova_objectstore"
+.SH "NAME"
+nova_objectstore_selinux \- Security Enhanced Linux Policy for the nova_objectstore processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_objectstore processes via flexible mandatory access control.
+
+The nova_objectstore processes execute with the nova_objectstore_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_objectstore_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_objectstore_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,nova_objectstore_exec_t" file types.  The default entrypoint paths for the nova_objectstore_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/nova-objectstore
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_objectstore policy is very flexible allowing users to setup their nova_objectstore processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_objectstore:
+
+.EX
+.B nova_objectstore_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_objectstore_t
+
+can be used to make the process type nova_objectstore_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_objectstore policy is very flexible allowing users to setup their nova_objectstore processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_objectstore:
+
+
+.EX
+.PP
+.B nova_objectstore_exec_t
+.EE
+
+- Set files with the nova_objectstore_exec_t type, if you want to transition an executable to the nova_objectstore_t domain.
+
+
+.EX
+.PP
+.B nova_objectstore_initrc_exec_t
+.EE
+
+- Set files with the nova_objectstore_initrc_exec_t type, if you want to transition an executable to the nova_objectstore_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_objectstore_tmp_t
+.EE
+
+- Set files with the nova_objectstore_tmp_t type, if you want to store nova objectstore temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_objectstore_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_objectstore(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_api_selinux(8), nova_cert_selinux(8), nova_compute_selinux(8), nova_console_selinux(8), nova_direct_selinux(8), nova_network_selinux(8), nova_scheduler_selinux(8), nova_vncproxy_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_scheduler_selinux.8 serefpolicy-3.7.19/man/man8/nova_scheduler_selinux.8
--- nsaserefpolicy/man/man8/nova_scheduler_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_scheduler_selinux.8	2013-03-15 11:39:58.930151837 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_scheduler_selinux"  "8"  "13-01-04" "nova_scheduler" "SELinux Policy documentation for nova_scheduler"
+.SH "NAME"
+nova_scheduler_selinux \- Security Enhanced Linux Policy for the nova_scheduler processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_scheduler processes via flexible mandatory access control.
+
+The nova_scheduler processes execute with the nova_scheduler_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_scheduler_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_scheduler_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,nova_scheduler_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the nova_scheduler_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/nova-scheduler, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_scheduler policy is very flexible allowing users to setup their nova_scheduler processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_scheduler:
+
+.EX
+.B nova_scheduler_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_scheduler_t
+
+can be used to make the process type nova_scheduler_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_scheduler policy is very flexible allowing users to setup their nova_scheduler processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_scheduler:
+
+
+.EX
+.PP
+.B nova_scheduler_exec_t
+.EE
+
+- Set files with the nova_scheduler_exec_t type, if you want to transition an executable to the nova_scheduler_t domain.
+
+
+.EX
+.PP
+.B nova_scheduler_initrc_exec_t
+.EE
+
+- Set files with the nova_scheduler_initrc_exec_t type, if you want to transition an executable to the nova_scheduler_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_scheduler_tmp_t
+.EE
+
+- Set files with the nova_scheduler_tmp_t type, if you want to store nova scheduler temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_scheduler_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_scheduler(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_api_selinux(8), nova_cert_selinux(8), nova_compute_selinux(8), nova_console_selinux(8), nova_direct_selinux(8), nova_network_selinux(8), nova_objectstore_selinux(8), nova_vncproxy_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_vncproxy_selinux.8 serefpolicy-3.7.19/man/man8/nova_vncproxy_selinux.8
--- nsaserefpolicy/man/man8/nova_vncproxy_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_vncproxy_selinux.8	2013-03-15 11:40:00.920151882 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_vncproxy_selinux"  "8"  "13-01-04" "nova_vncproxy" "SELinux Policy documentation for nova_vncproxy"
+.SH "NAME"
+nova_vncproxy_selinux \- Security Enhanced Linux Policy for the nova_vncproxy processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_vncproxy processes via flexible mandatory access control.
+
+The nova_vncproxy processes execute with the nova_vncproxy_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_vncproxy_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_vncproxy_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,nova_vncproxy_exec_t" file types.  The default entrypoint paths for the nova_vncproxy_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/nova-vncproxy, /usr//bin/nova-xvpvncproxy
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_vncproxy policy is very flexible allowing users to setup their nova_vncproxy processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_vncproxy:
+
+.EX
+.B nova_vncproxy_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_vncproxy_t
+
+can be used to make the process type nova_vncproxy_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_vncproxy policy is very flexible allowing users to setup their nova_vncproxy processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_vncproxy:
+
+
+.EX
+.PP
+.B nova_vncproxy_exec_t
+.EE
+
+- Set files with the nova_vncproxy_exec_t type, if you want to transition an executable to the nova_vncproxy_t domain.
+
+
+.EX
+.PP
+.B nova_vncproxy_initrc_exec_t
+.EE
+
+- Set files with the nova_vncproxy_initrc_exec_t type, if you want to transition an executable to the nova_vncproxy_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_vncproxy_tmp_t
+.EE
+
+- Set files with the nova_vncproxy_tmp_t type, if you want to store nova vncproxy temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_vncproxy_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_vncproxy(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_api_selinux(8), nova_cert_selinux(8), nova_compute_selinux(8), nova_console_selinux(8), nova_direct_selinux(8), nova_network_selinux(8), nova_objectstore_selinux(8), nova_scheduler_selinux(8), nova_volume_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nova_volume_selinux.8 serefpolicy-3.7.19/man/man8/nova_volume_selinux.8
--- nsaserefpolicy/man/man8/nova_volume_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nova_volume_selinux.8	2013-03-15 11:40:02.359151915 +0100
@@ -0,0 +1,112 @@
+.TH  "nova_volume_selinux"  "8"  "13-01-04" "nova_volume" "SELinux Policy documentation for nova_volume"
+.SH "NAME"
+nova_volume_selinux \- Security Enhanced Linux Policy for the nova_volume processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nova_volume processes via flexible mandatory access control.
+
+The nova_volume processes execute with the nova_volume_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nova_volume_t
+
+
+.SH "ENTRYPOINTS"
+
+The nova_volume_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,nova_volume_exec_t" file types.  The default entrypoint paths for the nova_volume_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/nova-volume
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nova_volume policy is very flexible allowing users to setup their nova_volume processes in as secure a method as possible.
+.PP
+The following process types are defined for nova_volume:
+
+.EX
+.B nova_volume_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nova_volume_t
+
+can be used to make the process type nova_volume_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nova_volume policy is very flexible allowing users to setup their nova_volume processes in as secure a method as possible.
+.PP
+The following file types are defined for nova_volume:
+
+
+.EX
+.PP
+.B nova_volume_exec_t
+.EE
+
+- Set files with the nova_volume_exec_t type, if you want to transition an executable to the nova_volume_t domain.
+
+
+.EX
+.PP
+.B nova_volume_initrc_exec_t
+.EE
+
+- Set files with the nova_volume_initrc_exec_t type, if you want to transition an executable to the nova_volume_initrc_t domain.
+
+
+.EX
+.PP
+.B nova_volume_tmp_t
+.EE
+
+- Set files with the nova_volume_tmp_t type, if you want to store nova volume temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nova_volume_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nova_volume(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nova_ajax_selinux(8), nova_api_selinux(8), nova_cert_selinux(8), nova_compute_selinux(8), nova_console_selinux(8), nova_direct_selinux(8), nova_network_selinux(8), nova_objectstore_selinux(8), nova_scheduler_selinux(8), nova_vncproxy_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nrpe_selinux.8 serefpolicy-3.7.19/man/man8/nrpe_selinux.8
--- nsaserefpolicy/man/man8/nrpe_selinux.8	2013-03-15 11:41:11.209153486 +0100
+++ serefpolicy-3.7.19/man/man8/nrpe_selinux.8	2013-03-15 11:39:55.405151757 +0100
@@ -1,25 +1,55 @@
-.TH  "nrpe_selinux"  "8"  "nrpe" "dwalsh@redhat.com" "nrpe SELinux Policy documentation"
+.TH  "nrpe_selinux"  "8"  "13-01-04" "nrpe" "SELinux Policy documentation for nrpe"
 .SH "NAME"
 nrpe_selinux \- Security Enhanced Linux Policy for the nrpe processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the nrpe processes via flexible mandatory access control.
 
+The nrpe processes execute with the nrpe_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep nrpe_t
+
+
+.SH "ENTRYPOINTS"
+
+The nrpe_t SELinux type can be entered via the "nrpe_exec_t" file type.  The default entrypoint paths for the nrpe_t domain are the following:"
+
+/usr/s?bin/nrpe
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nrpe policy is very flexible allowing users to setup their nrpe processes in as secure a method as possible.
+.PP
+The following process types are defined for nrpe:
+
+.EX
+.B nrpe_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nrpe_t
+
+can be used to make the process type nrpe_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux nrpe policy is very flexible allowing users to setup their nrpe processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for nrpe:
 
 
 .EX
 .PP
-.B nrpe_etc_t 
+.B nrpe_etc_t
 .EE
 
 - Set files with the nrpe_etc_t type, if you want to store nrpe files in the /etc directories.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B nrpe_exec_t 
+.B nrpe_exec_t
 .EE
 
 - Set files with the nrpe_exec_t type, if you want to transition an executable to the nrpe_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B nrpe_var_run_t 
+.B nrpe_var_run_t
 .EE
 
 - Set files with the nrpe_var_run_t type, if you want to store the nrpe files under the /run directory.
@@ -43,28 +73,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux nrpe policy is very flexible allowing users to setup their nrpe processes in as secure a method as possible.
-.PP 
-The following process types are defined for nrpe:
+.SH "MANAGED FILES"
 
-.EX
-.B nrpe_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type nrpe_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nrpe_var_run_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -77,11 +147,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), nrpe(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), nrpe(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/nscd_selinux.8 serefpolicy-3.7.19/man/man8/nscd_selinux.8
--- nsaserefpolicy/man/man8/nscd_selinux.8	2013-03-15 11:41:11.771153499 +0100
+++ serefpolicy-3.7.19/man/man8/nscd_selinux.8	2013-03-15 11:39:56.422151780 +0100
@@ -1,16 +1,40 @@
-.TH  "nscd_selinux"  "8"  "nscd" "dwalsh@redhat.com" "nscd SELinux Policy documentation"
+.TH  "nscd_selinux"  "8"  "13-01-04" "nscd" "SELinux Policy documentation for nscd"
 .SH "NAME"
 nscd_selinux \- Security Enhanced Linux Policy for the nscd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the nscd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B nscd
-(Name service cache daemon)
-processes via flexible mandatory access
-control.  
+The nscd processes execute with the nscd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep nscd_t
+
+
+.SH "ENTRYPOINTS"
+
+The nscd_t SELinux type can be entered via the "nscd_exec_t" file type.  The default entrypoint paths for the nscd_t domain are the following:"
+
+/usr/sbin/nscd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nscd policy is very flexible allowing users to setup their nscd processes in as secure a method as possible.
+.PP
+The following process types are defined for nscd:
+
+.EX
+.B nscd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nscd_t
+
+can be used to make the process type nscd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  nscd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run nscd with the tightest access possible.
@@ -23,20 +47,27 @@
 .B setsebool -P nscd_use_shm 1
 .EE
 
+.PP
+If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean.
+
+.EX
+.B setsebool -P nscd_use_shm 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux nscd policy is very flexible allowing users to setup their nscd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for nscd:
 
 
 .EX
 .PP
-.B nscd_exec_t 
+.B nscd_exec_t
 .EE
 
 - Set files with the nscd_exec_t type, if you want to transition an executable to the nscd_t domain.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B nscd_initrc_exec_t 
+.B nscd_initrc_exec_t
 .EE
 
 - Set files with the nscd_initrc_exec_t type, if you want to transition an executable to the nscd_initrc_t domain.
@@ -52,7 +83,7 @@
 
 .EX
 .PP
-.B nscd_log_t 
+.B nscd_log_t
 .EE
 
 - Set files with the nscd_log_t type, if you want to treat the data as nscd log data, usually stored under the /var/log directory.
@@ -60,40 +91,96 @@
 
 .EX
 .PP
-.B nscd_var_run_t 
+.B nscd_var_run_t
 .EE
 
 - Set files with the nscd_var_run_t type, if you want to store the nscd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/nscd\.pid, /var/run/nscd(/.*)?, /var/db/nscd(/.*)?, /var/run/\.nscd_socket, /var/cache/nscd(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux nscd policy is very flexible allowing users to setup their nscd processes in as secure a method as possible.
-.PP 
-The following process types are defined for nscd:
+.SH "MANAGED FILES"
 
-.EX
-.B nscd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type nscd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nscd_log_t
+
+	/var/log/nscd\.log.*
+.br
+
+.br
+.B nscd_var_run_t
+
+	/var/db/nscd(/.*)?
+.br
+	/var/run/nscd(/.*)?
+.br
+	/var/cache/nscd(/.*)?
+.br
+	/var/run/nscd\.pid
+.br
+	/var/run/\.nscd_socket
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -109,12 +196,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), nscd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), nscd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nslcd_selinux.8 serefpolicy-3.7.19/man/man8/nslcd_selinux.8
--- nsaserefpolicy/man/man8/nslcd_selinux.8	2013-03-15 11:41:12.167153508 +0100
+++ serefpolicy-3.7.19/man/man8/nslcd_selinux.8	2013-03-15 11:40:04.440151963 +0100
@@ -1,31 +1,55 @@
-.TH  "nslcd_selinux"  "8"  "nslcd" "dwalsh@redhat.com" "nslcd SELinux Policy documentation"
+.TH  "nslcd_selinux"  "8"  "13-01-04" "nslcd" "SELinux Policy documentation for nslcd"
 .SH "NAME"
 nslcd_selinux \- Security Enhanced Linux Policy for the nslcd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the nslcd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B nslcd
-(nslcd - local LDAP name service daemon)
-processes via flexible mandatory access
-control.  
+The nslcd processes execute with the nslcd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep nslcd_t
+
+
+.SH "ENTRYPOINTS"
+
+The nslcd_t SELinux type can be entered via the "nslcd_exec_t" file type.  The default entrypoint paths for the nslcd_t domain are the following:"
+
+/usr/sbin/nslcd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nslcd policy is very flexible allowing users to setup their nslcd processes in as secure a method as possible.
+.PP
+The following process types are defined for nslcd:
+
+.EX
+.B nslcd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nslcd_t
+
+can be used to make the process type nslcd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux nslcd policy is very flexible allowing users to setup their nslcd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for nslcd:
 
 
 .EX
 .PP
-.B nslcd_conf_t 
+.B nslcd_conf_t
 .EE
 
 - Set files with the nslcd_conf_t type, if you want to treat the files as nslcd configuration data, usually stored under the /etc directory.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B nslcd_exec_t 
+.B nslcd_exec_t
 .EE
 
 - Set files with the nslcd_exec_t type, if you want to transition an executable to the nslcd_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B nslcd_initrc_exec_t 
+.B nslcd_initrc_exec_t
 .EE
 
 - Set files with the nslcd_initrc_exec_t type, if you want to transition an executable to the nslcd_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B nslcd_var_run_t 
+.B nslcd_var_run_t
 .EE
 
 - Set files with the nslcd_var_run_t type, if you want to store the nslcd files under the /run directory.
@@ -57,28 +81,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux nslcd policy is very flexible allowing users to setup their nslcd processes in as secure a method as possible.
-.PP 
-The following process types are defined for nslcd:
+.SH "MANAGED FILES"
 
-.EX
-.B nslcd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type nslcd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nslcd_var_run_t
+
+	/var/run/nslcd(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +157,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), nslcd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), nslcd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/nsplugin_config_selinux.8 serefpolicy-3.7.19/man/man8/nsplugin_config_selinux.8
--- nsaserefpolicy/man/man8/nsplugin_config_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nsplugin_config_selinux.8	2013-03-15 11:39:58.885151836 +0100
@@ -0,0 +1,180 @@
+.TH  "nsplugin_config_selinux"  "8"  "13-01-04" "nsplugin_config" "SELinux Policy documentation for nsplugin_config"
+.SH "NAME"
+nsplugin_config_selinux \- Security Enhanced Linux Policy for the nsplugin_config processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nsplugin_config processes via flexible mandatory access control.
+
+The nsplugin_config processes execute with the nsplugin_config_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nsplugin_config_t
+
+
+.SH "ENTRYPOINTS"
+
+The nsplugin_config_t SELinux type can be entered via the "nsplugin_config_exec_t" file type.  The default entrypoint paths for the nsplugin_config_t domain are the following:"
+
+/usr/lib(64)?/nspluginwrapper/plugin-config
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nsplugin_config policy is very flexible allowing users to setup their nsplugin_config processes in as secure a method as possible.
+.PP
+The following process types are defined for nsplugin_config:
+
+.EX
+.B nsplugin_config_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nsplugin_config_t
+
+can be used to make the process type nsplugin_config_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nsplugin_config policy is very flexible allowing users to setup their nsplugin_config processes in as secure a method as possible.
+.PP
+The following file types are defined for nsplugin_config:
+
+
+.EX
+.PP
+.B nsplugin_config_exec_t
+.EE
+
+- Set files with the nsplugin_config_exec_t type, if you want to transition an executable to the nsplugin_config_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nsplugin_config_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mozilla_home_t
+
+	/home/[^/]*/\.java(/.*)?
+.br
+	/home/[^/]*/\.galeon(/.*)?
+.br
+	/home/[^/]*/\.mozilla(/.*)?
+.br
+	/home/[^/]*/\.phoenix(/.*)?
+.br
+	/home/[^/]*/\.netscape(/.*)?
+.br
+	/home/[^/]*/\.thunderbird(/.*)?
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B nsplugin_home_t
+
+	/home/[^/]*/\.adobe(/.*)?
+.br
+	/home/[^/]*/\.macromedia(/.*)?
+.br
+	/home/[^/]*/\.gcjwebplugin(/.*)?
+.br
+	/home/[^/]*/\.icedteaplugin(/.*)?
+.br
+
+.br
+.B nsplugin_rw_t
+
+	/usr/lib(64)?/mozilla/plugins-wrapped(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nsplugin_config(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nsplugin_selinux(8), nsplugin_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nsplugin_selinux.8 serefpolicy-3.7.19/man/man8/nsplugin_selinux.8
--- nsaserefpolicy/man/man8/nsplugin_selinux.8	2013-03-15 11:41:11.151153485 +0100
+++ serefpolicy-3.7.19/man/man8/nsplugin_selinux.8	2013-03-15 11:39:55.397151756 +0100
@@ -1,56 +1,101 @@
-.TH  "nsplugin_selinux"  "8"  "nsplugin" "dwalsh@redhat.com" "nsplugin SELinux Policy documentation"
+.TH  "nsplugin_selinux"  "8"  "13-01-04" "nsplugin" "SELinux Policy documentation for nsplugin"
 .SH "NAME"
 nsplugin_selinux \- Security Enhanced Linux Policy for the nsplugin processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the nsplugin processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B nsplugin
-(policy for nsplugin)
-processes via flexible mandatory access
-control.  
+The nsplugin processes execute with the nsplugin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep nsplugin_t
+
+
+.SH "ENTRYPOINTS"
+
+The nsplugin_t SELinux type can be entered via the "nsplugin_exec_t" file type.  The default entrypoint paths for the nsplugin_t domain are the following:"
+
+/usr/lib(64)?/nspluginwrapper/npviewer.bin, /usr/bin/nspluginscan, /usr/bin/nspluginviewer
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nsplugin policy is very flexible allowing users to setup their nsplugin processes in as secure a method as possible.
+.PP
+The following process types are defined for nsplugin:
+
+.EX
+.B nsplugin_t, nsplugin_config_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nsplugin_t
+
+can be used to make the process type nsplugin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  nsplugin policy is extremely flexible and has several booleans that allow you to manipulate the policy and run nsplugin with the tightest access possible.
 
 
 .PP
-If you want to transition to confined nsplugin domains from unconfined use, you must turn on the allow_unconfined_nsplugin_transition boolean.
+If you want to transition to confined nsplugin domains from unconfined user, you must turn on the allow_unconfined_nsplugin_transition boolean.
 
 .EX
 .B setsebool -P allow_unconfined_nsplugin_transition 1
 .EE
 
 .PP
-If you want to allow nsplugin code to connect to unreserved port, you must turn on the nsplugin_can_network boolean.
+If you want to allow nsplugin code to connect to unreserved ports, you must turn on the nsplugin_can_network boolean.
 
 .EX
 .B setsebool -P nsplugin_can_network 1
 .EE
 
 .PP
-If you want to allow nsplugin code to execmem/execstac, you must turn on the allow_nsplugin_execmem boolean.
+If you want to allow nsplugin code to execmem/execstack, you must turn on the allow_nsplugin_execmem boolean.
+
+.EX
+.B setsebool -P allow_nsplugin_execmem 1
+.EE
+
+.PP
+If you want to transition to confined nsplugin domains from unconfined user, you must turn on the allow_unconfined_nsplugin_transition boolean.
+
+.EX
+.B setsebool -P allow_unconfined_nsplugin_transition 1
+.EE
+
+.PP
+If you want to allow nsplugin code to connect to unreserved ports, you must turn on the nsplugin_can_network boolean.
+
+.EX
+.B setsebool -P nsplugin_can_network 1
+.EE
+
+.PP
+If you want to allow nsplugin code to execmem/execstack, you must turn on the allow_nsplugin_execmem boolean.
 
 .EX
 .B setsebool -P allow_nsplugin_execmem 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux nsplugin policy is very flexible allowing users to setup their nsplugin processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for nsplugin:
 
 
 .EX
 .PP
-.B nsplugin_config_exec_t 
+.B nsplugin_config_exec_t
 .EE
 
 - Set files with the nsplugin_config_exec_t type, if you want to transition an executable to the nsplugin_config_t domain.
@@ -58,19 +103,15 @@
 
 .EX
 .PP
-.B nsplugin_exec_t 
+.B nsplugin_exec_t
 .EE
 
 - Set files with the nsplugin_exec_t type, if you want to transition an executable to the nsplugin_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/nspluginscan, /usr/lib(64)?/nspluginwrapper/npviewer.bin, /usr/bin/nspluginviewer
 
 .EX
 .PP
-.B nsplugin_home_t 
+.B nsplugin_home_t
 .EE
 
 - Set files with the nsplugin_home_t type, if you want to store nsplugin files in the users home directory.
@@ -78,7 +119,7 @@
 
 .EX
 .PP
-.B nsplugin_rw_t 
+.B nsplugin_rw_t
 .EE
 
 - Set files with the nsplugin_rw_t type, if you want to treat the files as nsplugin read/write content.
@@ -86,7 +127,7 @@
 
 .EX
 .PP
-.B nsplugin_tmp_t 
+.B nsplugin_tmp_t
 .EE
 
 - Set files with the nsplugin_tmp_t type, if you want to store nsplugin temporary files in the /tmp directories.
@@ -94,28 +135,142 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux nsplugin policy is very flexible allowing users to setup their nsplugin processes in as secure a method as possible.
-.PP 
-The following process types are defined for nsplugin:
+.SH "MANAGED FILES"
 
-.EX
-.B nsplugin_t, nsplugin_config_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type nsplugin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B gnome_home_type
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mozilla_home_t
+
+	/home/[^/]*/\.java(/.*)?
+.br
+	/home/[^/]*/\.galeon(/.*)?
+.br
+	/home/[^/]*/\.mozilla(/.*)?
+.br
+	/home/[^/]*/\.phoenix(/.*)?
+.br
+	/home/[^/]*/\.netscape(/.*)?
+.br
+	/home/[^/]*/\.thunderbird(/.*)?
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B nsplugin_home_t
+
+	/home/[^/]*/\.adobe(/.*)?
+.br
+	/home/[^/]*/\.macromedia(/.*)?
+.br
+	/home/[^/]*/\.gcjwebplugin(/.*)?
+.br
+	/home/[^/]*/\.icedteaplugin(/.*)?
+.br
+
+.br
+.B pulseaudio_home_t
+
+	/home/[^/]*/\.pulse(/.*)?
+.br
+	/home/[^/]*/\.pulse-cookie
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_fonts_config_t
+
+	/home/[^/]*/\.fonts\.d(/.*)?
+.br
+	/home/[^/]*/\.fonts\.conf
+.br
+
+.br
+.B user_fonts_t
+
+	/home/[^/]*/\.fonts(/.*)?
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -131,12 +286,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), nsplugin(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), nsplugin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), nsplugin_config_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ntop_selinux.8 serefpolicy-3.7.19/man/man8/ntop_selinux.8
--- nsaserefpolicy/man/man8/ntop_selinux.8	2013-03-15 11:41:12.173153508 +0100
+++ serefpolicy-3.7.19/man/man8/ntop_selinux.8	2013-03-15 11:40:05.172151980 +0100
@@ -1,31 +1,55 @@
-.TH  "ntop_selinux"  "8"  "ntop" "dwalsh@redhat.com" "ntop SELinux Policy documentation"
+.TH  "ntop_selinux"  "8"  "13-01-04" "ntop" "SELinux Policy documentation for ntop"
 .SH "NAME"
 ntop_selinux \- Security Enhanced Linux Policy for the ntop processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ntop processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ntop
-(Network Top)
-processes via flexible mandatory access
-control.  
+The ntop processes execute with the ntop_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ntop_t
+
+
+.SH "ENTRYPOINTS"
+
+The ntop_t SELinux type can be entered via the "ntop_exec_t" file type.  The default entrypoint paths for the ntop_t domain are the following:"
+
+/usr/bin/ntop
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
+.PP
+The following process types are defined for ntop:
+
+.EX
+.B ntop_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ntop_t
+
+can be used to make the process type ntop_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ntop:
 
 
 .EX
 .PP
-.B ntop_etc_t 
+.B ntop_etc_t
 .EE
 
 - Set files with the ntop_etc_t type, if you want to store ntop files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B ntop_exec_t 
+.B ntop_exec_t
 .EE
 
 - Set files with the ntop_exec_t type, if you want to transition an executable to the ntop_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B ntop_initrc_exec_t 
+.B ntop_initrc_exec_t
 .EE
 
 - Set files with the ntop_initrc_exec_t type, if you want to transition an executable to the ntop_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B ntop_tmp_t 
+.B ntop_tmp_t
 .EE
 
 - Set files with the ntop_tmp_t type, if you want to store ntop temporary files in the /tmp directories.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B ntop_var_lib_t 
+.B ntop_var_lib_t
 .EE
 
 - Set files with the ntop_var_lib_t type, if you want to store the ntop files under the /var/lib directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B ntop_var_run_t 
+.B ntop_var_run_t
 .EE
 
 - Set files with the ntop_var_run_t type, if you want to store the ntop files under the /run directory.
@@ -73,51 +97,105 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ntop:
 
 .EX
 .TP 5
-.B ntop_port_t 
+.B ntop_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 3000,3001
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
-.PP 
-The following process types are defined for ntop:
-
-.EX
-.B ntop_t 
+udp 3000,3001
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type ntop_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B ntop_tmp_t
+
+
+.br
+.B ntop_var_lib_t
+
+	/var/lib/ntop(/.*)?
+.br
+
+.br
+.B ntop_var_run_t
+
+	/var/run/ntop\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -133,11 +211,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ntop(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ntop(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ntpd_selinux.8 serefpolicy-3.7.19/man/man8/ntpd_selinux.8
--- nsaserefpolicy/man/man8/ntpd_selinux.8	2013-03-15 11:41:11.959153503 +0100
+++ serefpolicy-3.7.19/man/man8/ntpd_selinux.8	2013-03-15 11:40:00.730151878 +0100
@@ -1,49 +1,63 @@
-.TH  "ntpd_selinux"  "8"  "ntpd" "dwalsh@redhat.com" "ntpd SELinux Policy documentation"
+.TH  "ntpd_selinux"  "8"  "13-01-04" "ntpd" "SELinux Policy documentation for ntpd"
 .SH "NAME"
 ntpd_selinux \- Security Enhanced Linux Policy for the ntpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ntpd processes via flexible mandatory access control.
 
+The ntpd processes execute with the ntpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+.B ps -eZ | grep ntpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The ntpd_t SELinux type can be entered via the "ntpd_exec_t,ntpdate_exec_t" file types.  The default entrypoint paths for the ntpd_t domain are the following:"
+
+/etc/cron\.(daily|weekly)/ntp-simple, /etc/cron\.(daily|weekly)/ntp-server, /usr/sbin/ntpd, /usr/sbin/ntpdate
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to files.
 SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
-.PP 
-The following file types are defined for ntpd:
-
+.PP
+The following process types are defined for ntpd:
 
 .EX
-.PP
-.B ntp_drift_t 
+.B ntpd_t
 .EE
+.PP
+Note:
+.B semanage permissive -a ntpd_t
 
-- Set files with the ntp_drift_t type, if you want to treat the files as ntp drift data.
+can be used to make the process type ntpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
+.PP
+The following file types are defined for ntpd:
 
-.br
-.TP 5
-Paths: 
-/var/lib/ntp(/.*)?, /etc/ntp/data(/.*)?
 
 .EX
 .PP
-.B ntpd_exec_t 
+.B ntpd_exec_t
 .EE
 
 - Set files with the ntpd_exec_t type, if you want to transition an executable to the ntpd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/ntpd, /etc/cron\.(daily|weekly)/ntp-server, /etc/cron\.(daily|weekly)/ntp-simple
 
 .EX
 .PP
-.B ntpd_initrc_exec_t 
+.B ntpd_initrc_exec_t
 .EE
 
 - Set files with the ntpd_initrc_exec_t type, if you want to transition an executable to the ntpd_initrc_t domain.
@@ -51,31 +65,23 @@
 
 .EX
 .PP
-.B ntpd_key_t 
+.B ntpd_key_t
 .EE
 
 - Set files with the ntpd_key_t type, if you want to treat the files as ntpd key data.
 
-.br
-.TP 5
-Paths: 
-/etc/ntp/crypto(/.*)?, /etc/ntp/keys
 
 .EX
 .PP
-.B ntpd_log_t 
+.B ntpd_log_t
 .EE
 
 - Set files with the ntpd_log_t type, if you want to treat the data as ntpd log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/ntpstats(/.*)?, /var/log/xntpd.*, /var/log/ntp.*
 
 .EX
 .PP
-.B ntpd_tmp_t 
+.B ntpd_tmp_t
 .EE
 
 - Set files with the ntpd_tmp_t type, if you want to store ntpd temporary files in the /tmp directories.
@@ -83,7 +89,7 @@
 
 .EX
 .PP
-.B ntpd_tmpfs_t 
+.B ntpd_tmpfs_t
 .EE
 
 - Set files with the ntpd_tmpfs_t type, if you want to store ntpd files on a tmpfs file system.
@@ -91,7 +97,7 @@
 
 .EX
 .PP
-.B ntpd_var_run_t 
+.B ntpd_var_run_t
 .EE
 
 - Set files with the ntpd_var_run_t type, if you want to store the ntpd files under the /run directory.
@@ -99,7 +105,7 @@
 
 .EX
 .PP
-.B ntpdate_exec_t 
+.B ntpdate_exec_t
 .EE
 
 - Set files with the ntpdate_exec_t type, if you want to transition an executable to the ntpdate_t domain.
@@ -107,51 +113,129 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ntpd:
 
 .EX
 .TP 5
-.B ntp_port_t 
+.B ntp_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 123
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for ntpd:
+.SH "MANAGED FILES"
 
-.EX
-.B ntpd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ntpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B gpsd_tmpfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B ntp_drift_t
+
+	/var/lib/ntp(/.*)?
+.br
+	/etc/ntp/data(/.*)?
+.br
+
+.br
+.B ntpd_log_t
+
+	/var/log/ntp.*
+.br
+	/var/log/xntpd.*
+.br
+	/var/log/ntpstats(/.*)?
+.br
+
+.br
+.B ntpd_tmp_t
+
+
+.br
+.B ntpd_tmpfs_t
+
+
+.br
+.B ntpd_var_run_t
+
+	/var/run/ntpd\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B tmpfs_t
+
+	/dev/shm
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -167,11 +251,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ntpd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ntpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/numad_selinux.8 serefpolicy-3.7.19/man/man8/numad_selinux.8
--- nsaserefpolicy/man/man8/numad_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/numad_selinux.8	2013-03-15 11:39:54.020151725 +0100
@@ -0,0 +1,111 @@
+.TH  "numad_selinux"  "8"  "13-01-04" "numad" "SELinux Policy documentation for numad"
+.SH "NAME"
+numad_selinux \- Security Enhanced Linux Policy for the numad processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the numad processes via flexible mandatory access control.
+
+The numad processes execute with the numad_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep numad_t
+
+
+.SH "ENTRYPOINTS"
+
+The numad_t SELinux type can be entered via the "mtrr_device_t,numad_exec_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the numad_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/numad, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux numad policy is very flexible allowing users to setup their numad processes in as secure a method as possible.
+.PP
+The following process types are defined for numad:
+
+.EX
+.B numad_t
+.EE
+.PP
+Note:
+.B semanage permissive -a numad_t
+
+can be used to make the process type numad_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux numad policy is very flexible allowing users to setup their numad processes in as secure a method as possible.
+.PP
+The following file types are defined for numad:
+
+
+.EX
+.PP
+.B numad_exec_t
+.EE
+
+- Set files with the numad_exec_t type, if you want to transition an executable to the numad_t domain.
+
+
+.EX
+.PP
+.B numad_var_log_t
+.EE
+
+- Set files with the numad_var_log_t type, if you want to treat the data as numad var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B numad_var_run_t
+.EE
+
+- Set files with the numad_var_run_t type, if you want to store the numad files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type numad_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), numad(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/nut_upsdrvctl_selinux.8 serefpolicy-3.7.19/man/man8/nut_upsdrvctl_selinux.8
--- nsaserefpolicy/man/man8/nut_upsdrvctl_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nut_upsdrvctl_selinux.8	2013-03-15 11:40:05.414151985 +0100
@@ -0,0 +1,146 @@
+.TH  "nut_upsdrvctl_selinux"  "8"  "13-01-04" "nut_upsdrvctl" "SELinux Policy documentation for nut_upsdrvctl"
+.SH "NAME"
+nut_upsdrvctl_selinux \- Security Enhanced Linux Policy for the nut_upsdrvctl processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nut_upsdrvctl processes via flexible mandatory access control.
+
+The nut_upsdrvctl processes execute with the nut_upsdrvctl_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nut_upsdrvctl_t
+
+
+.SH "ENTRYPOINTS"
+
+The nut_upsdrvctl_t SELinux type can be entered via the "nut_upsdrvctl_exec_t" file type.  The default entrypoint paths for the nut_upsdrvctl_t domain are the following:"
+
+/sbin/upsdrvctl
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nut_upsdrvctl policy is very flexible allowing users to setup their nut_upsdrvctl processes in as secure a method as possible.
+.PP
+The following process types are defined for nut_upsdrvctl:
+
+.EX
+.B nut_upsdrvctl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nut_upsdrvctl_t
+
+can be used to make the process type nut_upsdrvctl_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nut_upsdrvctl policy is very flexible allowing users to setup their nut_upsdrvctl processes in as secure a method as possible.
+.PP
+The following file types are defined for nut_upsdrvctl:
+
+
+.EX
+.PP
+.B nut_upsdrvctl_exec_t
+.EE
+
+- Set files with the nut_upsdrvctl_exec_t type, if you want to transition an executable to the nut_upsdrvctl_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nut_upsdrvctl_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nut_var_run_t
+
+	/var/run/nut(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nut_upsdrvctl(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nut_upsd_selinux(8), nut_upsd_selinux(8), nut_upsmon_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nut_upsd_selinux.8 serefpolicy-3.7.19/man/man8/nut_upsd_selinux.8
--- nsaserefpolicy/man/man8/nut_upsd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nut_upsd_selinux.8	2013-03-15 11:40:04.908151973 +0100
@@ -0,0 +1,154 @@
+.TH  "nut_upsd_selinux"  "8"  "13-01-04" "nut_upsd" "SELinux Policy documentation for nut_upsd"
+.SH "NAME"
+nut_upsd_selinux \- Security Enhanced Linux Policy for the nut_upsd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nut_upsd processes via flexible mandatory access control.
+
+The nut_upsd processes execute with the nut_upsd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nut_upsd_t
+
+
+.SH "ENTRYPOINTS"
+
+The nut_upsd_t SELinux type can be entered via the "nut_upsd_exec_t" file type.  The default entrypoint paths for the nut_upsd_t domain are the following:"
+
+/usr/sbin/upsd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nut_upsd policy is very flexible allowing users to setup their nut_upsd processes in as secure a method as possible.
+.PP
+The following process types are defined for nut_upsd:
+
+.EX
+.B nut_upsd_t, nut_upsmon_t, nut_upsdrvctl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nut_upsd_t
+
+can be used to make the process type nut_upsd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nut_upsd policy is very flexible allowing users to setup their nut_upsd processes in as secure a method as possible.
+.PP
+The following file types are defined for nut_upsd:
+
+
+.EX
+.PP
+.B nut_upsd_exec_t
+.EE
+
+- Set files with the nut_upsd_exec_t type, if you want to transition an executable to the nut_upsd_t domain.
+
+
+.EX
+.PP
+.B nut_upsdrvctl_exec_t
+.EE
+
+- Set files with the nut_upsdrvctl_exec_t type, if you want to transition an executable to the nut_upsdrvctl_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nut_upsd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nut_var_run_t
+
+	/var/run/nut(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nut_upsd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nut_upsdrvctl_selinux(8), nut_upsmon_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nut_upsmon_selinux.8 serefpolicy-3.7.19/man/man8/nut_upsmon_selinux.8
--- nsaserefpolicy/man/man8/nut_upsmon_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/nut_upsmon_selinux.8	2013-03-15 11:40:06.877152018 +0100
@@ -0,0 +1,224 @@
+.TH  "nut_upsmon_selinux"  "8"  "13-01-04" "nut_upsmon" "SELinux Policy documentation for nut_upsmon"
+.SH "NAME"
+nut_upsmon_selinux \- Security Enhanced Linux Policy for the nut_upsmon processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the nut_upsmon processes via flexible mandatory access control.
+
+The nut_upsmon processes execute with the nut_upsmon_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep nut_upsmon_t
+
+
+.SH "ENTRYPOINTS"
+
+The nut_upsmon_t SELinux type can be entered via the "nut_upsmon_exec_t" file type.  The default entrypoint paths for the nut_upsmon_t domain are the following:"
+
+/usr/sbin/upsmon
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux nut_upsmon policy is very flexible allowing users to setup their nut_upsmon processes in as secure a method as possible.
+.PP
+The following process types are defined for nut_upsmon:
+
+.EX
+.B nut_upsmon_t
+.EE
+.PP
+Note:
+.B semanage permissive -a nut_upsmon_t
+
+can be used to make the process type nut_upsmon_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux nut_upsmon policy is very flexible allowing users to setup their nut_upsmon processes in as secure a method as possible.
+.PP
+The following file types are defined for nut_upsmon:
+
+
+.EX
+.PP
+.B nut_upsmon_exec_t
+.EE
+
+- Set files with the nut_upsmon_exec_t type, if you want to transition an executable to the nut_upsmon_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type nut_upsmon_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nut_var_run_t
+
+	/var/run/nut(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), nut_upsmon(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, nut_upsd_selinux(8), nut_upsdrvctl_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/nx_server_selinux.8 serefpolicy-3.7.19/man/man8/nx_server_selinux.8
--- nsaserefpolicy/man/man8/nx_server_selinux.8	2013-03-15 11:41:12.224153509 +0100
+++ serefpolicy-3.7.19/man/man8/nx_server_selinux.8	2013-03-15 11:40:06.753152016 +0100
@@ -1,56 +1,159 @@
 .TH  "nx_server_selinux"  "8"  "nx_server" "mgrepl@redhat.com" "nx_server SELinux Policy documentation"
 .SH "NAME"
-nx_server_r \- \fBnx_server user role\fP - Security Enhanced Linux Policy 
+nx_server_r \- \fBnx_server user role\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
-SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+SELinux supports Roles Based Access Control (RBAC), some Linux roles are login roles, while other roles need to be transition into.
 
-Note: The examples in the man page will user the staff_u user.
+.I Note:
+Examples in this man page will use the
+.B staff_u
+SELinux user.
 
-Non login roles are usually used for administrative tasks.
-
-Roles usually have default types assigned to them. 
+Non login roles are usually used for administrative tasks. For example, tasks that require root privileges.  Roles control which types a user can run processes with. Roles often have default types assigned to them.
 
 The default type for the nx_server_r role is nx_server_t.
 
-You can use the 
-.B newrole 
+The
+.B newrole
 program to transition directly to this role.
 
 .B newrole -r nx_server_r -t nx_server_t
 
-.B sudo 
-can also be setup to transition to this role using the visudo command.
+.B sudo
+is the preferred method to do transition from one role to another.  You setup sudo to transition to nx_server_r by adding a similar line to the /etc/sudoers file.
 
 USERNAME ALL=(ALL) ROLE=nx_server_r TYPE=nx_server_t COMMAND
+
 .br
 sudo will run COMMAND as staff_u:nx_server_r:nx_server_t:LEVEL
 
-If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+When using a a non login role, you need to setup SELinux so that your SELinux user can reach nx_server_r role.
 
-You can see all of the assigned SELinux roles using the following
+Execute the following to see all of the assigned SELinux roles:
 
 .B semanage user -l
 
-If you wanted to add nx_server_r to the staff_u user, you would execute:
+You need to add nx_server_r to the staff_u user.  You could setup the staff_u user to be able to use the nx_server_r role with a command like:
 
-.B $ semanage user -m -R 'staff_r nx_server_r' staff_u 
+.B $ semanage user -m -R 'staff_r system_r nx_server_r' staff_u
 
 
-.SH "COMMANDS"
+.SH "MANAGED FILES"
+
+The SELinux process type nx_server_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nx_server_home_ssh_t
+
+	/opt/NX/home/nx/\.ssh(/.*)?
+.br
+	/usr/NX/home/nx/\.ssh(/.*)?
+.br
+	/var/lib/nxserver/home/.ssh(/.*)?
+.br
+
+.br
+.B nx_server_tmp_t
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
+.br
+.B nx_server_var_lib_t
+
+	/opt/NX/home(/.*)?
+.br
+	/usr/NX/home(/.*)?
+.br
+	/var/lib/nxserver(/.*)?
+.br
+
+.br
+.B nx_server_var_run_t
+
+	/opt/NX/var(/.*)?
+.br
+
+.br
+.B ssh_home_t
+
+	/root/\.ssh(/.*)?
+.br
+	/var/lib/gitolite(3)?/\.ssh(/.*)?
+.br
+	/var/lib/openshift/[^/]+/\.ssh(/.*)?
+.br
+	/var/lib/amanda/\.ssh(/.*)?
+.br
+	/var/lib/stickshift/[^/]+/\.ssh(/.*)?
+.br
+	/root/\.shosts
+.br
+	/home/[^/]*/\.ssh(/.*)?
+.br
+	/home/[^/]*/\.shosts
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
 
-.B system-config-selinux 
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), nx_server(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/oddjob_mkhomedir_selinux.8 serefpolicy-3.7.19/man/man8/oddjob_mkhomedir_selinux.8
--- nsaserefpolicy/man/man8/oddjob_mkhomedir_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/oddjob_mkhomedir_selinux.8	2013-03-15 11:39:56.350151778 +0100
@@ -0,0 +1,146 @@
+.TH  "oddjob_mkhomedir_selinux"  "8"  "13-01-04" "oddjob_mkhomedir" "SELinux Policy documentation for oddjob_mkhomedir"
+.SH "NAME"
+oddjob_mkhomedir_selinux \- Security Enhanced Linux Policy for the oddjob_mkhomedir processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the oddjob_mkhomedir processes via flexible mandatory access control.
+
+The oddjob_mkhomedir processes execute with the oddjob_mkhomedir_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep oddjob_mkhomedir_t
+
+
+.SH "ENTRYPOINTS"
+
+The oddjob_mkhomedir_t SELinux type can be entered via the "oddjob_mkhomedir_exec_t" file type.  The default entrypoint paths for the oddjob_mkhomedir_t domain are the following:"
+
+/usr/lib(64)?/oddjob/mkhomedir, /usr/libexec/oddjob/mkhomedir
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux oddjob_mkhomedir policy is very flexible allowing users to setup their oddjob_mkhomedir processes in as secure a method as possible.
+.PP
+The following process types are defined for oddjob_mkhomedir:
+
+.EX
+.B oddjob_mkhomedir_t
+.EE
+.PP
+Note:
+.B semanage permissive -a oddjob_mkhomedir_t
+
+can be used to make the process type oddjob_mkhomedir_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux oddjob_mkhomedir policy is very flexible allowing users to setup their oddjob_mkhomedir processes in as secure a method as possible.
+.PP
+The following file types are defined for oddjob_mkhomedir:
+
+
+.EX
+.PP
+.B oddjob_mkhomedir_exec_t
+.EE
+
+- Set files with the oddjob_mkhomedir_exec_t type, if you want to transition an executable to the oddjob_mkhomedir_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type oddjob_mkhomedir_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_type
+
+	all user home files
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), oddjob_mkhomedir(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, oddjob_selinux(8), oddjob_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/oddjob_selinux.8 serefpolicy-3.7.19/man/man8/oddjob_selinux.8
--- nsaserefpolicy/man/man8/oddjob_selinux.8	2013-03-15 11:41:11.469153492 +0100
+++ serefpolicy-3.7.19/man/man8/oddjob_selinux.8	2013-03-15 11:39:55.602151761 +0100
@@ -1,35 +1,55 @@
-.TH  "oddjob_selinux"  "8"  "oddjob" "dwalsh@redhat.com" "oddjob SELinux Policy documentation"
+.TH  "oddjob_selinux"  "8"  "13-01-04" "oddjob" "SELinux Policy documentation for oddjob"
 .SH "NAME"
 oddjob_selinux \- Security Enhanced Linux Policy for the oddjob processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the oddjob processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B oddjob
-(
-Oddjob provides a mechanism by which unprivileged applications can
-request that specified privileged operations be performed on their
-behalf.
-)
-processes via flexible mandatory access
-control.  
+The oddjob processes execute with the oddjob_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep oddjob_t
+
+
+.SH "ENTRYPOINTS"
+
+The oddjob_t SELinux type can be entered via the "oddjob_exec_t" file type.  The default entrypoint paths for the oddjob_t domain are the following:"
+
+/usr/sbin/oddjobd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux oddjob policy is very flexible allowing users to setup their oddjob processes in as secure a method as possible.
+.PP
+The following process types are defined for oddjob:
+
+.EX
+.B oddjob_mkhomedir_t, oddjob_t
+.EE
+.PP
+Note:
+.B semanage permissive -a oddjob_t
+
+can be used to make the process type oddjob_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux oddjob policy is very flexible allowing users to setup their oddjob processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for oddjob:
 
 
 .EX
 .PP
-.B oddjob_exec_t 
+.B oddjob_exec_t
 .EE
 
 - Set files with the oddjob_exec_t type, if you want to transition an executable to the oddjob_t domain.
@@ -37,19 +57,15 @@
 
 .EX
 .PP
-.B oddjob_mkhomedir_exec_t 
+.B oddjob_mkhomedir_exec_t
 .EE
 
 - Set files with the oddjob_mkhomedir_exec_t type, if you want to transition an executable to the oddjob_mkhomedir_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/oddjob/mkhomedir, /usr/libexec/oddjob/mkhomedir
 
 .EX
 .PP
-.B oddjob_var_run_t 
+.B oddjob_var_run_t
 .EE
 
 - Set files with the oddjob_var_run_t type, if you want to store the oddjob files under the /run directory.
@@ -57,28 +73,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux oddjob policy is very flexible allowing users to setup their oddjob processes in as secure a method as possible.
-.PP 
-The following process types are defined for oddjob:
+.SH "MANAGED FILES"
 
-.EX
-.B oddjob_mkhomedir_t, oddjob_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type oddjob_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B oddjob_var_run_t
+
+	/var/run/oddjobd\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +153,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), oddjob(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), oddjob(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, oddjob_mkhomedir_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/openct_selinux.8 serefpolicy-3.7.19/man/man8/openct_selinux.8
--- nsaserefpolicy/man/man8/openct_selinux.8	2013-03-15 11:41:11.786153499 +0100
+++ serefpolicy-3.7.19/man/man8/openct_selinux.8	2013-03-15 11:39:57.280151799 +0100
@@ -1,43 +1,63 @@
-.TH  "openct_selinux"  "8"  "openct" "dwalsh@redhat.com" "openct SELinux Policy documentation"
+.TH  "openct_selinux"  "8"  "13-01-04" "openct" "SELinux Policy documentation for openct"
 .SH "NAME"
 openct_selinux \- Security Enhanced Linux Policy for the openct processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the openct processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B openct
-(Service for handling smart card readers)
-processes via flexible mandatory access
-control.  
+The openct processes execute with the openct_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep openct_t
+
+
+.SH "ENTRYPOINTS"
+
+The openct_t SELinux type can be entered via the "openct_exec_t" file type.  The default entrypoint paths for the openct_t domain are the following:"
+
+/usr/sbin/ifdhandler, /usr/sbin/openct-control
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux openct policy is very flexible allowing users to setup their openct processes in as secure a method as possible.
+.PP
+The following process types are defined for openct:
+
+.EX
+.B openct_t
+.EE
+.PP
+Note:
+.B semanage permissive -a openct_t
+
+can be used to make the process type openct_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux openct policy is very flexible allowing users to setup their openct processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for openct:
 
 
 .EX
 .PP
-.B openct_exec_t 
+.B openct_exec_t
 .EE
 
 - Set files with the openct_exec_t type, if you want to transition an executable to the openct_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/ifdhandler, /usr/sbin/openct-control
 
 .EX
 .PP
-.B openct_var_run_t 
+.B openct_var_run_t
 .EE
 
 - Set files with the openct_var_run_t type, if you want to store the openct files under the /run directory.
@@ -45,28 +65,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux openct policy is very flexible allowing users to setup their openct processes in as secure a method as possible.
-.PP 
-The following process types are defined for openct:
+.SH "MANAGED FILES"
+
+The SELinux process type openct_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B openct_var_run_t
+
+	/var/run/openct(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
 
-.EX
-.B openct_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -79,11 +145,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), openct(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), openct(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/openoffice_selinux.8 serefpolicy-3.7.19/man/man8/openoffice_selinux.8
--- nsaserefpolicy/man/man8/openoffice_selinux.8	2013-03-15 11:41:12.192153509 +0100
+++ serefpolicy-3.7.19/man/man8/openoffice_selinux.8	2013-03-15 11:40:06.250152004 +0100
@@ -1,64 +1,112 @@
-.TH  "openoffice_selinux"  "8"  "openoffice" "dwalsh@redhat.com" "openoffice SELinux Policy documentation"
+.TH  "openoffice_selinux"  "8"  "13-01-04" "openoffice" "SELinux Policy documentation for openoffice"
 .SH "NAME"
 openoffice_selinux \- Security Enhanced Linux Policy for the openoffice processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the openoffice processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B openoffice
-(Openoffice)
-processes via flexible mandatory access
-control.  
+The openoffice processes execute with the openoffice_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep openoffice_t
+
+
+.SH "ENTRYPOINTS"
+
+The openoffice_t SELinux type can be entered via the "openoffice_exec_t" file type.  The default entrypoint paths for the openoffice_t domain are the following:"
+
+/opt/openoffice\.org.*/program/.+\.bin, /usr/lib/openoffice\.org.*/program/.+\.bin, /usr/lib64/openoffice\.org.*/program/.+\.bin
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux openoffice policy is very flexible allowing users to setup their openoffice processes in as secure a method as possible.
+.PP
+The following process types are defined for openoffice:
+
+.EX
+.B openoffice_t
+.EE
+.PP
+Note:
+.B semanage permissive -a openoffice_t
+
+can be used to make the process type openoffice_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux openoffice policy is very flexible allowing users to setup their openoffice processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for openoffice:
 
 
 .EX
 .PP
-.B openoffice_exec_t 
+.B openoffice_exec_t
 .EE
 
 - Set files with the openoffice_exec_t type, if you want to transition an executable to the openoffice_t domain.
 
-.br
-.TP 5
-Paths: 
-/opt/openoffice\.org.*/program/.+\.bin, /usr/lib64/openoffice\.org.*/program/.+\.bin, /usr/lib/openoffice\.org.*/program/.+\.bin
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux openoffice policy is very flexible allowing users to setup their openoffice processes in as secure a method as possible.
-.PP 
-The following process types are defined for openoffice:
+.SH "MANAGED FILES"
 
-.EX
-.B openoffice_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type openoffice_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -71,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), openoffice(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), openoffice(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/openshift_cgroup_read_selinux.8 serefpolicy-3.7.19/man/man8/openshift_cgroup_read_selinux.8
--- nsaserefpolicy/man/man8/openshift_cgroup_read_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/openshift_cgroup_read_selinux.8	2013-03-15 11:39:54.059151726 +0100
@@ -0,0 +1,132 @@
+.TH  "openshift_cgroup_read_selinux"  "8"  "13-01-04" "openshift_cgroup_read" "SELinux Policy documentation for openshift_cgroup_read"
+.SH "NAME"
+openshift_cgroup_read_selinux \- Security Enhanced Linux Policy for the openshift_cgroup_read processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the openshift_cgroup_read processes via flexible mandatory access control.
+
+The openshift_cgroup_read processes execute with the openshift_cgroup_read_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep openshift_cgroup_read_t
+
+
+.SH "ENTRYPOINTS"
+
+The openshift_cgroup_read_t SELinux type can be entered via the "openshift_cgroup_read_exec_t" file type.  The default entrypoint paths for the openshift_cgroup_read_t domain are the following:"
+
+/usr/s?bin/(oo|rhc)-cgroup-read
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux openshift_cgroup_read policy is very flexible allowing users to setup their openshift_cgroup_read processes in as secure a method as possible.
+.PP
+The following process types are defined for openshift_cgroup_read:
+
+.EX
+.B openshift_cgroup_read_t
+.EE
+.PP
+Note:
+.B semanage permissive -a openshift_cgroup_read_t
+
+can be used to make the process type openshift_cgroup_read_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux openshift_cgroup_read policy is very flexible allowing users to setup their openshift_cgroup_read processes in as secure a method as possible.
+.PP
+The following file types are defined for openshift_cgroup_read:
+
+
+.EX
+.PP
+.B openshift_cgroup_read_exec_t
+.EE
+
+- Set files with the openshift_cgroup_read_exec_t type, if you want to transition an executable to the openshift_cgroup_read_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type openshift_cgroup_read_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), openshift_cgroup_read(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, openshift_initrc_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/openshift_initrc_selinux.8 serefpolicy-3.7.19/man/man8/openshift_initrc_selinux.8
--- nsaserefpolicy/man/man8/openshift_initrc_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/openshift_initrc_selinux.8	2013-03-15 11:39:55.811151766 +0100
@@ -0,0 +1,104 @@
+.TH  "openshift_initrc_selinux"  "8"  "13-01-04" "openshift_initrc" "SELinux Policy documentation for openshift_initrc"
+.SH "NAME"
+openshift_initrc_selinux \- Security Enhanced Linux Policy for the openshift_initrc processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the openshift_initrc processes via flexible mandatory access control.
+
+The openshift_initrc processes execute with the openshift_initrc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep openshift_initrc_t
+
+
+.SH "ENTRYPOINTS"
+
+The openshift_initrc_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,openshift_initrc_exec_t" file types.  The default entrypoint paths for the openshift_initrc_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/s?bin/mcollectived, /usr/s?bin/(oo|rhc)-restorer, /usr/s?bin/(oo|rhc)-admin-ctl-gears, /etc/rc\.d/init\.d/libra, /etc/rc\.d/init\.d/mcollective
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux openshift_initrc policy is very flexible allowing users to setup their openshift_initrc processes in as secure a method as possible.
+.PP
+The following process types are defined for openshift_initrc:
+
+.EX
+.B openshift_initrc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a openshift_initrc_t
+
+can be used to make the process type openshift_initrc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux openshift_initrc policy is very flexible allowing users to setup their openshift_initrc processes in as secure a method as possible.
+.PP
+The following file types are defined for openshift_initrc:
+
+
+.EX
+.PP
+.B openshift_initrc_exec_t
+.EE
+
+- Set files with the openshift_initrc_exec_t type, if you want to transition an executable to the openshift_initrc_t domain.
+
+
+.EX
+.PP
+.B openshift_initrc_tmp_t
+.EE
+
+- Set files with the openshift_initrc_tmp_t type, if you want to store openshift initrc temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type openshift_initrc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), openshift_initrc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, openshift_cgroup_read_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/openvpn_selinux.8 serefpolicy-3.7.19/man/man8/openvpn_selinux.8
--- nsaserefpolicy/man/man8/openvpn_selinux.8	2013-03-15 11:41:12.229153510 +0100
+++ serefpolicy-3.7.19/man/man8/openvpn_selinux.8	2013-03-15 11:40:07.070152023 +0100
@@ -1,42 +1,73 @@
-.TH  "openvpn_selinux"  "8"  "openvpn" "dwalsh@redhat.com" "openvpn SELinux Policy documentation"
+.TH  "openvpn_selinux"  "8"  "13-01-04" "openvpn" "SELinux Policy documentation for openvpn"
 .SH "NAME"
 openvpn_selinux \- Security Enhanced Linux Policy for the openvpn processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the openvpn processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B openvpn
-(full-featured SSL VPN solution)
-processes via flexible mandatory access
-control.  
+The openvpn processes execute with the openvpn_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep openvpn_t
+
+
+.SH "ENTRYPOINTS"
+
+The openvpn_t SELinux type can be entered via the "openvpn_exec_t" file type.  The default entrypoint paths for the openvpn_t domain are the following:"
+
+/usr/sbin/openvpn
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
+.PP
+The following process types are defined for openvpn:
+
+.EX
+.B openvpn_t
+.EE
+.PP
+Note:
+.B semanage permissive -a openvpn_t
+
+can be used to make the process type openvpn_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  openvpn policy is extremely flexible and has several booleans that allow you to manipulate the policy and run openvpn with the tightest access possible.
 
 
 .PP
-If you want to allow openvpn to read home directorie, you must turn on the openvpn_enable_homedirs boolean.
+If you want to allow openvpn to read home directories, you must turn on the openvpn_enable_homedirs boolean.
+
+.EX
+.B setsebool -P openvpn_enable_homedirs 1
+.EE
+
+.PP
+If you want to allow openvpn to read home directories, you must turn on the openvpn_enable_homedirs boolean.
 
 .EX
 .B setsebool -P openvpn_enable_homedirs 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for openvpn:
 
 
 .EX
 .PP
-.B openvpn_etc_rw_t 
+.B openvpn_etc_rw_t
 .EE
 
 - Set files with the openvpn_etc_rw_t type, if you want to treat the files as openvpn etc read/write content.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B openvpn_etc_t 
+.B openvpn_etc_t
 .EE
 
 - Set files with the openvpn_etc_t type, if you want to store openvpn files in the /etc directories.
@@ -52,7 +83,7 @@
 
 .EX
 .PP
-.B openvpn_exec_t 
+.B openvpn_exec_t
 .EE
 
 - Set files with the openvpn_exec_t type, if you want to transition an executable to the openvpn_t domain.
@@ -60,7 +91,7 @@
 
 .EX
 .PP
-.B openvpn_initrc_exec_t 
+.B openvpn_initrc_exec_t
 .EE
 
 - Set files with the openvpn_initrc_exec_t type, if you want to transition an executable to the openvpn_initrc_t domain.
@@ -68,7 +99,7 @@
 
 .EX
 .PP
-.B openvpn_tmp_t 
+.B openvpn_tmp_t
 .EE
 
 - Set files with the openvpn_tmp_t type, if you want to store openvpn temporary files in the /tmp directories.
@@ -76,7 +107,7 @@
 
 .EX
 .PP
-.B openvpn_var_log_t 
+.B openvpn_var_log_t
 .EE
 
 - Set files with the openvpn_var_log_t type, if you want to treat the data as openvpn var log data, usually stored under the /var/log directory.
@@ -84,7 +115,7 @@
 
 .EX
 .PP
-.B openvpn_var_run_t 
+.B openvpn_var_run_t
 .EE
 
 - Set files with the openvpn_var_run_t type, if you want to store the openvpn files under the /run directory.
@@ -92,51 +123,181 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for openvpn:
 
 .EX
 .TP 5
-.B openvpn_port_t 
+.B openvpn_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 1194
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
-.PP 
-The following process types are defined for openvpn:
-
-.EX
-.B openvpn_t 
+udp 1194
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type openvpn_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B openvpn_etc_rw_t
+
+	/etc/openvpn/ipp.txt
+.br
+
+.br
+.B openvpn_tmp_t
+
+
+.br
+.B openvpn_var_log_t
+
+	/var/log/openvpn.*
+.br
+
+.br
+.B openvpn_var_run_t
+
+	/var/run/openvpn(/.*)?
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -155,12 +316,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), openvpn(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), openvpn(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/openvswitch_ovsdb_server_selinux.8 serefpolicy-3.7.19/man/man8/openvswitch_ovsdb_server_selinux.8
--- nsaserefpolicy/man/man8/openvswitch_ovsdb_server_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/openvswitch_ovsdb_server_selinux.8	2013-03-15 11:39:54.111151727 +0100
@@ -0,0 +1,96 @@
+.TH  "openvswitch_ovsdb_server_selinux"  "8"  "13-01-04" "openvswitch_ovsdb_server" "SELinux Policy documentation for openvswitch_ovsdb_server"
+.SH "NAME"
+openvswitch_ovsdb_server_selinux \- Security Enhanced Linux Policy for the openvswitch_ovsdb_server processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the openvswitch_ovsdb_server processes via flexible mandatory access control.
+
+The openvswitch_ovsdb_server processes execute with the openvswitch_ovsdb_server_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep openvswitch_ovsdb_server_t
+
+
+.SH "ENTRYPOINTS"
+
+The openvswitch_ovsdb_server_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,openvswitch_ovsdb_server_exec_t" file types.  The default entrypoint paths for the openvswitch_ovsdb_server_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/ovsdb-server
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux openvswitch_ovsdb_server policy is very flexible allowing users to setup their openvswitch_ovsdb_server processes in as secure a method as possible.
+.PP
+The following process types are defined for openvswitch_ovsdb_server:
+
+.EX
+.B openvswitch_ovsdb_server_t
+.EE
+.PP
+Note:
+.B semanage permissive -a openvswitch_ovsdb_server_t
+
+can be used to make the process type openvswitch_ovsdb_server_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux openvswitch_ovsdb_server policy is very flexible allowing users to setup their openvswitch_ovsdb_server processes in as secure a method as possible.
+.PP
+The following file types are defined for openvswitch_ovsdb_server:
+
+
+.EX
+.PP
+.B openvswitch_ovsdb_server_exec_t
+.EE
+
+- Set files with the openvswitch_ovsdb_server_exec_t type, if you want to transition an executable to the openvswitch_ovsdb_server_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type openvswitch_ovsdb_server_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), openvswitch_ovsdb_server(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, openvswitch_ovsv_switchd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/openvswitch_ovsv_switchd_selinux.8 serefpolicy-3.7.19/man/man8/openvswitch_ovsv_switchd_selinux.8
--- nsaserefpolicy/man/man8/openvswitch_ovsv_switchd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/openvswitch_ovsv_switchd_selinux.8	2013-03-15 11:40:00.267151868 +0100
@@ -0,0 +1,96 @@
+.TH  "openvswitch_ovsv_switchd_selinux"  "8"  "13-01-04" "openvswitch_ovsv_switchd" "SELinux Policy documentation for openvswitch_ovsv_switchd"
+.SH "NAME"
+openvswitch_ovsv_switchd_selinux \- Security Enhanced Linux Policy for the openvswitch_ovsv_switchd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the openvswitch_ovsv_switchd processes via flexible mandatory access control.
+
+The openvswitch_ovsv_switchd processes execute with the openvswitch_ovsv_switchd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep openvswitch_ovsv_switchd_t
+
+
+.SH "ENTRYPOINTS"
+
+The openvswitch_ovsv_switchd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,openvswitch_ovsv_switchd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the openvswitch_ovsv_switchd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/ovs-vswitchd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux openvswitch_ovsv_switchd policy is very flexible allowing users to setup their openvswitch_ovsv_switchd processes in as secure a method as possible.
+.PP
+The following process types are defined for openvswitch_ovsv_switchd:
+
+.EX
+.B openvswitch_ovsv_switchd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a openvswitch_ovsv_switchd_t
+
+can be used to make the process type openvswitch_ovsv_switchd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux openvswitch_ovsv_switchd policy is very flexible allowing users to setup their openvswitch_ovsv_switchd processes in as secure a method as possible.
+.PP
+The following file types are defined for openvswitch_ovsv_switchd:
+
+
+.EX
+.PP
+.B openvswitch_ovsv_switchd_exec_t
+.EE
+
+- Set files with the openvswitch_ovsv_switchd_exec_t type, if you want to transition an executable to the openvswitch_ovsv_switchd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type openvswitch_ovsv_switchd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), openvswitch_ovsv_switchd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, openvswitch_ovsdb_server_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/pacemaker_selinux.8 serefpolicy-3.7.19/man/man8/pacemaker_selinux.8
--- nsaserefpolicy/man/man8/pacemaker_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/pacemaker_selinux.8	2013-03-15 11:40:06.309152005 +0100
@@ -0,0 +1,119 @@
+.TH  "pacemaker_selinux"  "8"  "13-01-04" "pacemaker" "SELinux Policy documentation for pacemaker"
+.SH "NAME"
+pacemaker_selinux \- Security Enhanced Linux Policy for the pacemaker processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the pacemaker processes via flexible mandatory access control.
+
+The pacemaker processes execute with the pacemaker_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep pacemaker_t
+
+
+.SH "ENTRYPOINTS"
+
+The pacemaker_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,pacemaker_exec_t" file types.  The default entrypoint paths for the pacemaker_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/pacemakerd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pacemaker policy is very flexible allowing users to setup their pacemaker processes in as secure a method as possible.
+.PP
+The following process types are defined for pacemaker:
+
+.EX
+.B pacemaker_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pacemaker_t
+
+can be used to make the process type pacemaker_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux pacemaker policy is very flexible allowing users to setup their pacemaker processes in as secure a method as possible.
+.PP
+The following file types are defined for pacemaker:
+
+
+.EX
+.PP
+.B pacemaker_exec_t
+.EE
+
+- Set files with the pacemaker_exec_t type, if you want to transition an executable to the pacemaker_t domain.
+
+
+.EX
+.PP
+.B pacemaker_initrc_exec_t
+.EE
+
+- Set files with the pacemaker_initrc_exec_t type, if you want to transition an executable to the pacemaker_initrc_t domain.
+
+
+.EX
+.PP
+.B pacemaker_var_lib_t
+.EE
+
+- Set files with the pacemaker_var_lib_t type, if you want to store the pacemaker files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pacemaker_var_run_t
+.EE
+
+- Set files with the pacemaker_var_run_t type, if you want to store the pacemaker files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type pacemaker_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), pacemaker(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/pads_selinux.8 serefpolicy-3.7.19/man/man8/pads_selinux.8
--- nsaserefpolicy/man/man8/pads_selinux.8	2013-03-15 11:41:12.231153510 +0100
+++ serefpolicy-3.7.19/man/man8/pads_selinux.8	2013-03-15 11:40:07.101152024 +0100
@@ -1,43 +1,63 @@
-.TH  "pads_selinux"  "8"  "pads" "dwalsh@redhat.com" "pads SELinux Policy documentation"
+.TH  "pads_selinux"  "8"  "13-01-04" "pads" "SELinux Policy documentation for pads"
 .SH "NAME"
 pads_selinux \- Security Enhanced Linux Policy for the pads processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the pads processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B pads
-(Passive Asset Detection System)
-processes via flexible mandatory access
-control.  
+The pads processes execute with the pads_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep pads_t
+
+
+.SH "ENTRYPOINTS"
+
+The pads_t SELinux type can be entered via the "pads_exec_t" file type.  The default entrypoint paths for the pads_t domain are the following:"
+
+/usr/bin/pads
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pads policy is very flexible allowing users to setup their pads processes in as secure a method as possible.
+.PP
+The following process types are defined for pads:
+
+.EX
+.B pads_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pads_t
+
+can be used to make the process type pads_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux pads policy is very flexible allowing users to setup their pads processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for pads:
 
 
 .EX
 .PP
-.B pads_config_t 
+.B pads_config_t
 .EE
 
 - Set files with the pads_config_t type, if you want to treat the files as pads configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/etc/pads-assets.csv, /etc/pads-ether-codes, /etc/pads.conf, /etc/pads-signature-list
 
 .EX
 .PP
-.B pads_exec_t 
+.B pads_exec_t
 .EE
 
 - Set files with the pads_exec_t type, if you want to transition an executable to the pads_t domain.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B pads_initrc_exec_t 
+.B pads_initrc_exec_t
 .EE
 
 - Set files with the pads_initrc_exec_t type, if you want to transition an executable to the pads_initrc_t domain.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B pads_var_run_t 
+.B pads_var_run_t
 .EE
 
 - Set files with the pads_var_run_t type, if you want to store the pads files under the /run directory.
@@ -61,28 +81,90 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux pads policy is very flexible allowing users to setup their pads processes in as secure a method as possible.
-.PP 
-The following process types are defined for pads:
+.SH "MANAGED FILES"
 
-.EX
-.B pads_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type pads_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pads_config_t
+
+	/etc/pads.conf
+.br
+	/etc/pads-assets.csv
+.br
+	/etc/pads-ether-codes
+.br
+	/etc/pads-signature-list
+.br
+
+.br
+.B pads_var_run_t
+
+	/var/run/pads.pid
+.br
+
+.br
+.B prelude_spool_t
+
+	/var/spool/prelude(/.*)?
+.br
+	/var/spool/prelude-manager(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -95,11 +177,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), pads(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), pads(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/pam_console_selinux.8 serefpolicy-3.7.19/man/man8/pam_console_selinux.8
--- nsaserefpolicy/man/man8/pam_console_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/pam_console_selinux.8	2013-03-15 11:40:07.095152023 +0100
@@ -0,0 +1,132 @@
+.TH  "pam_console_selinux"  "8"  "13-01-04" "pam_console" "SELinux Policy documentation for pam_console"
+.SH "NAME"
+pam_console_selinux \- Security Enhanced Linux Policy for the pam_console processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the pam_console processes via flexible mandatory access control.
+
+The pam_console processes execute with the pam_console_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep pam_console_t
+
+
+.SH "ENTRYPOINTS"
+
+The pam_console_t SELinux type can be entered via the "pam_console_exec_t" file type.  The default entrypoint paths for the pam_console_t domain are the following:"
+
+/sbin/pam_console_apply
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pam_console policy is very flexible allowing users to setup their pam_console processes in as secure a method as possible.
+.PP
+The following process types are defined for pam_console:
+
+.EX
+.B pam_console_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pam_console_t
+
+can be used to make the process type pam_console_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux pam_console policy is very flexible allowing users to setup their pam_console processes in as secure a method as possible.
+.PP
+The following file types are defined for pam_console:
+
+
+.EX
+.PP
+.B pam_console_exec_t
+.EE
+
+- Set files with the pam_console_exec_t type, if you want to transition an executable to the pam_console_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type pam_console_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), pam_console(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, pam_selinux(8), pam_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/passenger_selinux.8 serefpolicy-3.7.19/man/man8/passenger_selinux.8
--- nsaserefpolicy/man/man8/passenger_selinux.8	2013-03-15 11:41:12.169153508 +0100
+++ serefpolicy-3.7.19/man/man8/passenger_selinux.8	2013-03-15 11:40:04.672151968 +0100
@@ -1,55 +1,71 @@
-.TH  "passenger_selinux"  "8"  "passenger" "dwalsh@redhat.com" "passenger SELinux Policy documentation"
+.TH  "passenger_selinux"  "8"  "13-01-04" "passenger" "SELinux Policy documentation for passenger"
 .SH "NAME"
 passenger_selinux \- Security Enhanced Linux Policy for the passenger processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the passenger processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B passenger
-(Passenger policy)
-processes via flexible mandatory access
-control.  
+The passenger processes execute with the passenger_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep passenger_t
+
+
+.SH "ENTRYPOINTS"
+
+The passenger_t SELinux type can be entered via the "passenger_exec_t" file type.  The default entrypoint paths for the passenger_t domain are the following:"
+
+/usr/lib(64)?/gems/.*/Passenger.*, /usr/lib(64)?/gems/.*/ApplicationPoolServerExecutable, /usr/lib/gems/.*/Passenger.*, /usr/lib/gems/.*/ApplicationPoolServerExecutable, /usr/share/gems/.*/Passenger.*, /usr/share/gems/.*/ApplicationPoolServerExecutable
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux passenger policy is very flexible allowing users to setup their passenger processes in as secure a method as possible.
+.PP
+The following process types are defined for passenger:
+
+.EX
+.B passenger_t
+.EE
+.PP
+Note:
+.B semanage permissive -a passenger_t
+
+can be used to make the process type passenger_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux passenger policy is very flexible allowing users to setup their passenger processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for passenger:
 
 
 .EX
 .PP
-.B passenger_exec_t 
+.B passenger_exec_t
 .EE
 
 - Set files with the passenger_exec_t type, if you want to transition an executable to the passenger_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerLoggingAgent, /usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerWatchdog, /usr/lib/ruby/gems/.*/passenger-.*/agents/apache2/PassengerHelperAgent, /usr/lib/ruby/gems/.*/passenger-.*/ext/apache2/ApplicationPoolServerExecutable
 
 .EX
 .PP
-.B passenger_log_t 
+.B passenger_log_t
 .EE
 
 - Set files with the passenger_log_t type, if you want to treat the data as passenger log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/passenger.*, /var/log/passenger(/.*)?
 
 .EX
 .PP
-.B passenger_tmp_t 
+.B passenger_tmp_t
 .EE
 
 - Set files with the passenger_tmp_t type, if you want to store passenger temporary files in the /tmp directories.
@@ -57,7 +73,7 @@
 
 .EX
 .PP
-.B passenger_var_lib_t 
+.B passenger_var_lib_t
 .EE
 
 - Set files with the passenger_var_lib_t type, if you want to store the passenger files under the /var/lib directory.
@@ -65,7 +81,7 @@
 
 .EX
 .PP
-.B passenger_var_run_t 
+.B passenger_var_run_t
 .EE
 
 - Set files with the passenger_var_run_t type, if you want to store the passenger files under the /run directory.
@@ -73,28 +89,86 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux passenger policy is very flexible allowing users to setup their passenger processes in as secure a method as possible.
-.PP 
-The following process types are defined for passenger:
+.SH "MANAGED FILES"
 
-.EX
-.B passenger_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type passenger_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B passenger_log_t
+
+	/var/log/passenger.*
+.br
+
+.br
+.B passenger_tmp_t
+
+
+.br
+.B passenger_var_lib_t
+
+	/var/lib(64)?/passenger(/.*)?
+.br
+	/var/lib/passenger(/.*)?
+.br
+
+.br
+.B passenger_var_run_t
+
+	/var/run/passenger(/.*)?
+.br
+
+.br
+.B puppet_var_lib_t
+
+	/var/lib/puppet(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -107,11 +181,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), passenger(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), passenger(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/passwd_selinux.8 serefpolicy-3.7.19/man/man8/passwd_selinux.8
--- nsaserefpolicy/man/man8/passwd_selinux.8	2013-03-15 11:41:12.060153506 +0100
+++ serefpolicy-3.7.19/man/man8/passwd_selinux.8	2013-03-15 11:40:01.906151905 +0100
@@ -1,58 +1,194 @@
-.TH  "passwd_selinux"  "8"  "passwd" "dwalsh@redhat.com" "passwd SELinux Policy documentation"
+.TH  "passwd_selinux"  "8"  "13-01-04" "passwd" "SELinux Policy documentation for passwd"
 .SH "NAME"
 passwd_selinux \- Security Enhanced Linux Policy for the passwd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the passwd processes via flexible mandatory access control.
 
+The passwd processes execute with the passwd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep passwd_t
+
+
+.SH "ENTRYPOINTS"
+
+The passwd_t SELinux type can be entered via the "passwd_exec_t" file type.  The default entrypoint paths for the passwd_t domain are the following:"
+
+/usr/bin/chage, /usr/bin/passwd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux passwd policy is very flexible allowing users to setup their passwd processes in as secure a method as possible.
+.PP
+The following process types are defined for passwd:
+
+.EX
+.B passwd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a passwd_t
+
+can be used to make the process type passwd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux passwd policy is very flexible allowing users to setup their passwd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for passwd:
 
 
 .EX
 .PP
-.B passwd_exec_t 
+.B passwd_exec_t
 .EE
 
 - Set files with the passwd_exec_t type, if you want to transition an executable to the passwd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/passwd, /usr/bin/chage
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux passwd policy is very flexible allowing users to setup their passwd processes in as secure a method as possible.
-.PP 
-The following process types are defined for passwd:
+.SH "MANAGED FILES"
 
-.EX
-.B passwd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type passwd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_t
+
+	/etc/.*
+.br
+	/var/db/.*\.db
+.br
+	/usr/etc(/.*)?
+.br
+	/var/ftp/etc(/.*)?
+.br
+	/usr/local/etc(/.*)?
+.br
+	/var/lib/openshift/.limits.d(/.*)?
+.br
+	/var/lib/openshift/.openshift-proxy.d(/.*)?
+.br
+	/var/lib/openshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/lib/stickshift/.limits.d(/.*)?
+.br
+	/var/lib/stickshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/named/chroot/etc(/.*)?
+.br
+	/etc/ipsec\.d/examples(/.*)?
+.br
+	/var/spool/postfix/etc(/.*)?
+.br
+	/etc
+.br
+	/etc/localtime
+.br
+	/etc/cups/client\.conf
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B security_t
+
+
+.br
+.B shadow_t
+
+	/etc/shadow.*
+.br
+	/etc/gshadow.*
+.br
+	/var/db/shadow.*
+.br
+	/etc/passwd\.adjunct.*
+.br
+	/etc/\.pwd\.lock
+.br
+	/etc/group\.lock
+.br
+	/etc/passwd\.lock
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +201,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), passwd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), passwd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/pcscd_selinux.8 serefpolicy-3.7.19/man/man8/pcscd_selinux.8
--- nsaserefpolicy/man/man8/pcscd_selinux.8	2013-03-15 11:41:11.990153504 +0100
+++ serefpolicy-3.7.19/man/man8/pcscd_selinux.8	2013-03-15 11:40:00.939151883 +0100
@@ -1,31 +1,55 @@
-.TH  "pcscd_selinux"  "8"  "pcscd" "dwalsh@redhat.com" "pcscd SELinux Policy documentation"
+.TH  "pcscd_selinux"  "8"  "13-01-04" "pcscd" "SELinux Policy documentation for pcscd"
 .SH "NAME"
 pcscd_selinux \- Security Enhanced Linux Policy for the pcscd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the pcscd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B pcscd
-(PCSC smart card service)
-processes via flexible mandatory access
-control.  
+The pcscd processes execute with the pcscd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep pcscd_t
+
+
+.SH "ENTRYPOINTS"
+
+The pcscd_t SELinux type can be entered via the "pcscd_exec_t" file type.  The default entrypoint paths for the pcscd_t domain are the following:"
+
+/usr/sbin/pcscd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pcscd policy is very flexible allowing users to setup their pcscd processes in as secure a method as possible.
+.PP
+The following process types are defined for pcscd:
+
+.EX
+.B pcscd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pcscd_t
+
+can be used to make the process type pcscd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux pcscd policy is very flexible allowing users to setup their pcscd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for pcscd:
 
 
 .EX
 .PP
-.B pcscd_exec_t 
+.B pcscd_exec_t
 .EE
 
 - Set files with the pcscd_exec_t type, if you want to transition an executable to the pcscd_t domain.
@@ -33,40 +57,88 @@
 
 .EX
 .PP
-.B pcscd_var_run_t 
+.B pcscd_var_run_t
 .EE
 
 - Set files with the pcscd_var_run_t type, if you want to store the pcscd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/pcscd\.pid, /var/run/pcscd\.comm, /var/run/pcscd\.pub, /var/run/pcscd\.events(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux pcscd policy is very flexible allowing users to setup their pcscd processes in as secure a method as possible.
-.PP 
-The following process types are defined for pcscd:
+.SH "MANAGED FILES"
+
+The SELinux process type pcscd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
 
-.EX
-.B pcscd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -79,11 +151,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), pcscd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), pcscd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/pegasus_selinux.8 serefpolicy-3.7.19/man/man8/pegasus_selinux.8
--- nsaserefpolicy/man/man8/pegasus_selinux.8	2013-03-15 11:41:12.194153509 +0100
+++ serefpolicy-3.7.19/man/man8/pegasus_selinux.8	2013-03-15 11:40:06.287152005 +0100
@@ -1,31 +1,55 @@
-.TH  "pegasus_selinux"  "8"  "pegasus" "dwalsh@redhat.com" "pegasus SELinux Policy documentation"
+.TH  "pegasus_selinux"  "8"  "13-01-04" "pegasus" "SELinux Policy documentation for pegasus"
 .SH "NAME"
 pegasus_selinux \- Security Enhanced Linux Policy for the pegasus processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the pegasus processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B pegasus
-(The Open Group Pegasus CIM/WBEM Server)
-processes via flexible mandatory access
-control.  
+The pegasus processes execute with the pegasus_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep pegasus_t
+
+
+.SH "ENTRYPOINTS"
+
+The pegasus_t SELinux type can be entered via the "pegasus_exec_t" file type.  The default entrypoint paths for the pegasus_t domain are the following:"
+
+/usr/sbin/cimserver, /usr/sbin/init_repository
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
+.PP
+The following process types are defined for pegasus:
+
+.EX
+.B pegasus_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pegasus_t
+
+can be used to make the process type pegasus_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for pegasus:
 
 
 .EX
 .PP
-.B pegasus_conf_t 
+.B pegasus_conf_t
 .EE
 
 - Set files with the pegasus_conf_t type, if you want to treat the files as pegasus configuration data, usually stored under the /etc directory.
@@ -33,31 +57,23 @@
 
 .EX
 .PP
-.B pegasus_data_t 
+.B pegasus_data_t
 .EE
 
 - Set files with the pegasus_data_t type, if you want to treat the files as pegasus content.
 
-.br
-.TP 5
-Paths: 
-/etc/Pegasus/pegasus_current\.conf, /var/lib/Pegasus(/.*)?
 
 .EX
 .PP
-.B pegasus_exec_t 
+.B pegasus_exec_t
 .EE
 
 - Set files with the pegasus_exec_t type, if you want to transition an executable to the pegasus_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/init_repository, /usr/sbin/cimserver
 
 .EX
 .PP
-.B pegasus_mof_t 
+.B pegasus_mof_t
 .EE
 
 - Set files with the pegasus_mof_t type, if you want to treat the files as pegasus mof data.
@@ -65,7 +81,7 @@
 
 .EX
 .PP
-.B pegasus_tmp_t 
+.B pegasus_tmp_t
 .EE
 
 - Set files with the pegasus_tmp_t type, if you want to store pegasus temporary files in the /tmp directories.
@@ -73,7 +89,7 @@
 
 .EX
 .PP
-.B pegasus_var_run_t 
+.B pegasus_var_run_t
 .EE
 
 - Set files with the pegasus_var_run_t type, if you want to store the pegasus files under the /run directory.
@@ -81,62 +97,188 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for pegasus:
 
 .EX
 .TP 5
-.B pegasus_http_port_t 
+.B pegasus_http_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5988
 .EE
 
 .EX
 .TP 5
-.B pegasus_https_port_t 
+.B pegasus_https_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5989
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
-.PP 
-The following process types are defined for pegasus:
+.SH "MANAGED FILES"
 
-.EX
-.B pegasus_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type pegasus_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B pegasus_data_t
+
+	/var/lib/Pegasus(/.*)?
+.br
+	/etc/Pegasus/pegasus_current\.conf
+.br
+
+.br
+.B pegasus_tmp_t
+
+
+.br
+.B pegasus_var_run_t
+
+	/var/run/tog-pegasus(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B samba_etc_t
+
+	/etc/samba(/.*)?
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B virt_etc_rw_t
+
+	/etc/xen/.*/.*
+.br
+	/etc/xen/[^/]*
+.br
+	/etc/libvirt/.*/.*
+.br
+	/etc/libvirt/[^/]*
+.br
+
+.br
+.B virt_etc_t
+
+	/etc/xen/[^/]*
+.br
+	/etc/libvirt/[^/]*
+.br
+	/etc/xen
+.br
+	/etc/libvirt
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -152,11 +294,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), pegasus(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), pegasus(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/pingd_selinux.8 serefpolicy-3.7.19/man/man8/pingd_selinux.8
--- nsaserefpolicy/man/man8/pingd_selinux.8	2013-03-15 11:41:11.061153483 +0100
+++ serefpolicy-3.7.19/man/man8/pingd_selinux.8	2013-03-15 11:39:55.356151756 +0100
@@ -1,54 +1,73 @@
-.TH  "pingd_selinux"  "8"  "pingd" "dwalsh@redhat.com" "pingd SELinux Policy documentation"
+.TH  "pingd_selinux"  "8"  "13-01-04" "pingd" "SELinux Policy documentation for pingd"
 .SH "NAME"
 pingd_selinux \- Security Enhanced Linux Policy for the pingd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the pingd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B pingd
-(Pingd of the Whatsup cluster node up/down detection utility)
-processes via flexible mandatory access
-control.  
+The pingd processes execute with the pingd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep pingd_t
+
+
+.SH "ENTRYPOINTS"
+
+The pingd_t SELinux type can be entered via the "pingd_exec_t" file type.  The default entrypoint paths for the pingd_t domain are the following:"
+
+/usr/sbin/pingd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
+.PP
+The following process types are defined for pingd:
+
+.EX
+.B ping_t, pingd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pingd_t
+
+can be used to make the process type pingd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  pingd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run pingd with the tightest access possible.
 
 
 .PP
-If you want to control users use of ping and tracerout, you must turn on the user_ping boolean.
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
 
 .EX
 .B setsebool -P user_ping 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
-.PP 
-The following file types are defined for pingd:
-
-
-.EX
 .PP
-.B ping_exec_t 
-.EE
+The following file types are defined for pingd:
 
-- Set files with the ping_exec_t type, if you want to transition an executable to the ping_t domain.
-
-.br
-.TP 5
-Paths: 
-/usr/sbin/hping2, /usr/sbin/fping.*, /bin/ping.*, /usr/sbin/send_arp
 
 .EX
 .PP
-.B pingd_etc_t 
+.B pingd_etc_t
 .EE
 
 - Set files with the pingd_etc_t type, if you want to store pingd files in the /etc directories.
@@ -56,7 +75,7 @@
 
 .EX
 .PP
-.B pingd_exec_t 
+.B pingd_exec_t
 .EE
 
 - Set files with the pingd_exec_t type, if you want to transition an executable to the pingd_t domain.
@@ -64,7 +83,7 @@
 
 .EX
 .PP
-.B pingd_initrc_exec_t 
+.B pingd_initrc_exec_t
 .EE
 
 - Set files with the pingd_initrc_exec_t type, if you want to transition an executable to the pingd_initrc_t domain.
@@ -72,7 +91,7 @@
 
 .EX
 .PP
-.B pingd_modules_t 
+.B pingd_modules_t
 .EE
 
 - Set files with the pingd_modules_t type, if you want to treat the files as pingd modules.
@@ -80,51 +99,87 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for pingd:
 
 .EX
 .TP 5
-.B pingd_port_t 
+.B pingd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 9125
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
-.PP 
-The following process types are defined for pingd:
+.SH "MANAGED FILES"
 
-.EX
-.B ping_t, pingd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type pingd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -143,12 +198,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), pingd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), pingd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), ping_selinux(8), ping_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ping_selinux.8 serefpolicy-3.7.19/man/man8/ping_selinux.8
--- nsaserefpolicy/man/man8/ping_selinux.8	2013-03-15 11:41:12.099153507 +0100
+++ serefpolicy-3.7.19/man/man8/ping_selinux.8	2013-03-15 11:40:02.669151922 +0100
@@ -1,48 +1,81 @@
-.TH  "ping_selinux"  "8"  "ping" "dwalsh@redhat.com" "ping SELinux Policy documentation"
+.TH  "ping_selinux"  "8"  "13-01-04" "ping" "SELinux Policy documentation for ping"
 .SH "NAME"
 ping_selinux \- Security Enhanced Linux Policy for the ping processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ping processes via flexible mandatory access control.
 
+The ping processes execute with the ping_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ping_t
+
+
+.SH "ENTRYPOINTS"
+
+The ping_t SELinux type can be entered via the "ping_exec_t" file type.  The default entrypoint paths for the ping_t domain are the following:"
+
+/bin/ping.*, /usr/sbin/fping.*, /usr/sbin/hping2, /usr/sbin/send_arp
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
+.PP
+The following process types are defined for ping:
+
+.EX
+.B ping_t, pingd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ping_t
+
+can be used to make the process type ping_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  ping policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ping with the tightest access possible.
 
 
 .PP
-If you want to control users use of ping and tracerout, you must turn on the user_ping boolean.
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
 
 .EX
 .B setsebool -P user_ping 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ping:
 
 
 .EX
 .PP
-.B ping_exec_t 
+.B ping_exec_t
 .EE
 
 - Set files with the ping_exec_t type, if you want to transition an executable to the ping_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/hping2, /usr/sbin/fping.*, /bin/ping.*, /usr/sbin/send_arp
 
 .EX
 .PP
-.B pingd_etc_t 
+.B pingd_etc_t
 .EE
 
 - Set files with the pingd_etc_t type, if you want to store pingd files in the /etc directories.
@@ -50,7 +83,7 @@
 
 .EX
 .PP
-.B pingd_exec_t 
+.B pingd_exec_t
 .EE
 
 - Set files with the pingd_exec_t type, if you want to transition an executable to the pingd_t domain.
@@ -58,7 +91,7 @@
 
 .EX
 .PP
-.B pingd_initrc_exec_t 
+.B pingd_initrc_exec_t
 .EE
 
 - Set files with the pingd_initrc_exec_t type, if you want to transition an executable to the pingd_initrc_t domain.
@@ -66,7 +99,7 @@
 
 .EX
 .PP
-.B pingd_modules_t 
+.B pingd_modules_t
 .EE
 
 - Set files with the pingd_modules_t type, if you want to treat the files as pingd modules.
@@ -74,51 +107,79 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ping:
 
 .EX
 .TP 5
-.B pingd_port_t 
+.B pingd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 9125
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
-.PP 
-The following process types are defined for ping:
+.SH "MANAGED FILES"
 
-.EX
-.B ping_t, pingd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ping_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -137,12 +198,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ping(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), ping(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), pingd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/piranha_fos_selinux.8 serefpolicy-3.7.19/man/man8/piranha_fos_selinux.8
--- nsaserefpolicy/man/man8/piranha_fos_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/piranha_fos_selinux.8	2013-03-15 11:40:01.559151897 +0100
@@ -0,0 +1,154 @@
+.TH  "piranha_fos_selinux"  "8"  "13-01-04" "piranha_fos" "SELinux Policy documentation for piranha_fos"
+.SH "NAME"
+piranha_fos_selinux \- Security Enhanced Linux Policy for the piranha_fos processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the piranha_fos processes via flexible mandatory access control.
+
+The piranha_fos processes execute with the piranha_fos_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep piranha_fos_t
+
+
+.SH "ENTRYPOINTS"
+
+The piranha_fos_t SELinux type can be entered via the "piranha_fos_exec_t" file type.  The default entrypoint paths for the piranha_fos_t domain are the following:"
+
+/usr/sbin/fos
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux piranha_fos policy is very flexible allowing users to setup their piranha_fos processes in as secure a method as possible.
+.PP
+The following process types are defined for piranha_fos:
+
+.EX
+.B piranha_fos_t
+.EE
+.PP
+Note:
+.B semanage permissive -a piranha_fos_t
+
+can be used to make the process type piranha_fos_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux piranha_fos policy is very flexible allowing users to setup their piranha_fos processes in as secure a method as possible.
+.PP
+The following file types are defined for piranha_fos:
+
+
+.EX
+.PP
+.B piranha_fos_exec_t
+.EE
+
+- Set files with the piranha_fos_exec_t type, if you want to transition an executable to the piranha_fos_t domain.
+
+
+.EX
+.PP
+.B piranha_fos_var_run_t
+.EE
+
+- Set files with the piranha_fos_var_run_t type, if you want to store the piranha fos files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type piranha_fos_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B piranha_fos_var_run_t
+
+	/var/run/fos\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), piranha_fos(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, piranha_lvs_selinux(8), piranha_pulse_selinux(8), piranha_web_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/piranha_lvs_selinux.8 serefpolicy-3.7.19/man/man8/piranha_lvs_selinux.8
--- nsaserefpolicy/man/man8/piranha_lvs_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/piranha_lvs_selinux.8	2013-03-15 11:39:56.188151775 +0100
@@ -0,0 +1,175 @@
+.TH  "piranha_lvs_selinux"  "8"  "13-01-04" "piranha_lvs" "SELinux Policy documentation for piranha_lvs"
+.SH "NAME"
+piranha_lvs_selinux \- Security Enhanced Linux Policy for the piranha_lvs processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the piranha_lvs processes via flexible mandatory access control.
+
+The piranha_lvs processes execute with the piranha_lvs_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep piranha_lvs_t
+
+
+.SH "ENTRYPOINTS"
+
+The piranha_lvs_t SELinux type can be entered via the "piranha_lvs_exec_t" file type.  The default entrypoint paths for the piranha_lvs_t domain are the following:"
+
+/usr/sbin/lvsd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux piranha_lvs policy is very flexible allowing users to setup their piranha_lvs processes in as secure a method as possible.
+.PP
+The following process types are defined for piranha_lvs:
+
+.EX
+.B piranha_lvs_t
+.EE
+.PP
+Note:
+.B semanage permissive -a piranha_lvs_t
+
+can be used to make the process type piranha_lvs_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  piranha_lvs policy is extremely flexible and has several booleans that allow you to manipulate the policy and run piranha_lvs with the tightest access possible.
+
+
+.PP
+If you want to allow piranha-lvs domain to connect to the network using TCP, you must turn on the piranha_lvs_can_network_connect boolean.
+
+.EX
+.B setsebool -P piranha_lvs_can_network_connect 1
+.EE
+
+.PP
+If you want to allow piranha-lvs domain to connect to the network using TCP, you must turn on the piranha_lvs_can_network_connect boolean.
+
+.EX
+.B setsebool -P piranha_lvs_can_network_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux piranha_lvs policy is very flexible allowing users to setup their piranha_lvs processes in as secure a method as possible.
+.PP
+The following file types are defined for piranha_lvs:
+
+
+.EX
+.PP
+.B piranha_lvs_exec_t
+.EE
+
+- Set files with the piranha_lvs_exec_t type, if you want to transition an executable to the piranha_lvs_t domain.
+
+
+.EX
+.PP
+.B piranha_lvs_var_run_t
+.EE
+
+- Set files with the piranha_lvs_var_run_t type, if you want to store the piranha lvs files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type piranha_lvs_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B piranha_lvs_var_run_t
+
+	/var/run/lvs\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), piranha_lvs(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), piranha_fos_selinux(8), piranha_pulse_selinux(8), piranha_web_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/piranha_pulse_selinux.8 serefpolicy-3.7.19/man/man8/piranha_pulse_selinux.8
--- nsaserefpolicy/man/man8/piranha_pulse_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/piranha_pulse_selinux.8	2013-03-15 11:40:00.987151884 +0100
@@ -0,0 +1,180 @@
+.TH  "piranha_pulse_selinux"  "8"  "13-01-04" "piranha_pulse" "SELinux Policy documentation for piranha_pulse"
+.SH "NAME"
+piranha_pulse_selinux \- Security Enhanced Linux Policy for the piranha_pulse processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the piranha_pulse processes via flexible mandatory access control.
+
+The piranha_pulse processes execute with the piranha_pulse_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep piranha_pulse_t
+
+
+.SH "ENTRYPOINTS"
+
+The piranha_pulse_t SELinux type can be entered via the "piranha_pulse_exec_t" file type.  The default entrypoint paths for the piranha_pulse_t domain are the following:"
+
+/usr/sbin/pulse
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux piranha_pulse policy is very flexible allowing users to setup their piranha_pulse processes in as secure a method as possible.
+.PP
+The following process types are defined for piranha_pulse:
+
+.EX
+.B piranha_pulse_t
+.EE
+.PP
+Note:
+.B semanage permissive -a piranha_pulse_t
+
+can be used to make the process type piranha_pulse_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux piranha_pulse policy is very flexible allowing users to setup their piranha_pulse processes in as secure a method as possible.
+.PP
+The following file types are defined for piranha_pulse:
+
+
+.EX
+.PP
+.B piranha_pulse_exec_t
+.EE
+
+- Set files with the piranha_pulse_exec_t type, if you want to transition an executable to the piranha_pulse_t domain.
+
+
+.EX
+.PP
+.B piranha_pulse_initrc_exec_t
+.EE
+
+- Set files with the piranha_pulse_initrc_exec_t type, if you want to transition an executable to the piranha_pulse_initrc_t domain.
+
+
+.EX
+.PP
+.B piranha_pulse_var_run_t
+.EE
+
+- Set files with the piranha_pulse_var_run_t type, if you want to store the piranha pulse files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type piranha_pulse_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B piranha_pulse_var_run_t
+
+	/var/run/pulse\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B samba_etc_t
+
+	/etc/samba(/.*)?
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), piranha_pulse(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, piranha_fos_selinux(8), piranha_lvs_selinux(8), piranha_web_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/piranha_web_selinux.8 serefpolicy-3.7.19/man/man8/piranha_web_selinux.8
--- nsaserefpolicy/man/man8/piranha_web_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/piranha_web_selinux.8	2013-03-15 11:39:53.731151718 +0100
@@ -0,0 +1,224 @@
+.TH  "piranha_web_selinux"  "8"  "13-01-04" "piranha_web" "SELinux Policy documentation for piranha_web"
+.SH "NAME"
+piranha_web_selinux \- Security Enhanced Linux Policy for the piranha_web processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the piranha_web processes via flexible mandatory access control.
+
+The piranha_web processes execute with the piranha_web_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep piranha_web_t
+
+
+.SH "ENTRYPOINTS"
+
+The piranha_web_t SELinux type can be entered via the "piranha_web_exec_t" file type.  The default entrypoint paths for the piranha_web_t domain are the following:"
+
+/usr/bin/paster, /usr/sbin/piranha_gui
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux piranha_web policy is very flexible allowing users to setup their piranha_web processes in as secure a method as possible.
+.PP
+The following process types are defined for piranha_web:
+
+.EX
+.B piranha_web_t
+.EE
+.PP
+Note:
+.B semanage permissive -a piranha_web_t
+
+can be used to make the process type piranha_web_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux piranha_web policy is very flexible allowing users to setup their piranha_web processes in as secure a method as possible.
+.PP
+The following file types are defined for piranha_web:
+
+
+.EX
+.PP
+.B piranha_web_conf_t
+.EE
+
+- Set files with the piranha_web_conf_t type, if you want to treat the files as piranha web configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B piranha_web_data_t
+.EE
+
+- Set files with the piranha_web_data_t type, if you want to treat the files as piranha web content.
+
+
+.EX
+.PP
+.B piranha_web_exec_t
+.EE
+
+- Set files with the piranha_web_exec_t type, if you want to transition an executable to the piranha_web_t domain.
+
+
+.EX
+.PP
+.B piranha_web_tmp_t
+.EE
+
+- Set files with the piranha_web_tmp_t type, if you want to store piranha web temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B piranha_web_tmpfs_t
+.EE
+
+- Set files with the piranha_web_tmpfs_t type, if you want to store piranha web files on a tmpfs file system.
+
+
+.EX
+.PP
+.B piranha_web_var_run_t
+.EE
+
+- Set files with the piranha_web_var_run_t type, if you want to store the piranha web files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type piranha_web_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B piranha_etc_rw_t
+
+	/etc/piranha/lvs\.cf
+.br
+	/etc/sysconfig/ha/lvs\.cf
+.br
+
+.br
+.B piranha_log_t
+
+	/var/log/piranha(/.*)?
+.br
+
+.br
+.B piranha_web_conf_t
+
+	/var/lib/luci/etc(/.*)?
+.br
+	/var/lib/luci/cert(/.*)?
+.br
+
+.br
+.B piranha_web_data_t
+
+	/var/lib/luci(/.*)?
+.br
+
+.br
+.B piranha_web_tmp_t
+
+
+.br
+.B piranha_web_tmpfs_t
+
+
+.br
+.B piranha_web_var_run_t
+
+	/var/run/luci(/.*)?
+.br
+	/var/run/piranha-httpd\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), piranha_web(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, piranha_fos_selinux(8), piranha_lvs_selinux(8), piranha_pulse_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/pkcsslotd_selinux.8 serefpolicy-3.7.19/man/man8/pkcsslotd_selinux.8
--- nsaserefpolicy/man/man8/pkcsslotd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/pkcsslotd_selinux.8	2013-03-15 11:40:00.231151867 +0100
@@ -0,0 +1,127 @@
+.TH  "pkcsslotd_selinux"  "8"  "13-01-04" "pkcsslotd" "SELinux Policy documentation for pkcsslotd"
+.SH "NAME"
+pkcsslotd_selinux \- Security Enhanced Linux Policy for the pkcsslotd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the pkcsslotd processes via flexible mandatory access control.
+
+The pkcsslotd processes execute with the pkcsslotd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep pkcsslotd_t
+
+
+.SH "ENTRYPOINTS"
+
+The pkcsslotd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,pkcsslotd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the pkcsslotd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/pkcsslotd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pkcsslotd policy is very flexible allowing users to setup their pkcsslotd processes in as secure a method as possible.
+.PP
+The following process types are defined for pkcsslotd:
+
+.EX
+.B pkcsslotd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pkcsslotd_t
+
+can be used to make the process type pkcsslotd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux pkcsslotd policy is very flexible allowing users to setup their pkcsslotd processes in as secure a method as possible.
+.PP
+The following file types are defined for pkcsslotd:
+
+
+.EX
+.PP
+.B pkcsslotd_exec_t
+.EE
+
+- Set files with the pkcsslotd_exec_t type, if you want to transition an executable to the pkcsslotd_t domain.
+
+
+.EX
+.PP
+.B pkcsslotd_tmp_t
+.EE
+
+- Set files with the pkcsslotd_tmp_t type, if you want to store pkcsslotd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B pkcsslotd_tmpfs_t
+.EE
+
+- Set files with the pkcsslotd_tmpfs_t type, if you want to store pkcsslotd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B pkcsslotd_var_lib_t
+.EE
+
+- Set files with the pkcsslotd_var_lib_t type, if you want to store the pkcsslotd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pkcsslotd_var_run_t
+.EE
+
+- Set files with the pkcsslotd_var_run_t type, if you want to store the pkcsslotd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type pkcsslotd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), pkcsslotd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/plymouthd_selinux.8 serefpolicy-3.7.19/man/man8/plymouthd_selinux.8
--- nsaserefpolicy/man/man8/plymouthd_selinux.8	2013-03-15 11:41:12.023153505 +0100
+++ serefpolicy-3.7.19/man/man8/plymouthd_selinux.8	2013-03-15 11:40:01.204151889 +0100
@@ -1,39 +1,55 @@
-.TH  "plymouthd_selinux"  "8"  "plymouthd" "dwalsh@redhat.com" "plymouthd SELinux Policy documentation"
+.TH  "plymouthd_selinux"  "8"  "13-01-04" "plymouthd" "SELinux Policy documentation for plymouthd"
 .SH "NAME"
 plymouthd_selinux \- Security Enhanced Linux Policy for the plymouthd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the plymouthd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B plymouthd
-(policy for plymouthd)
-processes via flexible mandatory access
-control.  
+The plymouthd processes execute with the plymouthd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep plymouthd_t
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+
+.SH "ENTRYPOINTS"
+
+The plymouthd_t SELinux type can be entered via the "plymouthd_exec_t" file type.  The default entrypoint paths for the plymouthd_t domain are the following:"
+
+/sbin/plymouthd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to files.
 SELinux plymouthd policy is very flexible allowing users to setup their plymouthd processes in as secure a method as possible.
-.PP 
-The following file types are defined for plymouthd:
-
+.PP
+The following process types are defined for plymouthd:
 
 .EX
-.PP
-.B plymouth_exec_t 
+.B plymouth_t, plymouthd_t
 .EE
+.PP
+Note:
+.B semanage permissive -a plymouthd_t
 
-- Set files with the plymouth_exec_t type, if you want to transition an executable to the plymouth_t domain.
+can be used to make the process type plymouthd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux plymouthd policy is very flexible allowing users to setup their plymouthd processes in as secure a method as possible.
+.PP
+The following file types are defined for plymouthd:
 
 
 .EX
 .PP
-.B plymouthd_exec_t 
+.B plymouthd_exec_t
 .EE
 
 - Set files with the plymouthd_exec_t type, if you want to transition an executable to the plymouthd_t domain.
@@ -41,7 +57,7 @@
 
 .EX
 .PP
-.B plymouthd_spool_t 
+.B plymouthd_spool_t
 .EE
 
 - Set files with the plymouthd_spool_t type, if you want to store the plymouthd files under the /var/spool directory.
@@ -49,7 +65,7 @@
 
 .EX
 .PP
-.B plymouthd_var_lib_t 
+.B plymouthd_var_lib_t
 .EE
 
 - Set files with the plymouthd_var_lib_t type, if you want to store the plymouthd files under the /var/lib directory.
@@ -57,7 +73,7 @@
 
 .EX
 .PP
-.B plymouthd_var_run_t 
+.B plymouthd_var_run_t
 .EE
 
 - Set files with the plymouthd_var_run_t type, if you want to store the plymouthd files under the /run directory.
@@ -65,28 +81,88 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux plymouthd policy is very flexible allowing users to setup their plymouthd processes in as secure a method as possible.
-.PP 
-The following process types are defined for plymouthd:
+.SH "MANAGED FILES"
 
-.EX
-.B plymouth_t, plymouthd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type plymouthd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B fonts_cache_t
+
+	/var/cache/fontconfig(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B plymouthd_spool_t
+
+	/var/spool/plymouth(/.*)?
+.br
+
+.br
+.B plymouthd_var_lib_t
+
+	/var/lib/plymouth(/.*)?
+.br
+
+.br
+.B plymouthd_var_run_t
+
+	/var/run/plymouth(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -99,11 +175,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), plymouthd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), plymouthd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, plymouth_selinux(8), plymouth_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/plymouth_selinux.8 serefpolicy-3.7.19/man/man8/plymouth_selinux.8
--- nsaserefpolicy/man/man8/plymouth_selinux.8	2013-03-15 11:41:12.106153507 +0100
+++ serefpolicy-3.7.19/man/man8/plymouth_selinux.8	2013-03-15 11:40:03.455151940 +0100
@@ -1,25 +1,55 @@
-.TH  "plymouth_selinux"  "8"  "plymouth" "dwalsh@redhat.com" "plymouth SELinux Policy documentation"
+.TH  "plymouth_selinux"  "8"  "13-01-04" "plymouth" "SELinux Policy documentation for plymouth"
 .SH "NAME"
 plymouth_selinux \- Security Enhanced Linux Policy for the plymouth processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the plymouth processes via flexible mandatory access control.
 
+The plymouth processes execute with the plymouth_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep plymouth_t
+
+
+.SH "ENTRYPOINTS"
+
+The plymouth_t SELinux type can be entered via the "plymouth_exec_t" file type.  The default entrypoint paths for the plymouth_t domain are the following:"
+
+/bin/plymouth
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux plymouth policy is very flexible allowing users to setup their plymouth processes in as secure a method as possible.
+.PP
+The following process types are defined for plymouth:
+
+.EX
+.B plymouth_t, plymouthd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a plymouth_t
+
+can be used to make the process type plymouth_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux plymouth policy is very flexible allowing users to setup their plymouth processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for plymouth:
 
 
 .EX
 .PP
-.B plymouth_exec_t 
+.B plymouth_exec_t
 .EE
 
 - Set files with the plymouth_exec_t type, if you want to transition an executable to the plymouth_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B plymouthd_exec_t 
+.B plymouthd_exec_t
 .EE
 
 - Set files with the plymouthd_exec_t type, if you want to transition an executable to the plymouthd_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B plymouthd_spool_t 
+.B plymouthd_spool_t
 .EE
 
 - Set files with the plymouthd_spool_t type, if you want to store the plymouthd files under the /var/spool directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B plymouthd_var_lib_t 
+.B plymouthd_var_lib_t
 .EE
 
 - Set files with the plymouthd_var_lib_t type, if you want to store the plymouthd files under the /var/lib directory.
@@ -51,7 +81,7 @@
 
 .EX
 .PP
-.B plymouthd_var_run_t 
+.B plymouthd_var_run_t
 .EE
 
 - Set files with the plymouthd_var_run_t type, if you want to store the plymouthd files under the /run directory.
@@ -59,28 +89,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux plymouth policy is very flexible allowing users to setup their plymouth processes in as secure a method as possible.
-.PP 
-The following process types are defined for plymouth:
+.SH "MANAGED FILES"
 
-.EX
-.B plymouth_t, plymouthd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type plymouth_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -93,11 +151,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), plymouth(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), plymouth(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, plymouthd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/podsleuth_selinux.8 serefpolicy-3.7.19/man/man8/podsleuth_selinux.8
--- nsaserefpolicy/man/man8/podsleuth_selinux.8	2013-03-15 11:41:11.491153493 +0100
+++ serefpolicy-3.7.19/man/man8/podsleuth_selinux.8	2013-03-15 11:39:55.615151761 +0100
@@ -1,31 +1,55 @@
-.TH  "podsleuth_selinux"  "8"  "podsleuth" "dwalsh@redhat.com" "podsleuth SELinux Policy documentation"
+.TH  "podsleuth_selinux"  "8"  "13-01-04" "podsleuth" "SELinux Policy documentation for podsleuth"
 .SH "NAME"
 podsleuth_selinux \- Security Enhanced Linux Policy for the podsleuth processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the podsleuth processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B podsleuth
-(Podsleuth is a tool to get information about an Apple (TM) iPod (TM))
-processes via flexible mandatory access
-control.  
+The podsleuth processes execute with the podsleuth_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep podsleuth_t
+
+
+.SH "ENTRYPOINTS"
+
+The podsleuth_t SELinux type can be entered via the "podsleuth_exec_t" file type.  The default entrypoint paths for the podsleuth_t domain are the following:"
+
+/usr/bin/podsleuth, /usr/libexec/hal-podsleuth
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux podsleuth policy is very flexible allowing users to setup their podsleuth processes in as secure a method as possible.
+.PP
+The following process types are defined for podsleuth:
+
+.EX
+.B podsleuth_t
+.EE
+.PP
+Note:
+.B semanage permissive -a podsleuth_t
+
+can be used to make the process type podsleuth_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux podsleuth policy is very flexible allowing users to setup their podsleuth processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for podsleuth:
 
 
 .EX
 .PP
-.B podsleuth_cache_t 
+.B podsleuth_cache_t
 .EE
 
 - Set files with the podsleuth_cache_t type, if you want to store the files under the /var/cache directory.
@@ -33,19 +57,15 @@
 
 .EX
 .PP
-.B podsleuth_exec_t 
+.B podsleuth_exec_t
 .EE
 
 - Set files with the podsleuth_exec_t type, if you want to transition an executable to the podsleuth_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/podsleuth, /usr/libexec/hal-podsleuth
 
 .EX
 .PP
-.B podsleuth_tmp_t 
+.B podsleuth_tmp_t
 .EE
 
 - Set files with the podsleuth_tmp_t type, if you want to store podsleuth temporary files in the /tmp directories.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B podsleuth_tmpfs_t 
+.B podsleuth_tmpfs_t
 .EE
 
 - Set files with the podsleuth_tmpfs_t type, if you want to store podsleuth files on a tmpfs file system.
@@ -61,28 +81,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux podsleuth policy is very flexible allowing users to setup their podsleuth processes in as secure a method as possible.
-.PP 
-The following process types are defined for podsleuth:
+.SH "MANAGED FILES"
 
-.EX
-.B podsleuth_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type podsleuth_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B podsleuth_cache_t
+
+	/var/cache/podsleuth(/.*)?
+.br
+
+.br
+.B podsleuth_tmp_t
+
+
+.br
+.B podsleuth_tmpfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -95,11 +157,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), podsleuth(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), podsleuth(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/policykit_auth_selinux.8 serefpolicy-3.7.19/man/man8/policykit_auth_selinux.8
--- nsaserefpolicy/man/man8/policykit_auth_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/policykit_auth_selinux.8	2013-03-15 11:39:57.631151807 +0100
@@ -0,0 +1,190 @@
+.TH  "policykit_auth_selinux"  "8"  "13-01-04" "policykit_auth" "SELinux Policy documentation for policykit_auth"
+.SH "NAME"
+policykit_auth_selinux \- Security Enhanced Linux Policy for the policykit_auth processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the policykit_auth processes via flexible mandatory access control.
+
+The policykit_auth processes execute with the policykit_auth_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep policykit_auth_t
+
+
+.SH "ENTRYPOINTS"
+
+The policykit_auth_t SELinux type can be entered via the "policykit_auth_exec_t" file type.  The default entrypoint paths for the policykit_auth_t domain are the following:"
+
+/usr/libexec/polkit-read-auth-helper, /usr/lib/policykit/polkit-read-auth-helper, /usr/libexec/polkit-1/polkit-agent-helper-1
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux policykit_auth policy is very flexible allowing users to setup their policykit_auth processes in as secure a method as possible.
+.PP
+The following process types are defined for policykit_auth:
+
+.EX
+.B policykit_auth_t
+.EE
+.PP
+Note:
+.B semanage permissive -a policykit_auth_t
+
+can be used to make the process type policykit_auth_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux policykit_auth policy is very flexible allowing users to setup their policykit_auth processes in as secure a method as possible.
+.PP
+The following file types are defined for policykit_auth:
+
+
+.EX
+.PP
+.B policykit_auth_exec_t
+.EE
+
+- Set files with the policykit_auth_exec_t type, if you want to transition an executable to the policykit_auth_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type policykit_auth_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B policykit_reload_t
+
+	/var/lib/misc/PolicyKit.reload
+.br
+
+.br
+.B policykit_tmp_t
+
+
+.br
+.B policykit_var_lib_t
+
+	/var/lib/polkit-1(/.*)?
+.br
+	/var/lib/PolicyKit(/.*)?
+.br
+	/var/lib/PolicyKit-public(/.*)?
+.br
+
+.br
+.B policykit_var_run_t
+
+	/var/run/PolicyKit(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), policykit_auth(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, policykit_selinux(8), policykit_selinux(8), policykit_grant_selinux(8), policykit_resolve_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/policykit_grant_selinux.8 serefpolicy-3.7.19/man/man8/policykit_grant_selinux.8
--- nsaserefpolicy/man/man8/policykit_grant_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/policykit_grant_selinux.8	2013-03-15 11:40:05.973151998 +0100
@@ -0,0 +1,182 @@
+.TH  "policykit_grant_selinux"  "8"  "13-01-04" "policykit_grant" "SELinux Policy documentation for policykit_grant"
+.SH "NAME"
+policykit_grant_selinux \- Security Enhanced Linux Policy for the policykit_grant processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the policykit_grant processes via flexible mandatory access control.
+
+The policykit_grant processes execute with the policykit_grant_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep policykit_grant_t
+
+
+.SH "ENTRYPOINTS"
+
+The policykit_grant_t SELinux type can be entered via the "policykit_grant_exec_t" file type.  The default entrypoint paths for the policykit_grant_t domain are the following:"
+
+/usr/libexec/polkit-grant-helper.*, /usr/lib/policykit/polkit-grant-helper.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux policykit_grant policy is very flexible allowing users to setup their policykit_grant processes in as secure a method as possible.
+.PP
+The following process types are defined for policykit_grant:
+
+.EX
+.B policykit_grant_t
+.EE
+.PP
+Note:
+.B semanage permissive -a policykit_grant_t
+
+can be used to make the process type policykit_grant_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux policykit_grant policy is very flexible allowing users to setup their policykit_grant processes in as secure a method as possible.
+.PP
+The following file types are defined for policykit_grant:
+
+
+.EX
+.PP
+.B policykit_grant_exec_t
+.EE
+
+- Set files with the policykit_grant_exec_t type, if you want to transition an executable to the policykit_grant_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type policykit_grant_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B policykit_reload_t
+
+	/var/lib/misc/PolicyKit.reload
+.br
+
+.br
+.B policykit_var_lib_t
+
+	/var/lib/polkit-1(/.*)?
+.br
+	/var/lib/PolicyKit(/.*)?
+.br
+	/var/lib/PolicyKit-public(/.*)?
+.br
+
+.br
+.B policykit_var_run_t
+
+	/var/run/PolicyKit(/.*)?
+.br
+
+.br
+.B system_cronjob_var_lib_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), policykit_grant(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, policykit_selinux(8), policykit_selinux(8), policykit_auth_selinux(8), policykit_resolve_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/policykit_resolve_selinux.8 serefpolicy-3.7.19/man/man8/policykit_resolve_selinux.8
--- nsaserefpolicy/man/man8/policykit_resolve_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/policykit_resolve_selinux.8	2013-03-15 11:40:01.917151905 +0100
@@ -0,0 +1,132 @@
+.TH  "policykit_resolve_selinux"  "8"  "13-01-04" "policykit_resolve" "SELinux Policy documentation for policykit_resolve"
+.SH "NAME"
+policykit_resolve_selinux \- Security Enhanced Linux Policy for the policykit_resolve processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the policykit_resolve processes via flexible mandatory access control.
+
+The policykit_resolve processes execute with the policykit_resolve_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep policykit_resolve_t
+
+
+.SH "ENTRYPOINTS"
+
+The policykit_resolve_t SELinux type can be entered via the "policykit_resolve_exec_t" file type.  The default entrypoint paths for the policykit_resolve_t domain are the following:"
+
+/usr/libexec/polkit-resolve-exe-helper.*, /usr/lib/policykit/polkit-resolve-exe-helper.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux policykit_resolve policy is very flexible allowing users to setup their policykit_resolve processes in as secure a method as possible.
+.PP
+The following process types are defined for policykit_resolve:
+
+.EX
+.B policykit_resolve_t
+.EE
+.PP
+Note:
+.B semanage permissive -a policykit_resolve_t
+
+can be used to make the process type policykit_resolve_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux policykit_resolve policy is very flexible allowing users to setup their policykit_resolve processes in as secure a method as possible.
+.PP
+The following file types are defined for policykit_resolve:
+
+
+.EX
+.PP
+.B policykit_resolve_exec_t
+.EE
+
+- Set files with the policykit_resolve_exec_t type, if you want to transition an executable to the policykit_resolve_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type policykit_resolve_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), policykit_resolve(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, policykit_selinux(8), policykit_selinux(8), policykit_auth_selinux(8), policykit_grant_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/policykit_selinux.8 serefpolicy-3.7.19/man/man8/policykit_selinux.8
--- nsaserefpolicy/man/man8/policykit_selinux.8	2013-03-15 11:41:12.170153508 +0100
+++ serefpolicy-3.7.19/man/man8/policykit_selinux.8	2013-03-15 11:40:04.746151970 +0100
@@ -1,67 +1,79 @@
-.TH  "policykit_selinux"  "8"  "policykit" "dwalsh@redhat.com" "policykit SELinux Policy documentation"
+.TH  "policykit_selinux"  "8"  "13-01-04" "policykit" "SELinux Policy documentation for policykit"
 .SH "NAME"
 policykit_selinux \- Security Enhanced Linux Policy for the policykit processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the policykit processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B policykit
-(Policy framework for controlling privileges for system-wide services)
-processes via flexible mandatory access
-control.  
+The policykit processes execute with the policykit_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep policykit_t
+
+
+.SH "ENTRYPOINTS"
+
+The policykit_t SELinux type can be entered via the "policykit_exec_t" file type.  The default entrypoint paths for the policykit_t domain are the following:"
+
+/usr/libexec/polkitd.*, /usr/libexec/polkit-1/polkitd.*, /usr/lib/policykit/polkitd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux policykit policy is very flexible allowing users to setup their policykit processes in as secure a method as possible.
+.PP
+The following process types are defined for policykit:
+
+.EX
+.B policykit_grant_t, policykit_auth_t, policykit_t, policykit_resolve_t
+.EE
+.PP
+Note:
+.B semanage permissive -a policykit_t
+
+can be used to make the process type policykit_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux policykit policy is very flexible allowing users to setup their policykit processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for policykit:
 
 
 .EX
 .PP
-.B policykit_auth_exec_t 
+.B policykit_auth_exec_t
 .EE
 
 - Set files with the policykit_auth_exec_t type, if you want to transition an executable to the policykit_auth_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/libexec/polkit-read-auth-helper, /usr/lib/policykit/polkit-read-auth-helper, /usr/libexec/polkit-1/polkit-agent-helper-1
 
 .EX
 .PP
-.B policykit_exec_t 
+.B policykit_exec_t
 .EE
 
 - Set files with the policykit_exec_t type, if you want to transition an executable to the policykit_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/libexec/polkitd.*, /usr/libexec/polkit-1/polkitd.*, /usr/lib/policykit/polkitd
 
 .EX
 .PP
-.B policykit_grant_exec_t 
+.B policykit_grant_exec_t
 .EE
 
 - Set files with the policykit_grant_exec_t type, if you want to transition an executable to the policykit_grant_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/libexec/polkit-grant-helper.*, /usr/lib/policykit/polkit-grant-helper.*
 
 .EX
 .PP
-.B policykit_reload_t 
+.B policykit_reload_t
 .EE
 
 - Set files with the policykit_reload_t type, if you want to treat the files as policykit reload data.
@@ -69,19 +81,15 @@
 
 .EX
 .PP
-.B policykit_resolve_exec_t 
+.B policykit_resolve_exec_t
 .EE
 
 - Set files with the policykit_resolve_exec_t type, if you want to transition an executable to the policykit_resolve_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib/policykit/polkit-resolve-exe-helper.*, /usr/libexec/polkit-resolve-exe-helper.*
 
 .EX
 .PP
-.B policykit_tmp_t 
+.B policykit_tmp_t
 .EE
 
 - Set files with the policykit_tmp_t type, if you want to store policykit temporary files in the /tmp directories.
@@ -89,19 +97,15 @@
 
 .EX
 .PP
-.B policykit_var_lib_t 
+.B policykit_var_lib_t
 .EE
 
 - Set files with the policykit_var_lib_t type, if you want to store the policykit files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/PolicyKit-public(/.*)?, /var/lib/PolicyKit(/.*)?, /var/lib/polkit-1(/.*)?
 
 .EX
 .PP
-.B policykit_var_run_t 
+.B policykit_var_run_t
 .EE
 
 - Set files with the policykit_var_run_t type, if you want to store the policykit files under the /run directory.
@@ -109,28 +113,86 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux policykit policy is very flexible allowing users to setup their policykit processes in as secure a method as possible.
-.PP 
-The following process types are defined for policykit:
+.SH "MANAGED FILES"
 
-.EX
-.B policykit_grant_t, policykit_auth_t, policykit_t, policykit_resolve_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type policykit_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B policykit_reload_t
+
+	/var/lib/misc/PolicyKit.reload
+.br
+
+.br
+.B policykit_var_lib_t
+
+	/var/lib/polkit-1(/.*)?
+.br
+	/var/lib/PolicyKit(/.*)?
+.br
+	/var/lib/PolicyKit-public(/.*)?
+.br
+
+.br
+.B policykit_var_run_t
+
+	/var/run/PolicyKit(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -143,11 +205,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), policykit(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), policykit(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, policykit_auth_selinux(8), policykit_grant_selinux(8), policykit_resolve_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/portmap_helper_selinux.8 serefpolicy-3.7.19/man/man8/portmap_helper_selinux.8
--- nsaserefpolicy/man/man8/portmap_helper_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/portmap_helper_selinux.8	2013-03-15 11:39:55.503151759 +0100
@@ -0,0 +1,160 @@
+.TH  "portmap_helper_selinux"  "8"  "13-01-04" "portmap_helper" "SELinux Policy documentation for portmap_helper"
+.SH "NAME"
+portmap_helper_selinux \- Security Enhanced Linux Policy for the portmap_helper processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the portmap_helper processes via flexible mandatory access control.
+
+The portmap_helper processes execute with the portmap_helper_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep portmap_helper_t
+
+
+.SH "ENTRYPOINTS"
+
+The portmap_helper_t SELinux type can be entered via the "portmap_helper_exec_t" file type.  The default entrypoint paths for the portmap_helper_t domain are the following:"
+
+/usr/sbin/pmap_set, /usr/sbin/pmap_dump
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux portmap_helper policy is very flexible allowing users to setup their portmap_helper processes in as secure a method as possible.
+.PP
+The following process types are defined for portmap_helper:
+
+.EX
+.B portmap_helper_t
+.EE
+.PP
+Note:
+.B semanage permissive -a portmap_helper_t
+
+can be used to make the process type portmap_helper_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux portmap_helper policy is very flexible allowing users to setup their portmap_helper processes in as secure a method as possible.
+.PP
+The following file types are defined for portmap_helper:
+
+
+.EX
+.PP
+.B portmap_helper_exec_t
+.EE
+
+- Set files with the portmap_helper_exec_t type, if you want to transition an executable to the portmap_helper_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type portmap_helper_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B portmap_var_run_t
+
+	/var/run/portmap\.upgrade-state
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_run_t
+
+	/var/run/.*
+.br
+	/var/run
+.br
+	/var/spool/postfix/pid
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), portmap_helper(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, portmap_selinux(8), portmap_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/portmap_selinux.8 serefpolicy-3.7.19/man/man8/portmap_selinux.8
--- nsaserefpolicy/man/man8/portmap_selinux.8	2013-03-15 11:41:12.148153508 +0100
+++ serefpolicy-3.7.19/man/man8/portmap_selinux.8	2013-03-15 11:40:04.256151959 +0100
@@ -1,31 +1,73 @@
-.TH  "portmap_selinux"  "8"  "portmap" "dwalsh@redhat.com" "portmap SELinux Policy documentation"
+.TH  "portmap_selinux"  "8"  "13-01-04" "portmap" "SELinux Policy documentation for portmap"
 .SH "NAME"
 portmap_selinux \- Security Enhanced Linux Policy for the portmap processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the portmap processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B portmap
-(RPC port mapping service)
-processes via flexible mandatory access
-control.  
+The portmap processes execute with the portmap_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep portmap_t
+
+
+.SH "ENTRYPOINTS"
+
+The portmap_t SELinux type can be entered via the "portmap_exec_t" file type.  The default entrypoint paths for the portmap_t domain are the following:"
+
+/sbin/portmap
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
+.PP
+The following process types are defined for portmap:
+
+.EX
+.B portmap_helper_t, portmap_t
+.EE
+.PP
+Note:
+.B semanage permissive -a portmap_t
+
+can be used to make the process type portmap_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  portmap policy is extremely flexible and has several booleans that allow you to manipulate the policy and run portmap with the tightest access possible.
+
+
+.PP
+If you want to allow samba to act as a portmapper, you must turn on the samba_portmapper boolean.
+
+.EX
+.B setsebool -P samba_portmapper 1
+.EE
+
+.PP
+If you want to allow samba to act as a portmapper, you must turn on the samba_portmapper boolean.
+
+.EX
+.B setsebool -P samba_portmapper 1
+.EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for portmap:
 
 
 .EX
 .PP
-.B portmap_exec_t 
+.B portmap_exec_t
 .EE
 
 - Set files with the portmap_exec_t type, if you want to transition an executable to the portmap_t domain.
@@ -33,19 +75,15 @@
 
 .EX
 .PP
-.B portmap_helper_exec_t 
+.B portmap_helper_exec_t
 .EE
 
 - Set files with the portmap_helper_exec_t type, if you want to transition an executable to the portmap_helper_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/pmap_set, /usr/sbin/pmap_dump
 
 .EX
 .PP
-.B portmap_tmp_t 
+.B portmap_tmp_t
 .EE
 
 - Set files with the portmap_tmp_t type, if you want to store portmap temporary files in the /tmp directories.
@@ -53,7 +91,7 @@
 
 .EX
 .PP
-.B portmap_var_run_t 
+.B portmap_var_run_t
 .EE
 
 - Set files with the portmap_var_run_t type, if you want to store the portmap files under the /run directory.
@@ -61,51 +99,99 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for portmap:
 
 .EX
 .TP 5
-.B portmap_port_t 
+.B portmap_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 111
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
-.PP 
-The following process types are defined for portmap:
-
-.EX
-.B portmap_helper_t, portmap_t 
+udp 111
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type portmap_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B portmap_tmp_t
+
+
+.br
+.B portmap_var_run_t
+
+	/var/run/portmap\.upgrade-state
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -120,12 +206,18 @@
 .B semanage port
 can also be used to manipulate the port definitions
 
+.B semanage boolean
+can also be used to manipulate the booleans
+
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), portmap(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), portmap(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), portmap_helper_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/portreserve_selinux.8 serefpolicy-3.7.19/man/man8/portreserve_selinux.8
--- nsaserefpolicy/man/man8/portreserve_selinux.8	2013-03-15 11:41:12.207153509 +0100
+++ serefpolicy-3.7.19/man/man8/portreserve_selinux.8	2013-03-15 11:40:06.376152007 +0100
@@ -1,31 +1,55 @@
-.TH  "portreserve_selinux"  "8"  "portreserve" "dwalsh@redhat.com" "portreserve SELinux Policy documentation"
+.TH  "portreserve_selinux"  "8"  "13-01-04" "portreserve" "SELinux Policy documentation for portreserve"
 .SH "NAME"
 portreserve_selinux \- Security Enhanced Linux Policy for the portreserve processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the portreserve processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B portreserve
-(Reserve well-known ports in the RPC port range)
-processes via flexible mandatory access
-control.  
+The portreserve processes execute with the portreserve_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep portreserve_t
+
+
+.SH "ENTRYPOINTS"
+
+The portreserve_t SELinux type can be entered via the "portreserve_exec_t" file type.  The default entrypoint paths for the portreserve_t domain are the following:"
+
+/sbin/portreserve
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux portreserve policy is very flexible allowing users to setup their portreserve processes in as secure a method as possible.
+.PP
+The following process types are defined for portreserve:
+
+.EX
+.B portreserve_t
+.EE
+.PP
+Note:
+.B semanage permissive -a portreserve_t
+
+can be used to make the process type portreserve_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux portreserve policy is very flexible allowing users to setup their portreserve processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for portreserve:
 
 
 .EX
 .PP
-.B portreserve_etc_t 
+.B portreserve_etc_t
 .EE
 
 - Set files with the portreserve_etc_t type, if you want to store portreserve files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B portreserve_exec_t 
+.B portreserve_exec_t
 .EE
 
 - Set files with the portreserve_exec_t type, if you want to transition an executable to the portreserve_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B portreserve_initrc_exec_t 
+.B portreserve_initrc_exec_t
 .EE
 
 - Set files with the portreserve_initrc_exec_t type, if you want to transition an executable to the portreserve_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B portreserve_var_run_t 
+.B portreserve_var_run_t
 .EE
 
 - Set files with the portreserve_var_run_t type, if you want to store the portreserve files under the /run directory.
@@ -57,28 +81,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux portreserve policy is very flexible allowing users to setup their portreserve processes in as secure a method as possible.
-.PP 
-The following process types are defined for portreserve:
+.SH "MANAGED FILES"
 
-.EX
-.B portreserve_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type portreserve_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B portreserve_var_run_t
+
+	/var/run/portreserve(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +157,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), portreserve(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), portreserve(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/postfix_bounce_selinux.8 serefpolicy-3.7.19/man/man8/postfix_bounce_selinux.8
--- nsaserefpolicy/man/man8/postfix_bounce_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_bounce_selinux.8	2013-03-15 11:40:01.615151898 +0100
@@ -0,0 +1,176 @@
+.TH  "postfix_bounce_selinux"  "8"  "13-01-04" "postfix_bounce" "SELinux Policy documentation for postfix_bounce"
+.SH "NAME"
+postfix_bounce_selinux \- Security Enhanced Linux Policy for the postfix_bounce processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_bounce processes via flexible mandatory access control.
+
+The postfix_bounce processes execute with the postfix_bounce_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_bounce_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_bounce_t SELinux type can be entered via the "postfix_bounce_exec_t" file type.  The default entrypoint paths for the postfix_bounce_t domain are the following:"
+
+/usr/libexec/postfix/bounce
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_bounce policy is very flexible allowing users to setup their postfix_bounce processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_bounce:
+
+.EX
+.B postfix_bounce_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_bounce_t
+
+can be used to make the process type postfix_bounce_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_bounce policy is very flexible allowing users to setup their postfix_bounce processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_bounce:
+
+
+.EX
+.PP
+.B postfix_bounce_exec_t
+.EE
+
+- Set files with the postfix_bounce_exec_t type, if you want to transition an executable to the postfix_bounce_t domain.
+
+
+.EX
+.PP
+.B postfix_bounce_tmp_t
+.EE
+
+- Set files with the postfix_bounce_tmp_t type, if you want to store postfix bounce temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_bounce_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_bounce_tmp_t
+
+
+.br
+.B postfix_spool_bounce_t
+
+	/var/spool/postfix/bounce(/.*)?
+.br
+
+.br
+.B postfix_spool_maildrop_t
+
+	/var/spool/postfix/defer(/.*)?
+.br
+	/var/spool/postfix/deferred(/.*)?
+.br
+	/var/spool/postfix/maildrop(/.*)?
+.br
+
+.br
+.B postfix_spool_t
+
+	/var/spool/postfix.*
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_bounce(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_cleanup_selinux.8 serefpolicy-3.7.19/man/man8/postfix_cleanup_selinux.8
--- nsaserefpolicy/man/man8/postfix_cleanup_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_cleanup_selinux.8	2013-03-15 11:40:04.299151960 +0100
@@ -0,0 +1,160 @@
+.TH  "postfix_cleanup_selinux"  "8"  "13-01-04" "postfix_cleanup" "SELinux Policy documentation for postfix_cleanup"
+.SH "NAME"
+postfix_cleanup_selinux \- Security Enhanced Linux Policy for the postfix_cleanup processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_cleanup processes via flexible mandatory access control.
+
+The postfix_cleanup processes execute with the postfix_cleanup_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_cleanup_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_cleanup_t SELinux type can be entered via the "postfix_cleanup_exec_t" file type.  The default entrypoint paths for the postfix_cleanup_t domain are the following:"
+
+/usr/libexec/postfix/cleanup
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_cleanup policy is very flexible allowing users to setup their postfix_cleanup processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_cleanup:
+
+.EX
+.B postfix_cleanup_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_cleanup_t
+
+can be used to make the process type postfix_cleanup_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_cleanup policy is very flexible allowing users to setup their postfix_cleanup processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_cleanup:
+
+
+.EX
+.PP
+.B postfix_cleanup_exec_t
+.EE
+
+- Set files with the postfix_cleanup_exec_t type, if you want to transition an executable to the postfix_cleanup_t domain.
+
+
+.EX
+.PP
+.B postfix_cleanup_tmp_t
+.EE
+
+- Set files with the postfix_cleanup_tmp_t type, if you want to store postfix cleanup temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_cleanup_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_cleanup_tmp_t
+
+
+.br
+.B postfix_spool_t
+
+	/var/spool/postfix.*
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_cleanup(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_local_selinux.8 serefpolicy-3.7.19/man/man8/postfix_local_selinux.8
--- nsaserefpolicy/man/man8/postfix_local_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_local_selinux.8	2013-03-15 11:39:58.975151838 +0100
@@ -0,0 +1,225 @@
+.TH  "postfix_local_selinux"  "8"  "13-01-04" "postfix_local" "SELinux Policy documentation for postfix_local"
+.SH "NAME"
+postfix_local_selinux \- Security Enhanced Linux Policy for the postfix_local processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_local processes via flexible mandatory access control.
+
+The postfix_local processes execute with the postfix_local_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_local_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_local_t SELinux type can be entered via the "postfix_local_exec_t" file type.  The default entrypoint paths for the postfix_local_t domain are the following:"
+
+/usr/libexec/postfix/local
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_local policy is very flexible allowing users to setup their postfix_local processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_local:
+
+.EX
+.B postfix_local_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_local_t
+
+can be used to make the process type postfix_local_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  postfix_local policy is extremely flexible and has several booleans that allow you to manipulate the policy and run postfix_local with the tightest access possible.
+
+
+.PP
+If you want to allow postfix_local domain full write access to mail_spool directories, you must turn on the allow_postfix_local_write_mail_spool boolean.
+
+.EX
+.B setsebool -P allow_postfix_local_write_mail_spool 1
+.EE
+
+.PP
+If you want to allow postfix_local domain full write access to mail_spool directories, you must turn on the allow_postfix_local_write_mail_spool boolean.
+
+.EX
+.B setsebool -P allow_postfix_local_write_mail_spool 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_local policy is very flexible allowing users to setup their postfix_local processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_local:
+
+
+.EX
+.PP
+.B postfix_local_exec_t
+.EE
+
+- Set files with the postfix_local_exec_t type, if you want to transition an executable to the postfix_local_t domain.
+
+
+.EX
+.PP
+.B postfix_local_tmp_t
+.EE
+
+- Set files with the postfix_local_tmp_t type, if you want to store postfix local temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_local_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B dovecot_spool_t
+
+	/var/spool/dovecot(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_home_rw_t
+
+	/root/Maildir(/.*)?
+.br
+	/home/[^/]*/Maildir(/.*)?
+.br
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mailman_data_t
+
+	/etc/mailman(/.*)?
+.br
+	/var/lib/mailman(/.*)?
+.br
+	/var/spool/mailman(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B postfix_local_tmp_t
+
+
+.br
+.B postfix_spool_t
+
+	/var/spool/postfix.*
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_local(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_map_selinux.8 serefpolicy-3.7.19/man/man8/postfix_map_selinux.8
--- nsaserefpolicy/man/man8/postfix_map_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_map_selinux.8	2013-03-15 11:39:57.554151806 +0100
@@ -0,0 +1,160 @@
+.TH  "postfix_map_selinux"  "8"  "13-01-04" "postfix_map" "SELinux Policy documentation for postfix_map"
+.SH "NAME"
+postfix_map_selinux \- Security Enhanced Linux Policy for the postfix_map processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_map processes via flexible mandatory access control.
+
+The postfix_map processes execute with the postfix_map_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_map_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_map_t SELinux type can be entered via the "postfix_map_exec_t" file type.  The default entrypoint paths for the postfix_map_t domain are the following:"
+
+/usr/sbin/postmap
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_map policy is very flexible allowing users to setup their postfix_map processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_map:
+
+.EX
+.B postfix_map_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_map_t
+
+can be used to make the process type postfix_map_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_map policy is very flexible allowing users to setup their postfix_map processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_map:
+
+
+.EX
+.PP
+.B postfix_map_exec_t
+.EE
+
+- Set files with the postfix_map_exec_t type, if you want to transition an executable to the postfix_map_t domain.
+
+
+.EX
+.PP
+.B postfix_map_tmp_t
+.EE
+
+- Set files with the postfix_map_tmp_t type, if you want to store postfix map temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_map_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mailman_data_t
+
+	/etc/mailman(/.*)?
+.br
+	/var/lib/mailman(/.*)?
+.br
+	/var/spool/mailman(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_etc_t
+
+	/etc/postfix.*
+.br
+
+.br
+.B postfix_map_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_map(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_master_selinux.8 serefpolicy-3.7.19/man/man8/postfix_master_selinux.8
--- nsaserefpolicy/man/man8/postfix_master_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_master_selinux.8	2013-03-15 11:40:06.317152006 +0100
@@ -0,0 +1,214 @@
+.TH  "postfix_master_selinux"  "8"  "13-01-04" "postfix_master" "SELinux Policy documentation for postfix_master"
+.SH "NAME"
+postfix_master_selinux \- Security Enhanced Linux Policy for the postfix_master processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_master processes via flexible mandatory access control.
+
+The postfix_master processes execute with the postfix_master_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_master_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_master_t SELinux type can be entered via the "postfix_master_exec_t" file type.  The default entrypoint paths for the postfix_master_t domain are the following:"
+
+/usr/sbin/postcat, /usr/sbin/postfix, /usr/sbin/postlog, /usr/sbin/postkick, /usr/sbin/postlock, /usr/sbin/postalias, /usr/sbin/postsuper, /usr/libexec/postfix/master
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_master policy is very flexible allowing users to setup their postfix_master processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_master:
+
+.EX
+.B postfix_master_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_master_t
+
+can be used to make the process type postfix_master_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_master policy is very flexible allowing users to setup their postfix_master processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_master:
+
+
+.EX
+.PP
+.B postfix_master_exec_t
+.EE
+
+- Set files with the postfix_master_exec_t type, if you want to transition an executable to the postfix_master_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_master_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B etc_aliases_t
+
+	/etc/postfix/aliases.*
+.br
+	/etc/aliases
+.br
+	/etc/aliases\.db
+.br
+	/etc/mail/aliases
+.br
+	/etc/mail/aliases\.db
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mailman_data_t
+
+	/etc/mailman(/.*)?
+.br
+	/var/lib/mailman(/.*)?
+.br
+	/var/spool/mailman(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_data_t
+
+	/var/lib/postfix.*
+.br
+
+.br
+.B postfix_etc_t
+
+	/etc/postfix.*
+.br
+
+.br
+.B postfix_prng_t
+
+	/etc/postfix/prng_exch
+.br
+
+.br
+.B postfix_spool_flush_t
+
+	/var/spool/postfix/flush(/.*)?
+.br
+
+.br
+.B postfix_spool_maildrop_t
+
+	/var/spool/postfix/defer(/.*)?
+.br
+	/var/spool/postfix/deferred(/.*)?
+.br
+	/var/spool/postfix/maildrop(/.*)?
+.br
+
+.br
+.B postfix_spool_t
+
+	/var/spool/postfix.*
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_master(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_pickup_selinux.8 serefpolicy-3.7.19/man/man8/postfix_pickup_selinux.8
--- nsaserefpolicy/man/man8/postfix_pickup_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_pickup_selinux.8	2013-03-15 11:40:04.968151975 +0100
@@ -0,0 +1,154 @@
+.TH  "postfix_pickup_selinux"  "8"  "13-01-04" "postfix_pickup" "SELinux Policy documentation for postfix_pickup"
+.SH "NAME"
+postfix_pickup_selinux \- Security Enhanced Linux Policy for the postfix_pickup processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_pickup processes via flexible mandatory access control.
+
+The postfix_pickup processes execute with the postfix_pickup_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_pickup_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_pickup_t SELinux type can be entered via the "postfix_pickup_exec_t" file type.  The default entrypoint paths for the postfix_pickup_t domain are the following:"
+
+/usr/libexec/postfix/pickup
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_pickup policy is very flexible allowing users to setup their postfix_pickup processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_pickup:
+
+.EX
+.B postfix_pickup_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_pickup_t
+
+can be used to make the process type postfix_pickup_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_pickup policy is very flexible allowing users to setup their postfix_pickup processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_pickup:
+
+
+.EX
+.PP
+.B postfix_pickup_exec_t
+.EE
+
+- Set files with the postfix_pickup_exec_t type, if you want to transition an executable to the postfix_pickup_t domain.
+
+
+.EX
+.PP
+.B postfix_pickup_tmp_t
+.EE
+
+- Set files with the postfix_pickup_tmp_t type, if you want to store postfix pickup temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_pickup_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_pickup_tmp_t
+
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_pickup(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_pipe_selinux.8 serefpolicy-3.7.19/man/man8/postfix_pipe_selinux.8
--- nsaserefpolicy/man/man8/postfix_pipe_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_pipe_selinux.8	2013-03-15 11:39:54.961151747 +0100
@@ -0,0 +1,170 @@
+.TH  "postfix_pipe_selinux"  "8"  "13-01-04" "postfix_pipe" "SELinux Policy documentation for postfix_pipe"
+.SH "NAME"
+postfix_pipe_selinux \- Security Enhanced Linux Policy for the postfix_pipe processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_pipe processes via flexible mandatory access control.
+
+The postfix_pipe processes execute with the postfix_pipe_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_pipe_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_pipe_t SELinux type can be entered via the "postfix_pipe_exec_t" file type.  The default entrypoint paths for the postfix_pipe_t domain are the following:"
+
+/usr/libexec/postfix/pipe
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_pipe policy is very flexible allowing users to setup their postfix_pipe processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_pipe:
+
+.EX
+.B postfix_pipe_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_pipe_t
+
+can be used to make the process type postfix_pipe_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_pipe policy is very flexible allowing users to setup their postfix_pipe processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_pipe:
+
+
+.EX
+.PP
+.B postfix_pipe_exec_t
+.EE
+
+- Set files with the postfix_pipe_exec_t type, if you want to transition an executable to the postfix_pipe_t domain.
+
+
+.EX
+.PP
+.B postfix_pipe_tmp_t
+.EE
+
+- Set files with the postfix_pipe_tmp_t type, if you want to store postfix pipe temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_pipe_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_pipe_tmp_t
+
+
+.br
+.B postfix_spool_t
+
+	/var/spool/postfix.*
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_pipe(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_postdrop_selinux.8 serefpolicy-3.7.19/man/man8/postfix_postdrop_selinux.8
--- nsaserefpolicy/man/man8/postfix_postdrop_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_postdrop_selinux.8	2013-03-15 11:40:04.460151963 +0100
@@ -0,0 +1,164 @@
+.TH  "postfix_postdrop_selinux"  "8"  "13-01-04" "postfix_postdrop" "SELinux Policy documentation for postfix_postdrop"
+.SH "NAME"
+postfix_postdrop_selinux \- Security Enhanced Linux Policy for the postfix_postdrop processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_postdrop processes via flexible mandatory access control.
+
+The postfix_postdrop processes execute with the postfix_postdrop_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_postdrop_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_postdrop_t SELinux type can be entered via the "postfix_postdrop_exec_t" file type.  The default entrypoint paths for the postfix_postdrop_t domain are the following:"
+
+/usr/sbin/postdrop
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_postdrop policy is very flexible allowing users to setup their postfix_postdrop processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_postdrop:
+
+.EX
+.B postfix_postdrop_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_postdrop_t
+
+can be used to make the process type postfix_postdrop_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_postdrop policy is very flexible allowing users to setup their postfix_postdrop processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_postdrop:
+
+
+.EX
+.PP
+.B postfix_postdrop_exec_t
+.EE
+
+- Set files with the postfix_postdrop_exec_t type, if you want to transition an executable to the postfix_postdrop_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_postdrop_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B arpwatch_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_spool_maildrop_t
+
+	/var/spool/postfix/defer(/.*)?
+.br
+	/var/spool/postfix/deferred(/.*)?
+.br
+	/var/spool/postfix/maildrop(/.*)?
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B uucpd_spool_t
+
+	/var/spool/uucp(/.*)?
+.br
+	/var/spool/uucppublic(/.*)?
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_postdrop(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_postqueue_selinux.8 serefpolicy-3.7.19/man/man8/postfix_postqueue_selinux.8
--- nsaserefpolicy/man/man8/postfix_postqueue_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_postqueue_selinux.8	2013-03-15 11:40:05.299151982 +0100
@@ -0,0 +1,146 @@
+.TH  "postfix_postqueue_selinux"  "8"  "13-01-04" "postfix_postqueue" "SELinux Policy documentation for postfix_postqueue"
+.SH "NAME"
+postfix_postqueue_selinux \- Security Enhanced Linux Policy for the postfix_postqueue processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_postqueue processes via flexible mandatory access control.
+
+The postfix_postqueue processes execute with the postfix_postqueue_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_postqueue_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_postqueue_t SELinux type can be entered via the "postfix_postqueue_exec_t" file type.  The default entrypoint paths for the postfix_postqueue_t domain are the following:"
+
+/usr/sbin/postqueue
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_postqueue policy is very flexible allowing users to setup their postfix_postqueue processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_postqueue:
+
+.EX
+.B postfix_postqueue_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_postqueue_t
+
+can be used to make the process type postfix_postqueue_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_postqueue policy is very flexible allowing users to setup their postfix_postqueue processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_postqueue:
+
+
+.EX
+.PP
+.B postfix_postqueue_exec_t
+.EE
+
+- Set files with the postfix_postqueue_exec_t type, if you want to transition an executable to the postfix_postqueue_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_postqueue_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B arpwatch_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_postqueue(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_qmgr_selinux.8 serefpolicy-3.7.19/man/man8/postfix_qmgr_selinux.8
--- nsaserefpolicy/man/man8/postfix_qmgr_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_qmgr_selinux.8	2013-03-15 11:40:02.811151926 +0100
@@ -0,0 +1,170 @@
+.TH  "postfix_qmgr_selinux"  "8"  "13-01-04" "postfix_qmgr" "SELinux Policy documentation for postfix_qmgr"
+.SH "NAME"
+postfix_qmgr_selinux \- Security Enhanced Linux Policy for the postfix_qmgr processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_qmgr processes via flexible mandatory access control.
+
+The postfix_qmgr processes execute with the postfix_qmgr_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_qmgr_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_qmgr_t SELinux type can be entered via the "postfix_qmgr_exec_t" file type.  The default entrypoint paths for the postfix_qmgr_t domain are the following:"
+
+/usr/libexec/postfix/(n)?qmgr
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_qmgr policy is very flexible allowing users to setup their postfix_qmgr processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_qmgr:
+
+.EX
+.B postfix_qmgr_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_qmgr_t
+
+can be used to make the process type postfix_qmgr_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_qmgr policy is very flexible allowing users to setup their postfix_qmgr processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_qmgr:
+
+
+.EX
+.PP
+.B postfix_qmgr_exec_t
+.EE
+
+- Set files with the postfix_qmgr_exec_t type, if you want to transition an executable to the postfix_qmgr_t domain.
+
+
+.EX
+.PP
+.B postfix_qmgr_tmp_t
+.EE
+
+- Set files with the postfix_qmgr_tmp_t type, if you want to store postfix qmgr temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_qmgr_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_qmgr_tmp_t
+
+
+.br
+.B postfix_spool_maildrop_t
+
+	/var/spool/postfix/defer(/.*)?
+.br
+	/var/spool/postfix/deferred(/.*)?
+.br
+	/var/spool/postfix/maildrop(/.*)?
+.br
+
+.br
+.B postfix_spool_t
+
+	/var/spool/postfix.*
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_qmgr(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_showq_selinux.8 serefpolicy-3.7.19/man/man8/postfix_showq_selinux.8
--- nsaserefpolicy/man/man8/postfix_showq_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_showq_selinux.8	2013-03-15 11:40:00.177151866 +0100
@@ -0,0 +1,142 @@
+.TH  "postfix_showq_selinux"  "8"  "13-01-04" "postfix_showq" "SELinux Policy documentation for postfix_showq"
+.SH "NAME"
+postfix_showq_selinux \- Security Enhanced Linux Policy for the postfix_showq processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_showq processes via flexible mandatory access control.
+
+The postfix_showq processes execute with the postfix_showq_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_showq_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_showq_t SELinux type can be entered via the "postfix_showq_exec_t" file type.  The default entrypoint paths for the postfix_showq_t domain are the following:"
+
+/usr/libexec/postfix/showq
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_showq policy is very flexible allowing users to setup their postfix_showq processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_showq:
+
+.EX
+.B postfix_showq_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_showq_t
+
+can be used to make the process type postfix_showq_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_showq policy is very flexible allowing users to setup their postfix_showq processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_showq:
+
+
+.EX
+.PP
+.B postfix_showq_exec_t
+.EE
+
+- Set files with the postfix_showq_exec_t type, if you want to transition an executable to the postfix_showq_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_showq_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_showq(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_smtpd_selinux.8 serefpolicy-3.7.19/man/man8/postfix_smtpd_selinux.8
--- nsaserefpolicy/man/man8/postfix_smtpd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_smtpd_selinux.8	2013-03-15 11:39:55.445151758 +0100
@@ -0,0 +1,166 @@
+.TH  "postfix_smtpd_selinux"  "8"  "13-01-04" "postfix_smtpd" "SELinux Policy documentation for postfix_smtpd"
+.SH "NAME"
+postfix_smtpd_selinux \- Security Enhanced Linux Policy for the postfix_smtpd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_smtpd processes via flexible mandatory access control.
+
+The postfix_smtpd processes execute with the postfix_smtpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_smtpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_smtpd_t SELinux type can be entered via the "postfix_smtpd_exec_t" file type.  The default entrypoint paths for the postfix_smtpd_t domain are the following:"
+
+/usr/libexec/postfix/smtpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_smtpd policy is very flexible allowing users to setup their postfix_smtpd processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_smtpd:
+
+.EX
+.B postfix_smtpd_t, postfix_smtp_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_smtpd_t
+
+can be used to make the process type postfix_smtpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_smtpd policy is very flexible allowing users to setup their postfix_smtpd processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_smtpd:
+
+
+.EX
+.PP
+.B postfix_smtpd_exec_t
+.EE
+
+- Set files with the postfix_smtpd_exec_t type, if you want to transition an executable to the postfix_smtpd_t domain.
+
+
+.EX
+.PP
+.B postfix_smtpd_tmp_t
+.EE
+
+- Set files with the postfix_smtpd_tmp_t type, if you want to store postfix smtpd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_smtpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_prng_t
+
+	/etc/postfix/prng_exch
+.br
+
+.br
+.B postfix_smtpd_tmp_t
+
+
+.br
+.B postfix_spool_t
+
+	/var/spool/postfix.*
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_smtpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtp_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_smtp_selinux.8 serefpolicy-3.7.19/man/man8/postfix_smtp_selinux.8
--- nsaserefpolicy/man/man8/postfix_smtp_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_smtp_selinux.8	2013-03-15 11:39:59.547151851 +0100
@@ -0,0 +1,182 @@
+.TH  "postfix_smtp_selinux"  "8"  "13-01-04" "postfix_smtp" "SELinux Policy documentation for postfix_smtp"
+.SH "NAME"
+postfix_smtp_selinux \- Security Enhanced Linux Policy for the postfix_smtp processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_smtp processes via flexible mandatory access control.
+
+The postfix_smtp processes execute with the postfix_smtp_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_smtp_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_smtp_t SELinux type can be entered via the "postfix_smtp_exec_t" file type.  The default entrypoint paths for the postfix_smtp_t domain are the following:"
+
+/usr/libexec/postfix/lmtp, /usr/libexec/postfix/smtp, /usr/libexec/postfix/scache
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_smtp policy is very flexible allowing users to setup their postfix_smtp processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_smtp:
+
+.EX
+.B postfix_smtpd_t, postfix_smtp_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_smtp_t
+
+can be used to make the process type postfix_smtp_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_smtp policy is very flexible allowing users to setup their postfix_smtp processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_smtp:
+
+
+.EX
+.PP
+.B postfix_smtp_exec_t
+.EE
+
+- Set files with the postfix_smtp_exec_t type, if you want to transition an executable to the postfix_smtp_t domain.
+
+
+.EX
+.PP
+.B postfix_smtp_tmp_t
+.EE
+
+- Set files with the postfix_smtp_tmp_t type, if you want to store postfix smtp temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_smtpd_exec_t
+.EE
+
+- Set files with the postfix_smtpd_exec_t type, if you want to transition an executable to the postfix_smtpd_t domain.
+
+
+.EX
+.PP
+.B postfix_smtpd_tmp_t
+.EE
+
+- Set files with the postfix_smtpd_tmp_t type, if you want to store postfix smtpd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_smtp_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_prng_t
+
+	/etc/postfix/prng_exch
+.br
+
+.br
+.B postfix_smtp_tmp_t
+
+
+.br
+.B postfix_spool_t
+
+	/var/spool/postfix.*
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_smtp(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtpd_selinux(8), postfix_virtual_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postfix_virtual_selinux.8 serefpolicy-3.7.19/man/man8/postfix_virtual_selinux.8
--- nsaserefpolicy/man/man8/postfix_virtual_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/postfix_virtual_selinux.8	2013-03-15 11:39:56.906151791 +0100
@@ -0,0 +1,192 @@
+.TH  "postfix_virtual_selinux"  "8"  "13-01-04" "postfix_virtual" "SELinux Policy documentation for postfix_virtual"
+.SH "NAME"
+postfix_virtual_selinux \- Security Enhanced Linux Policy for the postfix_virtual processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the postfix_virtual processes via flexible mandatory access control.
+
+The postfix_virtual processes execute with the postfix_virtual_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep postfix_virtual_t
+
+
+.SH "ENTRYPOINTS"
+
+The postfix_virtual_t SELinux type can be entered via the "postfix_virtual_exec_t" file type.  The default entrypoint paths for the postfix_virtual_t domain are the following:"
+
+/usr/libexec/postfix/virtual
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postfix_virtual policy is very flexible allowing users to setup their postfix_virtual processes in as secure a method as possible.
+.PP
+The following process types are defined for postfix_virtual:
+
+.EX
+.B postfix_virtual_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postfix_virtual_t
+
+can be used to make the process type postfix_virtual_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux postfix_virtual policy is very flexible allowing users to setup their postfix_virtual processes in as secure a method as possible.
+.PP
+The following file types are defined for postfix_virtual:
+
+
+.EX
+.PP
+.B postfix_virtual_exec_t
+.EE
+
+- Set files with the postfix_virtual_exec_t type, if you want to transition an executable to the postfix_virtual_t domain.
+
+
+.EX
+.PP
+.B postfix_virtual_tmp_t
+.EE
+
+- Set files with the postfix_virtual_tmp_t type, if you want to store postfix virtual temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type postfix_virtual_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B dovecot_spool_t
+
+	/var/spool/dovecot(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B postfix_spool_t
+
+	/var/spool/postfix.*
+.br
+
+.br
+.B postfix_var_run_t
+
+	/var/spool/postfix/pid/.*
+.br
+
+.br
+.B postfix_virtual_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.br
+.B user_home_type
+
+	all user home files
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), postfix_virtual(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, postfix_bounce_selinux(8), postfix_cleanup_selinux(8), postfix_local_selinux(8), postfix_map_selinux(8), postfix_master_selinux(8), postfix_pickup_selinux(8), postfix_pipe_selinux(8), postfix_postdrop_selinux(8), postfix_postqueue_selinux(8), postfix_qmgr_selinux(8), postfix_showq_selinux(8), postfix_smtp_selinux(8), postfix_smtpd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postgresql_selinux.8 serefpolicy-3.7.19/man/man8/postgresql_selinux.8
--- nsaserefpolicy/man/man8/postgresql_selinux.8	2013-03-15 11:41:12.212153509 +0100
+++ serefpolicy-3.7.19/man/man8/postgresql_selinux.8	2013-03-15 11:40:06.376152007 +0100
@@ -1,78 +1,111 @@
-.TH  "postgresql_selinux"  "8"  "postgresql" "dwalsh@redhat.com" "postgresql SELinux Policy documentation"
+.TH  "postgresql_selinux"  "8"  "13-01-04" "postgresql" "SELinux Policy documentation for postgresql"
 .SH "NAME"
 postgresql_selinux \- Security Enhanced Linux Policy for the postgresql processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the postgresql processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B postgresql
-(PostgreSQL relational database)
-processes via flexible mandatory access
-control.  
+The postgresql processes execute with the postgresql_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep postgresql_t
+
+
+.SH "ENTRYPOINTS"
+
+The postgresql_t SELinux type can be entered via the "postgresql_exec_t" file type.  The default entrypoint paths for the postgresql_t domain are the following:"
+
+/usr/lib(64)?/postgresql/bin/.*, /usr/lib(64)?/pgsql/test/regress/pg_regress, /usr/bin/(se)?postgres, /usr/bin/initdb(\.sepgsql)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
+.PP
+The following process types are defined for postgresql:
+
+.EX
+.B postgresql_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postgresql_t
+
+can be used to make the process type postgresql_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  postgresql policy is extremely flexible and has several booleans that allow you to manipulate the policy and run postgresql with the tightest access possible.
 
 
 .PP
-If you want to allow users to connect to PostgreSQ, you must turn on the allow_user_postgresql_connect boolean.
+If you want to allow postgresql to use ssh and rsync for point-in-time recovery, you must turn on the postgresql_can_rsync boolean.
+
+.EX
+.B setsebool -P postgresql_can_rsync 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow postgresql to use ssh and rsync for point-in-time recovery, you must turn on the postgresql_can_rsync boolean.
+
+.EX
+.B setsebool -P postgresql_can_rsync 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
 
 .EX
 .B setsebool -P allow_user_postgresql_connect 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for postgresql:
 
 
 .EX
 .PP
-.B postgresql_db_t 
+.B postgresql_db_t
 .EE
 
 - Set files with the postgresql_db_t type, if you want to treat the files as postgresql database content.
 
-.br
-.TP 5
-Paths: 
-/var/lib/pgsql/data(/.*)?, /var/lib/sepgsql(/.*)?, /usr/lib(64)?/pgsql/test/regress(/.*)?, /usr/share/jonas/pgsql(/.*)?, /var/lib/postgres(ql)?(/.*)?
 
 .EX
 .PP
-.B postgresql_etc_t 
+.B postgresql_etc_t
 .EE
 
 - Set files with the postgresql_etc_t type, if you want to store postgresql files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/etc/sysconfig/pgsql(/.*)?, /etc/postgresql(/.*)?
 
 .EX
 .PP
-.B postgresql_exec_t 
+.B postgresql_exec_t
 .EE
 
 - Set files with the postgresql_exec_t type, if you want to transition an executable to the postgresql_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/(se)?postgres, /usr/lib(64)?/pgsql/test/regress/pg_regress, /usr/lib(64)?/postgresql/bin/.*, /usr/bin/initdb(\.sepgsql)?
 
 .EX
 .PP
-.B postgresql_initrc_exec_t 
+.B postgresql_initrc_exec_t
 .EE
 
 - Set files with the postgresql_initrc_exec_t type, if you want to transition an executable to the postgresql_initrc_t domain.
@@ -80,7 +113,7 @@
 
 .EX
 .PP
-.B postgresql_lock_t 
+.B postgresql_lock_t
 .EE
 
 - Set files with the postgresql_lock_t type, if you want to treat the files as postgresql lock data, stored under the /var/lock directory
@@ -88,19 +121,15 @@
 
 .EX
 .PP
-.B postgresql_log_t 
+.B postgresql_log_t
 .EE
 
 - Set files with the postgresql_log_t type, if you want to treat the data as postgresql log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/sepgsql/pgstartup\.log, /var/lib/pgsql/pgstartup\.log, /var/log/postgresql(/.*)?, /var/log/postgres\.log.*, /var/log/rhdb/rhdb(/.*)?, /var/lib/pgsql/logfile(/.*)?, /var/log/sepostgresql\.log.*
 
 .EX
 .PP
-.B postgresql_tmp_t 
+.B postgresql_tmp_t
 .EE
 
 - Set files with the postgresql_tmp_t type, if you want to store postgresql temporary files in the /tmp directories.
@@ -108,63 +137,189 @@
 
 .EX
 .PP
-.B postgresql_var_run_t 
+.B postgresql_var_run_t
 .EE
 
 - Set files with the postgresql_var_run_t type, if you want to store the postgresql files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/postmaster.*, /var/run/postgresql(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for postgresql:
 
 .EX
 .TP 5
-.B postgresql_port_t 
+.B postgresql_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5432
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
-.PP 
-The following process types are defined for postgresql:
+.SH "MANAGED FILES"
 
-.EX
-.B postgresql_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type postgresql_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B hugetlbfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B postgresql_db_t
+
+	/usr/lib(64)?/pgsql/test/regress(/.*)?
+.br
+	/var/lib/sepgsql(/.*)?
+.br
+	/var/lib/postgres(ql)?(/.*)?
+.br
+	/var/lib/pgsql/data(/.*)?
+.br
+	/usr/share/jonas/pgsql(/.*)?
+.br
+
+.br
+.B postgresql_lock_t
+
+
+.br
+.B postgresql_log_t
+
+	/var/log/rhdb/rhdb(/.*)?
+.br
+	/var/log/postgresql(/.*)?
+.br
+	/var/log/postgres\.log.*
+.br
+	/var/lib/pgsql/logfile(/.*)?
+.br
+	/var/log/sepostgresql\.log.*
+.br
+	/var/lib/pgsql/pgstartup\.log.*
+.br
+	/var/lib/sepgsql/pgstartup\.log.*
+.br
+
+.br
+.B postgresql_tmp_t
+
+
+.br
+.B postgresql_var_run_t
+
+	/var/run/postgresql(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -183,12 +338,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), postgresql(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), postgresql(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/postgrey_selinux.8 serefpolicy-3.7.19/man/man8/postgrey_selinux.8
--- nsaserefpolicy/man/man8/postgrey_selinux.8	2013-03-15 11:41:11.928153503 +0100
+++ serefpolicy-3.7.19/man/man8/postgrey_selinux.8	2013-03-15 11:39:59.732151855 +0100
@@ -1,31 +1,55 @@
-.TH  "postgrey_selinux"  "8"  "postgrey" "dwalsh@redhat.com" "postgrey SELinux Policy documentation"
+.TH  "postgrey_selinux"  "8"  "13-01-04" "postgrey" "SELinux Policy documentation for postgrey"
 .SH "NAME"
 postgrey_selinux \- Security Enhanced Linux Policy for the postgrey processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the postgrey processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B postgrey
-(Postfix grey-listing server)
-processes via flexible mandatory access
-control.  
+The postgrey processes execute with the postgrey_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep postgrey_t
+
+
+.SH "ENTRYPOINTS"
+
+The postgrey_t SELinux type can be entered via the "postgrey_exec_t" file type.  The default entrypoint paths for the postgrey_t domain are the following:"
+
+/usr/sbin/postgrey
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
+.PP
+The following process types are defined for postgrey:
+
+.EX
+.B postgrey_t
+.EE
+.PP
+Note:
+.B semanage permissive -a postgrey_t
+
+can be used to make the process type postgrey_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for postgrey:
 
 
 .EX
 .PP
-.B postgrey_etc_t 
+.B postgrey_etc_t
 .EE
 
 - Set files with the postgrey_etc_t type, if you want to store postgrey files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B postgrey_exec_t 
+.B postgrey_exec_t
 .EE
 
 - Set files with the postgrey_exec_t type, if you want to transition an executable to the postgrey_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B postgrey_initrc_exec_t 
+.B postgrey_initrc_exec_t
 .EE
 
 - Set files with the postgrey_initrc_exec_t type, if you want to transition an executable to the postgrey_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B postgrey_spool_t 
+.B postgrey_spool_t
 .EE
 
 - Set files with the postgrey_spool_t type, if you want to store the postgrey files under the /var/spool directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B postgrey_var_lib_t 
+.B postgrey_var_lib_t
 .EE
 
 - Set files with the postgrey_var_lib_t type, if you want to store the postgrey files under the /var/lib directory.
@@ -65,63 +89,119 @@
 
 .EX
 .PP
-.B postgrey_var_run_t 
+.B postgrey_var_run_t
 .EE
 
 - Set files with the postgrey_var_run_t type, if you want to store the postgrey files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/postgrey\.pid, /var/run/postgrey(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for postgrey:
 
 .EX
 .TP 5
-.B postgrey_port_t 
+.B postgrey_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 60000
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
-.PP 
-The following process types are defined for postgrey:
+.SH "MANAGED FILES"
 
-.EX
-.B postgrey_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type postgrey_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B postfix_spool_type
+
+
+.br
+.B postgrey_spool_t
+
+	/var/spool/postfix/postgrey(/.*)?
+.br
+
+.br
+.B postgrey_var_lib_t
+
+	/var/lib/postgrey(/.*)?
+.br
+
+.br
+.B postgrey_var_run_t
+
+	/var/run/postgrey(/.*)?
+.br
+	/var/run/postgrey\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -137,11 +217,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), postgrey(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), postgrey(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/pppd_selinux.8 serefpolicy-3.7.19/man/man8/pppd_selinux.8
--- nsaserefpolicy/man/man8/pppd_selinux.8	2013-03-15 11:41:11.837153501 +0100
+++ serefpolicy-3.7.19/man/man8/pppd_selinux.8	2013-03-15 11:39:57.741151810 +0100
@@ -1,91 +1,119 @@
-.TH  "pppd_selinux"  "8"  "pppd" "dwalsh@redhat.com" "pppd SELinux Policy documentation"
+.TH  "pppd_selinux"  "8"  "13-01-04" "pppd" "SELinux Policy documentation for pppd"
 .SH "NAME"
 pppd_selinux \- Security Enhanced Linux Policy for the pppd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the pppd processes via flexible mandatory access control.
 
+The pppd processes execute with the pppd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep pppd_t
+
+
+.SH "ENTRYPOINTS"
+
+The pppd_t SELinux type can be entered via the "pppd_exec_t" file type.  The default entrypoint paths for the pppd_t domain are the following:"
+
+/usr/sbin/pppd, /sbin/ppp-watch, /usr/sbin/ipppd, /sbin/pppoe-server
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pppd policy is very flexible allowing users to setup their pppd processes in as secure a method as possible.
+.PP
+The following process types are defined for pppd:
+
+.EX
+.B pppd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pppd_t
+
+can be used to make the process type pppd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  pppd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run pppd with the tightest access possible.
 
 
 .PP
-If you want to allow pppd to be run for a regular use, you must turn on the pppd_for_user boolean.
+If you want to allow pppd to load kernel modules for certain modems, you must turn on the pppd_can_insmod boolean.
+
+.EX
+.B setsebool -P pppd_can_insmod 1
+.EE
+
+.PP
+If you want to allow pppd to be run for a regular user, you must turn on the pppd_for_user boolean.
 
 .EX
 .B setsebool -P pppd_for_user 1
 .EE
 
 .PP
-If you want to allow pppd to load kernel modules for certain modem, you must turn on the pppd_can_insmod boolean.
+If you want to allow pppd to load kernel modules for certain modems, you must turn on the pppd_can_insmod boolean.
 
 .EX
 .B setsebool -P pppd_can_insmod 1
 .EE
 
+.PP
+If you want to allow pppd to be run for a regular user, you must turn on the pppd_for_user boolean.
+
+.EX
+.B setsebool -P pppd_for_user 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux pppd policy is very flexible allowing users to setup their pppd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for pppd:
 
 
 .EX
 .PP
-.B pppd_etc_rw_t 
+.B pppd_etc_rw_t
 .EE
 
 - Set files with the pppd_etc_rw_t type, if you want to treat the files as pppd etc read/write content.
 
-.br
-.TP 5
-Paths: 
-/etc/ppp(/.*)?, /etc/ppp/resolv\.conf, /etc/ppp/peers(/.*)?
 
 .EX
 .PP
-.B pppd_etc_t 
+.B pppd_etc_t
 .EE
 
 - Set files with the pppd_etc_t type, if you want to store pppd files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/root/.ppprc, /etc/ppp
 
 .EX
 .PP
-.B pppd_exec_t 
+.B pppd_exec_t
 .EE
 
 - Set files with the pppd_exec_t type, if you want to transition an executable to the pppd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/pppd, /usr/sbin/ipppd, /sbin/ppp-watch, /sbin/pppoe-server
 
 .EX
 .PP
-.B pppd_initrc_exec_t 
+.B pppd_initrc_exec_t
 .EE
 
 - Set files with the pppd_initrc_exec_t type, if you want to transition an executable to the pppd_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/ppp/(auth|ip(v6|x)?)-(up|down), /etc/rc\.d/init\.d/ppp
 
 .EX
 .PP
-.B pppd_lock_t 
+.B pppd_lock_t
 .EE
 
 - Set files with the pppd_lock_t type, if you want to treat the files as pppd lock data, stored under the /var/lock directory
@@ -93,19 +121,15 @@
 
 .EX
 .PP
-.B pppd_log_t 
+.B pppd_log_t
 .EE
 
 - Set files with the pppd_log_t type, if you want to treat the data as pppd log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/ppp/.*, /var/log/ppp-connect-errors.*
 
 .EX
 .PP
-.B pppd_secret_t 
+.B pppd_secret_t
 .EE
 
 - Set files with the pppd_secret_t type, if you want to treat the files as pppd se secret data.
@@ -113,7 +137,7 @@
 
 .EX
 .PP
-.B pppd_tmp_t 
+.B pppd_tmp_t
 .EE
 
 - Set files with the pppd_tmp_t type, if you want to store pppd temporary files in the /tmp directories.
@@ -121,40 +145,230 @@
 
 .EX
 .PP
-.B pppd_var_run_t 
+.B pppd_var_run_t
 .EE
 
 - Set files with the pppd_var_run_t type, if you want to store the pppd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/pppd[0-9]*\.tdb, /var/run/ppp(/.*)?, /var/run/(i)?ppp.*pid[^/]*
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux pppd policy is very flexible allowing users to setup their pppd processes in as secure a method as possible.
-.PP 
-The following process types are defined for pppd:
+.SH "MANAGED FILES"
 
-.EX
-.B pppd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type pppd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B pppd_etc_rw_t
+
+	/etc/ppp(/.*)?
+.br
+	/etc/ppp/peers(/.*)?
+.br
+	/etc/ppp/resolv\.conf
+.br
+
+.br
+.B pppd_lock_t
+
+
+.br
+.B pppd_log_t
+
+	/var/log/ppp/.*
+.br
+	/var/log/ppp-connect-errors.*
+.br
+
+.br
+.B pppd_tmp_t
+
+
+.br
+.B pppd_var_run_t
+
+	/var/run/(i)?ppp.*pid[^/]*
+.br
+	/var/run/ppp(/.*)?
+.br
+	/var/run/pppd[0-9]*\.tdb
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -170,12 +384,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), pppd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), pppd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/pptp_selinux.8 serefpolicy-3.7.19/man/man8/pptp_selinux.8
--- nsaserefpolicy/man/man8/pptp_selinux.8	2013-03-15 11:41:11.828153500 +0100
+++ serefpolicy-3.7.19/man/man8/pptp_selinux.8	2013-03-15 11:39:57.607151807 +0100
@@ -1,25 +1,55 @@
-.TH  "pptp_selinux"  "8"  "pptp" "dwalsh@redhat.com" "pptp SELinux Policy documentation"
+.TH  "pptp_selinux"  "8"  "13-01-04" "pptp" "SELinux Policy documentation for pptp"
 .SH "NAME"
 pptp_selinux \- Security Enhanced Linux Policy for the pptp processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the pptp processes via flexible mandatory access control.
 
+The pptp processes execute with the pptp_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep pptp_t
+
+
+.SH "ENTRYPOINTS"
+
+The pptp_t SELinux type can be entered via the "pptp_exec_t" file type.  The default entrypoint paths for the pptp_t domain are the following:"
+
+/usr/sbin/pptp
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pptp policy is very flexible allowing users to setup their pptp processes in as secure a method as possible.
+.PP
+The following process types are defined for pptp:
+
+.EX
+.B pptp_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pptp_t
+
+can be used to make the process type pptp_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux pptp policy is very flexible allowing users to setup their pptp processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for pptp:
 
 
 .EX
 .PP
-.B pptp_exec_t 
+.B pptp_exec_t
 .EE
 
 - Set files with the pptp_exec_t type, if you want to transition an executable to the pptp_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B pptp_log_t 
+.B pptp_log_t
 .EE
 
 - Set files with the pptp_log_t type, if you want to treat the data as pptp log data, usually stored under the /var/log directory.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B pptp_var_run_t 
+.B pptp_var_run_t
 .EE
 
 - Set files with the pptp_var_run_t type, if you want to store the pptp files under the /run directory.
@@ -43,28 +73,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux pptp policy is very flexible allowing users to setup their pptp processes in as secure a method as possible.
-.PP 
-The following process types are defined for pptp:
+.SH "MANAGED FILES"
 
-.EX
-.B pptp_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type pptp_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pptp_log_t
+
+
+.br
+.B pptp_var_run_t
+
+	/var/run/pptp(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -77,11 +153,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), pptp(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), pptp(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/prelink_cron_system_selinux.8 serefpolicy-3.7.19/man/man8/prelink_cron_system_selinux.8
--- nsaserefpolicy/man/man8/prelink_cron_system_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/prelink_cron_system_selinux.8	2013-03-15 11:40:01.501151896 +0100
@@ -0,0 +1,148 @@
+.TH  "prelink_cron_system_selinux"  "8"  "13-01-04" "prelink_cron_system" "SELinux Policy documentation for prelink_cron_system"
+.SH "NAME"
+prelink_cron_system_selinux \- Security Enhanced Linux Policy for the prelink_cron_system processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the prelink_cron_system processes via flexible mandatory access control.
+
+The prelink_cron_system processes execute with the prelink_cron_system_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep prelink_cron_system_t
+
+
+.SH "ENTRYPOINTS"
+
+The prelink_cron_system_t SELinux type can be entered via the "prelink_cron_system_exec_t" file type.  The default entrypoint paths for the prelink_cron_system_t domain are the following:"
+
+/etc/cron\.daily/prelink
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux prelink_cron_system policy is very flexible allowing users to setup their prelink_cron_system processes in as secure a method as possible.
+.PP
+The following process types are defined for prelink_cron_system:
+
+.EX
+.B prelink_cron_system_t
+.EE
+.PP
+Note:
+.B semanage permissive -a prelink_cron_system_t
+
+can be used to make the process type prelink_cron_system_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux prelink_cron_system policy is very flexible allowing users to setup their prelink_cron_system processes in as secure a method as possible.
+.PP
+The following file types are defined for prelink_cron_system:
+
+
+.EX
+.PP
+.B prelink_cron_system_exec_t
+.EE
+
+- Set files with the prelink_cron_system_exec_t type, if you want to transition an executable to the prelink_cron_system_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type prelink_cron_system_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B prelink_log_t
+
+	/var/log/prelink(/.*)?
+.br
+	/var/log/prelink\.log.*
+.br
+
+.br
+.B prelink_var_lib_t
+
+	/var/lib/prelink(/.*)?
+.br
+	/var/lib/misc/prelink.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), prelink_cron_system(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, prelink_selinux(8), prelink_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/prelink_selinux.8 serefpolicy-3.7.19/man/man8/prelink_selinux.8
--- nsaserefpolicy/man/man8/prelink_selinux.8	2013-03-15 11:41:12.032153505 +0100
+++ serefpolicy-3.7.19/man/man8/prelink_selinux.8	2013-03-15 11:40:01.707151900 +0100
@@ -1,31 +1,55 @@
-.TH  "prelink_selinux"  "8"  "prelink" "dwalsh@redhat.com" "prelink SELinux Policy documentation"
+.TH  "prelink_selinux"  "8"  "13-01-04" "prelink" "SELinux Policy documentation for prelink"
 .SH "NAME"
 prelink_selinux \- Security Enhanced Linux Policy for the prelink processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the prelink processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B prelink
-(Prelink ELF shared library mappings)
-processes via flexible mandatory access
-control.  
+The prelink processes execute with the prelink_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep prelink_t
+
+
+.SH "ENTRYPOINTS"
+
+The prelink_t SELinux type can be entered via the "mtrr_device_t,prelink_exec_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the prelink_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/prelink(\.bin)?, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux prelink policy is very flexible allowing users to setup their prelink processes in as secure a method as possible.
+.PP
+The following process types are defined for prelink:
+
+.EX
+.B prelink_cron_system_t, prelink_t
+.EE
+.PP
+Note:
+.B semanage permissive -a prelink_t
+
+can be used to make the process type prelink_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux prelink policy is very flexible allowing users to setup their prelink processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for prelink:
 
 
 .EX
 .PP
-.B prelink_cache_t 
+.B prelink_cache_t
 .EE
 
 - Set files with the prelink_cache_t type, if you want to store the files under the /var/cache directory.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B prelink_cron_system_exec_t 
+.B prelink_cron_system_exec_t
 .EE
 
 - Set files with the prelink_cron_system_exec_t type, if you want to transition an executable to the prelink_cron_system_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B prelink_exec_t 
+.B prelink_exec_t
 .EE
 
 - Set files with the prelink_exec_t type, if you want to transition an executable to the prelink_t domain.
@@ -49,19 +73,15 @@
 
 .EX
 .PP
-.B prelink_log_t 
+.B prelink_log_t
 .EE
 
 - Set files with the prelink_log_t type, if you want to treat the data as prelink log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/prelink(/.*)?, /var/log/prelink\.log
 
 .EX
 .PP
-.B prelink_tmp_t 
+.B prelink_tmp_t
 .EE
 
 - Set files with the prelink_tmp_t type, if you want to store prelink temporary files in the /tmp directories.
@@ -69,7 +89,7 @@
 
 .EX
 .PP
-.B prelink_tmpfs_t 
+.B prelink_tmpfs_t
 .EE
 
 - Set files with the prelink_tmpfs_t type, if you want to store prelink files on a tmpfs file system.
@@ -77,40 +97,28 @@
 
 .EX
 .PP
-.B prelink_var_lib_t 
+.B prelink_var_lib_t
 .EE
 
 - Set files with the prelink_var_lib_t type, if you want to store the prelink files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/prelink(/.*)?, /var/lib/misc/prelink.*
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux prelink policy is very flexible allowing users to setup their prelink processes in as secure a method as possible.
-.PP 
-The following process types are defined for prelink:
+.SH "MANAGED FILES"
 
-.EX
-.B prelink_cron_system_t, prelink_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type prelink_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -123,11 +131,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), prelink(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), prelink(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, prelink_cron_system_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/prelude_audisp_selinux.8 serefpolicy-3.7.19/man/man8/prelude_audisp_selinux.8
--- nsaserefpolicy/man/man8/prelude_audisp_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/prelude_audisp_selinux.8	2013-03-15 11:39:54.276151731 +0100
@@ -0,0 +1,156 @@
+.TH  "prelude_audisp_selinux"  "8"  "13-01-04" "prelude_audisp" "SELinux Policy documentation for prelude_audisp"
+.SH "NAME"
+prelude_audisp_selinux \- Security Enhanced Linux Policy for the prelude_audisp processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the prelude_audisp processes via flexible mandatory access control.
+
+The prelude_audisp processes execute with the prelude_audisp_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep prelude_audisp_t
+
+
+.SH "ENTRYPOINTS"
+
+The prelude_audisp_t SELinux type can be entered via the "prelude_audisp_exec_t" file type.  The default entrypoint paths for the prelude_audisp_t domain are the following:"
+
+/sbin/audisp-prelude
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux prelude_audisp policy is very flexible allowing users to setup their prelude_audisp processes in as secure a method as possible.
+.PP
+The following process types are defined for prelude_audisp:
+
+.EX
+.B prelude_audisp_t
+.EE
+.PP
+Note:
+.B semanage permissive -a prelude_audisp_t
+
+can be used to make the process type prelude_audisp_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux prelude_audisp policy is very flexible allowing users to setup their prelude_audisp processes in as secure a method as possible.
+.PP
+The following file types are defined for prelude_audisp:
+
+
+.EX
+.PP
+.B prelude_audisp_exec_t
+.EE
+
+- Set files with the prelude_audisp_exec_t type, if you want to transition an executable to the prelude_audisp_t domain.
+
+
+.EX
+.PP
+.B prelude_audisp_var_run_t
+.EE
+
+- Set files with the prelude_audisp_var_run_t type, if you want to store the prelude audisp files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type prelude_audisp_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B prelude_spool_t
+
+	/var/spool/prelude(/.*)?
+.br
+	/var/spool/prelude-manager(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), prelude_audisp(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, prelude_selinux(8), prelude_selinux(8), prelude_correlator_selinux(8), prelude_lml_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/prelude_correlator_selinux.8 serefpolicy-3.7.19/man/man8/prelude_correlator_selinux.8
--- nsaserefpolicy/man/man8/prelude_correlator_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/prelude_correlator_selinux.8	2013-03-15 11:39:57.259151799 +0100
@@ -0,0 +1,156 @@
+.TH  "prelude_correlator_selinux"  "8"  "13-01-04" "prelude_correlator" "SELinux Policy documentation for prelude_correlator"
+.SH "NAME"
+prelude_correlator_selinux \- Security Enhanced Linux Policy for the prelude_correlator processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the prelude_correlator processes via flexible mandatory access control.
+
+The prelude_correlator processes execute with the prelude_correlator_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep prelude_correlator_t
+
+
+.SH "ENTRYPOINTS"
+
+The prelude_correlator_t SELinux type can be entered via the "prelude_correlator_exec_t" file type.  The default entrypoint paths for the prelude_correlator_t domain are the following:"
+
+/usr/bin/prelude-correlator
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux prelude_correlator policy is very flexible allowing users to setup their prelude_correlator processes in as secure a method as possible.
+.PP
+The following process types are defined for prelude_correlator:
+
+.EX
+.B prelude_correlator_t
+.EE
+.PP
+Note:
+.B semanage permissive -a prelude_correlator_t
+
+can be used to make the process type prelude_correlator_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux prelude_correlator policy is very flexible allowing users to setup their prelude_correlator processes in as secure a method as possible.
+.PP
+The following file types are defined for prelude_correlator:
+
+
+.EX
+.PP
+.B prelude_correlator_config_t
+.EE
+
+- Set files with the prelude_correlator_config_t type, if you want to treat the files as prelude correlator configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B prelude_correlator_exec_t
+.EE
+
+- Set files with the prelude_correlator_exec_t type, if you want to transition an executable to the prelude_correlator_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type prelude_correlator_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B prelude_spool_t
+
+	/var/spool/prelude(/.*)?
+.br
+	/var/spool/prelude-manager(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), prelude_correlator(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, prelude_selinux(8), prelude_selinux(8), prelude_audisp_selinux(8), prelude_lml_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/prelude_lml_selinux.8 serefpolicy-3.7.19/man/man8/prelude_lml_selinux.8
--- nsaserefpolicy/man/man8/prelude_lml_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/prelude_lml_selinux.8	2013-03-15 11:40:00.947151883 +0100
@@ -0,0 +1,184 @@
+.TH  "prelude_lml_selinux"  "8"  "13-01-04" "prelude_lml" "SELinux Policy documentation for prelude_lml"
+.SH "NAME"
+prelude_lml_selinux \- Security Enhanced Linux Policy for the prelude_lml processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the prelude_lml processes via flexible mandatory access control.
+
+The prelude_lml processes execute with the prelude_lml_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep prelude_lml_t
+
+
+.SH "ENTRYPOINTS"
+
+The prelude_lml_t SELinux type can be entered via the "prelude_lml_exec_t" file type.  The default entrypoint paths for the prelude_lml_t domain are the following:"
+
+/usr/bin/prelude-lml
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux prelude_lml policy is very flexible allowing users to setup their prelude_lml processes in as secure a method as possible.
+.PP
+The following process types are defined for prelude_lml:
+
+.EX
+.B prelude_lml_t
+.EE
+.PP
+Note:
+.B semanage permissive -a prelude_lml_t
+
+can be used to make the process type prelude_lml_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux prelude_lml policy is very flexible allowing users to setup their prelude_lml processes in as secure a method as possible.
+.PP
+The following file types are defined for prelude_lml:
+
+
+.EX
+.PP
+.B prelude_lml_exec_t
+.EE
+
+- Set files with the prelude_lml_exec_t type, if you want to transition an executable to the prelude_lml_t domain.
+
+
+.EX
+.PP
+.B prelude_lml_tmp_t
+.EE
+
+- Set files with the prelude_lml_tmp_t type, if you want to store prelude lml temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B prelude_lml_var_run_t
+.EE
+
+- Set files with the prelude_lml_var_run_t type, if you want to store the prelude lml files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type prelude_lml_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B prelude_lml_tmp_t
+
+
+.br
+.B prelude_lml_var_run_t
+
+	/var/run/prelude-lml.pid
+.br
+
+.br
+.B prelude_spool_t
+
+	/var/spool/prelude(/.*)?
+.br
+	/var/spool/prelude-manager(/.*)?
+.br
+
+.br
+.B prelude_var_lib_t
+
+	/var/lib/prelude-lml(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), prelude_lml(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, prelude_selinux(8), prelude_selinux(8), prelude_audisp_selinux(8), prelude_correlator_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/prelude_selinux.8 serefpolicy-3.7.19/man/man8/prelude_selinux.8
--- nsaserefpolicy/man/man8/prelude_selinux.8	2013-03-15 11:41:12.013153505 +0100
+++ serefpolicy-3.7.19/man/man8/prelude_selinux.8	2013-03-15 11:40:01.049151885 +0100
@@ -1,31 +1,55 @@
-.TH  "prelude_selinux"  "8"  "prelude" "dwalsh@redhat.com" "prelude SELinux Policy documentation"
+.TH  "prelude_selinux"  "8"  "13-01-04" "prelude" "SELinux Policy documentation for prelude"
 .SH "NAME"
 prelude_selinux \- Security Enhanced Linux Policy for the prelude processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the prelude processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B prelude
-(Prelude hybrid intrusion detection system)
-processes via flexible mandatory access
-control.  
+The prelude processes execute with the prelude_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep prelude_t
+
+
+.SH "ENTRYPOINTS"
+
+The prelude_t SELinux type can be entered via the "prelude_exec_t" file type.  The default entrypoint paths for the prelude_t domain are the following:"
+
+/usr/bin/prelude-manager
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
+.PP
+The following process types are defined for prelude:
+
+.EX
+.B prelude_lml_t, prelude_t, prelude_audisp_t, prelude_correlator_t
+.EE
+.PP
+Note:
+.B semanage permissive -a prelude_t
+
+can be used to make the process type prelude_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for prelude:
 
 
 .EX
 .PP
-.B prelude_audisp_exec_t 
+.B prelude_audisp_exec_t
 .EE
 
 - Set files with the prelude_audisp_exec_t type, if you want to transition an executable to the prelude_audisp_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B prelude_audisp_var_run_t 
+.B prelude_audisp_var_run_t
 .EE
 
 - Set files with the prelude_audisp_var_run_t type, if you want to store the prelude audisp files under the /run directory.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B prelude_correlator_config_t 
+.B prelude_correlator_config_t
 .EE
 
 - Set files with the prelude_correlator_config_t type, if you want to treat the files as prelude correlator configuration data, usually stored under the /etc directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B prelude_correlator_exec_t 
+.B prelude_correlator_exec_t
 .EE
 
 - Set files with the prelude_correlator_exec_t type, if you want to transition an executable to the prelude_correlator_t domain.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B prelude_exec_t 
+.B prelude_exec_t
 .EE
 
 - Set files with the prelude_exec_t type, if you want to transition an executable to the prelude_t domain.
@@ -65,19 +89,15 @@
 
 .EX
 .PP
-.B prelude_initrc_exec_t 
+.B prelude_initrc_exec_t
 .EE
 
 - Set files with the prelude_initrc_exec_t type, if you want to transition an executable to the prelude_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/prelude-correlator, /etc/rc\.d/init\.d/prelude-lml, /etc/rc\.d/init\.d/prelude-manager
 
 .EX
 .PP
-.B prelude_lml_exec_t 
+.B prelude_lml_exec_t
 .EE
 
 - Set files with the prelude_lml_exec_t type, if you want to transition an executable to the prelude_lml_t domain.
@@ -85,7 +105,7 @@
 
 .EX
 .PP
-.B prelude_lml_tmp_t 
+.B prelude_lml_tmp_t
 .EE
 
 - Set files with the prelude_lml_tmp_t type, if you want to store prelude lml temporary files in the /tmp directories.
@@ -93,7 +113,7 @@
 
 .EX
 .PP
-.B prelude_lml_var_run_t 
+.B prelude_lml_var_run_t
 .EE
 
 - Set files with the prelude_lml_var_run_t type, if you want to store the prelude lml files under the /run directory.
@@ -101,7 +121,7 @@
 
 .EX
 .PP
-.B prelude_log_t 
+.B prelude_log_t
 .EE
 
 - Set files with the prelude_log_t type, if you want to treat the data as prelude log data, usually stored under the /var/log directory.
@@ -109,19 +129,15 @@
 
 .EX
 .PP
-.B prelude_spool_t 
+.B prelude_spool_t
 .EE
 
 - Set files with the prelude_spool_t type, if you want to store the prelude files under the /var/spool directory.
 
-.br
-.TP 5
-Paths: 
-/var/spool/prelude(/.*)?, /var/spool/prelude-manager(/.*)?
 
 .EX
 .PP
-.B prelude_var_lib_t 
+.B prelude_var_lib_t
 .EE
 
 - Set files with the prelude_var_lib_t type, if you want to store the prelude files under the /var/lib directory.
@@ -129,7 +145,7 @@
 
 .EX
 .PP
-.B prelude_var_run_t 
+.B prelude_var_run_t
 .EE
 
 - Set files with the prelude_var_run_t type, if you want to store the prelude files under the /run directory.
@@ -137,51 +153,119 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for prelude:
 
 .EX
 .TP 5
-.B prelude_port_t 
+.B prelude_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 4690
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
-.PP 
-The following process types are defined for prelude:
-
-.EX
-.B prelude_lml_t, prelude_t, prelude_audisp_t, prelude_correlator_t 
+udp 4690
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type prelude_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B prelude_log_t
+
+	/var/log/prelude.*
+.br
+
+.br
+.B prelude_spool_t
+
+	/var/spool/prelude(/.*)?
+.br
+	/var/spool/prelude-manager(/.*)?
+.br
+
+.br
+.B prelude_var_lib_t
+
+	/var/lib/prelude-lml(/.*)?
+.br
+
+.br
+.B prelude_var_run_t
+
+	/var/run/prelude-manager(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -197,11 +281,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), prelude(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), prelude(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, prelude_audisp_selinux(8), prelude_correlator_selinux(8), prelude_lml_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/privoxy_selinux.8 serefpolicy-3.7.19/man/man8/privoxy_selinux.8
--- nsaserefpolicy/man/man8/privoxy_selinux.8	2013-03-15 11:41:12.223153509 +0100
+++ serefpolicy-3.7.19/man/man8/privoxy_selinux.8	2013-03-15 11:40:06.615152012 +0100
@@ -1,16 +1,40 @@
-.TH  "privoxy_selinux"  "8"  "privoxy" "dwalsh@redhat.com" "privoxy SELinux Policy documentation"
+.TH  "privoxy_selinux"  "8"  "13-01-04" "privoxy" "SELinux Policy documentation for privoxy"
 .SH "NAME"
 privoxy_selinux \- Security Enhanced Linux Policy for the privoxy processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the privoxy processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B privoxy
-(Privacy enhancing web proxy)
-processes via flexible mandatory access
-control.  
+The privoxy processes execute with the privoxy_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep privoxy_t
+
+
+.SH "ENTRYPOINTS"
+
+The privoxy_t SELinux type can be entered via the "privoxy_exec_t" file type.  The default entrypoint paths for the privoxy_t domain are the following:"
+
+/usr/sbin/privoxy
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux privoxy policy is very flexible allowing users to setup their privoxy processes in as secure a method as possible.
+.PP
+The following process types are defined for privoxy:
+
+.EX
+.B privoxy_t
+.EE
+.PP
+Note:
+.B semanage permissive -a privoxy_t
+
+can be used to make the process type privoxy_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  privoxy policy is extremely flexible and has several booleans that allow you to manipulate the policy and run privoxy with the tightest access possible.
@@ -23,20 +47,27 @@
 .B setsebool -P privoxy_connect_any 1
 .EE
 
+.PP
+If you want to allow privoxy to connect to all ports, not just HTTP, FTP, and Gopher ports, you must turn on the privoxy_connect_any boolean.
+
+.EX
+.B setsebool -P privoxy_connect_any 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux privoxy policy is very flexible allowing users to setup their privoxy processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for privoxy:
 
 
 .EX
 .PP
-.B privoxy_etc_rw_t 
+.B privoxy_etc_rw_t
 .EE
 
 - Set files with the privoxy_etc_rw_t type, if you want to treat the files as privoxy etc read/write content.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B privoxy_exec_t 
+.B privoxy_exec_t
 .EE
 
 - Set files with the privoxy_exec_t type, if you want to transition an executable to the privoxy_t domain.
@@ -52,7 +83,7 @@
 
 .EX
 .PP
-.B privoxy_initrc_exec_t 
+.B privoxy_initrc_exec_t
 .EE
 
 - Set files with the privoxy_initrc_exec_t type, if you want to transition an executable to the privoxy_initrc_t domain.
@@ -60,7 +91,7 @@
 
 .EX
 .PP
-.B privoxy_log_t 
+.B privoxy_log_t
 .EE
 
 - Set files with the privoxy_log_t type, if you want to treat the data as privoxy log data, usually stored under the /var/log directory.
@@ -68,7 +99,7 @@
 
 .EX
 .PP
-.B privoxy_var_run_t 
+.B privoxy_var_run_t
 .EE
 
 - Set files with the privoxy_var_run_t type, if you want to store the privoxy files under the /run directory.
@@ -76,28 +107,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux privoxy policy is very flexible allowing users to setup their privoxy processes in as secure a method as possible.
-.PP 
-The following process types are defined for privoxy:
+.SH "MANAGED FILES"
 
-.EX
-.B privoxy_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type privoxy_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B privoxy_etc_rw_t
+
+	/etc/privoxy/[^/]*\.action
+.br
+
+.br
+.B privoxy_log_t
+
+	/var/log/privoxy(/.*)?
+.br
+
+.br
+.B privoxy_var_run_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -113,12 +196,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), privoxy(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), privoxy(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/procmail_selinux.8 serefpolicy-3.7.19/man/man8/procmail_selinux.8
--- nsaserefpolicy/man/man8/procmail_selinux.8	2013-03-15 11:41:10.246153464 +0100
+++ serefpolicy-3.7.19/man/man8/procmail_selinux.8	2013-03-15 11:39:54.399151734 +0100
@@ -1,31 +1,55 @@
-.TH  "procmail_selinux"  "8"  "procmail" "dwalsh@redhat.com" "procmail SELinux Policy documentation"
+.TH  "procmail_selinux"  "8"  "13-01-04" "procmail" "SELinux Policy documentation for procmail"
 .SH "NAME"
 procmail_selinux \- Security Enhanced Linux Policy for the procmail processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the procmail processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B procmail
-(Procmail mail delivery agent)
-processes via flexible mandatory access
-control.  
+The procmail processes execute with the procmail_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep procmail_t
+
+
+.SH "ENTRYPOINTS"
+
+The procmail_t SELinux type can be entered via the "procmail_exec_t" file type.  The default entrypoint paths for the procmail_t domain are the following:"
+
+/usr/bin/procmail
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux procmail policy is very flexible allowing users to setup their procmail processes in as secure a method as possible.
+.PP
+The following process types are defined for procmail:
+
+.EX
+.B procmail_t
+.EE
+.PP
+Note:
+.B semanage permissive -a procmail_t
+
+can be used to make the process type procmail_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux procmail policy is very flexible allowing users to setup their procmail processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for procmail:
 
 
 .EX
 .PP
-.B procmail_exec_t 
+.B procmail_exec_t
 .EE
 
 - Set files with the procmail_exec_t type, if you want to transition an executable to the procmail_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B procmail_home_t 
+.B procmail_home_t
 .EE
 
 - Set files with the procmail_home_t type, if you want to store procmail files in the users home directory.
@@ -41,19 +65,15 @@
 
 .EX
 .PP
-.B procmail_log_t 
+.B procmail_log_t
 .EE
 
 - Set files with the procmail_log_t type, if you want to treat the data as procmail log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/procmail\.log.*, /var/log/procmail(/.*)?
 
 .EX
 .PP
-.B procmail_tmp_t 
+.B procmail_tmp_t
 .EE
 
 - Set files with the procmail_tmp_t type, if you want to store procmail temporary files in the /tmp directories.
@@ -61,28 +81,92 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux procmail policy is very flexible allowing users to setup their procmail processes in as secure a method as possible.
-.PP 
-The following process types are defined for procmail:
+.SH "MANAGED FILES"
 
-.EX
-.B procmail_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type procmail_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_home_rw_t
+
+	/root/Maildir(/.*)?
+.br
+	/home/[^/]*/Maildir(/.*)?
+.br
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B procmail_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -95,11 +179,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), procmail(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), procmail(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/psad_selinux.8 serefpolicy-3.7.19/man/man8/psad_selinux.8
--- nsaserefpolicy/man/man8/psad_selinux.8	2013-03-15 11:41:11.387153490 +0100
+++ serefpolicy-3.7.19/man/man8/psad_selinux.8	2013-03-15 11:39:55.575151761 +0100
@@ -1,31 +1,55 @@
-.TH  "psad_selinux"  "8"  "psad" "dwalsh@redhat.com" "psad SELinux Policy documentation"
+.TH  "psad_selinux"  "8"  "13-01-04" "psad" "SELinux Policy documentation for psad"
 .SH "NAME"
 psad_selinux \- Security Enhanced Linux Policy for the psad processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the psad processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B psad
-(Intrusion Detection and Log Analysis with iptables)
-processes via flexible mandatory access
-control.  
+The psad processes execute with the psad_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep psad_t
+
+
+.SH "ENTRYPOINTS"
+
+The psad_t SELinux type can be entered via the "psad_exec_t" file type.  The default entrypoint paths for the psad_t domain are the following:"
+
+/usr/sbin/psad
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux psad policy is very flexible allowing users to setup their psad processes in as secure a method as possible.
+.PP
+The following process types are defined for psad:
+
+.EX
+.B psad_t
+.EE
+.PP
+Note:
+.B semanage permissive -a psad_t
+
+can be used to make the process type psad_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux psad policy is very flexible allowing users to setup their psad processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for psad:
 
 
 .EX
 .PP
-.B psad_etc_t 
+.B psad_etc_t
 .EE
 
 - Set files with the psad_etc_t type, if you want to store psad files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B psad_exec_t 
+.B psad_exec_t
 .EE
 
 - Set files with the psad_exec_t type, if you want to transition an executable to the psad_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B psad_initrc_exec_t 
+.B psad_initrc_exec_t
 .EE
 
 - Set files with the psad_initrc_exec_t type, if you want to transition an executable to the psad_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B psad_tmp_t 
+.B psad_tmp_t
 .EE
 
 - Set files with the psad_tmp_t type, if you want to store psad temporary files in the /tmp directories.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B psad_var_lib_t 
+.B psad_var_lib_t
 .EE
 
 - Set files with the psad_var_lib_t type, if you want to store the psad files under the /var/lib directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B psad_var_log_t 
+.B psad_var_log_t
 .EE
 
 - Set files with the psad_var_log_t type, if you want to treat the data as psad var log data, usually stored under the /var/log directory.
@@ -73,7 +97,7 @@
 
 .EX
 .PP
-.B psad_var_run_t 
+.B psad_var_run_t
 .EE
 
 - Set files with the psad_var_run_t type, if you want to store the psad files under the /run directory.
@@ -81,28 +105,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux psad policy is very flexible allowing users to setup their psad processes in as secure a method as possible.
-.PP 
-The following process types are defined for psad:
+.SH "MANAGED FILES"
 
-.EX
-.B psad_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type psad_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B psad_tmp_t
+
+
+.br
+.B psad_var_log_t
+
+	/var/log/psad(/.*)?
+.br
+
+.br
+.B psad_var_run_t
+
+	/var/run/psad(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +191,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), psad(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), psad(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ptal_selinux.8 serefpolicy-3.7.19/man/man8/ptal_selinux.8
--- nsaserefpolicy/man/man8/ptal_selinux.8	2013-03-15 11:41:12.178153508 +0100
+++ serefpolicy-3.7.19/man/man8/ptal_selinux.8	2013-03-15 11:40:05.591151989 +0100
@@ -1,25 +1,55 @@
-.TH  "ptal_selinux"  "8"  "ptal" "dwalsh@redhat.com" "ptal SELinux Policy documentation"
+.TH  "ptal_selinux"  "8"  "13-01-04" "ptal" "SELinux Policy documentation for ptal"
 .SH "NAME"
 ptal_selinux \- Security Enhanced Linux Policy for the ptal processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ptal processes via flexible mandatory access control.
 
+The ptal processes execute with the ptal_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ptal_t
+
+
+.SH "ENTRYPOINTS"
+
+The ptal_t SELinux type can be entered via the "ptal_exec_t" file type.  The default entrypoint paths for the ptal_t domain are the following:"
+
+/usr/sbin/ptal-mlcd, /usr/sbin/ptal-printd, /usr/sbin/ptal-photod
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
+.PP
+The following process types are defined for ptal:
+
+.EX
+.B ptal_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ptal_t
+
+can be used to make the process type ptal_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ptal:
 
 
 .EX
 .PP
-.B ptal_etc_t 
+.B ptal_etc_t
 .EE
 
 - Set files with the ptal_etc_t type, if you want to store ptal files in the /etc directories.
@@ -27,75 +57,111 @@
 
 .EX
 .PP
-.B ptal_exec_t 
+.B ptal_exec_t
 .EE
 
 - Set files with the ptal_exec_t type, if you want to transition an executable to the ptal_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/ptal-photod, /usr/sbin/ptal-mlcd, /usr/sbin/ptal-printd
 
 .EX
 .PP
-.B ptal_var_run_t 
+.B ptal_var_run_t
 .EE
 
 - Set files with the ptal_var_run_t type, if you want to store the ptal files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/ptal-mlcd(/.*)?, /var/run/ptal-printd(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ptal:
 
 .EX
 .TP 5
-.B ptal_port_t 
+.B ptal_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 5703
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
-.PP 
-The following process types are defined for ptal:
+.SH "MANAGED FILES"
 
-.EX
-.B ptal_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ptal_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B ptal_var_run_t
+
+	/var/run/ptal-mlcd(/.*)?
+.br
+	/var/run/ptal-printd(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -111,11 +177,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ptal(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ptal(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ptchown_selinux.8 serefpolicy-3.7.19/man/man8/ptchown_selinux.8
--- nsaserefpolicy/man/man8/ptchown_selinux.8	2013-03-15 11:41:11.214153486 +0100
+++ serefpolicy-3.7.19/man/man8/ptchown_selinux.8	2013-03-15 11:39:55.406151757 +0100
@@ -1,31 +1,55 @@
-.TH  "ptchown_selinux"  "8"  "ptchown" "dwalsh@redhat.com" "ptchown SELinux Policy documentation"
+.TH  "ptchown_selinux"  "8"  "13-01-04" "ptchown" "SELinux Policy documentation for ptchown"
 .SH "NAME"
 ptchown_selinux \- Security Enhanced Linux Policy for the ptchown processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ptchown processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ptchown
-(helper function for grantpt(3), changes ownship and permissions of pseudotty)
-processes via flexible mandatory access
-control.  
+The ptchown processes execute with the ptchown_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ptchown_t
+
+
+.SH "ENTRYPOINTS"
+
+The ptchown_t SELinux type can be entered via the "ptchown_exec_t" file type.  The default entrypoint paths for the ptchown_t domain are the following:"
+
+/usr/libexec/pt_chown
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ptchown policy is very flexible allowing users to setup their ptchown processes in as secure a method as possible.
+.PP
+The following process types are defined for ptchown:
+
+.EX
+.B ptchown_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ptchown_t
+
+can be used to make the process type ptchown_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ptchown policy is very flexible allowing users to setup their ptchown processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ptchown:
 
 
 .EX
 .PP
-.B ptchown_exec_t 
+.B ptchown_exec_t
 .EE
 
 - Set files with the ptchown_exec_t type, if you want to transition an executable to the ptchown_t domain.
@@ -33,28 +57,60 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ptchown policy is very flexible allowing users to setup their ptchown processes in as secure a method as possible.
-.PP 
-The following process types are defined for ptchown:
+.SH "MANAGED FILES"
 
-.EX
-.B ptchown_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ptchown_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +123,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ptchown(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ptchown(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/publicfile_selinux.8 serefpolicy-3.7.19/man/man8/publicfile_selinux.8
--- nsaserefpolicy/man/man8/publicfile_selinux.8	2013-03-15 11:41:12.109153507 +0100
+++ serefpolicy-3.7.19/man/man8/publicfile_selinux.8	2013-03-15 11:40:03.524151942 +0100
@@ -1,31 +1,55 @@
-.TH  "publicfile_selinux"  "8"  "publicfile" "dwalsh@redhat.com" "publicfile SELinux Policy documentation"
+.TH  "publicfile_selinux"  "8"  "13-01-04" "publicfile" "SELinux Policy documentation for publicfile"
 .SH "NAME"
 publicfile_selinux \- Security Enhanced Linux Policy for the publicfile processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the publicfile processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B publicfile
-(publicfile supplies files to the public through HTTP and FTP)
-processes via flexible mandatory access
-control.  
+The publicfile processes execute with the publicfile_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep publicfile_t
+
+
+.SH "ENTRYPOINTS"
+
+The publicfile_t SELinux type can be entered via the "publicfile_exec_t" file type.  The default entrypoint paths for the publicfile_t domain are the following:"
+
+/usr/bin/ftpd, /usr/bin/httpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux publicfile policy is very flexible allowing users to setup their publicfile processes in as secure a method as possible.
+.PP
+The following process types are defined for publicfile:
+
+.EX
+.B publicfile_t
+.EE
+.PP
+Note:
+.B semanage permissive -a publicfile_t
+
+can be used to make the process type publicfile_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux publicfile policy is very flexible allowing users to setup their publicfile processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for publicfile:
 
 
 .EX
 .PP
-.B publicfile_content_t 
+.B publicfile_content_t
 .EE
 
 - Set files with the publicfile_content_t type, if you want to treat the files as publicfile content.
@@ -33,40 +57,72 @@
 
 .EX
 .PP
-.B publicfile_exec_t 
+.B publicfile_exec_t
 .EE
 
 - Set files with the publicfile_exec_t type, if you want to transition an executable to the publicfile_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/httpd, /usr/bin/ftpd
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux publicfile policy is very flexible allowing users to setup their publicfile processes in as secure a method as possible.
-.PP 
-The following process types are defined for publicfile:
+.SH "MANAGED FILES"
 
-.EX
-.B publicfile_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type publicfile_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -79,11 +135,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), publicfile(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), publicfile(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/pulseaudio_selinux.8 serefpolicy-3.7.19/man/man8/pulseaudio_selinux.8
--- nsaserefpolicy/man/man8/pulseaudio_selinux.8	2013-03-15 11:41:12.175153508 +0100
+++ serefpolicy-3.7.19/man/man8/pulseaudio_selinux.8	2013-03-15 11:40:05.309151983 +0100
@@ -1,31 +1,55 @@
-.TH  "pulseaudio_selinux"  "8"  "pulseaudio" "dwalsh@redhat.com" "pulseaudio SELinux Policy documentation"
+.TH  "pulseaudio_selinux"  "8"  "13-01-04" "pulseaudio" "SELinux Policy documentation for pulseaudio"
 .SH "NAME"
 pulseaudio_selinux \- Security Enhanced Linux Policy for the pulseaudio processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the pulseaudio processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B pulseaudio
-(Pulseaudio network sound server)
-processes via flexible mandatory access
-control.  
+The pulseaudio processes execute with the pulseaudio_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep pulseaudio_t
+
+
+.SH "ENTRYPOINTS"
+
+The pulseaudio_t SELinux type can be entered via the "pulseaudio_exec_t,user_home_t" file types.  The default entrypoint paths for the pulseaudio_t domain are the following:"
+
+/usr/bin/pulseaudio, /home/[^/]*/.+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
+.PP
+The following process types are defined for pulseaudio:
+
+.EX
+.B pulseaudio_t
+.EE
+.PP
+Note:
+.B semanage permissive -a pulseaudio_t
+
+can be used to make the process type pulseaudio_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for pulseaudio:
 
 
 .EX
 .PP
-.B pulseaudio_exec_t 
+.B pulseaudio_exec_t
 .EE
 
 - Set files with the pulseaudio_exec_t type, if you want to transition an executable to the pulseaudio_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B pulseaudio_home_t 
+.B pulseaudio_home_t
 .EE
 
 - Set files with the pulseaudio_home_t type, if you want to store pulseaudio files in the users home directory.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B pulseaudio_tmpfs_t 
+.B pulseaudio_tmpfs_t
 .EE
 
 - Set files with the pulseaudio_tmpfs_t type, if you want to store pulseaudio files on a tmpfs file system.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B pulseaudio_var_lib_t 
+.B pulseaudio_var_lib_t
 .EE
 
 - Set files with the pulseaudio_var_lib_t type, if you want to store the pulseaudio files under the /var/lib directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B pulseaudio_var_run_t 
+.B pulseaudio_var_run_t
 .EE
 
 - Set files with the pulseaudio_var_run_t type, if you want to store the pulseaudio files under the /run directory.
@@ -65,51 +89,155 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for pulseaudio:
 
 .EX
 .TP 5
-.B pulseaudio_port_t 
+.B pulseaudio_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 4713
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
-.PP 
-The following process types are defined for pulseaudio:
-
-.EX
-.B pulseaudio_t 
+udp 4713
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type pulseaudio_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B pulseaudio_var_lib_t
+
+	/var/lib/pulse(/.*)?
+.br
+
+.br
+.B pulseaudio_var_run_t
+
+	/var/run/pulse(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sandbox_tmpfs_type
+
+	all sandbox content in tmpfs file systems
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_home_type
+
+	all user home files
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.br
+.B xdm_tmp_t
+
+	/tmp/\.X11-unix(/.*)?
+.br
+	/tmp/\.ICE-unix(/.*)?
+.br
+	/tmp/\.X0-lock
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -125,11 +253,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), pulseaudio(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), pulseaudio(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/puppetmaster_selinux.8 serefpolicy-3.7.19/man/man8/puppetmaster_selinux.8
--- nsaserefpolicy/man/man8/puppetmaster_selinux.8	2013-03-15 11:41:12.108153507 +0100
+++ serefpolicy-3.7.19/man/man8/puppetmaster_selinux.8	2013-03-15 11:40:03.516151942 +0100
@@ -1,36 +1,73 @@
-.TH  "puppetmaster_selinux"  "8"  "puppetmaster" "dwalsh@redhat.com" "puppetmaster SELinux Policy documentation"
+.TH  "puppetmaster_selinux"  "8"  "13-01-04" "puppetmaster" "SELinux Policy documentation for puppetmaster"
 .SH "NAME"
 puppetmaster_selinux \- Security Enhanced Linux Policy for the puppetmaster processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the puppetmaster processes via flexible mandatory access control.
 
+The puppetmaster processes execute with the puppetmaster_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep puppetmaster_t
+
+
+.SH "ENTRYPOINTS"
+
+The puppetmaster_t SELinux type can be entered via the "puppetmaster_exec_t" file type.  The default entrypoint paths for the puppetmaster_t domain are the following:"
+
+/usr/sbin/puppetmasterd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux puppetmaster policy is very flexible allowing users to setup their puppetmaster processes in as secure a method as possible.
+.PP
+The following process types are defined for puppetmaster:
+
+.EX
+.B puppetmaster_t
+.EE
+.PP
+Note:
+.B semanage permissive -a puppetmaster_t
+
+can be used to make the process type puppetmaster_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  puppetmaster policy is extremely flexible and has several booleans that allow you to manipulate the policy and run puppetmaster with the tightest access possible.
 
 
 .PP
-If you want to allow Puppet master to use connect to mysql and postgresql databas, you must turn on the puppetmaster_use_db boolean.
+If you want to allow Puppet master to use connect to mysql and postgresql database, you must turn on the puppetmaster_use_db boolean.
+
+.EX
+.B setsebool -P puppetmaster_use_db 1
+.EE
+
+.PP
+If you want to allow Puppet master to use connect to mysql and postgresql database, you must turn on the puppetmaster_use_db boolean.
 
 .EX
 .B setsebool -P puppetmaster_use_db 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux puppetmaster policy is very flexible allowing users to setup their puppetmaster processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for puppetmaster:
 
 
 .EX
 .PP
-.B puppetmaster_exec_t 
+.B puppetmaster_exec_t
 .EE
 
 - Set files with the puppetmaster_exec_t type, if you want to transition an executable to the puppetmaster_t domain.
@@ -38,7 +75,7 @@
 
 .EX
 .PP
-.B puppetmaster_initrc_exec_t 
+.B puppetmaster_initrc_exec_t
 .EE
 
 - Set files with the puppetmaster_initrc_exec_t type, if you want to transition an executable to the puppetmaster_initrc_t domain.
@@ -46,7 +83,7 @@
 
 .EX
 .PP
-.B puppetmaster_tmp_t 
+.B puppetmaster_tmp_t
 .EE
 
 - Set files with the puppetmaster_tmp_t type, if you want to store puppetmaster temporary files in the /tmp directories.
@@ -54,28 +91,90 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux puppetmaster policy is very flexible allowing users to setup their puppetmaster processes in as secure a method as possible.
-.PP 
-The following process types are defined for puppetmaster:
+.SH "MANAGED FILES"
 
-.EX
-.B puppetmaster_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type puppetmaster_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B puppet_log_t
+
+	/var/log/puppet(/.*)?
+.br
+
+.br
+.B puppet_var_lib_t
+
+	/var/lib/puppet(/.*)?
+.br
+
+.br
+.B puppet_var_run_t
+
+	/var/run/puppet(/.*)?
+.br
+
+.br
+.B puppetmaster_tmp_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,12 +190,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), puppetmaster(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), puppetmaster(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), puppet_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/puppet_selinux.8 serefpolicy-3.7.19/man/man8/puppet_selinux.8
--- nsaserefpolicy/man/man8/puppet_selinux.8	2013-03-15 11:41:11.931153503 +0100
+++ serefpolicy-3.7.19/man/man8/puppet_selinux.8	2013-03-15 11:40:00.033151862 +0100
@@ -1,22 +1,53 @@
-.TH  "puppet_selinux"  "8"  "puppet" "dwalsh@redhat.com" "puppet SELinux Policy documentation"
+.TH  "puppet_selinux"  "8"  "13-01-04" "puppet" "SELinux Policy documentation for puppet"
 .SH "NAME"
 puppet_selinux \- Security Enhanced Linux Policy for the puppet processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the puppet processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B puppet
-(Puppet client daemon)
-processes via flexible mandatory access
-control.  
+The puppet processes execute with the puppet_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep puppet_t
+
+
+.SH "ENTRYPOINTS"
+
+The puppet_t SELinux type can be entered via the "mtrr_device_t,puppet_exec_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the puppet_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/puppetd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
+.PP
+The following process types are defined for puppet:
+
+.EX
+.B puppet_t, puppetmaster_t
+.EE
+.PP
+Note:
+.B semanage permissive -a puppet_t
+
+can be used to make the process type puppet_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  puppet policy is extremely flexible and has several booleans that allow you to manipulate the policy and run puppet with the tightest access possible.
 
 
 .PP
+If you want to allow Puppet master to use connect to mysql and postgresql database, you must turn on the puppetmaster_use_db boolean.
+
+.EX
+.B setsebool -P puppetmaster_use_db 1
+.EE
+
+.PP
 If you want to allow Puppet client to manage all file types, you must turn on the puppet_manage_all_files boolean.
 
 .EX
@@ -24,26 +55,33 @@
 .EE
 
 .PP
-If you want to allow Puppet master to use connect to mysql and postgresql databas, you must turn on the puppetmaster_use_db boolean.
+If you want to allow Puppet master to use connect to mysql and postgresql database, you must turn on the puppetmaster_use_db boolean.
 
 .EX
 .B setsebool -P puppetmaster_use_db 1
 .EE
 
+.PP
+If you want to allow Puppet client to manage all file types, you must turn on the puppet_manage_all_files boolean.
+
+.EX
+.B setsebool -P puppet_manage_all_files 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for puppet:
 
 
 .EX
 .PP
-.B puppet_etc_t 
+.B puppet_etc_t
 .EE
 
 - Set files with the puppet_etc_t type, if you want to store puppet files in the /etc directories.
@@ -51,7 +89,7 @@
 
 .EX
 .PP
-.B puppet_exec_t 
+.B puppet_exec_t
 .EE
 
 - Set files with the puppet_exec_t type, if you want to transition an executable to the puppet_t domain.
@@ -59,7 +97,7 @@
 
 .EX
 .PP
-.B puppet_initrc_exec_t 
+.B puppet_initrc_exec_t
 .EE
 
 - Set files with the puppet_initrc_exec_t type, if you want to transition an executable to the puppet_initrc_t domain.
@@ -67,7 +105,7 @@
 
 .EX
 .PP
-.B puppet_log_t 
+.B puppet_log_t
 .EE
 
 - Set files with the puppet_log_t type, if you want to treat the data as puppet log data, usually stored under the /var/log directory.
@@ -75,7 +113,7 @@
 
 .EX
 .PP
-.B puppet_tmp_t 
+.B puppet_tmp_t
 .EE
 
 - Set files with the puppet_tmp_t type, if you want to store puppet temporary files in the /tmp directories.
@@ -83,7 +121,7 @@
 
 .EX
 .PP
-.B puppet_var_lib_t 
+.B puppet_var_lib_t
 .EE
 
 - Set files with the puppet_var_lib_t type, if you want to store the puppet files under the /var/lib directory.
@@ -91,7 +129,7 @@
 
 .EX
 .PP
-.B puppet_var_run_t 
+.B puppet_var_run_t
 .EE
 
 - Set files with the puppet_var_run_t type, if you want to store the puppet files under the /run directory.
@@ -99,7 +137,7 @@
 
 .EX
 .PP
-.B puppetmaster_exec_t 
+.B puppetmaster_exec_t
 .EE
 
 - Set files with the puppetmaster_exec_t type, if you want to transition an executable to the puppetmaster_t domain.
@@ -107,7 +145,7 @@
 
 .EX
 .PP
-.B puppetmaster_initrc_exec_t 
+.B puppetmaster_initrc_exec_t
 .EE
 
 - Set files with the puppetmaster_initrc_exec_t type, if you want to transition an executable to the puppetmaster_initrc_t domain.
@@ -115,7 +153,7 @@
 
 .EX
 .PP
-.B puppetmaster_tmp_t 
+.B puppetmaster_tmp_t
 .EE
 
 - Set files with the puppetmaster_tmp_t type, if you want to store puppetmaster temporary files in the /tmp directories.
@@ -123,51 +161,43 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for puppet:
 
 .EX
 .TP 5
-.B puppet_port_t 
+.B puppet_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 8140
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
-.PP 
-The following process types are defined for puppet:
+.SH "MANAGED FILES"
 
-.EX
-.B puppet_t, puppetmaster_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type puppet_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -186,12 +216,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), puppet(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), puppet(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), puppetmaster_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qdiskd_selinux.8 serefpolicy-3.7.19/man/man8/qdiskd_selinux.8
--- nsaserefpolicy/man/man8/qdiskd_selinux.8	2013-03-15 11:41:12.051153506 +0100
+++ serefpolicy-3.7.19/man/man8/qdiskd_selinux.8	2013-03-15 11:40:01.875151904 +0100
@@ -1,25 +1,55 @@
-.TH  "qdiskd_selinux"  "8"  "qdiskd" "dwalsh@redhat.com" "qdiskd SELinux Policy documentation"
+.TH  "qdiskd_selinux"  "8"  "13-01-04" "qdiskd" "SELinux Policy documentation for qdiskd"
 .SH "NAME"
 qdiskd_selinux \- Security Enhanced Linux Policy for the qdiskd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the qdiskd processes via flexible mandatory access control.
 
+The qdiskd processes execute with the qdiskd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep qdiskd_t
+
+
+.SH "ENTRYPOINTS"
+
+The qdiskd_t SELinux type can be entered via the "qdiskd_exec_t" file type.  The default entrypoint paths for the qdiskd_t domain are the following:"
+
+/usr/sbin/qdiskd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qdiskd policy is very flexible allowing users to setup their qdiskd processes in as secure a method as possible.
+.PP
+The following process types are defined for qdiskd:
+
+.EX
+.B qdiskd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qdiskd_t
+
+can be used to make the process type qdiskd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux qdiskd policy is very flexible allowing users to setup their qdiskd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for qdiskd:
 
 
 .EX
 .PP
-.B qdiskd_exec_t 
+.B qdiskd_exec_t
 .EE
 
 - Set files with the qdiskd_exec_t type, if you want to transition an executable to the qdiskd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B qdiskd_tmpfs_t 
+.B qdiskd_tmpfs_t
 .EE
 
 - Set files with the qdiskd_tmpfs_t type, if you want to store qdiskd files on a tmpfs file system.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B qdiskd_var_lib_t 
+.B qdiskd_var_lib_t
 .EE
 
 - Set files with the qdiskd_var_lib_t type, if you want to store the qdiskd files under the /var/lib directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B qdiskd_var_log_t 
+.B qdiskd_var_log_t
 .EE
 
 - Set files with the qdiskd_var_log_t type, if you want to treat the data as qdiskd var log data, usually stored under the /var/log directory.
@@ -51,7 +81,7 @@
 
 .EX
 .PP
-.B qdiskd_var_run_t 
+.B qdiskd_var_run_t
 .EE
 
 - Set files with the qdiskd_var_run_t type, if you want to store the qdiskd files under the /run directory.
@@ -59,28 +89,92 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux qdiskd policy is very flexible allowing users to setup their qdiskd processes in as secure a method as possible.
-.PP 
-The following process types are defined for qdiskd:
+.SH "MANAGED FILES"
 
-.EX
-.B qdiskd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type qdiskd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B cluster_var_lib_t
+
+	/var/lib/cluster(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B qdiskd_tmpfs_t
+
+
+.br
+.B qdiskd_var_lib_t
+
+	/var/lib/qdiskd(/.*)?
+.br
+
+.br
+.B qdiskd_var_log_t
+
+	/var/log/cluster/qdiskd\.log.*
+.br
+
+.br
+.B qdiskd_var_run_t
+
+	/var/run/qdiskd\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -93,11 +187,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), qdiskd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), qdiskd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/qemu_selinux.8 serefpolicy-3.7.19/man/man8/qemu_selinux.8
--- nsaserefpolicy/man/man8/qemu_selinux.8	2013-03-15 11:41:11.885153502 +0100
+++ serefpolicy-3.7.19/man/man8/qemu_selinux.8	2013-03-15 11:39:59.408151848 +0100
@@ -1,82 +1,137 @@
-.TH  "qemu_selinux"  "8"  "qemu" "dwalsh@redhat.com" "qemu SELinux Policy documentation"
+.TH  "qemu_selinux"  "8"  "13-01-04" "qemu" "SELinux Policy documentation for qemu"
 .SH "NAME"
 qemu_selinux \- Security Enhanced Linux Policy for the qemu processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the qemu processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B qemu
-(QEMU machine emulator and virtualizer)
-processes via flexible mandatory access
-control.  
+The qemu processes execute with the qemu_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep qemu_t
+
+
+.SH "ENTRYPOINTS"
+
+The qemu_t SELinux type can be entered via the "qemu_exec_t,qemu_exec_t" file types.  The default entrypoint paths for the qemu_t domain are the following:"
+
+/usr/libexec/qemu.*, /usr/bin/qemu-system-.*, /usr/bin/qemu, /usr/bin/qemu-kvm, /usr/libexec/qemu.*, /usr/bin/qemu-system-.*, /usr/bin/qemu, /usr/bin/qemu-kvm
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qemu policy is very flexible allowing users to setup their qemu processes in as secure a method as possible.
+.PP
+The following process types are defined for qemu:
+
+.EX
+.B qemu_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qemu_t
+
+can be used to make the process type qemu_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  qemu policy is extremely flexible and has several booleans that allow you to manipulate the policy and run qemu with the tightest access possible.
 
 
 .PP
-If you want to allow qemu to use cifs/Samba file system, you must turn on the qemu_use_cifs boolean.
+If you want to allow qemu to use usb devices, you must turn on the qemu_use_usb boolean.
 
 .EX
-.B setsebool -P qemu_use_cifs 1
+.B setsebool -P qemu_use_usb 1
 .EE
 
 .PP
-If you want to allow qemu to user serial/parallel communication port, you must turn on the qemu_use_comm boolean.
+If you want to allow qemu to use nfs file systems, you must turn on the qemu_use_nfs boolean.
+
+.EX
+.B setsebool -P qemu_use_nfs 1
+.EE
+
+.PP
+If you want to allow qemu to connect fully to the network, you must turn on the qemu_full_network boolean.
+
+.EX
+.B setsebool -P qemu_full_network 1
+.EE
+
+.PP
+If you want to allow qemu to user serial/parallel communication ports, you must turn on the qemu_use_comm boolean.
 
 .EX
 .B setsebool -P qemu_use_comm 1
 .EE
 
 .PP
-If you want to allow qemu to use nfs file system, you must turn on the qemu_use_nfs boolean.
+If you want to allow qemu to use cifs/Samba file systems, you must turn on the qemu_use_cifs boolean.
 
 .EX
-.B setsebool -P qemu_use_nfs 1
+.B setsebool -P qemu_use_cifs 1
 .EE
 
 .PP
-If you want to allow qemu to use usb device, you must turn on the qemu_use_usb boolean.
+If you want to allow qemu to use usb devices, you must turn on the qemu_use_usb boolean.
 
 .EX
 .B setsebool -P qemu_use_usb 1
 .EE
 
 .PP
-If you want to allow qemu to connect fully to the networ, you must turn on the qemu_full_network boolean.
+If you want to allow qemu to use nfs file systems, you must turn on the qemu_use_nfs boolean.
+
+.EX
+.B setsebool -P qemu_use_nfs 1
+.EE
+
+.PP
+If you want to allow qemu to connect fully to the network, you must turn on the qemu_full_network boolean.
 
 .EX
 .B setsebool -P qemu_full_network 1
 .EE
 
+.PP
+If you want to allow qemu to user serial/parallel communication ports, you must turn on the qemu_use_comm boolean.
+
+.EX
+.B setsebool -P qemu_use_comm 1
+.EE
+
+.PP
+If you want to allow qemu to use cifs/Samba file systems, you must turn on the qemu_use_cifs boolean.
+
+.EX
+.B setsebool -P qemu_use_cifs 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux qemu policy is very flexible allowing users to setup their qemu processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for qemu:
 
 
 .EX
 .PP
-.B qemu_exec_t 
+.B qemu_exec_t
 .EE
 
 - Set files with the qemu_exec_t type, if you want to transition an executable to the qemu_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/qemu-system-.*, /usr/libexec/qemu.*, /usr/bin/qemu, /usr/bin/qemu-kvm
 
 .EX
 .PP
-.B qemu_image_t 
+.B qemu_image_t
 .EE
 
 - Set files with the qemu_image_t type, if you want to treat the files as qemu image data.
@@ -84,7 +139,7 @@
 
 .EX
 .PP
-.B qemu_tmp_t 
+.B qemu_tmp_t
 .EE
 
 - Set files with the qemu_tmp_t type, if you want to store qemu temporary files in the /tmp directories.
@@ -92,7 +147,7 @@
 
 .EX
 .PP
-.B qemu_tmpfs_t 
+.B qemu_tmpfs_t
 .EE
 
 - Set files with the qemu_tmpfs_t type, if you want to store qemu files on a tmpfs file system.
@@ -100,40 +155,128 @@
 
 .EX
 .PP
-.B qemu_var_run_t 
+.B qemu_var_run_t
 .EE
 
 - Set files with the qemu_var_run_t type, if you want to store the qemu files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/libvirt/qemu(/.*)?, /var/run/libvirt/qemu(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux qemu policy is very flexible allowing users to setup their qemu processes in as secure a method as possible.
-.PP 
-The following process types are defined for qemu:
+.SH "MANAGED FILES"
 
-.EX
-.B qemu_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type qemu_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B cifs_t
+
+
+.br
+.B dosfs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B qemu_tmp_t
+
+
+.br
+.B qemu_tmpfs_t
+
+
+.br
+.B qemu_var_run_t
+
+	/var/lib/libvirt/qemu(/.*)?
+.br
+	/var/run/libvirt/qemu(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B tmpfs_t
+
+	/dev/shm
+.br
+
+.br
+.B usbfs_t
+
+
+.br
+.B virt_cache_t
+
+	/var/cache/oz(/.*)?
+.br
+	/var/cache/libvirt
+.br
+
+.br
+.B virt_image_type
+
+	all virtual image files
+.br
+
+.br
+.B xen_image_t
+
+	/xen(/.*)?
+.br
+	/var/lib/xen/images(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -149,12 +292,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), qemu(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), qemu(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_clean_selinux.8 serefpolicy-3.7.19/man/man8/qmail_clean_selinux.8
--- nsaserefpolicy/man/man8/qmail_clean_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_clean_selinux.8	2013-03-15 11:40:02.767151925 +0100
@@ -0,0 +1,132 @@
+.TH  "qmail_clean_selinux"  "8"  "13-01-04" "qmail_clean" "SELinux Policy documentation for qmail_clean"
+.SH "NAME"
+qmail_clean_selinux \- Security Enhanced Linux Policy for the qmail_clean processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_clean processes via flexible mandatory access control.
+
+The qmail_clean processes execute with the qmail_clean_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_clean_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_clean_t SELinux type can be entered via the "qmail_clean_exec_t" file type.  The default entrypoint paths for the qmail_clean_t domain are the following:"
+
+/var/qmail/bin/qmail-clean
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_clean policy is very flexible allowing users to setup their qmail_clean processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_clean:
+
+.EX
+.B qmail_clean_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_clean_t
+
+can be used to make the process type qmail_clean_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_clean policy is very flexible allowing users to setup their qmail_clean processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_clean:
+
+
+.EX
+.PP
+.B qmail_clean_exec_t
+.EE
+
+- Set files with the qmail_clean_exec_t type, if you want to transition an executable to the qmail_clean_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_clean_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_clean(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_inject_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_inject_selinux.8 serefpolicy-3.7.19/man/man8/qmail_inject_selinux.8
--- nsaserefpolicy/man/man8/qmail_inject_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_inject_selinux.8	2013-03-15 11:40:00.334151869 +0100
@@ -0,0 +1,136 @@
+.TH  "qmail_inject_selinux"  "8"  "13-01-04" "qmail_inject" "SELinux Policy documentation for qmail_inject"
+.SH "NAME"
+qmail_inject_selinux \- Security Enhanced Linux Policy for the qmail_inject processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_inject processes via flexible mandatory access control.
+
+The qmail_inject processes execute with the qmail_inject_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_inject_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_inject_t SELinux type can be entered via the "qmail_inject_exec_t" file type.  The default entrypoint paths for the qmail_inject_t domain are the following:"
+
+/var/qmail/bin/qmail-inject
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_inject policy is very flexible allowing users to setup their qmail_inject processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_inject:
+
+.EX
+.B qmail_inject_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_inject_t
+
+can be used to make the process type qmail_inject_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_inject policy is very flexible allowing users to setup their qmail_inject processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_inject:
+
+
+.EX
+.PP
+.B qmail_inject_exec_t
+.EE
+
+- Set files with the qmail_inject_exec_t type, if you want to transition an executable to the qmail_inject_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_inject_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B arpwatch_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_inject(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_local_selinux.8 serefpolicy-3.7.19/man/man8/qmail_local_selinux.8
--- nsaserefpolicy/man/man8/qmail_local_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_local_selinux.8	2013-03-15 11:40:05.311151983 +0100
@@ -0,0 +1,174 @@
+.TH  "qmail_local_selinux"  "8"  "13-01-04" "qmail_local" "SELinux Policy documentation for qmail_local"
+.SH "NAME"
+qmail_local_selinux \- Security Enhanced Linux Policy for the qmail_local processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_local processes via flexible mandatory access control.
+
+The qmail_local processes execute with the qmail_local_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_local_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_local_t SELinux type can be entered via the "qmail_local_exec_t" file type.  The default entrypoint paths for the qmail_local_t domain are the following:"
+
+/var/qmail/bin/qmail-local
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_local policy is very flexible allowing users to setup their qmail_local processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_local:
+
+.EX
+.B qmail_local_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_local_t
+
+can be used to make the process type qmail_local_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_local policy is very flexible allowing users to setup their qmail_local processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_local:
+
+
+.EX
+.PP
+.B qmail_local_exec_t
+.EE
+
+- Set files with the qmail_local_exec_t type, if you want to transition an executable to the qmail_local_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_local_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dovecot_spool_t
+
+	/var/spool/dovecot(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_home_rw_t
+
+	/root/Maildir(/.*)?
+.br
+	/home/[^/]*/Maildir(/.*)?
+.br
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B qmail_alias_home_t
+
+	/var/qmail/alias(/.*)?
+.br
+	/var/qmail/alias
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_local(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_lspawn_selinux.8 serefpolicy-3.7.19/man/man8/qmail_lspawn_selinux.8
--- nsaserefpolicy/man/man8/qmail_lspawn_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_lspawn_selinux.8	2013-03-15 11:40:00.040151862 +0100
@@ -0,0 +1,156 @@
+.TH  "qmail_lspawn_selinux"  "8"  "13-01-04" "qmail_lspawn" "SELinux Policy documentation for qmail_lspawn"
+.SH "NAME"
+qmail_lspawn_selinux \- Security Enhanced Linux Policy for the qmail_lspawn processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_lspawn processes via flexible mandatory access control.
+
+The qmail_lspawn processes execute with the qmail_lspawn_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_lspawn_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_lspawn_t SELinux type can be entered via the "qmail_lspawn_exec_t" file type.  The default entrypoint paths for the qmail_lspawn_t domain are the following:"
+
+/var/qmail/bin/qmail-lspawn
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_lspawn policy is very flexible allowing users to setup their qmail_lspawn processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_lspawn:
+
+.EX
+.B qmail_lspawn_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_lspawn_t
+
+can be used to make the process type qmail_lspawn_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_lspawn policy is very flexible allowing users to setup their qmail_lspawn processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_lspawn:
+
+
+.EX
+.PP
+.B qmail_lspawn_exec_t
+.EE
+
+- Set files with the qmail_lspawn_exec_t type, if you want to transition an executable to the qmail_lspawn_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_lspawn_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B dovecot_spool_t
+
+	/var/spool/dovecot(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_home_rw_t
+
+	/root/Maildir(/.*)?
+.br
+	/home/[^/]*/Maildir(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_lspawn(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_local_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_queue_selinux.8 serefpolicy-3.7.19/man/man8/qmail_queue_selinux.8
--- nsaserefpolicy/man/man8/qmail_queue_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_queue_selinux.8	2013-03-15 11:40:07.306152028 +0100
@@ -0,0 +1,142 @@
+.TH  "qmail_queue_selinux"  "8"  "13-01-04" "qmail_queue" "SELinux Policy documentation for qmail_queue"
+.SH "NAME"
+qmail_queue_selinux \- Security Enhanced Linux Policy for the qmail_queue processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_queue processes via flexible mandatory access control.
+
+The qmail_queue processes execute with the qmail_queue_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_queue_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_queue_t SELinux type can be entered via the "qmail_queue_exec_t" file type.  The default entrypoint paths for the qmail_queue_t domain are the following:"
+
+/var/qmail/bin/qmail-queue
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_queue policy is very flexible allowing users to setup their qmail_queue processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_queue:
+
+.EX
+.B qmail_queue_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_queue_t
+
+can be used to make the process type qmail_queue_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_queue policy is very flexible allowing users to setup their qmail_queue processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_queue:
+
+
+.EX
+.PP
+.B qmail_queue_exec_t
+.EE
+
+- Set files with the qmail_queue_exec_t type, if you want to transition an executable to the qmail_queue_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_queue_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B arpwatch_tmp_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B qmail_spool_t
+
+	/var/qmail/queue(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_queue(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_remote_selinux.8 serefpolicy-3.7.19/man/man8/qmail_remote_selinux.8
--- nsaserefpolicy/man/man8/qmail_remote_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_remote_selinux.8	2013-03-15 11:40:07.598152035 +0100
@@ -0,0 +1,138 @@
+.TH  "qmail_remote_selinux"  "8"  "13-01-04" "qmail_remote" "SELinux Policy documentation for qmail_remote"
+.SH "NAME"
+qmail_remote_selinux \- Security Enhanced Linux Policy for the qmail_remote processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_remote processes via flexible mandatory access control.
+
+The qmail_remote processes execute with the qmail_remote_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_remote_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_remote_t SELinux type can be entered via the "qmail_remote_exec_t" file type.  The default entrypoint paths for the qmail_remote_t domain are the following:"
+
+/var/qmail/bin/qmail-remote
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_remote policy is very flexible allowing users to setup their qmail_remote processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_remote:
+
+.EX
+.B qmail_remote_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_remote_t
+
+can be used to make the process type qmail_remote_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_remote policy is very flexible allowing users to setup their qmail_remote processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_remote:
+
+
+.EX
+.PP
+.B qmail_remote_exec_t
+.EE
+
+- Set files with the qmail_remote_exec_t type, if you want to transition an executable to the qmail_remote_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_remote_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B qmail_spool_t
+
+	/var/qmail/queue(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_remote(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_rspawn_selinux.8 serefpolicy-3.7.19/man/man8/qmail_rspawn_selinux.8
--- nsaserefpolicy/man/man8/qmail_rspawn_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_rspawn_selinux.8	2013-03-15 11:40:04.399151962 +0100
@@ -0,0 +1,138 @@
+.TH  "qmail_rspawn_selinux"  "8"  "13-01-04" "qmail_rspawn" "SELinux Policy documentation for qmail_rspawn"
+.SH "NAME"
+qmail_rspawn_selinux \- Security Enhanced Linux Policy for the qmail_rspawn processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_rspawn processes via flexible mandatory access control.
+
+The qmail_rspawn processes execute with the qmail_rspawn_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_rspawn_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_rspawn_t SELinux type can be entered via the "qmail_rspawn_exec_t" file type.  The default entrypoint paths for the qmail_rspawn_t domain are the following:"
+
+/var/qmail/bin/qmail-rspawn
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_rspawn policy is very flexible allowing users to setup their qmail_rspawn processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_rspawn:
+
+.EX
+.B qmail_rspawn_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_rspawn_t
+
+can be used to make the process type qmail_rspawn_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_rspawn policy is very flexible allowing users to setup their qmail_rspawn processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_rspawn:
+
+
+.EX
+.PP
+.B qmail_rspawn_exec_t
+.EE
+
+- Set files with the qmail_rspawn_exec_t type, if you want to transition an executable to the qmail_rspawn_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_rspawn_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B qmail_spool_t
+
+	/var/qmail/queue(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_rspawn(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_send_selinux.8 serefpolicy-3.7.19/man/man8/qmail_send_selinux.8
--- nsaserefpolicy/man/man8/qmail_send_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_send_selinux.8	2013-03-15 11:40:00.883151882 +0100
@@ -0,0 +1,138 @@
+.TH  "qmail_send_selinux"  "8"  "13-01-04" "qmail_send" "SELinux Policy documentation for qmail_send"
+.SH "NAME"
+qmail_send_selinux \- Security Enhanced Linux Policy for the qmail_send processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_send processes via flexible mandatory access control.
+
+The qmail_send processes execute with the qmail_send_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_send_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_send_t SELinux type can be entered via the "qmail_send_exec_t" file type.  The default entrypoint paths for the qmail_send_t domain are the following:"
+
+/var/qmail/bin/qmail-send
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_send policy is very flexible allowing users to setup their qmail_send processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_send:
+
+.EX
+.B qmail_send_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_send_t
+
+can be used to make the process type qmail_send_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_send policy is very flexible allowing users to setup their qmail_send processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_send:
+
+
+.EX
+.PP
+.B qmail_send_exec_t
+.EE
+
+- Set files with the qmail_send_exec_t type, if you want to transition an executable to the qmail_send_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_send_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B qmail_spool_t
+
+	/var/qmail/queue(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_send(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_smtpd_selinux.8 serefpolicy-3.7.19/man/man8/qmail_smtpd_selinux.8
--- nsaserefpolicy/man/man8/qmail_smtpd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_smtpd_selinux.8	2013-03-15 11:40:06.448152009 +0100
@@ -0,0 +1,132 @@
+.TH  "qmail_smtpd_selinux"  "8"  "13-01-04" "qmail_smtpd" "SELinux Policy documentation for qmail_smtpd"
+.SH "NAME"
+qmail_smtpd_selinux \- Security Enhanced Linux Policy for the qmail_smtpd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_smtpd processes via flexible mandatory access control.
+
+The qmail_smtpd processes execute with the qmail_smtpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_smtpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_smtpd_t SELinux type can be entered via the "qmail_smtpd_exec_t" file type.  The default entrypoint paths for the qmail_smtpd_t domain are the following:"
+
+/var/qmail/bin/qmail-smtpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_smtpd policy is very flexible allowing users to setup their qmail_smtpd processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_smtpd:
+
+.EX
+.B qmail_smtpd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_smtpd_t
+
+can be used to make the process type qmail_smtpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_smtpd policy is very flexible allowing users to setup their qmail_smtpd processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_smtpd:
+
+
+.EX
+.PP
+.B qmail_smtpd_exec_t
+.EE
+
+- Set files with the qmail_smtpd_exec_t type, if you want to transition an executable to the qmail_smtpd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_smtpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_smtpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_splogger_selinux.8 serefpolicy-3.7.19/man/man8/qmail_splogger_selinux.8
--- nsaserefpolicy/man/man8/qmail_splogger_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_splogger_selinux.8	2013-03-15 11:40:02.083151909 +0100
@@ -0,0 +1,132 @@
+.TH  "qmail_splogger_selinux"  "8"  "13-01-04" "qmail_splogger" "SELinux Policy documentation for qmail_splogger"
+.SH "NAME"
+qmail_splogger_selinux \- Security Enhanced Linux Policy for the qmail_splogger processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_splogger processes via flexible mandatory access control.
+
+The qmail_splogger processes execute with the qmail_splogger_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_splogger_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_splogger_t SELinux type can be entered via the "qmail_splogger_exec_t" file type.  The default entrypoint paths for the qmail_splogger_t domain are the following:"
+
+/var/qmail/bin/splogger
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_splogger policy is very flexible allowing users to setup their qmail_splogger processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_splogger:
+
+.EX
+.B qmail_splogger_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_splogger_t
+
+can be used to make the process type qmail_splogger_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_splogger policy is very flexible allowing users to setup their qmail_splogger processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_splogger:
+
+
+.EX
+.PP
+.B qmail_splogger_exec_t
+.EE
+
+- Set files with the qmail_splogger_exec_t type, if you want to transition an executable to the qmail_splogger_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_splogger_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_splogger(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_start_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_start_selinux.8 serefpolicy-3.7.19/man/man8/qmail_start_selinux.8
--- nsaserefpolicy/man/man8/qmail_start_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_start_selinux.8	2013-03-15 11:39:57.694151809 +0100
@@ -0,0 +1,140 @@
+.TH  "qmail_start_selinux"  "8"  "13-01-04" "qmail_start" "SELinux Policy documentation for qmail_start"
+.SH "NAME"
+qmail_start_selinux \- Security Enhanced Linux Policy for the qmail_start processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_start processes via flexible mandatory access control.
+
+The qmail_start processes execute with the qmail_start_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_start_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_start_t SELinux type can be entered via the "qmail_start_exec_t" file type.  The default entrypoint paths for the qmail_start_t domain are the following:"
+
+/var/qmail/bin/qmail-start
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_start policy is very flexible allowing users to setup their qmail_start processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_start:
+
+.EX
+.B qmail_start_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_start_t
+
+can be used to make the process type qmail_start_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_start policy is very flexible allowing users to setup their qmail_start processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_start:
+
+
+.EX
+.PP
+.B qmail_start_exec_t
+.EE
+
+- Set files with the qmail_start_exec_t type, if you want to transition an executable to the qmail_start_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_start_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_start(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_tcp_env_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qmail_tcp_env_selinux.8 serefpolicy-3.7.19/man/man8/qmail_tcp_env_selinux.8
--- nsaserefpolicy/man/man8/qmail_tcp_env_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/qmail_tcp_env_selinux.8	2013-03-15 11:39:54.040151726 +0100
@@ -0,0 +1,132 @@
+.TH  "qmail_tcp_env_selinux"  "8"  "13-01-04" "qmail_tcp_env" "SELinux Policy documentation for qmail_tcp_env"
+.SH "NAME"
+qmail_tcp_env_selinux \- Security Enhanced Linux Policy for the qmail_tcp_env processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the qmail_tcp_env processes via flexible mandatory access control.
+
+The qmail_tcp_env processes execute with the qmail_tcp_env_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep qmail_tcp_env_t
+
+
+.SH "ENTRYPOINTS"
+
+The qmail_tcp_env_t SELinux type can be entered via the "qmail_tcp_env_exec_t" file type.  The default entrypoint paths for the qmail_tcp_env_t domain are the following:"
+
+/var/qmail/bin/tcp-env
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qmail_tcp_env policy is very flexible allowing users to setup their qmail_tcp_env processes in as secure a method as possible.
+.PP
+The following process types are defined for qmail_tcp_env:
+
+.EX
+.B qmail_tcp_env_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qmail_tcp_env_t
+
+can be used to make the process type qmail_tcp_env_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux qmail_tcp_env policy is very flexible allowing users to setup their qmail_tcp_env processes in as secure a method as possible.
+.PP
+The following file types are defined for qmail_tcp_env:
+
+
+.EX
+.PP
+.B qmail_tcp_env_exec_t
+.EE
+
+- Set files with the qmail_tcp_env_exec_t type, if you want to transition an executable to the qmail_tcp_env_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type qmail_tcp_env_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), qmail_tcp_env(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, qmail_clean_selinux(8), qmail_inject_selinux(8), qmail_local_selinux(8), qmail_lspawn_selinux(8), qmail_queue_selinux(8), qmail_remote_selinux(8), qmail_rspawn_selinux(8), qmail_send_selinux(8), qmail_smtpd_selinux(8), qmail_splogger_selinux(8), qmail_start_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/qpidd_selinux.8 serefpolicy-3.7.19/man/man8/qpidd_selinux.8
--- nsaserefpolicy/man/man8/qpidd_selinux.8	2013-03-15 11:41:12.104153507 +0100
+++ serefpolicy-3.7.19/man/man8/qpidd_selinux.8	2013-03-15 11:40:03.158151934 +0100
@@ -1,31 +1,55 @@
-.TH  "qpidd_selinux"  "8"  "qpidd" "dwalsh@redhat.com" "qpidd SELinux Policy documentation"
+.TH  "qpidd_selinux"  "8"  "13-01-04" "qpidd" "SELinux Policy documentation for qpidd"
 .SH "NAME"
 qpidd_selinux \- Security Enhanced Linux Policy for the qpidd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the qpidd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B qpidd
-(policy for qpidd)
-processes via flexible mandatory access
-control.  
+The qpidd processes execute with the qpidd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep qpidd_t
+
+
+.SH "ENTRYPOINTS"
+
+The qpidd_t SELinux type can be entered via the "qpidd_exec_t" file type.  The default entrypoint paths for the qpidd_t domain are the following:"
+
+/usr/sbin/qpidd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux qpidd policy is very flexible allowing users to setup their qpidd processes in as secure a method as possible.
+.PP
+The following process types are defined for qpidd:
+
+.EX
+.B qpidd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a qpidd_t
+
+can be used to make the process type qpidd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux qpidd policy is very flexible allowing users to setup their qpidd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for qpidd:
 
 
 .EX
 .PP
-.B qpidd_exec_t 
+.B qpidd_exec_t
 .EE
 
 - Set files with the qpidd_exec_t type, if you want to transition an executable to the qpidd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B qpidd_initrc_exec_t 
+.B qpidd_initrc_exec_t
 .EE
 
 - Set files with the qpidd_initrc_exec_t type, if you want to transition an executable to the qpidd_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B qpidd_tmpfs_t 
+.B qpidd_tmpfs_t
 .EE
 
 - Set files with the qpidd_tmpfs_t type, if you want to store qpidd files on a tmpfs file system.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B qpidd_var_lib_t 
+.B qpidd_var_lib_t
 .EE
 
 - Set files with the qpidd_var_lib_t type, if you want to store the qpidd files under the /var/lib directory.
@@ -57,40 +81,106 @@
 
 .EX
 .PP
-.B qpidd_var_run_t 
+.B qpidd_var_run_t
 .EE
 
 - Set files with the qpidd_var_run_t type, if you want to store the qpidd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/qpidd(/.*)?, /var/run/qpidd\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux qpidd policy is very flexible allowing users to setup their qpidd processes in as secure a method as possible.
-.PP 
-The following process types are defined for qpidd:
+.SH "MANAGED FILES"
 
-.EX
-.B qpidd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type qpidd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B matahari_var_lib_t
+
+	/var/lib/matahari(/.*)?
+.br
+
+.br
+.B matahari_var_run_t
+
+	/var/run/matahari(/.*)?
+.br
+	/var/run/matahari\.pid
+.br
+	/var/run/matahari-broker\.pid
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B qpidd_tmpfs_t
+
+
+.br
+.B qpidd_var_lib_t
+
+	/var/lib/qpidd(/.*)?
+.br
+
+.br
+.B qpidd_var_run_t
+
+	/var/run/qpidd(/.*)?
+.br
+	/var/run/qpidd\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,11 +193,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), qpidd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), qpidd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/quantum_selinux.8 serefpolicy-3.7.19/man/man8/quantum_selinux.8
--- nsaserefpolicy/man/man8/quantum_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/quantum_selinux.8	2013-03-15 11:39:59.081151841 +0100
@@ -0,0 +1,161 @@
+.TH  "quantum_selinux"  "8"  "13-01-04" "quantum" "SELinux Policy documentation for quantum"
+.SH "NAME"
+quantum_selinux \- Security Enhanced Linux Policy for the quantum processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the quantum processes via flexible mandatory access control.
+
+The quantum processes execute with the quantum_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep quantum_t
+
+
+.SH "ENTRYPOINTS"
+
+The quantum_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,quantum_exec_t,file_type" file types.  The default entrypoint paths for the quantum_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/quantum-server, /usr/bin/quantum-ryu-agent, /usr/bin/quantum-openvswitch-agent, /usr/bin/quantum-linuxbridge-agent, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux quantum policy is very flexible allowing users to setup their quantum processes in as secure a method as possible.
+.PP
+The following process types are defined for quantum:
+
+.EX
+.B quantum_t
+.EE
+.PP
+Note:
+.B semanage permissive -a quantum_t
+
+can be used to make the process type quantum_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux quantum policy is very flexible allowing users to setup their quantum processes in as secure a method as possible.
+.PP
+The following file types are defined for quantum:
+
+
+.EX
+.PP
+.B quantum_exec_t
+.EE
+
+- Set files with the quantum_exec_t type, if you want to transition an executable to the quantum_t domain.
+
+
+.EX
+.PP
+.B quantum_initrc_exec_t
+.EE
+
+- Set files with the quantum_initrc_exec_t type, if you want to transition an executable to the quantum_initrc_t domain.
+
+
+.EX
+.PP
+.B quantum_log_t
+.EE
+
+- Set files with the quantum_log_t type, if you want to treat the data as quantum log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B quantum_tmp_t
+.EE
+
+- Set files with the quantum_tmp_t type, if you want to store quantum temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B quantum_var_lib_t
+.EE
+
+- Set files with the quantum_var_lib_t type, if you want to store the quantum files under the /var/lib directory.
+
+
+.EX
+.PP
+.B quantum_var_run_t
+.EE
+
+- Set files with the quantum_var_run_t type, if you want to store the quantum files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports.
+.PP
+You can see the types associated with a port by using the following command:
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports.
+SELinux quantum policy is very flexible allowing users to setup their quantum processes in as secure a method as possible.
+.PP
+The following port types are defined for quantum:
+
+.EX
+.TP 5
+.B quantum_port_t
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 9696
+.EE
+.SH "MANAGED FILES"
+
+The SELinux process type quantum_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), quantum(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/quota_nld_selinux.8 serefpolicy-3.7.19/man/man8/quota_nld_selinux.8
--- nsaserefpolicy/man/man8/quota_nld_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/quota_nld_selinux.8	2013-03-15 11:39:57.873151813 +0100
@@ -0,0 +1,154 @@
+.TH  "quota_nld_selinux"  "8"  "13-01-04" "quota_nld" "SELinux Policy documentation for quota_nld"
+.SH "NAME"
+quota_nld_selinux \- Security Enhanced Linux Policy for the quota_nld processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the quota_nld processes via flexible mandatory access control.
+
+The quota_nld processes execute with the quota_nld_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep quota_nld_t
+
+
+.SH "ENTRYPOINTS"
+
+The quota_nld_t SELinux type can be entered via the "quota_nld_exec_t" file type.  The default entrypoint paths for the quota_nld_t domain are the following:"
+
+/usr/sbin/quota_nld
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux quota_nld policy is very flexible allowing users to setup their quota_nld processes in as secure a method as possible.
+.PP
+The following process types are defined for quota_nld:
+
+.EX
+.B quota_nld_t
+.EE
+.PP
+Note:
+.B semanage permissive -a quota_nld_t
+
+can be used to make the process type quota_nld_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux quota_nld policy is very flexible allowing users to setup their quota_nld processes in as secure a method as possible.
+.PP
+The following file types are defined for quota_nld:
+
+
+.EX
+.PP
+.B quota_nld_exec_t
+.EE
+
+- Set files with the quota_nld_exec_t type, if you want to transition an executable to the quota_nld_t domain.
+
+
+.EX
+.PP
+.B quota_nld_var_run_t
+.EE
+
+- Set files with the quota_nld_var_run_t type, if you want to store the quota nld files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type quota_nld_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B quota_nld_var_run_t
+
+	/var/run/quota_nld\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), quota_nld(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, quota_selinux(8), quota_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/quota_selinux.8 serefpolicy-3.7.19/man/man8/quota_selinux.8
--- nsaserefpolicy/man/man8/quota_selinux.8	2013-03-15 11:41:09.688153452 +0100
+++ serefpolicy-3.7.19/man/man8/quota_selinux.8	2013-03-15 11:39:53.817151720 +0100
@@ -1,55 +1,71 @@
-.TH  "quota_selinux"  "8"  "quota" "dwalsh@redhat.com" "quota SELinux Policy documentation"
+.TH  "quota_selinux"  "8"  "13-01-04" "quota" "SELinux Policy documentation for quota"
 .SH "NAME"
 quota_selinux \- Security Enhanced Linux Policy for the quota processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the quota processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B quota
-(File system quota management)
-processes via flexible mandatory access
-control.  
+The quota processes execute with the quota_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep quota_t
+
+
+.SH "ENTRYPOINTS"
+
+The quota_t SELinux type can be entered via the "quota_exec_t" file type.  The default entrypoint paths for the quota_t domain are the following:"
+
+/sbin/quota(check|on), /usr/sbin/convertquota
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux quota policy is very flexible allowing users to setup their quota processes in as secure a method as possible.
+.PP
+The following process types are defined for quota:
+
+.EX
+.B quota_t, quota_nld_t
+.EE
+.PP
+Note:
+.B semanage permissive -a quota_t
+
+can be used to make the process type quota_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux quota policy is very flexible allowing users to setup their quota processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for quota:
 
 
 .EX
 .PP
-.B quota_db_t 
+.B quota_db_t
 .EE
 
 - Set files with the quota_db_t type, if you want to treat the files as quota database content.
 
-.br
-.TP 5
-Paths: 
-/boot/a?quota\.(user|group), /etc/a?quota\.(user|group), /a?quota\.(user|group), /var/a?quota\.(user|group), /var/spool/(.*/)?a?quota\.(user|group)
 
 .EX
 .PP
-.B quota_exec_t 
+.B quota_exec_t
 .EE
 
 - Set files with the quota_exec_t type, if you want to transition an executable to the quota_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/convertquota, /sbin/quota(check|on)
 
 .EX
 .PP
-.B quota_flag_t 
+.B quota_flag_t
 .EE
 
 - Set files with the quota_flag_t type, if you want to treat the files as quota flag data.
@@ -57,7 +73,7 @@
 
 .EX
 .PP
-.B quota_nld_exec_t 
+.B quota_nld_exec_t
 .EE
 
 - Set files with the quota_nld_exec_t type, if you want to transition an executable to the quota_nld_t domain.
@@ -65,7 +81,7 @@
 
 .EX
 .PP
-.B quota_nld_var_run_t 
+.B quota_nld_var_run_t
 .EE
 
 - Set files with the quota_nld_var_run_t type, if you want to store the quota nld files under the /run directory.
@@ -73,28 +89,82 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux quota policy is very flexible allowing users to setup their quota processes in as secure a method as possible.
-.PP 
-The following process types are defined for quota:
+.SH "MANAGED FILES"
 
-.EX
-.B quota_t, quota_nld_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type quota_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B noxattrfs
+
+	all files on file systems which do not support extended attributes
+.br
+
+.br
+.B quota_db_t
+
+	/a?quota\.(user|group)
+.br
+	/var/a?quota\.(user|group)
+.br
+	/etc/a?quota\.(user|group)
+.br
+	/boot/a?quota\.(user|group)
+.br
+	/var/spool/(.*/)?a?quota\.(user|group)
+.br
+	/var/lib/openshift/a?quota\.(user|group)
+.br
+	/var/lib/stickshift/a?quota\.(user|group)
+.br
+	/home/a?quota\.(user|group)
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -107,11 +177,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), quota(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), quota(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, quota_nld_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/racoon_selinux.8 serefpolicy-3.7.19/man/man8/racoon_selinux.8
--- nsaserefpolicy/man/man8/racoon_selinux.8	2013-03-15 11:41:12.088153506 +0100
+++ serefpolicy-3.7.19/man/man8/racoon_selinux.8	2013-03-15 11:40:02.658151922 +0100
@@ -1,36 +1,73 @@
-.TH  "racoon_selinux"  "8"  "racoon" "dwalsh@redhat.com" "racoon SELinux Policy documentation"
+.TH  "racoon_selinux"  "8"  "13-01-04" "racoon" "SELinux Policy documentation for racoon"
 .SH "NAME"
 racoon_selinux \- Security Enhanced Linux Policy for the racoon processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the racoon processes via flexible mandatory access control.
 
+The racoon processes execute with the racoon_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep racoon_t
+
+
+.SH "ENTRYPOINTS"
+
+The racoon_t SELinux type can be entered via the "racoon_exec_t" file type.  The default entrypoint paths for the racoon_t domain are the following:"
+
+/usr/sbin/racoon
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux racoon policy is very flexible allowing users to setup their racoon processes in as secure a method as possible.
+.PP
+The following process types are defined for racoon:
+
+.EX
+.B racoon_t
+.EE
+.PP
+Note:
+.B semanage permissive -a racoon_t
+
+can be used to make the process type racoon_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  racoon policy is extremely flexible and has several booleans that allow you to manipulate the policy and run racoon with the tightest access possible.
 
 
 .PP
-If you want to allow racoon to read shado, you must turn on the racoon_read_shadow boolean.
+If you want to allow racoon to read shadow, you must turn on the racoon_read_shadow boolean.
+
+.EX
+.B setsebool -P racoon_read_shadow 1
+.EE
+
+.PP
+If you want to allow racoon to read shadow, you must turn on the racoon_read_shadow boolean.
 
 .EX
 .B setsebool -P racoon_read_shadow 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux racoon policy is very flexible allowing users to setup their racoon processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for racoon:
 
 
 .EX
 .PP
-.B racoon_exec_t 
+.B racoon_exec_t
 .EE
 
 - Set files with the racoon_exec_t type, if you want to transition an executable to the racoon_t domain.
@@ -38,7 +75,7 @@
 
 .EX
 .PP
-.B racoon_tmp_t 
+.B racoon_tmp_t
 .EE
 
 - Set files with the racoon_tmp_t type, if you want to store racoon temporary files in the /tmp directories.
@@ -46,28 +83,122 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux racoon policy is very flexible allowing users to setup their racoon processes in as secure a method as possible.
-.PP 
-The following process types are defined for racoon:
+.SH "MANAGED FILES"
 
-.EX
-.B racoon_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type racoon_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B ipsec_var_run_t
+
+	/var/racoon(/.*)?
+.br
+	/var/run/pluto(/.*)?
+.br
+	/var/run/racoon\.pid
+.br
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B racoon_tmp_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,12 +214,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), racoon(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), racoon(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/radiusd_selinux.8 serefpolicy-3.7.19/man/man8/radiusd_selinux.8
--- nsaserefpolicy/man/man8/radiusd_selinux.8	2013-03-15 11:41:12.100153507 +0100
+++ serefpolicy-3.7.19/man/man8/radiusd_selinux.8	2013-03-15 11:40:02.883151927 +0100
@@ -1,36 +1,73 @@
-.TH  "radiusd_selinux"  "8"  "radiusd" "dwalsh@redhat.com" "radiusd SELinux Policy documentation"
+.TH  "radiusd_selinux"  "8"  "13-01-04" "radiusd" "SELinux Policy documentation for radiusd"
 .SH "NAME"
 radiusd_selinux \- Security Enhanced Linux Policy for the radiusd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the radiusd processes via flexible mandatory access control.
 
+The radiusd processes execute with the radiusd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep radiusd_t
+
+
+.SH "ENTRYPOINTS"
+
+The radiusd_t SELinux type can be entered via the "radiusd_exec_t" file type.  The default entrypoint paths for the radiusd_t domain are the following:"
+
+/etc/cron\.(daily|monthly)/radiusd, /etc/cron\.(daily|weekly|monthly)/freeradius, /usr/sbin/radiusd, /usr/sbin/freeradius
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
+.PP
+The following process types are defined for radiusd:
+
+.EX
+.B radiusd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a radiusd_t
+
+can be used to make the process type radiusd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  radiusd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run radiusd with the tightest access possible.
 
 
 .PP
-If you want to allow users to login using a radius serve, you must turn on the authlogin_radius boolean.
+If you want to allow users to login using a radius server, you must turn on the authlogin_radius boolean.
+
+.EX
+.B setsebool -P authlogin_radius 1
+.EE
+
+.PP
+If you want to allow users to login using a radius server, you must turn on the authlogin_radius boolean.
 
 .EX
 .B setsebool -P authlogin_radius 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for radiusd:
 
 
 .EX
 .PP
-.B radiusd_etc_rw_t 
+.B radiusd_etc_rw_t
 .EE
 
 - Set files with the radiusd_etc_rw_t type, if you want to treat the files as radiusd etc read/write content.
@@ -38,7 +75,7 @@
 
 .EX
 .PP
-.B radiusd_etc_t 
+.B radiusd_etc_t
 .EE
 
 - Set files with the radiusd_etc_t type, if you want to store radiusd files in the /etc directories.
@@ -46,19 +83,15 @@
 
 .EX
 .PP
-.B radiusd_exec_t 
+.B radiusd_exec_t
 .EE
 
 - Set files with the radiusd_exec_t type, if you want to transition an executable to the radiusd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/freeradius, /etc/cron\.(daily|monthly)/radiusd, /usr/sbin/radiusd, /etc/cron\.(daily|weekly|monthly)/freeradius
 
 .EX
 .PP
-.B radiusd_initrc_exec_t 
+.B radiusd_initrc_exec_t
 .EE
 
 - Set files with the radiusd_initrc_exec_t type, if you want to transition an executable to the radiusd_initrc_t domain.
@@ -66,19 +99,15 @@
 
 .EX
 .PP
-.B radiusd_log_t 
+.B radiusd_log_t
 .EE
 
 - Set files with the radiusd_log_t type, if you want to treat the data as radiusd log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/radacct(/.*)?, /var/log/radiusd-freeradius(/.*)?, /var/log/radius\.log.*, /var/log/freeradius(/.*)?, /var/log/radwtmp.*, /var/log/radius(/.*)?, /var/log/radutmp
 
 .EX
 .PP
-.B radiusd_var_lib_t 
+.B radiusd_var_lib_t
 .EE
 
 - Set files with the radiusd_var_lib_t type, if you want to store the radiusd files under the /var/lib directory.
@@ -86,63 +115,157 @@
 
 .EX
 .PP
-.B radiusd_var_run_t 
+.B radiusd_var_run_t
 .EE
 
 - Set files with the radiusd_var_run_t type, if you want to store the radiusd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/radiusd\.pid, /var/run/radiusd(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for radiusd:
 
 .EX
 .TP 5
-.B radius_port_t 
+.B radius_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 1645,1812
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
-.PP 
-The following process types are defined for radiusd:
+.SH "MANAGED FILES"
 
-.EX
-.B radiusd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type radiusd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B radiusd_etc_rw_t
+
+	/etc/raddb/db\.daily
+.br
+
+.br
+.B radiusd_log_t
+
+	/var/log/radius(/.*)?
+.br
+	/var/log/radutmp.*
+.br
+	/var/log/radwtmp.*
+.br
+	/var/log/radacct(/.*)?
+.br
+	/var/log/radius\.log.*
+.br
+	/var/log/freeradius(/.*)?
+.br
+	/var/log/radiusd-freeradius(/.*)?
+.br
+
+.br
+.B radiusd_var_lib_t
+
+	/var/lib/radiousd(/.*)?
+.br
+
+.br
+.B radiusd_var_run_t
+
+	/var/run/radiusd(/.*)?
+.br
+	/var/run/radiusd\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -161,12 +284,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), radiusd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), radiusd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/radvd_selinux.8 serefpolicy-3.7.19/man/man8/radvd_selinux.8
--- nsaserefpolicy/man/man8/radvd_selinux.8	2013-03-15 11:41:12.101153507 +0100
+++ serefpolicy-3.7.19/man/man8/radvd_selinux.8	2013-03-15 11:40:02.979151929 +0100
@@ -1,31 +1,55 @@
-.TH  "radvd_selinux"  "8"  "radvd" "dwalsh@redhat.com" "radvd SELinux Policy documentation"
+.TH  "radvd_selinux"  "8"  "13-01-04" "radvd" "SELinux Policy documentation for radvd"
 .SH "NAME"
 radvd_selinux \- Security Enhanced Linux Policy for the radvd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the radvd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B radvd
-(IPv6 router advertisement daemon)
-processes via flexible mandatory access
-control.  
+The radvd processes execute with the radvd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep radvd_t
+
+
+.SH "ENTRYPOINTS"
+
+The radvd_t SELinux type can be entered via the "radvd_exec_t" file type.  The default entrypoint paths for the radvd_t domain are the following:"
+
+/usr/sbin/radvd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux radvd policy is very flexible allowing users to setup their radvd processes in as secure a method as possible.
+.PP
+The following process types are defined for radvd:
+
+.EX
+.B radvd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a radvd_t
+
+can be used to make the process type radvd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux radvd policy is very flexible allowing users to setup their radvd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for radvd:
 
 
 .EX
 .PP
-.B radvd_etc_t 
+.B radvd_etc_t
 .EE
 
 - Set files with the radvd_etc_t type, if you want to store radvd files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B radvd_exec_t 
+.B radvd_exec_t
 .EE
 
 - Set files with the radvd_exec_t type, if you want to transition an executable to the radvd_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B radvd_initrc_exec_t 
+.B radvd_initrc_exec_t
 .EE
 
 - Set files with the radvd_initrc_exec_t type, if you want to transition an executable to the radvd_initrc_t domain.
@@ -49,40 +73,80 @@
 
 .EX
 .PP
-.B radvd_var_run_t 
+.B radvd_var_run_t
 .EE
 
 - Set files with the radvd_var_run_t type, if you want to store the radvd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/radvd(/.*)?, /var/run/radvd\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux radvd policy is very flexible allowing users to setup their radvd processes in as secure a method as possible.
-.PP 
-The following process types are defined for radvd:
+.SH "MANAGED FILES"
 
-.EX
-.B radvd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type radvd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B radvd_var_run_t
+
+	/var/run/radvd(/.*)?
+.br
+	/var/run/radvd\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -95,11 +159,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), radvd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), radvd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rdisc_selinux.8 serefpolicy-3.7.19/man/man8/rdisc_selinux.8
--- nsaserefpolicy/man/man8/rdisc_selinux.8	2013-03-15 11:41:12.060153506 +0100
+++ serefpolicy-3.7.19/man/man8/rdisc_selinux.8	2013-03-15 11:40:01.900151905 +0100
@@ -1,31 +1,55 @@
-.TH  "rdisc_selinux"  "8"  "rdisc" "dwalsh@redhat.com" "rdisc SELinux Policy documentation"
+.TH  "rdisc_selinux"  "8"  "13-01-04" "rdisc" "SELinux Policy documentation for rdisc"
 .SH "NAME"
 rdisc_selinux \- Security Enhanced Linux Policy for the rdisc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rdisc processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rdisc
-(Network router discovery daemon)
-processes via flexible mandatory access
-control.  
+The rdisc processes execute with the rdisc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rdisc_t
+
+
+.SH "ENTRYPOINTS"
+
+The rdisc_t SELinux type can be entered via the "rdisc_exec_t" file type.  The default entrypoint paths for the rdisc_t domain are the following:"
+
+/sbin/rdisc
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rdisc policy is very flexible allowing users to setup their rdisc processes in as secure a method as possible.
+.PP
+The following process types are defined for rdisc:
+
+.EX
+.B rdisc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rdisc_t
+
+can be used to make the process type rdisc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rdisc policy is very flexible allowing users to setup their rdisc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rdisc:
 
 
 .EX
 .PP
-.B rdisc_exec_t 
+.B rdisc_exec_t
 .EE
 
 - Set files with the rdisc_exec_t type, if you want to transition an executable to the rdisc_t domain.
@@ -33,28 +57,64 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rdisc policy is very flexible allowing users to setup their rdisc processes in as secure a method as possible.
-.PP 
-The following process types are defined for rdisc:
+.SH "MANAGED FILES"
 
-.EX
-.B rdisc_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rdisc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +127,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rdisc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rdisc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/readahead_selinux.8 serefpolicy-3.7.19/man/man8/readahead_selinux.8
--- nsaserefpolicy/man/man8/readahead_selinux.8	2013-03-15 11:41:11.884153502 +0100
+++ serefpolicy-3.7.19/man/man8/readahead_selinux.8	2013-03-15 11:39:59.242151844 +0100
@@ -1,43 +1,63 @@
-.TH  "readahead_selinux"  "8"  "readahead" "dwalsh@redhat.com" "readahead SELinux Policy documentation"
+.TH  "readahead_selinux"  "8"  "13-01-04" "readahead" "SELinux Policy documentation for readahead"
 .SH "NAME"
 readahead_selinux \- Security Enhanced Linux Policy for the readahead processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the readahead processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B readahead
-(Readahead, read files into page cache for improved performance)
-processes via flexible mandatory access
-control.  
+The readahead processes execute with the readahead_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep readahead_t
+
+
+.SH "ENTRYPOINTS"
+
+The readahead_t SELinux type can be entered via the "readahead_exec_t" file type.  The default entrypoint paths for the readahead_t domain are the following:"
+
+/sbin/readahead.*, /usr/sbin/readahead.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux readahead policy is very flexible allowing users to setup their readahead processes in as secure a method as possible.
+.PP
+The following process types are defined for readahead:
+
+.EX
+.B readahead_t
+.EE
+.PP
+Note:
+.B semanage permissive -a readahead_t
+
+can be used to make the process type readahead_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux readahead policy is very flexible allowing users to setup their readahead processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for readahead:
 
 
 .EX
 .PP
-.B readahead_exec_t 
+.B readahead_exec_t
 .EE
 
 - Set files with the readahead_exec_t type, if you want to transition an executable to the readahead_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/readahead.*, /usr/sbin/readahead.*
 
 .EX
 .PP
-.B readahead_var_lib_t 
+.B readahead_var_lib_t
 .EE
 
 - Set files with the readahead_var_lib_t type, if you want to store the readahead files under the /var/lib directory.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B readahead_var_run_t 
+.B readahead_var_run_t
 .EE
 
 - Set files with the readahead_var_run_t type, if you want to store the readahead files under the /run directory.
@@ -53,28 +73,140 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux readahead policy is very flexible allowing users to setup their readahead processes in as secure a method as possible.
-.PP 
-The following process types are defined for readahead:
+.SH "MANAGED FILES"
 
-.EX
-.B readahead_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type readahead_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B readahead_var_lib_t
+
+	/var/lib/readahead(/.*)?
+.br
+
+.br
+.B readahead_var_run_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -87,11 +219,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), readahead(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), readahead(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/regex_milter_selinux.8 serefpolicy-3.7.19/man/man8/regex_milter_selinux.8
--- nsaserefpolicy/man/man8/regex_milter_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/regex_milter_selinux.8	2013-03-15 11:40:02.865151927 +0100
@@ -0,0 +1,153 @@
+.TH  "regex_milter_selinux"  "8"  "13-01-04" "regex_milter" "SELinux Policy documentation for regex_milter"
+.SH "NAME"
+regex_milter_selinux \- Security Enhanced Linux Policy for the regex_milter processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the regex_milter processes via flexible mandatory access control.
+
+The regex_milter processes execute with the regex_milter_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep regex_milter_t
+
+
+.SH "ENTRYPOINTS"
+
+The regex_milter_t SELinux type can be entered via the "regex_milter_exec_t" file type.  The default entrypoint paths for the regex_milter_t domain are the following:"
+
+/usr/sbin/milter-regex
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux regex_milter policy is very flexible allowing users to setup their regex_milter processes in as secure a method as possible.
+.PP
+The following process types are defined for regex_milter:
+
+.EX
+.B regex_milter_t
+.EE
+.PP
+Note:
+.B semanage permissive -a regex_milter_t
+
+can be used to make the process type regex_milter_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux regex_milter policy is very flexible allowing users to setup their regex_milter processes in as secure a method as possible.
+.PP
+The following file types are defined for regex_milter:
+
+
+.EX
+.PP
+.B regex_milter_data_t
+.EE
+
+- Set files with the regex_milter_data_t type, if you want to treat the files as regex milter content.
+
+
+.EX
+.PP
+.B regex_milter_exec_t
+.EE
+
+- Set files with the regex_milter_exec_t type, if you want to transition an executable to the regex_milter_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type regex_milter_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B regex_milter_data_t
+
+	/var/spool/milter-regex(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), regex_milter(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/restorecond_selinux.8 serefpolicy-3.7.19/man/man8/restorecond_selinux.8
--- nsaserefpolicy/man/man8/restorecond_selinux.8	2013-03-15 11:41:12.231153510 +0100
+++ serefpolicy-3.7.19/man/man8/restorecond_selinux.8	2013-03-15 11:40:07.192152026 +0100
@@ -1,25 +1,55 @@
-.TH  "restorecond_selinux"  "8"  "restorecond" "dwalsh@redhat.com" "restorecond SELinux Policy documentation"
+.TH  "restorecond_selinux"  "8"  "13-01-04" "restorecond" "SELinux Policy documentation for restorecond"
 .SH "NAME"
 restorecond_selinux \- Security Enhanced Linux Policy for the restorecond processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the restorecond processes via flexible mandatory access control.
 
+The restorecond processes execute with the restorecond_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep restorecond_t
+
+
+.SH "ENTRYPOINTS"
+
+The restorecond_t SELinux type can be entered via the "restorecond_exec_t" file type.  The default entrypoint paths for the restorecond_t domain are the following:"
+
+/usr/sbin/restorecond
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux restorecond policy is very flexible allowing users to setup their restorecond processes in as secure a method as possible.
+.PP
+The following process types are defined for restorecond:
+
+.EX
+.B restorecond_t
+.EE
+.PP
+Note:
+.B semanage permissive -a restorecond_t
+
+can be used to make the process type restorecond_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux restorecond policy is very flexible allowing users to setup their restorecond processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for restorecond:
 
 
 .EX
 .PP
-.B restorecond_exec_t 
+.B restorecond_exec_t
 .EE
 
 - Set files with the restorecond_exec_t type, if you want to transition an executable to the restorecond_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B restorecond_var_run_t 
+.B restorecond_var_run_t
 .EE
 
 - Set files with the restorecond_var_run_t type, if you want to store the restorecond files under the /run directory.
@@ -35,28 +65,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux restorecond policy is very flexible allowing users to setup their restorecond processes in as secure a method as possible.
-.PP 
-The following process types are defined for restorecond:
+.SH "MANAGED FILES"
 
-.EX
-.B restorecond_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type restorecond_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B restorecond_var_run_t
+
+	/var/run/restorecond\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +145,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), restorecond(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), restorecond(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rgmanager_selinux.8 serefpolicy-3.7.19/man/man8/rgmanager_selinux.8
--- nsaserefpolicy/man/man8/rgmanager_selinux.8	2013-03-15 11:41:12.014153505 +0100
+++ serefpolicy-3.7.19/man/man8/rgmanager_selinux.8	2013-03-15 11:40:01.109151887 +0100
@@ -1,16 +1,40 @@
-.TH  "rgmanager_selinux"  "8"  "rgmanager" "dwalsh@redhat.com" "rgmanager SELinux Policy documentation"
+.TH  "rgmanager_selinux"  "8"  "13-01-04" "rgmanager" "SELinux Policy documentation for rgmanager"
 .SH "NAME"
 rgmanager_selinux \- Security Enhanced Linux Policy for the rgmanager processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rgmanager processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rgmanager
-(SELinux policy for rgmanager)
-processes via flexible mandatory access
-control.  
+The rgmanager processes execute with the rgmanager_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rgmanager_t
+
+
+.SH "ENTRYPOINTS"
+
+The rgmanager_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,rgmanager_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the rgmanager_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/lib(64)?/heartbeat/heartbeat, /usr/sbin/ccs_tool, /usr/sbin/cpglockd, /usr/sbin/cman_tool, /usr/sbin/rgmanager, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rgmanager policy is very flexible allowing users to setup their rgmanager processes in as secure a method as possible.
+.PP
+The following process types are defined for rgmanager:
+
+.EX
+.B rgmanager_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rgmanager_t
+
+can be used to make the process type rgmanager_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  rgmanager policy is extremely flexible and has several booleans that allow you to manipulate the policy and run rgmanager with the tightest access possible.
@@ -23,20 +47,27 @@
 .B setsebool -P rgmanager_can_network_connect 1
 .EE
 
+.PP
+If you want to allow rgmanager domain to connect to the network using TCP, you must turn on the rgmanager_can_network_connect boolean.
+
+.EX
+.B setsebool -P rgmanager_can_network_connect 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rgmanager policy is very flexible allowing users to setup their rgmanager processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rgmanager:
 
 
 .EX
 .PP
-.B rgmanager_exec_t 
+.B rgmanager_exec_t
 .EE
 
 - Set files with the rgmanager_exec_t type, if you want to transition an executable to the rgmanager_t domain.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B rgmanager_initrc_exec_t 
+.B rgmanager_initrc_exec_t
 .EE
 
 - Set files with the rgmanager_initrc_exec_t type, if you want to transition an executable to the rgmanager_initrc_t domain.
@@ -52,7 +83,7 @@
 
 .EX
 .PP
-.B rgmanager_tmp_t 
+.B rgmanager_tmp_t
 .EE
 
 - Set files with the rgmanager_tmp_t type, if you want to store rgmanager temporary files in the /tmp directories.
@@ -60,7 +91,7 @@
 
 .EX
 .PP
-.B rgmanager_tmpfs_t 
+.B rgmanager_tmpfs_t
 .EE
 
 - Set files with the rgmanager_tmpfs_t type, if you want to store rgmanager files on a tmpfs file system.
@@ -68,7 +99,15 @@
 
 .EX
 .PP
-.B rgmanager_var_log_t 
+.B rgmanager_var_lib_t
+.EE
+
+- Set files with the rgmanager_var_lib_t type, if you want to store the rgmanager files under the /var/lib directory.
+
+
+.EX
+.PP
+.B rgmanager_var_log_t
 .EE
 
 - Set files with the rgmanager_var_log_t type, if you want to treat the data as rgmanager var log data, usually stored under the /var/log directory.
@@ -76,40 +115,28 @@
 
 .EX
 .PP
-.B rgmanager_var_run_t 
+.B rgmanager_var_run_t
 .EE
 
 - Set files with the rgmanager_var_run_t type, if you want to store the rgmanager files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/rgmanager\.pid, /var/run/cluster/rgmanager\.sk
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rgmanager policy is very flexible allowing users to setup their rgmanager processes in as secure a method as possible.
-.PP 
-The following process types are defined for rgmanager:
+.SH "MANAGED FILES"
 
-.EX
-.B rgmanager_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rgmanager_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -125,12 +152,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rgmanager(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rgmanager(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/rhev_agentd_selinux.8 serefpolicy-3.7.19/man/man8/rhev_agentd_selinux.8
--- nsaserefpolicy/man/man8/rhev_agentd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/rhev_agentd_selinux.8	2013-03-15 11:40:02.636151922 +0100
@@ -0,0 +1,179 @@
+.TH  "rhev_agentd_selinux"  "8"  "13-01-04" "rhev_agentd" "SELinux Policy documentation for rhev_agentd"
+.SH "NAME"
+rhev_agentd_selinux \- Security Enhanced Linux Policy for the rhev_agentd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the rhev_agentd processes via flexible mandatory access control.
+
+The rhev_agentd processes execute with the rhev_agentd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep rhev_agentd_t
+
+
+.SH "ENTRYPOINTS"
+
+The rhev_agentd_t SELinux type can be entered via the "rhev_agentd_exec_t" file type.  The default entrypoint paths for the rhev_agentd_t domain are the following:"
+
+/usr/share/rhev-agent/rhev-agentd\.py, /usr/share/rhev-agent/LockActiveSession\.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rhev_agentd policy is very flexible allowing users to setup their rhev_agentd processes in as secure a method as possible.
+.PP
+The following process types are defined for rhev_agentd:
+
+.EX
+.B rhev_agentd_t, rhev_agentd_consolehelper_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rhev_agentd_t
+
+can be used to make the process type rhev_agentd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux rhev_agentd policy is very flexible allowing users to setup their rhev_agentd processes in as secure a method as possible.
+.PP
+The following file types are defined for rhev_agentd:
+
+
+.EX
+.PP
+.B rhev_agentd_exec_t
+.EE
+
+- Set files with the rhev_agentd_exec_t type, if you want to transition an executable to the rhev_agentd_t domain.
+
+
+.EX
+.PP
+.B rhev_agentd_log_t
+.EE
+
+- Set files with the rhev_agentd_log_t type, if you want to treat the data as rhev agentd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rhev_agentd_tmp_t
+.EE
+
+- Set files with the rhev_agentd_tmp_t type, if you want to store rhev agentd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rhev_agentd_var_run_t
+.EE
+
+- Set files with the rhev_agentd_var_run_t type, if you want to store the rhev agentd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type rhev_agentd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B rhev_agentd_log_t
+
+	/var/log/rhev-agent(/.*)?
+.br
+
+.br
+.B rhev_agentd_tmp_t
+
+
+.br
+.B rhev_agentd_var_run_t
+
+	/var/run/rhev-agentd\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), rhev_agentd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rhgb_selinux.8 serefpolicy-3.7.19/man/man8/rhgb_selinux.8
--- nsaserefpolicy/man/man8/rhgb_selinux.8	2013-03-15 11:41:12.147153508 +0100
+++ serefpolicy-3.7.19/man/man8/rhgb_selinux.8	2013-03-15 11:40:04.234151958 +0100
@@ -1,31 +1,55 @@
-.TH  "rhgb_selinux"  "8"  "rhgb" "dwalsh@redhat.com" "rhgb SELinux Policy documentation"
+.TH  "rhgb_selinux"  "8"  "13-01-04" "rhgb" "SELinux Policy documentation for rhgb"
 .SH "NAME"
 rhgb_selinux \- Security Enhanced Linux Policy for the rhgb processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rhgb processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rhgb
-( Red Hat Graphical Boot )
-processes via flexible mandatory access
-control.  
+The rhgb processes execute with the rhgb_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rhgb_t
+
+
+.SH "ENTRYPOINTS"
+
+The rhgb_t SELinux type can be entered via the "rhgb_exec_t" file type.  The default entrypoint paths for the rhgb_t domain are the following:"
+
+/usr/bin/rhgb
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rhgb policy is very flexible allowing users to setup their rhgb processes in as secure a method as possible.
+.PP
+The following process types are defined for rhgb:
+
+.EX
+.B rhgb_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rhgb_t
+
+can be used to make the process type rhgb_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rhgb policy is very flexible allowing users to setup their rhgb processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rhgb:
 
 
 .EX
 .PP
-.B rhgb_exec_t 
+.B rhgb_exec_t
 .EE
 
 - Set files with the rhgb_exec_t type, if you want to transition an executable to the rhgb_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B rhgb_tmpfs_t 
+.B rhgb_tmpfs_t
 .EE
 
 - Set files with the rhgb_tmpfs_t type, if you want to store rhgb files on a tmpfs file system.
@@ -41,28 +65,72 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rhgb policy is very flexible allowing users to setup their rhgb processes in as secure a method as possible.
-.PP 
-The following process types are defined for rhgb:
+.SH "MANAGED FILES"
 
-.EX
-.B rhgb_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rhgb_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B ramfs_t
+
+
+.br
+.B rhgb_tmpfs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +143,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rhgb(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rhgb(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rhnsd_selinux.8 serefpolicy-3.7.19/man/man8/rhnsd_selinux.8
--- nsaserefpolicy/man/man8/rhnsd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/rhnsd_selinux.8	2013-03-15 11:40:06.177152002 +0100
@@ -0,0 +1,111 @@
+.TH  "rhnsd_selinux"  "8"  "13-01-04" "rhnsd" "SELinux Policy documentation for rhnsd"
+.SH "NAME"
+rhnsd_selinux \- Security Enhanced Linux Policy for the rhnsd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the rhnsd processes via flexible mandatory access control.
+
+The rhnsd processes execute with the rhnsd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep rhnsd_t
+
+
+.SH "ENTRYPOINTS"
+
+The rhnsd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,rhnsd_exec_t" file types.  The default entrypoint paths for the rhnsd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/rhnsd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rhnsd policy is very flexible allowing users to setup their rhnsd processes in as secure a method as possible.
+.PP
+The following process types are defined for rhnsd:
+
+.EX
+.B rhnsd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rhnsd_t
+
+can be used to make the process type rhnsd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux rhnsd policy is very flexible allowing users to setup their rhnsd processes in as secure a method as possible.
+.PP
+The following file types are defined for rhnsd:
+
+
+.EX
+.PP
+.B rhnsd_exec_t
+.EE
+
+- Set files with the rhnsd_exec_t type, if you want to transition an executable to the rhnsd_t domain.
+
+
+.EX
+.PP
+.B rhnsd_initrc_exec_t
+.EE
+
+- Set files with the rhnsd_initrc_exec_t type, if you want to transition an executable to the rhnsd_initrc_t domain.
+
+
+.EX
+.PP
+.B rhnsd_var_run_t
+.EE
+
+- Set files with the rhnsd_var_run_t type, if you want to store the rhnsd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type rhnsd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), rhnsd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rhsmcertd_selinux.8 serefpolicy-3.7.19/man/man8/rhsmcertd_selinux.8
--- nsaserefpolicy/man/man8/rhsmcertd_selinux.8	2013-03-15 11:41:11.872153501 +0100
+++ serefpolicy-3.7.19/man/man8/rhsmcertd_selinux.8	2013-03-15 11:39:58.984151838 +0100
@@ -1,31 +1,55 @@
-.TH  "rhsmcertd_selinux"  "8"  "rhsmcertd" "dwalsh@redhat.com" "rhsmcertd SELinux Policy documentation"
+.TH  "rhsmcertd_selinux"  "8"  "13-01-04" "rhsmcertd" "SELinux Policy documentation for rhsmcertd"
 .SH "NAME"
 rhsmcertd_selinux \- Security Enhanced Linux Policy for the rhsmcertd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rhsmcertd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rhsmcertd
-(Subscription Management Certificate Daemon policy)
-processes via flexible mandatory access
-control.  
+The rhsmcertd processes execute with the rhsmcertd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rhsmcertd_t
+
+
+.SH "ENTRYPOINTS"
+
+The rhsmcertd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,rhsmcertd_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the rhsmcertd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/rhsmcertd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rhsmcertd policy is very flexible allowing users to setup their rhsmcertd processes in as secure a method as possible.
+.PP
+The following process types are defined for rhsmcertd:
+
+.EX
+.B rhsmcertd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rhsmcertd_t
+
+can be used to make the process type rhsmcertd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rhsmcertd policy is very flexible allowing users to setup their rhsmcertd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rhsmcertd:
 
 
 .EX
 .PP
-.B rhsmcertd_exec_t 
+.B rhsmcertd_exec_t
 .EE
 
 - Set files with the rhsmcertd_exec_t type, if you want to transition an executable to the rhsmcertd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B rhsmcertd_initrc_exec_t 
+.B rhsmcertd_initrc_exec_t
 .EE
 
 - Set files with the rhsmcertd_initrc_exec_t type, if you want to transition an executable to the rhsmcertd_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B rhsmcertd_lock_t 
+.B rhsmcertd_lock_t
 .EE
 
 - Set files with the rhsmcertd_lock_t type, if you want to treat the files as rhsmcertd lock data, stored under the /var/lock directory
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B rhsmcertd_log_t 
+.B rhsmcertd_log_t
 .EE
 
 - Set files with the rhsmcertd_log_t type, if you want to treat the data as rhsmcertd log data, usually stored under the /var/log directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B rhsmcertd_var_lib_t 
+.B rhsmcertd_var_lib_t
 .EE
 
 - Set files with the rhsmcertd_var_lib_t type, if you want to store the rhsmcertd files under the /var/lib directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B rhsmcertd_var_run_t 
+.B rhsmcertd_var_run_t
 .EE
 
 - Set files with the rhsmcertd_var_run_t type, if you want to store the rhsmcertd files under the /run directory.
@@ -73,28 +97,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rhsmcertd policy is very flexible allowing users to setup their rhsmcertd processes in as secure a method as possible.
-.PP 
-The following process types are defined for rhsmcertd:
+.SH "MANAGED FILES"
 
-.EX
-.B rhsmcertd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rhsmcertd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -107,11 +123,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rhsmcertd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rhsmcertd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ricci_modclusterd_selinux.8 serefpolicy-3.7.19/man/man8/ricci_modclusterd_selinux.8
--- nsaserefpolicy/man/man8/ricci_modclusterd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/ricci_modclusterd_selinux.8	2013-03-15 11:40:04.388151962 +0100
@@ -0,0 +1,194 @@
+.TH  "ricci_modclusterd_selinux"  "8"  "13-01-04" "ricci_modclusterd" "SELinux Policy documentation for ricci_modclusterd"
+.SH "NAME"
+ricci_modclusterd_selinux \- Security Enhanced Linux Policy for the ricci_modclusterd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the ricci_modclusterd processes via flexible mandatory access control.
+
+The ricci_modclusterd processes execute with the ricci_modclusterd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep ricci_modclusterd_t
+
+
+.SH "ENTRYPOINTS"
+
+The ricci_modclusterd_t SELinux type can be entered via the "ricci_modclusterd_exec_t" file type.  The default entrypoint paths for the ricci_modclusterd_t domain are the following:"
+
+/usr/sbin/modclusterd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ricci_modclusterd policy is very flexible allowing users to setup their ricci_modclusterd processes in as secure a method as possible.
+.PP
+The following process types are defined for ricci_modclusterd:
+
+.EX
+.B ricci_modclusterd_t, ricci_modcluster_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ricci_modclusterd_t
+
+can be used to make the process type ricci_modclusterd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ricci_modclusterd policy is very flexible allowing users to setup their ricci_modclusterd processes in as secure a method as possible.
+.PP
+The following file types are defined for ricci_modclusterd:
+
+
+.EX
+.PP
+.B ricci_modclusterd_exec_t
+.EE
+
+- Set files with the ricci_modclusterd_exec_t type, if you want to transition an executable to the ricci_modclusterd_t domain.
+
+
+.EX
+.PP
+.B ricci_modclusterd_tmpfs_t
+.EE
+
+- Set files with the ricci_modclusterd_tmpfs_t type, if you want to store ricci modclusterd files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports.
+.PP
+You can see the types associated with a port by using the following command:
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports.
+SELinux ricci_modclusterd policy is very flexible allowing users to setup their ricci_modclusterd processes in as secure a method as possible.
+.PP
+The following port types are defined for ricci_modclusterd:
+
+.EX
+.TP 5
+.B ricci_modcluster_port_t
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 16851
+.EE
+udp 16851
+.EE
+.SH "MANAGED FILES"
+
+The SELinux process type ricci_modclusterd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B ricci_modcluster_var_log_t
+
+	/var/log/clumond\.log.*
+.br
+
+.br
+.B ricci_modcluster_var_run_t
+
+	/var/run/clumond\.sock
+.br
+	/var/run/modclusterd\.pid
+.br
+
+.br
+.B ricci_modclusterd_tmpfs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), ricci_modclusterd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ricci_selinux(8), ricci_selinux(8), ricci_modcluster_selinux(8), ricci_modcluster_selinux(8), ricci_modlog_selinux(8), ricci_modrpm_selinux(8), ricci_modservice_selinux(8), ricci_modstorage_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ricci_modcluster_selinux.8 serefpolicy-3.7.19/man/man8/ricci_modcluster_selinux.8
--- nsaserefpolicy/man/man8/ricci_modcluster_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/ricci_modcluster_selinux.8	2013-03-15 11:40:03.288151937 +0100
@@ -0,0 +1,164 @@
+.TH  "ricci_modcluster_selinux"  "8"  "13-01-04" "ricci_modcluster" "SELinux Policy documentation for ricci_modcluster"
+.SH "NAME"
+ricci_modcluster_selinux \- Security Enhanced Linux Policy for the ricci_modcluster processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the ricci_modcluster processes via flexible mandatory access control.
+
+The ricci_modcluster processes execute with the ricci_modcluster_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep ricci_modcluster_t
+
+
+.SH "ENTRYPOINTS"
+
+The ricci_modcluster_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,ricci_modcluster_exec_t" file types.  The default entrypoint paths for the ricci_modcluster_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/libexec/modcluster
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ricci_modcluster policy is very flexible allowing users to setup their ricci_modcluster processes in as secure a method as possible.
+.PP
+The following process types are defined for ricci_modcluster:
+
+.EX
+.B ricci_modclusterd_t, ricci_modcluster_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ricci_modcluster_t
+
+can be used to make the process type ricci_modcluster_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ricci_modcluster policy is very flexible allowing users to setup their ricci_modcluster processes in as secure a method as possible.
+.PP
+The following file types are defined for ricci_modcluster:
+
+
+.EX
+.PP
+.B ricci_modcluster_exec_t
+.EE
+
+- Set files with the ricci_modcluster_exec_t type, if you want to transition an executable to the ricci_modcluster_t domain.
+
+
+.EX
+.PP
+.B ricci_modcluster_var_lib_t
+.EE
+
+- Set files with the ricci_modcluster_var_lib_t type, if you want to store the ricci modcluster files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ricci_modcluster_var_log_t
+.EE
+
+- Set files with the ricci_modcluster_var_log_t type, if you want to treat the data as ricci modcluster var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ricci_modcluster_var_run_t
+.EE
+
+- Set files with the ricci_modcluster_var_run_t type, if you want to store the ricci modcluster files under the /run directory.
+
+
+.EX
+.PP
+.B ricci_modclusterd_exec_t
+.EE
+
+- Set files with the ricci_modclusterd_exec_t type, if you want to transition an executable to the ricci_modclusterd_t domain.
+
+
+.EX
+.PP
+.B ricci_modclusterd_tmpfs_t
+.EE
+
+- Set files with the ricci_modclusterd_tmpfs_t type, if you want to store ricci modclusterd files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports.
+.PP
+You can see the types associated with a port by using the following command:
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports.
+SELinux ricci_modcluster policy is very flexible allowing users to setup their ricci_modcluster processes in as secure a method as possible.
+.PP
+The following port types are defined for ricci_modcluster:
+
+.EX
+.TP 5
+.B ricci_modcluster_port_t
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 16851
+.EE
+udp 16851
+.EE
+.SH "MANAGED FILES"
+
+The SELinux process type ricci_modcluster_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), ricci_modcluster(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ricci_selinux(8), ricci_selinux(8), ricci_modclusterd_selinux(8), ricci_modlog_selinux(8), ricci_modrpm_selinux(8), ricci_modservice_selinux(8), ricci_modstorage_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ricci_modlog_selinux.8 serefpolicy-3.7.19/man/man8/ricci_modlog_selinux.8
--- nsaserefpolicy/man/man8/ricci_modlog_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/ricci_modlog_selinux.8	2013-03-15 11:40:02.691151923 +0100
@@ -0,0 +1,132 @@
+.TH  "ricci_modlog_selinux"  "8"  "13-01-04" "ricci_modlog" "SELinux Policy documentation for ricci_modlog"
+.SH "NAME"
+ricci_modlog_selinux \- Security Enhanced Linux Policy for the ricci_modlog processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the ricci_modlog processes via flexible mandatory access control.
+
+The ricci_modlog processes execute with the ricci_modlog_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep ricci_modlog_t
+
+
+.SH "ENTRYPOINTS"
+
+The ricci_modlog_t SELinux type can be entered via the "ricci_modlog_exec_t" file type.  The default entrypoint paths for the ricci_modlog_t domain are the following:"
+
+/usr/libexec/ricci-modlog
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ricci_modlog policy is very flexible allowing users to setup their ricci_modlog processes in as secure a method as possible.
+.PP
+The following process types are defined for ricci_modlog:
+
+.EX
+.B ricci_modlog_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ricci_modlog_t
+
+can be used to make the process type ricci_modlog_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ricci_modlog policy is very flexible allowing users to setup their ricci_modlog processes in as secure a method as possible.
+.PP
+The following file types are defined for ricci_modlog:
+
+
+.EX
+.PP
+.B ricci_modlog_exec_t
+.EE
+
+- Set files with the ricci_modlog_exec_t type, if you want to transition an executable to the ricci_modlog_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type ricci_modlog_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), ricci_modlog(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ricci_selinux(8), ricci_selinux(8), ricci_modcluster_selinux(8), ricci_modclusterd_selinux(8), ricci_modrpm_selinux(8), ricci_modservice_selinux(8), ricci_modstorage_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ricci_modrpm_selinux.8 serefpolicy-3.7.19/man/man8/ricci_modrpm_selinux.8
--- nsaserefpolicy/man/man8/ricci_modrpm_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/ricci_modrpm_selinux.8	2013-03-15 11:39:55.670151763 +0100
@@ -0,0 +1,132 @@
+.TH  "ricci_modrpm_selinux"  "8"  "13-01-04" "ricci_modrpm" "SELinux Policy documentation for ricci_modrpm"
+.SH "NAME"
+ricci_modrpm_selinux \- Security Enhanced Linux Policy for the ricci_modrpm processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the ricci_modrpm processes via flexible mandatory access control.
+
+The ricci_modrpm processes execute with the ricci_modrpm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep ricci_modrpm_t
+
+
+.SH "ENTRYPOINTS"
+
+The ricci_modrpm_t SELinux type can be entered via the "ricci_modrpm_exec_t" file type.  The default entrypoint paths for the ricci_modrpm_t domain are the following:"
+
+/usr/libexec/ricci-modrpm
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ricci_modrpm policy is very flexible allowing users to setup their ricci_modrpm processes in as secure a method as possible.
+.PP
+The following process types are defined for ricci_modrpm:
+
+.EX
+.B ricci_modrpm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ricci_modrpm_t
+
+can be used to make the process type ricci_modrpm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ricci_modrpm policy is very flexible allowing users to setup their ricci_modrpm processes in as secure a method as possible.
+.PP
+The following file types are defined for ricci_modrpm:
+
+
+.EX
+.PP
+.B ricci_modrpm_exec_t
+.EE
+
+- Set files with the ricci_modrpm_exec_t type, if you want to transition an executable to the ricci_modrpm_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type ricci_modrpm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), ricci_modrpm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ricci_selinux(8), ricci_selinux(8), ricci_modcluster_selinux(8), ricci_modclusterd_selinux(8), ricci_modlog_selinux(8), ricci_modservice_selinux(8), ricci_modstorage_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ricci_modservice_selinux.8 serefpolicy-3.7.19/man/man8/ricci_modservice_selinux.8
--- nsaserefpolicy/man/man8/ricci_modservice_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/ricci_modservice_selinux.8	2013-03-15 11:40:02.354151915 +0100
@@ -0,0 +1,132 @@
+.TH  "ricci_modservice_selinux"  "8"  "13-01-04" "ricci_modservice" "SELinux Policy documentation for ricci_modservice"
+.SH "NAME"
+ricci_modservice_selinux \- Security Enhanced Linux Policy for the ricci_modservice processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the ricci_modservice processes via flexible mandatory access control.
+
+The ricci_modservice processes execute with the ricci_modservice_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep ricci_modservice_t
+
+
+.SH "ENTRYPOINTS"
+
+The ricci_modservice_t SELinux type can be entered via the "ricci_modservice_exec_t" file type.  The default entrypoint paths for the ricci_modservice_t domain are the following:"
+
+/usr/libexec/ricci-modservice
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ricci_modservice policy is very flexible allowing users to setup their ricci_modservice processes in as secure a method as possible.
+.PP
+The following process types are defined for ricci_modservice:
+
+.EX
+.B ricci_modservice_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ricci_modservice_t
+
+can be used to make the process type ricci_modservice_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ricci_modservice policy is very flexible allowing users to setup their ricci_modservice processes in as secure a method as possible.
+.PP
+The following file types are defined for ricci_modservice:
+
+
+.EX
+.PP
+.B ricci_modservice_exec_t
+.EE
+
+- Set files with the ricci_modservice_exec_t type, if you want to transition an executable to the ricci_modservice_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type ricci_modservice_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), ricci_modservice(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ricci_selinux(8), ricci_selinux(8), ricci_modcluster_selinux(8), ricci_modclusterd_selinux(8), ricci_modlog_selinux(8), ricci_modrpm_selinux(8), ricci_modstorage_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ricci_modstorage_selinux.8 serefpolicy-3.7.19/man/man8/ricci_modstorage_selinux.8
--- nsaserefpolicy/man/man8/ricci_modstorage_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/ricci_modstorage_selinux.8	2013-03-15 11:40:02.901151928 +0100
@@ -0,0 +1,188 @@
+.TH  "ricci_modstorage_selinux"  "8"  "13-01-04" "ricci_modstorage" "SELinux Policy documentation for ricci_modstorage"
+.SH "NAME"
+ricci_modstorage_selinux \- Security Enhanced Linux Policy for the ricci_modstorage processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the ricci_modstorage processes via flexible mandatory access control.
+
+The ricci_modstorage processes execute with the ricci_modstorage_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep ricci_modstorage_t
+
+
+.SH "ENTRYPOINTS"
+
+The ricci_modstorage_t SELinux type can be entered via the "ricci_modstorage_exec_t" file type.  The default entrypoint paths for the ricci_modstorage_t domain are the following:"
+
+/usr/libexec/ricci-modstorage
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ricci_modstorage policy is very flexible allowing users to setup their ricci_modstorage processes in as secure a method as possible.
+.PP
+The following process types are defined for ricci_modstorage:
+
+.EX
+.B ricci_modstorage_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ricci_modstorage_t
+
+can be used to make the process type ricci_modstorage_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ricci_modstorage policy is very flexible allowing users to setup their ricci_modstorage processes in as secure a method as possible.
+.PP
+The following file types are defined for ricci_modstorage:
+
+
+.EX
+.PP
+.B ricci_modstorage_exec_t
+.EE
+
+- Set files with the ricci_modstorage_exec_t type, if you want to transition an executable to the ricci_modstorage_t domain.
+
+
+.EX
+.PP
+.B ricci_modstorage_lock_t
+.EE
+
+- Set files with the ricci_modstorage_lock_t type, if you want to treat the files as ricci modstorage lock data, stored under the /var/lock directory
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type ricci_modstorage_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B default_t
+
+	/.*
+.br
+
+.br
+.B etc_t
+
+	/etc/.*
+.br
+	/var/db/.*\.db
+.br
+	/usr/etc(/.*)?
+.br
+	/var/ftp/etc(/.*)?
+.br
+	/usr/local/etc(/.*)?
+.br
+	/var/lib/openshift/.limits.d(/.*)?
+.br
+	/var/lib/openshift/.openshift-proxy.d(/.*)?
+.br
+	/var/lib/openshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/lib/stickshift/.limits.d(/.*)?
+.br
+	/var/lib/stickshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/named/chroot/etc(/.*)?
+.br
+	/etc/ipsec\.d/examples(/.*)?
+.br
+	/var/spool/postfix/etc(/.*)?
+.br
+	/etc
+.br
+	/etc/localtime
+.br
+	/etc/cups/client\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B lvm_etc_t
+
+	/etc/lvm(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), ricci_modstorage(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ricci_selinux(8), ricci_selinux(8), ricci_modcluster_selinux(8), ricci_modclusterd_selinux(8), ricci_modlog_selinux(8), ricci_modrpm_selinux(8), ricci_modservice_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ricci_selinux.8 serefpolicy-3.7.19/man/man8/ricci_selinux.8
--- nsaserefpolicy/man/man8/ricci_selinux.8	2013-03-15 11:41:12.192153509 +0100
+++ serefpolicy-3.7.19/man/man8/ricci_selinux.8	2013-03-15 11:40:06.275152005 +0100
@@ -1,31 +1,55 @@
-.TH  "ricci_selinux"  "8"  "ricci" "dwalsh@redhat.com" "ricci SELinux Policy documentation"
+.TH  "ricci_selinux"  "8"  "13-01-04" "ricci" "SELinux Policy documentation for ricci"
 .SH "NAME"
 ricci_selinux \- Security Enhanced Linux Policy for the ricci processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ricci processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ricci
-(Ricci cluster management agent)
-processes via flexible mandatory access
-control.  
+The ricci processes execute with the ricci_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ricci_t
+
+
+.SH "ENTRYPOINTS"
+
+The ricci_t SELinux type can be entered via the "bin_t,ricci_exec_t" file types.  The default entrypoint paths for the ricci_t domain are the following:"
+
+/bin/.*, /opt/(.*/)?bin(/.*)?, /usr/(.*/)?Bin(/.*)?, /usr/(.*/)?bin(/.*)?, /usr/(.*/)?sbin(/.*)?, /opt/(.*/)?sbin(/.*)?, /opt/(.*/)?libexec(/.*)?, /sbin/.*, /usr/lib(64)?/dpkg/.+, /usr/lib(64)?/rpm/rpmd, /usr/lib(64)?/rpm/rpmk, /usr/lib(64)?/rpm/rpmv, /usr/lib(64)?/rpm/rpmq, /usr/lib(64)?/ipsec/.*, /usr/lib(.*/)?bin(/.*)?, /usr/lib(64)?/cups(/.*)?, /usr/lib(.*/)?sbin(/.*)?, /usr/lib(64)?/xfce4(/.*)?, /usr/lib(64)?/sftp-server, /usr/lib(64)?/xen/bin(/.*)?, /usr/lib(64)?/courier(/.*)?, /usr/lib(64)?/apt/methods.+, /usr/lib(64)?/pm-utils(/.*)?, /usr/lib(64)?/news/bin(/.*)?, /usr/lib(64)?/cyrus-imapd/.*, /usr/lib(64)?/debug/bin(/.*)?, /usr/lib(64)?/debug/sbin(/.*)?, /usr/lib(64)?/misc/sftp-server, /usr/lib(64)?/portage/bin(/.*)?, /usr/lib(64)?/mailman/bin(/.*)?, /usr/lib(64)?/emacsen-common/.*, /usr/lib(64)?/mailman/mail(/.*)?, /usr/lib(64)?/debug/usr/bin(/.*)?, /usr/lib(64)?/nspluginwrapper/np.*, /usr/lib(64)?/nagios/plugins(/.*)?, /usr/lib(64)?/[^/]*/run-mozilla\.sh, /usr/lib(64)?/debug/usr/sbin(/.*)?, /usr/lib(64)?/vte/gnome-pty-helper, /usr/lib(64)?/gimp/.*/plug-ins(/.*)?, /usr/lib(64)?/netsaint/plugins(/.*)?, /usr/lib(64)?/debug/usr/libexec(/.*)?, /usr/lib(64)?/chromium-browser/chrome, /usr/lib(64)?/ConsoleKit/scripts(/.*)?, /usr/lib(64)?/pgsql/test/regress/.*\.sh, /usr/lib(64)?/[^/]*firefox[^/]*/firefox, /usr/lib(64)?/[^/]*/mozilla-xremote-client, /usr/lib(64)?/ConsoleKit/run-session.d(/.*)?, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird, /usr/lib(64)?/thunderbird.*/mozilla-xremote-client, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird-bin, /usr/lib(64)?/[^/]*thunderbird[^/]*/open-browser\.sh, /etc/gdm/[^/]+, /etc/gdm/[^/]+/.*, /etc/cron.daily(/.*)?, /etc/cron.hourly(/.*)?, /etc/cron.weekly(/.*)?, /etc/cron.monthly(/.*)?, /usr/lib/.*/program(/.*)?, /lib/udev/[^/]*, /etc/avahi/.*\.action, /usr/lib/qt.*/bin(/.*)?, /usr/lib64/.*/program(/.*)?, /usr/lib/yp/.+, /lib64/udev/[^/]*, /var/ftp/bin(/.*)?, /usr/libexec(/.*)?, /etc/kde/env(/.*)?, /etc/profile.d(/.*)?, /etc/hotplug/.*rc, /etc/hotplug/.*agent, /usr/lib64/yp/.+, /var/qmail/bin(/.*)?, /usr/lib/fence(/.*)?, /etc/X11/xinit(/.*)?, /etc/netplug\.d(/.*)?, /usr/local/lib(64)?/ipsec/.*, /usr/X11R6/lib(64)?/X11/xkb/xkbcomp, /etc/ppp/ip-up\..*, /etc/cipe/ip-up.*, /etc/pm/power\.d(/.*)?, /etc/pm/sleep\.d(/.*)?, /var/mailman/bin(/.*)?, /etc/xen/scripts(/.*)?, /etc/ppp/ipv6-up\..*, /etc/ppp/ip-down\..*, /etc/cipe/ip-down.*, /usr/share/hplip/[^/]*, /etc/vmware-tools(/.*)?, /etc/kde/shutdown(/.*)?, /etc/acpi/actions(/.*)?, /etc/pki/tls/misc(/.*)?, /usr/local/Printer(/.*)?, /usr/local/Brother(/.*)?, /opt/google/chrome(/.*)?, /usr/lib/bluetooth(/.*)?, /usr/lib/ruby/gems(/.*)?/helper-scripts(/.*)?, /usr/share/debconf/.+, /etc/ppp/ipv6-down\..*, /usr/share/cluster/.*\.sh, /usr/share/sectool/.*\.py, /usr/share/ssl/misc(/.*)?, /usr/share/e16/misc(/.*)?, /usr/lib/ccache/bin(/.*)?, /etc/racoon/scripts(/.*)?, /usr/lib/ruby/gems/.*/agents(/.*)?, /usr/local/Brother/(.*/)?inf/setup.*, /usr/local/Brother/(.*/)?inf/brprintconf.*, /usr/share/mc/extfs/.*, /etc/mcelog/triggers(/.*)?, /etc/dhcp/dhclient\.d(/.*)?, /emul/ia32-linux/bin(/.*)?, /usr/lib64/bluetooth(/.*)?, /emul/ia32-linux/usr(/.*)?/bin(/.*)?, /emul/ia32-linux/usr(/.*)?/Bin(/.*)?, /emul/ia32-linux/usr(/.*)?/sbin(/.*)?, /usr/lib/wicd/monitor.py, /usr/share/createrepo(/.*)?, /emul/ia32-linux/sbin(/.*)?, /usr/share/hal/scripts(/.*)?, /usr/lib/vmware-tools/(s)?bin64(/.*)?, /usr/lib/vmware-tools/(s)?bin32(/.*)?, /etc/gdm/XKeepsCrashing[^/]*, /usr/lib/oracle/xe/apps(/.*)?, /usr/share/smolt/client(/.*)?, /usr/share/Modules/init(/.*)?, /usr/share/apr-0/build/[^/]+\.sh, /usr/share/shorewall-perl(/.*)?, /usr/share/shorewall-lite(/.*)?, /usr/share/turboprint/lib(/.*)?, /usr/share/vhostmd/scripts(/.*)?, /usr/share/shorewall6-lite(/.*)?, /usr/share/shorewall-shell(/.*)?, /etc/ConsoleKit/run-seat\.d(/.*)?, /usr/share/sandbox/sandboxX.sh, /usr/share/denyhosts/plugins(/.*)?, /usr/share/denyhosts/scripts(/.*)?, /emul/ia32-linux/usr/libexec(/.*)?, /usr/share/PackageKit/helpers(/.*)?, /etc/ConsoleKit/run-session\.d(/.*)?, /etc/hotplug\.d/default/default.*, /usr/share/cluster/checkquorum.*, /usr/local/linuxprinter/filters(/.*)?, /opt/gutenprint/cups/lib/filter(/.*)?, /usr/share/system-config-network(/netconfig)?/[^/]+\.py, /etc/sysconfig/network-scripts/net.*, /etc/sysconfig/network-scripts/ifup.*, /etc/sysconfig/network-scripts/init.*, /etc/sysconfig/network-scripts/ifdown.*, /opt/OpenPrinting-Gutenprint/cups/lib/filter(/.*)?, /usr/share/gedit-2/plugins/externaltools/tools(/.*)?, /bin, /sbin, /dev/MAKEDEV, /var/qmail/rc, /var/qmail/bin, /etc/mail/make, /bin/mountpoint, /lib/udev/scsi_id, /sbin/mkfs\.cramfs, /etc/xen/qemu-ifup, /etc/sysconfig/init, /etc/apcupsd/commok, /etc/sysconfig/crond, /etc/X11/xdm/Xsetup_0, /etc/init\.d/functions, /etc/apcupsd/changeme, /etc/apcupsd/onbattery, /etc/sysconfig/libvirtd, /etc/apcupsd/offbattery, /etc/apcupsd/apccontrol, /etc/X11/xdm/GiveConsole, /etc/X11/xdm/TakeConsole, /etc/apcupsd/commfailure, /etc/sysconfig/netconsole, /etc/rc\.d/init\.d/functions, /etc/apcupsd/masterconnect, /etc/apcupsd/mastertimeout, /usr/share/pydict/pydict\.py, /usr/share/clamav/clamd-gen, /sbin/insmod_ksymoops_clean, /etc/mgetty\+sendfax/new_fax, /etc/sysconfig/readonly-root, /usr/share/cvs/contrib/rcs2log, /usr/share/hwbrowser/hwbrowser, /usr/share/shorewall/getparams, /usr/share/cluster/SAPDatabase, /usr/share/cluster/SAPInstance, /usr/share/apr-0/build/libtool, /etc/hotplug/hotplug\.functions, /usr/share/texmf/web2c/mktexdir, /usr/share/texmf/web2c/mktexnam, /usr/share/texmf/web2c/mktexupd, /usr/share/shorewall/configpath, /etc/mcelog/cache-error-trigger, /usr/share/shorewall/compiler\.pl, /usr/share/dayplanner/dayplanner, /usr/libexec/openssh/sftp-server, /usr/share/texmf/texconfig/tcfmgr, /usr/share/clamav/freshclam-sleep, /usr/share/cluster/ocf-shellfuncs, /usr/share/cluster/svclib_nfslock, /usr/share/pwlib/make/ptlib-config, /usr/share/fedora-usermgmt/wrapper, /usr/share/printconf/util/print\.py, /etc/pki/tls/certs/make-dummy-cert, /usr/share/rhn/rhn_applet/applet\.py, /usr/share/authconfig/authconfig\.py, /usr/share/spamassassin/sa-update\.cron, /usr/share/selinux/devel/policygentool, /usr/share/gnucash/finance-quote-check, /usr/share/cluster/fence_scsi_check\.pl, /usr/share/switchdesk/switchdesk-gui\.py, /usr/share/authconfig/authconfig-tui\.py, /usr/share/authconfig/authconfig-gtk\.py, /usr/share/gnucash/finance-quote-helper, /usr/share/gitolite/hooks/common/update, /usr/share/system-config-services/gui\.py, /lib/security/pam_krb5/pam_krb5_storetmp, /usr/share/system-config-netboot/pxeos\.py, /usr/share/system-config-printer/applet\.py, /usr/share/system-config-nfs/nfs-export\.py, /usr/share/system-config-selinux/polgen\.py, /lib64/security/pam_krb5/pam_krb5_storetmp, /usr/share/PackageKit/pk-upgrade-distro\.sh, /usr/share/system-config-netboot/pxeboot\.py, /usr/share/rhn/rhn_applet/needed-packages\.py, /usr/share/system-logviewer/system-logviewer\.py, /usr/share/system-config-network/neat-control\.py, /usr/share/system-config-services/serviceconf\.py, /usr/share/hal/device-manager/hal-device-manager, /usr/share/system-config-lvm/system-config-lvm\.py, /usr/share/system-config-nfs/system-config-nfs\.py, /usr/share/system-config-httpd/system-config-httpd, /usr/share/system-config-mouse/system-config-mouse, /usr/share/system-config-users/system-config-users, /usr/share/system-config-date/system-config-date\.py, /usr/share/gitolite/hooks/gitolite-admin/post-update, /usr/share/system-config-samba/system-config-samba\.py, /usr/share/system-config-display/system-config-display, /usr/share/system-config-keyboard/system-config-keyboard, /usr/share/system-config-language/system-config-language, /usr/share/system-config-services/system-config-services, /usr/share/system-config-netboot/system-config-netboot\.py, /usr/share/system-config-selinux/system-config-selinux\.py, /usr/share/system-config-soundcard/system-config-soundcard, /usr/share/system-config-rootpassword/system-config-rootpassword, /usr/share/system-config-securitylevel/system-config-securitylevel\.py, /usr/sbin/ricci
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
+.PP
+The following process types are defined for ricci:
+
+.EX
+.B ricci_t, ricci_modservice_t, ricci_modstorage_t, ricci_modclusterd_t, ricci_modlog_t, ricci_modrpm_t, ricci_modcluster_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ricci_t
+
+can be used to make the process type ricci_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ricci:
 
 
 .EX
 .PP
-.B ricci_exec_t 
+.B ricci_exec_t
 .EE
 
 - Set files with the ricci_exec_t type, if you want to transition an executable to the ricci_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B ricci_initrc_exec_t 
+.B ricci_initrc_exec_t
 .EE
 
 - Set files with the ricci_initrc_exec_t type, if you want to transition an executable to the ricci_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B ricci_modcluster_exec_t 
+.B ricci_modcluster_exec_t
 .EE
 
 - Set files with the ricci_modcluster_exec_t type, if you want to transition an executable to the ricci_modcluster_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B ricci_modcluster_var_lib_t 
+.B ricci_modcluster_var_lib_t
 .EE
 
 - Set files with the ricci_modcluster_var_lib_t type, if you want to store the ricci modcluster files under the /var/lib directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B ricci_modcluster_var_log_t 
+.B ricci_modcluster_var_log_t
 .EE
 
 - Set files with the ricci_modcluster_var_log_t type, if you want to treat the data as ricci modcluster var log data, usually stored under the /var/log directory.
@@ -65,19 +89,15 @@
 
 .EX
 .PP
-.B ricci_modcluster_var_run_t 
+.B ricci_modcluster_var_run_t
 .EE
 
 - Set files with the ricci_modcluster_var_run_t type, if you want to store the ricci modcluster files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/modclusterd\.pid, /var/run/clumond\.sock
 
 .EX
 .PP
-.B ricci_modclusterd_exec_t 
+.B ricci_modclusterd_exec_t
 .EE
 
 - Set files with the ricci_modclusterd_exec_t type, if you want to transition an executable to the ricci_modclusterd_t domain.
@@ -85,7 +105,7 @@
 
 .EX
 .PP
-.B ricci_modclusterd_tmpfs_t 
+.B ricci_modclusterd_tmpfs_t
 .EE
 
 - Set files with the ricci_modclusterd_tmpfs_t type, if you want to store ricci modclusterd files on a tmpfs file system.
@@ -93,7 +113,7 @@
 
 .EX
 .PP
-.B ricci_modlog_exec_t 
+.B ricci_modlog_exec_t
 .EE
 
 - Set files with the ricci_modlog_exec_t type, if you want to transition an executable to the ricci_modlog_t domain.
@@ -101,7 +121,7 @@
 
 .EX
 .PP
-.B ricci_modrpm_exec_t 
+.B ricci_modrpm_exec_t
 .EE
 
 - Set files with the ricci_modrpm_exec_t type, if you want to transition an executable to the ricci_modrpm_t domain.
@@ -109,7 +129,7 @@
 
 .EX
 .PP
-.B ricci_modservice_exec_t 
+.B ricci_modservice_exec_t
 .EE
 
 - Set files with the ricci_modservice_exec_t type, if you want to transition an executable to the ricci_modservice_t domain.
@@ -117,7 +137,7 @@
 
 .EX
 .PP
-.B ricci_modstorage_exec_t 
+.B ricci_modstorage_exec_t
 .EE
 
 - Set files with the ricci_modstorage_exec_t type, if you want to transition an executable to the ricci_modstorage_t domain.
@@ -125,7 +145,7 @@
 
 .EX
 .PP
-.B ricci_modstorage_lock_t 
+.B ricci_modstorage_lock_t
 .EE
 
 - Set files with the ricci_modstorage_lock_t type, if you want to treat the files as ricci modstorage lock data, stored under the /var/lock directory
@@ -133,7 +153,7 @@
 
 .EX
 .PP
-.B ricci_tmp_t 
+.B ricci_tmp_t
 .EE
 
 - Set files with the ricci_tmp_t type, if you want to store ricci temporary files in the /tmp directories.
@@ -141,7 +161,7 @@
 
 .EX
 .PP
-.B ricci_var_lib_t 
+.B ricci_var_lib_t
 .EE
 
 - Set files with the ricci_var_lib_t type, if you want to store the ricci files under the /var/lib directory.
@@ -149,7 +169,7 @@
 
 .EX
 .PP
-.B ricci_var_log_t 
+.B ricci_var_log_t
 .EE
 
 - Set files with the ricci_var_log_t type, if you want to treat the data as ricci var log data, usually stored under the /var/log directory.
@@ -157,7 +177,7 @@
 
 .EX
 .PP
-.B ricci_var_run_t 
+.B ricci_var_run_t
 .EE
 
 - Set files with the ricci_var_run_t type, if you want to store the ricci files under the /run directory.
@@ -165,62 +185,224 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ricci:
 
 .EX
 .TP 5
-.B ricci_modcluster_port_t 
+.B ricci_modcluster_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 16851
+.EE
+udp 16851
 .EE
 
 .EX
 .TP 5
-.B ricci_port_t 
+.B ricci_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 11111
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
-.PP 
-The following process types are defined for ricci:
-
-.EX
-.B ricci_t, ricci_modservice_t, ricci_modstorage_t, ricci_modclusterd_t, ricci_modlog_t, ricci_modrpm_t, ricci_modcluster_t 
+udp 11111
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type ricci_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B ricci_tmp_t
+
+
+.br
+.B ricci_var_lib_t
+
+	/var/lib/ricci(/.*)?
+.br
+
+.br
+.B ricci_var_log_t
+
+
+.br
+.B ricci_var_run_t
+
+	/var/run/ricci\.pid
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -236,11 +418,14 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ricci(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ricci(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ricci_modcluster_selinux(8), ricci_modclusterd_selinux(8), ricci_modlog_selinux(8), ricci_modrpm_selinux(8), ricci_modservice_selinux(8), ricci_modstorage_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/rlogind_selinux.8 serefpolicy-3.7.19/man/man8/rlogind_selinux.8
--- nsaserefpolicy/man/man8/rlogind_selinux.8	2013-03-15 11:41:12.206153509 +0100
+++ serefpolicy-3.7.19/man/man8/rlogind_selinux.8	2013-03-15 11:40:06.326152006 +0100
@@ -1,49 +1,71 @@
-.TH  "rlogind_selinux"  "8"  "rlogind" "dwalsh@redhat.com" "rlogind SELinux Policy documentation"
+.TH  "rlogind_selinux"  "8"  "13-01-04" "rlogind" "SELinux Policy documentation for rlogind"
 .SH "NAME"
 rlogind_selinux \- Security Enhanced Linux Policy for the rlogind processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rlogind processes via flexible mandatory access control.
 
+The rlogind processes execute with the rlogind_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep rlogind_t
+
+
+.SH "ENTRYPOINTS"
+
+The rlogind_t SELinux type can be entered via the "rlogind_exec_t" file type.  The default entrypoint paths for the rlogind_t domain are the following:"
+
+/usr/lib(64)?/telnetlogin, /usr/sbin/in\.rlogind, /usr/kerberos/sbin/klogind
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
+.PP
+The following process types are defined for rlogind:
+
+.EX
+.B rlogind_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rlogind_t
+
+can be used to make the process type rlogind_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rlogind:
 
 
 .EX
 .PP
-.B rlogind_exec_t 
+.B rlogind_exec_t
 .EE
 
 - Set files with the rlogind_exec_t type, if you want to transition an executable to the rlogind_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/kerberos/sbin/klogind, /usr/sbin/in\.rlogind, /usr/lib(64)?/telnetlogin
 
 .EX
 .PP
-.B rlogind_home_t 
+.B rlogind_home_t
 .EE
 
 - Set files with the rlogind_home_t type, if you want to store rlogind files in the users home directory.
 
-.br
-.TP 5
-Paths: 
-/root/\.rlogin, /root/\.rhosts
 
 .EX
 .PP
-.B rlogind_keytab_t 
+.B rlogind_keytab_t
 .EE
 
 - Set files with the rlogind_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -51,7 +73,7 @@
 
 .EX
 .PP
-.B rlogind_tmp_t 
+.B rlogind_tmp_t
 .EE
 
 - Set files with the rlogind_tmp_t type, if you want to store rlogind temporary files in the /tmp directories.
@@ -59,7 +81,7 @@
 
 .EX
 .PP
-.B rlogind_var_run_t 
+.B rlogind_var_run_t
 .EE
 
 - Set files with the rlogind_var_run_t type, if you want to store the rlogind files under the /run directory.
@@ -67,51 +89,179 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for rlogind:
 
 .EX
 .TP 5
-.B rlogind_port_t 
+.B rlogind_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 513
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
-.PP 
-The following process types are defined for rlogind:
+.SH "MANAGED FILES"
 
-.EX
-.B rlogind_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rlogind_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pam_var_run_t
+
+	/var/run/sudo(/.*)?
+.br
+	/var/run/sepermit(/.*)?
+.br
+	/var/run/pam_mount(/.*)?
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B rlogind_tmp_t
+
+
+.br
+.B rlogind_var_run_t
+
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_auth_t
+
+	/var/lib/abl(/.*)?
+.br
+	/var/lib/pam_ssh(/.*)?
+.br
+	/var/run/pam_ssh(/.*)?
+.br
+	/var/lib/pam_shield(/.*)?
+.br
+	/var/opt/quest/vas/vasd(/.*)?
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -127,11 +277,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rlogind(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rlogind(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/roundup_selinux.8 serefpolicy-3.7.19/man/man8/roundup_selinux.8
--- nsaserefpolicy/man/man8/roundup_selinux.8	2013-03-15 11:41:11.933153503 +0100
+++ serefpolicy-3.7.19/man/man8/roundup_selinux.8	2013-03-15 11:40:00.035151862 +0100
@@ -1,31 +1,55 @@
-.TH  "roundup_selinux"  "8"  "roundup" "dwalsh@redhat.com" "roundup SELinux Policy documentation"
+.TH  "roundup_selinux"  "8"  "13-01-04" "roundup" "SELinux Policy documentation for roundup"
 .SH "NAME"
 roundup_selinux \- Security Enhanced Linux Policy for the roundup processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the roundup processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B roundup
-(Roundup Issue Tracking System policy)
-processes via flexible mandatory access
-control.  
+The roundup processes execute with the roundup_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep roundup_t
+
+
+.SH "ENTRYPOINTS"
+
+The roundup_t SELinux type can be entered via the "roundup_exec_t" file type.  The default entrypoint paths for the roundup_t domain are the following:"
+
+/usr/bin/roundup-server
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux roundup policy is very flexible allowing users to setup their roundup processes in as secure a method as possible.
+.PP
+The following process types are defined for roundup:
+
+.EX
+.B roundup_t
+.EE
+.PP
+Note:
+.B semanage permissive -a roundup_t
+
+can be used to make the process type roundup_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux roundup policy is very flexible allowing users to setup their roundup processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for roundup:
 
 
 .EX
 .PP
-.B roundup_exec_t 
+.B roundup_exec_t
 .EE
 
 - Set files with the roundup_exec_t type, if you want to transition an executable to the roundup_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B roundup_initrc_exec_t 
+.B roundup_initrc_exec_t
 .EE
 
 - Set files with the roundup_initrc_exec_t type, if you want to transition an executable to the roundup_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B roundup_var_lib_t 
+.B roundup_var_lib_t
 .EE
 
 - Set files with the roundup_var_lib_t type, if you want to store the roundup files under the /var/lib directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B roundup_var_run_t 
+.B roundup_var_run_t
 .EE
 
 - Set files with the roundup_var_run_t type, if you want to store the roundup files under the /run directory.
@@ -57,28 +81,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux roundup policy is very flexible allowing users to setup their roundup processes in as secure a method as possible.
-.PP 
-The following process types are defined for roundup:
+.SH "MANAGED FILES"
 
-.EX
-.B roundup_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type roundup_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B roundup_var_lib_t
+
+	/var/lib/roundup(/.*)?
+.br
+
+.br
+.B roundup_var_run_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +161,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), roundup(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), roundup(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rpcbind_selinux.8 serefpolicy-3.7.19/man/man8/rpcbind_selinux.8
--- nsaserefpolicy/man/man8/rpcbind_selinux.8	2013-03-15 11:41:12.108153507 +0100
+++ serefpolicy-3.7.19/man/man8/rpcbind_selinux.8	2013-03-15 11:40:03.509151942 +0100
@@ -1,31 +1,55 @@
-.TH  "rpcbind_selinux"  "8"  "rpcbind" "dwalsh@redhat.com" "rpcbind SELinux Policy documentation"
+.TH  "rpcbind_selinux"  "8"  "13-01-04" "rpcbind" "SELinux Policy documentation for rpcbind"
 .SH "NAME"
 rpcbind_selinux \- Security Enhanced Linux Policy for the rpcbind processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rpcbind processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rpcbind
-(Universal Addresses to RPC Program Number Mapper)
-processes via flexible mandatory access
-control.  
+The rpcbind processes execute with the rpcbind_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rpcbind_t
+
+
+.SH "ENTRYPOINTS"
+
+The rpcbind_t SELinux type can be entered via the "rpcbind_exec_t" file type.  The default entrypoint paths for the rpcbind_t domain are the following:"
+
+/sbin/rpcbind
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rpcbind policy is very flexible allowing users to setup their rpcbind processes in as secure a method as possible.
+.PP
+The following process types are defined for rpcbind:
+
+.EX
+.B rpcbind_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rpcbind_t
+
+can be used to make the process type rpcbind_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rpcbind policy is very flexible allowing users to setup their rpcbind processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rpcbind:
 
 
 .EX
 .PP
-.B rpcbind_exec_t 
+.B rpcbind_exec_t
 .EE
 
 - Set files with the rpcbind_exec_t type, if you want to transition an executable to the rpcbind_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B rpcbind_initrc_exec_t 
+.B rpcbind_initrc_exec_t
 .EE
 
 - Set files with the rpcbind_initrc_exec_t type, if you want to transition an executable to the rpcbind_initrc_t domain.
@@ -41,52 +65,98 @@
 
 .EX
 .PP
-.B rpcbind_var_lib_t 
+.B rpcbind_var_lib_t
 .EE
 
 - Set files with the rpcbind_var_lib_t type, if you want to store the rpcbind files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/cache/rpcbind(/.*)?, /var/lib/rpcbind(/.*)?
 
 .EX
 .PP
-.B rpcbind_var_run_t 
+.B rpcbind_var_run_t
 .EE
 
 - Set files with the rpcbind_var_run_t type, if you want to store the rpcbind files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/rpcbind\.sock, /var/run/rpcbind\.lock, /var/run/rpc.statd\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rpcbind policy is very flexible allowing users to setup their rpcbind processes in as secure a method as possible.
-.PP 
-The following process types are defined for rpcbind:
+.SH "MANAGED FILES"
 
-.EX
-.B rpcbind_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rpcbind_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B rpcbind_var_lib_t
+
+	/var/lib/rpcbind(/.*)?
+.br
+	/var/cache/rpcbind(/.*)?
+.br
+
+.br
+.B rpcbind_var_run_t
+
+	/var/run/rpc.statd\.pid
+.br
+	/var/run/rpcbind\.lock
+.br
+	/var/run/rpcbind\.sock
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -99,11 +169,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rpcbind(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rpcbind(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rpcd_selinux.8 serefpolicy-3.7.19/man/man8/rpcd_selinux.8
--- nsaserefpolicy/man/man8/rpcd_selinux.8	2013-03-15 11:41:12.005153504 +0100
+++ serefpolicy-3.7.19/man/man8/rpcd_selinux.8	2013-03-15 11:40:00.979151884 +0100
@@ -1,90 +1,162 @@
-.TH  "rpcd_selinux"  "8"  "rpcd" "dwalsh@redhat.com" "rpcd SELinux Policy documentation"
+.TH  "rpcd_selinux"  "8"  "13-01-04" "rpcd" "SELinux Policy documentation for rpcd"
 .SH "NAME"
 rpcd_selinux \- Security Enhanced Linux Policy for the rpcd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rpcd processes via flexible mandatory access control.
 
+The rpcd processes execute with the rpcd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+.B ps -eZ | grep rpcd_t
+
+
+.SH "ENTRYPOINTS"
+
+The rpcd_t SELinux type can be entered via the "rpcd_exec_t" file type.  The default entrypoint paths for the rpcd_t domain are the following:"
+
+/sbin/rpc\..*, /usr/sbin/rpc\..*, /sbin/sm-notify, /usr/sbin/rpc\.idmapd, /usr/sbin/rpc\.rquotad
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to files.
 SELinux rpcd policy is very flexible allowing users to setup their rpcd processes in as secure a method as possible.
-.PP 
-The following file types are defined for rpcd:
-
+.PP
+The following process types are defined for rpcd:
 
 .EX
-.PP
-.B rpc_pipefs_t 
+.B rpcd_t, rpcbind_t
 .EE
+.PP
+Note:
+.B semanage permissive -a rpcd_t
+
+can be used to make the process type rpcd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
-- Set files with the rpc_pipefs_t type, if you want to treat the files as rpc pipefs data.
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux rpcd policy is very flexible allowing users to setup their rpcd processes in as secure a method as possible.
+.PP
+The following file types are defined for rpcd:
 
 
 .EX
 .PP
-.B rpcd_exec_t 
+.B rpcd_exec_t
 .EE
 
 - Set files with the rpcd_exec_t type, if you want to transition an executable to the rpcd_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/sm-notify, /usr/sbin/rpc\.idmapd, /usr/sbin/rpc\.rquotad, /sbin/rpc\..*
 
 .EX
 .PP
-.B rpcd_initrc_exec_t 
+.B rpcd_initrc_exec_t
 .EE
 
 - Set files with the rpcd_initrc_exec_t type, if you want to transition an executable to the rpcd_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/nfslock, /etc/rc\.d/init\.d/rpcidmapd
 
 .EX
 .PP
-.B rpcd_var_run_t 
+.B rpcd_var_run_t
 .EE
 
 - Set files with the rpcd_var_run_t type, if you want to store the rpcd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/rpc\.statd(/.*)?, /var/run/rpc\.statd\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rpcd policy is very flexible allowing users to setup their rpcd processes in as secure a method as possible.
-.PP 
-The following process types are defined for rpcd:
+.SH "MANAGED FILES"
 
-.EX
-.B rpcd_t, rpcbind_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rpcd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B rgmanager_tmp_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B rpcd_var_run_t
+
+	/var/run/rpc\.statd(/.*)?
+.br
+	/var/run/rpc\.statd\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_lib_nfs_t
+
+	/var/lib/nfs(/.*)?
+.br
+
+.br
+.B var_lib_t
+
+	/opt/(.*/)?var/lib(64)?(/.*)?
+.br
+	/var/lib(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -97,11 +169,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rpcd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rpcd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, rpcbind_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/rpm_script_selinux.8 serefpolicy-3.7.19/man/man8/rpm_script_selinux.8
--- nsaserefpolicy/man/man8/rpm_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/rpm_script_selinux.8	2013-03-15 11:39:54.676151740 +0100
@@ -0,0 +1,112 @@
+.TH  "rpm_script_selinux"  "8"  "13-01-04" "rpm_script" "SELinux Policy documentation for rpm_script"
+.SH "NAME"
+rpm_script_selinux \- Security Enhanced Linux Policy for the rpm_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the rpm_script processes via flexible mandatory access control.
+
+The rpm_script processes execute with the rpm_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep rpm_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The rpm_script_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,bin_t,shell_exec_t" file types.  The default entrypoint paths for the rpm_script_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /bin/.*, /opt/(.*/)?bin(/.*)?, /usr/(.*/)?Bin(/.*)?, /usr/(.*/)?bin(/.*)?, /usr/(.*/)?sbin(/.*)?, /opt/(.*/)?sbin(/.*)?, /opt/(.*/)?libexec(/.*)?, /sbin/.*, /usr/lib(64)?/dpkg/.+, /usr/lib(64)?/rpm/rpmd, /usr/lib(64)?/rpm/rpmk, /usr/lib(64)?/rpm/rpmv, /usr/lib(64)?/rpm/rpmq, /usr/lib(64)?/ipsec/.*, /usr/lib(.*/)?bin(/.*)?, /usr/lib(64)?/cups(/.*)?, /usr/lib(.*/)?sbin(/.*)?, /usr/lib(64)?/xfce4(/.*)?, /usr/lib(64)?/sftp-server, /usr/lib(64)?/xen/bin(/.*)?, /usr/lib(64)?/courier(/.*)?, /usr/lib(64)?/apt/methods.+, /usr/lib(64)?/pm-utils(/.*)?, /usr/lib(64)?/news/bin(/.*)?, /usr/lib(64)?/cyrus-imapd/.*, /usr/lib(64)?/debug/bin(/.*)?, /usr/lib(64)?/debug/sbin(/.*)?, /usr/lib(64)?/misc/sftp-server, /usr/lib(64)?/portage/bin(/.*)?, /usr/lib(64)?/mailman/bin(/.*)?, /usr/lib(64)?/emacsen-common/.*, /usr/lib(64)?/mailman/mail(/.*)?, /usr/lib(64)?/debug/usr/bin(/.*)?, /usr/lib(64)?/nspluginwrapper/np.*, /usr/lib(64)?/nagios/plugins(/.*)?, /usr/lib(64)?/[^/]*/run-mozilla\.sh, /usr/lib(64)?/debug/usr/sbin(/.*)?, /usr/lib(64)?/vte/gnome-pty-helper, /usr/lib(64)?/gimp/.*/plug-ins(/.*)?, /usr/lib(64)?/netsaint/plugins(/.*)?, /usr/lib(64)?/debug/usr/libexec(/.*)?, /usr/lib(64)?/chromium-browser/chrome, /usr/lib(64)?/ConsoleKit/scripts(/.*)?, /usr/lib(64)?/pgsql/test/regress/.*\.sh, /usr/lib(64)?/[^/]*firefox[^/]*/firefox, /usr/lib(64)?/[^/]*/mozilla-xremote-client, /usr/lib(64)?/ConsoleKit/run-session.d(/.*)?, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird, /usr/lib(64)?/thunderbird.*/mozilla-xremote-client, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird-bin, /usr/lib(64)?/[^/]*thunderbird[^/]*/open-browser\.sh, /etc/gdm/[^/]+, /etc/gdm/[^/]+/.*, /etc/cron.daily(/.*)?, /etc/cron.hourly(/.*)?, /etc/cron.weekly(/.*)?, /etc/cron.monthly(/.*)?, /usr/lib/.*/program(/.*)?, /lib/udev/[^/]*, /etc/avahi/.*\.action, /usr/lib/qt.*/bin(/.*)?, /usr/lib64/.*/program(/.*)?, /usr/lib/yp/.+, /lib64/udev/[^/]*, /var/ftp/bin(/.*)?, /usr/libexec(/.*)?, /etc/kde/env(/.*)?, /etc/profile.d(/.*)?, /etc/hotplug/.*rc, /etc/hotplug/.*agent, /usr/lib64/yp/.+, /var/qmail/bin(/.*)?, /usr/lib/fence(/.*)?, /etc/X11/xinit(/.*)?, /etc/netplug\.d(/.*)?, /usr/local/lib(64)?/ipsec/.*, /usr/X11R6/lib(64)?/X11/xkb/xkbcomp, /etc/ppp/ip-up\..*, /etc/cipe/ip-up.*, /etc/pm/power\.d(/.*)?, /etc/pm/sleep\.d(/.*)?, /var/mailman/bin(/.*)?, /etc/xen/scripts(/.*)?, /etc/ppp/ipv6-up\..*, /etc/ppp/ip-down\..*, /etc/cipe/ip-down.*, /usr/share/hplip/[^/]*, /etc/vmware-tools(/.*)?, /etc/kde/shutdown(/.*)?, /etc/acpi/actions(/.*)?, /etc/pki/tls/misc(/.*)?, /usr/local/Printer(/.*)?, /usr/local/Brother(/.*)?, /opt/google/chrome(/.*)?, /usr/lib/bluetooth(/.*)?, /usr/lib/ruby/gems(/.*)?/helper-scripts(/.*)?, /usr/share/debconf/.+, /etc/ppp/ipv6-down\..*, /usr/share/cluster/.*\.sh, /usr/share/sectool/.*\.py, /usr/share/ssl/misc(/.*)?, /usr/share/e16/misc(/.*)?, /usr/lib/ccache/bin(/.*)?, /etc/racoon/scripts(/.*)?, /usr/lib/ruby/gems/.*/agents(/.*)?, /usr/local/Brother/(.*/)?inf/setup.*, /usr/local/Brother/(.*/)?inf/brprintconf.*, /usr/share/mc/extfs/.*, /etc/mcelog/triggers(/.*)?, /etc/dhcp/dhclient\.d(/.*)?, /emul/ia32-linux/bin(/.*)?, /usr/lib64/bluetooth(/.*)?, /emul/ia32-linux/usr(/.*)?/bin(/.*)?, /emul/ia32-linux/usr(/.*)?/Bin(/.*)?, /emul/ia32-linux/usr(/.*)?/sbin(/.*)?, /usr/lib/wicd/monitor.py, /usr/share/createrepo(/.*)?, /emul/ia32-linux/sbin(/.*)?, /usr/share/hal/scripts(/.*)?, /usr/lib/vmware-tools/(s)?bin64(/.*)?, /usr/lib/vmware-tools/(s)?bin32(/.*)?, /etc/gdm/XKeepsCrashing[^/]*, /usr/lib/oracle/xe/apps(/.*)?, /usr/share/smolt/client(/.*)?, /usr/share/Modules/init(/.*)?, /usr/share/apr-0/build/[^/]+\.sh, /usr/share/shorewall-perl(/.*)?, /usr/share/shorewall-lite(/.*)?, /usr/share/turboprint/lib(/.*)?, /usr/share/vhostmd/scripts(/.*)?, /usr/share/shorewall6-lite(/.*)?, /usr/share/shorewall-shell(/.*)?, /etc/ConsoleKit/run-seat\.d(/.*)?, /usr/share/sandbox/sandboxX.sh, /usr/share/denyhosts/plugins(/.*)?, /usr/share/denyhosts/scripts(/.*)?, /emul/ia32-linux/usr/libexec(/.*)?, /usr/share/PackageKit/helpers(/.*)?, /etc/ConsoleKit/run-session\.d(/.*)?, /etc/hotplug\.d/default/default.*, /usr/share/cluster/checkquorum.*, /usr/local/linuxprinter/filters(/.*)?, /opt/gutenprint/cups/lib/filter(/.*)?, /usr/share/system-config-network(/netconfig)?/[^/]+\.py, /etc/sysconfig/network-scripts/net.*, /etc/sysconfig/network-scripts/ifup.*, /etc/sysconfig/network-scripts/init.*, /etc/sysconfig/network-scripts/ifdown.*, /opt/OpenPrinting-Gutenprint/cups/lib/filter(/.*)?, /usr/share/gedit-2/plugins/externaltools/tools(/.*)?, /bin, /sbin, /dev/MAKEDEV, /var/qmail/rc, /var/qmail/bin, /etc/mail/make, /bin/mountpoint, /lib/udev/scsi_id, /sbin/mkfs\.cramfs, /etc/xen/qemu-ifup, /etc/sysconfig/init, /etc/apcupsd/commok, /etc/sysconfig/crond, /etc/X11/xdm/Xsetup_0, /etc/init\.d/functions, /etc/apcupsd/changeme, /etc/apcupsd/onbattery, /etc/sysconfig/libvirtd, /etc/apcupsd/offbattery, /etc/apcupsd/apccontrol, /etc/X11/xdm/GiveConsole, /etc/X11/xdm/TakeConsole, /etc/apcupsd/commfailure, /etc/sysconfig/netconsole, /etc/rc\.d/init\.d/functions, /etc/apcupsd/masterconnect, /etc/apcupsd/mastertimeout, /usr/share/pydict/pydict\.py, /usr/share/clamav/clamd-gen, /sbin/insmod_ksymoops_clean, /etc/mgetty\+sendfax/new_fax, /etc/sysconfig/readonly-root, /usr/share/cvs/contrib/rcs2log, /usr/share/hwbrowser/hwbrowser, /usr/share/shorewall/getparams, /usr/share/cluster/SAPDatabase, /usr/share/cluster/SAPInstance, /usr/share/apr-0/build/libtool, /etc/hotplug/hotplug\.functions, /usr/share/texmf/web2c/mktexdir, /usr/share/texmf/web2c/mktexnam, /usr/share/texmf/web2c/mktexupd, /usr/share/shorewall/configpath, /etc/mcelog/cache-error-trigger, /usr/share/shorewall/compiler\.pl, /usr/share/dayplanner/dayplanner, /usr/libexec/openssh/sftp-server, /usr/share/texmf/texconfig/tcfmgr, /usr/share/clamav/freshclam-sleep, /usr/share/cluster/ocf-shellfuncs, /usr/share/cluster/svclib_nfslock, /usr/share/pwlib/make/ptlib-config, /usr/share/fedora-usermgmt/wrapper, /usr/share/printconf/util/print\.py, /etc/pki/tls/certs/make-dummy-cert, /usr/share/rhn/rhn_applet/applet\.py, /usr/share/authconfig/authconfig\.py, /usr/share/spamassassin/sa-update\.cron, /usr/share/selinux/devel/policygentool, /usr/share/gnucash/finance-quote-check, /usr/share/cluster/fence_scsi_check\.pl, /usr/share/switchdesk/switchdesk-gui\.py, /usr/share/authconfig/authconfig-tui\.py, /usr/share/authconfig/authconfig-gtk\.py, /usr/share/gnucash/finance-quote-helper, /usr/share/gitolite/hooks/common/update, /usr/share/system-config-services/gui\.py, /lib/security/pam_krb5/pam_krb5_storetmp, /usr/share/system-config-netboot/pxeos\.py, /usr/share/system-config-printer/applet\.py, /usr/share/system-config-nfs/nfs-export\.py, /usr/share/system-config-selinux/polgen\.py, /lib64/security/pam_krb5/pam_krb5_storetmp, /usr/share/PackageKit/pk-upgrade-distro\.sh, /usr/share/system-config-netboot/pxeboot\.py, /usr/share/rhn/rhn_applet/needed-packages\.py, /usr/share/system-logviewer/system-logviewer\.py, /usr/share/system-config-network/neat-control\.py, /usr/share/system-config-services/serviceconf\.py, /usr/share/hal/device-manager/hal-device-manager, /usr/share/system-config-lvm/system-config-lvm\.py, /usr/share/system-config-nfs/system-config-nfs\.py, /usr/share/system-config-httpd/system-config-httpd, /usr/share/system-config-mouse/system-config-mouse, /usr/share/system-config-users/system-config-users, /usr/share/system-config-date/system-config-date\.py, /usr/share/gitolite/hooks/gitolite-admin/post-update, /usr/share/system-config-samba/system-config-samba\.py, /usr/share/system-config-display/system-config-display, /usr/share/system-config-keyboard/system-config-keyboard, /usr/share/system-config-language/system-config-language, /usr/share/system-config-services/system-config-services, /usr/share/system-config-netboot/system-config-netboot\.py, /usr/share/system-config-selinux/system-config-selinux\.py, /usr/share/system-config-soundcard/system-config-soundcard, /usr/share/system-config-rootpassword/system-config-rootpassword, /usr/share/system-config-securitylevel/system-config-securitylevel\.py, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rpm_script policy is very flexible allowing users to setup their rpm_script processes in as secure a method as possible.
+.PP
+The following process types are defined for rpm_script:
+
+.EX
+.B rpm_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rpm_script_t
+
+can be used to make the process type rpm_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux rpm_script policy is very flexible allowing users to setup their rpm_script processes in as secure a method as possible.
+.PP
+The following file types are defined for rpm_script:
+
+
+.EX
+.PP
+.B rpm_script_exec_t
+.EE
+
+- Set files with the rpm_script_exec_t type, if you want to transition an executable to the rpm_script_t domain.
+
+
+.EX
+.PP
+.B rpm_script_tmp_t
+.EE
+
+- Set files with the rpm_script_tmp_t type, if you want to store rpm script temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rpm_script_tmpfs_t
+.EE
+
+- Set files with the rpm_script_tmpfs_t type, if you want to store rpm script files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type rpm_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), rpm_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, rpm_selinux(8), rpm_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/rpm_selinux.8 serefpolicy-3.7.19/man/man8/rpm_selinux.8
--- nsaserefpolicy/man/man8/rpm_selinux.8	2013-03-15 11:41:11.777153499 +0100
+++ serefpolicy-3.7.19/man/man8/rpm_selinux.8	2013-03-15 11:39:56.518151782 +0100
@@ -1,43 +1,63 @@
-.TH  "rpm_selinux"  "8"  "rpm" "dwalsh@redhat.com" "rpm SELinux Policy documentation"
+.TH  "rpm_selinux"  "8"  "13-01-04" "rpm" "SELinux Policy documentation for rpm"
 .SH "NAME"
 rpm_selinux \- Security Enhanced Linux Policy for the rpm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rpm processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rpm
-(Policy for the RPM package manager)
-processes via flexible mandatory access
-control.  
+The rpm processes execute with the rpm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rpm_t
+
+
+.SH "ENTRYPOINTS"
+
+The rpm_t SELinux type can be entered via the "mtrr_device_t,debuginfo_exec_t,unlabeled_t,proc_type,rpm_script_exec_t,sysctl_type,filesystem_type,file_type,rpm_exec_t" file types.  The default entrypoint paths for the rpm_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/debuginfo-install, all files on the system, /usr/libexec/yumDBUSBackend.py, /bin/rpm, /usr/bin/rpm, /usr/bin/yum, /usr/sbin/pup, /usr/bin/smart, /usr/sbin/pirut, /usr/sbin/bcfg2, /usr/bin/apt-get, /usr/sbin/up2date, /usr/sbin/synaptic, /usr/bin/apt-shell, /usr/sbin/rhn_check, /usr/sbin/rhnreg_ks, /usr/sbin/packagekitd, /usr/sbin/yum-updatesd, /usr/bin/package-cleanup, /usr/libexec/packagekitd, /usr/bin/fedora-rmdevelrpms, /usr/bin/rpmdev-rmdevelrpms, /usr/share/yumex/yum_childtask\.py, /usr/sbin/system-install-packages, /usr/share/yumex/yumex-yum-backend, /usr/sbin/yum-complete-transaction
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rpm policy is very flexible allowing users to setup their rpm processes in as secure a method as possible.
+.PP
+The following process types are defined for rpm:
+
+.EX
+.B rpm_t, rpm_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rpm_t
+
+can be used to make the process type rpm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rpm policy is very flexible allowing users to setup their rpm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rpm:
 
 
 .EX
 .PP
-.B rpm_exec_t 
+.B rpm_exec_t
 .EE
 
 - Set files with the rpm_exec_t type, if you want to transition an executable to the rpm_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/yum-updatesd, /usr/bin/apt-get, /usr/libexec/yumDBUSBackend.py, /usr/libexec/packagekitd, /usr/sbin/rhn_check, /usr/bin/rpmdev-rmdevelrpms, /usr/sbin/synaptic, /usr/share/yumex/yumex-yum-backend, /usr/sbin/pirut, /usr/sbin/pup, /usr/bin/apt-shell, /usr/sbin/up2date, /usr/bin/fedora-rmdevelrpms, /bin/rpm, /usr/sbin/packagekitd, /usr/bin/yum, /usr/sbin/system-install-packages, /usr/bin/rpm, /usr/sbin/yum-complete-transaction, /usr/bin/smart, /usr/sbin/rhnreg_ks, /usr/share/yumex/yum_childtask\.py
 
 .EX
 .PP
-.B rpm_file_t 
+.B rpm_file_t
 .EE
 
 - Set files with the rpm_file_t type, if you want to treat the files as rpm content.
@@ -45,19 +65,15 @@
 
 .EX
 .PP
-.B rpm_log_t 
+.B rpm_log_t
 .EE
 
 - Set files with the rpm_log_t type, if you want to treat the data as rpm log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/yum\.log.*, /var/log/rpmpkgs.*
 
 .EX
 .PP
-.B rpm_script_exec_t 
+.B rpm_script_exec_t
 .EE
 
 - Set files with the rpm_script_exec_t type, if you want to transition an executable to the rpm_script_t domain.
@@ -65,7 +81,7 @@
 
 .EX
 .PP
-.B rpm_script_tmp_t 
+.B rpm_script_tmp_t
 .EE
 
 - Set files with the rpm_script_tmp_t type, if you want to store rpm script temporary files in the /tmp directories.
@@ -73,7 +89,7 @@
 
 .EX
 .PP
-.B rpm_script_tmpfs_t 
+.B rpm_script_tmpfs_t
 .EE
 
 - Set files with the rpm_script_tmpfs_t type, if you want to store rpm script files on a tmpfs file system.
@@ -81,7 +97,7 @@
 
 .EX
 .PP
-.B rpm_tmp_t 
+.B rpm_tmp_t
 .EE
 
 - Set files with the rpm_tmp_t type, if you want to store rpm temporary files in the /tmp directories.
@@ -89,7 +105,7 @@
 
 .EX
 .PP
-.B rpm_tmpfs_t 
+.B rpm_tmpfs_t
 .EE
 
 - Set files with the rpm_tmpfs_t type, if you want to store rpm files on a tmpfs file system.
@@ -97,64 +113,44 @@
 
 .EX
 .PP
-.B rpm_var_cache_t 
+.B rpm_var_cache_t
 .EE
 
 - Set files with the rpm_var_cache_t type, if you want to store the files under the /var/cache directory.
 
-.br
-.TP 5
-Paths: 
-/var/cache/yum(/.*)?, /var/spool/up2date(/.*)?
 
 .EX
 .PP
-.B rpm_var_lib_t 
+.B rpm_var_lib_t
 .EE
 
 - Set files with the rpm_var_lib_t type, if you want to store the rpm files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/yum(/.*)?, /var/lib/rpm(/.*)?, /var/lib/alternatives(/.*)?
 
 .EX
 .PP
-.B rpm_var_run_t 
+.B rpm_var_run_t
 .EE
 
 - Set files with the rpm_var_run_t type, if you want to store the rpm files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/PackageKit(/.*)?, /var/run/yum.*
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rpm policy is very flexible allowing users to setup their rpm processes in as secure a method as possible.
-.PP 
-The following process types are defined for rpm:
+.SH "MANAGED FILES"
 
-.EX
-.B rpm_t, rpm_script_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rpm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -167,11 +163,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rpm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rpm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, rpm_script_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/rshd_selinux.8 serefpolicy-3.7.19/man/man8/rshd_selinux.8
--- nsaserefpolicy/man/man8/rshd_selinux.8	2013-03-15 11:41:11.295153488 +0100
+++ serefpolicy-3.7.19/man/man8/rshd_selinux.8	2013-03-15 11:39:55.509151759 +0100
@@ -1,43 +1,63 @@
-.TH  "rshd_selinux"  "8"  "rshd" "dwalsh@redhat.com" "rshd SELinux Policy documentation"
+.TH  "rshd_selinux"  "8"  "13-01-04" "rshd" "SELinux Policy documentation for rshd"
 .SH "NAME"
 rshd_selinux \- Security Enhanced Linux Policy for the rshd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rshd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rshd
-(Remote shell service)
-processes via flexible mandatory access
-control.  
+The rshd processes execute with the rshd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rshd_t
+
+
+.SH "ENTRYPOINTS"
+
+The rshd_t SELinux type can be entered via the "rshd_exec_t" file type.  The default entrypoint paths for the rshd_t domain are the following:"
+
+/usr/sbin/in\.rshd, /usr/sbin/in\.rexecd, /usr/kerberos/sbin/kshd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
+.PP
+The following process types are defined for rshd:
+
+.EX
+.B rshd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rshd_t
+
+can be used to make the process type rshd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rshd:
 
 
 .EX
 .PP
-.B rshd_exec_t 
+.B rshd_exec_t
 .EE
 
 - Set files with the rshd_exec_t type, if you want to transition an executable to the rshd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/in\.rshd, /usr/kerberos/sbin/kshd, /usr/sbin/in\.rexecd
 
 .EX
 .PP
-.B rshd_keytab_t 
+.B rshd_keytab_t
 .EE
 
 - Set files with the rshd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -45,51 +65,171 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for rshd:
 
 .EX
 .TP 5
-.B rsh_port_t 
+.B rsh_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 514
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
-.PP 
-The following process types are defined for rshd:
+.SH "MANAGED FILES"
 
-.EX
-.B rshd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rshd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pam_var_run_t
+
+	/var/run/sudo(/.*)?
+.br
+	/var/run/sepermit(/.*)?
+.br
+	/var/run/pam_mount(/.*)?
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_auth_t
+
+	/var/lib/abl(/.*)?
+.br
+	/var/lib/pam_ssh(/.*)?
+.br
+	/var/run/pam_ssh(/.*)?
+.br
+	/var/lib/pam_shield(/.*)?
+.br
+	/var/opt/quest/vas/vasd(/.*)?
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -105,11 +245,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rshd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rshd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rssh_selinux.8 serefpolicy-3.7.19/man/man8/rssh_selinux.8
--- nsaserefpolicy/man/man8/rssh_selinux.8	2013-03-15 11:41:12.119153507 +0100
+++ serefpolicy-3.7.19/man/man8/rssh_selinux.8	2013-03-15 11:40:03.568151943 +0100
@@ -1,31 +1,55 @@
-.TH  "rssh_selinux"  "8"  "rssh" "dwalsh@redhat.com" "rssh SELinux Policy documentation"
+.TH  "rssh_selinux"  "8"  "13-01-04" "rssh" "SELinux Policy documentation for rssh"
 .SH "NAME"
 rssh_selinux \- Security Enhanced Linux Policy for the rssh processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rssh processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rssh
-(Restricted (scp/sftp) only shell)
-processes via flexible mandatory access
-control.  
+The rssh processes execute with the rssh_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rssh_t
+
+
+.SH "ENTRYPOINTS"
+
+The rssh_t SELinux type can be entered via the "rssh_exec_t" file type.  The default entrypoint paths for the rssh_t domain are the following:"
+
+/usr/bin/rssh
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rssh policy is very flexible allowing users to setup their rssh processes in as secure a method as possible.
+.PP
+The following process types are defined for rssh:
+
+.EX
+.B rssh_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rssh_t
+
+can be used to make the process type rssh_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rssh policy is very flexible allowing users to setup their rssh processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rssh:
 
 
 .EX
 .PP
-.B rssh_exec_t 
+.B rssh_exec_t
 .EE
 
 - Set files with the rssh_exec_t type, if you want to transition an executable to the rssh_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B rssh_ro_t 
+.B rssh_ro_t
 .EE
 
 - Set files with the rssh_ro_t type, if you want to treat the files as rssh read/only content.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B rssh_rw_t 
+.B rssh_rw_t
 .EE
 
 - Set files with the rssh_rw_t type, if you want to treat the files as rssh read/write content.
@@ -49,28 +73,60 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rssh policy is very flexible allowing users to setup their rssh processes in as secure a method as possible.
-.PP 
-The following process types are defined for rssh:
+.SH "MANAGED FILES"
 
-.EX
-.B rssh_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rssh_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B rssh_rw_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +139,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rssh(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rssh(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rsync_selinux.8 serefpolicy-3.7.19/man/man8/rsync_selinux.8
--- nsaserefpolicy/man/man8/rsync_selinux.8	2013-03-15 11:41:11.830153500 +0100
+++ serefpolicy-3.7.19/man/man8/rsync_selinux.8	2013-03-15 11:39:57.663151808 +0100
@@ -1,29 +1,95 @@
-.TH  "rsync_selinux"  "8"  "rsync" "dwalsh@redhat.com" "rsync SELinux Policy documentation"
+.TH  "rsync_selinux"  "8"  "13-01-04" "rsync" "SELinux Policy documentation for rsync"
 .SH "NAME"
 rsync_selinux \- Security Enhanced Linux Policy for the rsync processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rsync processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rsync
-(Fast incremental file transfer for synchronization)
-processes via flexible mandatory access
-control.  
+The rsync processes execute with the rsync_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rsync_t
+
+
+.SH "ENTRYPOINTS"
+
+The rsync_t SELinux type can be entered via the "rsync_exec_t" file type.  The default entrypoint paths for the rsync_t domain are the following:"
+
+/usr/bin/rsync
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
+.PP
+The following process types are defined for rsync:
+
+.EX
+.B rsync_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rsync_t
+
+can be used to make the process type rsync_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  rsync policy is extremely flexible and has several booleans that allow you to manipulate the policy and run rsync with the tightest access possible.
 
 
 .PP
-If you want to allow rsync to run as a clien, you must turn on the rsync_client boolean.
+If you want to allow postgresql to use ssh and rsync for point-in-time recovery, you must turn on the postgresql_can_rsync boolean.
+
+.EX
+.B setsebool -P postgresql_can_rsync 1
+.EE
+
+.PP
+If you want to allow rsync to export any files/directories read only, you must turn on the rsync_export_all_ro boolean.
+
+.EX
+.B setsebool -P rsync_export_all_ro 1
+.EE
+
+.PP
+If you want to allow rsync servers to share nfs files systems, you must turn on the rsync_use_nfs boolean.
+
+.EX
+.B setsebool -P rsync_use_nfs 1
+.EE
+
+.PP
+If you want to allow rsync servers to share cifs files systems, you must turn on the rsync_use_cifs boolean.
+
+.EX
+.B setsebool -P rsync_use_cifs 1
+.EE
+
+.PP
+If you want to allow rsync to run as a client, you must turn on the rsync_client boolean.
 
 .EX
 .B setsebool -P rsync_client 1
 .EE
 
 .PP
+If you want to allow postgresql to use ssh and rsync for point-in-time recovery, you must turn on the postgresql_can_rsync boolean.
+
+.EX
+.B setsebool -P postgresql_can_rsync 1
+.EE
+
+.PP
+If you want to allow rsync to modify public files used for public file transfer services.  Files/Directories must be labeled public_content_rw_t, you must turn on the allow_rsync_anon_write boolean.
+
+.EX
+.B setsebool -P allow_rsync_anon_write 1
+.EE
+
+.PP
 If you want to allow rsync to export any files/directories read only, you must turn on the rsync_export_all_ro boolean.
 
 .EX
@@ -31,19 +97,26 @@
 .EE
 
 .PP
-If you want to allow rsync servers to share nfs files system, you must turn on the rsync_use_nfs boolean.
+If you want to allow rsync servers to share nfs files systems, you must turn on the rsync_use_nfs boolean.
 
 .EX
 .B setsebool -P rsync_use_nfs 1
 .EE
 
 .PP
-If you want to allow rsync servers to share cifs files system, you must turn on the rsync_use_cifs boolean.
+If you want to allow rsync servers to share cifs files systems, you must turn on the rsync_use_cifs boolean.
 
 .EX
 .B setsebool -P rsync_use_cifs 1
 .EE
 
+.PP
+If you want to allow rsync to run as a client, you must turn on the rsync_client boolean.
+
+.EX
+.B setsebool -P rsync_client 1
+.EE
+
 .SH SHARING FILES
 If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
 .TP
@@ -55,7 +128,7 @@
 .B restorecon -F -R -v /var/rsync
 .pp
 .TP
-Allow rsync servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_rsync_anon_write boolean to be set.
+Allow rsync servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_rsyncd_anon_write boolean to be set.
 .PP
 .B
 semanage fcontext -a -t public_content_rw_t "/var/rsync/incoming(/.*)?"
@@ -71,19 +144,19 @@
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rsync:
 
 
 .EX
 .PP
-.B rsync_data_t 
+.B rsync_data_t
 .EE
 
 - Set files with the rsync_data_t type, if you want to treat the files as rsync content.
@@ -91,7 +164,7 @@
 
 .EX
 .PP
-.B rsync_etc_t 
+.B rsync_etc_t
 .EE
 
 - Set files with the rsync_etc_t type, if you want to store rsync files in the /etc directories.
@@ -99,7 +172,7 @@
 
 .EX
 .PP
-.B rsync_exec_t 
+.B rsync_exec_t
 .EE
 
 - Set files with the rsync_exec_t type, if you want to transition an executable to the rsync_t domain.
@@ -107,7 +180,7 @@
 
 .EX
 .PP
-.B rsync_log_t 
+.B rsync_log_t
 .EE
 
 - Set files with the rsync_log_t type, if you want to treat the data as rsync log data, usually stored under the /var/log directory.
@@ -115,7 +188,7 @@
 
 .EX
 .PP
-.B rsync_tmp_t 
+.B rsync_tmp_t
 .EE
 
 - Set files with the rsync_tmp_t type, if you want to store rsync temporary files in the /tmp directories.
@@ -123,7 +196,7 @@
 
 .EX
 .PP
-.B rsync_var_run_t 
+.B rsync_var_run_t
 .EE
 
 - Set files with the rsync_var_run_t type, if you want to store the rsync files under the /run directory.
@@ -131,51 +204,97 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for rsync:
 
 .EX
 .TP 5
-.B rsync_port_t 
+.B rsync_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 873
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
-.PP 
-The following process types are defined for rsync:
-
-.EX
-.B rsync_t 
+udp 873
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type rsync_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B rsync_log_t
+
+	/var/log/rsync\.log.*
+.br
+
+.br
+.B rsync_tmp_t
+
+
+.br
+.B rsync_var_run_t
+
+	/var/run/rsyncd\.lock
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -194,12 +313,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rsync(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rsync(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/rtkit_daemon_selinux.8 serefpolicy-3.7.19/man/man8/rtkit_daemon_selinux.8
--- nsaserefpolicy/man/man8/rtkit_daemon_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/rtkit_daemon_selinux.8	2013-03-15 11:40:03.326151937 +0100
@@ -0,0 +1,135 @@
+.TH  "rtkit_daemon_selinux"  "8"  "13-01-04" "rtkit_daemon" "SELinux Policy documentation for rtkit_daemon"
+.SH "NAME"
+rtkit_daemon_selinux \- Security Enhanced Linux Policy for the rtkit_daemon processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the rtkit_daemon processes via flexible mandatory access control.
+
+The rtkit_daemon processes execute with the rtkit_daemon_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep rtkit_daemon_t
+
+
+.SH "ENTRYPOINTS"
+
+The rtkit_daemon_t SELinux type can be entered via the "rtkit_daemon_exec_t" file type.  The default entrypoint paths for the rtkit_daemon_t domain are the following:"
+
+/usr/libexec/rtkit-daemon
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rtkit_daemon policy is very flexible allowing users to setup their rtkit_daemon processes in as secure a method as possible.
+.PP
+The following process types are defined for rtkit_daemon:
+
+.EX
+.B rtkit_daemon_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rtkit_daemon_t
+
+can be used to make the process type rtkit_daemon_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux rtkit_daemon policy is very flexible allowing users to setup their rtkit_daemon processes in as secure a method as possible.
+.PP
+The following file types are defined for rtkit_daemon:
+
+
+.EX
+.PP
+.B rtkit_daemon_exec_t
+.EE
+
+- Set files with the rtkit_daemon_exec_t type, if you want to transition an executable to the rtkit_daemon_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type rtkit_daemon_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), rtkit_daemon(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/run_init_selinux.8 serefpolicy-3.7.19/man/man8/run_init_selinux.8
--- nsaserefpolicy/man/man8/run_init_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/run_init_selinux.8	2013-03-15 11:39:55.575151761 +0100
@@ -0,0 +1,171 @@
+.TH  "run_init_selinux"  "8"  "13-01-04" "run_init" "SELinux Policy documentation for run_init"
+.SH "NAME"
+run_init_selinux \- Security Enhanced Linux Policy for the run_init processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the run_init processes via flexible mandatory access control.
+
+The run_init processes execute with the run_init_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep run_init_t
+
+
+.SH "ENTRYPOINTS"
+
+The run_init_t SELinux type can be entered via the "run_init_exec_t" file type.  The default entrypoint paths for the run_init_t domain are the following:"
+
+/usr/sbin/run_init
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux run_init policy is very flexible allowing users to setup their run_init processes in as secure a method as possible.
+.PP
+The following process types are defined for run_init:
+
+.EX
+.B run_init_t
+.EE
+.PP
+Note:
+.B semanage permissive -a run_init_t
+
+can be used to make the process type run_init_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux run_init policy is very flexible allowing users to setup their run_init processes in as secure a method as possible.
+.PP
+The following file types are defined for run_init:
+
+
+.EX
+.PP
+.B run_init_exec_t
+.EE
+
+- Set files with the run_init_exec_t type, if you want to transition an executable to the run_init_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type run_init_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), run_init(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/rwho_selinux.8 serefpolicy-3.7.19/man/man8/rwho_selinux.8
--- nsaserefpolicy/man/man8/rwho_selinux.8	2013-03-15 11:41:12.174153508 +0100
+++ serefpolicy-3.7.19/man/man8/rwho_selinux.8	2013-03-15 11:40:05.293151982 +0100
@@ -1,31 +1,55 @@
-.TH  "rwho_selinux"  "8"  "rwho" "dwalsh@redhat.com" "rwho SELinux Policy documentation"
+.TH  "rwho_selinux"  "8"  "13-01-04" "rwho" "SELinux Policy documentation for rwho"
 .SH "NAME"
 rwho_selinux \- Security Enhanced Linux Policy for the rwho processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the rwho processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B rwho
-(Who is logged in on other machines?)
-processes via flexible mandatory access
-control.  
+The rwho processes execute with the rwho_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep rwho_t
+
+
+.SH "ENTRYPOINTS"
+
+The rwho_t SELinux type can be entered via the "rwho_exec_t" file type.  The default entrypoint paths for the rwho_t domain are the following:"
+
+/usr/sbin/rwhod
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
+.PP
+The following process types are defined for rwho:
+
+.EX
+.B rwho_t
+.EE
+.PP
+Note:
+.B semanage permissive -a rwho_t
+
+can be used to make the process type rwho_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for rwho:
 
 
 .EX
 .PP
-.B rwho_exec_t 
+.B rwho_exec_t
 .EE
 
 - Set files with the rwho_exec_t type, if you want to transition an executable to the rwho_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B rwho_initrc_exec_t 
+.B rwho_initrc_exec_t
 .EE
 
 - Set files with the rwho_initrc_exec_t type, if you want to transition an executable to the rwho_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B rwho_log_t 
+.B rwho_log_t
 .EE
 
 - Set files with the rwho_log_t type, if you want to treat the data as rwho log data, usually stored under the /var/log directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B rwho_spool_t 
+.B rwho_spool_t
 .EE
 
 - Set files with the rwho_spool_t type, if you want to store the rwho files under the /var/spool directory.
@@ -57,51 +81,99 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for rwho:
 
 .EX
 .TP 5
-.B rwho_port_t 
+.B rwho_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 513
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
-.PP 
-The following process types are defined for rwho:
+.SH "MANAGED FILES"
 
-.EX
-.B rwho_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type rwho_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B rwho_log_t
+
+	/var/log/rwhod(/.*)?
+.br
+
+.br
+.B rwho_spool_t
+
+	/var/spool/rwho(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -117,11 +189,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), rwho(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), rwho(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/sambagui_selinux.8 serefpolicy-3.7.19/man/man8/sambagui_selinux.8
--- nsaserefpolicy/man/man8/sambagui_selinux.8	2013-03-15 11:41:10.637153473 +0100
+++ serefpolicy-3.7.19/man/man8/sambagui_selinux.8	2013-03-15 11:39:54.810151743 +0100
@@ -1,31 +1,55 @@
-.TH  "sambagui_selinux"  "8"  "sambagui" "dwalsh@redhat.com" "sambagui SELinux Policy documentation"
+.TH  "sambagui_selinux"  "8"  "13-01-04" "sambagui" "SELinux Policy documentation for sambagui"
 .SH "NAME"
 sambagui_selinux \- Security Enhanced Linux Policy for the sambagui processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sambagui processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B sambagui
-(system-config-samba policy)
-processes via flexible mandatory access
-control.  
+The sambagui processes execute with the sambagui_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep sambagui_t
+
+
+.SH "ENTRYPOINTS"
+
+The sambagui_t SELinux type can be entered via the "sambagui_exec_t" file type.  The default entrypoint paths for the sambagui_t domain are the following:"
+
+/usr/share/system-config-samba/system-config-samba-mechanism.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sambagui policy is very flexible allowing users to setup their sambagui processes in as secure a method as possible.
+.PP
+The following process types are defined for sambagui:
+
+.EX
+.B sambagui_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sambagui_t
+
+can be used to make the process type sambagui_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux sambagui policy is very flexible allowing users to setup their sambagui processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for sambagui:
 
 
 .EX
 .PP
-.B sambagui_exec_t 
+.B sambagui_exec_t
 .EE
 
 - Set files with the sambagui_exec_t type, if you want to transition an executable to the sambagui_t domain.
@@ -33,28 +57,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sambagui policy is very flexible allowing users to setup their sambagui processes in as secure a method as possible.
-.PP 
-The following process types are defined for sambagui:
+.SH "MANAGED FILES"
 
-.EX
-.B sambagui_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sambagui_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B samba_etc_t
+
+	/etc/samba(/.*)?
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +137,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sambagui(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), sambagui(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/samba_net_selinux.8 serefpolicy-3.7.19/man/man8/samba_net_selinux.8
--- nsaserefpolicy/man/man8/samba_net_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/samba_net_selinux.8	2013-03-15 11:39:55.188151752 +0100
@@ -0,0 +1,184 @@
+.TH  "samba_net_selinux"  "8"  "13-01-04" "samba_net" "SELinux Policy documentation for samba_net"
+.SH "NAME"
+samba_net_selinux \- Security Enhanced Linux Policy for the samba_net processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the samba_net processes via flexible mandatory access control.
+
+The samba_net processes execute with the samba_net_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep samba_net_t
+
+
+.SH "ENTRYPOINTS"
+
+The samba_net_t SELinux type can be entered via the "samba_net_exec_t" file type.  The default entrypoint paths for the samba_net_t domain are the following:"
+
+/usr/bin/net
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux samba_net policy is very flexible allowing users to setup their samba_net processes in as secure a method as possible.
+.PP
+The following process types are defined for samba_net:
+
+.EX
+.B samba_net_t
+.EE
+.PP
+Note:
+.B semanage permissive -a samba_net_t
+
+can be used to make the process type samba_net_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux samba_net policy is very flexible allowing users to setup their samba_net processes in as secure a method as possible.
+.PP
+The following file types are defined for samba_net:
+
+
+.EX
+.PP
+.B samba_net_exec_t
+.EE
+
+- Set files with the samba_net_exec_t type, if you want to transition an executable to the samba_net_t domain.
+
+
+.EX
+.PP
+.B samba_net_tmp_t
+.EE
+
+- Set files with the samba_net_tmp_t type, if you want to store samba net temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type samba_net_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_keytab_t
+
+	/etc/krb5\.keytab
+.br
+	/etc/krb5kdc/kadm5\.keytab
+.br
+	/var/kerberos/krb5kdc/kadm5\.keytab
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B samba_net_tmp_t
+
+
+.br
+.B samba_secrets_t
+
+	/etc/samba/smbpasswd
+.br
+	/etc/samba/passdb\.tdb
+.br
+	/etc/samba/MACHINE\.SID
+.br
+	/etc/samba/secrets\.tdb
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), samba_net(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, samba_unconfined_script_selinux(8), sambagui_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/samba_selinux.8 serefpolicy-3.7.19/man/man8/samba_selinux.8
--- nsaserefpolicy/man/man8/samba_selinux.8	2013-03-15 11:41:12.031153505 +0100
+++ serefpolicy-3.7.19/man/man8/samba_selinux.8	2013-03-15 11:40:01.651151899 +0100
@@ -1,250 +1 @@
-.TH  "samba_selinux"  "8"  "samba" "dwalsh@redhat.com" "samba SELinux Policy documentation"
-.SH "NAME"
-samba_selinux \- Security Enhanced Linux Policy for the samba processes
-.SH "DESCRIPTION"
-
-
-SELinux Linux secures
-.B samba
-(
-SMB and CIFS client/server programs for UNIX and
-name  Service  Switch  daemon for resolving names
-from Windows NT servers.
-)
-processes via flexible mandatory access
-control.  
-
-
-
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  samba policy is extremely flexible and has several booleans that allow you to manipulate the policy and run samba with the tightest access possible.
-
-
-.PP
-If you want to allow samba to act as the domain controller, add users, groups and change passwords, you must turn on the samba_domain_controller boolean.
-
-.EX
-.B setsebool -P samba_domain_controller 1
-.EE
-
-.PP
-If you want to allow samba to share any file/directory read only, you must turn on the samba_export_all_ro boolean.
-
-.EX
-.B setsebool -P samba_export_all_ro 1
-.EE
-
-.PP
-If you want to support SAMBA home directorie, you must turn on the use_samba_home_dirs boolean.
-
-.EX
-.B setsebool -P use_samba_home_dirs 1
-.EE
-
-.PP
-If you want to allow samba to create new home directories (e.g. via PAM, you must turn on the samba_create_home_dirs boolean.
-
-.EX
-.B setsebool -P samba_create_home_dirs 1
-.EE
-
-.PP
-If you want to allow samba to share users home directories, you must turn on the samba_enable_home_dirs boolean.
-
-.EX
-.B setsebool -P samba_enable_home_dirs 1
-.EE
-
-.PP
-If you want to allow samba to export ntfs/fusefs volumes, you must turn on the samba_share_fusefs boolean.
-
-.EX
-.B setsebool -P samba_share_fusefs 1
-.EE
-
-.PP
-If you want to allow samba to export NFS volumes, you must turn on the samba_share_nfs boolean.
-
-.EX
-.B setsebool -P samba_share_nfs 1
-.EE
-
-.PP
-If you want to allow samba to run unconfined script, you must turn on the samba_run_unconfined boolean.
-
-.EX
-.B setsebool -P samba_run_unconfined 1
-.EE
-
-.PP
-If you want to allow confined virtual guests to manage cifs file, you must turn on the sanlock_use_samba boolean.
-
-.EX
-.B setsebool -P sanlock_use_samba 1
-.EE
-
-.PP
-If you want to allow samba to share any file/directory read/write, you must turn on the samba_export_all_rw boolean.
-
-.EX
-.B setsebool -P samba_export_all_rw 1
-.EE
-
-.PP
-If you want to allow virt to manage cifs file, you must turn on the virt_use_samba boolean.
-
-.EX
-.B setsebool -P virt_use_samba 1
-.EE
-
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-.PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
-.PP
-Policy governs the access confined processes have to these files. 
-SELinux samba policy is very flexible allowing users to setup their samba processes in as secure a method as possible.
-.PP 
-The following file types are defined for samba:
-
-
-.EX
-.PP
-.B samba_etc_t 
-.EE
-
-- Set files with the samba_etc_t type, if you want to store samba files in the /etc directories.
-
-
-.EX
-.PP
-.B samba_initrc_exec_t 
-.EE
-
-- Set files with the samba_initrc_exec_t type, if you want to transition an executable to the samba_initrc_t domain.
-
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/smb, /etc/rc\.d/init\.d/nmb, /etc/rc\.d/init\.d/winbind
-
-.EX
-.PP
-.B samba_log_t 
-.EE
-
-- Set files with the samba_log_t type, if you want to treat the data as samba log data, usually stored under the /var/log directory.
-
-
-.EX
-.PP
-.B samba_net_exec_t 
-.EE
-
-- Set files with the samba_net_exec_t type, if you want to transition an executable to the samba_net_t domain.
-
-
-.EX
-.PP
-.B samba_net_tmp_t 
-.EE
-
-- Set files with the samba_net_tmp_t type, if you want to store samba net temporary files in the /tmp directories.
-
-
-.EX
-.PP
-.B samba_secrets_t 
-.EE
-
-- Set files with the samba_secrets_t type, if you want to treat the files as samba secrets data.
-
-.br
-.TP 5
-Paths: 
-/etc/samba/secrets\.tdb, /etc/samba/passdb\.tdb, /etc/samba/MACHINE\.SID, /etc/samba/smbpasswd
-
-.EX
-.PP
-.B samba_share_t 
-.EE
-
-- Set files with the samba_share_t type, if you want to treat the files as samba share data.
-
-
-.EX
-.PP
-.B samba_unconfined_script_exec_t 
-.EE
-
-- Set files with the samba_unconfined_script_exec_t type, if you want to transition an executable to the samba_unconfined_script_t domain.
-
-
-.EX
-.PP
-.B samba_var_t 
-.EE
-
-- Set files with the samba_var_t type, if you want to store the s files under the /var directory.
-
-.br
-.TP 5
-Paths: 
-/var/cache/samba(/.*)?, /var/lib/samba(/.*)?, /var/spool/samba(/.*)?
-
-.EX
-.PP
-.B sambagui_exec_t 
-.EE
-
-- Set files with the sambagui_exec_t type, if you want to transition an executable to the sambagui_t domain.
-
-
-.PP
-Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
-command.  This will modify the SELinux labeling database.  You will need to use
-.B restorecon
-to apply the labels.
-
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux samba policy is very flexible allowing users to setup their samba processes in as secure a method as possible.
-.PP 
-The following process types are defined for samba:
-
-.EX
-.B samba_net_t, samba_unconfined_net_t, samba_unconfined_script_t, sambagui_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
-
-.SH "COMMANDS"
-.B semanage fcontext
-can also be used to manipulate default file context mappings.
-.PP
-.B semanage permissive
-can also be used to manipulate whether or not a process type is permissive.
-.PP
-.B semanage module
-can also be used to enable/disable/install/remove policy modules.
-
-.B semanage boolean
-can also be used to manipulate the booleans
-
-.PP
-.B system-config-selinux 
-is a GUI tool available to customize SELinux policy settings.
-
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
-
-.SH "SEE ALSO"
-selinux(8), samba(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+.so man8/smbd_selinux.8
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/samba_unconfined_script_selinux.8 serefpolicy-3.7.19/man/man8/samba_unconfined_script_selinux.8
--- nsaserefpolicy/man/man8/samba_unconfined_script_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/samba_unconfined_script_selinux.8	2013-03-15 11:40:02.384151916 +0100
@@ -0,0 +1,96 @@
+.TH  "samba_unconfined_script_selinux"  "8"  "13-01-04" "samba_unconfined_script" "SELinux Policy documentation for samba_unconfined_script"
+.SH "NAME"
+samba_unconfined_script_selinux \- Security Enhanced Linux Policy for the samba_unconfined_script processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the samba_unconfined_script processes via flexible mandatory access control.
+
+The samba_unconfined_script processes execute with the samba_unconfined_script_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep samba_unconfined_script_t
+
+
+.SH "ENTRYPOINTS"
+
+The samba_unconfined_script_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,shell_exec_t,samba_unconfined_script_exec_t" file types.  The default entrypoint paths for the samba_unconfined_script_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell, /var/lib/samba/scripts(/.*)?
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux samba_unconfined_script policy is very flexible allowing users to setup their samba_unconfined_script processes in as secure a method as possible.
+.PP
+The following process types are defined for samba_unconfined_script:
+
+.EX
+.B samba_unconfined_script_t
+.EE
+.PP
+Note:
+.B semanage permissive -a samba_unconfined_script_t
+
+can be used to make the process type samba_unconfined_script_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux samba_unconfined_script policy is very flexible allowing users to setup their samba_unconfined_script processes in as secure a method as possible.
+.PP
+The following file types are defined for samba_unconfined_script:
+
+
+.EX
+.PP
+.B samba_unconfined_script_exec_t
+.EE
+
+- Set files with the samba_unconfined_script_exec_t type, if you want to transition an executable to the samba_unconfined_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type samba_unconfined_script_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), samba_unconfined_script(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, samba_net_selinux(8), sambagui_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/sandbox_selinux.8 serefpolicy-3.7.19/man/man8/sandbox_selinux.8
--- nsaserefpolicy/man/man8/sandbox_selinux.8	2013-03-15 11:41:11.970153504 +0100
+++ serefpolicy-3.7.19/man/man8/sandbox_selinux.8	2013-03-15 11:40:00.843151881 +0100
@@ -1,31 +1,55 @@
-.TH  "sandbox_selinux"  "8"  "sandbox" "dwalsh@redhat.com" "sandbox SELinux Policy documentation"
+.TH  "sandbox_selinux"  "8"  "13-01-04" "sandbox" "SELinux Policy documentation for sandbox"
 .SH "NAME"
 sandbox_selinux \- Security Enhanced Linux Policy for the sandbox processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sandbox processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B sandbox
-(policy for sandbox)
-processes via flexible mandatory access
-control.  
+The sandbox processes execute with the sandbox_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep sandbox_t
+
+
+.SH "ENTRYPOINTS"
+
+The sandbox_t SELinux type can be entered via the "file_type" file type.  The default entrypoint paths for the sandbox_t domain are the following:"
+
+all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sandbox policy is very flexible allowing users to setup their sandbox processes in as secure a method as possible.
+.PP
+The following process types are defined for sandbox:
+
+.EX
+.B sandbox_x_client_t, sandbox_net_client_t, sandbox_xserver_t, sandbox_x_t, sandbox_web_client_t, sandbox_min_t, sandbox_net_t, sandbox_web_t, sandbox_min_client_t, sandbox_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sandbox_t
+
+can be used to make the process type sandbox_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux sandbox policy is very flexible allowing users to setup their sandbox processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for sandbox:
 
 
 .EX
 .PP
-.B sandbox_devpts_t 
+.B sandbox_devpts_t
 .EE
 
 - Set files with the sandbox_devpts_t type, if you want to treat the files as sandbox devpts data.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B sandbox_exec_t 
+.B sandbox_exec_t
 .EE
 
 - Set files with the sandbox_exec_t type, if you want to transition an executable to the sandbox_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B sandbox_file_t 
+.B sandbox_file_t
 .EE
 
 - Set files with the sandbox_file_t type, if you want to treat the files as sandbox content.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B sandbox_min_client_tmpfs_t 
+.B sandbox_min_client_tmpfs_t
 .EE
 
 - Set files with the sandbox_min_client_tmpfs_t type, if you want to store sandbox min client files on a tmpfs file system.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B sandbox_net_client_tmpfs_t 
+.B sandbox_net_client_tmpfs_t
 .EE
 
 - Set files with the sandbox_net_client_tmpfs_t type, if you want to store sandbox net client files on a tmpfs file system.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B sandbox_web_client_tmpfs_t 
+.B sandbox_web_client_tmpfs_t
 .EE
 
 - Set files with the sandbox_web_client_tmpfs_t type, if you want to store sandbox web client files on a tmpfs file system.
@@ -73,7 +97,7 @@
 
 .EX
 .PP
-.B sandbox_x_client_tmpfs_t 
+.B sandbox_x_client_tmpfs_t
 .EE
 
 - Set files with the sandbox_x_client_tmpfs_t type, if you want to store sandbox x client files on a tmpfs file system.
@@ -81,7 +105,7 @@
 
 .EX
 .PP
-.B sandbox_xserver_tmpfs_t 
+.B sandbox_xserver_tmpfs_t
 .EE
 
 - Set files with the sandbox_xserver_tmpfs_t type, if you want to store sandbox xserver files on a tmpfs file system.
@@ -89,28 +113,60 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sandbox policy is very flexible allowing users to setup their sandbox processes in as secure a method as possible.
-.PP 
-The following process types are defined for sandbox:
+.SH "MANAGED FILES"
 
-.EX
-.B sandbox_x_client_t, sandbox_net_client_t, sandbox_xserver_t, sandbox_x_t, sandbox_web_client_t, sandbox_min_t, sandbox_net_t, sandbox_web_t, sandbox_min_client_t, sandbox_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sandbox_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B sandbox_file_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -123,11 +179,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sandbox(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), sandbox(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/sanlock_selinux.8 serefpolicy-3.7.19/man/man8/sanlock_selinux.8
--- nsaserefpolicy/man/man8/sanlock_selinux.8	2013-03-15 11:41:11.991153504 +0100
+++ serefpolicy-3.7.19/man/man8/sanlock_selinux.8	2013-03-15 11:40:00.941151883 +0100
@@ -1,56 +1,115 @@
-.TH  "sanlock_selinux"  "8"  "sanlock" "dwalsh@redhat.com" "sanlock SELinux Policy documentation"
+.TH  "sanlock_selinux"  "8"  "13-01-04" "sanlock" "SELinux Policy documentation for sanlock"
 .SH "NAME"
 sanlock_selinux \- Security Enhanced Linux Policy for the sanlock processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sanlock processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B sanlock
-(policy for sanlock)
-processes via flexible mandatory access
-control.  
+The sanlock processes execute with the sanlock_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep sanlock_t
+
+
+.SH "ENTRYPOINTS"
+
+The sanlock_t SELinux type can be entered via the "sanlock_exec_t" file type.  The default entrypoint paths for the sanlock_t domain are the following:"
+
+/usr/sbin/sanlock
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sanlock policy is very flexible allowing users to setup their sanlock processes in as secure a method as possible.
+.PP
+The following process types are defined for sanlock:
+
+.EX
+.B sanlock_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sanlock_t
+
+can be used to make the process type sanlock_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  sanlock policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sanlock with the tightest access possible.
 
 
 .PP
-If you want to allow confined virtual guests to interact with the sanloc, you must turn on the virt_use_sanlock boolean.
+If you want to allow sanlock to read/write fuse files, you must turn on the sanlock_use_fusefs boolean.
+
+.EX
+.B setsebool -P sanlock_use_fusefs 1
+.EE
+
+.PP
+If you want to allow sanlock to manage cifs files, you must turn on the sanlock_use_samba boolean.
+
+.EX
+.B setsebool -P sanlock_use_samba 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to interact with the sanlock, you must turn on the virt_use_sanlock boolean.
 
 .EX
 .B setsebool -P virt_use_sanlock 1
 .EE
 
 .PP
-If you want to allow confined virtual guests to manage nfs file, you must turn on the sanlock_use_nfs boolean.
+If you want to allow sanlock to manage nfs files, you must turn on the sanlock_use_nfs boolean.
 
 .EX
 .B setsebool -P sanlock_use_nfs 1
 .EE
 
 .PP
-If you want to allow confined virtual guests to manage cifs file, you must turn on the sanlock_use_samba boolean.
+If you want to allow sanlock to read/write fuse files, you must turn on the sanlock_use_fusefs boolean.
+
+.EX
+.B setsebool -P sanlock_use_fusefs 1
+.EE
+
+.PP
+If you want to allow sanlock to manage cifs files, you must turn on the sanlock_use_samba boolean.
 
 .EX
 .B setsebool -P sanlock_use_samba 1
 .EE
 
+.PP
+If you want to allow confined virtual guests to interact with the sanlock, you must turn on the virt_use_sanlock boolean.
+
+.EX
+.B setsebool -P virt_use_sanlock 1
+.EE
+
+.PP
+If you want to allow sanlock to manage nfs files, you must turn on the sanlock_use_nfs boolean.
+
+.EX
+.B setsebool -P sanlock_use_nfs 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux sanlock policy is very flexible allowing users to setup their sanlock processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for sanlock:
 
 
 .EX
 .PP
-.B sanlock_exec_t 
+.B sanlock_exec_t
 .EE
 
 - Set files with the sanlock_exec_t type, if you want to transition an executable to the sanlock_t domain.
@@ -58,7 +117,7 @@
 
 .EX
 .PP
-.B sanlock_initrc_exec_t 
+.B sanlock_initrc_exec_t
 .EE
 
 - Set files with the sanlock_initrc_exec_t type, if you want to transition an executable to the sanlock_initrc_t domain.
@@ -66,7 +125,7 @@
 
 .EX
 .PP
-.B sanlock_log_t 
+.B sanlock_log_t
 .EE
 
 - Set files with the sanlock_log_t type, if you want to treat the data as sanlock log data, usually stored under the /var/log directory.
@@ -74,7 +133,7 @@
 
 .EX
 .PP
-.B sanlock_var_run_t 
+.B sanlock_var_run_t
 .EE
 
 - Set files with the sanlock_var_run_t type, if you want to store the sanlock files under the /run directory.
@@ -82,28 +141,84 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sanlock policy is very flexible allowing users to setup their sanlock processes in as secure a method as possible.
-.PP 
-The following process types are defined for sanlock:
+.SH "MANAGED FILES"
 
-.EX
-.B sanlock_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sanlock_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sanlock_log_t
+
+	/var/log/sanlock\.log.*
+.br
+
+.br
+.B sanlock_var_run_t
+
+	/var/run/sanlock(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B virt_var_lib_t
+
+	/var/lib/oz(/.*)?
+.br
+	/var/lib/libvirt(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -119,12 +234,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sanlock(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), sanlock(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/saslauthd_selinux.8 serefpolicy-3.7.19/man/man8/saslauthd_selinux.8
--- nsaserefpolicy/man/man8/saslauthd_selinux.8	2013-03-15 11:41:10.079153461 +0100
+++ serefpolicy-3.7.19/man/man8/saslauthd_selinux.8	2013-03-15 11:39:54.152151728 +0100
@@ -1,36 +1,73 @@
-.TH  "saslauthd_selinux"  "8"  "saslauthd" "dwalsh@redhat.com" "saslauthd SELinux Policy documentation"
+.TH  "saslauthd_selinux"  "8"  "13-01-04" "saslauthd" "SELinux Policy documentation for saslauthd"
 .SH "NAME"
 saslauthd_selinux \- Security Enhanced Linux Policy for the saslauthd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the saslauthd processes via flexible mandatory access control.
 
+The saslauthd processes execute with the saslauthd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep saslauthd_t
+
+
+.SH "ENTRYPOINTS"
+
+The saslauthd_t SELinux type can be entered via the "saslauthd_exec_t" file type.  The default entrypoint paths for the saslauthd_t domain are the following:"
+
+/usr/sbin/saslauthd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux saslauthd policy is very flexible allowing users to setup their saslauthd processes in as secure a method as possible.
+.PP
+The following process types are defined for saslauthd:
+
+.EX
+.B saslauthd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a saslauthd_t
+
+can be used to make the process type saslauthd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  saslauthd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run saslauthd with the tightest access possible.
 
 
 .PP
-If you want to allow sasl to read shado, you must turn on the allow_saslauthd_read_shadow boolean.
+If you want to allow sasl to read shadow, you must turn on the allow_saslauthd_read_shadow boolean.
+
+.EX
+.B setsebool -P allow_saslauthd_read_shadow 1
+.EE
+
+.PP
+If you want to allow sasl to read shadow, you must turn on the allow_saslauthd_read_shadow boolean.
 
 .EX
 .B setsebool -P allow_saslauthd_read_shadow 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux saslauthd policy is very flexible allowing users to setup their saslauthd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for saslauthd:
 
 
 .EX
 .PP
-.B saslauthd_exec_t 
+.B saslauthd_exec_t
 .EE
 
 - Set files with the saslauthd_exec_t type, if you want to transition an executable to the saslauthd_t domain.
@@ -38,7 +75,7 @@
 
 .EX
 .PP
-.B saslauthd_initrc_exec_t 
+.B saslauthd_initrc_exec_t
 .EE
 
 - Set files with the saslauthd_initrc_exec_t type, if you want to transition an executable to the saslauthd_initrc_t domain.
@@ -46,7 +83,7 @@
 
 .EX
 .PP
-.B saslauthd_keytab_t 
+.B saslauthd_keytab_t
 .EE
 
 - Set files with the saslauthd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -54,7 +91,7 @@
 
 .EX
 .PP
-.B saslauthd_var_run_t 
+.B saslauthd_var_run_t
 .EE
 
 - Set files with the saslauthd_var_run_t type, if you want to store the saslauthd files under the /run directory.
@@ -62,28 +99,114 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux saslauthd policy is very flexible allowing users to setup their saslauthd processes in as secure a method as possible.
-.PP 
-The following process types are defined for saslauthd:
+.SH "MANAGED FILES"
 
-.EX
-.B saslauthd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type saslauthd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B saslauthd_var_run_t
+
+	/var/run/saslauthd(/.*)?
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -99,12 +222,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), saslauthd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), saslauthd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/sblim_gatherd_selinux.8 serefpolicy-3.7.19/man/man8/sblim_gatherd_selinux.8
--- nsaserefpolicy/man/man8/sblim_gatherd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/sblim_gatherd_selinux.8	2013-03-15 11:40:03.053151931 +0100
@@ -0,0 +1,96 @@
+.TH  "sblim_gatherd_selinux"  "8"  "13-01-04" "sblim_gatherd" "SELinux Policy documentation for sblim_gatherd"
+.SH "NAME"
+sblim_gatherd_selinux \- Security Enhanced Linux Policy for the sblim_gatherd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the sblim_gatherd processes via flexible mandatory access control.
+
+The sblim_gatherd processes execute with the sblim_gatherd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep sblim_gatherd_t
+
+
+.SH "ENTRYPOINTS"
+
+The sblim_gatherd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,sblim_gatherd_exec_t" file types.  The default entrypoint paths for the sblim_gatherd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/gatherd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sblim_gatherd policy is very flexible allowing users to setup their sblim_gatherd processes in as secure a method as possible.
+.PP
+The following process types are defined for sblim_gatherd:
+
+.EX
+.B sblim_gatherd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sblim_gatherd_t
+
+can be used to make the process type sblim_gatherd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux sblim_gatherd policy is very flexible allowing users to setup their sblim_gatherd processes in as secure a method as possible.
+.PP
+The following file types are defined for sblim_gatherd:
+
+
+.EX
+.PP
+.B sblim_gatherd_exec_t
+.EE
+
+- Set files with the sblim_gatherd_exec_t type, if you want to transition an executable to the sblim_gatherd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type sblim_gatherd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), sblim_gatherd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, sblim_reposd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/sblim_reposd_selinux.8 serefpolicy-3.7.19/man/man8/sblim_reposd_selinux.8
--- nsaserefpolicy/man/man8/sblim_reposd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/sblim_reposd_selinux.8	2013-03-15 11:39:54.858151744 +0100
@@ -0,0 +1,96 @@
+.TH  "sblim_reposd_selinux"  "8"  "13-01-04" "sblim_reposd" "SELinux Policy documentation for sblim_reposd"
+.SH "NAME"
+sblim_reposd_selinux \- Security Enhanced Linux Policy for the sblim_reposd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the sblim_reposd processes via flexible mandatory access control.
+
+The sblim_reposd processes execute with the sblim_reposd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep sblim_reposd_t
+
+
+.SH "ENTRYPOINTS"
+
+The sblim_reposd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,sblim_reposd_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the sblim_reposd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/reposd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sblim_reposd policy is very flexible allowing users to setup their sblim_reposd processes in as secure a method as possible.
+.PP
+The following process types are defined for sblim_reposd:
+
+.EX
+.B sblim_reposd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sblim_reposd_t
+
+can be used to make the process type sblim_reposd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux sblim_reposd policy is very flexible allowing users to setup their sblim_reposd processes in as secure a method as possible.
+.PP
+The following file types are defined for sblim_reposd:
+
+
+.EX
+.PP
+.B sblim_reposd_exec_t
+.EE
+
+- Set files with the sblim_reposd_exec_t type, if you want to transition an executable to the sblim_reposd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type sblim_reposd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), sblim_reposd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, sblim_gatherd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/sectoolm_selinux.8 serefpolicy-3.7.19/man/man8/sectoolm_selinux.8
--- nsaserefpolicy/man/man8/sectoolm_selinux.8	2013-03-15 11:41:11.847153501 +0100
+++ serefpolicy-3.7.19/man/man8/sectoolm_selinux.8	2013-03-15 11:39:58.335151824 +0100
@@ -1,31 +1,55 @@
-.TH  "sectoolm_selinux"  "8"  "sectoolm" "dwalsh@redhat.com" "sectoolm SELinux Policy documentation"
+.TH  "sectoolm_selinux"  "8"  "13-01-04" "sectoolm" "SELinux Policy documentation for sectoolm"
 .SH "NAME"
 sectoolm_selinux \- Security Enhanced Linux Policy for the sectoolm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sectoolm processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B sectoolm
-(Sectool security audit tool)
-processes via flexible mandatory access
-control.  
+The sectoolm processes execute with the sectoolm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep sectoolm_t
+
+
+.SH "ENTRYPOINTS"
+
+The sectoolm_t SELinux type can be entered via the "sectoolm_exec_t" file type.  The default entrypoint paths for the sectoolm_t domain are the following:"
+
+/usr/libexec/sectool-mechanism\.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sectoolm policy is very flexible allowing users to setup their sectoolm processes in as secure a method as possible.
+.PP
+The following process types are defined for sectoolm:
+
+.EX
+.B sectoolm_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sectoolm_t
+
+can be used to make the process type sectoolm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux sectoolm policy is very flexible allowing users to setup their sectoolm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for sectoolm:
 
 
 .EX
 .PP
-.B sectoolm_exec_t 
+.B sectoolm_exec_t
 .EE
 
 - Set files with the sectoolm_exec_t type, if you want to transition an executable to the sectoolm_t domain.
@@ -33,28 +57,76 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sectoolm policy is very flexible allowing users to setup their sectoolm processes in as secure a method as possible.
-.PP 
-The following process types are defined for sectoolm:
+.SH "MANAGED FILES"
 
-.EX
-.B sectoolm_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sectoolm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B sectool_tmp_t
+
+
+.br
+.B sectool_var_lib_t
+
+	/var/lib/sectool(/.*)?
+.br
+
+.br
+.B sectool_var_log_t
+
+	/var/log/sectool\.log.*
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +139,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sectoolm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), sectoolm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/semanage_selinux.8 serefpolicy-3.7.19/man/man8/semanage_selinux.8
--- nsaserefpolicy/man/man8/semanage_selinux.8	2013-03-15 11:41:12.062153506 +0100
+++ serefpolicy-3.7.19/man/man8/semanage_selinux.8	2013-03-15 11:40:02.106151910 +0100
@@ -1,37 +1,63 @@
-.TH  "semanage_selinux"  "8"  "semanage" "dwalsh@redhat.com" "semanage SELinux Policy documentation"
+.TH  "semanage_selinux"  "8"  "13-01-04" "semanage" "SELinux Policy documentation for semanage"
 .SH "NAME"
 semanage_selinux \- Security Enhanced Linux Policy for the semanage processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the semanage processes via flexible mandatory access control.
 
+The semanage processes execute with the semanage_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep semanage_t
+
+
+.SH "ENTRYPOINTS"
+
+The semanage_t SELinux type can be entered via the "semanage_exec_t" file type.  The default entrypoint paths for the semanage_t domain are the following:"
+
+/usr/sbin/semanage, /usr/sbin/semodule, /usr/share/system-config-selinux/system-config-selinux-dbus\.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux semanage policy is very flexible allowing users to setup their semanage processes in as secure a method as possible.
+.PP
+The following process types are defined for semanage:
+
+.EX
+.B semanage_t
+.EE
+.PP
+Note:
+.B semanage permissive -a semanage_t
+
+can be used to make the process type semanage_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux semanage policy is very flexible allowing users to setup their semanage processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for semanage:
 
 
 .EX
 .PP
-.B semanage_exec_t 
+.B semanage_exec_t
 .EE
 
 - Set files with the semanage_exec_t type, if you want to transition an executable to the semanage_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/share/system-config-selinux/system-config-selinux-dbus\.py, /usr/sbin/semanage, /usr/sbin/semodule
 
 .EX
 .PP
-.B semanage_read_lock_t 
+.B semanage_read_lock_t
 .EE
 
 - Set files with the semanage_read_lock_t type, if you want to treat the files as semanage read lock data, stored under the /var/lock directory
@@ -39,19 +65,15 @@
 
 .EX
 .PP
-.B semanage_store_t 
+.B semanage_store_t
 .EE
 
 - Set files with the semanage_store_t type, if you want to treat the files as semanage store data.
 
-.br
-.TP 5
-Paths: 
-/etc/selinux/([^/]*/)?modules/(active|tmp|previous)(/.*)?, /etc/selinux/([^/]*/)?policy(/.*)?, /etc/share/selinux/mls(/.*)?, /etc/share/selinux/targeted(/.*)?
 
 .EX
 .PP
-.B semanage_tmp_t 
+.B semanage_tmp_t
 .EE
 
 - Set files with the semanage_tmp_t type, if you want to store semanage temporary files in the /tmp directories.
@@ -59,7 +81,7 @@
 
 .EX
 .PP
-.B semanage_trans_lock_t 
+.B semanage_trans_lock_t
 .EE
 
 - Set files with the semanage_trans_lock_t type, if you want to treat the files as semanage trans lock data, stored under the /var/lock directory
@@ -67,28 +89,128 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux semanage policy is very flexible allowing users to setup their semanage processes in as secure a method as possible.
-.PP 
-The following process types are defined for semanage:
+.SH "MANAGED FILES"
 
-.EX
-.B semanage_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type semanage_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B boolean_type
+
+
+.br
+.B default_context_t
+
+	/etc/selinux/([^/]*/)?contexts(/.*)?
+.br
+	/root/\.default_contexts
+.br
+
+.br
+.B file_context_t
+
+	/etc/selinux/([^/]*/)?contexts/files(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B selinux_config_t
+
+	/etc/selinux(/.*)?
+.br
+	/etc/selinux/([^/]*/)?seusers
+.br
+	/etc/selinux/([^/]*/)?users(/.*)?
+.br
+	/etc/selinux/([^/]*/)?setrans\.conf
+.br
+
+.br
+.B selinux_var_lib_t
+
+	/var/lib/selinux(/.*)?
+.br
+
+.br
+.B semanage_read_lock_t
+
+	/etc/selinux/([^/]*/)?modules/semanage\.read\.LOCK
+.br
+
+.br
+.B semanage_store_t
+
+	/etc/selinux/([^/]*/)?policy(/.*)?
+.br
+	/etc/selinux/([^/]*/)?modules/(active|tmp|previous)(/.*)?
+.br
+	/etc/share/selinux/mls(/.*)?
+.br
+	/etc/share/selinux/targeted(/.*)?
+.br
+
+.br
+.B semanage_tmp_t
+
+
+.br
+.B semanage_trans_lock_t
+
+	/etc/selinux/([^/]*/)?modules/semanage\.trans\.LOCK
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -101,11 +223,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), semanage(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/sendmail_selinux.8 serefpolicy-3.7.19/man/man8/sendmail_selinux.8
--- nsaserefpolicy/man/man8/sendmail_selinux.8	2013-03-15 11:41:12.168153508 +0100
+++ serefpolicy-3.7.19/man/man8/sendmail_selinux.8	2013-03-15 11:40:04.451151963 +0100
@@ -1,61 +1,95 @@
-.TH  "sendmail_selinux"  "8"  "sendmail" "dwalsh@redhat.com" "sendmail SELinux Policy documentation"
+.TH  "sendmail_selinux"  "8"  "13-01-04" "sendmail" "SELinux Policy documentation for sendmail"
 .SH "NAME"
 sendmail_selinux \- Security Enhanced Linux Policy for the sendmail processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sendmail processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B sendmail
-(Policy for sendmail)
-processes via flexible mandatory access
-control.  
+The sendmail processes execute with the sendmail_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep sendmail_t
+
+
+.SH "ENTRYPOINTS"
+
+The sendmail_t SELinux type can be entered via the "sendmail_exec_t,mta_exec_type" file types.  The default entrypoint paths for the sendmail_t domain are the following:"
+
+/usr/lib(64)?/sendmail, /bin/mail(x)?, /usr/sbin/sendmail(\.sendmail)?, /usr/bin/esmtp, /usr/sbin/ssmtp, /usr/sbin/rmail, /var/qmail/bin/sendmail, /usr/sbin/sendmail\.postfix, /usr/lib/courier/bin/sendmail
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sendmail policy is very flexible allowing users to setup their sendmail processes in as secure a method as possible.
+.PP
+The following process types are defined for sendmail:
+
+.EX
+.B sendmail_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sendmail_t
+
+can be used to make the process type sendmail_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  sendmail policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sendmail with the tightest access possible.
 
 
 .PP
-If you want to allow http daemon to send mai, you must turn on the httpd_can_sendmail boolean.
+If you want to allow http daemon to send mail, you must turn on the httpd_can_sendmail boolean.
 
 .EX
 .B setsebool -P httpd_can_sendmail 1
 .EE
 
 .PP
-If you want to allow syslogd daemon to send mai, you must turn on the logging_syslogd_can_sendmail boolean.
+If you want to allow syslogd daemon to send mail, you must turn on the logging_syslogd_can_sendmail boolean.
+
+.EX
+.B setsebool -P logging_syslogd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow http daemon to send mail, you must turn on the httpd_can_sendmail boolean.
+
+.EX
+.B setsebool -P httpd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow syslogd daemon to send mail, you must turn on the logging_syslogd_can_sendmail boolean.
 
 .EX
 .B setsebool -P logging_syslogd_can_sendmail 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux sendmail policy is very flexible allowing users to setup their sendmail processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for sendmail:
 
 
 .EX
 .PP
-.B sendmail_exec_t 
+.B sendmail_exec_t
 .EE
 
 - Set files with the sendmail_exec_t type, if you want to transition an executable to the sendmail_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/ssmtp, /usr/lib(64)?/sendmail, /usr/sbin/rmail, /usr/bin/esmtp, /var/qmail/bin/sendmail, /usr/sbin/sendmail\.postfix, /usr/lib/courier/bin/sendmail, /bin/mail(x)?, /usr/sbin/sendmail(\.sendmail)?
 
 .EX
 .PP
-.B sendmail_initrc_exec_t 
+.B sendmail_initrc_exec_t
 .EE
 
 - Set files with the sendmail_initrc_exec_t type, if you want to transition an executable to the sendmail_initrc_t domain.
@@ -63,7 +97,7 @@
 
 .EX
 .PP
-.B sendmail_keytab_t 
+.B sendmail_keytab_t
 .EE
 
 - Set files with the sendmail_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -71,19 +105,15 @@
 
 .EX
 .PP
-.B sendmail_log_t 
+.B sendmail_log_t
 .EE
 
 - Set files with the sendmail_log_t type, if you want to treat the data as sendmail log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/sendmail\.st, /var/log/mail(/.*)?
 
 .EX
 .PP
-.B sendmail_tmp_t 
+.B sendmail_tmp_t
 .EE
 
 - Set files with the sendmail_tmp_t type, if you want to store sendmail temporary files in the /tmp directories.
@@ -91,40 +121,146 @@
 
 .EX
 .PP
-.B sendmail_var_run_t 
+.B sendmail_var_run_t
 .EE
 
 - Set files with the sendmail_var_run_t type, if you want to store the sendmail files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/sendmail\.pid, /var/run/sm-client\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sendmail policy is very flexible allowing users to setup their sendmail processes in as secure a method as possible.
-.PP 
-The following process types are defined for sendmail:
+.SH "MANAGED FILES"
 
-.EX
-.B sendmail_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sendmail_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B dovecot_spool_t
+
+	/var/spool/dovecot(/.*)?
+.br
+
+.br
+.B etc_aliases_t
+
+	/etc/postfix/aliases.*
+.br
+	/etc/aliases
+.br
+	/etc/aliases\.db
+.br
+	/etc/mail/aliases
+.br
+	/etc/mail/aliases\.db
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_home_rw_t
+
+	/root/Maildir(/.*)?
+.br
+	/home/[^/]*/Maildir(/.*)?
+.br
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mqueue_spool_t
+
+	/var/spool/(client)?mqueue(/.*)?
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B procmail_tmp_t
+
+
+.br
+.B sendmail_log_t
+
+	/var/log/mail(/.*)?
+.br
+	/var/log/sendmail\.st.*
+.br
+
+.br
+.B sendmail_tmp_t
+
+
+.br
+.B sendmail_var_run_t
+
+	/var/run/sendmail\.pid
+.br
+	/var/run/sm-client\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -140,12 +276,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sendmail(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), sendmail(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/sensord_selinux.8 serefpolicy-3.7.19/man/man8/sensord_selinux.8
--- nsaserefpolicy/man/man8/sensord_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/sensord_selinux.8	2013-03-15 11:40:05.891151996 +0100
@@ -0,0 +1,103 @@
+.TH  "sensord_selinux"  "8"  "13-01-04" "sensord" "SELinux Policy documentation for sensord"
+.SH "NAME"
+sensord_selinux \- Security Enhanced Linux Policy for the sensord processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the sensord processes via flexible mandatory access control.
+
+The sensord processes execute with the sensord_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep sensord_t
+
+
+.SH "ENTRYPOINTS"
+
+The sensord_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,sensord_exec_t" file types.  The default entrypoint paths for the sensord_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/sensord
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sensord policy is very flexible allowing users to setup their sensord processes in as secure a method as possible.
+.PP
+The following process types are defined for sensord:
+
+.EX
+.B sensord_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sensord_t
+
+can be used to make the process type sensord_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux sensord policy is very flexible allowing users to setup their sensord processes in as secure a method as possible.
+.PP
+The following file types are defined for sensord:
+
+
+.EX
+.PP
+.B sensord_exec_t
+.EE
+
+- Set files with the sensord_exec_t type, if you want to transition an executable to the sensord_t domain.
+
+
+.EX
+.PP
+.B sensord_var_run_t
+.EE
+
+- Set files with the sensord_var_run_t type, if you want to store the sensord files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type sensord_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), sensord(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/setfiles_selinux.8 serefpolicy-3.7.19/man/man8/setfiles_selinux.8
--- nsaserefpolicy/man/man8/setfiles_selinux.8	2013-03-15 11:41:09.837153455 +0100
+++ serefpolicy-3.7.19/man/man8/setfiles_selinux.8	2013-03-15 11:39:53.994151724 +0100
@@ -1,58 +1,116 @@
-.TH  "setfiles_selinux"  "8"  "setfiles" "dwalsh@redhat.com" "setfiles SELinux Policy documentation"
+.TH  "setfiles_selinux"  "8"  "13-01-04" "setfiles" "SELinux Policy documentation for setfiles"
 .SH "NAME"
 setfiles_selinux \- Security Enhanced Linux Policy for the setfiles processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the setfiles processes via flexible mandatory access control.
 
+The setfiles processes execute with the setfiles_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep setfiles_t
+
+
+.SH "ENTRYPOINTS"
+
+The setfiles_t SELinux type can be entered via the "setfiles_exec_t" file type.  The default entrypoint paths for the setfiles_t domain are the following:"
+
+/sbin/setfiles.*, /usr/sbin/setfiles.*, /sbin/restorecon
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux setfiles policy is very flexible allowing users to setup their setfiles processes in as secure a method as possible.
+.PP
+The following process types are defined for setfiles:
+
+.EX
+.B setfiles_mac_t, setfiles_t
+.EE
+.PP
+Note:
+.B semanage permissive -a setfiles_t
+
+can be used to make the process type setfiles_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux setfiles policy is very flexible allowing users to setup their setfiles processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for setfiles:
 
 
 .EX
 .PP
-.B setfiles_exec_t 
+.B setfiles_exec_t
 .EE
 
 - Set files with the setfiles_exec_t type, if you want to transition an executable to the setfiles_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/setfiles.*, /sbin/restorecon, /usr/sbin/setfiles.*
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux setfiles policy is very flexible allowing users to setup their setfiles processes in as secure a method as possible.
-.PP 
-The following process types are defined for setfiles:
+.SH "MANAGED FILES"
 
-.EX
-.B setfiles_mac_t, setfiles_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type setfiles_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +123,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), setfiles(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), setfiles(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/setkey_selinux.8 serefpolicy-3.7.19/man/man8/setkey_selinux.8
--- nsaserefpolicy/man/man8/setkey_selinux.8	2013-03-15 11:41:12.231153510 +0100
+++ serefpolicy-3.7.19/man/man8/setkey_selinux.8	2013-03-15 11:40:07.134152024 +0100
@@ -1,58 +1,112 @@
-.TH  "setkey_selinux"  "8"  "setkey" "dwalsh@redhat.com" "setkey SELinux Policy documentation"
+.TH  "setkey_selinux"  "8"  "13-01-04" "setkey" "SELinux Policy documentation for setkey"
 .SH "NAME"
 setkey_selinux \- Security Enhanced Linux Policy for the setkey processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the setkey processes via flexible mandatory access control.
 
+The setkey processes execute with the setkey_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep setkey_t
+
+
+.SH "ENTRYPOINTS"
+
+The setkey_t SELinux type can be entered via the "setkey_exec_t" file type.  The default entrypoint paths for the setkey_t domain are the following:"
+
+/sbin/setkey, /usr/sbin/setkey
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux setkey policy is very flexible allowing users to setup their setkey processes in as secure a method as possible.
+.PP
+The following process types are defined for setkey:
+
+.EX
+.B setkey_t
+.EE
+.PP
+Note:
+.B semanage permissive -a setkey_t
+
+can be used to make the process type setkey_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux setkey policy is very flexible allowing users to setup their setkey processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for setkey:
 
 
 .EX
 .PP
-.B setkey_exec_t 
+.B setkey_exec_t
 .EE
 
 - Set files with the setkey_exec_t type, if you want to transition an executable to the setkey_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/setkey, /sbin/setkey
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux setkey policy is very flexible allowing users to setup their setkey processes in as secure a method as possible.
-.PP 
-The following process types are defined for setkey:
+.SH "MANAGED FILES"
 
-.EX
-.B setkey_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type setkey_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), setkey(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), setkey(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/setrans_selinux.8 serefpolicy-3.7.19/man/man8/setrans_selinux.8
--- nsaserefpolicy/man/man8/setrans_selinux.8	2013-03-15 11:41:11.936153503 +0100
+++ serefpolicy-3.7.19/man/man8/setrans_selinux.8	2013-03-15 11:40:00.292151868 +0100
@@ -1,31 +1,55 @@
-.TH  "setrans_selinux"  "8"  "setrans" "dwalsh@redhat.com" "setrans SELinux Policy documentation"
+.TH  "setrans_selinux"  "8"  "13-01-04" "setrans" "SELinux Policy documentation for setrans"
 .SH "NAME"
 setrans_selinux \- Security Enhanced Linux Policy for the setrans processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the setrans processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B setrans
-(SELinux MLS/MCS label translation service)
-processes via flexible mandatory access
-control.  
+The setrans processes execute with the setrans_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep setrans_t
+
+
+.SH "ENTRYPOINTS"
+
+The setrans_t SELinux type can be entered via the "setrans_exec_t" file type.  The default entrypoint paths for the setrans_t domain are the following:"
+
+/sbin/mcstransd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux setrans policy is very flexible allowing users to setup their setrans processes in as secure a method as possible.
+.PP
+The following process types are defined for setrans:
+
+.EX
+.B setrans_t
+.EE
+.PP
+Note:
+.B semanage permissive -a setrans_t
+
+can be used to make the process type setrans_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux setrans policy is very flexible allowing users to setup their setrans processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for setrans:
 
 
 .EX
 .PP
-.B setrans_exec_t 
+.B setrans_exec_t
 .EE
 
 - Set files with the setrans_exec_t type, if you want to transition an executable to the setrans_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B setrans_initrc_exec_t 
+.B setrans_initrc_exec_t
 .EE
 
 - Set files with the setrans_initrc_exec_t type, if you want to transition an executable to the setrans_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B setrans_var_run_t 
+.B setrans_var_run_t
 .EE
 
 - Set files with the setrans_var_run_t type, if you want to store the setrans files under the /run directory.
@@ -49,28 +73,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux setrans policy is very flexible allowing users to setup their setrans processes in as secure a method as possible.
-.PP 
-The following process types are defined for setrans:
+.SH "MANAGED FILES"
 
-.EX
-.B setrans_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type setrans_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B setrans_var_run_t
+
+	/var/run/setrans(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +153,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), setrans(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), setrans(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/setroubleshootd_selinux.8 serefpolicy-3.7.19/man/man8/setroubleshootd_selinux.8
--- nsaserefpolicy/man/man8/setroubleshootd_selinux.8	2013-03-15 11:41:12.172153508 +0100
+++ serefpolicy-3.7.19/man/man8/setroubleshootd_selinux.8	2013-03-15 11:40:05.049151977 +0100
@@ -1,57 +1,55 @@
-.TH  "setroubleshootd_selinux"  "8"  "setroubleshootd" "dwalsh@redhat.com" "setroubleshootd SELinux Policy documentation"
+.TH  "setroubleshootd_selinux"  "8"  "13-01-04" "setroubleshootd" "SELinux Policy documentation for setroubleshootd"
 .SH "NAME"
 setroubleshootd_selinux \- Security Enhanced Linux Policy for the setroubleshootd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the setroubleshootd processes via flexible mandatory access control.
 
+The setroubleshootd processes execute with the setroubleshootd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-.PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
-.PP
-Policy governs the access confined processes have to these files. 
-SELinux setroubleshootd policy is very flexible allowing users to setup their setroubleshootd processes in as secure a method as possible.
-.PP 
-The following file types are defined for setroubleshootd:
+.B ps -eZ | grep setroubleshootd_t
 
 
-.EX
-.PP
-.B setroubleshoot_fixit_exec_t 
-.EE
+.SH "ENTRYPOINTS"
 
-- Set files with the setroubleshoot_fixit_exec_t type, if you want to transition an executable to the setroubleshoot_fixit_t domain.
+The setroubleshootd_t SELinux type can be entered via the "setroubleshootd_exec_t" file type.  The default entrypoint paths for the setroubleshootd_t domain are the following:"
 
-
-.EX
+/usr/sbin/setroubleshootd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-.B setroubleshoot_var_lib_t 
-.EE
-
-- Set files with the setroubleshoot_var_lib_t type, if you want to store the setroubleshoot files under the /var/lib directory.
-
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux setroubleshootd policy is very flexible allowing users to setup their setroubleshootd processes in as secure a method as possible.
+.PP
+The following process types are defined for setroubleshootd:
 
 .EX
-.PP
-.B setroubleshoot_var_log_t 
+.B setroubleshoot_fixit_t, setroubleshootd_t
 .EE
+.PP
+Note:
+.B semanage permissive -a setroubleshootd_t
 
-- Set files with the setroubleshoot_var_log_t type, if you want to treat the data as setroubleshoot var log data, usually stored under the /var/log directory.
-
+can be used to make the process type setroubleshootd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
-.EX
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
 .PP
-.B setroubleshoot_var_run_t 
-.EE
-
-- Set files with the setroubleshoot_var_run_t type, if you want to store the setroubleshoot files under the /run directory.
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux setroubleshootd policy is very flexible allowing users to setup their setroubleshootd processes in as secure a method as possible.
+.PP
+The following file types are defined for setroubleshootd:
 
 
 .EX
 .PP
-.B setroubleshootd_exec_t 
+.B setroubleshootd_exec_t
 .EE
 
 - Set files with the setroubleshootd_exec_t type, if you want to transition an executable to the setroubleshootd_t domain.
@@ -59,28 +57,86 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux setroubleshootd policy is very flexible allowing users to setup their setroubleshootd processes in as secure a method as possible.
-.PP 
-The following process types are defined for setroubleshootd:
+.SH "MANAGED FILES"
 
-.EX
-.B setroubleshoot_fixit_t, setroubleshootd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type setroubleshootd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B setroubleshoot_var_lib_t
+
+	/var/lib/setroubleshoot(/.*)?
+.br
+
+.br
+.B setroubleshoot_var_log_t
+
+	/var/log/setroubleshoot(/.*)?
+.br
+
+.br
+.B setroubleshoot_var_run_t
+
+	/var/run/setroubleshoot(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -93,11 +149,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), setroubleshootd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), setroubleshootd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setroubleshoot_fixit_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/setroubleshoot_fixit_selinux.8 serefpolicy-3.7.19/man/man8/setroubleshoot_fixit_selinux.8
--- nsaserefpolicy/man/man8/setroubleshoot_fixit_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/setroubleshoot_fixit_selinux.8	2013-03-15 11:40:01.876151904 +0100
@@ -0,0 +1,132 @@
+.TH  "setroubleshoot_fixit_selinux"  "8"  "13-01-04" "setroubleshoot_fixit" "SELinux Policy documentation for setroubleshoot_fixit"
+.SH "NAME"
+setroubleshoot_fixit_selinux \- Security Enhanced Linux Policy for the setroubleshoot_fixit processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the setroubleshoot_fixit processes via flexible mandatory access control.
+
+The setroubleshoot_fixit processes execute with the setroubleshoot_fixit_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep setroubleshoot_fixit_t
+
+
+.SH "ENTRYPOINTS"
+
+The setroubleshoot_fixit_t SELinux type can be entered via the "setroubleshoot_fixit_exec_t" file type.  The default entrypoint paths for the setroubleshoot_fixit_t domain are the following:"
+
+/usr/share/setroubleshoot/SetroubleshootFixit\.py*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux setroubleshoot_fixit policy is very flexible allowing users to setup their setroubleshoot_fixit processes in as secure a method as possible.
+.PP
+The following process types are defined for setroubleshoot_fixit:
+
+.EX
+.B setroubleshoot_fixit_t
+.EE
+.PP
+Note:
+.B semanage permissive -a setroubleshoot_fixit_t
+
+can be used to make the process type setroubleshoot_fixit_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux setroubleshoot_fixit policy is very flexible allowing users to setup their setroubleshoot_fixit processes in as secure a method as possible.
+.PP
+The following file types are defined for setroubleshoot_fixit:
+
+
+.EX
+.PP
+.B setroubleshoot_fixit_exec_t
+.EE
+
+- Set files with the setroubleshoot_fixit_exec_t type, if you want to transition an executable to the setroubleshoot_fixit_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type setroubleshoot_fixit_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), setroubleshoot_fixit(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setroubleshootd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/setsebool_selinux.8 serefpolicy-3.7.19/man/man8/setsebool_selinux.8
--- nsaserefpolicy/man/man8/setsebool_selinux.8	2013-03-15 11:41:10.171153463 +0100
+++ serefpolicy-3.7.19/man/man8/setsebool_selinux.8	2013-03-15 11:39:54.239151730 +0100
@@ -1,25 +1,55 @@
-.TH  "setsebool_selinux"  "8"  "setsebool" "dwalsh@redhat.com" "setsebool SELinux Policy documentation"
+.TH  "setsebool_selinux"  "8"  "13-01-04" "setsebool" "SELinux Policy documentation for setsebool"
 .SH "NAME"
 setsebool_selinux \- Security Enhanced Linux Policy for the setsebool processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the setsebool processes via flexible mandatory access control.
 
+The setsebool processes execute with the setsebool_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep setsebool_t
+
+
+.SH "ENTRYPOINTS"
+
+The setsebool_t SELinux type can be entered via the "setsebool_exec_t" file type.  The default entrypoint paths for the setsebool_t domain are the following:"
+
+/usr/sbin/setsebool
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux setsebool policy is very flexible allowing users to setup their setsebool processes in as secure a method as possible.
+.PP
+The following process types are defined for setsebool:
+
+.EX
+.B setsebool_t
+.EE
+.PP
+Note:
+.B semanage permissive -a setsebool_t
+
+can be used to make the process type setsebool_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux setsebool policy is very flexible allowing users to setup their setsebool processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for setsebool:
 
 
 .EX
 .PP
-.B setsebool_exec_t 
+.B setsebool_exec_t
 .EE
 
 - Set files with the setsebool_exec_t type, if you want to transition an executable to the setsebool_t domain.
@@ -27,28 +57,114 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux setsebool policy is very flexible allowing users to setup their setsebool processes in as secure a method as possible.
-.PP 
-The following process types are defined for setsebool:
+.SH "MANAGED FILES"
 
-.EX
-.B setsebool_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type setsebool_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B boolean_type
+
+
+.br
+.B default_context_t
+
+	/etc/selinux/([^/]*/)?contexts(/.*)?
+.br
+	/root/\.default_contexts
+.br
+
+.br
+.B file_context_t
+
+	/etc/selinux/([^/]*/)?contexts/files(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B selinux_config_t
+
+	/etc/selinux(/.*)?
+.br
+	/etc/selinux/([^/]*/)?seusers
+.br
+	/etc/selinux/([^/]*/)?users(/.*)?
+.br
+	/etc/selinux/([^/]*/)?setrans\.conf
+.br
+
+.br
+.B semanage_read_lock_t
+
+	/etc/selinux/([^/]*/)?modules/semanage\.read\.LOCK
+.br
+
+.br
+.B semanage_store_t
+
+	/etc/selinux/([^/]*/)?policy(/.*)?
+.br
+	/etc/selinux/([^/]*/)?modules/(active|tmp|previous)(/.*)?
+.br
+	/etc/share/selinux/mls(/.*)?
+.br
+	/etc/share/selinux/targeted(/.*)?
+.br
+
+.br
+.B semanage_tmp_t
+
+
+.br
+.B semanage_trans_lock_t
+
+	/etc/selinux/([^/]*/)?modules/semanage\.trans\.LOCK
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +177,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), setsebool(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), setsebool(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/sge_execd_selinux.8 serefpolicy-3.7.19/man/man8/sge_execd_selinux.8
--- nsaserefpolicy/man/man8/sge_execd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/sge_execd_selinux.8	2013-03-15 11:40:03.833151949 +0100
@@ -0,0 +1,96 @@
+.TH  "sge_execd_selinux"  "8"  "13-01-04" "sge_execd" "SELinux Policy documentation for sge_execd"
+.SH "NAME"
+sge_execd_selinux \- Security Enhanced Linux Policy for the sge_execd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the sge_execd processes via flexible mandatory access control.
+
+The sge_execd processes execute with the sge_execd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep sge_execd_t
+
+
+.SH "ENTRYPOINTS"
+
+The sge_execd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sge_execd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the sge_execd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/sge_execd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sge_execd policy is very flexible allowing users to setup their sge_execd processes in as secure a method as possible.
+.PP
+The following process types are defined for sge_execd:
+
+.EX
+.B sge_execd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sge_execd_t
+
+can be used to make the process type sge_execd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux sge_execd policy is very flexible allowing users to setup their sge_execd processes in as secure a method as possible.
+.PP
+The following file types are defined for sge_execd:
+
+
+.EX
+.PP
+.B sge_execd_exec_t
+.EE
+
+- Set files with the sge_execd_exec_t type, if you want to transition an executable to the sge_execd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type sge_execd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), sge_execd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, sge_job_selinux(8), sge_shepherd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/sge_job_selinux.8 serefpolicy-3.7.19/man/man8/sge_job_selinux.8
--- nsaserefpolicy/man/man8/sge_job_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/sge_job_selinux.8	2013-03-15 11:39:58.041151817 +0100
@@ -0,0 +1,96 @@
+.TH  "sge_job_selinux"  "8"  "13-01-04" "sge_job" "SELinux Policy documentation for sge_job"
+.SH "NAME"
+sge_job_selinux \- Security Enhanced Linux Policy for the sge_job processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the sge_job processes via flexible mandatory access control.
+
+The sge_job processes execute with the sge_job_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep sge_job_t
+
+
+.SH "ENTRYPOINTS"
+
+The sge_job_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sge_job_exec_t,sysctl_type,filesystem_type,file_type,shell_exec_t" file types.  The default entrypoint paths for the sge_job_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /bin/d?ash, /bin/zsh.*, /bin/ksh.*, /bin/yash, /bin/mksh, /bin/sash, /bin/tcsh, /bin/bash, /bin/fish, /bin/bash2, /usr/bin/fish, /sbin/nologin, /usr/sbin/sesh, /usr/sbin/smrsh, /usr/bin/scponly, /usr/libexec/sesh, /usr/sbin/scponlyc, /usr/bin/git-shell, /usr/libexec/git-core/git-shell
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sge_job policy is very flexible allowing users to setup their sge_job processes in as secure a method as possible.
+.PP
+The following process types are defined for sge_job:
+
+.EX
+.B sge_job_ssh_t, sge_job_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sge_job_t
+
+can be used to make the process type sge_job_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux sge_job policy is very flexible allowing users to setup their sge_job processes in as secure a method as possible.
+.PP
+The following file types are defined for sge_job:
+
+
+.EX
+.PP
+.B sge_job_exec_t
+.EE
+
+- Set files with the sge_job_exec_t type, if you want to transition an executable to the sge_job_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type sge_job_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), sge_job(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, sge_execd_selinux(8), sge_shepherd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/sge_shepherd_selinux.8 serefpolicy-3.7.19/man/man8/sge_shepherd_selinux.8
--- nsaserefpolicy/man/man8/sge_shepherd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/sge_shepherd_selinux.8	2013-03-15 11:40:00.377151870 +0100
@@ -0,0 +1,96 @@
+.TH  "sge_shepherd_selinux"  "8"  "13-01-04" "sge_shepherd" "SELinux Policy documentation for sge_shepherd"
+.SH "NAME"
+sge_shepherd_selinux \- Security Enhanced Linux Policy for the sge_shepherd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the sge_shepherd processes via flexible mandatory access control.
+
+The sge_shepherd processes execute with the sge_shepherd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep sge_shepherd_t
+
+
+.SH "ENTRYPOINTS"
+
+The sge_shepherd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,sge_shepherd_exec_t" file types.  The default entrypoint paths for the sge_shepherd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/sge_shepherd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sge_shepherd policy is very flexible allowing users to setup their sge_shepherd processes in as secure a method as possible.
+.PP
+The following process types are defined for sge_shepherd:
+
+.EX
+.B sge_shepherd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sge_shepherd_t
+
+can be used to make the process type sge_shepherd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux sge_shepherd policy is very flexible allowing users to setup their sge_shepherd processes in as secure a method as possible.
+.PP
+The following file types are defined for sge_shepherd:
+
+
+.EX
+.PP
+.B sge_shepherd_exec_t
+.EE
+
+- Set files with the sge_shepherd_exec_t type, if you want to transition an executable to the sge_shepherd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type sge_shepherd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), sge_shepherd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, sge_execd_selinux(8), sge_job_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/shorewall_selinux.8 serefpolicy-3.7.19/man/man8/shorewall_selinux.8
--- nsaserefpolicy/man/man8/shorewall_selinux.8	2013-03-15 11:41:09.962153458 +0100
+++ serefpolicy-3.7.19/man/man8/shorewall_selinux.8	2013-03-15 11:39:54.101151727 +0100
@@ -1,67 +1,79 @@
-.TH  "shorewall_selinux"  "8"  "shorewall" "dwalsh@redhat.com" "shorewall SELinux Policy documentation"
+.TH  "shorewall_selinux"  "8"  "13-01-04" "shorewall" "SELinux Policy documentation for shorewall"
 .SH "NAME"
 shorewall_selinux \- Security Enhanced Linux Policy for the shorewall processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the shorewall processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B shorewall
-(Shoreline Firewall high-level tool for configuring netfilter)
-processes via flexible mandatory access
-control.  
+The shorewall processes execute with the shorewall_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep shorewall_t
+
+
+.SH "ENTRYPOINTS"
+
+The shorewall_t SELinux type can be entered via the "shorewall_var_lib_t,shorewall_exec_t" file types.  The default entrypoint paths for the shorewall_t domain are the following:"
+
+/var/lib/shorewall(/.*)?, /var/lib/shorewall6(/.*)?, /var/lib/shorewall-lite(/.*)?, /sbin/shorewall6?, /sbin/shorewall-lite
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux shorewall policy is very flexible allowing users to setup their shorewall processes in as secure a method as possible.
+.PP
+The following process types are defined for shorewall:
+
+.EX
+.B shorewall_t
+.EE
+.PP
+Note:
+.B semanage permissive -a shorewall_t
+
+can be used to make the process type shorewall_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux shorewall policy is very flexible allowing users to setup their shorewall processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for shorewall:
 
 
 .EX
 .PP
-.B shorewall_etc_t 
+.B shorewall_etc_t
 .EE
 
 - Set files with the shorewall_etc_t type, if you want to store shorewall files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/etc/shorewall-lite(/.*)?, /etc/shorewall(/.*)?
 
 .EX
 .PP
-.B shorewall_exec_t 
+.B shorewall_exec_t
 .EE
 
 - Set files with the shorewall_exec_t type, if you want to transition an executable to the shorewall_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/shorewall6?, /sbin/shorewall-lite
 
 .EX
 .PP
-.B shorewall_initrc_exec_t 
+.B shorewall_initrc_exec_t
 .EE
 
 - Set files with the shorewall_initrc_exec_t type, if you want to transition an executable to the shorewall_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/shorewall, /etc/rc\.d/init\.d/shorewall-lite
 
 .EX
 .PP
-.B shorewall_lock_t 
+.B shorewall_lock_t
 .EE
 
 - Set files with the shorewall_lock_t type, if you want to treat the files as shorewall lock data, stored under the /var/lock directory
@@ -69,7 +81,7 @@
 
 .EX
 .PP
-.B shorewall_log_t 
+.B shorewall_log_t
 .EE
 
 - Set files with the shorewall_log_t type, if you want to treat the data as shorewall log data, usually stored under the /var/log directory.
@@ -77,7 +89,7 @@
 
 .EX
 .PP
-.B shorewall_tmp_t 
+.B shorewall_tmp_t
 .EE
 
 - Set files with the shorewall_tmp_t type, if you want to store shorewall temporary files in the /tmp directories.
@@ -85,40 +97,110 @@
 
 .EX
 .PP
-.B shorewall_var_lib_t 
+.B shorewall_var_lib_t
 .EE
 
 - Set files with the shorewall_var_lib_t type, if you want to store the shorewall files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/shorewall-lite(/.*)?, /var/lib/shorewall(/.*)?, /var/lib/shorewall6(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux shorewall policy is very flexible allowing users to setup their shorewall processes in as secure a method as possible.
-.PP 
-The following process types are defined for shorewall:
+.SH "MANAGED FILES"
 
-.EX
-.B shorewall_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type shorewall_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B shorewall_lock_t
+
+	/var/lock/subsys/shorewall
+.br
+
+.br
+.B shorewall_log_t
+
+	/var/log/shorewall.*
+.br
+
+.br
+.B shorewall_tmp_t
+
+
+.br
+.B shorewall_var_lib_t
+
+	/var/lib/shorewall(/.*)?
+.br
+	/var/lib/shorewall6(/.*)?
+.br
+	/var/lib/shorewall-lite(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -131,11 +213,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), shorewall(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), shorewall(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/showmount_selinux.8 serefpolicy-3.7.19/man/man8/showmount_selinux.8
--- nsaserefpolicy/man/man8/showmount_selinux.8	2013-03-15 11:41:12.227153510 +0100
+++ serefpolicy-3.7.19/man/man8/showmount_selinux.8	2013-03-15 11:40:06.968152020 +0100
@@ -1,25 +1,55 @@
-.TH  "showmount_selinux"  "8"  "showmount" "dwalsh@redhat.com" "showmount SELinux Policy documentation"
+.TH  "showmount_selinux"  "8"  "13-01-04" "showmount" "SELinux Policy documentation for showmount"
 .SH "NAME"
 showmount_selinux \- Security Enhanced Linux Policy for the showmount processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the showmount processes via flexible mandatory access control.
 
+The showmount processes execute with the showmount_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep showmount_t
+
+
+.SH "ENTRYPOINTS"
+
+The showmount_t SELinux type can be entered via the "showmount_exec_t" file type.  The default entrypoint paths for the showmount_t domain are the following:"
+
+/usr/sbin/showmount
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux showmount policy is very flexible allowing users to setup their showmount processes in as secure a method as possible.
+.PP
+The following process types are defined for showmount:
+
+.EX
+.B showmount_t
+.EE
+.PP
+Note:
+.B semanage permissive -a showmount_t
+
+can be used to make the process type showmount_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux showmount policy is very flexible allowing users to setup their showmount processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for showmount:
 
 
 .EX
 .PP
-.B showmount_exec_t 
+.B showmount_exec_t
 .EE
 
 - Set files with the showmount_exec_t type, if you want to transition an executable to the showmount_t domain.
@@ -27,28 +57,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux showmount policy is very flexible allowing users to setup their showmount processes in as secure a method as possible.
-.PP 
-The following process types are defined for showmount:
+.SH "MANAGED FILES"
 
-.EX
-.B showmount_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type showmount_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +119,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), showmount(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), showmount(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/shutdown_selinux.8 serefpolicy-3.7.19/man/man8/shutdown_selinux.8
--- nsaserefpolicy/man/man8/shutdown_selinux.8	2013-03-15 11:41:12.030153505 +0100
+++ serefpolicy-3.7.19/man/man8/shutdown_selinux.8	2013-03-15 11:40:01.534151896 +0100
@@ -1,31 +1,55 @@
-.TH  "shutdown_selinux"  "8"  "shutdown" "dwalsh@redhat.com" "shutdown SELinux Policy documentation"
+.TH  "shutdown_selinux"  "8"  "13-01-04" "shutdown" "SELinux Policy documentation for shutdown"
 .SH "NAME"
 shutdown_selinux \- Security Enhanced Linux Policy for the shutdown processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the shutdown processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B shutdown
-(policy for shutdown)
-processes via flexible mandatory access
-control.  
+The shutdown processes execute with the shutdown_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep shutdown_t
+
+
+.SH "ENTRYPOINTS"
+
+The shutdown_t SELinux type can be entered via the "shutdown_exec_t" file type.  The default entrypoint paths for the shutdown_t domain are the following:"
+
+/sbin/shutdown
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux shutdown policy is very flexible allowing users to setup their shutdown processes in as secure a method as possible.
+.PP
+The following process types are defined for shutdown:
+
+.EX
+.B shutdown_t
+.EE
+.PP
+Note:
+.B semanage permissive -a shutdown_t
+
+can be used to make the process type shutdown_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux shutdown policy is very flexible allowing users to setup their shutdown processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for shutdown:
 
 
 .EX
 .PP
-.B shutdown_etc_t 
+.B shutdown_etc_t
 .EE
 
 - Set files with the shutdown_etc_t type, if you want to store shutdown files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B shutdown_exec_t 
+.B shutdown_exec_t
 .EE
 
 - Set files with the shutdown_exec_t type, if you want to transition an executable to the shutdown_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B shutdown_var_run_t 
+.B shutdown_var_run_t
 .EE
 
 - Set files with the shutdown_var_run_t type, if you want to store the shutdown files under the /run directory.
@@ -49,28 +73,86 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux shutdown policy is very flexible allowing users to setup their shutdown processes in as secure a method as possible.
-.PP 
-The following process types are defined for shutdown:
+.SH "MANAGED FILES"
 
-.EX
-.B shutdown_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type shutdown_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B shutdown_etc_t
+
+	/etc/nologin
+.br
+
+.br
+.B shutdown_var_run_t
+
+	/var/run/shutdown\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +165,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), shutdown(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), shutdown(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/slapd_selinux.8 serefpolicy-3.7.19/man/man8/slapd_selinux.8
--- nsaserefpolicy/man/man8/slapd_selinux.8	2013-03-15 11:41:10.229153464 +0100
+++ serefpolicy-3.7.19/man/man8/slapd_selinux.8	2013-03-15 11:39:54.365151733 +0100
@@ -1,25 +1,55 @@
-.TH  "slapd_selinux"  "8"  "slapd" "dwalsh@redhat.com" "slapd SELinux Policy documentation"
+.TH  "slapd_selinux"  "8"  "13-01-04" "slapd" "SELinux Policy documentation for slapd"
 .SH "NAME"
 slapd_selinux \- Security Enhanced Linux Policy for the slapd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the slapd processes via flexible mandatory access control.
 
+The slapd processes execute with the slapd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep slapd_t
+
+
+.SH "ENTRYPOINTS"
+
+The slapd_t SELinux type can be entered via the "slapd_exec_t" file type.  The default entrypoint paths for the slapd_t domain are the following:"
+
+/usr/sbin/slapd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux slapd policy is very flexible allowing users to setup their slapd processes in as secure a method as possible.
+.PP
+The following process types are defined for slapd:
+
+.EX
+.B slapd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a slapd_t
+
+can be used to make the process type slapd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux slapd policy is very flexible allowing users to setup their slapd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for slapd:
 
 
 .EX
 .PP
-.B slapd_cert_t 
+.B slapd_cert_t
 .EE
 
 - Set files with the slapd_cert_t type, if you want to treat the files as slapd certificate data.
@@ -27,19 +57,15 @@
 
 .EX
 .PP
-.B slapd_db_t 
+.B slapd_db_t
 .EE
 
 - Set files with the slapd_db_t type, if you want to treat the files as slapd database content.
 
-.br
-.TP 5
-Paths: 
-/etc/openldap/slapd\.d(/.*)?, /var/lib/ldap(/.*)?
 
 .EX
 .PP
-.B slapd_etc_t 
+.B slapd_etc_t
 .EE
 
 - Set files with the slapd_etc_t type, if you want to store slapd files in the /etc directories.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B slapd_exec_t 
+.B slapd_exec_t
 .EE
 
 - Set files with the slapd_exec_t type, if you want to transition an executable to the slapd_t domain.
@@ -55,7 +81,7 @@
 
 .EX
 .PP
-.B slapd_initrc_exec_t 
+.B slapd_initrc_exec_t
 .EE
 
 - Set files with the slapd_initrc_exec_t type, if you want to transition an executable to the slapd_initrc_t domain.
@@ -63,7 +89,7 @@
 
 .EX
 .PP
-.B slapd_keytab_t 
+.B slapd_keytab_t
 .EE
 
 - Set files with the slapd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -71,7 +97,7 @@
 
 .EX
 .PP
-.B slapd_lock_t 
+.B slapd_lock_t
 .EE
 
 - Set files with the slapd_lock_t type, if you want to treat the files as slapd lock data, stored under the /var/lock directory
@@ -79,7 +105,7 @@
 
 .EX
 .PP
-.B slapd_log_t 
+.B slapd_log_t
 .EE
 
 - Set files with the slapd_log_t type, if you want to treat the data as slapd log data, usually stored under the /var/log directory.
@@ -87,7 +113,7 @@
 
 .EX
 .PP
-.B slapd_replog_t 
+.B slapd_replog_t
 .EE
 
 - Set files with the slapd_replog_t type, if you want to treat the files as slapd replog data.
@@ -95,7 +121,7 @@
 
 .EX
 .PP
-.B slapd_tmp_t 
+.B slapd_tmp_t
 .EE
 
 - Set files with the slapd_tmp_t type, if you want to store slapd temporary files in the /tmp directories.
@@ -103,7 +129,7 @@
 
 .EX
 .PP
-.B slapd_tmpfs_t 
+.B slapd_tmpfs_t
 .EE
 
 - Set files with the slapd_tmpfs_t type, if you want to store slapd files on a tmpfs file system.
@@ -111,40 +137,120 @@
 
 .EX
 .PP
-.B slapd_var_run_t 
+.B slapd_var_run_t
 .EE
 
 - Set files with the slapd_var_run_t type, if you want to store the slapd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/slapd\.args, /var/run/openldap(/.*)?, /var/run/slapd\.pid, /var/run/ldapi
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux slapd policy is very flexible allowing users to setup their slapd processes in as secure a method as possible.
-.PP 
-The following process types are defined for slapd:
+.SH "MANAGED FILES"
 
-.EX
-.B slapd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type slapd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B slapd_db_t
+
+	/var/lib/ldap(/.*)?
+.br
+	/etc/openldap/slapd\.d(/.*)?
+.br
+
+.br
+.B slapd_lock_t
+
+
+.br
+.B slapd_log_t
+
+
+.br
+.B slapd_replog_t
+
+	/var/lib/ldap/replog(/.*)?
+.br
+
+.br
+.B slapd_tmp_t
+
+
+.br
+.B slapd_tmpfs_t
+
+
+.br
+.B slapd_var_run_t
+
+	/var/run/openldap(/.*)?
+.br
+	/var/run/ldapi
+.br
+	/var/run/slapd\.pid
+.br
+	/var/run/slapd\.args
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -157,11 +263,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), slapd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), slapd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/slpd_selinux.8 serefpolicy-3.7.19/man/man8/slpd_selinux.8
--- nsaserefpolicy/man/man8/slpd_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/slpd_selinux.8	2013-03-15 11:40:07.101152024 +0100
@@ -0,0 +1,119 @@
+.TH  "slpd_selinux"  "8"  "13-01-04" "slpd" "SELinux Policy documentation for slpd"
+.SH "NAME"
+slpd_selinux \- Security Enhanced Linux Policy for the slpd processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the slpd processes via flexible mandatory access control.
+
+The slpd processes execute with the slpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep slpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The slpd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,slpd_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the slpd_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/slpd, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux slpd policy is very flexible allowing users to setup their slpd processes in as secure a method as possible.
+.PP
+The following process types are defined for slpd:
+
+.EX
+.B slpd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a slpd_t
+
+can be used to make the process type slpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux slpd policy is very flexible allowing users to setup their slpd processes in as secure a method as possible.
+.PP
+The following file types are defined for slpd:
+
+
+.EX
+.PP
+.B slpd_exec_t
+.EE
+
+- Set files with the slpd_exec_t type, if you want to transition an executable to the slpd_t domain.
+
+
+.EX
+.PP
+.B slpd_initrc_exec_t
+.EE
+
+- Set files with the slpd_initrc_exec_t type, if you want to transition an executable to the slpd_initrc_t domain.
+
+
+.EX
+.PP
+.B slpd_var_log_t
+.EE
+
+- Set files with the slpd_var_log_t type, if you want to treat the data as slpd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B slpd_var_run_t
+.EE
+
+- Set files with the slpd_var_run_t type, if you want to store the slpd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type slpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), slpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/smbcontrol_selinux.8 serefpolicy-3.7.19/man/man8/smbcontrol_selinux.8
--- nsaserefpolicy/man/man8/smbcontrol_selinux.8	2013-03-15 11:41:12.014153505 +0100
+++ serefpolicy-3.7.19/man/man8/smbcontrol_selinux.8	2013-03-15 11:40:01.083151886 +0100
@@ -1,25 +1,55 @@
-.TH  "smbcontrol_selinux"  "8"  "smbcontrol" "dwalsh@redhat.com" "smbcontrol SELinux Policy documentation"
+.TH  "smbcontrol_selinux"  "8"  "13-01-04" "smbcontrol" "SELinux Policy documentation for smbcontrol"
 .SH "NAME"
 smbcontrol_selinux \- Security Enhanced Linux Policy for the smbcontrol processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the smbcontrol processes via flexible mandatory access control.
 
+The smbcontrol processes execute with the smbcontrol_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep smbcontrol_t
+
+
+.SH "ENTRYPOINTS"
+
+The smbcontrol_t SELinux type can be entered via the "smbcontrol_exec_t" file type.  The default entrypoint paths for the smbcontrol_t domain are the following:"
+
+/usr/bin/smbcontrol
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux smbcontrol policy is very flexible allowing users to setup their smbcontrol processes in as secure a method as possible.
+.PP
+The following process types are defined for smbcontrol:
+
+.EX
+.B smbcontrol_t
+.EE
+.PP
+Note:
+.B semanage permissive -a smbcontrol_t
+
+can be used to make the process type smbcontrol_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux smbcontrol policy is very flexible allowing users to setup their smbcontrol processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for smbcontrol:
 
 
 .EX
 .PP
-.B smbcontrol_exec_t 
+.B smbcontrol_exec_t
 .EE
 
 - Set files with the smbcontrol_exec_t type, if you want to transition an executable to the smbcontrol_t domain.
@@ -27,28 +57,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux smbcontrol policy is very flexible allowing users to setup their smbcontrol processes in as secure a method as possible.
-.PP 
-The following process types are defined for smbcontrol:
+.SH "MANAGED FILES"
 
-.EX
-.B smbcontrol_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type smbcontrol_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +131,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), smbcontrol(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), smbcontrol(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/smbd_selinux.8 serefpolicy-3.7.19/man/man8/smbd_selinux.8
--- nsaserefpolicy/man/man8/smbd_selinux.8	2013-03-15 11:41:12.101153507 +0100
+++ serefpolicy-3.7.19/man/man8/smbd_selinux.8	2013-03-15 11:40:03.040151931 +0100
@@ -1,10 +1,135 @@
-.TH  "smbd_selinux"  "8"  "smbd" "dwalsh@redhat.com" "smbd SELinux Policy documentation"
+.TH  "smbd_selinux"  "8"  "13-01-04" "smbd" "SELinux Policy documentation for smbd"
 .SH "NAME"
 smbd_selinux \- Security Enhanced Linux Policy for the smbd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the smbd processes via flexible mandatory access control.
 
+The smbd processes execute with the smbd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep smbd_t
+
+
+.SH "ENTRYPOINTS"
+
+The smbd_t SELinux type can be entered via the "smbd_exec_t" file type.  The default entrypoint paths for the smbd_t domain are the following:"
+
+/usr/sbin/smbd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
+.PP
+The following process types are defined for smbd:
+
+.EX
+.B smbcontrol_t, smbmount_t, smbd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a smbd_t
+
+can be used to make the process type smbd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  smbd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run smbd with the tightest access possible.
+
+
+.PP
+If you want to allow samba to export ntfs/fusefs volumes, you must turn on the samba_share_fusefs boolean.
+
+.EX
+.B setsebool -P samba_share_fusefs 1
+.EE
+
+.PP
+If you want to allow samba to share any file/directory read only, you must turn on the samba_export_all_ro boolean.
+
+.EX
+.B setsebool -P samba_export_all_ro 1
+.EE
+
+.PP
+If you want to allow virt to manage cifs files, you must turn on the virt_use_samba boolean.
+
+.EX
+.B setsebool -P virt_use_samba 1
+.EE
+
+.PP
+If you want to allow samba to create new home directories (e.g. via PAM), you must turn on the samba_create_home_dirs boolean.
+
+.EX
+.B setsebool -P samba_create_home_dirs 1
+.EE
+
+.PP
+If you want to allow samba to share users home directories, you must turn on the samba_enable_home_dirs boolean.
+
+.EX
+.B setsebool -P samba_enable_home_dirs 1
+.EE
+
+.PP
+If you want to allow samba to export NFS volumes, you must turn on the samba_share_nfs boolean.
+
+.EX
+.B setsebool -P samba_share_nfs 1
+.EE
+
+.PP
+If you want to allow sanlock to manage cifs files, you must turn on the sanlock_use_samba boolean.
+
+.EX
+.B setsebool -P sanlock_use_samba 1
+.EE
+
+.PP
+If you want to allow samba to run unconfined scripts, you must turn on the samba_run_unconfined boolean.
+
+.EX
+.B setsebool -P samba_run_unconfined 1
+.EE
+
+.PP
+If you want to allow samba to act as the domain controller, add users, groups and change passwords, you must turn on the samba_domain_controller boolean.
+
+.EX
+.B setsebool -P samba_domain_controller 1
+.EE
+
+.PP
+If you want to allow samba to share any file/directory read/write, you must turn on the samba_export_all_rw boolean.
+
+.EX
+.B setsebool -P samba_export_all_rw 1
+.EE
+
+.PP
+If you want to allow samba to act as a portmapper, you must turn on the samba_portmapper boolean.
+
+.EX
+.B setsebool -P samba_portmapper 1
+.EE
+
+.PP
+If you want to support SAMBA home directories, you must turn on the use_samba_home_dirs boolean.
+
+.EX
+.B setsebool -P use_samba_home_dirs 1
+.EE
+
+.PP
+If you want to allow samba to modify public files used for public file transfer services.  Files/Directories must be labeled public_content_rw_t, you must turn on the allow_smbd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_smbd_anon_write 1
+.EE
 
 .SH SHARING FILES
 If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
@@ -17,7 +142,7 @@
 .B restorecon -F -R -v /var/smbd
 .pp
 .TP
-Allow smbd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_smbd_anon_write boolean to be set.
+Allow smbd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_smbdd_anon_write boolean to be set.
 .PP
 .B
 semanage fcontext -a -t public_content_rw_t "/var/smbd/incoming(/.*)?"
@@ -33,19 +158,19 @@
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for smbd:
 
 
 .EX
 .PP
-.B smbd_exec_t 
+.B smbd_exec_t
 .EE
 
 - Set files with the smbd_exec_t type, if you want to transition an executable to the smbd_t domain.
@@ -53,7 +178,7 @@
 
 .EX
 .PP
-.B smbd_keytab_t 
+.B smbd_keytab_t
 .EE
 
 - Set files with the smbd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -61,7 +186,7 @@
 
 .EX
 .PP
-.B smbd_tmp_t 
+.B smbd_tmp_t
 .EE
 
 - Set files with the smbd_tmp_t type, if you want to store smbd temporary files in the /tmp directories.
@@ -69,63 +194,241 @@
 
 .EX
 .PP
-.B smbd_var_run_t 
+.B smbd_var_run_t
 .EE
 
 - Set files with the smbd_var_run_t type, if you want to store the smbd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/samba/smbd\.pid, /var/run/smbd\.pid, /var/run/samba/locking\.tdb, /var/run/samba/share_info\.tdb, /var/run/samba/connections\.tdb, /var/run/samba/gencache\.tdb, /var/run/samba/sessionid\.tdb, /var/run/samba/brlock\.tdb
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for smbd:
 
 .EX
 .TP 5
-.B smbd_port_t 
+.B smbd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 137-139,445
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
-.PP 
-The following process types are defined for smbd:
+.SH "MANAGED FILES"
 
-.EX
-.B smbcontrol_t, smbmount_t, smbd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type smbd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B ctdbd_var_lib_t
+
+	/etc/ctdb(/.*)?
+.br
+	/var/ctdb(/.*)?
+.br
+	/var/ctdbd(/.*)?
+.br
+	/var/lib/ctdbd(/.*)?
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nmbd_var_run_t
+
+	/var/run/nmbd\.pid
+.br
+	/var/run/samba/nmbd\.pid
+.br
+	/var/run/samba/messages\.tdb
+.br
+	/var/run/samba/namelist\.debug
+.br
+	/var/run/samba/unexpected\.tdb
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B qemu_tmp_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B samba_etc_t
+
+	/etc/samba(/.*)?
+.br
+
+.br
+.B samba_log_t
+
+	/var/log/samba(/.*)?
+.br
+
+.br
+.B samba_secrets_t
+
+	/etc/samba/smbpasswd
+.br
+	/etc/samba/passdb\.tdb
+.br
+	/etc/samba/MACHINE\.SID
+.br
+	/etc/samba/secrets\.tdb
+.br
+
+.br
+.B samba_share_t
+
+	use this label for random content that will be shared using samba
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B smbd_tmp_t
+
+
+.br
+.B smbd_var_run_t
+
+	/var/run/samba(/.*)?
+.br
+	/var/run/smbd\.pid
+.br
+	/var/run/samba/smbd\.pid
+.br
+	/var/run/samba/brlock\.tdb
+.br
+	/var/run/samba/locking\.tdb
+.br
+	/var/run/samba/gencache\.tdb
+.br
+	/var/run/samba/sessionid\.tdb
+.br
+	/var/run/samba/share_info\.tdb
+.br
+	/var/run/samba/connections\.tdb
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -140,12 +443,18 @@
 .B semanage port
 can also be used to manipulate the port definitions
 
+.B semanage boolean
+can also be used to manipulate the booleans
+
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), smbd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), smbd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), smbcontrol_selinux(8), smbmount_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/smbmount_selinux.8 serefpolicy-3.7.19/man/man8/smbmount_selinux.8
--- nsaserefpolicy/man/man8/smbmount_selinux.8	2013-03-15 11:41:11.829153500 +0100
+++ serefpolicy-3.7.19/man/man8/smbmount_selinux.8	2013-03-15 11:39:57.663151808 +0100
@@ -1,58 +1,208 @@
-.TH  "smbmount_selinux"  "8"  "smbmount" "dwalsh@redhat.com" "smbmount SELinux Policy documentation"
+.TH  "smbmount_selinux"  "8"  "13-01-04" "smbmount" "SELinux Policy documentation for smbmount"
 .SH "NAME"
 smbmount_selinux \- Security Enhanced Linux Policy for the smbmount processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the smbmount processes via flexible mandatory access control.
 
+The smbmount processes execute with the smbmount_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep smbmount_t
+
+
+.SH "ENTRYPOINTS"
+
+The smbmount_t SELinux type can be entered via the "smbmount_exec_t" file type.  The default entrypoint paths for the smbmount_t domain are the following:"
+
+/usr/bin/smbmnt, /usr/bin/smbmount
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux smbmount policy is very flexible allowing users to setup their smbmount processes in as secure a method as possible.
+.PP
+The following process types are defined for smbmount:
+
+.EX
+.B smbmount_t
+.EE
+.PP
+Note:
+.B semanage permissive -a smbmount_t
+
+can be used to make the process type smbmount_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux smbmount policy is very flexible allowing users to setup their smbmount processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for smbmount:
 
 
 .EX
 .PP
-.B smbmount_exec_t 
+.B smbmount_exec_t
 .EE
 
 - Set files with the smbmount_exec_t type, if you want to transition an executable to the smbmount_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/smbmnt, /usr/bin/smbmount
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux smbmount policy is very flexible allowing users to setup their smbmount processes in as secure a method as possible.
-.PP 
-The following process types are defined for smbmount:
+.SH "MANAGED FILES"
 
-.EX
-.B smbmount_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type smbmount_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B samba_log_t
+
+	/var/log/samba(/.*)?
+.br
+
+.br
+.B samba_secrets_t
+
+	/etc/samba/smbpasswd
+.br
+	/etc/samba/passdb\.tdb
+.br
+	/etc/samba/MACHINE\.SID
+.br
+	/etc/samba/secrets\.tdb
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +215,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), smbmount(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), smbmount(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/smokeping_selinux.8 serefpolicy-3.7.19/man/man8/smokeping_selinux.8
--- nsaserefpolicy/man/man8/smokeping_selinux.8	2013-03-15 11:41:12.194153509 +0100
+++ serefpolicy-3.7.19/man/man8/smokeping_selinux.8	2013-03-15 11:40:06.286152005 +0100
@@ -1,31 +1,55 @@
-.TH  "smokeping_selinux"  "8"  "smokeping" "dwalsh@redhat.com" "smokeping SELinux Policy documentation"
+.TH  "smokeping_selinux"  "8"  "13-01-04" "smokeping" "SELinux Policy documentation for smokeping"
 .SH "NAME"
 smokeping_selinux \- Security Enhanced Linux Policy for the smokeping processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the smokeping processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B smokeping
-(Smokeping network latency measurement)
-processes via flexible mandatory access
-control.  
+The smokeping processes execute with the smokeping_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep smokeping_t
+
+
+.SH "ENTRYPOINTS"
+
+The smokeping_t SELinux type can be entered via the "smokeping_exec_t" file type.  The default entrypoint paths for the smokeping_t domain are the following:"
+
+/usr/sbin/smokeping
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux smokeping policy is very flexible allowing users to setup their smokeping processes in as secure a method as possible.
+.PP
+The following process types are defined for smokeping:
+
+.EX
+.B smokeping_t
+.EE
+.PP
+Note:
+.B semanage permissive -a smokeping_t
+
+can be used to make the process type smokeping_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux smokeping policy is very flexible allowing users to setup their smokeping processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for smokeping:
 
 
 .EX
 .PP
-.B smokeping_exec_t 
+.B smokeping_exec_t
 .EE
 
 - Set files with the smokeping_exec_t type, if you want to transition an executable to the smokeping_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B smokeping_initrc_exec_t 
+.B smokeping_initrc_exec_t
 .EE
 
 - Set files with the smokeping_initrc_exec_t type, if you want to transition an executable to the smokeping_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B smokeping_var_lib_t 
+.B smokeping_var_lib_t
 .EE
 
 - Set files with the smokeping_var_lib_t type, if you want to store the smokeping files under the /var/lib directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B smokeping_var_run_t 
+.B smokeping_var_run_t
 .EE
 
 - Set files with the smokeping_var_run_t type, if you want to store the smokeping files under the /run directory.
@@ -57,28 +81,76 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux smokeping policy is very flexible allowing users to setup their smokeping processes in as secure a method as possible.
-.PP 
-The following process types are defined for smokeping:
+.SH "MANAGED FILES"
 
-.EX
-.B smokeping_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type smokeping_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B smokeping_var_lib_t
+
+	/var/lib/smokeping(/.*)?
+.br
+
+.br
+.B smokeping_var_run_t
+
+	/var/run/smokeping(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +163,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), smokeping(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), smokeping(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/smoltclient_selinux.8 serefpolicy-3.7.19/man/man8/smoltclient_selinux.8
--- nsaserefpolicy/man/man8/smoltclient_selinux.8	2013-03-15 11:41:12.238153510 +0100
+++ serefpolicy-3.7.19/man/man8/smoltclient_selinux.8	2013-03-15 11:40:07.387152030 +0100
@@ -1,31 +1,55 @@
-.TH  "smoltclient_selinux"  "8"  "smoltclient" "dwalsh@redhat.com" "smoltclient SELinux Policy documentation"
+.TH  "smoltclient_selinux"  "8"  "13-01-04" "smoltclient" "SELinux Policy documentation for smoltclient"
 .SH "NAME"
 smoltclient_selinux \- Security Enhanced Linux Policy for the smoltclient processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the smoltclient processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B smoltclient
-(The Fedora hardware profiler client)
-processes via flexible mandatory access
-control.  
+The smoltclient processes execute with the smoltclient_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep smoltclient_t
+
+
+.SH "ENTRYPOINTS"
+
+The smoltclient_t SELinux type can be entered via the "smoltclient_exec_t" file type.  The default entrypoint paths for the smoltclient_t domain are the following:"
+
+/usr/share/smolt/client/sendProfile.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux smoltclient policy is very flexible allowing users to setup their smoltclient processes in as secure a method as possible.
+.PP
+The following process types are defined for smoltclient:
+
+.EX
+.B smoltclient_t
+.EE
+.PP
+Note:
+.B semanage permissive -a smoltclient_t
+
+can be used to make the process type smoltclient_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux smoltclient policy is very flexible allowing users to setup their smoltclient processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for smoltclient:
 
 
 .EX
 .PP
-.B smoltclient_exec_t 
+.B smoltclient_exec_t
 .EE
 
 - Set files with the smoltclient_exec_t type, if you want to transition an executable to the smoltclient_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B smoltclient_tmp_t 
+.B smoltclient_tmp_t
 .EE
 
 - Set files with the smoltclient_tmp_t type, if you want to store smoltclient temporary files in the /tmp directories.
@@ -41,28 +65,60 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux smoltclient policy is very flexible allowing users to setup their smoltclient processes in as secure a method as possible.
-.PP 
-The following process types are defined for smoltclient:
+.SH "MANAGED FILES"
 
-.EX
-.B smoltclient_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type smoltclient_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B smoltclient_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +131,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), smoltclient(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), smoltclient(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/snmpd_selinux.8 serefpolicy-3.7.19/man/man8/snmpd_selinux.8
--- nsaserefpolicy/man/man8/snmpd_selinux.8	2013-03-15 11:41:12.239153510 +0100
+++ serefpolicy-3.7.19/man/man8/snmpd_selinux.8	2013-03-15 11:40:07.532152033 +0100
@@ -1,25 +1,55 @@
-.TH  "snmpd_selinux"  "8"  "snmpd" "dwalsh@redhat.com" "snmpd SELinux Policy documentation"
+.TH  "snmpd_selinux"  "8"  "13-01-04" "snmpd" "SELinux Policy documentation for snmpd"
 .SH "NAME"
 snmpd_selinux \- Security Enhanced Linux Policy for the snmpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the snmpd processes via flexible mandatory access control.
 
+The snmpd processes execute with the snmpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep snmpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The snmpd_t SELinux type can be entered via the "snmpd_exec_t" file type.  The default entrypoint paths for the snmpd_t domain are the following:"
+
+/usr/sbin/snmp(trap)?d
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
+.PP
+The following process types are defined for snmpd:
+
+.EX
+.B snmpd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a snmpd_t
+
+can be used to make the process type snmpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for snmpd:
 
 
 .EX
 .PP
-.B snmpd_exec_t 
+.B snmpd_exec_t
 .EE
 
 - Set files with the snmpd_exec_t type, if you want to transition an executable to the snmpd_t domain.
@@ -27,19 +57,15 @@
 
 .EX
 .PP
-.B snmpd_initrc_exec_t 
+.B snmpd_initrc_exec_t
 .EE
 
 - Set files with the snmpd_initrc_exec_t type, if you want to transition an executable to the snmpd_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/snmpd, /etc/rc\.d/init\.d/snmptrapd
 
 .EX
 .PP
-.B snmpd_log_t 
+.B snmpd_log_t
 .EE
 
 - Set files with the snmpd_log_t type, if you want to treat the data as snmpd log data, usually stored under the /var/log directory.
@@ -47,75 +73,133 @@
 
 .EX
 .PP
-.B snmpd_var_lib_t 
+.B snmpd_var_lib_t
 .EE
 
 - Set files with the snmpd_var_lib_t type, if you want to store the snmpd files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/agentx(/.*)?, /usr/share/snmp/mibs/\.index, /var/net-snmp(/.*), /var/lib/net-snmp(/.*)?, /var/lib/snmp(/.*)?
 
 .EX
 .PP
-.B snmpd_var_run_t 
+.B snmpd_var_run_t
 .EE
 
 - Set files with the snmpd_var_run_t type, if you want to store the snmpd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/snmpd\.pid, /var/run/snmpd(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for snmpd:
 
 .EX
 .TP 5
-.B snmp_port_t 
+.B snmp_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 161-162,199,1161
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for snmpd:
-
-.EX
-.B snmpd_t 
+udp 161-162
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type snmpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B snmpd_log_t
+
+	/var/log/snmpd\.log.*
+.br
+
+.br
+.B snmpd_var_lib_t
+
+	/var/agentx(/.*)?
+.br
+	/var/net-snmp(/.*)
+.br
+	/var/lib/snmp(/.*)?
+.br
+	/var/lib/net-snmp(/.*)?
+.br
+	/usr/share/snmp/mibs/\.index
+.br
+
+.br
+.B snmpd_var_run_t
+
+	/var/run/snmpd(/.*)?
+.br
+	/var/run/snmpd\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -131,11 +215,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), snmpd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), snmpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/snort_selinux.8 serefpolicy-3.7.19/man/man8/snort_selinux.8
--- nsaserefpolicy/man/man8/snort_selinux.8	2013-03-15 11:41:12.097153507 +0100
+++ serefpolicy-3.7.19/man/man8/snort_selinux.8	2013-03-15 11:40:02.662151922 +0100
@@ -1,31 +1,55 @@
-.TH  "snort_selinux"  "8"  "snort" "dwalsh@redhat.com" "snort SELinux Policy documentation"
+.TH  "snort_selinux"  "8"  "13-01-04" "snort" "SELinux Policy documentation for snort"
 .SH "NAME"
 snort_selinux \- Security Enhanced Linux Policy for the snort processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the snort processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B snort
-(Snort network intrusion detection system)
-processes via flexible mandatory access
-control.  
+The snort processes execute with the snort_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep snort_t
+
+
+.SH "ENTRYPOINTS"
+
+The snort_t SELinux type can be entered via the "snort_exec_t" file type.  The default entrypoint paths for the snort_t domain are the following:"
+
+/usr/s?bin/snort, /usr/sbin/snort-plain
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux snort policy is very flexible allowing users to setup their snort processes in as secure a method as possible.
+.PP
+The following process types are defined for snort:
+
+.EX
+.B snort_t
+.EE
+.PP
+Note:
+.B semanage permissive -a snort_t
+
+can be used to make the process type snort_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux snort policy is very flexible allowing users to setup their snort processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for snort:
 
 
 .EX
 .PP
-.B snort_etc_t 
+.B snort_etc_t
 .EE
 
 - Set files with the snort_etc_t type, if you want to store snort files in the /etc directories.
@@ -33,19 +57,15 @@
 
 .EX
 .PP
-.B snort_exec_t 
+.B snort_exec_t
 .EE
 
 - Set files with the snort_exec_t type, if you want to transition an executable to the snort_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/snort-plain, /usr/s?bin/snort
 
 .EX
 .PP
-.B snort_initrc_exec_t 
+.B snort_initrc_exec_t
 .EE
 
 - Set files with the snort_initrc_exec_t type, if you want to transition an executable to the snort_initrc_t domain.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B snort_log_t 
+.B snort_log_t
 .EE
 
 - Set files with the snort_log_t type, if you want to treat the data as snort log data, usually stored under the /var/log directory.
@@ -61,7 +81,7 @@
 
 .EX
 .PP
-.B snort_tmp_t 
+.B snort_tmp_t
 .EE
 
 - Set files with the snort_tmp_t type, if you want to store snort temporary files in the /tmp directories.
@@ -69,7 +89,7 @@
 
 .EX
 .PP
-.B snort_var_run_t 
+.B snort_var_run_t
 .EE
 
 - Set files with the snort_var_run_t type, if you want to store the snort files under the /run directory.
@@ -77,28 +97,88 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux snort policy is very flexible allowing users to setup their snort processes in as secure a method as possible.
-.PP 
-The following process types are defined for snort:
+.SH "MANAGED FILES"
 
-.EX
-.B snort_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type snort_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B prelude_spool_t
+
+	/var/spool/prelude(/.*)?
+.br
+	/var/spool/prelude-manager(/.*)?
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B snort_log_t
+
+	/var/log/snort(/.*)?
+.br
+
+.br
+.B snort_tmp_t
+
+
+.br
+.B snort_var_run_t
+
+	/var/run/snort.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -111,11 +191,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), snort(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), snort(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/sosreport_selinux.8 serefpolicy-3.7.19/man/man8/sosreport_selinux.8
--- nsaserefpolicy/man/man8/sosreport_selinux.8	2013-03-15 11:41:12.171153508 +0100
+++ serefpolicy-3.7.19/man/man8/sosreport_selinux.8	2013-03-15 11:40:04.790151971 +0100
@@ -1,31 +1,55 @@
-.TH  "sosreport_selinux"  "8"  "sosreport" "dwalsh@redhat.com" "sosreport SELinux Policy documentation"
+.TH  "sosreport_selinux"  "8"  "13-01-04" "sosreport" "SELinux Policy documentation for sosreport"
 .SH "NAME"
 sosreport_selinux \- Security Enhanced Linux Policy for the sosreport processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sosreport processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B sosreport
-(policy for sosreport)
-processes via flexible mandatory access
-control.  
+The sosreport processes execute with the sosreport_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep sosreport_t
+
+
+.SH "ENTRYPOINTS"
+
+The sosreport_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,sosreport_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the sosreport_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/sosreport, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sosreport policy is very flexible allowing users to setup their sosreport processes in as secure a method as possible.
+.PP
+The following process types are defined for sosreport:
+
+.EX
+.B sosreport_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sosreport_t
+
+can be used to make the process type sosreport_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux sosreport policy is very flexible allowing users to setup their sosreport processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for sosreport:
 
 
 .EX
 .PP
-.B sosreport_exec_t 
+.B sosreport_exec_t
 .EE
 
 - Set files with the sosreport_exec_t type, if you want to transition an executable to the sosreport_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B sosreport_tmp_t 
+.B sosreport_tmp_t
 .EE
 
 - Set files with the sosreport_tmp_t type, if you want to store sosreport temporary files in the /tmp directories.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B sosreport_tmpfs_t 
+.B sosreport_tmpfs_t
 .EE
 
 - Set files with the sosreport_tmpfs_t type, if you want to store sosreport files on a tmpfs file system.
@@ -49,28 +73,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sosreport policy is very flexible allowing users to setup their sosreport processes in as secure a method as possible.
-.PP 
-The following process types are defined for sosreport:
+.SH "MANAGED FILES"
 
-.EX
-.B sosreport_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sosreport_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +99,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sosreport(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), sosreport(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/soundd_selinux.8 serefpolicy-3.7.19/man/man8/soundd_selinux.8
--- nsaserefpolicy/man/man8/soundd_selinux.8	2013-03-15 11:41:11.883153502 +0100
+++ serefpolicy-3.7.19/man/man8/soundd_selinux.8	2013-03-15 11:39:59.158151842 +0100
@@ -1,49 +1,71 @@
-.TH  "soundd_selinux"  "8"  "soundd" "dwalsh@redhat.com" "soundd SELinux Policy documentation"
+.TH  "soundd_selinux"  "8"  "13-01-04" "soundd" "SELinux Policy documentation for soundd"
 .SH "NAME"
 soundd_selinux \- Security Enhanced Linux Policy for the soundd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the soundd processes via flexible mandatory access control.
 
+The soundd processes execute with the soundd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep soundd_t
+
+
+.SH "ENTRYPOINTS"
+
+The soundd_t SELinux type can be entered via the "soundd_exec_t" file type.  The default entrypoint paths for the soundd_t domain are the following:"
+
+/usr/bin/nasd, /usr/sbin/yiff, /usr/bin/gpe-soundserver
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
+.PP
+The following process types are defined for soundd:
+
+.EX
+.B soundd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a soundd_t
+
+can be used to make the process type soundd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for soundd:
 
 
 .EX
 .PP
-.B soundd_etc_t 
+.B soundd_etc_t
 .EE
 
 - Set files with the soundd_etc_t type, if you want to store soundd files in the /etc directories.
 
-.br
-.TP 5
-Paths: 
-/etc/yiff(/.*)?, /etc/nas(/.*)?
 
 .EX
 .PP
-.B soundd_exec_t 
+.B soundd_exec_t
 .EE
 
 - Set files with the soundd_exec_t type, if you want to transition an executable to the soundd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/gpe-soundserver, /usr/sbin/yiff, /usr/bin/nasd
 
 .EX
 .PP
-.B soundd_initrc_exec_t 
+.B soundd_initrc_exec_t
 .EE
 
 - Set files with the soundd_initrc_exec_t type, if you want to transition an executable to the soundd_initrc_t domain.
@@ -51,7 +73,7 @@
 
 .EX
 .PP
-.B soundd_state_t 
+.B soundd_state_t
 .EE
 
 - Set files with the soundd_state_t type, if you want to treat the files as soundd state data.
@@ -59,7 +81,7 @@
 
 .EX
 .PP
-.B soundd_tmp_t 
+.B soundd_tmp_t
 .EE
 
 - Set files with the soundd_tmp_t type, if you want to store soundd temporary files in the /tmp directories.
@@ -67,7 +89,7 @@
 
 .EX
 .PP
-.B soundd_tmpfs_t 
+.B soundd_tmpfs_t
 .EE
 
 - Set files with the soundd_tmpfs_t type, if you want to store soundd files on a tmpfs file system.
@@ -75,63 +97,117 @@
 
 .EX
 .PP
-.B soundd_var_run_t 
+.B soundd_var_run_t
 .EE
 
 - Set files with the soundd_var_run_t type, if you want to store the soundd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/nasd(/.*)?, /var/run/yiff-[0-9]+\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for soundd:
 
 .EX
 .TP 5
-.B soundd_port_t 
+.B soundd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 8000,9433,16001
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
-.PP 
-The following process types are defined for soundd:
+.SH "MANAGED FILES"
 
-.EX
-.B soundd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type soundd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B soundd_state_t
+
+	/var/state/yiff(/.*)?
+.br
+
+.br
+.B soundd_tmp_t
+
+
+.br
+.B soundd_tmpfs_t
+
+
+.br
+.B soundd_var_run_t
+
+	/var/run/nasd(/.*)?
+.br
+	/var/run/yiff-[0-9]+\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -147,11 +223,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), soundd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), soundd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/spamass_milter_selinux.8 serefpolicy-3.7.19/man/man8/spamass_milter_selinux.8
--- nsaserefpolicy/man/man8/spamass_milter_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/spamass_milter_selinux.8	2013-03-15 11:40:02.682151923 +0100
@@ -0,0 +1,163 @@
+.TH  "spamass_milter_selinux"  "8"  "13-01-04" "spamass_milter" "SELinux Policy documentation for spamass_milter"
+.SH "NAME"
+spamass_milter_selinux \- Security Enhanced Linux Policy for the spamass_milter processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the spamass_milter processes via flexible mandatory access control.
+
+The spamass_milter processes execute with the spamass_milter_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep spamass_milter_t
+
+
+.SH "ENTRYPOINTS"
+
+The spamass_milter_t SELinux type can be entered via the "spamass_milter_exec_t" file type.  The default entrypoint paths for the spamass_milter_t domain are the following:"
+
+/usr/sbin/spamass-milter
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux spamass_milter policy is very flexible allowing users to setup their spamass_milter processes in as secure a method as possible.
+.PP
+The following process types are defined for spamass_milter:
+
+.EX
+.B spamass_milter_t
+.EE
+.PP
+Note:
+.B semanage permissive -a spamass_milter_t
+
+can be used to make the process type spamass_milter_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux spamass_milter policy is very flexible allowing users to setup their spamass_milter processes in as secure a method as possible.
+.PP
+The following file types are defined for spamass_milter:
+
+
+.EX
+.PP
+.B spamass_milter_data_t
+.EE
+
+- Set files with the spamass_milter_data_t type, if you want to treat the files as spamass milter content.
+
+
+.EX
+.PP
+.B spamass_milter_exec_t
+.EE
+
+- Set files with the spamass_milter_exec_t type, if you want to transition an executable to the spamass_milter_t domain.
+
+
+.EX
+.PP
+.B spamass_milter_state_t
+.EE
+
+- Set files with the spamass_milter_state_t type, if you want to treat the files as spamass milter state data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type spamass_milter_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B spamass_milter_data_t
+
+	/var/run/spamass-milter(/.*)?
+.br
+	/var/run/spamass-milter\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), spamass_milter(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/spamc_selinux.8 serefpolicy-3.7.19/man/man8/spamc_selinux.8
--- nsaserefpolicy/man/man8/spamc_selinux.8	2013-03-15 11:41:12.238153510 +0100
+++ serefpolicy-3.7.19/man/man8/spamc_selinux.8	2013-03-15 11:40:07.461152032 +0100
@@ -1,49 +1,71 @@
-.TH  "spamc_selinux"  "8"  "spamc" "dwalsh@redhat.com" "spamc SELinux Policy documentation"
+.TH  "spamc_selinux"  "8"  "13-01-04" "spamc" "SELinux Policy documentation for spamc"
 .SH "NAME"
 spamc_selinux \- Security Enhanced Linux Policy for the spamc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the spamc processes via flexible mandatory access control.
 
+The spamc processes execute with the spamc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep spamc_t
+
+
+.SH "ENTRYPOINTS"
+
+The spamc_t SELinux type can be entered via the "spamc_exec_t" file type.  The default entrypoint paths for the spamc_t domain are the following:"
+
+/usr/bin/razor.*, /usr/bin/spamc, /usr/bin/pyzor, /usr/bin/sa-learn, /usr/bin/spamassassin
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux spamc policy is very flexible allowing users to setup their spamc processes in as secure a method as possible.
+.PP
+The following process types are defined for spamc:
+
+.EX
+.B spamc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a spamc_t
+
+can be used to make the process type spamc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux spamc policy is very flexible allowing users to setup their spamc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for spamc:
 
 
 .EX
 .PP
-.B spamc_exec_t 
+.B spamc_exec_t
 .EE
 
 - Set files with the spamc_exec_t type, if you want to transition an executable to the spamc_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/spamc, /usr/bin/razor.*, /usr/bin/sa-learn, /usr/bin/spamassassin
 
 .EX
 .PP
-.B spamc_home_t 
+.B spamc_home_t
 .EE
 
 - Set files with the spamc_home_t type, if you want to store spamc files in the users home directory.
 
-.br
-.TP 5
-Paths: 
-/root/\.razor(/.*)?, /root/\.spamassassin(/.*)?
 
 .EX
 .PP
-.B spamc_tmp_t 
+.B spamc_tmp_t
 .EE
 
 - Set files with the spamc_tmp_t type, if you want to store spamc temporary files in the /tmp directories.
@@ -51,28 +73,104 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux spamc policy is very flexible allowing users to setup their spamc processes in as secure a method as possible.
-.PP 
-The following process types are defined for spamc:
+.SH "MANAGED FILES"
 
-.EX
-.B spamc_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type spamc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B amavis_spool_t
+
+	/var/spool/amavisd(/.*)?
+.br
+
+.br
+.B amavis_var_lib_t
+
+	/var/amavis(/.*)?
+.br
+	/var/lib/amavis(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B spamass_milter_state_t
+
+	/var/lib/spamass-milter(/.*)?
+.br
+
+.br
+.B spamc_home_t
+
+	/root/\.razor(/.*)?
+.br
+	/root/\.pyzor(/.*)?
+.br
+	/root/\.spamd(/.*)?
+.br
+	/root/\.spamassassin(/.*)?
+.br
+	/home/[^/]*/\.razor(/.*)?
+.br
+	/home/[^/]*/\.pyzor(/.*)?
+.br
+	/home/[^/]*/\.spamd(/.*)?
+.br
+	/home/[^/]*/\.spamassassin(/.*)?
+.br
+
+.br
+.B spamc_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +183,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), spamc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), spamc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/spamd_selinux.8 serefpolicy-3.7.19/man/man8/spamd_selinux.8
--- nsaserefpolicy/man/man8/spamd_selinux.8	2013-03-15 11:41:12.205153509 +0100
+++ serefpolicy-3.7.19/man/man8/spamd_selinux.8	2013-03-15 11:40:06.310152005 +0100
@@ -1,10 +1,40 @@
-.TH  "spamd_selinux"  "8"  "spamd" "dwalsh@redhat.com" "spamd SELinux Policy documentation"
+.TH  "spamd_selinux"  "8"  "13-01-04" "spamd" "SELinux Policy documentation for spamd"
 .SH "NAME"
 spamd_selinux \- Security Enhanced Linux Policy for the spamd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the spamd processes via flexible mandatory access control.
 
+The spamd processes execute with the spamd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep spamd_t
+
+
+.SH "ENTRYPOINTS"
+
+The spamd_t SELinux type can be entered via the "spamd_exec_t" file type.  The default entrypoint paths for the spamd_t domain are the following:"
+
+/usr/bin/spamd, /usr/sbin/spamd, /usr/bin/pyzord, /usr/bin/mimedefang, /usr/bin/mimedefang-multiplexor
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
+.PP
+The following process types are defined for spamd:
+
+.EX
+.B spamc_t, spamd_t, spamass_milter_t
+.EE
+.PP
+Note:
+.B semanage permissive -a spamd_t
+
+can be used to make the process type spamd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  spamd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run spamd with the tightest access possible.
@@ -25,26 +55,47 @@
 .EE
 
 .PP
-If you want to allow http daemon to check spa, you must turn on the httpd_can_check_spam boolean.
+If you want to allow http daemon to check spam, you must turn on the httpd_can_check_spam boolean.
+
+.EX
+.B setsebool -P httpd_can_check_spam 1
+.EE
+
+.PP
+If you want to allow user spamassassin clients to use the network, you must turn on the spamassassin_can_network boolean.
+
+.EX
+.B setsebool -P spamassassin_can_network 1
+.EE
+
+.PP
+If you want to allow spamd to read/write user home directories, you must turn on the spamd_enable_home_dirs boolean.
+
+.EX
+.B setsebool -P spamd_enable_home_dirs 1
+.EE
+
+.PP
+If you want to allow http daemon to check spam, you must turn on the httpd_can_check_spam boolean.
 
 .EX
 .B setsebool -P httpd_can_check_spam 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for spamd:
 
 
 .EX
 .PP
-.B spamd_compiled_t 
+.B spamd_compiled_t
 .EE
 
 - Set files with the spamd_compiled_t type, if you want to treat the files as spamd compiled data.
@@ -52,7 +103,7 @@
 
 .EX
 .PP
-.B spamd_etc_t 
+.B spamd_etc_t
 .EE
 
 - Set files with the spamd_etc_t type, if you want to store spamd files in the /etc directories.
@@ -60,55 +111,39 @@
 
 .EX
 .PP
-.B spamd_exec_t 
+.B spamd_exec_t
 .EE
 
 - Set files with the spamd_exec_t type, if you want to transition an executable to the spamd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/spamd, /usr/bin/mimedefang-multiplexor, /usr/bin/spamd, /usr/bin/mimedefang
 
 .EX
 .PP
-.B spamd_initrc_exec_t 
+.B spamd_initrc_exec_t
 .EE
 
 - Set files with the spamd_initrc_exec_t type, if you want to transition an executable to the spamd_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/spamassassin, /etc/rc\.d/init\.d/spamd, /etc/rc\.d/init\.d/mimedefang.*
 
 .EX
 .PP
-.B spamd_log_t 
+.B spamd_log_t
 .EE
 
 - Set files with the spamd_log_t type, if you want to treat the data as spamd log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/razor-agent\.log, /var/log/spamd\.log, /var/log/mimedefang
 
 .EX
 .PP
-.B spamd_spool_t 
+.B spamd_spool_t
 .EE
 
 - Set files with the spamd_spool_t type, if you want to store the spamd files under the /var/spool directory.
 
-.br
-.TP 5
-Paths: 
-/var/spool/spamd(/.*)?, /var/spool/spamassassin(/.*)?
 
 .EX
 .PP
-.B spamd_tmp_t 
+.B spamd_tmp_t
 .EE
 
 - Set files with the spamd_tmp_t type, if you want to store spamd temporary files in the /tmp directories.
@@ -116,75 +151,221 @@
 
 .EX
 .PP
-.B spamd_var_lib_t 
+.B spamd_var_lib_t
 .EE
 
 - Set files with the spamd_var_lib_t type, if you want to store the spamd files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/spamassassin(/.*)?, /var/lib/razor(/.*)?
 
 .EX
 .PP
-.B spamd_var_run_t 
+.B spamd_var_run_t
 .EE
 
 - Set files with the spamd_var_run_t type, if you want to store the spamd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/spamassassin(/.*)?, /var/spool/MIMEDefang(/.*)?, /var/spool/MD-Quarantine(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for spamd:
 
 .EX
 .TP 5
-.B spamd_port_t 
+.B spamd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 783
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
-.PP 
-The following process types are defined for spamd:
+.SH "MANAGED FILES"
 
-.EX
-.B spamc_t, spamd_t, spamass_milter_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type spamd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B amavis_var_lib_t
+
+	/var/amavis(/.*)?
+.br
+	/var/lib/amavis(/.*)?
+.br
+
+.br
+.B exim_spool_t
+
+	/var/spool/exim[0-9]?(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B spamass_milter_state_t
+
+	/var/lib/spamass-milter(/.*)?
+.br
+
+.br
+.B spamc_home_t
+
+	/root/\.razor(/.*)?
+.br
+	/root/\.pyzor(/.*)?
+.br
+	/root/\.spamd(/.*)?
+.br
+	/root/\.spamassassin(/.*)?
+.br
+	/home/[^/]*/\.razor(/.*)?
+.br
+	/home/[^/]*/\.pyzor(/.*)?
+.br
+	/home/[^/]*/\.spamd(/.*)?
+.br
+	/home/[^/]*/\.spamassassin(/.*)?
+.br
+
+.br
+.B spamd_compiled_t
+
+	/var/lib/spamassassin/compiled(/.*)?
+.br
+
+.br
+.B spamd_etc_t
+
+	/etc/razor(/.*)?
+.br
+	/etc/pyzor(/.*)?
+.br
+
+.br
+.B spamd_log_t
+
+	/var/log/spamd\.log.*
+.br
+	/var/log/mimedefang.*
+.br
+	/var/log/pyzord\.log.*
+.br
+	/var/log/razor-agent\.log.*
+.br
+
+.br
+.B spamd_spool_t
+
+	/var/spool/spamd(/.*)?
+.br
+	/var/spool/spamassassin(/.*)?
+.br
+
+.br
+.B spamd_tmp_t
+
+
+.br
+.B spamd_var_lib_t
+
+	/var/lib/razor(/.*)?
+.br
+	/var/lib/pyzord(/.*)?
+.br
+	/var/lib/spamassassin(/.*)?
+.br
+
+.br
+.B spamd_var_run_t
+
+	/var/run/spamassassin(/.*)?
+.br
+	/var/spool/MIMEDefang(/.*)?
+.br
+	/var/spool/MD-Quarantine(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -203,12 +384,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), spamd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), spamd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), spamass_milter_selinux(8), spamc_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/squid_selinux.8 serefpolicy-3.7.19/man/man8/squid_selinux.8
--- nsaserefpolicy/man/man8/squid_selinux.8	2013-03-15 11:41:11.848153501 +0100
+++ serefpolicy-3.7.19/man/man8/squid_selinux.8	2013-03-15 11:39:58.658151831 +0100
@@ -1,23 +1,54 @@
-.TH  "squid_selinux"  "8"  "squid" "dwalsh@redhat.com" "squid SELinux Policy documentation"
+.TH  "squid_selinux"  "8"  "13-01-04" "squid" "SELinux Policy documentation for squid"
 .SH "NAME"
 squid_selinux \- Security Enhanced Linux Policy for the squid processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the squid processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B squid
-(Squid caching http proxy server)
-processes via flexible mandatory access
-control.  
+The squid processes execute with the squid_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep squid_t
+
+
+.SH "ENTRYPOINTS"
+
+The squid_t SELinux type can be entered via the "squid_exec_t" file type.  The default entrypoint paths for the squid_t domain are the following:"
+
+/usr/sbin/squid
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
+.PP
+The following process types are defined for squid:
+
+.EX
+.B squid_t
+.EE
+.PP
+Note:
+.B semanage permissive -a squid_t
+
+can be used to make the process type squid_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  squid policy is extremely flexible and has several booleans that allow you to manipulate the policy and run squid with the tightest access possible.
 
 
 .PP
-If you want to allow squid to run as a transparent proxy (TPROXY, you must turn on the squid_use_tproxy boolean.
+If you want to allow squid to connect to all ports, not just HTTP, FTP, and Gopher ports, you must turn on the squid_connect_any boolean.
+
+.EX
+.B setsebool -P squid_connect_any 1
+.EE
+
+.PP
+If you want to allow squid to run as a transparent proxy (TPROXY), you must turn on the squid_use_tproxy boolean.
 
 .EX
 .B setsebool -P squid_use_tproxy 1
@@ -30,44 +61,43 @@
 .B setsebool -P squid_connect_any 1
 .EE
 
+.PP
+If you want to allow squid to run as a transparent proxy (TPROXY), you must turn on the squid_use_tproxy boolean.
+
+.EX
+.B setsebool -P squid_use_tproxy 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for squid:
 
 
 .EX
 .PP
-.B squid_cache_t 
+.B squid_cache_t
 .EE
 
 - Set files with the squid_cache_t type, if you want to store the files under the /var/cache directory.
 
-.br
-.TP 5
-Paths: 
-/var/cache/squid(/.*)?, /var/spool/squid(/.*)?, /var/squidGuard(/.*)?
 
 .EX
 .PP
-.B squid_conf_t 
+.B squid_conf_t
 .EE
 
 - Set files with the squid_conf_t type, if you want to treat the files as squid configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/etc/squid(/.*)?, /usr/share/squid(/.*)?
 
 .EX
 .PP
-.B squid_exec_t 
+.B squid_exec_t
 .EE
 
 - Set files with the squid_exec_t type, if you want to transition an executable to the squid_t domain.
@@ -75,7 +105,7 @@
 
 .EX
 .PP
-.B squid_initrc_exec_t 
+.B squid_initrc_exec_t
 .EE
 
 - Set files with the squid_initrc_exec_t type, if you want to transition an executable to the squid_initrc_t domain.
@@ -83,19 +113,15 @@
 
 .EX
 .PP
-.B squid_log_t 
+.B squid_log_t
 .EE
 
 - Set files with the squid_log_t type, if you want to treat the data as squid log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/squid(/.*)?, /var/log/squidGuard(/.*)?
 
 .EX
 .PP
-.B squid_var_run_t 
+.B squid_var_run_t
 .EE
 
 - Set files with the squid_var_run_t type, if you want to store the squid files under the /run directory.
@@ -103,51 +129,157 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for squid:
 
 .EX
 .TP 5
-.B squid_port_t 
+.B squid_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 3401,4827
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
-.PP 
-The following process types are defined for squid:
-
-.EX
-.B squid_t 
+udp 3401,4827
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type squid_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B squid_cache_t
+
+	/var/squidGuard(/.*)?
+.br
+	/var/cache/squid(/.*)?
+.br
+	/var/spool/squid(/.*)?
+.br
+
+.br
+.B squid_log_t
+
+	/var/log/squid(/.*)?
+.br
+	/var/log/squidGuard(/.*)?
+.br
+
+.br
+.B squid_var_run_t
+
+	/var/run/squid\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B tmpfs_t
+
+	/dev/shm
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -166,12 +298,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), squid(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), squid(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/srvsvcd_selinux.8 serefpolicy-3.7.19/man/man8/srvsvcd_selinux.8
--- nsaserefpolicy/man/man8/srvsvcd_selinux.8	2013-03-15 11:41:11.872153501 +0100
+++ serefpolicy-3.7.19/man/man8/srvsvcd_selinux.8	2013-03-15 11:39:58.958151838 +0100
@@ -1,25 +1,55 @@
-.TH  "srvsvcd_selinux"  "8"  "srvsvcd" "dwalsh@redhat.com" "srvsvcd SELinux Policy documentation"
+.TH  "srvsvcd_selinux"  "8"  "13-01-04" "srvsvcd" "SELinux Policy documentation for srvsvcd"
 .SH "NAME"
 srvsvcd_selinux \- Security Enhanced Linux Policy for the srvsvcd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the srvsvcd processes via flexible mandatory access control.
 
+The srvsvcd processes execute with the srvsvcd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep srvsvcd_t
+
+
+.SH "ENTRYPOINTS"
+
+The srvsvcd_t SELinux type can be entered via the "srvsvcd_exec_t" file type.  The default entrypoint paths for the srvsvcd_t domain are the following:"
+
+/usr/sbin/srvsvcd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux srvsvcd policy is very flexible allowing users to setup their srvsvcd processes in as secure a method as possible.
+.PP
+The following process types are defined for srvsvcd:
+
+.EX
+.B srvsvcd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a srvsvcd_t
+
+can be used to make the process type srvsvcd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux srvsvcd policy is very flexible allowing users to setup their srvsvcd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for srvsvcd:
 
 
 .EX
 .PP
-.B srvsvcd_exec_t 
+.B srvsvcd_exec_t
 .EE
 
 - Set files with the srvsvcd_exec_t type, if you want to transition an executable to the srvsvcd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B srvsvcd_var_lib_t 
+.B srvsvcd_var_lib_t
 .EE
 
 - Set files with the srvsvcd_var_lib_t type, if you want to store the srvsvcd files under the /var/lib directory.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B srvsvcd_var_run_t 
+.B srvsvcd_var_run_t
 .EE
 
 - Set files with the srvsvcd_var_run_t type, if you want to store the srvsvcd files under the /run directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B srvsvcd_var_socket_t 
+.B srvsvcd_var_socket_t
 .EE
 
 - Set files with the srvsvcd_var_socket_t type, if you want to treat the files as srvsvcd var socket data.
@@ -51,28 +81,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux srvsvcd policy is very flexible allowing users to setup their srvsvcd processes in as secure a method as possible.
-.PP 
-The following process types are defined for srvsvcd:
+.SH "MANAGED FILES"
 
-.EX
-.B srvsvcd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type srvsvcd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B srvsvcd_var_lib_t
+
+
+.br
+.B srvsvcd_var_run_t
+
+	/var/run/srvsvcd.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +161,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), srvsvcd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), srvsvcd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/sshd_selinux.8 serefpolicy-3.7.19/man/man8/sshd_selinux.8
--- nsaserefpolicy/man/man8/sshd_selinux.8	2013-03-15 11:41:11.755153499 +0100
+++ serefpolicy-3.7.19/man/man8/sshd_selinux.8	2013-03-15 11:39:56.388151779 +0100
@@ -1,34 +1,64 @@
-.TH  "sshd_selinux"  "8"  "sshd" "dwalsh@redhat.com" "sshd SELinux Policy documentation"
+.TH  "sshd_selinux"  "8"  "13-01-04" "sshd" "SELinux Policy documentation for sshd"
 .SH "NAME"
 sshd_selinux \- Security Enhanced Linux Policy for the sshd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sshd processes via flexible mandatory access control.
 
+The sshd processes execute with the sshd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep sshd_t
+
+
+.SH "ENTRYPOINTS"
+
+The sshd_t SELinux type can be entered via the "sshd_exec_t" file type.  The default entrypoint paths for the sshd_t domain are the following:"
+
+/usr/sbin/sshd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
+.PP
+The following process types are defined for sshd:
+
+.EX
+.B ssh_keysign_t, ssh_keygen_t, ssh_t, sshd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sshd_t
+
+can be used to make the process type sshd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  sshd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sshd with the tightest access possible.
 
 
 .PP
-If you want to allow ssh with chroot env to read and write files in the user home directorie, you must turn on the ssh_chroot_rw_homedirs boolean.
+If you want to allow host key based authentication, you must turn on the allow_ssh_keysign boolean.
 
 .EX
-.B setsebool -P ssh_chroot_rw_homedirs 1
+.B setsebool -P allow_ssh_keysign 1
 .EE
 
 .PP
-If you want to allow ssh logins as sysadm_r:sysadm_, you must turn on the ssh_sysadm_login boolean.
+If you want to allow ssh with chroot env to read and write files in the user home directories, you must turn on the ssh_chroot_rw_homedirs boolean.
 
 .EX
-.B setsebool -P ssh_sysadm_login 1
+.B setsebool -P ssh_chroot_rw_homedirs 1
 .EE
 
 .PP
-If you want to allow host key based authenticatio, you must turn on the allow_ssh_keysign boolean.
+If you want to allow ssh with chroot env to manage all files, you must turn on the ssh_chroot_full_access boolean.
 
 .EX
-.B setsebool -P allow_ssh_keysign 1
+.B setsebool -P ssh_chroot_full_access 1
 .EE
 
 .PP
@@ -38,80 +68,76 @@
 .B setsebool -P fenced_can_ssh 1
 .EE
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-.PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
-SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
-.PP 
-The following file types are defined for sshd:
-
+If you want to allow ssh with chroot env to apache content, you must turn on the ssh_chroot_manage_apache_content boolean.
 
 .EX
-.PP
-.B ssh_agent_exec_t 
+.B setsebool -P ssh_chroot_manage_apache_content 1
 .EE
 
-- Set files with the ssh_agent_exec_t type, if you want to transition an executable to the ssh_agent_t domain.
-
+.PP
+If you want to allow ssh logins as sysadm_r:sysadm_t, you must turn on the ssh_sysadm_login boolean.
 
 .EX
-.PP
-.B ssh_agent_tmp_t 
+.B setsebool -P ssh_sysadm_login 1
 .EE
 
-- Set files with the ssh_agent_tmp_t type, if you want to store ssh agent temporary files in the /tmp directories.
-
+.PP
+If you want to allow host key based authentication, you must turn on the allow_ssh_keysign boolean.
 
 .EX
-.PP
-.B ssh_exec_t 
+.B setsebool -P allow_ssh_keysign 1
 .EE
 
-- Set files with the ssh_exec_t type, if you want to transition an executable to the ssh_t domain.
-
+.PP
+If you want to allow ssh with chroot env to read and write files in the user home directories, you must turn on the ssh_chroot_rw_homedirs boolean.
 
 .EX
-.PP
-.B ssh_home_t 
+.B setsebool -P ssh_chroot_rw_homedirs 1
 .EE
 
-- Set files with the ssh_home_t type, if you want to store ssh files in the users home directory.
-
-.br
-.TP 5
-Paths: 
-/var/lib/gitolite/\.ssh(/.*)?, /root/\.shosts, /var/lib/amanda/\.ssh(/.*)?, /root/\.ssh(/.*)?
+.PP
+If you want to allow ssh with chroot env to manage all files, you must turn on the ssh_chroot_full_access boolean.
 
 .EX
-.PP
-.B ssh_keygen_exec_t 
+.B setsebool -P ssh_chroot_full_access 1
 .EE
 
-- Set files with the ssh_keygen_exec_t type, if you want to transition an executable to the ssh_keygen_t domain.
-
+.PP
+If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
 
 .EX
-.PP
-.B ssh_keysign_exec_t 
+.B setsebool -P fenced_can_ssh 1
 .EE
 
-- Set files with the ssh_keysign_exec_t type, if you want to transition an executable to the ssh_keysign_t domain.
-
+.PP
+If you want to allow ssh with chroot env to apache content, you must turn on the ssh_chroot_manage_apache_content boolean.
 
 .EX
+.B setsebool -P ssh_chroot_manage_apache_content 1
+.EE
+
 .PP
-.B ssh_tmpfs_t 
+If you want to allow ssh logins as sysadm_r:sysadm_t, you must turn on the ssh_sysadm_login boolean.
+
+.EX
+.B setsebool -P ssh_sysadm_login 1
 .EE
 
-- Set files with the ssh_tmpfs_t type, if you want to store ssh files on a tmpfs file system.
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
+.PP
+The following file types are defined for sshd:
 
 
 .EX
 .PP
-.B sshd_exec_t 
+.B sshd_exec_t
 .EE
 
 - Set files with the sshd_exec_t type, if you want to transition an executable to the sshd_t domain.
@@ -119,7 +145,7 @@
 
 .EX
 .PP
-.B sshd_initrc_exec_t 
+.B sshd_initrc_exec_t
 .EE
 
 - Set files with the sshd_initrc_exec_t type, if you want to transition an executable to the sshd_initrc_t domain.
@@ -127,19 +153,15 @@
 
 .EX
 .PP
-.B sshd_key_t 
+.B sshd_key_t
 .EE
 
 - Set files with the sshd_key_t type, if you want to treat the files as sshd key data.
 
-.br
-.TP 5
-Paths: 
-/etc/ssh/ssh_host_rsa_key, /etc/ssh/ssh_host_rsa_key.pub, /etc/ssh/ssh_host_dsa_key.pub, /etc/ssh/ssh_host_key, /etc/ssh/ssh_host_dsa_key, /etc/ssh/ssh_host_key.pub, /etc/ssh/primes
 
 .EX
 .PP
-.B sshd_keytab_t 
+.B sshd_keytab_t
 .EE
 
 - Set files with the sshd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -147,7 +169,7 @@
 
 .EX
 .PP
-.B sshd_tmpfs_t 
+.B sshd_tmpfs_t
 .EE
 
 - Set files with the sshd_tmpfs_t type, if you want to store sshd files on a tmpfs file system.
@@ -155,7 +177,7 @@
 
 .EX
 .PP
-.B sshd_var_run_t 
+.B sshd_var_run_t
 .EE
 
 - Set files with the sshd_var_run_t type, if you want to store the sshd files under the /run directory.
@@ -163,51 +185,245 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for sshd:
 
 .EX
 .TP 5
-.B ssh_port_t 
+.B ssh_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 22
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
-.PP 
-The following process types are defined for sshd:
+.SH "MANAGED FILES"
 
-.EX
-.B ssh_keysign_t, ssh_keygen_t, ssh_t, sshd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sshd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B condor_var_lib_t
+
+	/var/lib/condor(/.*)?
+.br
+	/var/lib/condor/spool(/.*)?
+.br
+	/var/lib/condor/execute(/.*)?
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B gitosis_var_lib_t
+
+	/var/lib/gitosis(/.*)?
+.br
+	/var/lib/gitolite(3)?(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B openshift_tmp_t
+
+	/var/lib/openshift/.*/\.tmp(/.*)?
+.br
+	/var/lib/openshift/.*/\.sandbox(/.*)?
+.br
+	/var/lib/stickshift/.*/\.tmp(/.*)?
+.br
+	/var/lib/stickshift/.*/\.sandbox(/.*)?
+.br
+
+.br
+.B pam_var_run_t
+
+	/var/run/sudo(/.*)?
+.br
+	/var/run/sepermit(/.*)?
+.br
+	/var/run/pam_mount(/.*)?
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B ssh_home_t
+
+	/root/\.ssh(/.*)?
+.br
+	/var/lib/gitolite(3)?/\.ssh(/.*)?
+.br
+	/var/lib/openshift/[^/]+/\.ssh(/.*)?
+.br
+	/var/lib/amanda/\.ssh(/.*)?
+.br
+	/var/lib/stickshift/[^/]+/\.ssh(/.*)?
+.br
+	/root/\.shosts
+.br
+	/home/[^/]*/\.ssh(/.*)?
+.br
+	/home/[^/]*/\.shosts
+.br
+
+.br
+.B sshd_tmpfs_t
+
+
+.br
+.B sshd_var_run_t
+
+	/var/run/sshd\.init\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B var_auth_t
+
+	/var/lib/abl(/.*)?
+.br
+	/var/lib/pam_ssh(/.*)?
+.br
+	/var/run/pam_ssh(/.*)?
+.br
+	/var/lib/pam_shield(/.*)?
+.br
+	/var/opt/quest/vas/vasd(/.*)?
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -226,12 +442,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sshd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), sshd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), ssh_selinux(8), ssh_selinux(8), ssh_keygen_selinux(8), ssh_keysign_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ssh_keygen_selinux.8 serefpolicy-3.7.19/man/man8/ssh_keygen_selinux.8
--- nsaserefpolicy/man/man8/ssh_keygen_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/ssh_keygen_selinux.8	2013-03-15 11:39:55.602151761 +0100
@@ -0,0 +1,96 @@
+.TH  "ssh_keygen_selinux"  "8"  "13-01-04" "ssh_keygen" "SELinux Policy documentation for ssh_keygen"
+.SH "NAME"
+ssh_keygen_selinux \- Security Enhanced Linux Policy for the ssh_keygen processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the ssh_keygen processes via flexible mandatory access control.
+
+The ssh_keygen processes execute with the ssh_keygen_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep ssh_keygen_t
+
+
+.SH "ENTRYPOINTS"
+
+The ssh_keygen_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,ssh_keygen_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the ssh_keygen_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/ssh-keygen, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ssh_keygen policy is very flexible allowing users to setup their ssh_keygen processes in as secure a method as possible.
+.PP
+The following process types are defined for ssh_keygen:
+
+.EX
+.B ssh_keygen_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ssh_keygen_t
+
+can be used to make the process type ssh_keygen_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ssh_keygen policy is very flexible allowing users to setup their ssh_keygen processes in as secure a method as possible.
+.PP
+The following file types are defined for ssh_keygen:
+
+
+.EX
+.PP
+.B ssh_keygen_exec_t
+.EE
+
+- Set files with the ssh_keygen_exec_t type, if you want to transition an executable to the ssh_keygen_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type ssh_keygen_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), ssh_keygen(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, ssh_selinux(8), ssh_selinux(8), ssh_keysign_selinux(8), sshd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ssh_keysign_selinux.8 serefpolicy-3.7.19/man/man8/ssh_keysign_selinux.8
--- nsaserefpolicy/man/man8/ssh_keysign_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/ssh_keysign_selinux.8	2013-03-15 11:40:04.422151962 +0100
@@ -0,0 +1,153 @@
+.TH  "ssh_keysign_selinux"  "8"  "13-01-04" "ssh_keysign" "SELinux Policy documentation for ssh_keysign"
+.SH "NAME"
+ssh_keysign_selinux \- Security Enhanced Linux Policy for the ssh_keysign processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the ssh_keysign processes via flexible mandatory access control.
+
+The ssh_keysign processes execute with the ssh_keysign_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep ssh_keysign_t
+
+
+.SH "ENTRYPOINTS"
+
+The ssh_keysign_t SELinux type can be entered via the "ssh_keysign_exec_t" file type.  The default entrypoint paths for the ssh_keysign_t domain are the following:"
+
+/usr/libexec/openssh/ssh-keysign
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ssh_keysign policy is very flexible allowing users to setup their ssh_keysign processes in as secure a method as possible.
+.PP
+The following process types are defined for ssh_keysign:
+
+.EX
+.B ssh_keysign_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ssh_keysign_t
+
+can be used to make the process type ssh_keysign_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  ssh_keysign policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ssh_keysign with the tightest access possible.
+
+
+.PP
+If you want to allow host key based authentication, you must turn on the allow_ssh_keysign boolean.
+
+.EX
+.B setsebool -P allow_ssh_keysign 1
+.EE
+
+.PP
+If you want to allow host key based authentication, you must turn on the allow_ssh_keysign boolean.
+
+.EX
+.B setsebool -P allow_ssh_keysign 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux ssh_keysign policy is very flexible allowing users to setup their ssh_keysign processes in as secure a method as possible.
+.PP
+The following file types are defined for ssh_keysign:
+
+
+.EX
+.PP
+.B ssh_keysign_exec_t
+.EE
+
+- Set files with the ssh_keysign_exec_t type, if you want to transition an executable to the ssh_keysign_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type ssh_keysign_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), ssh_keysign(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), ssh_selinux(8), ssh_selinux(8), ssh_keygen_selinux(8), sshd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ssh_selinux.8 serefpolicy-3.7.19/man/man8/ssh_selinux.8
--- nsaserefpolicy/man/man8/ssh_selinux.8	2013-03-15 11:41:12.170153508 +0100
+++ serefpolicy-3.7.19/man/man8/ssh_selinux.8	2013-03-15 11:40:04.745151970 +0100
@@ -1,63 +1,143 @@
-.TH  "ssh_selinux"  "8"  "ssh" "dwalsh@redhat.com" "ssh SELinux Policy documentation"
+.TH  "ssh_selinux"  "8"  "13-01-04" "ssh" "SELinux Policy documentation for ssh"
 .SH "NAME"
 ssh_selinux \- Security Enhanced Linux Policy for the ssh processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ssh processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ssh
-(Secure shell client and server policy)
-processes via flexible mandatory access
-control.  
+The ssh processes execute with the ssh_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ssh_t
+
+
+.SH "ENTRYPOINTS"
+
+The ssh_t SELinux type can be entered via the "ssh_exec_t" file type.  The default entrypoint paths for the ssh_t domain are the following:"
+
+/usr/bin/ssh
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
+.PP
+The following process types are defined for ssh:
+
+.EX
+.B ssh_keysign_t, ssh_keygen_t, ssh_t, sshd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ssh_t
+
+can be used to make the process type ssh_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  ssh policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ssh with the tightest access possible.
 
 
 .PP
-If you want to allow ssh with chroot env to read and write files in the user home directorie, you must turn on the ssh_chroot_rw_homedirs boolean.
+If you want to allow host key based authentication, you must turn on the allow_ssh_keysign boolean.
+
+.EX
+.B setsebool -P allow_ssh_keysign 1
+.EE
+
+.PP
+If you want to allow ssh with chroot env to read and write files in the user home directories, you must turn on the ssh_chroot_rw_homedirs boolean.
 
 .EX
 .B setsebool -P ssh_chroot_rw_homedirs 1
 .EE
 
 .PP
-If you want to allow ssh logins as sysadm_r:sysadm_, you must turn on the ssh_sysadm_login boolean.
+If you want to allow ssh with chroot env to manage all files, you must turn on the ssh_chroot_full_access boolean.
+
+.EX
+.B setsebool -P ssh_chroot_full_access 1
+.EE
+
+.PP
+If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
+
+.EX
+.B setsebool -P fenced_can_ssh 1
+.EE
+
+.PP
+If you want to allow ssh with chroot env to apache content, you must turn on the ssh_chroot_manage_apache_content boolean.
+
+.EX
+.B setsebool -P ssh_chroot_manage_apache_content 1
+.EE
+
+.PP
+If you want to allow ssh logins as sysadm_r:sysadm_t, you must turn on the ssh_sysadm_login boolean.
 
 .EX
 .B setsebool -P ssh_sysadm_login 1
 .EE
 
 .PP
-If you want to allow host key based authenticatio, you must turn on the allow_ssh_keysign boolean.
+If you want to allow host key based authentication, you must turn on the allow_ssh_keysign boolean.
 
 .EX
 .B setsebool -P allow_ssh_keysign 1
 .EE
 
 .PP
+If you want to allow ssh with chroot env to read and write files in the user home directories, you must turn on the ssh_chroot_rw_homedirs boolean.
+
+.EX
+.B setsebool -P ssh_chroot_rw_homedirs 1
+.EE
+
+.PP
+If you want to allow ssh with chroot env to manage all files, you must turn on the ssh_chroot_full_access boolean.
+
+.EX
+.B setsebool -P ssh_chroot_full_access 1
+.EE
+
+.PP
 If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
 
 .EX
 .B setsebool -P fenced_can_ssh 1
 .EE
 
+.PP
+If you want to allow ssh with chroot env to apache content, you must turn on the ssh_chroot_manage_apache_content boolean.
+
+.EX
+.B setsebool -P ssh_chroot_manage_apache_content 1
+.EE
+
+.PP
+If you want to allow ssh logins as sysadm_r:sysadm_t, you must turn on the ssh_sysadm_login boolean.
+
+.EX
+.B setsebool -P ssh_sysadm_login 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ssh:
 
 
 .EX
 .PP
-.B ssh_agent_exec_t 
+.B ssh_agent_exec_t
 .EE
 
 - Set files with the ssh_agent_exec_t type, if you want to transition an executable to the ssh_agent_t domain.
@@ -65,7 +145,7 @@
 
 .EX
 .PP
-.B ssh_agent_tmp_t 
+.B ssh_agent_tmp_t
 .EE
 
 - Set files with the ssh_agent_tmp_t type, if you want to store ssh agent temporary files in the /tmp directories.
@@ -73,7 +153,7 @@
 
 .EX
 .PP
-.B ssh_exec_t 
+.B ssh_exec_t
 .EE
 
 - Set files with the ssh_exec_t type, if you want to transition an executable to the ssh_t domain.
@@ -81,19 +161,15 @@
 
 .EX
 .PP
-.B ssh_home_t 
+.B ssh_home_t
 .EE
 
 - Set files with the ssh_home_t type, if you want to store ssh files in the users home directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/gitolite/\.ssh(/.*)?, /root/\.shosts, /var/lib/amanda/\.ssh(/.*)?, /root/\.ssh(/.*)?
 
 .EX
 .PP
-.B ssh_keygen_exec_t 
+.B ssh_keygen_exec_t
 .EE
 
 - Set files with the ssh_keygen_exec_t type, if you want to transition an executable to the ssh_keygen_t domain.
@@ -101,7 +177,7 @@
 
 .EX
 .PP
-.B ssh_keysign_exec_t 
+.B ssh_keysign_exec_t
 .EE
 
 - Set files with the ssh_keysign_exec_t type, if you want to transition an executable to the ssh_keysign_t domain.
@@ -109,7 +185,7 @@
 
 .EX
 .PP
-.B ssh_tmpfs_t 
+.B ssh_tmpfs_t
 .EE
 
 - Set files with the ssh_tmpfs_t type, if you want to store ssh files on a tmpfs file system.
@@ -117,7 +193,7 @@
 
 .EX
 .PP
-.B sshd_exec_t 
+.B sshd_exec_t
 .EE
 
 - Set files with the sshd_exec_t type, if you want to transition an executable to the sshd_t domain.
@@ -125,7 +201,7 @@
 
 .EX
 .PP
-.B sshd_initrc_exec_t 
+.B sshd_initrc_exec_t
 .EE
 
 - Set files with the sshd_initrc_exec_t type, if you want to transition an executable to the sshd_initrc_t domain.
@@ -133,19 +209,15 @@
 
 .EX
 .PP
-.B sshd_key_t 
+.B sshd_key_t
 .EE
 
 - Set files with the sshd_key_t type, if you want to treat the files as sshd key data.
 
-.br
-.TP 5
-Paths: 
-/etc/ssh/ssh_host_rsa_key, /etc/ssh/ssh_host_rsa_key.pub, /etc/ssh/ssh_host_dsa_key.pub, /etc/ssh/ssh_host_key, /etc/ssh/ssh_host_dsa_key, /etc/ssh/ssh_host_key.pub, /etc/ssh/primes
 
 .EX
 .PP
-.B sshd_keytab_t 
+.B sshd_keytab_t
 .EE
 
 - Set files with the sshd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -153,7 +225,7 @@
 
 .EX
 .PP
-.B sshd_tmpfs_t 
+.B sshd_tmpfs_t
 .EE
 
 - Set files with the sshd_tmpfs_t type, if you want to store sshd files on a tmpfs file system.
@@ -161,7 +233,7 @@
 
 .EX
 .PP
-.B sshd_var_run_t 
+.B sshd_var_run_t
 .EE
 
 - Set files with the sshd_var_run_t type, if you want to store the sshd files under the /run directory.
@@ -169,51 +241,123 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for ssh:
 
 .EX
 .TP 5
-.B ssh_port_t 
+.B ssh_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 22
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
-.PP 
-The following process types are defined for ssh:
+.SH "MANAGED FILES"
 
-.EX
-.B ssh_keysign_t, ssh_keygen_t, ssh_t, sshd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ssh_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B ssh_home_t
+
+	/root/\.ssh(/.*)?
+.br
+	/var/lib/gitolite(3)?/\.ssh(/.*)?
+.br
+	/var/lib/openshift/[^/]+/\.ssh(/.*)?
+.br
+	/var/lib/amanda/\.ssh(/.*)?
+.br
+	/var/lib/stickshift/[^/]+/\.ssh(/.*)?
+.br
+	/root/\.shosts
+.br
+	/home/[^/]*/\.ssh(/.*)?
+.br
+	/home/[^/]*/\.shosts
+.br
+
+.br
+.B ssh_tmpfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -232,12 +376,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ssh(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), ssh(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), ssh_keygen_selinux(8), ssh_keysign_selinux(8), sshd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/sssd_selinux.8 serefpolicy-3.7.19/man/man8/sssd_selinux.8
--- nsaserefpolicy/man/man8/sssd_selinux.8	2013-03-15 11:41:11.932153503 +0100
+++ serefpolicy-3.7.19/man/man8/sssd_selinux.8	2013-03-15 11:40:00.034151862 +0100
@@ -1,31 +1,55 @@
-.TH  "sssd_selinux"  "8"  "sssd" "dwalsh@redhat.com" "sssd SELinux Policy documentation"
+.TH  "sssd_selinux"  "8"  "13-01-04" "sssd" "SELinux Policy documentation for sssd"
 .SH "NAME"
 sssd_selinux \- Security Enhanced Linux Policy for the sssd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sssd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B sssd
-(System Security Services Daemon)
-processes via flexible mandatory access
-control.  
+The sssd processes execute with the sssd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep sssd_t
+
+
+.SH "ENTRYPOINTS"
+
+The sssd_t SELinux type can be entered via the "sssd_exec_t" file type.  The default entrypoint paths for the sssd_t domain are the following:"
+
+/usr/sbin/sssd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sssd policy is very flexible allowing users to setup their sssd processes in as secure a method as possible.
+.PP
+The following process types are defined for sssd:
+
+.EX
+.B sssd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sssd_t
+
+can be used to make the process type sssd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux sssd policy is very flexible allowing users to setup their sssd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for sssd:
 
 
 .EX
 .PP
-.B sssd_exec_t 
+.B sssd_exec_t
 .EE
 
 - Set files with the sssd_exec_t type, if you want to transition an executable to the sssd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B sssd_initrc_exec_t 
+.B sssd_initrc_exec_t
 .EE
 
 - Set files with the sssd_initrc_exec_t type, if you want to transition an executable to the sssd_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B sssd_public_t 
+.B sssd_public_t
 .EE
 
 - Set files with the sssd_public_t type, if you want to treat the files as sssd public data.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B sssd_var_lib_t 
+.B sssd_var_lib_t
 .EE
 
 - Set files with the sssd_var_lib_t type, if you want to store the sssd files under the /var/lib directory.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B sssd_var_log_t 
+.B sssd_var_log_t
 .EE
 
 - Set files with the sssd_var_log_t type, if you want to treat the data as sssd var log data, usually stored under the /var/log directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B sssd_var_run_t 
+.B sssd_var_run_t
 .EE
 
 - Set files with the sssd_var_run_t type, if you want to store the sssd files under the /run directory.
@@ -73,28 +97,140 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sssd policy is very flexible allowing users to setup their sssd processes in as secure a method as possible.
-.PP 
-The following process types are defined for sssd:
+.SH "MANAGED FILES"
 
-.EX
-.B sssd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sssd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B selinux_login_config_t
+
+	/etc/selinux/([^/]*/)?logins(/.*)?
+.br
+
+.br
+.B sssd_public_t
+
+	/var/lib/sss/mc(/.*)?
+.br
+	/var/lib/sss/pubconf(/.*)?
+.br
+
+.br
+.B sssd_var_lib_t
+
+	/var/lib/sss(/.*)?
+.br
+
+.br
+.B sssd_var_log_t
+
+	/var/log/sssd(/.*)?
+.br
+
+.br
+.B sssd_var_run_t
+
+	/var/run/sssd.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -107,11 +243,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sssd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), sssd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/staff_selinux.8 serefpolicy-3.7.19/man/man8/staff_selinux.8
--- nsaserefpolicy/man/man8/staff_selinux.8	2013-03-15 11:41:09.846153455 +0100
+++ serefpolicy-3.7.19/man/man8/staff_selinux.8	2013-03-15 11:39:54.088151727 +0100
@@ -1,6 +1,6 @@
 .TH  "staff_selinux"  "8"  "staff" "mgrepl@redhat.com" "staff SELinux Policy documentation"
 .SH "NAME"
-staff_u \- \fBAdministrator's unprivileged user\fP - Security Enhanced Linux Policy 
+staff_u \- \fBAdministrator's unprivileged user\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
@@ -10,9 +10,9 @@
 
 The SELinux user will usually login to a system with a context that looks like:
 
-.B staff_u:staff_r:staff_u:s0-s0:c0.c1023
+.B staff_u:staff_r:staff_t:s0-s0:c0.c1023
 
-Linux users are automatically assigned an SELinux users at login.  
+Linux users are automatically assigned an SELinux users at login.
 Login programs use the SELinux User to assign initial context to the user's shell.
 
 SELinux policy uses the context to control the user's access.
@@ -36,7 +36,7 @@
 
 .SH SUDO
 
-The SELinux user staff can execute sudo. 
+The SELinux user staff can execute sudo.
 
 You can set up sudo to allow staff to transition to an administrative domain:
 
@@ -47,14 +47,53 @@
 .br
 sudo will run COMMAND as staff_u:logadm_r:logadm_t:LEVEL
 
+You might also need to add one or more of these new roles to your SELinux user record.
+
+List the SELinux roles your SELinux user can reach by executing:
+
+.B $ semanage user -l |grep selinux_name
+
+Modify the roles list and add staff_r to this list.
+
+.B $ semanage user -m -R 'staff_r logadm_r sysadm_r unconfined_r webadm_r' staff_u
+
+For more details you can see semanage man page.
+
+
 USERNAME ALL=(ALL) ROLE=sysadm_r TYPE=sysadm_t COMMAND
 .br
 sudo will run COMMAND as staff_u:sysadm_r:sysadm_t:LEVEL
 
+You might also need to add one or more of these new roles to your SELinux user record.
+
+List the SELinux roles your SELinux user can reach by executing:
+
+.B $ semanage user -l |grep selinux_name
+
+Modify the roles list and add staff_r to this list.
+
+.B $ semanage user -m -R 'staff_r logadm_r sysadm_r unconfined_r webadm_r' staff_u
+
+For more details you can see semanage man page.
+
+
 USERNAME ALL=(ALL) ROLE=unconfined_r TYPE=unconfined_t COMMAND
 .br
 sudo will run COMMAND as staff_u:unconfined_r:unconfined_t:LEVEL
 
+You might also need to add one or more of these new roles to your SELinux user record.
+
+List the SELinux roles your SELinux user can reach by executing:
+
+.B $ semanage user -l |grep selinux_name
+
+Modify the roles list and add staff_r to this list.
+
+.B $ semanage user -m -R 'staff_r logadm_r sysadm_r unconfined_r webadm_r' staff_u
+
+For more details you can see semanage man page.
+
+
 USERNAME ALL=(ALL) ROLE=webadm_r TYPE=webadm_t COMMAND
 .br
 sudo will run COMMAND as staff_u:webadm_r:webadm_t:LEVEL
@@ -67,11 +106,13 @@
 
 Modify the roles list and add staff_r to this list.
 
-.B $ semanage user -m -R 'staff_r logadm_r sysadm_r unconfined_r webadm_r' staff_u 
+.B $ semanage user -m -R 'staff_r logadm_r sysadm_r unconfined_r webadm_r' staff_u
 
 For more details you can see semanage man page.
 
 
+The SELinux type staff_t is not allowed to execute sudo.
+
 .SH X WINDOWS LOGIN
 
 The SELinux user staff_u is able to X Windows login.
@@ -84,6 +125,11 @@
 .B xserver_port_t: 6000-6150
 
 .TP
+The SELinux user staff_u is able to connect to the following tcp ports.
+
+.B all ports
+
+.TP
 The SELinux user staff_u is able to listen on the following udp ports.
 
 .B all ports with out defined types
@@ -93,113 +139,299 @@
 
 .B all ports
 
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  staff_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run staff_t with the tightest access possible.
+.SH HOME_EXEC
 
+The SELinux user staff_u is able execute home content files.
 
-.PP
-If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+.SH TRANSITIONS
 
-.EX
-.B setsebool -P allow_user_mysql_connect 1
-.EE
+Three things can happen when staff_t attempts to execute a program.
 
-.PP
-If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+\fB1.\fP SELinux Policy can deny staff_t from executing the program.
 
-.EX
-.B setsebool -P user_setrlimit 1
-.EE
+.TP
 
-.PP
-If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+\fB2.\fP SELinux Policy can allow staff_t to execute the program in the current user type.
 
-.EX
-.B setsebool -P user_ping 1
-.EE
+Execute the following to see the types that the SELinux user staff_t can execute without transitioning:
 
-.PP
-If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+.B search -A -s staff_t -c file -p execute_no_trans
 
-.EX
-.B setsebool -P user_ttyfile_stat 1
-.EE
+.TP
 
-.PP
-If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+\fB3.\fP SELinux can allow staff_t to execute the program and transition to a new type.
 
-.EX
-.B setsebool -P user_direct_dri 1
-.EE
+Execute the following to see the types that the SELinux user staff_t can execute and transition:
 
-.PP
-If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+.B $ search -A -s staff_t -c process -p transition
 
-.EX
-.B setsebool -P user_rw_noexattrfile 1
-.EE
 
-.PP
-If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+.SH "MANAGED FILES"
 
-.EX
-.B setsebool -P user_tcp_server 1
-.EE
+The SELinux process type staff_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
 
-.PP
-If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+.br
+.B anon_inodefs_t
 
-.EX
-.B setsebool -P user_direct_mouse 1
-.EE
 
-.PP
-If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+.br
+.B auth_cache_t
 
-.EX
-.B setsebool -P allow_user_postgresql_connect 1
-.EE
+	/var/cache/coolkey(/.*)?
+.br
 
-.SH HOME_EXEC
+.br
+.B cgroup_t
 
-The SELinux user staff_u is able execute home content files.
+	/cgroup(/.*)?
+.br
 
-.SH TRANSITIONS
+.br
+.B chrome_sandbox_tmpfs_t
 
-Three things can happen when staff_t attempts to execute a program.
 
-\fB1.\fP SELinux Policy can deny staff_t from executing the program.
+.br
+.B games_data_t
 
-.TP
+	/var/games(/.*)?
+.br
+	/var/lib/games(/.*)?
+.br
 
-\fB2.\fP SELinux Policy can allow staff_t to execute the program in the current user type.
+.br
+.B gpg_agent_tmp_t
 
-Execute the following to see the types that the SELinux user staff_t can execute without transitioning:
 
-.B sesearch -A -s staff_t -c file -p execute_no_trans
+.br
+.B httpd_user_content_t
 
-.TP
+	/home/[^/]*/((www)|(web)|(public_html))(/.+)?
+.br
 
-\fB3.\fP SELinux can allow staff_t to execute the program and transition to a new type.
+.br
+.B httpd_user_htaccess_t
 
-Execute the following to see the types that the SELinux user staff_t can execute and transition:
 
-.B $ sesearch -A -s staff_t -c process -p transition
+.br
+.B httpd_user_ra_content_t
 
 
-.SH "COMMANDS"
+.br
+.B httpd_user_rw_content_t
+
+
+.br
+.B httpd_user_script_exec_t
+
+
+.br
+.B iceauth_home_t
+
+	/home/[^/]*/\.DCOP.*
+.br
+	/home/[^/]*/\.ICEauthority.*
+.br
+	/home/[^/]*/\.ICEauthority.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B kerneloops_tmp_t
+
+
+.br
+.B mail_spool_t
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mqueue_spool_t
+
+	/var/spool/(client)?mqueue(/.*)?
+.br
+
+.br
+.B nfsd_rw_t
+
+
+.br
+.B noxattrfs
+
+	all files on file systems which do not support extended attributes
+.br
+
+.br
+.B sandbox_file_t
+
+
+.br
+.B sandbox_tmpfs_type
+
+	all sandbox content in tmpfs file systems
+.br
+
+.br
+.B screen_home_t
+
+	/root/\.screen(/.*)?
+.br
+	/home/[^/]*/\.screen(/.*)?
+.br
+	/home/[^/]*/\.screenrc
+.br
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
+.br
+.B screen_var_run_t
+
+	/var/run/screen(/.*)?
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
-.B system-config-selinux 
+.br
+.B usbfs_t
+
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_fonts_t
+
+	/home/[^/]*/\.fonts(/.*)?
+.br
+
+.br
+.B user_home_type
+
+	all user home files
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.br
+.B xauth_home_t
+
+	/root/\.Xauth.*
+.br
+	/root/\.xauth.*
+.br
+	/root/\.serverauth.*
+.br
+	/var/lib/pqsql/\.xauth.*
+.br
+	/var/lib/pqsql/\.Xauthority.*
+.br
+	/var/lib/nxserver/home/\.xauth.*
+.br
+	/var/lib/nxserver/home/\.Xauthority.*
+.br
+	/home/[^/]*/\.xauth.*
+.br
+	/home/[^/]*/\.Xauthority.*
+.br
+	/home/[^/]*/\.serverauth.*
+.br
+
+.br
+.B xdm_tmp_t
+
+	/tmp/\.X11-unix(/.*)?
+.br
+	/tmp/\.ICE-unix(/.*)?
+.br
+	/tmp/\.X0-lock
+.br
+
+.br
+.B xserver_tmpfs_t
+
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), staff(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/stunnel_selinux.8 serefpolicy-3.7.19/man/man8/stunnel_selinux.8
--- nsaserefpolicy/man/man8/stunnel_selinux.8	2013-03-15 11:41:12.173153508 +0100
+++ serefpolicy-3.7.19/man/man8/stunnel_selinux.8	2013-03-15 11:40:05.292151982 +0100
@@ -1,31 +1,55 @@
-.TH  "stunnel_selinux"  "8"  "stunnel" "dwalsh@redhat.com" "stunnel SELinux Policy documentation"
+.TH  "stunnel_selinux"  "8"  "13-01-04" "stunnel" "SELinux Policy documentation for stunnel"
 .SH "NAME"
 stunnel_selinux \- Security Enhanced Linux Policy for the stunnel processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the stunnel processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B stunnel
-(SSL Tunneling Proxy)
-processes via flexible mandatory access
-control.  
+The stunnel processes execute with the stunnel_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep stunnel_t
+
+
+.SH "ENTRYPOINTS"
+
+The stunnel_t SELinux type can be entered via the "stunnel_exec_t" file type.  The default entrypoint paths for the stunnel_t domain are the following:"
+
+/usr/bin/stunnel, /usr/sbin/stunnel
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
+.PP
+The following process types are defined for stunnel:
+
+.EX
+.B stunnel_t
+.EE
+.PP
+Note:
+.B semanage permissive -a stunnel_t
+
+can be used to make the process type stunnel_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for stunnel:
 
 
 .EX
 .PP
-.B stunnel_etc_t 
+.B stunnel_etc_t
 .EE
 
 - Set files with the stunnel_etc_t type, if you want to store stunnel files in the /etc directories.
@@ -33,19 +57,15 @@
 
 .EX
 .PP
-.B stunnel_exec_t 
+.B stunnel_exec_t
 .EE
 
 - Set files with the stunnel_exec_t type, if you want to transition an executable to the stunnel_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/stunnel, /usr/bin/stunnel
 
 .EX
 .PP
-.B stunnel_tmp_t 
+.B stunnel_tmp_t
 .EE
 
 - Set files with the stunnel_tmp_t type, if you want to store stunnel temporary files in the /tmp directories.
@@ -53,7 +73,7 @@
 
 .EX
 .PP
-.B stunnel_var_run_t 
+.B stunnel_var_run_t
 .EE
 
 - Set files with the stunnel_var_run_t type, if you want to store the stunnel files under the /run directory.
@@ -61,51 +81,85 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for stunnel:
 
 .EX
 .TP 5
-.B stunnel_port_t 
+.B stunnel_port_t
 .TP 10
 .EE
 
+.SH "MANAGED FILES"
 
-Default Defined Ports:
-tcp 8021
-.EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
-.PP 
-The following process types are defined for stunnel:
+The SELinux process type stunnel_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
 
-.EX
-.B stunnel_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B stunnel_tmp_t
+
+
+.br
+.B stunnel_var_run_t
+
+	/var/run/stunnel(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -121,11 +175,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), stunnel(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), stunnel(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/sulogin_selinux.8 serefpolicy-3.7.19/man/man8/sulogin_selinux.8
--- nsaserefpolicy/man/man8/sulogin_selinux.8	2013-03-15 11:41:10.329153466 +0100
+++ serefpolicy-3.7.19/man/man8/sulogin_selinux.8	2013-03-15 11:39:54.475151735 +0100
@@ -1,58 +1,116 @@
-.TH  "sulogin_selinux"  "8"  "sulogin" "dwalsh@redhat.com" "sulogin SELinux Policy documentation"
+.TH  "sulogin_selinux"  "8"  "13-01-04" "sulogin" "SELinux Policy documentation for sulogin"
 .SH "NAME"
 sulogin_selinux \- Security Enhanced Linux Policy for the sulogin processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sulogin processes via flexible mandatory access control.
 
+The sulogin processes execute with the sulogin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep sulogin_t
+
+
+.SH "ENTRYPOINTS"
+
+The sulogin_t SELinux type can be entered via the "sulogin_exec_t" file type.  The default entrypoint paths for the sulogin_t domain are the following:"
+
+/sbin/sulogin, /sbin/sushell
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sulogin policy is very flexible allowing users to setup their sulogin processes in as secure a method as possible.
+.PP
+The following process types are defined for sulogin:
+
+.EX
+.B sulogin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sulogin_t
+
+can be used to make the process type sulogin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux sulogin policy is very flexible allowing users to setup their sulogin processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for sulogin:
 
 
 .EX
 .PP
-.B sulogin_exec_t 
+.B sulogin_exec_t
 .EE
 
 - Set files with the sulogin_exec_t type, if you want to transition an executable to the sulogin_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/sulogin, /sbin/sushell
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sulogin policy is very flexible allowing users to setup their sulogin processes in as secure a method as possible.
-.PP 
-The following process types are defined for sulogin:
+.SH "MANAGED FILES"
 
-.EX
-.B sulogin_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sulogin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +123,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sulogin(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), sulogin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/svc_multilog_selinux.8 serefpolicy-3.7.19/man/man8/svc_multilog_selinux.8
--- nsaserefpolicy/man/man8/svc_multilog_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/svc_multilog_selinux.8	2013-03-15 11:40:05.379151984 +0100
@@ -0,0 +1,198 @@
+.TH  "svc_multilog_selinux"  "8"  "13-01-04" "svc_multilog" "SELinux Policy documentation for svc_multilog"
+.SH "NAME"
+svc_multilog_selinux \- Security Enhanced Linux Policy for the svc_multilog processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the svc_multilog processes via flexible mandatory access control.
+
+The svc_multilog processes execute with the svc_multilog_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep svc_multilog_t
+
+
+.SH "ENTRYPOINTS"
+
+The svc_multilog_t SELinux type can be entered via the "svc_multilog_exec_t" file type.  The default entrypoint paths for the svc_multilog_t domain are the following:"
+
+/usr/bin/multilog
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux svc_multilog policy is very flexible allowing users to setup their svc_multilog processes in as secure a method as possible.
+.PP
+The following process types are defined for svc_multilog:
+
+.EX
+.B svc_multilog_t
+.EE
+.PP
+Note:
+.B semanage permissive -a svc_multilog_t
+
+can be used to make the process type svc_multilog_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux svc_multilog policy is very flexible allowing users to setup their svc_multilog processes in as secure a method as possible.
+.PP
+The following file types are defined for svc_multilog:
+
+
+.EX
+.PP
+.B svc_multilog_exec_t
+.EE
+
+- Set files with the svc_multilog_exec_t type, if you want to transition an executable to the svc_multilog_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type svc_multilog_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B svc_svc_t
+
+	/service/.*
+.br
+	/var/axfrdns(/.*)?
+.br
+	/var/tinydns(/.*)?
+.br
+	/var/service/.*
+.br
+	/var/dnscache(/.*)?
+.br
+	/var/qmail/supervise(/.*)?
+.br
+	/service
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_log_t
+
+	/var/log/.*
+.br
+	/nsr/logs(/.*)?
+.br
+	/var/webmin(/.*)?
+.br
+	/var/log/cron[^/]*
+.br
+	/var/log/secure[^/]*
+.br
+	/opt/zimbra/log(/.*)?
+.br
+	/var/log/maillog[^/]*
+.br
+	/var/log/spooler[^/]*
+.br
+	/var/log/boot\.log.*
+.br
+	/var/log/messages[^/]*
+.br
+	/var/spool/rsyslog(/.*)?
+.br
+	/var/spool/bacula/log(/.*)?
+.br
+	/var/tinydns/log/main(/.*)?
+.br
+	/var/axfrdns/log/main(/.*)?
+.br
+	/var/dnscache/log/main(/.*)?
+.br
+	/usr/local/centreon/log(/.*)?
+.br
+	/var/spool/plymouth/boot\.log.*
+.br
+	/var/stockmaniac/templates_cache(/.*)?
+.br
+	/var/log
+.br
+	/var/log/dmesg
+.br
+	/var/log/syslog
+.br
+	/var/named/chroot/var/log
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), svc_multilog(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, svc_run_selinux(8), svc_start_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/svc_run_selinux.8 serefpolicy-3.7.19/man/man8/svc_run_selinux.8
--- nsaserefpolicy/man/man8/svc_run_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/svc_run_selinux.8	2013-03-15 11:40:02.691151923 +0100
@@ -0,0 +1,132 @@
+.TH  "svc_run_selinux"  "8"  "13-01-04" "svc_run" "SELinux Policy documentation for svc_run"
+.SH "NAME"
+svc_run_selinux \- Security Enhanced Linux Policy for the svc_run processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the svc_run processes via flexible mandatory access control.
+
+The svc_run processes execute with the svc_run_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep svc_run_t
+
+
+.SH "ENTRYPOINTS"
+
+The svc_run_t SELinux type can be entered via the "svc_run_exec_t" file type.  The default entrypoint paths for the svc_run_t domain are the following:"
+
+/var/service/.*/run.*, /var/service/.*/log/run, /var/qmail/supervise/.*/run, /var/qmail/supervise/.*/log/run, /usr/bin/envdir, /usr/bin/fghack, /usr/bin/setlock, /var/axfrdns/run, /var/tinydns/run, /usr/bin/pgrphack, /var/dnscache/run, /usr/bin/envuidgid, /usr/bin/setuidgid, /usr/bin/softlimit, /var/axfrdns/log/run, /var/tinydns/log/run, /var/dnscache/log/run
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux svc_run policy is very flexible allowing users to setup their svc_run processes in as secure a method as possible.
+.PP
+The following process types are defined for svc_run:
+
+.EX
+.B svc_run_t
+.EE
+.PP
+Note:
+.B semanage permissive -a svc_run_t
+
+can be used to make the process type svc_run_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux svc_run policy is very flexible allowing users to setup their svc_run processes in as secure a method as possible.
+.PP
+The following file types are defined for svc_run:
+
+
+.EX
+.PP
+.B svc_run_exec_t
+.EE
+
+- Set files with the svc_run_exec_t type, if you want to transition an executable to the svc_run_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type svc_run_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), svc_run(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, svc_multilog_selinux(8), svc_start_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/svc_start_selinux.8 serefpolicy-3.7.19/man/man8/svc_start_selinux.8
--- nsaserefpolicy/man/man8/svc_start_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/svc_start_selinux.8	2013-03-15 11:40:04.189151957 +0100
@@ -0,0 +1,150 @@
+.TH  "svc_start_selinux"  "8"  "13-01-04" "svc_start" "SELinux Policy documentation for svc_start"
+.SH "NAME"
+svc_start_selinux \- Security Enhanced Linux Policy for the svc_start processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the svc_start processes via flexible mandatory access control.
+
+The svc_start processes execute with the svc_start_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep svc_start_t
+
+
+.SH "ENTRYPOINTS"
+
+The svc_start_t SELinux type can be entered via the "svc_start_exec_t" file type.  The default entrypoint paths for the svc_start_t domain are the following:"
+
+/usr/bin/svc, /usr/bin/svok, /usr/bin/svscan, /usr/bin/supervise, /usr/bin/svscanboot
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux svc_start policy is very flexible allowing users to setup their svc_start processes in as secure a method as possible.
+.PP
+The following process types are defined for svc_start:
+
+.EX
+.B svc_start_t
+.EE
+.PP
+Note:
+.B semanage permissive -a svc_start_t
+
+can be used to make the process type svc_start_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux svc_start policy is very flexible allowing users to setup their svc_start processes in as secure a method as possible.
+.PP
+The following file types are defined for svc_start:
+
+
+.EX
+.PP
+.B svc_start_exec_t
+.EE
+
+- Set files with the svc_start_exec_t type, if you want to transition an executable to the svc_start_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type svc_start_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B svc_svc_t
+
+	/service/.*
+.br
+	/var/axfrdns(/.*)?
+.br
+	/var/tinydns(/.*)?
+.br
+	/var/service/.*
+.br
+	/var/dnscache(/.*)?
+.br
+	/var/qmail/supervise(/.*)?
+.br
+	/service
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), svc_start(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, svc_multilog_selinux(8), svc_run_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/svnserve_selinux.8 serefpolicy-3.7.19/man/man8/svnserve_selinux.8
--- nsaserefpolicy/man/man8/svnserve_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/svnserve_selinux.8	2013-03-15 11:39:55.934151769 +0100
@@ -0,0 +1,119 @@
+.TH  "svnserve_selinux"  "8"  "13-01-04" "svnserve" "SELinux Policy documentation for svnserve"
+.SH "NAME"
+svnserve_selinux \- Security Enhanced Linux Policy for the svnserve processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the svnserve processes via flexible mandatory access control.
+
+The svnserve processes execute with the svnserve_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep svnserve_t
+
+
+.SH "ENTRYPOINTS"
+
+The svnserve_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,svnserve_exec_t,file_type" file types.  The default entrypoint paths for the svnserve_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/svnserve, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux svnserve policy is very flexible allowing users to setup their svnserve processes in as secure a method as possible.
+.PP
+The following process types are defined for svnserve:
+
+.EX
+.B svnserve_t
+.EE
+.PP
+Note:
+.B semanage permissive -a svnserve_t
+
+can be used to make the process type svnserve_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux svnserve policy is very flexible allowing users to setup their svnserve processes in as secure a method as possible.
+.PP
+The following file types are defined for svnserve:
+
+
+.EX
+.PP
+.B svnserve_content_t
+.EE
+
+- Set files with the svnserve_content_t type, if you want to treat the files as svnserve content.
+
+
+.EX
+.PP
+.B svnserve_exec_t
+.EE
+
+- Set files with the svnserve_exec_t type, if you want to transition an executable to the svnserve_t domain.
+
+
+.EX
+.PP
+.B svnserve_initrc_exec_t
+.EE
+
+- Set files with the svnserve_initrc_exec_t type, if you want to transition an executable to the svnserve_initrc_t domain.
+
+
+.EX
+.PP
+.B svnserve_var_run_t
+.EE
+
+- Set files with the svnserve_var_run_t type, if you want to store the svnserve files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type svnserve_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), svnserve(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/swat_selinux.8 serefpolicy-3.7.19/man/man8/swat_selinux.8
--- nsaserefpolicy/man/man8/swat_selinux.8	2013-03-15 11:41:12.217153509 +0100
+++ serefpolicy-3.7.19/man/man8/swat_selinux.8	2013-03-15 11:40:06.584152012 +0100
@@ -1,25 +1,55 @@
-.TH  "swat_selinux"  "8"  "swat" "dwalsh@redhat.com" "swat SELinux Policy documentation"
+.TH  "swat_selinux"  "8"  "13-01-04" "swat" "SELinux Policy documentation for swat"
 .SH "NAME"
 swat_selinux \- Security Enhanced Linux Policy for the swat processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the swat processes via flexible mandatory access control.
 
+The swat processes execute with the swat_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep swat_t
+
+
+.SH "ENTRYPOINTS"
+
+The swat_t SELinux type can be entered via the "swat_exec_t" file type.  The default entrypoint paths for the swat_t domain are the following:"
+
+/usr/sbin/swat
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
+.PP
+The following process types are defined for swat:
+
+.EX
+.B swat_t
+.EE
+.PP
+Note:
+.B semanage permissive -a swat_t
+
+can be used to make the process type swat_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for swat:
 
 
 .EX
 .PP
-.B swat_exec_t 
+.B swat_exec_t
 .EE
 
 - Set files with the swat_exec_t type, if you want to transition an executable to the swat_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B swat_tmp_t 
+.B swat_tmp_t
 .EE
 
 - Set files with the swat_tmp_t type, if you want to store swat temporary files in the /tmp directories.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B swat_var_run_t 
+.B swat_var_run_t
 .EE
 
 - Set files with the swat_var_run_t type, if you want to store the swat files under the /run directory.
@@ -43,51 +73,147 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for swat:
 
 .EX
 .TP 5
-.B swat_port_t 
+.B swat_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 901
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
-.PP 
-The following process types are defined for swat:
+.SH "MANAGED FILES"
 
-.EX
-.B swat_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type swat_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B samba_etc_t
+
+	/etc/samba(/.*)?
+.br
+
+.br
+.B samba_log_t
+
+	/var/log/samba(/.*)?
+.br
+
+.br
+.B samba_secrets_t
+
+	/etc/samba/smbpasswd
+.br
+	/etc/samba/passdb\.tdb
+.br
+	/etc/samba/MACHINE\.SID
+.br
+	/etc/samba/secrets\.tdb
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B swat_tmp_t
+
+
+.br
+.B swat_var_run_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,11 +229,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), swat(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), swat(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/sysadm_selinux.8 serefpolicy-3.7.19/man/man8/sysadm_selinux.8
--- nsaserefpolicy/man/man8/sysadm_selinux.8	2013-03-15 11:41:12.089153506 +0100
+++ serefpolicy-3.7.19/man/man8/sysadm_selinux.8	2013-03-15 11:40:02.661151922 +0100
@@ -1,6 +1,6 @@
 .TH  "sysadm_selinux"  "8"  "sysadm" "mgrepl@redhat.com" "sysadm SELinux Policy documentation"
 .SH "NAME"
-sysadm_u \- \fBGeneral system administration role\fP - Security Enhanced Linux Policy 
+sysadm_u \- \fBGeneral system administration role\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
@@ -10,9 +10,9 @@
 
 The SELinux user will usually login to a system with a context that looks like:
 
-.B sysadm_u:sysadm_r:sysadm_u:s0-s0:c0.c1023
+.B sysadm_u:sysadm_r:sysadm_t:s0-s0:c0.c1023
 
-Linux users are automatically assigned an SELinux users at login.  
+Linux users are automatically assigned an SELinux users at login.
 Login programs use the SELinux User to assign initial context to the user's shell.
 
 SELinux policy uses the context to control the user's access.
@@ -32,11 +32,11 @@
 
 .SH USER DESCRIPTION
 
-The SELinux user sysadm_u is an admin user. It means that a mapped Linux user to this SELinux user is intended for administrative actions. Usually this is assigned to a root Linux user.  
+The SELinux user sysadm_u is an admin user. It means that a mapped Linux user to this SELinux user is intended for administrative actions. Usually this is assigned to a root Linux user.
 
 .SH SUDO
 
-The SELinux user sysadm can execute sudo. 
+The SELinux user sysadm can execute sudo.
 
 You can set up sudo to allow sysadm to transition to an administrative domain:
 
@@ -47,6 +47,19 @@
 .br
 sudo will run COMMAND as sysadm_u:staff_r:staff_t:LEVEL
 
+You might also need to add one or more of these new roles to your SELinux user record.
+
+List the SELinux roles your SELinux user can reach by executing:
+
+.B $ semanage user -l |grep selinux_name
+
+Modify the roles list and add sysadm_r to this list.
+
+.B $ semanage user -m -R 'sysadm_r staff_r user_r' sysadm_u
+
+For more details you can see semanage man page.
+
+
 USERNAME ALL=(ALL) ROLE=user_r TYPE=user_t COMMAND
 .br
 sudo will run COMMAND as sysadm_u:user_r:user_t:LEVEL
@@ -59,14 +72,16 @@
 
 Modify the roles list and add sysadm_r to this list.
 
-.B $ semanage user -m -R 'sysadm_r staff_r user_r' sysadm_u 
+.B $ semanage user -m -R 'sysadm_r staff_r user_r' sysadm_u
 
 For more details you can see semanage man page.
 
 
+The SELinux type sysadm_t is not allowed to execute sudo.
+
 .SH X WINDOWS LOGIN
 
-The SELinux user sysadm_u is able to X Windows login.
+The SELinux user sysadm_u is not able to X Windows login.
 
 .SH NETWORK
 
@@ -76,82 +91,52 @@
 .B all ports with out defined types
 
 .TP
-The SELinux user sysadm_u is able to listen on the following udp ports.
+The SELinux user sysadm_u is able to connect to the following tcp ports.
 
-.B ntp_port_t: 123
+.B all ports
+
+.TP
+The SELinux user sysadm_u is able to listen on the following udp ports.
 
 .B all ports with out defined types
 
+.B ntp_port_t: 123
+
 .TP
 The SELinux user sysadm_u is able to connect to the following tcp ports.
 
 .B all ports
 
 .SH BOOLEANS
-SELinux policy is customizable based on least access required.  sysadm_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sysadm_t with the tightest access possible.
-
-
-.PP
-If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+SELinux policy is customizable based on least access required.  sysadm policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sysadm with the tightest access possible.
 
-.EX
-.B setsebool -P allow_user_mysql_connect 1
-.EE
 
 .PP
-If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+If you want to allow ssh logins as sysadm_r:sysadm_t, you must turn on the ssh_sysadm_login boolean.
 
 .EX
-.B setsebool -P user_setrlimit 1
+.B setsebool -P ssh_sysadm_login 1
 .EE
 
 .PP
-If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+If you want to allow xdm logins as sysadm, you must turn on the xdm_sysadm_login boolean.
 
 .EX
-.B setsebool -P user_ping 1
+.B setsebool -P xdm_sysadm_login 1
 .EE
 
 .PP
-If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+If you want to allow ssh logins as sysadm_r:sysadm_t, you must turn on the ssh_sysadm_login boolean.
 
 .EX
-.B setsebool -P user_ttyfile_stat 1
+.B setsebool -P ssh_sysadm_login 1
 .EE
 
 .PP
-If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+If you want to allow xdm logins as sysadm, you must turn on the xdm_sysadm_login boolean.
 
 .EX
-.B setsebool -P user_direct_dri 1
-.EE
-
-.PP
-If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
-
-.EX
-.B setsebool -P user_rw_noexattrfile 1
-.EE
-
-.PP
-If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
-
-.EX
-.B setsebool -P user_tcp_server 1
-.EE
-
-.PP
-If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
-
-.EX
-.B setsebool -P user_direct_mouse 1
-.EE
-
-.PP
-If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
-
-.EX
-.B setsebool -P allow_user_postgresql_connect 1
+.B setsebool -P xdm_sysadm_login 1
 .EE
 
 .SH HOME_EXEC
@@ -170,7 +155,7 @@
 
 Execute the following to see the types that the SELinux user sysadm_t can execute without transitioning:
 
-.B sesearch -A -s sysadm_t -c file -p execute_no_trans
+.B search -A -s sysadm_t -c file -p execute_no_trans
 
 .TP
 
@@ -178,22 +163,195 @@
 
 Execute the following to see the types that the SELinux user sysadm_t can execute and transition:
 
-.B $ sesearch -A -s sysadm_t -c process -p transition
+.B $ search -A -s sysadm_t -c process -p transition
 
 
-.SH "COMMANDS"
+.SH "MANAGED FILES"
+
+The SELinux process type sysadm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auditd_etc_t
+
+	/etc/audit(/.*)?
+.br
+
+.br
+.B auditd_log_t
+
+	/var/log/audit(/.*)?
+.br
+	/var/log/audit\.log.*
+.br
+
+.br
+.B boolean_type
+
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B ethereal_home_t
+
+	/home/[^/]*/\.ethereal(/.*)?
+.br
+
+.br
+.B non_security_file_type
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
+.br
+.B noxattrfs
+
+	all files on file systems which do not support extended attributes
+.br
+
+.br
+.B sandbox_file_t
+
+
+.br
+.B sandbox_tmpfs_type
+
+	all sandbox content in tmpfs file systems
+.br
+
+.br
+.B screen_home_t
 
-.B system-config-selinux 
+	/root/\.screen(/.*)?
+.br
+	/home/[^/]*/\.screen(/.*)?
+.br
+	/home/[^/]*/\.screenrc
+.br
+
+.br
+.B screen_var_run_t
+
+	/var/run/screen(/.*)?
+.br
+
+.br
+.B sysctl_type
+
+
+.br
+.B usbfs_t
+
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.br
+.B user_home_type
+
+	all user home files
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), sysadm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/syslogd_selinux.8 serefpolicy-3.7.19/man/man8/syslogd_selinux.8
--- nsaserefpolicy/man/man8/syslogd_selinux.8	2013-03-15 11:41:11.848153501 +0100
+++ serefpolicy-3.7.19/man/man8/syslogd_selinux.8	2013-03-15 11:39:58.463151826 +0100
@@ -1,68 +1,97 @@
-.TH  "syslogd_selinux"  "8"  "syslogd" "dwalsh@redhat.com" "syslogd SELinux Policy documentation"
+.TH  "syslogd_selinux"  "8"  "13-01-04" "syslogd" "SELinux Policy documentation for syslogd"
 .SH "NAME"
 syslogd_selinux \- Security Enhanced Linux Policy for the syslogd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the syslogd processes via flexible mandatory access control.
 
+The syslogd processes execute with the syslogd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep syslogd_t
+
+
+.SH "ENTRYPOINTS"
+
+The syslogd_t SELinux type can be entered via the "syslogd_exec_t" file type.  The default entrypoint paths for the syslogd_t domain are the following:"
+
+/sbin/syslogd, /sbin/minilogd, /sbin/rsyslogd, /sbin/syslog-ng, /usr/sbin/metalog, /usr/sbin/syslogd, /usr/sbin/rsyslogd, /usr/sbin/syslog-ng
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
+.PP
+The following process types are defined for syslogd:
+
+.EX
+.B syslogd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a syslogd_t
+
+can be used to make the process type syslogd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  syslogd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run syslogd with the tightest access possible.
 
 
 .PP
-If you want to allow syslogd daemon to send mai, you must turn on the logging_syslogd_can_sendmail boolean.
+If you want to allow syslogd daemon to send mail, you must turn on the logging_syslogd_can_sendmail boolean.
+
+.EX
+.B setsebool -P logging_syslogd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow syslogd daemon to send mail, you must turn on the logging_syslogd_can_sendmail boolean.
 
 .EX
 .B setsebool -P logging_syslogd_can_sendmail 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for syslogd:
 
 
 .EX
 .PP
-.B syslog_conf_t 
+.B syslogd_exec_t
 .EE
 
-- Set files with the syslog_conf_t type, if you want to treat the files as syslog configuration data, usually stored under the /etc directory.
+- Set files with the syslogd_exec_t type, if you want to transition an executable to the syslogd_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rsyslog.conf, /etc/syslog.conf
 
 .EX
 .PP
-.B syslogd_exec_t 
+.B syslogd_initrc_exec_t
 .EE
 
-- Set files with the syslogd_exec_t type, if you want to transition an executable to the syslogd_t domain.
+- Set files with the syslogd_initrc_exec_t type, if you want to transition an executable to the syslogd_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/rsyslogd, /usr/sbin/metalog, /usr/sbin/syslogd, /sbin/rsyslogd, /sbin/syslogd, /sbin/syslog-ng, /usr/sbin/syslog-ng, /sbin/minilogd
 
 .EX
 .PP
-.B syslogd_initrc_exec_t 
+.B syslogd_keytab_t
 .EE
 
-- Set files with the syslogd_initrc_exec_t type, if you want to transition an executable to the syslogd_initrc_t domain.
+- Set files with the syslogd_keytab_t type, if you want to treat the files as kerberos keytab files.
 
 
 .EX
 .PP
-.B syslogd_tmp_t 
+.B syslogd_tmp_t
 .EE
 
 - Set files with the syslogd_tmp_t type, if you want to store syslogd temporary files in the /tmp directories.
@@ -70,75 +99,153 @@
 
 .EX
 .PP
-.B syslogd_var_lib_t 
+.B syslogd_var_lib_t
 .EE
 
 - Set files with the syslogd_var_lib_t type, if you want to store the syslogd files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/syslog-ng.persist, /var/lib/syslog-ng(/.*)?
 
 .EX
 .PP
-.B syslogd_var_run_t 
+.B syslogd_var_run_t
 .EE
 
 - Set files with the syslogd_var_run_t type, if you want to store the syslogd files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/syslog-ng(/.*)?, /var/run/syslog-ng(/.*)?, /var/run/metalog\.pid, /var/run/syslogd\.pid, /var/run/syslog-ng.ctl
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for syslogd:
 
 .EX
 .TP 5
-.B syslogd_port_t 
+.B syslogd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 6514
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
-.PP 
-The following process types are defined for syslogd:
-
-.EX
-.B syslogd_t 
+udp 514,6514
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type syslogd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B logfile
+
+	all log files
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B security_t
+
+
+.br
+.B syslogd_tmp_t
+
+
+.br
+.B syslogd_var_lib_t
+
+	/var/lib/rsyslog(/.*)?
+.br
+	/var/lib/syslog-ng(/.*)?
+.br
+	/var/lib/syslog-ng.persist
+.br
+
+.br
+.B syslogd_var_run_t
+
+	/var/run/syslog-ng.ctl
+.br
+	/var/run/syslog-ng(/.*)?
+.br
+	/var/log/syslog-ng(/.*)?
+.br
+	/var/run/metalog\.pid
+.br
+	/var/run/syslogd\.pid
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -157,12 +264,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), syslogd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), syslogd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/sysstat_selinux.8 serefpolicy-3.7.19/man/man8/sysstat_selinux.8
--- nsaserefpolicy/man/man8/sysstat_selinux.8	2013-03-15 11:41:12.081153506 +0100
+++ serefpolicy-3.7.19/man/man8/sysstat_selinux.8	2013-03-15 11:40:02.496151918 +0100
@@ -1,76 +1,132 @@
-.TH  "sysstat_selinux"  "8"  "sysstat" "dwalsh@redhat.com" "sysstat SELinux Policy documentation"
+.TH  "sysstat_selinux"  "8"  "13-01-04" "sysstat" "SELinux Policy documentation for sysstat"
 .SH "NAME"
 sysstat_selinux \- Security Enhanced Linux Policy for the sysstat processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the sysstat processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B sysstat
-(Policy for sysstat. Reports on various system states)
-processes via flexible mandatory access
-control.  
+The sysstat processes execute with the sysstat_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep sysstat_t
+
+
+.SH "ENTRYPOINTS"
+
+The sysstat_t SELinux type can be entered via the "sysstat_exec_t" file type.  The default entrypoint paths for the sysstat_t domain are the following:"
+
+/usr/lib(64)?/sa/sa.*, /usr/lib(64)?/atsar/atsa.*, /usr/lib(64)?/sysstat/sa.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux sysstat policy is very flexible allowing users to setup their sysstat processes in as secure a method as possible.
+.PP
+The following process types are defined for sysstat:
+
+.EX
+.B sysstat_t
+.EE
+.PP
+Note:
+.B semanage permissive -a sysstat_t
+
+can be used to make the process type sysstat_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux sysstat policy is very flexible allowing users to setup their sysstat processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for sysstat:
 
 
 .EX
 .PP
-.B sysstat_exec_t 
+.B sysstat_exec_t
 .EE
 
 - Set files with the sysstat_exec_t type, if you want to transition an executable to the sysstat_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib(64)?/sa/sa.*, /usr/lib(64)?/sysstat/sa.*, /usr/lib(64)?/atsar/atsa.*
 
 .EX
 .PP
-.B sysstat_log_t 
+.B sysstat_log_t
 .EE
 
 - Set files with the sysstat_log_t type, if you want to treat the data as sysstat log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/sysstat(/.*)?, /var/log/sa(/.*)?, /var/log/atsar(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux sysstat policy is very flexible allowing users to setup their sysstat processes in as secure a method as possible.
-.PP 
-The following process types are defined for sysstat:
+.SH "MANAGED FILES"
 
-.EX
-.B sysstat_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type sysstat_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B sysstat_log_t
+
+	/var/log/sa(/.*)?
+.br
+	/opt/sartest(/.*)?
+.br
+	/var/log/atsar(/.*)?
+.br
+	/var/log/sysstat(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +139,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), sysstat(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), sysstat(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/tcpd_selinux.8 serefpolicy-3.7.19/man/man8/tcpd_selinux.8
--- nsaserefpolicy/man/man8/tcpd_selinux.8	2013-03-15 11:41:12.121153507 +0100
+++ serefpolicy-3.7.19/man/man8/tcpd_selinux.8	2013-03-15 11:40:03.712151946 +0100
@@ -1,22 +1,53 @@
-.TH  "tcpd_selinux"  "8"  "tcpd" "dwalsh@redhat.com" "tcpd SELinux Policy documentation"
+.TH  "tcpd_selinux"  "8"  "13-01-04" "tcpd" "SELinux Policy documentation for tcpd"
 .SH "NAME"
 tcpd_selinux \- Security Enhanced Linux Policy for the tcpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the tcpd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B tcpd
-(Policy for TCP daemon)
-processes via flexible mandatory access
-control.  
+The tcpd processes execute with the tcpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep tcpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The tcpd_t SELinux type can be entered via the "tcpd_exec_t" file type.  The default entrypoint paths for the tcpd_t domain are the following:"
+
+/usr/sbin/tcpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux tcpd policy is very flexible allowing users to setup their tcpd processes in as secure a method as possible.
+.PP
+The following process types are defined for tcpd:
+
+.EX
+.B tcpd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a tcpd_t
+
+can be used to make the process type tcpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  tcpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run tcpd with the tightest access possible.
 
 
 .PP
+If you want to allow all daemons to use tcp wrappers, you must turn on the allow_daemons_use_tcp_wrapper boolean.
+
+.EX
+.B setsebool -P allow_daemons_use_tcp_wrapper 1
+.EE
+
+.PP
 If you want to allow the Telepathy connection managers to connect to any generic TCP port, you must turn on the telepathy_tcp_connect_generic_network_ports boolean.
 
 .EX
@@ -24,6 +55,13 @@
 .EE
 
 .PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
 If you want to allow all daemons to use tcp wrappers, you must turn on the allow_daemons_use_tcp_wrapper boolean.
 
 .EX
@@ -31,6 +69,13 @@
 .EE
 
 .PP
+If you want to allow the Telepathy connection managers to connect to any generic TCP port, you must turn on the telepathy_tcp_connect_generic_network_ports boolean.
+
+.EX
+.B setsebool -P telepathy_tcp_connect_generic_network_ports 1
+.EE
+
+.PP
 If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
 
 .EX
@@ -38,19 +83,19 @@
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux tcpd policy is very flexible allowing users to setup their tcpd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for tcpd:
 
 
 .EX
 .PP
-.B tcpd_exec_t 
+.B tcpd_exec_t
 .EE
 
 - Set files with the tcpd_exec_t type, if you want to transition an executable to the tcpd_t domain.
@@ -58,7 +103,7 @@
 
 .EX
 .PP
-.B tcpd_tmp_t 
+.B tcpd_tmp_t
 .EE
 
 - Set files with the tcpd_tmp_t type, if you want to store tcpd temporary files in the /tmp directories.
@@ -66,28 +111,60 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux tcpd policy is very flexible allowing users to setup their tcpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for tcpd:
+.SH "MANAGED FILES"
 
-.EX
-.B tcpd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type tcpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tcpd_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,12 +180,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), tcpd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), tcpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/telepathy_gabble_selinux.8 serefpolicy-3.7.19/man/man8/telepathy_gabble_selinux.8
--- nsaserefpolicy/man/man8/telepathy_gabble_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/telepathy_gabble_selinux.8	2013-03-15 11:40:01.462151895 +0100
@@ -0,0 +1,156 @@
+.TH  "telepathy_gabble_selinux"  "8"  "13-01-04" "telepathy_gabble" "SELinux Policy documentation for telepathy_gabble"
+.SH "NAME"
+telepathy_gabble_selinux \- Security Enhanced Linux Policy for the telepathy_gabble processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the telepathy_gabble processes via flexible mandatory access control.
+
+The telepathy_gabble processes execute with the telepathy_gabble_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep telepathy_gabble_t
+
+
+.SH "ENTRYPOINTS"
+
+The telepathy_gabble_t SELinux type can be entered via the "telepathy_gabble_exec_t" file type.  The default entrypoint paths for the telepathy_gabble_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux telepathy_gabble policy is very flexible allowing users to setup their telepathy_gabble processes in as secure a method as possible.
+.PP
+The following process types are defined for telepathy_gabble:
+
+.EX
+.B telepathy_gabble_t
+.EE
+.PP
+Note:
+.B semanage permissive -a telepathy_gabble_t
+
+can be used to make the process type telepathy_gabble_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux telepathy_gabble policy is very flexible allowing users to setup their telepathy_gabble processes in as secure a method as possible.
+.PP
+The following file types are defined for telepathy_gabble:
+
+
+.EX
+.PP
+.B telepathy_gabble_cache_home_t
+.EE
+
+- Set files with the telepathy_gabble_cache_home_t type, if you want to store telepathy gabble cache files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_gabble_exec_t
+.EE
+
+- Set files with the telepathy_gabble_exec_t type, if you want to transition an executable to the telepathy_gabble_t domain.
+
+
+.EX
+.PP
+.B telepathy_gabble_tmp_t
+.EE
+
+- Set files with the telepathy_gabble_tmp_t type, if you want to store telepathy gabble temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type telepathy_gabble_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B telepathy_gabble_cache_home_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), telepathy_gabble(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, telepathy_idle_selinux(8), telepathy_mission_control_selinux(8), telepathy_msn_selinux(8), telepathy_salut_selinux(8), telepathy_sofiasip_selinux(8), telepathy_stream_engine_selinux(8), telepathy_sunshine_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/telepathy_idle_selinux.8 serefpolicy-3.7.19/man/man8/telepathy_idle_selinux.8
--- nsaserefpolicy/man/man8/telepathy_idle_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/telepathy_idle_selinux.8	2013-03-15 11:40:02.668151922 +0100
@@ -0,0 +1,140 @@
+.TH  "telepathy_idle_selinux"  "8"  "13-01-04" "telepathy_idle" "SELinux Policy documentation for telepathy_idle"
+.SH "NAME"
+telepathy_idle_selinux \- Security Enhanced Linux Policy for the telepathy_idle processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the telepathy_idle processes via flexible mandatory access control.
+
+The telepathy_idle processes execute with the telepathy_idle_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep telepathy_idle_t
+
+
+.SH "ENTRYPOINTS"
+
+The telepathy_idle_t SELinux type can be entered via the "telepathy_idle_exec_t" file type.  The default entrypoint paths for the telepathy_idle_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux telepathy_idle policy is very flexible allowing users to setup their telepathy_idle processes in as secure a method as possible.
+.PP
+The following process types are defined for telepathy_idle:
+
+.EX
+.B telepathy_idle_t
+.EE
+.PP
+Note:
+.B semanage permissive -a telepathy_idle_t
+
+can be used to make the process type telepathy_idle_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux telepathy_idle policy is very flexible allowing users to setup their telepathy_idle processes in as secure a method as possible.
+.PP
+The following file types are defined for telepathy_idle:
+
+
+.EX
+.PP
+.B telepathy_idle_exec_t
+.EE
+
+- Set files with the telepathy_idle_exec_t type, if you want to transition an executable to the telepathy_idle_t domain.
+
+
+.EX
+.PP
+.B telepathy_idle_tmp_t
+.EE
+
+- Set files with the telepathy_idle_tmp_t type, if you want to store telepathy idle temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type telepathy_idle_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), telepathy_idle(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, telepathy_gabble_selinux(8), telepathy_mission_control_selinux(8), telepathy_msn_selinux(8), telepathy_salut_selinux(8), telepathy_sofiasip_selinux(8), telepathy_stream_engine_selinux(8), telepathy_sunshine_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/telepathy_mission_control_selinux.8 serefpolicy-3.7.19/man/man8/telepathy_mission_control_selinux.8
--- nsaserefpolicy/man/man8/telepathy_mission_control_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/telepathy_mission_control_selinux.8	2013-03-15 11:39:55.407151757 +0100
@@ -0,0 +1,168 @@
+.TH  "telepathy_mission_control_selinux"  "8"  "13-01-04" "telepathy_mission_control" "SELinux Policy documentation for telepathy_mission_control"
+.SH "NAME"
+telepathy_mission_control_selinux \- Security Enhanced Linux Policy for the telepathy_mission_control processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the telepathy_mission_control processes via flexible mandatory access control.
+
+The telepathy_mission_control processes execute with the telepathy_mission_control_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep telepathy_mission_control_t
+
+
+.SH "ENTRYPOINTS"
+
+The telepathy_mission_control_t SELinux type can be entered via the "telepathy_mission_control_exec_t" file type.  The default entrypoint paths for the telepathy_mission_control_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux telepathy_mission_control policy is very flexible allowing users to setup their telepathy_mission_control processes in as secure a method as possible.
+.PP
+The following process types are defined for telepathy_mission_control:
+
+.EX
+.B telepathy_mission_control_t
+.EE
+.PP
+Note:
+.B semanage permissive -a telepathy_mission_control_t
+
+can be used to make the process type telepathy_mission_control_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux telepathy_mission_control policy is very flexible allowing users to setup their telepathy_mission_control processes in as secure a method as possible.
+.PP
+The following file types are defined for telepathy_mission_control:
+
+
+.EX
+.PP
+.B telepathy_mission_control_cache_home_t
+.EE
+
+- Set files with the telepathy_mission_control_cache_home_t type, if you want to store telepathy mission control cache files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_mission_control_exec_t
+.EE
+
+- Set files with the telepathy_mission_control_exec_t type, if you want to transition an executable to the telepathy_mission_control_t domain.
+
+
+.EX
+.PP
+.B telepathy_mission_control_home_t
+.EE
+
+- Set files with the telepathy_mission_control_home_t type, if you want to store telepathy mission control files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_mission_control_tmp_t
+.EE
+
+- Set files with the telepathy_mission_control_tmp_t type, if you want to store telepathy mission control temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type telepathy_mission_control_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B telepathy_mission_control_cache_home_t
+
+
+.br
+.B telepathy_mission_control_home_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), telepathy_mission_control(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, telepathy_gabble_selinux(8), telepathy_idle_selinux(8), telepathy_msn_selinux(8), telepathy_salut_selinux(8), telepathy_sofiasip_selinux(8), telepathy_stream_engine_selinux(8), telepathy_sunshine_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/telepathy_msn_selinux.8 serefpolicy-3.7.19/man/man8/telepathy_msn_selinux.8
--- nsaserefpolicy/man/man8/telepathy_msn_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/telepathy_msn_selinux.8	2013-03-15 11:39:56.018151771 +0100
@@ -0,0 +1,144 @@
+.TH  "telepathy_msn_selinux"  "8"  "13-01-04" "telepathy_msn" "SELinux Policy documentation for telepathy_msn"
+.SH "NAME"
+telepathy_msn_selinux \- Security Enhanced Linux Policy for the telepathy_msn processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the telepathy_msn processes via flexible mandatory access control.
+
+The telepathy_msn processes execute with the telepathy_msn_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep telepathy_msn_t
+
+
+.SH "ENTRYPOINTS"
+
+The telepathy_msn_t SELinux type can be entered via the "telepathy_msn_exec_t" file type.  The default entrypoint paths for the telepathy_msn_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux telepathy_msn policy is very flexible allowing users to setup their telepathy_msn processes in as secure a method as possible.
+.PP
+The following process types are defined for telepathy_msn:
+
+.EX
+.B telepathy_msn_t
+.EE
+.PP
+Note:
+.B semanage permissive -a telepathy_msn_t
+
+can be used to make the process type telepathy_msn_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux telepathy_msn policy is very flexible allowing users to setup their telepathy_msn processes in as secure a method as possible.
+.PP
+The following file types are defined for telepathy_msn:
+
+
+.EX
+.PP
+.B telepathy_msn_exec_t
+.EE
+
+- Set files with the telepathy_msn_exec_t type, if you want to transition an executable to the telepathy_msn_t domain.
+
+
+.EX
+.PP
+.B telepathy_msn_tmp_t
+.EE
+
+- Set files with the telepathy_msn_tmp_t type, if you want to store telepathy msn temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type telepathy_msn_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B telepathy_msn_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), telepathy_msn(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, telepathy_gabble_selinux(8), telepathy_idle_selinux(8), telepathy_mission_control_selinux(8), telepathy_salut_selinux(8), telepathy_sofiasip_selinux(8), telepathy_stream_engine_selinux(8), telepathy_sunshine_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/telepathy_salut_selinux.8 serefpolicy-3.7.19/man/man8/telepathy_salut_selinux.8
--- nsaserefpolicy/man/man8/telepathy_salut_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/telepathy_salut_selinux.8	2013-03-15 11:39:54.101151727 +0100
@@ -0,0 +1,140 @@
+.TH  "telepathy_salut_selinux"  "8"  "13-01-04" "telepathy_salut" "SELinux Policy documentation for telepathy_salut"
+.SH "NAME"
+telepathy_salut_selinux \- Security Enhanced Linux Policy for the telepathy_salut processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the telepathy_salut processes via flexible mandatory access control.
+
+The telepathy_salut processes execute with the telepathy_salut_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep telepathy_salut_t
+
+
+.SH "ENTRYPOINTS"
+
+The telepathy_salut_t SELinux type can be entered via the "telepathy_salut_exec_t" file type.  The default entrypoint paths for the telepathy_salut_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux telepathy_salut policy is very flexible allowing users to setup their telepathy_salut processes in as secure a method as possible.
+.PP
+The following process types are defined for telepathy_salut:
+
+.EX
+.B telepathy_salut_t
+.EE
+.PP
+Note:
+.B semanage permissive -a telepathy_salut_t
+
+can be used to make the process type telepathy_salut_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux telepathy_salut policy is very flexible allowing users to setup their telepathy_salut processes in as secure a method as possible.
+.PP
+The following file types are defined for telepathy_salut:
+
+
+.EX
+.PP
+.B telepathy_salut_exec_t
+.EE
+
+- Set files with the telepathy_salut_exec_t type, if you want to transition an executable to the telepathy_salut_t domain.
+
+
+.EX
+.PP
+.B telepathy_salut_tmp_t
+.EE
+
+- Set files with the telepathy_salut_tmp_t type, if you want to store telepathy salut temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type telepathy_salut_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), telepathy_salut(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, telepathy_gabble_selinux(8), telepathy_idle_selinux(8), telepathy_mission_control_selinux(8), telepathy_msn_selinux(8), telepathy_sofiasip_selinux(8), telepathy_stream_engine_selinux(8), telepathy_sunshine_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/telepathy_sofiasip_selinux.8 serefpolicy-3.7.19/man/man8/telepathy_sofiasip_selinux.8
--- nsaserefpolicy/man/man8/telepathy_sofiasip_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/telepathy_sofiasip_selinux.8	2013-03-15 11:39:56.395151779 +0100
@@ -0,0 +1,140 @@
+.TH  "telepathy_sofiasip_selinux"  "8"  "13-01-04" "telepathy_sofiasip" "SELinux Policy documentation for telepathy_sofiasip"
+.SH "NAME"
+telepathy_sofiasip_selinux \- Security Enhanced Linux Policy for the telepathy_sofiasip processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the telepathy_sofiasip processes via flexible mandatory access control.
+
+The telepathy_sofiasip processes execute with the telepathy_sofiasip_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep telepathy_sofiasip_t
+
+
+.SH "ENTRYPOINTS"
+
+The telepathy_sofiasip_t SELinux type can be entered via the "telepathy_sofiasip_exec_t" file type.  The default entrypoint paths for the telepathy_sofiasip_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux telepathy_sofiasip policy is very flexible allowing users to setup their telepathy_sofiasip processes in as secure a method as possible.
+.PP
+The following process types are defined for telepathy_sofiasip:
+
+.EX
+.B telepathy_sofiasip_t
+.EE
+.PP
+Note:
+.B semanage permissive -a telepathy_sofiasip_t
+
+can be used to make the process type telepathy_sofiasip_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux telepathy_sofiasip policy is very flexible allowing users to setup their telepathy_sofiasip processes in as secure a method as possible.
+.PP
+The following file types are defined for telepathy_sofiasip:
+
+
+.EX
+.PP
+.B telepathy_sofiasip_exec_t
+.EE
+
+- Set files with the telepathy_sofiasip_exec_t type, if you want to transition an executable to the telepathy_sofiasip_t domain.
+
+
+.EX
+.PP
+.B telepathy_sofiasip_tmp_t
+.EE
+
+- Set files with the telepathy_sofiasip_tmp_t type, if you want to store telepathy sofiasip temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type telepathy_sofiasip_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), telepathy_sofiasip(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, telepathy_gabble_selinux(8), telepathy_idle_selinux(8), telepathy_mission_control_selinux(8), telepathy_msn_selinux(8), telepathy_salut_selinux(8), telepathy_stream_engine_selinux(8), telepathy_sunshine_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/telepathy_stream_engine_selinux.8 serefpolicy-3.7.19/man/man8/telepathy_stream_engine_selinux.8
--- nsaserefpolicy/man/man8/telepathy_stream_engine_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/telepathy_stream_engine_selinux.8	2013-03-15 11:39:58.754151833 +0100
@@ -0,0 +1,140 @@
+.TH  "telepathy_stream_engine_selinux"  "8"  "13-01-04" "telepathy_stream_engine" "SELinux Policy documentation for telepathy_stream_engine"
+.SH "NAME"
+telepathy_stream_engine_selinux \- Security Enhanced Linux Policy for the telepathy_stream_engine processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the telepathy_stream_engine processes via flexible mandatory access control.
+
+The telepathy_stream_engine processes execute with the telepathy_stream_engine_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep telepathy_stream_engine_t
+
+
+.SH "ENTRYPOINTS"
+
+The telepathy_stream_engine_t SELinux type can be entered via the "telepathy_stream_engine_exec_t" file type.  The default entrypoint paths for the telepathy_stream_engine_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux telepathy_stream_engine policy is very flexible allowing users to setup their telepathy_stream_engine processes in as secure a method as possible.
+.PP
+The following process types are defined for telepathy_stream_engine:
+
+.EX
+.B telepathy_stream_engine_t
+.EE
+.PP
+Note:
+.B semanage permissive -a telepathy_stream_engine_t
+
+can be used to make the process type telepathy_stream_engine_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux telepathy_stream_engine policy is very flexible allowing users to setup their telepathy_stream_engine processes in as secure a method as possible.
+.PP
+The following file types are defined for telepathy_stream_engine:
+
+
+.EX
+.PP
+.B telepathy_stream_engine_exec_t
+.EE
+
+- Set files with the telepathy_stream_engine_exec_t type, if you want to transition an executable to the telepathy_stream_engine_t domain.
+
+
+.EX
+.PP
+.B telepathy_stream_engine_tmp_t
+.EE
+
+- Set files with the telepathy_stream_engine_tmp_t type, if you want to store telepathy stream engine temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type telepathy_stream_engine_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), telepathy_stream_engine(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, telepathy_gabble_selinux(8), telepathy_idle_selinux(8), telepathy_mission_control_selinux(8), telepathy_msn_selinux(8), telepathy_salut_selinux(8), telepathy_sofiasip_selinux(8), telepathy_sunshine_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/telepathy_sunshine_selinux.8 serefpolicy-3.7.19/man/man8/telepathy_sunshine_selinux.8
--- nsaserefpolicy/man/man8/telepathy_sunshine_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/telepathy_sunshine_selinux.8	2013-03-15 11:40:07.532152033 +0100
@@ -0,0 +1,144 @@
+.TH  "telepathy_sunshine_selinux"  "8"  "13-01-04" "telepathy_sunshine" "SELinux Policy documentation for telepathy_sunshine"
+.SH "NAME"
+telepathy_sunshine_selinux \- Security Enhanced Linux Policy for the telepathy_sunshine processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the telepathy_sunshine processes via flexible mandatory access control.
+
+The telepathy_sunshine processes execute with the telepathy_sunshine_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep telepathy_sunshine_t
+
+
+.SH "ENTRYPOINTS"
+
+The telepathy_sunshine_t SELinux type can be entered via the "telepathy_sunshine_exec_t" file type.  The default entrypoint paths for the telepathy_sunshine_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux telepathy_sunshine policy is very flexible allowing users to setup their telepathy_sunshine processes in as secure a method as possible.
+.PP
+The following process types are defined for telepathy_sunshine:
+
+.EX
+.B telepathy_sunshine_t
+.EE
+.PP
+Note:
+.B semanage permissive -a telepathy_sunshine_t
+
+can be used to make the process type telepathy_sunshine_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux telepathy_sunshine policy is very flexible allowing users to setup their telepathy_sunshine processes in as secure a method as possible.
+.PP
+The following file types are defined for telepathy_sunshine:
+
+
+.EX
+.PP
+.B telepathy_sunshine_exec_t
+.EE
+
+- Set files with the telepathy_sunshine_exec_t type, if you want to transition an executable to the telepathy_sunshine_t domain.
+
+
+.EX
+.PP
+.B telepathy_sunshine_tmp_t
+.EE
+
+- Set files with the telepathy_sunshine_tmp_t type, if you want to store telepathy sunshine temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type telepathy_sunshine_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B telepathy_sunshine_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), telepathy_sunshine(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, telepathy_gabble_selinux(8), telepathy_idle_selinux(8), telepathy_mission_control_selinux(8), telepathy_msn_selinux(8), telepathy_salut_selinux(8), telepathy_sofiasip_selinux(8), telepathy_stream_engine_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/telnetd_selinux.8 serefpolicy-3.7.19/man/man8/telnetd_selinux.8
--- nsaserefpolicy/man/man8/telnetd_selinux.8	2013-03-15 11:41:10.158153462 +0100
+++ serefpolicy-3.7.19/man/man8/telnetd_selinux.8	2013-03-15 11:39:54.172151729 +0100
@@ -1,37 +1,63 @@
-.TH  "telnetd_selinux"  "8"  "telnetd" "dwalsh@redhat.com" "telnetd SELinux Policy documentation"
+.TH  "telnetd_selinux"  "8"  "13-01-04" "telnetd" "SELinux Policy documentation for telnetd"
 .SH "NAME"
 telnetd_selinux \- Security Enhanced Linux Policy for the telnetd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the telnetd processes via flexible mandatory access control.
 
+The telnetd processes execute with the telnetd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep telnetd_t
+
+
+.SH "ENTRYPOINTS"
+
+The telnetd_t SELinux type can be entered via the "telnetd_exec_t" file type.  The default entrypoint paths for the telnetd_t domain are the following:"
+
+/usr/sbin/in\.telnetd, /usr/kerberos/sbin/telnetd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
+.PP
+The following process types are defined for telnetd:
+
+.EX
+.B telnetd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a telnetd_t
+
+can be used to make the process type telnetd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for telnetd:
 
 
 .EX
 .PP
-.B telnetd_exec_t 
+.B telnetd_exec_t
 .EE
 
 - Set files with the telnetd_exec_t type, if you want to transition an executable to the telnetd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/kerberos/sbin/telnetd, /usr/sbin/in\.telnetd
 
 .EX
 .PP
-.B telnetd_keytab_t 
+.B telnetd_keytab_t
 .EE
 
 - Set files with the telnetd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B telnetd_tmp_t 
+.B telnetd_tmp_t
 .EE
 
 - Set files with the telnetd_tmp_t type, if you want to store telnetd temporary files in the /tmp directories.
@@ -47,7 +73,7 @@
 
 .EX
 .PP
-.B telnetd_var_run_t 
+.B telnetd_var_run_t
 .EE
 
 - Set files with the telnetd_var_run_t type, if you want to store the telnetd files under the /run directory.
@@ -55,51 +81,119 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for telnetd:
 
 .EX
 .TP 5
-.B telnetd_port_t 
+.B telnetd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 23
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
-.PP 
-The following process types are defined for telnetd:
+.SH "MANAGED FILES"
 
-.EX
-.B telnetd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type telnetd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B security_t
+
+
+.br
+.B telnetd_tmp_t
+
+
+.br
+.B telnetd_var_run_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +209,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), telnetd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), telnetd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/testapp_selinux.8 serefpolicy-3.7.19/man/man8/testapp_selinux.8
--- nsaserefpolicy/man/man8/testapp_selinux.8	2013-03-15 11:41:11.785153499 +0100
+++ serefpolicy-3.7.19/man/man8/testapp_selinux.8	2013-03-15 11:39:57.080151795 +0100
@@ -1,25 +1,55 @@
-.TH  "testapp_selinux"  "8"  "testapp" "dwalsh@redhat.com" "testapp SELinux Policy documentation"
+.TH  "testapp_selinux"  "8"  "13-01-04" "testapp" "SELinux Policy documentation for testapp"
 .SH "NAME"
 testapp_selinux \- Security Enhanced Linux Policy for the testapp processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the testapp processes via flexible mandatory access control.
 
+The testapp processes execute with the testapp_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep testapp_t
+
+
+.SH "ENTRYPOINTS"
+
+The testapp_t SELinux type can be entered via the "testapp_exec_t" file type.  The default entrypoint paths for the testapp_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux testapp policy is very flexible allowing users to setup their testapp processes in as secure a method as possible.
+.PP
+The following process types are defined for testapp:
+
+.EX
+.B testapp_t
+.EE
+.PP
+Note:
+.B semanage permissive -a testapp_t
+
+can be used to make the process type testapp_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux testapp policy is very flexible allowing users to setup their testapp processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for testapp:
 
 
 .EX
 .PP
-.B testapp_exec_t 
+.B testapp_exec_t
 .EE
 
 - Set files with the testapp_exec_t type, if you want to transition an executable to the testapp_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B testapp_tmp_t 
+.B testapp_tmp_t
 .EE
 
 - Set files with the testapp_tmp_t type, if you want to store testapp temporary files in the /tmp directories.
@@ -35,28 +65,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux testapp policy is very flexible allowing users to setup their testapp processes in as secure a method as possible.
-.PP 
-The following process types are defined for testapp:
+.SH "MANAGED FILES"
 
-.EX
-.B testapp_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type testapp_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +127,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), testapp(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), testapp(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/tethereal_selinux.8 serefpolicy-3.7.19/man/man8/tethereal_selinux.8
--- nsaserefpolicy/man/man8/tethereal_selinux.8	2013-03-15 11:41:12.191153509 +0100
+++ serefpolicy-3.7.19/man/man8/tethereal_selinux.8	2013-03-15 11:40:06.083152000 +0100
@@ -1,25 +1,55 @@
-.TH  "tethereal_selinux"  "8"  "tethereal" "dwalsh@redhat.com" "tethereal SELinux Policy documentation"
+.TH  "tethereal_selinux"  "8"  "13-01-04" "tethereal" "SELinux Policy documentation for tethereal"
 .SH "NAME"
 tethereal_selinux \- Security Enhanced Linux Policy for the tethereal processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the tethereal processes via flexible mandatory access control.
 
+The tethereal processes execute with the tethereal_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep tethereal_t
+
+
+.SH "ENTRYPOINTS"
+
+The tethereal_t SELinux type can be entered via the "tethereal_exec_t" file type.  The default entrypoint paths for the tethereal_t domain are the following:"
+
+/usr/sbin/tethereal.*
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux tethereal policy is very flexible allowing users to setup their tethereal processes in as secure a method as possible.
+.PP
+The following process types are defined for tethereal:
+
+.EX
+.B tethereal_t
+.EE
+.PP
+Note:
+.B semanage permissive -a tethereal_t
+
+can be used to make the process type tethereal_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux tethereal policy is very flexible allowing users to setup their tethereal processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for tethereal:
 
 
 .EX
 .PP
-.B tethereal_exec_t 
+.B tethereal_exec_t
 .EE
 
 - Set files with the tethereal_exec_t type, if you want to transition an executable to the tethereal_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B tethereal_tmp_t 
+.B tethereal_tmp_t
 .EE
 
 - Set files with the tethereal_tmp_t type, if you want to store tethereal temporary files in the /tmp directories.
@@ -35,28 +65,60 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux tethereal policy is very flexible allowing users to setup their tethereal processes in as secure a method as possible.
-.PP 
-The following process types are defined for tethereal:
+.SH "MANAGED FILES"
 
-.EX
-.B tethereal_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type tethereal_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tethereal_tmp_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +131,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), tethereal(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), tethereal(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/tftpd_selinux.8 serefpolicy-3.7.19/man/man8/tftpd_selinux.8
--- nsaserefpolicy/man/man8/tftpd_selinux.8	2013-03-15 11:41:11.274153488 +0100
+++ serefpolicy-3.7.19/man/man8/tftpd_selinux.8	2013-03-15 11:39:55.476151758 +0100
@@ -1,10 +1,51 @@
-.TH  "tftpd_selinux"  "8"  "tftpd" "dwalsh@redhat.com" "tftpd SELinux Policy documentation"
+.TH  "tftpd_selinux"  "8"  "13-01-04" "tftpd" "SELinux Policy documentation for tftpd"
 .SH "NAME"
 tftpd_selinux \- Security Enhanced Linux Policy for the tftpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the tftpd processes via flexible mandatory access control.
 
+The tftpd processes execute with the tftpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep tftpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The tftpd_t SELinux type can be entered via the "tftpd_exec_t" file type.  The default entrypoint paths for the tftpd_t domain are the following:"
+
+/usr/sbin/atftpd, /usr/sbin/in\.tftpd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
+.PP
+The following process types are defined for tftpd:
+
+.EX
+.B tftpd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a tftpd_t
+
+can be used to make the process type tftpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  tftpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run tftpd with the tightest access possible.
+
+
+.PP
+If you want to allow tftp to modify public files used for public file transfer services, you must turn on the tftp_anon_write boolean.
+
+.EX
+.B setsebool -P tftp_anon_write 1
+.EE
 
 .SH SHARING FILES
 If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
@@ -17,7 +58,7 @@
 .B restorecon -F -R -v /var/tftpd
 .pp
 .TP
-Allow tftpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_tftpd_anon_write boolean to be set.
+Allow tftpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_tftpdd_anon_write boolean to be set.
 .PP
 .B
 semanage fcontext -a -t public_content_rw_t "/var/tftpd/incoming(/.*)?"
@@ -33,31 +74,27 @@
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for tftpd:
 
 
 .EX
 .PP
-.B tftpd_exec_t 
+.B tftpd_exec_t
 .EE
 
 - Set files with the tftpd_exec_t type, if you want to transition an executable to the tftpd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/in\.tftpd, /usr/sbin/atftpd
 
 .EX
 .PP
-.B tftpd_var_run_t 
+.B tftpd_var_run_t
 .EE
 
 - Set files with the tftpd_var_run_t type, if you want to store the tftpd files under the /run directory.
@@ -65,7 +102,7 @@
 
 .EX
 .PP
-.B tftpdir_rw_t 
+.B tftpdir_rw_t
 .EE
 
 - Set files with the tftpdir_rw_t type, if you want to treat the files as tftpdir read/write content.
@@ -73,63 +110,105 @@
 
 .EX
 .PP
-.B tftpdir_t 
+.B tftpdir_t
 .EE
 
 - Set files with the tftpdir_t type, if you want to treat the files as tftpdir data.
 
-.br
-.TP 5
-Paths: 
-/tftpboot/.*, /tftpboot
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for tftpd:
 
 .EX
 .TP 5
-.B tftp_port_t 
+.B tftp_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 69
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for tftpd:
+.SH "MANAGED FILES"
 
-.EX
-.B tftpd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type tftpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tftpd_var_run_t
+
+
+.br
+.B tftpdir_rw_t
+
+	/var/lib/tftpboot(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -144,12 +223,18 @@
 .B semanage port
 can also be used to manipulate the port definitions
 
+.B semanage boolean
+can also be used to manipulate the booleans
+
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), tftpd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), tftpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/tgtd_selinux.8 serefpolicy-3.7.19/man/man8/tgtd_selinux.8
--- nsaserefpolicy/man/man8/tgtd_selinux.8	2013-03-15 11:41:12.031153505 +0100
+++ serefpolicy-3.7.19/man/man8/tgtd_selinux.8	2013-03-15 11:40:01.543151897 +0100
@@ -1,31 +1,55 @@
-.TH  "tgtd_selinux"  "8"  "tgtd" "dwalsh@redhat.com" "tgtd SELinux Policy documentation"
+.TH  "tgtd_selinux"  "8"  "13-01-04" "tgtd" "SELinux Policy documentation for tgtd"
 .SH "NAME"
 tgtd_selinux \- Security Enhanced Linux Policy for the tgtd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the tgtd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B tgtd
-(Linux Target Framework Daemon)
-processes via flexible mandatory access
-control.  
+The tgtd processes execute with the tgtd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep tgtd_t
+
+
+.SH "ENTRYPOINTS"
+
+The tgtd_t SELinux type can be entered via the "tgtd_exec_t" file type.  The default entrypoint paths for the tgtd_t domain are the following:"
+
+/usr/sbin/tgtd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux tgtd policy is very flexible allowing users to setup their tgtd processes in as secure a method as possible.
+.PP
+The following process types are defined for tgtd:
+
+.EX
+.B tgtd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a tgtd_t
+
+can be used to make the process type tgtd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux tgtd policy is very flexible allowing users to setup their tgtd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for tgtd:
 
 
 .EX
 .PP
-.B tgtd_exec_t 
+.B tgtd_exec_t
 .EE
 
 - Set files with the tgtd_exec_t type, if you want to transition an executable to the tgtd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B tgtd_initrc_exec_t 
+.B tgtd_initrc_exec_t
 .EE
 
 - Set files with the tgtd_initrc_exec_t type, if you want to transition an executable to the tgtd_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B tgtd_tmp_t 
+.B tgtd_tmp_t
 .EE
 
 - Set files with the tgtd_tmp_t type, if you want to store tgtd temporary files in the /tmp directories.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B tgtd_tmpfs_t 
+.B tgtd_tmpfs_t
 .EE
 
 - Set files with the tgtd_tmpfs_t type, if you want to store tgtd files on a tmpfs file system.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B tgtd_var_lib_t 
+.B tgtd_var_lib_t
 .EE
 
 - Set files with the tgtd_var_lib_t type, if you want to store the tgtd files under the /var/lib directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B tgtd_var_run_t 
+.B tgtd_var_run_t
 .EE
 
 - Set files with the tgtd_var_run_t type, if you want to store the tgtd files under the /run directory.
@@ -73,28 +97,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux tgtd policy is very flexible allowing users to setup their tgtd processes in as secure a method as possible.
-.PP 
-The following process types are defined for tgtd:
+.SH "MANAGED FILES"
 
-.EX
-.B tgtd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type tgtd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tgtd_tmpfs_t
+
+
+.br
+.B tgtd_var_lib_t
+
+	/var/lib/tgtd(/.*)?
+.br
+
+.br
+.B tgtd_var_run_t
+
+	/var/run/tgtd.*
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -107,11 +183,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), tgtd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), tgtd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/thin_selinux.8 serefpolicy-3.7.19/man/man8/thin_selinux.8
--- nsaserefpolicy/man/man8/thin_selinux.8	2013-03-15 11:41:10.104153461 +0100
+++ serefpolicy-3.7.19/man/man8/thin_selinux.8	2013-03-15 11:39:54.167151728 +0100
@@ -1,25 +1,55 @@
-.TH  "thin_selinux"  "8"  "thin" "dwalsh@redhat.com" "thin SELinux Policy documentation"
+.TH  "thin_selinux"  "8"  "13-01-04" "thin" "SELinux Policy documentation for thin"
 .SH "NAME"
 thin_selinux \- Security Enhanced Linux Policy for the thin processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the thin processes via flexible mandatory access control.
 
+The thin processes execute with the thin_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep thin_t
+
+
+.SH "ENTRYPOINTS"
+
+The thin_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,thin_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the thin_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/thin, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux thin policy is very flexible allowing users to setup their thin processes in as secure a method as possible.
+.PP
+The following process types are defined for thin:
+
+.EX
+.B thin_t
+.EE
+.PP
+Note:
+.B semanage permissive -a thin_t
+
+can be used to make the process type thin_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux thin policy is very flexible allowing users to setup their thin processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for thin:
 
 
 .EX
 .PP
-.B thin_exec_t 
+.B thin_exec_t
 .EE
 
 - Set files with the thin_exec_t type, if you want to transition an executable to the thin_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B thin_var_run_t 
+.B thin_var_run_t
 .EE
 
 - Set files with the thin_var_run_t type, if you want to store the thin files under the /run directory.
@@ -35,28 +65,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux thin policy is very flexible allowing users to setup their thin processes in as secure a method as possible.
-.PP 
-The following process types are defined for thin:
+.SH "MANAGED FILES"
 
-.EX
-.B thin_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type thin_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +91,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), thin(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), thin(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/tmpreaper_selinux.8 serefpolicy-3.7.19/man/man8/tmpreaper_selinux.8
--- nsaserefpolicy/man/man8/tmpreaper_selinux.8	2013-03-15 11:41:11.884153502 +0100
+++ serefpolicy-3.7.19/man/man8/tmpreaper_selinux.8	2013-03-15 11:39:59.284151845 +0100
@@ -1,64 +1,76 @@
-.TH  "tmpreaper_selinux"  "8"  "tmpreaper" "dwalsh@redhat.com" "tmpreaper SELinux Policy documentation"
+.TH  "tmpreaper_selinux"  "8"  "13-01-04" "tmpreaper" "SELinux Policy documentation for tmpreaper"
 .SH "NAME"
 tmpreaper_selinux \- Security Enhanced Linux Policy for the tmpreaper processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the tmpreaper processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B tmpreaper
-(Manage temporary directory sizes and file ages)
-processes via flexible mandatory access
-control.  
+The tmpreaper processes execute with the tmpreaper_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep tmpreaper_t
+
+
+.SH "ENTRYPOINTS"
+
+The tmpreaper_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,tmpreaper_exec_t" file types.  The default entrypoint paths for the tmpreaper_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/tmpwatch, /usr/sbin/tmpreaper
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux tmpreaper policy is very flexible allowing users to setup their tmpreaper processes in as secure a method as possible.
+.PP
+The following process types are defined for tmpreaper:
+
+.EX
+.B tmpreaper_t
+.EE
+.PP
+Note:
+.B semanage permissive -a tmpreaper_t
+
+can be used to make the process type tmpreaper_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux tmpreaper policy is very flexible allowing users to setup their tmpreaper processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for tmpreaper:
 
 
 .EX
 .PP
-.B tmpreaper_exec_t 
+.B tmpreaper_exec_t
 .EE
 
 - Set files with the tmpreaper_exec_t type, if you want to transition an executable to the tmpreaper_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/tmpreaper, /usr/sbin/tmpwatch
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux tmpreaper policy is very flexible allowing users to setup their tmpreaper processes in as secure a method as possible.
-.PP 
-The following process types are defined for tmpreaper:
+.SH "MANAGED FILES"
 
-.EX
-.B tmpreaper_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type tmpreaper_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -71,11 +83,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), tmpreaper(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), tmpreaper(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/tor_selinux.8 serefpolicy-3.7.19/man/man8/tor_selinux.8
--- nsaserefpolicy/man/man8/tor_selinux.8	2013-03-15 11:41:11.990153504 +0100
+++ serefpolicy-3.7.19/man/man8/tor_selinux.8	2013-03-15 11:40:00.931151883 +0100
@@ -1,16 +1,40 @@
-.TH  "tor_selinux"  "8"  "tor" "dwalsh@redhat.com" "tor SELinux Policy documentation"
+.TH  "tor_selinux"  "8"  "13-01-04" "tor" "SELinux Policy documentation for tor"
 .SH "NAME"
 tor_selinux \- Security Enhanced Linux Policy for the tor processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the tor processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B tor
-(TOR, the onion router)
-processes via flexible mandatory access
-control.  
+The tor processes execute with the tor_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep tor_t
+
+
+.SH "ENTRYPOINTS"
+
+The tor_t SELinux type can be entered via the "tor_exec_t" file type.  The default entrypoint paths for the tor_t domain are the following:"
+
+/usr/bin/tor, /usr/sbin/tor
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
+.PP
+The following process types are defined for tor:
+
+.EX
+.B tor_t
+.EE
+.PP
+Note:
+.B semanage permissive -a tor_t
+
+can be used to make the process type tor_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  tor policy is extremely flexible and has several booleans that allow you to manipulate the policy and run tor with the tightest access possible.
@@ -23,20 +47,27 @@
 .B setsebool -P tor_bind_all_unreserved_ports 1
 .EE
 
+.PP
+If you want to allow tor daemon to bind tcp sockets to all unreserved ports, you must turn on the tor_bind_all_unreserved_ports boolean.
+
+.EX
+.B setsebool -P tor_bind_all_unreserved_ports 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for tor:
 
 
 .EX
 .PP
-.B tor_etc_t 
+.B tor_etc_t
 .EE
 
 - Set files with the tor_etc_t type, if you want to store tor files in the /etc directories.
@@ -44,19 +75,15 @@
 
 .EX
 .PP
-.B tor_exec_t 
+.B tor_exec_t
 .EE
 
 - Set files with the tor_exec_t type, if you want to transition an executable to the tor_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/tor, /usr/bin/tor
 
 .EX
 .PP
-.B tor_initrc_exec_t 
+.B tor_initrc_exec_t
 .EE
 
 - Set files with the tor_initrc_exec_t type, if you want to transition an executable to the tor_initrc_t domain.
@@ -64,19 +91,15 @@
 
 .EX
 .PP
-.B tor_var_lib_t 
+.B tor_var_lib_t
 .EE
 
 - Set files with the tor_var_lib_t type, if you want to store the tor files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/tor(/.*)?, /var/lib/tor-data(/.*)?
 
 .EX
 .PP
-.B tor_var_log_t 
+.B tor_var_log_t
 .EE
 
 - Set files with the tor_var_log_t type, if you want to treat the data as tor var log data, usually stored under the /var/log directory.
@@ -84,7 +107,7 @@
 
 .EX
 .PP
-.B tor_var_run_t 
+.B tor_var_run_t
 .EE
 
 - Set files with the tor_var_run_t type, if you want to store the tor files under the /run directory.
@@ -92,62 +115,118 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for tor:
 
 .EX
 .TP 5
-.B tor_port_t 
+.B tor_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 6969,9001,9030,9051
 .EE
 
 .EX
 .TP 5
-.B tor_socks_port_t 
+.B tor_socks_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 9050
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
-.PP 
-The following process types are defined for tor:
+.SH "MANAGED FILES"
 
-.EX
-.B tor_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type tor_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B tor_var_lib_t
+
+	/var/lib/tor(/.*)?
+.br
+	/var/lib/tor-data(/.*)?
+.br
+
+.br
+.B tor_var_log_t
+
+	/var/log/tor(/.*)?
+.br
+
+.br
+.B tor_var_run_t
+
+	/var/run/tor(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -166,12 +245,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), tor(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), tor(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/traceroute_selinux.8 serefpolicy-3.7.19/man/man8/traceroute_selinux.8
--- nsaserefpolicy/man/man8/traceroute_selinux.8	2013-03-15 11:41:10.939153480 +0100
+++ serefpolicy-3.7.19/man/man8/traceroute_selinux.8	2013-03-15 11:39:55.188151752 +0100
@@ -1,81 +1,135 @@
-.TH  "traceroute_selinux"  "8"  "traceroute" "dwalsh@redhat.com" "traceroute SELinux Policy documentation"
+.TH  "traceroute_selinux"  "8"  "13-01-04" "traceroute" "SELinux Policy documentation for traceroute"
 .SH "NAME"
 traceroute_selinux \- Security Enhanced Linux Policy for the traceroute processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the traceroute processes via flexible mandatory access control.
 
+The traceroute processes execute with the traceroute_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep traceroute_t
+
+
+.SH "ENTRYPOINTS"
+
+The traceroute_t SELinux type can be entered via the "traceroute_exec_t" file type.  The default entrypoint paths for the traceroute_t domain are the following:"
+
+/bin/tracepath.*, /bin/traceroute.*, /usr/bin/traceroute.*, /usr/sbin/traceroute.*, /usr/bin/lft, /usr/bin/nmap
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
+.PP
+The following process types are defined for traceroute:
+
+.EX
+.B traceroute_t
+.EE
+.PP
+Note:
+.B semanage permissive -a traceroute_t
+
+can be used to make the process type traceroute_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for traceroute:
 
 
 .EX
 .PP
-.B traceroute_exec_t 
+.B traceroute_exec_t
 .EE
 
 - Set files with the traceroute_exec_t type, if you want to transition an executable to the traceroute_t domain.
 
-.br
-.TP 5
-Paths: 
-/bin/tracepath.*, /usr/bin/traceroute.*, /usr/bin/nmap, /usr/bin/lft, /bin/traceroute.*, /usr/sbin/traceroute.*
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for traceroute:
 
 .EX
 .TP 5
-.B traceroute_port_t 
+.B traceroute_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+udp 64000-64010
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
-.PP 
-The following process types are defined for traceroute:
+.SH "MANAGED FILES"
 
-.EX
-.B traceroute_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type traceroute_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +145,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), traceroute(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), traceroute(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/tuned_selinux.8 serefpolicy-3.7.19/man/man8/tuned_selinux.8
--- nsaserefpolicy/man/man8/tuned_selinux.8	2013-03-15 11:41:11.981153504 +0100
+++ serefpolicy-3.7.19/man/man8/tuned_selinux.8	2013-03-15 11:40:00.930151883 +0100
@@ -1,31 +1,55 @@
-.TH  "tuned_selinux"  "8"  "tuned" "dwalsh@redhat.com" "tuned SELinux Policy documentation"
+.TH  "tuned_selinux"  "8"  "13-01-04" "tuned" "SELinux Policy documentation for tuned"
 .SH "NAME"
 tuned_selinux \- Security Enhanced Linux Policy for the tuned processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the tuned processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B tuned
-(Dynamic adaptive system tuning daemon)
-processes via flexible mandatory access
-control.  
+The tuned processes execute with the tuned_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep tuned_t
+
+
+.SH "ENTRYPOINTS"
+
+The tuned_t SELinux type can be entered via the "tuned_exec_t" file type.  The default entrypoint paths for the tuned_t domain are the following:"
+
+/usr/sbin/tuned
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux tuned policy is very flexible allowing users to setup their tuned processes in as secure a method as possible.
+.PP
+The following process types are defined for tuned:
+
+.EX
+.B tuned_t
+.EE
+.PP
+Note:
+.B semanage permissive -a tuned_t
+
+can be used to make the process type tuned_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux tuned policy is very flexible allowing users to setup their tuned processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for tuned:
 
 
 .EX
 .PP
-.B tuned_exec_t 
+.B tuned_exec_t
 .EE
 
 - Set files with the tuned_exec_t type, if you want to transition an executable to the tuned_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B tuned_initrc_exec_t 
+.B tuned_initrc_exec_t
 .EE
 
 - Set files with the tuned_initrc_exec_t type, if you want to transition an executable to the tuned_initrc_t domain.
@@ -41,52 +65,96 @@
 
 .EX
 .PP
-.B tuned_log_t 
+.B tuned_log_t
 .EE
 
 - Set files with the tuned_log_t type, if you want to treat the data as tuned log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/tuned(/.*)?, /var/log/tuned\.log
 
 .EX
 .PP
-.B tuned_var_run_t 
+.B tuned_var_run_t
 .EE
 
 - Set files with the tuned_var_run_t type, if you want to store the tuned files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/tuned\.pid, /var/run/tuned(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux tuned policy is very flexible allowing users to setup their tuned processes in as secure a method as possible.
-.PP 
-The following process types are defined for tuned:
+.SH "MANAGED FILES"
 
-.EX
-.B tuned_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type tuned_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B tuned_log_t
+
+	/var/log/tuned(/.*)?
+.br
+	/var/log/tuned\.log.*
+.br
+
+.br
+.B tuned_var_run_t
+
+	/var/run/tuned(/.*)?
+.br
+	/var/run/tuned\.pid
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -99,11 +167,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), tuned(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), tuned(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/tvtime_selinux.8 serefpolicy-3.7.19/man/man8/tvtime_selinux.8
--- nsaserefpolicy/man/man8/tvtime_selinux.8	2013-03-15 11:41:12.081153506 +0100
+++ serefpolicy-3.7.19/man/man8/tvtime_selinux.8	2013-03-15 11:40:02.495151918 +0100
@@ -1,31 +1,55 @@
-.TH  "tvtime_selinux"  "8"  "tvtime" "dwalsh@redhat.com" "tvtime SELinux Policy documentation"
+.TH  "tvtime_selinux"  "8"  "13-01-04" "tvtime" "SELinux Policy documentation for tvtime"
 .SH "NAME"
 tvtime_selinux \- Security Enhanced Linux Policy for the tvtime processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the tvtime processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B tvtime
-( tvtime - a high quality television application )
-processes via flexible mandatory access
-control.  
+The tvtime processes execute with the tvtime_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep tvtime_t
+
+
+.SH "ENTRYPOINTS"
+
+The tvtime_t SELinux type can be entered via the "tvtime_exec_t" file type.  The default entrypoint paths for the tvtime_t domain are the following:"
+
+/usr/bin/tvtime
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux tvtime policy is very flexible allowing users to setup their tvtime processes in as secure a method as possible.
+.PP
+The following process types are defined for tvtime:
+
+.EX
+.B tvtime_t
+.EE
+.PP
+Note:
+.B semanage permissive -a tvtime_t
+
+can be used to make the process type tvtime_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux tvtime policy is very flexible allowing users to setup their tvtime processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for tvtime:
 
 
 .EX
 .PP
-.B tvtime_exec_t 
+.B tvtime_exec_t
 .EE
 
 - Set files with the tvtime_exec_t type, if you want to transition an executable to the tvtime_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B tvtime_home_t 
+.B tvtime_home_t
 .EE
 
 - Set files with the tvtime_home_t type, if you want to store tvtime files in the users home directory.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B tvtime_tmp_t 
+.B tvtime_tmp_t
 .EE
 
 - Set files with the tvtime_tmp_t type, if you want to store tvtime temporary files in the /tmp directories.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B tvtime_tmpfs_t 
+.B tvtime_tmpfs_t
 .EE
 
 - Set files with the tvtime_tmpfs_t type, if you want to store tvtime files on a tmpfs file system.
@@ -57,28 +81,82 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux tvtime policy is very flexible allowing users to setup their tvtime processes in as secure a method as possible.
-.PP 
-The following process types are defined for tvtime:
+.SH "MANAGED FILES"
 
-.EX
-.B tvtime_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type tvtime_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B tvtime_home_t
+
+
+.br
+.B tvtime_tmp_t
+
+
+.br
+.B tvtime_tmpfs_t
+
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +169,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), tvtime(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), tvtime(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/tzdata_selinux.8 serefpolicy-3.7.19/man/man8/tzdata_selinux.8
--- nsaserefpolicy/man/man8/tzdata_selinux.8	2013-03-15 11:41:10.546153471 +0100
+++ serefpolicy-3.7.19/man/man8/tzdata_selinux.8	2013-03-15 11:39:54.645151739 +0100
@@ -1,31 +1,55 @@
-.TH  "tzdata_selinux"  "8"  "tzdata" "dwalsh@redhat.com" "tzdata SELinux Policy documentation"
+.TH  "tzdata_selinux"  "8"  "13-01-04" "tzdata" "SELinux Policy documentation for tzdata"
 .SH "NAME"
 tzdata_selinux \- Security Enhanced Linux Policy for the tzdata processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the tzdata processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B tzdata
-(Time zone updater)
-processes via flexible mandatory access
-control.  
+The tzdata processes execute with the tzdata_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep tzdata_t
+
+
+.SH "ENTRYPOINTS"
+
+The tzdata_t SELinux type can be entered via the "tzdata_exec_t" file type.  The default entrypoint paths for the tzdata_t domain are the following:"
+
+/usr/sbin/tzdata-update
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux tzdata policy is very flexible allowing users to setup their tzdata processes in as secure a method as possible.
+.PP
+The following process types are defined for tzdata:
+
+.EX
+.B tzdata_t
+.EE
+.PP
+Note:
+.B semanage permissive -a tzdata_t
+
+can be used to make the process type tzdata_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux tzdata policy is very flexible allowing users to setup their tzdata processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for tzdata:
 
 
 .EX
 .PP
-.B tzdata_exec_t 
+.B tzdata_exec_t
 .EE
 
 - Set files with the tzdata_exec_t type, if you want to transition an executable to the tzdata_t domain.
@@ -33,28 +57,88 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux tzdata policy is very flexible allowing users to setup their tzdata processes in as secure a method as possible.
-.PP 
-The following process types are defined for tzdata:
+.SH "MANAGED FILES"
 
-.EX
-.B tzdata_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type tzdata_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B locale_t
+
+	/usr/lib/locale(/.*)?
+.br
+	/usr/share/locale(/.*)?
+.br
+	/usr/share/zoneinfo(/.*)?
+.br
+	/usr/share/X11/locale(/.*)?
+.br
+	/etc/timezone
+.br
+	/etc/localtime
+.br
+	/etc/sysconfig/clock
+.br
+	/etc/avahi/etc/localtime
+.br
+	/var/empty/sshd/etc/localtime
+.br
+	/var/spool/postfix/etc/localtime
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +151,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), tzdata(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), tzdata(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/udev_selinux.8 serefpolicy-3.7.19/man/man8/udev_selinux.8
--- nsaserefpolicy/man/man8/udev_selinux.8	2013-03-15 11:41:12.087153506 +0100
+++ serefpolicy-3.7.19/man/man8/udev_selinux.8	2013-03-15 11:40:02.646151922 +0100
@@ -1,31 +1,55 @@
-.TH  "udev_selinux"  "8"  "udev" "dwalsh@redhat.com" "udev SELinux Policy documentation"
+.TH  "udev_selinux"  "8"  "13-01-04" "udev" "SELinux Policy documentation for udev"
 .SH "NAME"
 udev_selinux \- Security Enhanced Linux Policy for the udev processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the udev processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B udev
-(Policy for udev)
-processes via flexible mandatory access
-control.  
+The udev processes execute with the udev_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep udev_t
+
+
+.SH "ENTRYPOINTS"
+
+The udev_t SELinux type can be entered via the "mtrr_device_t,udev_helper_exec_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,udev_exec_t" file types.  The default entrypoint paths for the udev_t domain are the following:"
+
+/dev/cpu/mtrr, /etc/dev\.d/.+, /etc/udev/scripts/.+, /etc/hotplug\.d/default/udev.*, all files on the system, /sbin/udev, /sbin/udevd, /sbin/udevadm, /sbin/udevsend, /sbin/udevstart, /sbin/start_udev, /usr/bin/udevinfo, /lib/udev/udev-acl, /sbin/wait_for_sysfs
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux udev policy is very flexible allowing users to setup their udev processes in as secure a method as possible.
+.PP
+The following process types are defined for udev:
+
+.EX
+.B udev_t
+.EE
+.PP
+Note:
+.B semanage permissive -a udev_t
+
+can be used to make the process type udev_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux udev policy is very flexible allowing users to setup their udev processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for udev:
 
 
 .EX
 .PP
-.B udev_etc_t 
+.B udev_etc_t
 .EE
 
 - Set files with the udev_etc_t type, if you want to store udev files in the /etc directories.
@@ -33,76 +57,52 @@
 
 .EX
 .PP
-.B udev_exec_t 
+.B udev_exec_t
 .EE
 
 - Set files with the udev_exec_t type, if you want to transition an executable to the udev_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/udevd, /sbin/start_udev, /sbin/udevsend, /usr/bin/udevinfo, /sbin/udev, /sbin/udevstart, /sbin/wait_for_sysfs, /lib/udev/udev-acl, /sbin/udevadm
 
 .EX
 .PP
-.B udev_helper_exec_t 
+.B udev_helper_exec_t
 .EE
 
 - Set files with the udev_helper_exec_t type, if you want to transition an executable to the udev_helper_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/udev/scripts/.+, /etc/hotplug\.d/default/udev.*, /etc/dev\.d/.+
 
 .EX
 .PP
-.B udev_tbl_t 
+.B udev_tbl_t
 .EE
 
 - Set files with the udev_tbl_t type, if you want to treat the files as udev tbl data.
 
-.br
-.TP 5
-Paths: 
-/dev/\.udevdb, /dev/\.udev(/.*)?, /dev/udev\.tbl
 
 .EX
 .PP
-.B udev_var_run_t 
+.B udev_var_run_t
 .EE
 
 - Set files with the udev_var_run_t type, if you want to store the udev files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/PackageKit/udev(/.*)?, /etc/udev/rules.d(/.*)?, /var/run/libgpod(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux udev policy is very flexible allowing users to setup their udev processes in as secure a method as possible.
-.PP 
-The following process types are defined for udev:
+.SH "MANAGED FILES"
 
-.EX
-.B udev_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type udev_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +115,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), udev(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), udev(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ulogd_selinux.8 serefpolicy-3.7.19/man/man8/ulogd_selinux.8
--- nsaserefpolicy/man/man8/ulogd_selinux.8	2013-03-15 11:41:12.205153509 +0100
+++ serefpolicy-3.7.19/man/man8/ulogd_selinux.8	2013-03-15 11:40:06.310152005 +0100
@@ -1,31 +1,55 @@
-.TH  "ulogd_selinux"  "8"  "ulogd" "dwalsh@redhat.com" "ulogd SELinux Policy documentation"
+.TH  "ulogd_selinux"  "8"  "13-01-04" "ulogd" "SELinux Policy documentation for ulogd"
 .SH "NAME"
 ulogd_selinux \- Security Enhanced Linux Policy for the ulogd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ulogd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B ulogd
-(Iptables/netfilter userspace logging daemon)
-processes via flexible mandatory access
-control.  
+The ulogd processes execute with the ulogd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep ulogd_t
+
+
+.SH "ENTRYPOINTS"
+
+The ulogd_t SELinux type can be entered via the "ulogd_exec_t" file type.  The default entrypoint paths for the ulogd_t domain are the following:"
+
+/usr/sbin/ulogd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ulogd policy is very flexible allowing users to setup their ulogd processes in as secure a method as possible.
+.PP
+The following process types are defined for ulogd:
+
+.EX
+.B ulogd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ulogd_t
+
+can be used to make the process type ulogd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ulogd policy is very flexible allowing users to setup their ulogd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ulogd:
 
 
 .EX
 .PP
-.B ulogd_etc_t 
+.B ulogd_etc_t
 .EE
 
 - Set files with the ulogd_etc_t type, if you want to store ulogd files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B ulogd_exec_t 
+.B ulogd_exec_t
 .EE
 
 - Set files with the ulogd_exec_t type, if you want to transition an executable to the ulogd_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B ulogd_initrc_exec_t 
+.B ulogd_initrc_exec_t
 .EE
 
 - Set files with the ulogd_initrc_exec_t type, if you want to transition an executable to the ulogd_initrc_t domain.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B ulogd_modules_t 
+.B ulogd_modules_t
 .EE
 
 - Set files with the ulogd_modules_t type, if you want to treat the files as ulogd modules.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B ulogd_var_log_t 
+.B ulogd_var_log_t
 .EE
 
 - Set files with the ulogd_var_log_t type, if you want to treat the data as ulogd var log data, usually stored under the /var/log directory.
@@ -65,28 +89,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ulogd policy is very flexible allowing users to setup their ulogd processes in as secure a method as possible.
-.PP 
-The following process types are defined for ulogd:
+.SH "MANAGED FILES"
 
-.EX
-.B ulogd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ulogd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B ulogd_var_log_t
+
+	/var/log/ulogd(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -99,11 +165,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ulogd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ulogd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/uml_selinux.8 serefpolicy-3.7.19/man/man8/uml_selinux.8
--- nsaserefpolicy/man/man8/uml_selinux.8	2013-03-15 11:41:10.830153478 +0100
+++ serefpolicy-3.7.19/man/man8/uml_selinux.8	2013-03-15 11:39:55.059151749 +0100
@@ -1,31 +1,55 @@
-.TH  "uml_selinux"  "8"  "uml" "dwalsh@redhat.com" "uml SELinux Policy documentation"
+.TH  "uml_selinux"  "8"  "13-01-04" "uml" "SELinux Policy documentation for uml"
 .SH "NAME"
 uml_selinux \- Security Enhanced Linux Policy for the uml processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the uml processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B uml
-(Policy for UML)
-processes via flexible mandatory access
-control.  
+The uml processes execute with the uml_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep uml_t
+
+
+.SH "ENTRYPOINTS"
+
+The uml_t SELinux type can be entered via the "uml_exec_t" file type.  The default entrypoint paths for the uml_t domain are the following:"
+
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux uml policy is very flexible allowing users to setup their uml processes in as secure a method as possible.
+.PP
+The following process types are defined for uml:
+
+.EX
+.B uml_switch_t, uml_t
+.EE
+.PP
+Note:
+.B semanage permissive -a uml_t
+
+can be used to make the process type uml_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux uml policy is very flexible allowing users to setup their uml processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for uml:
 
 
 .EX
 .PP
-.B uml_exec_t 
+.B uml_exec_t
 .EE
 
 - Set files with the uml_exec_t type, if you want to transition an executable to the uml_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B uml_ro_t 
+.B uml_ro_t
 .EE
 
 - Set files with the uml_ro_t type, if you want to treat the files as uml read/only content.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B uml_rw_t 
+.B uml_rw_t
 .EE
 
 - Set files with the uml_rw_t type, if you want to treat the files as uml read/write content.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B uml_switch_exec_t 
+.B uml_switch_exec_t
 .EE
 
 - Set files with the uml_switch_exec_t type, if you want to transition an executable to the uml_switch_t domain.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B uml_switch_var_run_t 
+.B uml_switch_var_run_t
 .EE
 
 - Set files with the uml_switch_var_run_t type, if you want to store the uml switch files under the /run directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B uml_tmp_t 
+.B uml_tmp_t
 .EE
 
 - Set files with the uml_tmp_t type, if you want to store uml temporary files in the /tmp directories.
@@ -73,7 +97,7 @@
 
 .EX
 .PP
-.B uml_tmpfs_t 
+.B uml_tmpfs_t
 .EE
 
 - Set files with the uml_tmpfs_t type, if you want to store uml files on a tmpfs file system.
@@ -81,28 +105,70 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux uml policy is very flexible allowing users to setup their uml processes in as secure a method as possible.
-.PP 
-The following process types are defined for uml:
+.SH "MANAGED FILES"
+
+The SELinux process type uml_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B uml_rw_t
+
+	/home/[^/]*/\.uml(/.*)?
+.br
+
+.br
+.B uml_tmp_t
+
+
+.br
+.B uml_tmpfs_t
 
-.EX
-.B uml_switch_t, uml_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -115,11 +181,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), uml(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), uml(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, uml_switch_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/uml_switch_selinux.8 serefpolicy-3.7.19/man/man8/uml_switch_selinux.8
--- nsaserefpolicy/man/man8/uml_switch_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/uml_switch_selinux.8	2013-03-15 11:40:07.095152023 +0100
@@ -0,0 +1,154 @@
+.TH  "uml_switch_selinux"  "8"  "13-01-04" "uml_switch" "SELinux Policy documentation for uml_switch"
+.SH "NAME"
+uml_switch_selinux \- Security Enhanced Linux Policy for the uml_switch processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the uml_switch processes via flexible mandatory access control.
+
+The uml_switch processes execute with the uml_switch_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep uml_switch_t
+
+
+.SH "ENTRYPOINTS"
+
+The uml_switch_t SELinux type can be entered via the "uml_switch_exec_t" file type.  The default entrypoint paths for the uml_switch_t domain are the following:"
+
+/usr/bin/uml_switch
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux uml_switch policy is very flexible allowing users to setup their uml_switch processes in as secure a method as possible.
+.PP
+The following process types are defined for uml_switch:
+
+.EX
+.B uml_switch_t
+.EE
+.PP
+Note:
+.B semanage permissive -a uml_switch_t
+
+can be used to make the process type uml_switch_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux uml_switch policy is very flexible allowing users to setup their uml_switch processes in as secure a method as possible.
+.PP
+The following file types are defined for uml_switch:
+
+
+.EX
+.PP
+.B uml_switch_exec_t
+.EE
+
+- Set files with the uml_switch_exec_t type, if you want to transition an executable to the uml_switch_t domain.
+
+
+.EX
+.PP
+.B uml_switch_var_run_t
+.EE
+
+- Set files with the uml_switch_var_run_t type, if you want to store the uml switch files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type uml_switch_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B uml_switch_var_run_t
+
+	/var/run/uml-utilities(/.*)?
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), uml_switch(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, uml_selinux(8), uml_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/unconfined_notrans_selinux.8 serefpolicy-3.7.19/man/man8/unconfined_notrans_selinux.8
--- nsaserefpolicy/man/man8/unconfined_notrans_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/unconfined_notrans_selinux.8	2013-03-15 11:39:56.366151779 +0100
@@ -0,0 +1,96 @@
+.TH  "unconfined_notrans_selinux"  "8"  "13-01-04" "unconfined_notrans" "SELinux Policy documentation for unconfined_notrans"
+.SH "NAME"
+unconfined_notrans_selinux \- Security Enhanced Linux Policy for the unconfined_notrans processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the unconfined_notrans processes via flexible mandatory access control.
+
+The unconfined_notrans processes execute with the unconfined_notrans_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep unconfined_notrans_t
+
+
+.SH "ENTRYPOINTS"
+
+The unconfined_notrans_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,unconfined_notrans_exec_t" file types.  The default entrypoint paths for the unconfined_notrans_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/mock, /usr/sbin/sysreport
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux unconfined_notrans policy is very flexible allowing users to setup their unconfined_notrans processes in as secure a method as possible.
+.PP
+The following process types are defined for unconfined_notrans:
+
+.EX
+.B unconfined_notrans_t
+.EE
+.PP
+Note:
+.B semanage permissive -a unconfined_notrans_t
+
+can be used to make the process type unconfined_notrans_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux unconfined_notrans policy is very flexible allowing users to setup their unconfined_notrans processes in as secure a method as possible.
+.PP
+The following file types are defined for unconfined_notrans:
+
+
+.EX
+.PP
+.B unconfined_notrans_exec_t
+.EE
+
+- Set files with the unconfined_notrans_exec_t type, if you want to transition an executable to the unconfined_notrans_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type unconfined_notrans_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), unconfined_notrans(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, unconfined_selinux(8), unconfined_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/unconfined_selinux.8 serefpolicy-3.7.19/man/man8/unconfined_selinux.8
--- nsaserefpolicy/man/man8/unconfined_selinux.8	2013-03-15 11:41:12.228153510 +0100
+++ serefpolicy-3.7.19/man/man8/unconfined_selinux.8	2013-03-15 11:40:07.042152022 +0100
@@ -1,65 +1,165 @@
 .TH  "unconfined_selinux"  "8"  "unconfined" "mgrepl@redhat.com" "unconfined SELinux Policy documentation"
 .SH "NAME"
-unconfined_r \- \fBUnconfiend user role\fP - Security Enhanced Linux Policy 
+unconfined_r \- \fBUnconfiend user role\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
-SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+SELinux supports Roles Based Access Control (RBAC), some Linux roles are login roles, while other roles need to be transition into.
 
-Note: The examples in the man page will user the staff_u user.
+.I Note:
+Examples in this man page will use the
+.B staff_u
+SELinux user.
 
-Non login roles are usually used for administrative tasks.
-
-Roles usually have default types assigned to them. 
+Non login roles are usually used for administrative tasks. For example, tasks that require root privileges.  Roles control which types a user can run processes with. Roles often have default types assigned to them.
 
 The default type for the unconfined_r role is unconfined_t.
 
-You can use the 
-.B newrole 
+The
+.B newrole
 program to transition directly to this role.
 
 .B newrole -r unconfined_r -t unconfined_t
 
-.B sudo 
-can also be setup to transition to this role using the visudo command.
+.B sudo
+is the preferred method to do transition from one role to another.  You setup sudo to transition to unconfined_r by adding a similar line to the /etc/sudoers file.
 
 USERNAME ALL=(ALL) ROLE=unconfined_r TYPE=unconfined_t COMMAND
+
 .br
 sudo will run COMMAND as staff_u:unconfined_r:unconfined_t:LEVEL
 
-If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+When using a a non login role, you need to setup SELinux so that your SELinux user can reach unconfined_r role.
 
-You can see all of the assigned SELinux roles using the following
+Execute the following to see all of the assigned SELinux roles:
 
 .B semanage user -l
 
-If you wanted to add unconfined_r to the staff_u user, you would execute:
+You need to add unconfined_r to the staff_u user.  You could setup the staff_u user to be able to use the unconfined_r role with a command like:
 
-.B $ semanage user -m -R 'staff_r unconfined_r' staff_u 
+.B $ semanage user -m -R 'staff_r system_r unconfined_r' staff_u
 
 
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  unconfined policy is extremely flexible and has several booleans that allow you to manipulate the policy and run unconfined with the tightest access possible.
 
-SELinux policy also controls which roles can transition to a different role.  
-You can list these rules using the following command.
 
-.B sesearch --role_allow
+.PP
+If you want to allow a user to login as an unconfined domain, you must turn on the unconfined_login boolean.
 
-SELinux policy allows the staff_r role can transition to the unconfined_r role.
+.EX
+.B setsebool -P unconfined_login 1
+.EE
 
+.PP
+If you want to transition to confined nsplugin domains from unconfined user, you must turn on the allow_unconfined_nsplugin_transition boolean.
 
-.SH "COMMANDS"
+.EX
+.B setsebool -P allow_unconfined_nsplugin_transition 1
+.EE
+
+.PP
+If you want to allow samba to run unconfined scripts, you must turn on the samba_run_unconfined boolean.
+
+.EX
+.B setsebool -P samba_run_unconfined 1
+.EE
+
+.PP
+If you want to allow database admins to execute DML statement, you must turn on the sepgsql_unconfined_dbadm boolean.
+
+.EX
+.B setsebool -P sepgsql_unconfined_dbadm 1
+.EE
+
+.PP
+If you want to ignore unconfined mmap_zero errors, you must turn on the unconfined_mmap_zero_ignore boolean.
+
+.EX
+.B setsebool -P unconfined_mmap_zero_ignore 1
+.EE
+
+.PP
+If you want to allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container, you must turn on the unconfined_mozilla_plugin_transition boolean.
+
+.EX
+.B setsebool -P unconfined_mozilla_plugin_transition 1
+.EE
+
+.PP
+If you want to allow a user to login as an unconfined domain, you must turn on the unconfined_login boolean.
+
+.EX
+.B setsebool -P unconfined_login 1
+.EE
+
+.PP
+If you want to transition to confined nsplugin domains from unconfined user, you must turn on the allow_unconfined_nsplugin_transition boolean.
+
+.EX
+.B setsebool -P allow_unconfined_nsplugin_transition 1
+.EE
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
+.PP
+If you want to allow samba to run unconfined scripts, you must turn on the samba_run_unconfined boolean.
+
+.EX
+.B setsebool -P samba_run_unconfined 1
+.EE
+
+.PP
+If you want to allow database admins to execute DML statement, you must turn on the sepgsql_unconfined_dbadm boolean.
+
+.EX
+.B setsebool -P sepgsql_unconfined_dbadm 1
+.EE
+
+.PP
+If you want to ignore unconfined mmap_zero errors, you must turn on the unconfined_mmap_zero_ignore boolean.
+
+.EX
+.B setsebool -P unconfined_mmap_zero_ignore 1
+.EE
+
+.PP
+If you want to allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container, you must turn on the unconfined_mozilla_plugin_transition boolean.
+
+.EX
+.B setsebool -P unconfined_mozilla_plugin_transition 1
+.EE
+
+.SH "MANAGED FILES"
+
+The SELinux process type unconfined_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
+.B semanage boolean
+can also be used to manipulate the booleans
 
-.B system-config-selinux 
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), unconfined(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), unconfined_notrans_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/update_modules_selinux.8 serefpolicy-3.7.19/man/man8/update_modules_selinux.8
--- nsaserefpolicy/man/man8/update_modules_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/update_modules_selinux.8	2013-03-15 11:39:55.208151752 +0100
@@ -0,0 +1,165 @@
+.TH  "update_modules_selinux"  "8"  "13-01-04" "update_modules" "SELinux Policy documentation for update_modules"
+.SH "NAME"
+update_modules_selinux \- Security Enhanced Linux Policy for the update_modules processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the update_modules processes via flexible mandatory access control.
+
+The update_modules processes execute with the update_modules_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep update_modules_t
+
+
+.SH "ENTRYPOINTS"
+
+The update_modules_t SELinux type can be entered via the "update_modules_exec_t" file type.  The default entrypoint paths for the update_modules_t domain are the following:"
+
+/sbin/modules-update, /sbin/update-modules, /sbin/generate-modprobe\.conf
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux update_modules policy is very flexible allowing users to setup their update_modules processes in as secure a method as possible.
+.PP
+The following process types are defined for update_modules:
+
+.EX
+.B update_modules_t
+.EE
+.PP
+Note:
+.B semanage permissive -a update_modules_t
+
+can be used to make the process type update_modules_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux update_modules policy is very flexible allowing users to setup their update_modules processes in as secure a method as possible.
+.PP
+The following file types are defined for update_modules:
+
+
+.EX
+.PP
+.B update_modules_exec_t
+.EE
+
+- Set files with the update_modules_exec_t type, if you want to transition an executable to the update_modules_t domain.
+
+
+.EX
+.PP
+.B update_modules_tmp_t
+.EE
+
+- Set files with the update_modules_tmp_t type, if you want to store update modules temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type update_modules_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B modules_conf_t
+
+	/etc/modprobe\.d(/.*)?
+.br
+	/etc/modules\.conf.*
+.br
+	/etc/modprobe\.conf.*
+.br
+	/lib/modules/modprobe\.conf
+.br
+	/lib64/modules/modprobe\.conf
+.br
+
+.br
+.B modules_dep_t
+
+	/lib/modules/[^/]+/modules\..+
+.br
+	/lib64/modules/[^/]+/modules\..+
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B update_modules_tmp_t
+
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), update_modules(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/updfstab_selinux.8 serefpolicy-3.7.19/man/man8/updfstab_selinux.8
--- nsaserefpolicy/man/man8/updfstab_selinux.8	2013-03-15 11:41:12.191153509 +0100
+++ serefpolicy-3.7.19/man/man8/updfstab_selinux.8	2013-03-15 11:40:06.200152003 +0100
@@ -1,64 +1,152 @@
-.TH  "updfstab_selinux"  "8"  "updfstab" "dwalsh@redhat.com" "updfstab SELinux Policy documentation"
+.TH  "updfstab_selinux"  "8"  "13-01-04" "updfstab" "SELinux Policy documentation for updfstab"
 .SH "NAME"
 updfstab_selinux \- Security Enhanced Linux Policy for the updfstab processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the updfstab processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B updfstab
-(Red Hat utility to change /etc/fstab)
-processes via flexible mandatory access
-control.  
+The updfstab processes execute with the updfstab_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep updfstab_t
+
+
+.SH "ENTRYPOINTS"
+
+The updfstab_t SELinux type can be entered via the "updfstab_exec_t" file type.  The default entrypoint paths for the updfstab_t domain are the following:"
+
+/usr/sbin/updfstab, /usr/sbin/fstab-sync
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux updfstab policy is very flexible allowing users to setup their updfstab processes in as secure a method as possible.
+.PP
+The following process types are defined for updfstab:
+
+.EX
+.B updfstab_t
+.EE
+.PP
+Note:
+.B semanage permissive -a updfstab_t
+
+can be used to make the process type updfstab_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux updfstab policy is very flexible allowing users to setup their updfstab processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for updfstab:
 
 
 .EX
 .PP
-.B updfstab_exec_t 
+.B updfstab_exec_t
 .EE
 
 - Set files with the updfstab_exec_t type, if you want to transition an executable to the updfstab_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/updfstab, /usr/sbin/fstab-sync
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux updfstab policy is very flexible allowing users to setup their updfstab processes in as secure a method as possible.
-.PP 
-The following process types are defined for updfstab:
+.SH "MANAGED FILES"
 
-.EX
-.B updfstab_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type updfstab_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_t
+
+	/etc/.*
+.br
+	/var/db/.*\.db
+.br
+	/usr/etc(/.*)?
+.br
+	/var/ftp/etc(/.*)?
+.br
+	/usr/local/etc(/.*)?
+.br
+	/var/lib/openshift/.limits.d(/.*)?
+.br
+	/var/lib/openshift/.openshift-proxy.d(/.*)?
+.br
+	/var/lib/openshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/lib/stickshift/.limits.d(/.*)?
+.br
+	/var/lib/stickshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/named/chroot/etc(/.*)?
+.br
+	/etc/ipsec\.d/examples(/.*)?
+.br
+	/var/spool/postfix/etc(/.*)?
+.br
+	/etc
+.br
+	/etc/localtime
+.br
+	/etc/cups/client\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -71,11 +159,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), updfstab(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), updfstab(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/updpwd_selinux.8 serefpolicy-3.7.19/man/man8/updpwd_selinux.8
--- nsaserefpolicy/man/man8/updpwd_selinux.8	2013-03-15 11:41:11.222153487 +0100
+++ serefpolicy-3.7.19/man/man8/updpwd_selinux.8	2013-03-15 11:39:55.406151757 +0100
@@ -1,25 +1,55 @@
-.TH  "updpwd_selinux"  "8"  "updpwd" "dwalsh@redhat.com" "updpwd SELinux Policy documentation"
+.TH  "updpwd_selinux"  "8"  "13-01-04" "updpwd" "SELinux Policy documentation for updpwd"
 .SH "NAME"
 updpwd_selinux \- Security Enhanced Linux Policy for the updpwd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the updpwd processes via flexible mandatory access control.
 
+The updpwd processes execute with the updpwd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep updpwd_t
+
+
+.SH "ENTRYPOINTS"
+
+The updpwd_t SELinux type can be entered via the "updpwd_exec_t" file type.  The default entrypoint paths for the updpwd_t domain are the following:"
+
+/sbin/unix_update
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux updpwd policy is very flexible allowing users to setup their updpwd processes in as secure a method as possible.
+.PP
+The following process types are defined for updpwd:
+
+.EX
+.B updpwd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a updpwd_t
+
+can be used to make the process type updpwd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux updpwd policy is very flexible allowing users to setup their updpwd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for updpwd:
 
 
 .EX
 .PP
-.B updpwd_exec_t 
+.B updpwd_exec_t
 .EE
 
 - Set files with the updpwd_exec_t type, if you want to transition an executable to the updpwd_t domain.
@@ -27,28 +57,110 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux updpwd policy is very flexible allowing users to setup their updpwd processes in as secure a method as possible.
-.PP 
-The following process types are defined for updpwd:
+.SH "MANAGED FILES"
 
-.EX
-.B updpwd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type updpwd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B etc_t
+
+	/etc/.*
+.br
+	/var/db/.*\.db
+.br
+	/usr/etc(/.*)?
+.br
+	/var/ftp/etc(/.*)?
+.br
+	/usr/local/etc(/.*)?
+.br
+	/var/lib/openshift/.limits.d(/.*)?
+.br
+	/var/lib/openshift/.openshift-proxy.d(/.*)?
+.br
+	/var/lib/openshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/lib/stickshift/.limits.d(/.*)?
+.br
+	/var/lib/stickshift/.stickshift-proxy.d(/.*)?
+.br
+	/var/named/chroot/etc(/.*)?
+.br
+	/etc/ipsec\.d/examples(/.*)?
+.br
+	/var/spool/postfix/etc(/.*)?
+.br
+	/etc
+.br
+	/etc/localtime
+.br
+	/etc/cups/client\.conf
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B shadow_t
+
+	/etc/shadow.*
+.br
+	/etc/gshadow.*
+.br
+	/var/db/shadow.*
+.br
+	/etc/passwd\.adjunct.*
+.br
+	/etc/\.pwd\.lock
+.br
+	/etc/group\.lock
+.br
+	/etc/passwd\.lock
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +173,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), updpwd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), updpwd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/usbmodules_selinux.8 serefpolicy-3.7.19/man/man8/usbmodules_selinux.8
--- nsaserefpolicy/man/man8/usbmodules_selinux.8	2013-03-15 11:41:12.218153509 +0100
+++ serefpolicy-3.7.19/man/man8/usbmodules_selinux.8	2013-03-15 11:40:06.594152012 +0100
@@ -1,64 +1,116 @@
-.TH  "usbmodules_selinux"  "8"  "usbmodules" "dwalsh@redhat.com" "usbmodules SELinux Policy documentation"
+.TH  "usbmodules_selinux"  "8"  "13-01-04" "usbmodules" "SELinux Policy documentation for usbmodules"
 .SH "NAME"
 usbmodules_selinux \- Security Enhanced Linux Policy for the usbmodules processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the usbmodules processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B usbmodules
-(List kernel modules of USB devices)
-processes via flexible mandatory access
-control.  
+The usbmodules processes execute with the usbmodules_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep usbmodules_t
+
+
+.SH "ENTRYPOINTS"
+
+The usbmodules_t SELinux type can be entered via the "usbmodules_exec_t" file type.  The default entrypoint paths for the usbmodules_t domain are the following:"
+
+/sbin/usbmodules, /usr/sbin/usbmodules
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux usbmodules policy is very flexible allowing users to setup their usbmodules processes in as secure a method as possible.
+.PP
+The following process types are defined for usbmodules:
+
+.EX
+.B usbmodules_t
+.EE
+.PP
+Note:
+.B semanage permissive -a usbmodules_t
+
+can be used to make the process type usbmodules_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux usbmodules policy is very flexible allowing users to setup their usbmodules processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for usbmodules:
 
 
 .EX
 .PP
-.B usbmodules_exec_t 
+.B usbmodules_exec_t
 .EE
 
 - Set files with the usbmodules_exec_t type, if you want to transition an executable to the usbmodules_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/usbmodules, /sbin/usbmodules
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux usbmodules policy is very flexible allowing users to setup their usbmodules processes in as secure a method as possible.
-.PP 
-The following process types are defined for usbmodules:
+.SH "MANAGED FILES"
+
+The SELinux process type usbmodules_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
 
-.EX
-.B usbmodules_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -71,11 +123,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), usbmodules(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), usbmodules(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/usbmuxd_selinux.8 serefpolicy-3.7.19/man/man8/usbmuxd_selinux.8
--- nsaserefpolicy/man/man8/usbmuxd_selinux.8	2013-03-15 11:41:12.179153508 +0100
+++ serefpolicy-3.7.19/man/man8/usbmuxd_selinux.8	2013-03-15 11:40:05.854151995 +0100
@@ -1,31 +1,55 @@
-.TH  "usbmuxd_selinux"  "8"  "usbmuxd" "dwalsh@redhat.com" "usbmuxd SELinux Policy documentation"
+.TH  "usbmuxd_selinux"  "8"  "13-01-04" "usbmuxd" "SELinux Policy documentation for usbmuxd"
 .SH "NAME"
 usbmuxd_selinux \- Security Enhanced Linux Policy for the usbmuxd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the usbmuxd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B usbmuxd
-(USB multiplexing daemon for communicating with Apple iPod Touch and iPhone)
-processes via flexible mandatory access
-control.  
+The usbmuxd processes execute with the usbmuxd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep usbmuxd_t
+
+
+.SH "ENTRYPOINTS"
+
+The usbmuxd_t SELinux type can be entered via the "usbmuxd_exec_t" file type.  The default entrypoint paths for the usbmuxd_t domain are the following:"
+
+/usr/sbin/usbmuxd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux usbmuxd policy is very flexible allowing users to setup their usbmuxd processes in as secure a method as possible.
+.PP
+The following process types are defined for usbmuxd:
+
+.EX
+.B usbmuxd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a usbmuxd_t
+
+can be used to make the process type usbmuxd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux usbmuxd policy is very flexible allowing users to setup their usbmuxd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for usbmuxd:
 
 
 .EX
 .PP
-.B usbmuxd_exec_t 
+.B usbmuxd_exec_t
 .EE
 
 - Set files with the usbmuxd_exec_t type, if you want to transition an executable to the usbmuxd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B usbmuxd_var_run_t 
+.B usbmuxd_var_run_t
 .EE
 
 - Set files with the usbmuxd_var_run_t type, if you want to store the usbmuxd files under the /run directory.
@@ -41,28 +65,62 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux usbmuxd policy is very flexible allowing users to setup their usbmuxd processes in as secure a method as possible.
-.PP 
-The following process types are defined for usbmuxd:
+.SH "MANAGED FILES"
 
-.EX
-.B usbmuxd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type usbmuxd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbmuxd_var_run_t
+
+	/var/run/usbmuxd.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -75,11 +133,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), usbmuxd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), usbmuxd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/useradd_selinux.8 serefpolicy-3.7.19/man/man8/useradd_selinux.8
--- nsaserefpolicy/man/man8/useradd_selinux.8	2013-03-15 11:41:11.785153499 +0100
+++ serefpolicy-3.7.19/man/man8/useradd_selinux.8	2013-03-15 11:39:56.996151793 +0100
@@ -1,58 +1,76 @@
-.TH  "useradd_selinux"  "8"  "useradd" "dwalsh@redhat.com" "useradd SELinux Policy documentation"
+.TH  "useradd_selinux"  "8"  "13-01-04" "useradd" "SELinux Policy documentation for useradd"
 .SH "NAME"
 useradd_selinux \- Security Enhanced Linux Policy for the useradd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the useradd processes via flexible mandatory access control.
 
+The useradd processes execute with the useradd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep useradd_t
+
+
+.SH "ENTRYPOINTS"
+
+The useradd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,user_home_t,useradd_exec_t" file types.  The default entrypoint paths for the useradd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /home/[^/]*/.+, /usr/sbin/useradd, /usr/sbin/userdel, /usr/sbin/usermod
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux useradd policy is very flexible allowing users to setup their useradd processes in as secure a method as possible.
+.PP
+The following process types are defined for useradd:
+
+.EX
+.B useradd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a useradd_t
+
+can be used to make the process type useradd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux useradd policy is very flexible allowing users to setup their useradd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for useradd:
 
 
 .EX
 .PP
-.B useradd_exec_t 
+.B useradd_exec_t
 .EE
 
 - Set files with the useradd_exec_t type, if you want to transition an executable to the useradd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/useradd, /usr/sbin/usermod, /usr/sbin/userdel
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux useradd policy is very flexible allowing users to setup their useradd processes in as secure a method as possible.
-.PP 
-The following process types are defined for useradd:
+.SH "MANAGED FILES"
 
-.EX
-.B useradd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type useradd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +83,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), useradd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), useradd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, user_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/usernetctl_selinux.8 serefpolicy-3.7.19/man/man8/usernetctl_selinux.8
--- nsaserefpolicy/man/man8/usernetctl_selinux.8	2013-03-15 11:41:11.847153501 +0100
+++ serefpolicy-3.7.19/man/man8/usernetctl_selinux.8	2013-03-15 11:39:58.159151819 +0100
@@ -1,31 +1,55 @@
-.TH  "usernetctl_selinux"  "8"  "usernetctl" "dwalsh@redhat.com" "usernetctl SELinux Policy documentation"
+.TH  "usernetctl_selinux"  "8"  "13-01-04" "usernetctl" "SELinux Policy documentation for usernetctl"
 .SH "NAME"
 usernetctl_selinux \- Security Enhanced Linux Policy for the usernetctl processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the usernetctl processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B usernetctl
-(User network interface configuration helper)
-processes via flexible mandatory access
-control.  
+The usernetctl processes execute with the usernetctl_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep usernetctl_t
+
+
+.SH "ENTRYPOINTS"
+
+The usernetctl_t SELinux type can be entered via the "usernetctl_exec_t" file type.  The default entrypoint paths for the usernetctl_t domain are the following:"
+
+/usr/sbin/usernetctl
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux usernetctl policy is very flexible allowing users to setup their usernetctl processes in as secure a method as possible.
+.PP
+The following process types are defined for usernetctl:
+
+.EX
+.B usernetctl_t
+.EE
+.PP
+Note:
+.B semanage permissive -a usernetctl_t
+
+can be used to make the process type usernetctl_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux usernetctl policy is very flexible allowing users to setup their usernetctl processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for usernetctl:
 
 
 .EX
 .PP
-.B usernetctl_exec_t 
+.B usernetctl_exec_t
 .EE
 
 - Set files with the usernetctl_exec_t type, if you want to transition an executable to the usernetctl_t domain.
@@ -33,28 +57,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux usernetctl policy is very flexible allowing users to setup their usernetctl processes in as secure a method as possible.
-.PP 
-The following process types are defined for usernetctl:
+.SH "MANAGED FILES"
 
-.EX
-.B usernetctl_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type usernetctl_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -67,11 +119,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), usernetctl(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), usernetctl(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, user_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/user_selinux.8 serefpolicy-3.7.19/man/man8/user_selinux.8
--- nsaserefpolicy/man/man8/user_selinux.8	2013-03-15 11:41:12.193153509 +0100
+++ serefpolicy-3.7.19/man/man8/user_selinux.8	2013-03-15 11:40:06.276152005 +0100
@@ -1,6 +1,6 @@
 .TH  "user_selinux"  "8"  "user" "mgrepl@redhat.com" "user SELinux Policy documentation"
 .SH "NAME"
-user_u \- \fBGeneric unprivileged user\fP - Security Enhanced Linux Policy 
+user_u \- \fBGeneric unprivileged user\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
@@ -10,9 +10,9 @@
 
 The SELinux user will usually login to a system with a context that looks like:
 
-.B user_u:user_r:user_u:s0-s0:c0.c1023
+.B user_u:user_r:user_t:s0-s0:c0.c1023
 
-Linux users are automatically assigned an SELinux users at login.  
+Linux users are automatically assigned an SELinux users at login.
 Login programs use the SELinux User to assign initial context to the user's shell.
 
 SELinux policy uses the context to control the user's access.
@@ -36,8 +36,6 @@
 
 .SH SUDO
 
-The SELinux type user_t is not allowed to execute sudo. 
-
 .SH X WINDOWS LOGIN
 
 The SELinux user user_u is able to X Windows login.
@@ -50,6 +48,11 @@
 .B xserver_port_t: 6000-6150
 
 .TP
+The SELinux user user_u is able to connect to the following tcp ports.
+
+.B all ports
+
+.TP
 The SELinux user user_u is able to listen on the following udp ports.
 
 .B all ports with out defined types
@@ -60,14 +63,14 @@
 .B all ports
 
 .SH BOOLEANS
-SELinux policy is customizable based on least access required.  user_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run user_t with the tightest access possible.
+SELinux policy is customizable based on least access required.  user policy is extremely flexible and has several booleans that allow you to manipulate the policy and run user with the tightest access possible.
 
 
 .PP
-If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+If you want to allow unprivileged users to execute DDL statement, you must turn on the sepgsql_enable_users_ddl boolean.
 
 .EX
-.B setsebool -P allow_user_mysql_connect 1
+.B setsebool -P sepgsql_enable_users_ddl 1
 .EE
 
 .PP
@@ -78,6 +81,13 @@
 .EE
 
 .PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
 If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
 
 .EX
@@ -85,6 +95,13 @@
 .EE
 
 .PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
 If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
 
 .EX
@@ -92,6 +109,20 @@
 .EE
 
 .PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow httpd to read user content, you must turn on the httpd_read_user_content boolean.
+
+.EX
+.B setsebool -P httpd_read_user_content 1
+.EE
+
+.PP
 If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
 
 .EX
@@ -99,6 +130,20 @@
 .EE
 
 .PP
+If you want to allow webadm to manage files in users home directories, you must turn on the webadm_manage_user_files boolean.
+
+.EX
+.B setsebool -P webadm_manage_user_files 1
+.EE
+
+.PP
+If you want to allow pppd to be run for a regular user, you must turn on the pppd_for_user boolean.
+
+.EX
+.B setsebool -P pppd_for_user 1
+.EE
+
+.PP
 If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
 
 .EX
@@ -106,10 +151,52 @@
 .EE
 
 .PP
-If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+If you want to allow exim to create, read, write, and delete unprivileged user files, you must turn on the exim_manage_user_files boolean.
 
 .EX
-.B setsebool -P user_tcp_server 1
+.B setsebool -P exim_manage_user_files 1
+.EE
+
+.PP
+If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to allow exim to read unprivileged user files, you must turn on the exim_read_user_files boolean.
+
+.EX
+.B setsebool -P exim_read_user_files 1
+.EE
+
+.PP
+If you want to allow webadm to read files in users home directories, you must turn on the webadm_read_user_files boolean.
+
+.EX
+.B setsebool -P webadm_read_user_files 1
+.EE
+
+.PP
+If you want to allow ncftool to read user content, you must turn on the ncftool_read_user_content boolean.
+
+.EX
+.B setsebool -P ncftool_read_user_content 1
+.EE
+
+.PP
+If you want to allow unprivileged users to execute DDL statement, you must turn on the sepgsql_enable_users_ddl boolean.
+
+.EX
+.B setsebool -P sepgsql_enable_users_ddl 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
 .EE
 
 .PP
@@ -120,12 +207,103 @@
 .EE
 
 .PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
 If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
 
 .EX
 .B setsebool -P allow_user_postgresql_connect 1
 .EE
 
+.PP
+If you want to allow httpd to read user content, you must turn on the httpd_read_user_content boolean.
+
+.EX
+.B setsebool -P httpd_read_user_content 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow webadm to manage files in users home directories, you must turn on the webadm_manage_user_files boolean.
+
+.EX
+.B setsebool -P webadm_manage_user_files 1
+.EE
+
+.PP
+If you want to allow pppd to be run for a regular user, you must turn on the pppd_for_user boolean.
+
+.EX
+.B setsebool -P pppd_for_user 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow exim to create, read, write, and delete unprivileged user files, you must turn on the exim_manage_user_files boolean.
+
+.EX
+.B setsebool -P exim_manage_user_files 1
+.EE
+
+.PP
+If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to allow exim to read unprivileged user files, you must turn on the exim_read_user_files boolean.
+
+.EX
+.B setsebool -P exim_read_user_files 1
+.EE
+
+.PP
+If you want to allow webadm to read files in users home directories, you must turn on the webadm_read_user_files boolean.
+
+.EX
+.B setsebool -P webadm_read_user_files 1
+.EE
+
+.PP
+If you want to allow ncftool to read user content, you must turn on the ncftool_read_user_content boolean.
+
+.EX
+.B setsebool -P ncftool_read_user_content 1
+.EE
+
 .SH HOME_EXEC
 
 The SELinux user user_u is able execute home content files.
@@ -142,7 +320,7 @@
 
 Execute the following to see the types that the SELinux user user_t can execute without transitioning:
 
-.B sesearch -A -s user_t -c file -p execute_no_trans
+.B search -A -s user_t -c file -p execute_no_trans
 
 .TP
 
@@ -150,22 +328,275 @@
 
 Execute the following to see the types that the SELinux user user_t can execute and transition:
 
-.B $ sesearch -A -s user_t -c process -p transition
+.B $ search -A -s user_t -c process -p transition
 
 
-.SH "COMMANDS"
+.SH "MANAGED FILES"
+
+The SELinux process type user_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B cgroup_t
+
+	/cgroup(/.*)?
+.br
+
+.br
+.B chrome_sandbox_tmpfs_t
+
+
+.br
+.B games_data_t
+
+	/var/games(/.*)?
+.br
+	/var/lib/games(/.*)?
+.br
+
+.br
+.B gpg_agent_tmp_t
+
+
+.br
+.B httpd_user_content_t
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
+	/home/[^/]*/((www)|(web)|(public_html))(/.+)?
+.br
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
+.br
+.B httpd_user_htaccess_t
 
-.B system-config-selinux 
+
+.br
+.B httpd_user_ra_content_t
+
+
+.br
+.B httpd_user_rw_content_t
+
+
+.br
+.B httpd_user_script_exec_t
+
+
+.br
+.B iceauth_home_t
+
+	/home/[^/]*/\.DCOP.*
+.br
+	/home/[^/]*/\.ICEauthority.*
+.br
+	/home/[^/]*/\.ICEauthority.*
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mail_spool_t
+
+	/var/mail(/.*)?
+.br
+	/var/spool/imap(/.*)?
+.br
+	/var/spool/mail(/.*)?
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mqueue_spool_t
+
+	/var/spool/(client)?mqueue(/.*)?
+.br
+
+.br
+.B nfsd_rw_t
+
+
+.br
+.B noxattrfs
+
+	all files on file systems which do not support extended attributes
+.br
+
+.br
+.B sandbox_file_t
+
+
+.br
+.B sandbox_tmpfs_type
+
+	all sandbox content in tmpfs file systems
+.br
+
+.br
+.B screen_home_t
+
+	/root/\.screen(/.*)?
+.br
+	/home/[^/]*/\.screen(/.*)?
+.br
+	/home/[^/]*/\.screenrc
+.br
+
+.br
+.B screen_var_run_t
+
+	/var/run/screen(/.*)?
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
+
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_fonts_t
+
+	/home/[^/]*/\.fonts(/.*)?
+.br
+
+.br
+.B user_home_type
+
+	all user home files
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.br
+.B xauth_home_t
+
+	/root/\.Xauth.*
+.br
+	/root/\.xauth.*
+.br
+	/root/\.serverauth.*
+.br
+	/var/lib/pqsql/\.xauth.*
+.br
+	/var/lib/pqsql/\.Xauthority.*
+.br
+	/var/lib/nxserver/home/\.xauth.*
+.br
+	/var/lib/nxserver/home/\.Xauthority.*
+.br
+	/home/[^/]*/\.xauth.*
+.br
+	/home/[^/]*/\.Xauthority.*
+.br
+	/home/[^/]*/\.serverauth.*
+.br
+
+.br
+.B xdm_tmp_t
+
+	/tmp/\.X11-unix(/.*)?
+.br
+	/tmp/\.ICE-unix(/.*)?
+.br
+	/tmp/\.X0-lock
+.br
+
+.br
+.B xserver_tmpfs_t
+
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), user(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), useradd_selinux(8), usernetctl_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/utempter_selinux.8 serefpolicy-3.7.19/man/man8/utempter_selinux.8
--- nsaserefpolicy/man/man8/utempter_selinux.8	2013-03-15 11:41:12.175153508 +0100
+++ serefpolicy-3.7.19/man/man8/utempter_selinux.8	2013-03-15 11:40:05.310151983 +0100
@@ -1,25 +1,55 @@
-.TH  "utempter_selinux"  "8"  "utempter" "dwalsh@redhat.com" "utempter SELinux Policy documentation"
+.TH  "utempter_selinux"  "8"  "13-01-04" "utempter" "SELinux Policy documentation for utempter"
 .SH "NAME"
 utempter_selinux \- Security Enhanced Linux Policy for the utempter processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the utempter processes via flexible mandatory access control.
 
+The utempter processes execute with the utempter_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep utempter_t
+
+
+.SH "ENTRYPOINTS"
+
+The utempter_t SELinux type can be entered via the "utempter_exec_t" file type.  The default entrypoint paths for the utempter_t domain are the following:"
+
+/usr/sbin/utempter
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux utempter policy is very flexible allowing users to setup their utempter processes in as secure a method as possible.
+.PP
+The following process types are defined for utempter:
+
+.EX
+.B utempter_t
+.EE
+.PP
+Note:
+.B semanage permissive -a utempter_t
+
+can be used to make the process type utempter_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux utempter policy is very flexible allowing users to setup their utempter processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for utempter:
 
 
 .EX
 .PP
-.B utempter_exec_t 
+.B utempter_exec_t
 .EE
 
 - Set files with the utempter_exec_t type, if you want to transition an executable to the utempter_t domain.
@@ -27,28 +57,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux utempter policy is very flexible allowing users to setup their utempter processes in as secure a method as possible.
-.PP 
-The following process types are defined for utempter:
+.SH "MANAGED FILES"
 
-.EX
-.B utempter_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type utempter_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +143,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), utempter(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), utempter(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/uucpd_selinux.8 serefpolicy-3.7.19/man/man8/uucpd_selinux.8
--- nsaserefpolicy/man/man8/uucpd_selinux.8	2013-03-15 11:41:12.063153506 +0100
+++ serefpolicy-3.7.19/man/man8/uucpd_selinux.8	2013-03-15 11:40:02.179151911 +0100
@@ -1,25 +1,55 @@
-.TH  "uucpd_selinux"  "8"  "uucpd" "dwalsh@redhat.com" "uucpd SELinux Policy documentation"
+.TH  "uucpd_selinux"  "8"  "13-01-04" "uucpd" "SELinux Policy documentation for uucpd"
 .SH "NAME"
 uucpd_selinux \- Security Enhanced Linux Policy for the uucpd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the uucpd processes via flexible mandatory access control.
 
+The uucpd processes execute with the uucpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep uucpd_t
+
+
+.SH "ENTRYPOINTS"
+
+The uucpd_t SELinux type can be entered via the "uucpd_exec_t" file type.  The default entrypoint paths for the uucpd_t domain are the following:"
+
+/usr/sbin/uucico
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
+.PP
+The following process types are defined for uucpd:
+
+.EX
+.B uucpd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a uucpd_t
+
+can be used to make the process type uucpd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for uucpd:
 
 
 .EX
 .PP
-.B uucpd_exec_t 
+.B uucpd_exec_t
 .EE
 
 - Set files with the uucpd_exec_t type, if you want to transition an executable to the uucpd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B uucpd_lock_t 
+.B uucpd_lock_t
 .EE
 
 - Set files with the uucpd_lock_t type, if you want to treat the files as uucpd lock data, stored under the /var/lock directory
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B uucpd_log_t 
+.B uucpd_log_t
 .EE
 
 - Set files with the uucpd_log_t type, if you want to treat the data as uucpd log data, usually stored under the /var/log directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B uucpd_ro_t 
+.B uucpd_ro_t
 .EE
 
 - Set files with the uucpd_ro_t type, if you want to treat the files as uucpd read/only content.
@@ -51,7 +81,7 @@
 
 .EX
 .PP
-.B uucpd_rw_t 
+.B uucpd_rw_t
 .EE
 
 - Set files with the uucpd_rw_t type, if you want to treat the files as uucpd read/write content.
@@ -59,19 +89,15 @@
 
 .EX
 .PP
-.B uucpd_spool_t 
+.B uucpd_spool_t
 .EE
 
 - Set files with the uucpd_spool_t type, if you want to store the uucpd files under the /var/spool directory.
 
-.br
-.TP 5
-Paths: 
-/var/spool/uucppublic(/.*)?, /var/spool/uucp(/.*)?
 
 .EX
 .PP
-.B uucpd_tmp_t 
+.B uucpd_tmp_t
 .EE
 
 - Set files with the uucpd_tmp_t type, if you want to store uucpd temporary files in the /tmp directories.
@@ -79,7 +105,7 @@
 
 .EX
 .PP
-.B uucpd_var_run_t 
+.B uucpd_var_run_t
 .EE
 
 - Set files with the uucpd_var_run_t type, if you want to store the uucpd files under the /run directory.
@@ -87,51 +113,111 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for uucpd:
 
 .EX
 .TP 5
-.B uucpd_port_t 
+.B uucpd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 540
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
-.PP 
-The following process types are defined for uucpd:
+.SH "MANAGED FILES"
+
+The SELinux process type uucpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B uucpd_lock_t
+
+	/var/lock/uucp(/.*)?
+.br
+
+.br
+.B uucpd_log_t
+
+	/var/log/uucp(/.*)?
+.br
+
+.br
+.B uucpd_rw_t
+
+
+.br
+.B uucpd_spool_t
+
+	/var/spool/uucp(/.*)?
+.br
+	/var/spool/uucppublic(/.*)?
+.br
+
+.br
+.B uucpd_tmp_t
+
+
+.br
+.B uucpd_var_run_t
 
-.EX
-.B uucpd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -147,11 +233,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), uucpd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), uucpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/uuidd_selinux.8 serefpolicy-3.7.19/man/man8/uuidd_selinux.8
--- nsaserefpolicy/man/man8/uuidd_selinux.8	2013-03-15 11:41:11.937153503 +0100
+++ serefpolicy-3.7.19/man/man8/uuidd_selinux.8	2013-03-15 11:40:00.354151870 +0100
@@ -1,31 +1,55 @@
-.TH  "uuidd_selinux"  "8"  "uuidd" "dwalsh@redhat.com" "uuidd SELinux Policy documentation"
+.TH  "uuidd_selinux"  "8"  "13-01-04" "uuidd" "SELinux Policy documentation for uuidd"
 .SH "NAME"
 uuidd_selinux \- Security Enhanced Linux Policy for the uuidd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the uuidd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B uuidd
-(policy for uuidd)
-processes via flexible mandatory access
-control.  
+The uuidd processes execute with the uuidd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep uuidd_t
+
+
+.SH "ENTRYPOINTS"
+
+The uuidd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,uuidd_exec_t" file types.  The default entrypoint paths for the uuidd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/uuidd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux uuidd policy is very flexible allowing users to setup their uuidd processes in as secure a method as possible.
+.PP
+The following process types are defined for uuidd:
+
+.EX
+.B uuidd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a uuidd_t
+
+can be used to make the process type uuidd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux uuidd policy is very flexible allowing users to setup their uuidd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for uuidd:
 
 
 .EX
 .PP
-.B uuidd_exec_t 
+.B uuidd_exec_t
 .EE
 
 - Set files with the uuidd_exec_t type, if you want to transition an executable to the uuidd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B uuidd_initrc_exec_t 
+.B uuidd_initrc_exec_t
 .EE
 
 - Set files with the uuidd_initrc_exec_t type, if you want to transition an executable to the uuidd_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B uuidd_var_lib_t 
+.B uuidd_var_lib_t
 .EE
 
 - Set files with the uuidd_var_lib_t type, if you want to store the uuidd files under the /var/lib directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B uuidd_var_run_t 
+.B uuidd_var_run_t
 .EE
 
 - Set files with the uuidd_var_run_t type, if you want to store the uuidd files under the /run directory.
@@ -57,28 +81,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux uuidd policy is very flexible allowing users to setup their uuidd processes in as secure a method as possible.
-.PP 
-The following process types are defined for uuidd:
+.SH "MANAGED FILES"
 
-.EX
-.B uuidd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type uuidd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +107,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), uuidd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), uuidd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/uux_selinux.8 serefpolicy-3.7.19/man/man8/uux_selinux.8
--- nsaserefpolicy/man/man8/uux_selinux.8	2013-03-15 11:41:12.006153504 +0100
+++ serefpolicy-3.7.19/man/man8/uux_selinux.8	2013-03-15 11:40:00.988151884 +0100
@@ -1,25 +1,55 @@
-.TH  "uux_selinux"  "8"  "uux" "dwalsh@redhat.com" "uux SELinux Policy documentation"
+.TH  "uux_selinux"  "8"  "13-01-04" "uux" "SELinux Policy documentation for uux"
 .SH "NAME"
 uux_selinux \- Security Enhanced Linux Policy for the uux processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the uux processes via flexible mandatory access control.
 
+The uux processes execute with the uux_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep uux_t
+
+
+.SH "ENTRYPOINTS"
+
+The uux_t SELinux type can be entered via the "uux_exec_t" file type.  The default entrypoint paths for the uux_t domain are the following:"
+
+/usr/bin/uux
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux uux policy is very flexible allowing users to setup their uux processes in as secure a method as possible.
+.PP
+The following process types are defined for uux:
+
+.EX
+.B uux_t
+.EE
+.PP
+Note:
+.B semanage permissive -a uux_t
+
+can be used to make the process type uux_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux uux policy is very flexible allowing users to setup their uux processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for uux:
 
 
 .EX
 .PP
-.B uux_exec_t 
+.B uux_exec_t
 .EE
 
 - Set files with the uux_exec_t type, if you want to transition an executable to the uux_t domain.
@@ -27,28 +57,68 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux uux policy is very flexible allowing users to setup their uux processes in as secure a method as possible.
-.PP 
-The following process types are defined for uux:
+.SH "MANAGED FILES"
 
-.EX
-.B uux_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type uux_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B uucpd_spool_t
+
+	/var/spool/uucp(/.*)?
+.br
+	/var/spool/uucppublic(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -61,11 +131,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), uux(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), uux(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/varnishd_selinux.8 serefpolicy-3.7.19/man/man8/varnishd_selinux.8
--- nsaserefpolicy/man/man8/varnishd_selinux.8	2013-03-15 11:41:12.088153506 +0100
+++ serefpolicy-3.7.19/man/man8/varnishd_selinux.8	2013-03-15 11:40:02.659151922 +0100
@@ -1,16 +1,40 @@
-.TH  "varnishd_selinux"  "8"  "varnishd" "dwalsh@redhat.com" "varnishd SELinux Policy documentation"
+.TH  "varnishd_selinux"  "8"  "13-01-04" "varnishd" "SELinux Policy documentation for varnishd"
 .SH "NAME"
 varnishd_selinux \- Security Enhanced Linux Policy for the varnishd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the varnishd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B varnishd
-(Varnishd http accelerator daemon)
-processes via flexible mandatory access
-control.  
+The varnishd processes execute with the varnishd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep varnishd_t
+
+
+.SH "ENTRYPOINTS"
+
+The varnishd_t SELinux type can be entered via the "varnishd_exec_t" file type.  The default entrypoint paths for the varnishd_t domain are the following:"
+
+/usr/sbin/varnishd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
+.PP
+The following process types are defined for varnishd:
+
+.EX
+.B varnishd_t, varnishlog_t
+.EE
+.PP
+Note:
+.B semanage permissive -a varnishd_t
+
+can be used to make the process type varnishd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  varnishd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run varnishd with the tightest access possible.
@@ -23,20 +47,27 @@
 .B setsebool -P varnishd_connect_any 1
 .EE
 
+.PP
+If you want to allow varnishd to connect to all ports, not just HTTP, you must turn on the varnishd_connect_any boolean.
+
+.EX
+.B setsebool -P varnishd_connect_any 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for varnishd:
 
 
 .EX
 .PP
-.B varnishd_etc_t 
+.B varnishd_etc_t
 .EE
 
 - Set files with the varnishd_etc_t type, if you want to store varnishd files in the /etc directories.
@@ -44,7 +75,7 @@
 
 .EX
 .PP
-.B varnishd_exec_t 
+.B varnishd_exec_t
 .EE
 
 - Set files with the varnishd_exec_t type, if you want to transition an executable to the varnishd_t domain.
@@ -52,7 +83,7 @@
 
 .EX
 .PP
-.B varnishd_initrc_exec_t 
+.B varnishd_initrc_exec_t
 .EE
 
 - Set files with the varnishd_initrc_exec_t type, if you want to transition an executable to the varnishd_initrc_t domain.
@@ -60,7 +91,7 @@
 
 .EX
 .PP
-.B varnishd_tmp_t 
+.B varnishd_tmp_t
 .EE
 
 - Set files with the varnishd_tmp_t type, if you want to store varnishd temporary files in the /tmp directories.
@@ -68,7 +99,7 @@
 
 .EX
 .PP
-.B varnishd_var_lib_t 
+.B varnishd_var_lib_t
 .EE
 
 - Set files with the varnishd_var_lib_t type, if you want to store the varnishd files under the /var/lib directory.
@@ -76,7 +107,7 @@
 
 .EX
 .PP
-.B varnishd_var_run_t 
+.B varnishd_var_run_t
 .EE
 
 - Set files with the varnishd_var_run_t type, if you want to store the varnishd files under the /run directory.
@@ -84,51 +115,103 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for varnishd:
 
 .EX
 .TP 5
-.B varnishd_port_t 
+.B varnishd_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 6081,6082
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
-.PP 
-The following process types are defined for varnishd:
+.SH "MANAGED FILES"
 
-.EX
-.B varnishd_t, varnishlog_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type varnishd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B varnishd_tmp_t
+
+
+.br
+.B varnishd_var_lib_t
+
+	/var/lib/varnish(/.*)?
+.br
+
+.br
+.B varnishd_var_run_t
+
+	/var/run/varnish\.pid
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -147,12 +230,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), varnishd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), varnishd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), varnishlog_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/varnishlog_selinux.8 serefpolicy-3.7.19/man/man8/varnishlog_selinux.8
--- nsaserefpolicy/man/man8/varnishlog_selinux.8	2013-03-15 11:41:12.072153506 +0100
+++ serefpolicy-3.7.19/man/man8/varnishlog_selinux.8	2013-03-15 11:40:02.359151915 +0100
@@ -1,49 +1,71 @@
-.TH  "varnishlog_selinux"  "8"  "varnishlog" "dwalsh@redhat.com" "varnishlog SELinux Policy documentation"
+.TH  "varnishlog_selinux"  "8"  "13-01-04" "varnishlog" "SELinux Policy documentation for varnishlog"
 .SH "NAME"
 varnishlog_selinux \- Security Enhanced Linux Policy for the varnishlog processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the varnishlog processes via flexible mandatory access control.
 
+The varnishlog processes execute with the varnishlog_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep varnishlog_t
+
+
+.SH "ENTRYPOINTS"
+
+The varnishlog_t SELinux type can be entered via the "varnishlog_exec_t" file type.  The default entrypoint paths for the varnishlog_t domain are the following:"
+
+/usr/bin/varnishlog, /usr/bin/varnisncsa
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux varnishlog policy is very flexible allowing users to setup their varnishlog processes in as secure a method as possible.
+.PP
+The following process types are defined for varnishlog:
+
+.EX
+.B varnishlog_t
+.EE
+.PP
+Note:
+.B semanage permissive -a varnishlog_t
+
+can be used to make the process type varnishlog_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux varnishlog policy is very flexible allowing users to setup their varnishlog processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for varnishlog:
 
 
 .EX
 .PP
-.B varnishlog_exec_t 
+.B varnishlog_exec_t
 .EE
 
 - Set files with the varnishlog_exec_t type, if you want to transition an executable to the varnishlog_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/varnisncsa, /usr/bin/varnishlog
 
 .EX
 .PP
-.B varnishlog_initrc_exec_t 
+.B varnishlog_initrc_exec_t
 .EE
 
 - Set files with the varnishlog_initrc_exec_t type, if you want to transition an executable to the varnishlog_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/varnishncsa, /etc/rc\.d/init\.d/varnishlog
 
 .EX
 .PP
-.B varnishlog_log_t 
+.B varnishlog_log_t
 .EE
 
 - Set files with the varnishlog_log_t type, if you want to treat the data as varnishlog log data, usually stored under the /var/log directory.
@@ -51,40 +73,86 @@
 
 .EX
 .PP
-.B varnishlog_var_run_t 
+.B varnishlog_var_run_t
 .EE
 
 - Set files with the varnishlog_var_run_t type, if you want to store the varnishlog files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/varnishncsa\.pid, /var/run/varnishlog\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux varnishlog policy is very flexible allowing users to setup their varnishlog processes in as secure a method as possible.
-.PP 
-The following process types are defined for varnishlog:
+.SH "MANAGED FILES"
 
-.EX
-.B varnishlog_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type varnishlog_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B varnishlog_log_t
+
+	/var/log/varnish(/.*)?
+.br
+
+.br
+.B varnishlog_var_run_t
+
+	/var/run/varnishlog\.pid
+.br
+	/var/run/varnishncsa\.pid
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -97,11 +165,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), varnishlog(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), varnishlog(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/vbetool_selinux.8 serefpolicy-3.7.19/man/man8/vbetool_selinux.8
--- nsaserefpolicy/man/man8/vbetool_selinux.8	2013-03-15 11:41:11.928153503 +0100
+++ serefpolicy-3.7.19/man/man8/vbetool_selinux.8	2013-03-15 11:39:59.900151859 +0100
@@ -1,16 +1,40 @@
-.TH  "vbetool_selinux"  "8"  "vbetool" "dwalsh@redhat.com" "vbetool SELinux Policy documentation"
+.TH  "vbetool_selinux"  "8"  "13-01-04" "vbetool" "SELinux Policy documentation for vbetool"
 .SH "NAME"
 vbetool_selinux \- Security Enhanced Linux Policy for the vbetool processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the vbetool processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B vbetool
-(run real-mode video BIOS code to alter hardware state)
-processes via flexible mandatory access
-control.  
+The vbetool processes execute with the vbetool_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep vbetool_t
+
+
+.SH "ENTRYPOINTS"
+
+The vbetool_t SELinux type can be entered via the "vbetool_exec_t" file type.  The default entrypoint paths for the vbetool_t domain are the following:"
+
+/usr/sbin/vbetool
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux vbetool policy is very flexible allowing users to setup their vbetool processes in as secure a method as possible.
+.PP
+The following process types are defined for vbetool:
+
+.EX
+.B vbetool_t
+.EE
+.PP
+Note:
+.B semanage permissive -a vbetool_t
+
+can be used to make the process type vbetool_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  vbetool policy is extremely flexible and has several booleans that allow you to manipulate the policy and run vbetool with the tightest access possible.
@@ -23,20 +47,27 @@
 .B setsebool -P vbetool_mmap_zero_ignore 1
 .EE
 
+.PP
+If you want to ignore vbetool mmap_zero errors, you must turn on the vbetool_mmap_zero_ignore boolean.
+
+.EX
+.B setsebool -P vbetool_mmap_zero_ignore 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux vbetool policy is very flexible allowing users to setup their vbetool processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for vbetool:
 
 
 .EX
 .PP
-.B vbetool_exec_t 
+.B vbetool_exec_t
 .EE
 
 - Set files with the vbetool_exec_t type, if you want to transition an executable to the vbetool_t domain.
@@ -44,28 +75,92 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux vbetool policy is very flexible allowing users to setup their vbetool processes in as secure a method as possible.
-.PP 
-The following process types are defined for vbetool:
+.SH "MANAGED FILES"
 
-.EX
-.B vbetool_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type vbetool_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B hald_log_t
+
+	/var/log/pm(/.*)?
+.br
+	/var/log/pm-.*\.log.*
+.br
+
+.br
+.B hald_var_run_t
+
+	/var/run/pm(/.*)?
+.br
+	/var/run/vbe.*
+.br
+	/var/run/hald(/.*)?
+.br
+	/var/run/synce.*
+.br
+	/var/run/pm-utils(/.*)?
+.br
+	/var/run/haldaemon\.pid
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B mtrr_device_t
+
+	/dev/cpu/mtrr
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -81,12 +176,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), vbetool(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), vbetool(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/vdagent_selinux.8 serefpolicy-3.7.19/man/man8/vdagent_selinux.8
--- nsaserefpolicy/man/man8/vdagent_selinux.8	2013-03-15 11:41:11.262153488 +0100
+++ serefpolicy-3.7.19/man/man8/vdagent_selinux.8	2013-03-15 11:39:55.461151758 +0100
@@ -1,88 +1,152 @@
-.TH  "vdagent_selinux"  "8"  "vdagent" "dwalsh@redhat.com" "vdagent SELinux Policy documentation"
+.TH  "vdagent_selinux"  "8"  "13-01-04" "vdagent" "SELinux Policy documentation for vdagent"
 .SH "NAME"
 vdagent_selinux \- Security Enhanced Linux Policy for the vdagent processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the vdagent processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B vdagent
-(policy for vdagent)
-processes via flexible mandatory access
-control.  
+The vdagent processes execute with the vdagent_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep vdagent_t
+
+
+.SH "ENTRYPOINTS"
+
+The vdagent_t SELinux type can be entered via the "vdagent_exec_t" file type.  The default entrypoint paths for the vdagent_t domain are the following:"
+
+/sbin/vdagent, /usr/sbin/spice-vdagentd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux vdagent policy is very flexible allowing users to setup their vdagent processes in as secure a method as possible.
+.PP
+The following process types are defined for vdagent:
+
+.EX
+.B vdagent_t
+.EE
+.PP
+Note:
+.B semanage permissive -a vdagent_t
+
+can be used to make the process type vdagent_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux vdagent policy is very flexible allowing users to setup their vdagent processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for vdagent:
 
 
 .EX
 .PP
-.B vdagent_exec_t 
+.B vdagent_exec_t
 .EE
 
 - Set files with the vdagent_exec_t type, if you want to transition an executable to the vdagent_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/vdagent, /usr/sbin/spice-vdagentd
 
 .EX
 .PP
-.B vdagent_log_t 
+.B vdagent_log_t
 .EE
 
 - Set files with the vdagent_log_t type, if you want to treat the data as vdagent log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/spice-vdagentd(/.*)?, /var/log/spice-vdagentd\.log
 
 .EX
 .PP
-.B vdagent_var_run_t 
+.B vdagent_var_run_t
 .EE
 
 - Set files with the vdagent_var_run_t type, if you want to store the vdagent files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/spice-vdagentd.\pid, /var/run/spice-vdagentd(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux vdagent policy is very flexible allowing users to setup their vdagent processes in as secure a method as possible.
-.PP 
-The following process types are defined for vdagent:
+.SH "MANAGED FILES"
 
-.EX
-.B vdagent_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type vdagent_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B vdagent_log_t
+
+	/var/log/spice-vdagentd(/.*)?
+.br
+	/var/log/spice-vdagentd\.log.*
+.br
+
+.br
+.B vdagent_var_run_t
+
+	/var/run/spice-vdagentd.\pid
+.br
+	/var/run/spice-vdagentd(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -95,11 +159,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), vdagent(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), vdagent(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/vhostmd_selinux.8 serefpolicy-3.7.19/man/man8/vhostmd_selinux.8
--- nsaserefpolicy/man/man8/vhostmd_selinux.8	2013-03-15 11:41:09.981153458 +0100
+++ serefpolicy-3.7.19/man/man8/vhostmd_selinux.8	2013-03-15 11:39:54.111151727 +0100
@@ -1,31 +1,55 @@
-.TH  "vhostmd_selinux"  "8"  "vhostmd" "dwalsh@redhat.com" "vhostmd SELinux Policy documentation"
+.TH  "vhostmd_selinux"  "8"  "13-01-04" "vhostmd" "SELinux Policy documentation for vhostmd"
 .SH "NAME"
 vhostmd_selinux \- Security Enhanced Linux Policy for the vhostmd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the vhostmd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B vhostmd
-(Virtual host metrics daemon)
-processes via flexible mandatory access
-control.  
+The vhostmd processes execute with the vhostmd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep vhostmd_t
+
+
+.SH "ENTRYPOINTS"
+
+The vhostmd_t SELinux type can be entered via the "vhostmd_exec_t" file type.  The default entrypoint paths for the vhostmd_t domain are the following:"
+
+/usr/sbin/vhostmd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux vhostmd policy is very flexible allowing users to setup their vhostmd processes in as secure a method as possible.
+.PP
+The following process types are defined for vhostmd:
+
+.EX
+.B vhostmd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a vhostmd_t
+
+can be used to make the process type vhostmd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux vhostmd policy is very flexible allowing users to setup their vhostmd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for vhostmd:
 
 
 .EX
 .PP
-.B vhostmd_exec_t 
+.B vhostmd_exec_t
 .EE
 
 - Set files with the vhostmd_exec_t type, if you want to transition an executable to the vhostmd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B vhostmd_initrc_exec_t 
+.B vhostmd_initrc_exec_t
 .EE
 
 - Set files with the vhostmd_initrc_exec_t type, if you want to transition an executable to the vhostmd_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B vhostmd_tmpfs_t 
+.B vhostmd_tmpfs_t
 .EE
 
 - Set files with the vhostmd_tmpfs_t type, if you want to store vhostmd files on a tmpfs file system.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B vhostmd_var_run_t 
+.B vhostmd_var_run_t
 .EE
 
 - Set files with the vhostmd_var_run_t type, if you want to store the vhostmd files under the /run directory.
@@ -57,28 +81,86 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux vhostmd policy is very flexible allowing users to setup their vhostmd processes in as secure a method as possible.
-.PP 
-The following process types are defined for vhostmd:
+.SH "MANAGED FILES"
 
-.EX
-.B vhostmd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type vhostmd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B vhostmd_tmpfs_t
+
+
+.br
+.B vhostmd_var_run_t
+
+	/var/run/vhostmd\.pid
+.br
+
+.br
+.B virt_content_t
+
+	/var/lib/oz/isos(/.*)?
+.br
+	/var/lib/libvirt/boot(/.*)?
+.br
+	/var/lib/libvirt/isos(/.*)?
+.br
+	/home/[^/]*/VirtualMachines/isos(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +173,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), vhostmd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), vhostmd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/virt_bridgehelper_selinux.8 serefpolicy-3.7.19/man/man8/virt_bridgehelper_selinux.8
--- nsaserefpolicy/man/man8/virt_bridgehelper_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/virt_bridgehelper_selinux.8	2013-03-15 11:40:07.134152024 +0100
@@ -0,0 +1,132 @@
+.TH  "virt_bridgehelper_selinux"  "8"  "13-01-04" "virt_bridgehelper" "SELinux Policy documentation for virt_bridgehelper"
+.SH "NAME"
+virt_bridgehelper_selinux \- Security Enhanced Linux Policy for the virt_bridgehelper processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the virt_bridgehelper processes via flexible mandatory access control.
+
+The virt_bridgehelper processes execute with the virt_bridgehelper_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep virt_bridgehelper_t
+
+
+.SH "ENTRYPOINTS"
+
+The virt_bridgehelper_t SELinux type can be entered via the "virt_bridgehelper_exec_t" file type.  The default entrypoint paths for the virt_bridgehelper_t domain are the following:"
+
+/usr/libexec/qemu-bridge-helper
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux virt_bridgehelper policy is very flexible allowing users to setup their virt_bridgehelper processes in as secure a method as possible.
+.PP
+The following process types are defined for virt_bridgehelper:
+
+.EX
+.B virt_bridgehelper_t
+.EE
+.PP
+Note:
+.B semanage permissive -a virt_bridgehelper_t
+
+can be used to make the process type virt_bridgehelper_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux virt_bridgehelper policy is very flexible allowing users to setup their virt_bridgehelper processes in as secure a method as possible.
+.PP
+The following file types are defined for virt_bridgehelper:
+
+
+.EX
+.PP
+.B virt_bridgehelper_exec_t
+.EE
+
+- Set files with the virt_bridgehelper_exec_t type, if you want to transition an executable to the virt_bridgehelper_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type virt_bridgehelper_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), virt_bridgehelper(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, virt_qemu_ga_selinux(8), virt_qmf_selinux(8), virtd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/virtd_selinux.8 serefpolicy-3.7.19/man/man8/virtd_selinux.8
--- nsaserefpolicy/man/man8/virtd_selinux.8	2013-03-15 11:41:12.168153508 +0100
+++ serefpolicy-3.7.19/man/man8/virtd_selinux.8	2013-03-15 11:40:04.452151963 +0100
@@ -1,205 +1,256 @@
-.TH  "virtd_selinux"  "8"  "virtd" "dwalsh@redhat.com" "virtd SELinux Policy documentation"
+.TH  "virtd_selinux"  "8"  "13-01-04" "virtd" "SELinux Policy documentation for virtd"
 .SH "NAME"
 virtd_selinux \- Security Enhanced Linux Policy for the virtd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the virtd processes via flexible mandatory access control.
 
+The virtd processes execute with the virtd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep virtd_t
+
+
+.SH "ENTRYPOINTS"
+
+The virtd_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,virtd_exec_t" file types.  The default entrypoint paths for the virtd_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/sbin/libvirtd, /usr/bin/imgfac\.py, /usr/share/vdsm/vdsm, /usr/bin/imagefactory, /usr/bin/nova-compute, /usr/sbin/condor_vm-gahp, /usr/bin/vios-proxy-host, /usr/bin/vios-proxy-guest
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
+.PP
+The following process types are defined for virtd:
+
+.EX
+.B virt_qmf_t, virt_qemu_ga_t, virt_bridgehelper_t, virtd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a virtd_t
+
+can be used to make the process type virtd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  virtd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run virtd with the tightest access possible.
 
 
 .PP
-If you want to allow virt to manage nfs file, you must turn on the virt_use_nfs boolean.
+If you want to allow virt to manage device configuration, (pci), you must turn on the virt_use_sysfs boolean.
 
 .EX
-.B setsebool -P virt_use_nfs 1
+.B setsebool -P virt_use_sysfs 1
 .EE
 
 .PP
-If you want to allow virt to use serial/parallell communication port, you must turn on the virt_use_comm boolean.
+If you want to allow virt to manage nfs files, you must turn on the virt_use_nfs boolean.
 
 .EX
-.B setsebool -P virt_use_comm 1
+.B setsebool -P virt_use_nfs 1
 .EE
 
 .PP
-If you want to allow virtual machine to interact with the xserve, you must turn on the virt_use_xserver boolean.
+If you want to allow virt to manage cifs files, you must turn on the virt_use_samba boolean.
 
 .EX
-.B setsebool -P virt_use_xserver 1
+.B setsebool -P virt_use_samba 1
 .EE
 
 .PP
-If you want to allow virt to manage device configuration, (pci, you must turn on the virt_use_sysfs boolean.
+If you want to allow virt to use usb devices, you must turn on the virt_use_usb boolean.
 
 .EX
-.B setsebool -P virt_use_sysfs 1
+.B setsebool -P virt_use_usb 1
 .EE
 
 .PP
-If you want to allow confined virtual guests to interact with the sanloc, you must turn on the virt_use_sanlock boolean.
+If you want to allow virt to use serial/parallell communication ports, you must turn on the virt_use_comm boolean.
 
 .EX
-.B setsebool -P virt_use_sanlock 1
+.B setsebool -P virt_use_comm 1
 .EE
 
 .PP
-If you want to allow virt to use usb device, you must turn on the virt_use_usb boolean.
+If you want to allow virtual machine to interact with the xserver, you must turn on the virt_use_xserver boolean.
 
 .EX
-.B setsebool -P virt_use_usb 1
+.B setsebool -P virt_use_xserver 1
 .EE
 
 .PP
-If you want to allow virt to read fuse file, you must turn on the virt_use_fusefs boolean.
+If you want to allow virt to read fuse files, you must turn on the virt_use_fusefs boolean.
 
 .EX
 .B setsebool -P virt_use_fusefs 1
 .EE
 
 .PP
-If you want to allow virt to manage cifs file, you must turn on the virt_use_samba boolean.
+If you want to allow confined virtual guests to use executable memory and executable stack, you must turn on the virt_use_execmem boolean.
 
 .EX
-.B setsebool -P virt_use_samba 1
+.B setsebool -P virt_use_execmem 1
 .EE
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-.PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
-SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
-.PP 
-The following file types are defined for virtd:
-
+If you want to allow confined virtual guests to interact with the sanlock, you must turn on the virt_use_sanlock boolean.
 
 .EX
-.PP
-.B virt_cache_t 
+.B setsebool -P virt_use_sanlock 1
 .EE
 
-- Set files with the virt_cache_t type, if you want to store the files under the /var/cache directory.
-
-.br
-.TP 5
-Paths: 
-/var/cache/oz(/.*)?, /var/cache/libvirt
+.PP
+If you want to allow virt to manage device configuration, (pci), you must turn on the virt_use_sysfs boolean.
 
 .EX
-.PP
-.B virt_content_t 
+.B setsebool -P virt_use_sysfs 1
 .EE
 
-- Set files with the virt_content_t type, if you want to treat the files as virt content.
-
-.br
-.TP 5
-Paths: 
-/var/lib/oz/isos(/.*)?, /var/lib/libvirt/boot(/.*)?, /var/lib/libvirt/isos(/.*)?
+.PP
+If you want to allow virt to manage nfs files, you must turn on the virt_use_nfs boolean.
 
 .EX
-.PP
-.B virt_etc_rw_t 
+.B setsebool -P virt_use_nfs 1
 .EE
 
-- Set files with the virt_etc_rw_t type, if you want to treat the files as virt etc read/write content.
-
-.br
-.TP 5
-Paths: 
-/etc/libvirt/.*/.*, /etc/xen/.*/.*, /etc/xen/[^/]*, /etc/libvirt/[^/]*
+.PP
+If you want to allow virt to manage cifs files, you must turn on the virt_use_samba boolean.
 
 .EX
-.PP
-.B virt_etc_t 
+.B setsebool -P virt_use_samba 1
 .EE
 
-- Set files with the virt_etc_t type, if you want to store virt files in the /etc directories.
-
-.br
-.TP 5
-Paths: 
-/etc/libvirt/[^/]*, /etc/libvirt, /etc/xen/[^/]*, /etc/xen
+.PP
+If you want to allow virt to use usb devices, you must turn on the virt_use_usb boolean.
 
 .EX
-.PP
-.B virt_home_t 
+.B setsebool -P virt_use_usb 1
 .EE
 
-- Set files with the virt_home_t type, if you want to store virt files in the users home directory.
-
+.PP
+If you want to allow virt to use serial/parallell communication ports, you must turn on the virt_use_comm boolean.
 
 .EX
+.B setsebool -P virt_use_comm 1
+.EE
+
 .PP
-.B virt_image_t 
+If you want to allow virtual machine to interact with the xserver, you must turn on the virt_use_xserver boolean.
+
+.EX
+.B setsebool -P virt_use_xserver 1
 .EE
 
-- Set files with the virt_image_t type, if you want to treat the files as virt image data.
+.PP
+If you want to allow virt to read fuse files, you must turn on the virt_use_fusefs boolean.
 
-.br
-.TP 5
-Paths: 
-/var/lib/imagefactory/images(/.*)?, /var/lib/libvirt/images(/.*)?
+.EX
+.B setsebool -P virt_use_fusefs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to use executable memory and executable stack, you must turn on the virt_use_execmem boolean.
 
 .EX
+.B setsebool -P virt_use_execmem 1
+.EE
+
 .PP
-.B virt_log_t 
+If you want to allow confined virtual guests to interact with the sanlock, you must turn on the virt_use_sanlock boolean.
+
+.EX
+.B setsebool -P virt_use_sanlock 1
 .EE
 
-- Set files with the virt_log_t type, if you want to treat the data as virt log data, usually stored under the /var/log directory.
+.PP
+If you want to allow virt to manage device configuration, (pci), you must turn on the virt_use_sysfs boolean.
 
+.EX
+.B setsebool -P virt_use_sysfs 1
+.EE
+
+.PP
+If you want to allow virt to manage nfs files, you must turn on the virt_use_nfs boolean.
 
 .EX
+.B setsebool -P virt_use_nfs 1
+.EE
+
 .PP
-.B virt_tmp_t 
+If you want to allow virt to manage cifs files, you must turn on the virt_use_samba boolean.
+
+.EX
+.B setsebool -P virt_use_samba 1
 .EE
 
-- Set files with the virt_tmp_t type, if you want to store virt temporary files in the /tmp directories.
+.PP
+If you want to allow virt to use usb devices, you must turn on the virt_use_usb boolean.
 
+.EX
+.B setsebool -P virt_use_usb 1
+.EE
+
+.PP
+If you want to allow virt to use serial/parallell communication ports, you must turn on the virt_use_comm boolean.
 
 .EX
+.B setsebool -P virt_use_comm 1
+.EE
+
 .PP
-.B virt_var_lib_t 
+If you want to allow virtual machine to interact with the xserver, you must turn on the virt_use_xserver boolean.
+
+.EX
+.B setsebool -P virt_use_xserver 1
 .EE
 
-- Set files with the virt_var_lib_t type, if you want to store the virt files under the /var/lib directory.
+.PP
+If you want to allow virt to read fuse files, you must turn on the virt_use_fusefs boolean.
 
-.br
-.TP 5
-Paths: 
-/var/lib/oz(/.*)?, /var/lib/libvirt(/.*)?
+.EX
+.B setsebool -P virt_use_fusefs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to use executable memory and executable stack, you must turn on the virt_use_execmem boolean.
 
 .EX
+.B setsebool -P virt_use_execmem 1
+.EE
+
 .PP
-.B virt_var_run_t 
+If you want to allow confined virtual guests to interact with the sanlock, you must turn on the virt_use_sanlock boolean.
+
+.EX
+.B setsebool -P virt_use_sanlock 1
 .EE
 
-- Set files with the virt_var_run_t type, if you want to store the virt files under the /run directory.
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
+.PP
+The following file types are defined for virtd:
 
-.br
-.TP 5
-Paths: 
-/var/vdsm(/.*)?, /var/run/libvirt(/.*)?
 
 .EX
 .PP
-.B virtd_exec_t 
+.B virtd_exec_t
 .EE
 
 - Set files with the virtd_exec_t type, if you want to transition an executable to the virtd_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/imgfac\.py, /usr/bin/imagefactory, /usr/sbin/condor_vm-gahp, /usr/sbin/libvirtd, /usr/share/vdsm/vdsm
 
 .EX
 .PP
-.B virtd_initrc_exec_t 
+.B virtd_initrc_exec_t
 .EE
 
 - Set files with the virtd_initrc_exec_t type, if you want to transition an executable to the virtd_initrc_t domain.
@@ -207,7 +258,7 @@
 
 .EX
 .PP
-.B virtd_keytab_t 
+.B virtd_keytab_t
 .EE
 
 - Set files with the virtd_keytab_t type, if you want to treat the files as kerberos keytab files.
@@ -215,62 +266,56 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for virtd:
 
 .EX
 .TP 5
-.B virt_migration_port_t 
+.B virt_migration_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 49152-49216
 .EE
 
 .EX
 .TP 5
-.B virt_port_t 
+.B virt_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 16509,16514
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
-.PP 
-The following process types are defined for virtd:
-
-.EX
-.B virtd_t 
+udp 16509,16514
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type virtd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -289,12 +334,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), virtd(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), virtd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), virt_bridgehelper_selinux(8), virt_qemu_ga_selinux(8), virt_qmf_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/virt_qemu_ga_selinux.8 serefpolicy-3.7.19/man/man8/virt_qemu_ga_selinux.8
--- nsaserefpolicy/man/man8/virt_qemu_ga_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/virt_qemu_ga_selinux.8	2013-03-15 11:40:02.450151917 +0100
@@ -0,0 +1,180 @@
+.TH  "virt_qemu_ga_selinux"  "8"  "13-01-04" "virt_qemu_ga" "SELinux Policy documentation for virt_qemu_ga"
+.SH "NAME"
+virt_qemu_ga_selinux \- Security Enhanced Linux Policy for the virt_qemu_ga processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the virt_qemu_ga processes via flexible mandatory access control.
+
+The virt_qemu_ga processes execute with the virt_qemu_ga_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep virt_qemu_ga_t
+
+
+.SH "ENTRYPOINTS"
+
+The virt_qemu_ga_t SELinux type can be entered via the "virt_qemu_ga_exec_t" file type.  The default entrypoint paths for the virt_qemu_ga_t domain are the following:"
+
+/usr/bin/qemu-ga
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux virt_qemu_ga policy is very flexible allowing users to setup their virt_qemu_ga processes in as secure a method as possible.
+.PP
+The following process types are defined for virt_qemu_ga:
+
+.EX
+.B virt_qemu_ga_t
+.EE
+.PP
+Note:
+.B semanage permissive -a virt_qemu_ga_t
+
+can be used to make the process type virt_qemu_ga_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux virt_qemu_ga policy is very flexible allowing users to setup their virt_qemu_ga processes in as secure a method as possible.
+.PP
+The following file types are defined for virt_qemu_ga:
+
+
+.EX
+.PP
+.B virt_qemu_ga_exec_t
+.EE
+
+- Set files with the virt_qemu_ga_exec_t type, if you want to transition an executable to the virt_qemu_ga_t domain.
+
+
+.EX
+.PP
+.B virt_qemu_ga_log_t
+.EE
+
+- Set files with the virt_qemu_ga_log_t type, if you want to treat the data as virt qemu ga log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B virt_qemu_ga_var_run_t
+.EE
+
+- Set files with the virt_qemu_ga_var_run_t type, if you want to store the virt qemu ga files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type virt_qemu_ga_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B devicekit_var_run_t
+
+	/var/run/devkit(/.*)?
+.br
+	/var/run/udisks(/.*)?
+.br
+	/var/run/upower(/.*)?
+.br
+	/var/run/DeviceKit-disks(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B virt_qemu_ga_log_t
+
+	/var/log/qemu-ga\.log.*
+.br
+
+.br
+.B virt_qemu_ga_var_run_t
+
+	/var/run/qemu-ga\.pid
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), virt_qemu_ga(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, virt_bridgehelper_selinux(8), virt_qmf_selinux(8), virtd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/virt_qmf_selinux.8 serefpolicy-3.7.19/man/man8/virt_qmf_selinux.8
--- nsaserefpolicy/man/man8/virt_qmf_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/virt_qmf_selinux.8	2013-03-15 11:39:54.011151725 +0100
@@ -0,0 +1,96 @@
+.TH  "virt_qmf_selinux"  "8"  "13-01-04" "virt_qmf" "SELinux Policy documentation for virt_qmf"
+.SH "NAME"
+virt_qmf_selinux \- Security Enhanced Linux Policy for the virt_qmf processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the virt_qmf processes via flexible mandatory access control.
+
+The virt_qmf processes execute with the virt_qmf_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep virt_qmf_t
+
+
+.SH "ENTRYPOINTS"
+
+The virt_qmf_t SELinux type can be entered via the "mtrr_device_t,virt_qmf_exec_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the virt_qmf_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/libvirt-qmf, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux virt_qmf policy is very flexible allowing users to setup their virt_qmf processes in as secure a method as possible.
+.PP
+The following process types are defined for virt_qmf:
+
+.EX
+.B virt_qmf_t
+.EE
+.PP
+Note:
+.B semanage permissive -a virt_qmf_t
+
+can be used to make the process type virt_qmf_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux virt_qmf policy is very flexible allowing users to setup their virt_qmf processes in as secure a method as possible.
+.PP
+The following file types are defined for virt_qmf:
+
+
+.EX
+.PP
+.B virt_qmf_exec_t
+.EE
+
+- Set files with the virt_qmf_exec_t type, if you want to transition an executable to the virt_qmf_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type virt_qmf_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), virt_qmf(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, virt_bridgehelper_selinux(8), virt_qemu_ga_selinux(8), virtd_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/virt_selinux.8 serefpolicy-3.7.19/man/man8/virt_selinux.8
--- nsaserefpolicy/man/man8/virt_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/virt_selinux.8	2013-03-15 11:40:00.794151880 +0100
@@ -0,0 +1 @@
+.so man8/virtd_selinux.8
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/vmware_host_selinux.8 serefpolicy-3.7.19/man/man8/vmware_host_selinux.8
--- nsaserefpolicy/man/man8/vmware_host_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/vmware_host_selinux.8	2013-03-15 11:39:59.875151859 +0100
@@ -0,0 +1,112 @@
+.TH  "vmware_host_selinux"  "8"  "13-01-04" "vmware_host" "SELinux Policy documentation for vmware_host"
+.SH "NAME"
+vmware_host_selinux \- Security Enhanced Linux Policy for the vmware_host processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the vmware_host processes via flexible mandatory access control.
+
+The vmware_host processes execute with the vmware_host_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep vmware_host_t
+
+
+.SH "ENTRYPOINTS"
+
+The vmware_host_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,vmware_host_exec_t,file_type" file types.  The default entrypoint paths for the vmware_host_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/sbin/vmware-guest.*, /usr/lib/vmware-tools/sbin32/vmware.*, /usr/lib/vmware-tools/sbin64/vmware.*, /usr/bin/vmnet-natd, /usr/bin/vmware-vmx, /usr/bin/vmnet-dhcpd, /usr/bin/vmware-nmbd, /usr/bin/vmware-ping, /usr/bin/vmware-smbd, /usr/bin/vmnet-bridge, /usr/bin/vmnet-netifup, /usr/bin/vmnet-sniffer, /usr/bin/vmware-network, /usr/bin/vmware-smbpasswd, /usr/bin/vmware-smbpasswd\.bin, /usr/lib/vmware/bin/vmware-vmx, /usr/lib64/vmware/bin/vmware-vmx, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux vmware_host policy is very flexible allowing users to setup their vmware_host processes in as secure a method as possible.
+.PP
+The following process types are defined for vmware_host:
+
+.EX
+.B vmware_host_t
+.EE
+.PP
+Note:
+.B semanage permissive -a vmware_host_t
+
+can be used to make the process type vmware_host_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux vmware_host policy is very flexible allowing users to setup their vmware_host processes in as secure a method as possible.
+.PP
+The following file types are defined for vmware_host:
+
+
+.EX
+.PP
+.B vmware_host_exec_t
+.EE
+
+- Set files with the vmware_host_exec_t type, if you want to transition an executable to the vmware_host_t domain.
+
+
+.EX
+.PP
+.B vmware_host_pid_t
+.EE
+
+- Set files with the vmware_host_pid_t type, if you want to store the vmware host files under the /run directory.
+
+
+.EX
+.PP
+.B vmware_host_tmp_t
+.EE
+
+- Set files with the vmware_host_tmp_t type, if you want to store vmware host temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type vmware_host_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), vmware_host(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, vmware_selinux(8), vmware_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/vmware_selinux.8 serefpolicy-3.7.19/man/man8/vmware_selinux.8
--- nsaserefpolicy/man/man8/vmware_selinux.8	2013-03-15 11:41:11.990153504 +0100
+++ serefpolicy-3.7.19/man/man8/vmware_selinux.8	2013-03-15 11:40:00.930151883 +0100
@@ -1,31 +1,55 @@
-.TH  "vmware_selinux"  "8"  "vmware" "dwalsh@redhat.com" "vmware SELinux Policy documentation"
+.TH  "vmware_selinux"  "8"  "13-01-04" "vmware" "SELinux Policy documentation for vmware"
 .SH "NAME"
 vmware_selinux \- Security Enhanced Linux Policy for the vmware processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the vmware processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B vmware
-(VMWare Workstation virtual machines)
-processes via flexible mandatory access
-control.  
+The vmware processes execute with the vmware_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep vmware_t
+
+
+.SH "ENTRYPOINTS"
+
+The vmware_t SELinux type can be entered via the "vmware_exec_t" file type.  The default entrypoint paths for the vmware_t domain are the following:"
+
+/usr/bin/vmware, /usr/bin/vmware-wizard, /usr/sbin/vmware-serverd, /usr/lib/vmware/bin/vmplayer, /usr/lib/vmware/bin/vmware-ui, /usr/lib/vmware/bin/vmware-mks, /usr/lib64/vmware/bin/vmplayer, /usr/lib64/vmware/bin/vmware-ui, /usr/lib64/vmware/bin/vmware-mks
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux vmware policy is very flexible allowing users to setup their vmware processes in as secure a method as possible.
+.PP
+The following process types are defined for vmware:
+
+.EX
+.B vmware_t, vmware_host_t
+.EE
+.PP
+Note:
+.B semanage permissive -a vmware_t
+
+can be used to make the process type vmware_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux vmware policy is very flexible allowing users to setup their vmware processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for vmware:
 
 
 .EX
 .PP
-.B vmware_conf_t 
+.B vmware_conf_t
 .EE
 
 - Set files with the vmware_conf_t type, if you want to treat the files as vmware configuration data, usually stored under the /etc directory.
@@ -33,19 +57,15 @@
 
 .EX
 .PP
-.B vmware_exec_t 
+.B vmware_exec_t
 .EE
 
 - Set files with the vmware_exec_t type, if you want to transition an executable to the vmware_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib/vmware/bin/vmware-mks, /usr/lib/vmware/bin/vmplayer, /usr/lib64/vmware/bin/vmware-ui, /usr/lib/vmware/bin/vmware-ui, /usr/sbin/vmware-serverd, /usr/lib64/vmware/bin/vmplayer, /usr/lib64/vmware/bin/vmware-mks, /usr/bin/vmware, /usr/bin/vmware-wizard
 
 .EX
 .PP
-.B vmware_file_t 
+.B vmware_file_t
 .EE
 
 - Set files with the vmware_file_t type, if you want to treat the files as vmware content.
@@ -53,19 +73,15 @@
 
 .EX
 .PP
-.B vmware_host_exec_t 
+.B vmware_host_exec_t
 .EE
 
 - Set files with the vmware_host_exec_t type, if you want to transition an executable to the vmware_host_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/vmware-smbpasswd\.bin, /usr/bin/vmware-smbd, /usr/lib/vmware-tools/sbin64/vmware.*, /usr/bin/vmware-ping, /usr/bin/vmnet-dhcpd, /usr/lib64/vmware/bin/vmware-vmx, /usr/bin/vmnet-bridge, /usr/bin/vmware-nmbd, /usr/bin/vmnet-netifup, /usr/sbin/vmware-guest.*, /usr/bin/vmware-network, /usr/bin/vmware-vmx, /usr/bin/vmnet-natd, /usr/bin/vmware-smbpasswd, /usr/bin/vmnet-sniffer, /usr/lib/vmware-tools/sbin32/vmware.*, /usr/lib/vmware/bin/vmware-vmx
 
 .EX
 .PP
-.B vmware_host_pid_t 
+.B vmware_host_pid_t
 .EE
 
 - Set files with the vmware_host_pid_t type, if you want to store the vmware host files under the /run directory.
@@ -73,7 +89,7 @@
 
 .EX
 .PP
-.B vmware_host_tmp_t 
+.B vmware_host_tmp_t
 .EE
 
 - Set files with the vmware_host_tmp_t type, if you want to store vmware host temporary files in the /tmp directories.
@@ -81,19 +97,15 @@
 
 .EX
 .PP
-.B vmware_log_t 
+.B vmware_log_t
 .EE
 
 - Set files with the vmware_log_t type, if you want to treat the data as vmware log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/vmware.*, /var/log/vnetlib.*
 
 .EX
 .PP
-.B vmware_pid_t 
+.B vmware_pid_t
 .EE
 
 - Set files with the vmware_pid_t type, if you want to store the vmware files under the /run directory.
@@ -101,19 +113,15 @@
 
 .EX
 .PP
-.B vmware_sys_conf_t 
+.B vmware_sys_conf_t
 .EE
 
 - Set files with the vmware_sys_conf_t type, if you want to treat the files as vmware sys configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/usr/lib/vmware/config, /etc/vmware.*(/.*)?, /usr/lib64/vmware/config
 
 .EX
 .PP
-.B vmware_tmp_t 
+.B vmware_tmp_t
 .EE
 
 - Set files with the vmware_tmp_t type, if you want to store vmware temporary files in the /tmp directories.
@@ -121,7 +129,7 @@
 
 .EX
 .PP
-.B vmware_tmpfs_t 
+.B vmware_tmpfs_t
 .EE
 
 - Set files with the vmware_tmpfs_t type, if you want to store vmware files on a tmpfs file system.
@@ -129,28 +137,96 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux vmware policy is very flexible allowing users to setup their vmware processes in as secure a method as possible.
-.PP 
-The following process types are defined for vmware:
+.SH "MANAGED FILES"
+
+The SELinux process type vmware_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
+
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B vmware_conf_t
+
+	/home/[^/]*/\.vmware[^/]*/.*\.cfg
+.br
+
+.br
+.B vmware_file_t
+
+	/home/[^/]*/vmware(/.*)?
+.br
+	/home/[^/]*/\.vmware(/.*)?
+.br
+
+.br
+.B vmware_pid_t
+
+
+.br
+.B vmware_tmp_t
+
+
+.br
+.B vmware_tmpfs_t
 
-.EX
-.B vmware_t, vmware_host_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -163,11 +239,14 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), vmware(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), vmware(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, vmware_host_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/vpnc_selinux.8 serefpolicy-3.7.19/man/man8/vpnc_selinux.8
--- nsaserefpolicy/man/man8/vpnc_selinux.8	2013-03-15 11:41:10.880153479 +0100
+++ serefpolicy-3.7.19/man/man8/vpnc_selinux.8	2013-03-15 11:39:55.187151752 +0100
@@ -1,37 +1,63 @@
-.TH  "vpnc_selinux"  "8"  "vpnc" "dwalsh@redhat.com" "vpnc SELinux Policy documentation"
+.TH  "vpnc_selinux"  "8"  "13-01-04" "vpnc" "SELinux Policy documentation for vpnc"
 .SH "NAME"
 vpnc_selinux \- Security Enhanced Linux Policy for the vpnc processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the vpnc processes via flexible mandatory access control.
 
+The vpnc processes execute with the vpnc_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep vpnc_t
+
+
+.SH "ENTRYPOINTS"
+
+The vpnc_t SELinux type can be entered via the "vpnc_exec_t" file type.  The default entrypoint paths for the vpnc_t domain are the following:"
+
+/sbin/vpnc, /usr/sbin/vpnc, /usr/bin/openconnect
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux vpnc policy is very flexible allowing users to setup their vpnc processes in as secure a method as possible.
+.PP
+The following process types are defined for vpnc:
+
+.EX
+.B vpnc_t
+.EE
+.PP
+Note:
+.B semanage permissive -a vpnc_t
+
+can be used to make the process type vpnc_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux vpnc policy is very flexible allowing users to setup their vpnc processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for vpnc:
 
 
 .EX
 .PP
-.B vpnc_exec_t 
+.B vpnc_exec_t
 .EE
 
 - Set files with the vpnc_exec_t type, if you want to transition an executable to the vpnc_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/vpnc, /usr/bin/openconnect, /sbin/vpnc
 
 .EX
 .PP
-.B vpnc_tmp_t 
+.B vpnc_tmp_t
 .EE
 
 - Set files with the vpnc_tmp_t type, if you want to store vpnc temporary files in the /tmp directories.
@@ -39,7 +65,7 @@
 
 .EX
 .PP
-.B vpnc_var_run_t 
+.B vpnc_var_run_t
 .EE
 
 - Set files with the vpnc_var_run_t type, if you want to store the vpnc files under the /run directory.
@@ -47,28 +73,92 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux vpnc policy is very flexible allowing users to setup their vpnc processes in as secure a method as possible.
-.PP 
-The following process types are defined for vpnc:
+.SH "MANAGED FILES"
 
-.EX
-.B vpnc_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type vpnc_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B net_conf_t
+
+	/etc/ntpd?\.conf.*
+.br
+	/etc/yp\.conf.*
+.br
+	/etc/denyhosts.*
+.br
+	/etc/hosts\.deny.*
+.br
+	/etc/resolv\.conf.*
+.br
+	/etc/ntp/step-tickers.*
+.br
+	/etc/sysconfig/networking(/.*)?
+.br
+	/etc/sysconfig/network-scripts(/.*)?
+.br
+	/etc/sysconfig/network-scripts/.*resolv\.conf
+.br
+	/etc/hosts
+.br
+	/etc/ethers
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B vpnc_tmp_t
+
+
+.br
+.B vpnc_var_run_t
+
+	/var/run/vpnc(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -81,11 +171,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), vpnc(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), vpnc(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/wdmd_selinux.8 serefpolicy-3.7.19/man/man8/wdmd_selinux.8
--- nsaserefpolicy/man/man8/wdmd_selinux.8	2013-03-15 11:41:12.237153510 +0100
+++ serefpolicy-3.7.19/man/man8/wdmd_selinux.8	2013-03-15 11:40:07.276152028 +0100
@@ -1,31 +1,55 @@
-.TH  "wdmd_selinux"  "8"  "wdmd" "dwalsh@redhat.com" "wdmd SELinux Policy documentation"
+.TH  "wdmd_selinux"  "8"  "13-01-04" "wdmd" "SELinux Policy documentation for wdmd"
 .SH "NAME"
 wdmd_selinux \- Security Enhanced Linux Policy for the wdmd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the wdmd processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B wdmd
-(policy for wdmd)
-processes via flexible mandatory access
-control.  
+The wdmd processes execute with the wdmd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep wdmd_t
+
+
+.SH "ENTRYPOINTS"
+
+The wdmd_t SELinux type can be entered via the "wdmd_exec_t" file type.  The default entrypoint paths for the wdmd_t domain are the following:"
+
+/usr/sbin/wdmd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux wdmd policy is very flexible allowing users to setup their wdmd processes in as secure a method as possible.
+.PP
+The following process types are defined for wdmd:
+
+.EX
+.B wdmd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a wdmd_t
+
+can be used to make the process type wdmd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux wdmd policy is very flexible allowing users to setup their wdmd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for wdmd:
 
 
 .EX
 .PP
-.B wdmd_exec_t 
+.B wdmd_exec_t
 .EE
 
 - Set files with the wdmd_exec_t type, if you want to transition an executable to the wdmd_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B wdmd_initrc_exec_t 
+.B wdmd_initrc_exec_t
 .EE
 
 - Set files with the wdmd_initrc_exec_t type, if you want to transition an executable to the wdmd_initrc_t domain.
@@ -41,7 +65,15 @@
 
 .EX
 .PP
-.B wdmd_var_run_t 
+.B wdmd_tmpfs_t
+.EE
+
+- Set files with the wdmd_tmpfs_t type, if you want to store wdmd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B wdmd_var_run_t
 .EE
 
 - Set files with the wdmd_var_run_t type, if you want to store the wdmd files under the /run directory.
@@ -49,28 +81,74 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux wdmd policy is very flexible allowing users to setup their wdmd processes in as secure a method as possible.
-.PP 
-The following process types are defined for wdmd:
+.SH "MANAGED FILES"
 
-.EX
-.B wdmd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type wdmd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B wdmd_tmpfs_t
+
+
+.br
+.B wdmd_var_run_t
+
+	/var/run/wdmd(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -83,11 +161,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), wdmd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), wdmd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/webadm_selinux.8 serefpolicy-3.7.19/man/man8/webadm_selinux.8
--- nsaserefpolicy/man/man8/webadm_selinux.8	2013-03-15 11:41:12.080153506 +0100
+++ serefpolicy-3.7.19/man/man8/webadm_selinux.8	2013-03-15 11:40:02.483151918 +0100
@@ -1,65 +1,259 @@
 .TH  "webadm_selinux"  "8"  "webadm" "mgrepl@redhat.com" "webadm SELinux Policy documentation"
 .SH "NAME"
-webadm_r \- \fBWeb administrator role\fP - Security Enhanced Linux Policy 
+webadm_r \- \fBWeb administrator role\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
-SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+SELinux supports Roles Based Access Control (RBAC), some Linux roles are login roles, while other roles need to be transition into.
 
-Note: The examples in the man page will user the staff_u user.
+.I Note:
+Examples in this man page will use the
+.B staff_u
+SELinux user.
 
-Non login roles are usually used for administrative tasks.
-
-Roles usually have default types assigned to them. 
+Non login roles are usually used for administrative tasks. For example, tasks that require root privileges.  Roles control which types a user can run processes with. Roles often have default types assigned to them.
 
 The default type for the webadm_r role is webadm_t.
 
-You can use the 
-.B newrole 
+The
+.B newrole
 program to transition directly to this role.
 
 .B newrole -r webadm_r -t webadm_t
 
-.B sudo 
-can also be setup to transition to this role using the visudo command.
+.B sudo
+is the preferred method to do transition from one role to another.  You setup sudo to transition to webadm_r by adding a similar line to the /etc/sudoers file.
 
 USERNAME ALL=(ALL) ROLE=webadm_r TYPE=webadm_t COMMAND
+
 .br
 sudo will run COMMAND as staff_u:webadm_r:webadm_t:LEVEL
 
-If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+When using a a non login role, you need to setup SELinux so that your SELinux user can reach webadm_r role.
 
-You can see all of the assigned SELinux roles using the following
+Execute the following to see all of the assigned SELinux roles:
 
 .B semanage user -l
 
-If you wanted to add webadm_r to the staff_u user, you would execute:
+You need to add webadm_r to the staff_u user.  You could setup the staff_u user to be able to use the webadm_r role with a command like:
 
-.B $ semanage user -m -R 'staff_r webadm_r' staff_u 
+.B $ semanage user -m -R 'staff_r system_r webadm_r' staff_u
 
 
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  webadm policy is extremely flexible and has several booleans that allow you to manipulate the policy and run webadm with the tightest access possible.
 
-SELinux policy also controls which roles can transition to a different role.  
-You can list these rules using the following command.
 
-.B sesearch --role_allow
+.PP
+If you want to allow webadm to manage files in users home directories, you must turn on the webadm_manage_user_files boolean.
 
-SELinux policy allows the staff_r role can transition to the webadm_r role.
+.EX
+.B setsebool -P webadm_manage_user_files 1
+.EE
 
+.PP
+If you want to allow webadm to read files in users home directories, you must turn on the webadm_read_user_files boolean.
 
-.SH "COMMANDS"
+.EX
+.B setsebool -P webadm_read_user_files 1
+.EE
+
+.PP
+If you want to allow webadm to manage files in users home directories, you must turn on the webadm_manage_user_files boolean.
+
+.EX
+.B setsebool -P webadm_manage_user_files 1
+.EE
+
+.PP
+If you want to allow webadm to read files in users home directories, you must turn on the webadm_read_user_files boolean.
+
+.EX
+.B setsebool -P webadm_read_user_files 1
+.EE
+
+.SH "MANAGED FILES"
+
+The SELinux process type webadm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B httpd_config_t
+
+	/etc/httpd(/.*)?
+.br
+	/etc/apache(2)?(/.*)?
+.br
+	/etc/cherokee(/.*)?
+.br
+	/etc/lighttpd(/.*)?
+.br
+	/etc/apache-ssl(2)?(/.*)?
+.br
+	/var/lib/openshift/\.httpd\.d(/.*)?
+.br
+	/var/lib/stickshift/\.httpd\.d(/.*)?
+.br
+	/etc/vhosts
+.br
+
+.br
+.B httpd_lock_t
+
+
+.br
+.B httpd_log_t
+
+	/var/log/cacti(/.*)?
+.br
+	/var/log/httpd(/.*)?
+.br
+	/var/log/apache(2)?(/.*)?
+.br
+	/var/log/cherokee(/.*)?
+.br
+	/var/log/lighttpd(/.*)?
+.br
+	/var/log/apache-ssl(2)?(/.*)?
+.br
+	/var/log/cgiwrap\.log.*
+.br
+	/var/www/stickshift/[^/]*/log(/.*)?
+.br
+	/var/lib/openshift/\.log/httpd(/.*)?
+.br
+	/etc/httpd/logs
+.br
+
+.br
+.B httpd_modules_t
+
+	/usr/lib(64)?/httpd(/.*)?
+.br
+	/usr/lib(64)?/apache(/.*)?
+.br
+	/usr/lib(64)?/cherokee(/.*)?
+.br
+	/usr/lib(64)?/lighttpd(/.*)?
+.br
+	/usr/lib(64)?/apache2/modules(/.*)?
+.br
+	/etc/httpd/modules
+.br
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
+.br
+.B httpd_php_tmp_t
+
+
+.br
+.B httpd_script_exec_type
+
+
+.br
+.B httpd_suexec_tmp_t
+
+
+.br
+.B httpd_tmp_t
+
+
+.br
+.B httpd_var_run_t
+
+	/var/run/mod_.*
+.br
+	/var/run/wsgi.*
+.br
+	/var/run/httpd.*
+.br
+	/var/run/apache.*
+.br
+	/var/run/lighttpd(/.*)?
+.br
+	/var/lib/php/session(/.*)?
+.br
+	/var/run/gcache_port
+.br
+
+.br
+.B httpdcontent
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B public_content_rw_t
+
+	/var/spool/abrt-upload(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_lock_t
+
+	/var/lock(/.*)?
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
+.B semanage boolean
+can also be used to manipulate the booleans
 
-.B system-config-selinux 
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), webadm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/webalizer_selinux.8 serefpolicy-3.7.19/man/man8/webalizer_selinux.8
--- nsaserefpolicy/man/man8/webalizer_selinux.8	2013-03-15 11:41:12.131153507 +0100
+++ serefpolicy-3.7.19/man/man8/webalizer_selinux.8	2013-03-15 11:40:03.979151952 +0100
@@ -1,31 +1,55 @@
-.TH  "webalizer_selinux"  "8"  "webalizer" "dwalsh@redhat.com" "webalizer SELinux Policy documentation"
+.TH  "webalizer_selinux"  "8"  "13-01-04" "webalizer" "SELinux Policy documentation for webalizer"
 .SH "NAME"
 webalizer_selinux \- Security Enhanced Linux Policy for the webalizer processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the webalizer processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B webalizer
-(Web server log analysis)
-processes via flexible mandatory access
-control.  
+The webalizer processes execute with the webalizer_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep webalizer_t
+
+
+.SH "ENTRYPOINTS"
+
+The webalizer_t SELinux type can be entered via the "webalizer_exec_t" file type.  The default entrypoint paths for the webalizer_t domain are the following:"
+
+/usr/bin/webalizer
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux webalizer policy is very flexible allowing users to setup their webalizer processes in as secure a method as possible.
+.PP
+The following process types are defined for webalizer:
+
+.EX
+.B webalizer_t
+.EE
+.PP
+Note:
+.B semanage permissive -a webalizer_t
+
+can be used to make the process type webalizer_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux webalizer policy is very flexible allowing users to setup their webalizer processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for webalizer:
 
 
 .EX
 .PP
-.B webalizer_etc_t 
+.B webalizer_etc_t
 .EE
 
 - Set files with the webalizer_etc_t type, if you want to store webalizer files in the /etc directories.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B webalizer_exec_t 
+.B webalizer_exec_t
 .EE
 
 - Set files with the webalizer_exec_t type, if you want to transition an executable to the webalizer_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B webalizer_tmp_t 
+.B webalizer_tmp_t
 .EE
 
 - Set files with the webalizer_tmp_t type, if you want to store webalizer temporary files in the /tmp directories.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B webalizer_usage_t 
+.B webalizer_usage_t
 .EE
 
 - Set files with the webalizer_usage_t type, if you want to treat the files as webalizer usage data.
@@ -57,7 +81,7 @@
 
 .EX
 .PP
-.B webalizer_var_lib_t 
+.B webalizer_var_lib_t
 .EE
 
 - Set files with the webalizer_var_lib_t type, if you want to store the webalizer files under the /var/lib directory.
@@ -65,7 +89,7 @@
 
 .EX
 .PP
-.B webalizer_write_t 
+.B webalizer_write_t
 .EE
 
 - Set files with the webalizer_write_t type, if you want to treat the files as webalizer read/write content.
@@ -73,28 +97,118 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux webalizer policy is very flexible allowing users to setup their webalizer processes in as secure a method as possible.
-.PP 
-The following process types are defined for webalizer:
+.SH "MANAGED FILES"
 
-.EX
-.B webalizer_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type webalizer_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B httpd_sys_content_t
+
+	/srv/([^/]*/)?www(/.*)?
+.br
+	/var/www(/.*)?
+.br
+	/etc/htdig(/.*)?
+.br
+	/srv/gallery2(/.*)?
+.br
+	/var/lib/trac(/.*)?
+.br
+	/var/lib/htdig(/.*)?
+.br
+	/var/www/icons(/.*)?
+.br
+	/usr/share/htdig(/.*)?
+.br
+	/usr/share/drupal.*
+.br
+	/var/www/svn/conf(/.*)?
+.br
+	/usr/share/icecast(/.*)?
+.br
+	/usr/share/mythweb(/.*)?
+.br
+	/var/lib/cacti/rra(/.*)?
+.br
+	/usr/share/ntop/html(/.*)?
+.br
+	/var/lib/graphite-web(/.*)
+.br
+	/usr/share/mythtv/data(/.*)?
+.br
+	/usr/share/openca/htdocs(/.*)?
+.br
+	/usr/share/selinux-policy[^/]*/html(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B squid_log_t
+
+	/var/log/squid(/.*)?
+.br
+	/var/log/squidGuard(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B webalizer_tmp_t
+
+
+.br
+.B webalizer_var_lib_t
+
+	/var/lib/webalizer(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -107,11 +221,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), webalizer(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), webalizer(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/winbind_helper_selinux.8 serefpolicy-3.7.19/man/man8/winbind_helper_selinux.8
--- nsaserefpolicy/man/man8/winbind_helper_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/winbind_helper_selinux.8	2013-03-15 11:39:59.584151852 +0100
@@ -0,0 +1,132 @@
+.TH  "winbind_helper_selinux"  "8"  "13-01-04" "winbind_helper" "SELinux Policy documentation for winbind_helper"
+.SH "NAME"
+winbind_helper_selinux \- Security Enhanced Linux Policy for the winbind_helper processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the winbind_helper processes via flexible mandatory access control.
+
+The winbind_helper processes execute with the winbind_helper_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep winbind_helper_t
+
+
+.SH "ENTRYPOINTS"
+
+The winbind_helper_t SELinux type can be entered via the "winbind_helper_exec_t" file type.  The default entrypoint paths for the winbind_helper_t domain are the following:"
+
+/usr/bin/ntlm_auth
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux winbind_helper policy is very flexible allowing users to setup their winbind_helper processes in as secure a method as possible.
+.PP
+The following process types are defined for winbind_helper:
+
+.EX
+.B winbind_helper_t
+.EE
+.PP
+Note:
+.B semanage permissive -a winbind_helper_t
+
+can be used to make the process type winbind_helper_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux winbind_helper policy is very flexible allowing users to setup their winbind_helper processes in as secure a method as possible.
+.PP
+The following file types are defined for winbind_helper:
+
+
+.EX
+.PP
+.B winbind_helper_exec_t
+.EE
+
+- Set files with the winbind_helper_exec_t type, if you want to transition an executable to the winbind_helper_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type winbind_helper_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), winbind_helper(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, winbind_selinux(8), winbind_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/winbind_selinux.8 serefpolicy-3.7.19/man/man8/winbind_selinux.8
--- nsaserefpolicy/man/man8/winbind_selinux.8	2013-03-15 11:41:11.213153486 +0100
+++ serefpolicy-3.7.19/man/man8/winbind_selinux.8	2013-03-15 11:39:55.406151757 +0100
@@ -1,36 +1,73 @@
-.TH  "winbind_selinux"  "8"  "winbind" "dwalsh@redhat.com" "winbind SELinux Policy documentation"
+.TH  "winbind_selinux"  "8"  "13-01-04" "winbind" "SELinux Policy documentation for winbind"
 .SH "NAME"
 winbind_selinux \- Security Enhanced Linux Policy for the winbind processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the winbind processes via flexible mandatory access control.
 
+The winbind processes execute with the winbind_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep winbind_t
+
+
+.SH "ENTRYPOINTS"
+
+The winbind_t SELinux type can be entered via the "winbind_exec_t" file type.  The default entrypoint paths for the winbind_t domain are the following:"
+
+/usr/sbin/winbindd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux winbind policy is very flexible allowing users to setup their winbind processes in as secure a method as possible.
+.PP
+The following process types are defined for winbind:
+
+.EX
+.B winbind_helper_t, winbind_t
+.EE
+.PP
+Note:
+.B semanage permissive -a winbind_t
+
+can be used to make the process type winbind_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  winbind policy is extremely flexible and has several booleans that allow you to manipulate the policy and run winbind with the tightest access possible.
 
 
 .PP
-If you want to allow Apache to use mod_auth_ntlm_winbin, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
+If you want to allow Apache to use mod_auth_ntlm_winbind, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_ntlm_winbind 1
+.EE
+
+.PP
+If you want to allow Apache to use mod_auth_ntlm_winbind, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
 
 .EX
 .B setsebool -P allow_httpd_mod_auth_ntlm_winbind 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux winbind policy is very flexible allowing users to setup their winbind processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for winbind:
 
 
 .EX
 .PP
-.B winbind_exec_t 
+.B winbind_exec_t
 .EE
 
 - Set files with the winbind_exec_t type, if you want to transition an executable to the winbind_t domain.
@@ -38,7 +75,7 @@
 
 .EX
 .PP
-.B winbind_helper_exec_t 
+.B winbind_helper_exec_t
 .EE
 
 - Set files with the winbind_helper_exec_t type, if you want to transition an executable to the winbind_helper_t domain.
@@ -46,7 +83,7 @@
 
 .EX
 .PP
-.B winbind_log_t 
+.B winbind_log_t
 .EE
 
 - Set files with the winbind_log_t type, if you want to treat the data as winbind log data, usually stored under the /var/log directory.
@@ -54,40 +91,196 @@
 
 .EX
 .PP
-.B winbind_var_run_t 
+.B winbind_var_run_t
 .EE
 
 - Set files with the winbind_var_run_t type, if you want to store the winbind files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/cache/samba/winbindd_privileged(/.*)?, /var/lib/samba/winbindd_privileged(/.*)?, /var/run/winbindd(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux winbind policy is very flexible allowing users to setup their winbind processes in as secure a method as possible.
-.PP 
-The following process types are defined for winbind:
+.SH "MANAGED FILES"
 
-.EX
-.B winbind_helper_t, winbind_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type winbind_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B ctdbd_var_lib_t
+
+	/etc/ctdb(/.*)?
+.br
+	/var/ctdb(/.*)?
+.br
+	/var/ctdbd(/.*)?
+.br
+	/var/lib/ctdbd(/.*)?
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B samba_log_t
+
+	/var/log/samba(/.*)?
+.br
+
+.br
+.B samba_secrets_t
+
+	/etc/samba/smbpasswd
+.br
+	/etc/samba/passdb\.tdb
+.br
+	/etc/samba/MACHINE\.SID
+.br
+	/etc/samba/secrets\.tdb
+.br
+
+.br
+.B samba_var_t
+
+	/var/lib/samba(/.*)?
+.br
+	/var/cache/samba(/.*)?
+.br
+	/var/spool/samba(/.*)?
+.br
+	/var/nmbd/unexpected(/.*)?
+.br
+
+.br
+.B smbd_tmp_t
+
+
+.br
+.B smbd_var_run_t
+
+	/var/run/samba(/.*)?
+.br
+	/var/run/smbd\.pid
+.br
+	/var/run/samba/smbd\.pid
+.br
+	/var/run/samba/brlock\.tdb
+.br
+	/var/run/samba/locking\.tdb
+.br
+	/var/run/samba/gencache\.tdb
+.br
+	/var/run/samba/sessionid\.tdb
+.br
+	/var/run/samba/share_info\.tdb
+.br
+	/var/run/samba/connections\.tdb
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B winbind_log_t
+
+
+.br
+.B winbind_var_run_t
+
+	/var/run/winbindd(/.*)?
+.br
+	/var/lib/samba/winbindd_privileged(/.*)?
+.br
+	/var/cache/samba/winbindd_privileged(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,12 +296,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), winbind(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), winbind(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), winbind_helper_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/wine_selinux.8 serefpolicy-3.7.19/man/man8/wine_selinux.8
--- nsaserefpolicy/man/man8/wine_selinux.8	2013-03-15 11:41:12.227153510 +0100
+++ serefpolicy-3.7.19/man/man8/wine_selinux.8	2013-03-15 11:40:06.876152018 +0100
@@ -1,54 +1,81 @@
-.TH  "wine_selinux"  "8"  "wine" "dwalsh@redhat.com" "wine SELinux Policy documentation"
+.TH  "wine_selinux"  "8"  "13-01-04" "wine" "SELinux Policy documentation for wine"
 .SH "NAME"
 wine_selinux \- Security Enhanced Linux Policy for the wine processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the wine processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B wine
-(Wine Is Not an Emulator.  Run Windows programs in Linux)
-processes via flexible mandatory access
-control.  
+The wine processes execute with the wine_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep wine_t
+
+
+.SH "ENTRYPOINTS"
+
+The wine_t SELinux type can be entered via the "mtrr_device_t,wine_exec_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the wine_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/wine.*, /opt/google/picasa(/.*)?/bin/wdi, /opt/google/picasa(/.*)?/bin/wine.*, /opt/google/picasa(/.*)?/bin/msiexec, /opt/google/picasa(/.*)?/bin/notepad, /opt/google/picasa(/.*)?/bin/progman, /opt/google/picasa(/.*)?/bin/regedit, /opt/google/picasa(/.*)?/bin/regsvr32, /opt/google/picasa(/.*)?/Picasa3/.*exe, /opt/google/picasa(/.*)?/bin/uninstaller, /opt/cxoffice/bin/wine.*, /opt/picasa/wine/bin/wine.*, /usr/bin/msiexec, /usr/bin/notepad, /usr/bin/regedit, /usr/bin/regsvr32, /usr/bin/uninstaller, /home/[^/]*/cxoffice/bin/wine.+, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux wine policy is very flexible allowing users to setup their wine processes in as secure a method as possible.
+.PP
+The following process types are defined for wine:
+
+.EX
+.B wine_t
+.EE
+.PP
+Note:
+.B semanage permissive -a wine_t
+
+can be used to make the process type wine_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  wine policy is extremely flexible and has several booleans that allow you to manipulate the policy and run wine with the tightest access possible.
 
 
 .PP
-If you want to ignore wine mmap_zero error, you must turn on the wine_mmap_zero_ignore boolean.
+If you want to ignore wine mmap_zero errors, you must turn on the wine_mmap_zero_ignore boolean.
+
+.EX
+.B setsebool -P wine_mmap_zero_ignore 1
+.EE
+
+.PP
+If you want to ignore wine mmap_zero errors, you must turn on the wine_mmap_zero_ignore boolean.
 
 .EX
 .B setsebool -P wine_mmap_zero_ignore 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux wine policy is very flexible allowing users to setup their wine processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for wine:
 
 
 .EX
 .PP
-.B wine_exec_t 
+.B wine_exec_t
 .EE
 
 - Set files with the wine_exec_t type, if you want to transition an executable to the wine_t domain.
 
-.br
-.TP 5
-Paths: 
-/opt/google/picasa(/.*)?/bin/msiexec, /usr/bin/regedit, /opt/google/picasa(/.*)?/bin/wine.*, /opt/google/picasa(/.*)?/bin/regedit, /opt/google/picasa(/.*)?/bin/notepad, /usr/bin/regsvr32, /usr/bin/notepad, /usr/bin/uninstaller, /opt/google/picasa(/.*)?/bin/uninstaller, /opt/google/picasa(/.*)?/bin/wdi, /opt/google/picasa(/.*)?/bin/regsvr32, /opt/google/picasa(/.*)?/Picasa3/.*exe, /usr/bin/msiexec, /usr/bin/wine.*, /opt/google/picasa(/.*)?/bin/progman, /opt/picasa/wine/bin/wine.*, /opt/cxoffice/bin/wine.*
 
 .EX
 .PP
-.B wine_tmp_t 
+.B wine_tmp_t
 .EE
 
 - Set files with the wine_tmp_t type, if you want to store wine temporary files in the /tmp directories.
@@ -56,28 +83,20 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux wine policy is very flexible allowing users to setup their wine processes in as secure a method as possible.
-.PP 
-The following process types are defined for wine:
+.SH "MANAGED FILES"
 
-.EX
-.B wine_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type wine_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -93,12 +112,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), wine(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), wine(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/wpa_cli_selinux.8 serefpolicy-3.7.19/man/man8/wpa_cli_selinux.8
--- nsaserefpolicy/man/man8/wpa_cli_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/wpa_cli_selinux.8	2013-03-15 11:40:01.346151892 +0100
@@ -0,0 +1,131 @@
+.TH  "wpa_cli_selinux"  "8"  "13-01-04" "wpa_cli" "SELinux Policy documentation for wpa_cli"
+.SH "NAME"
+wpa_cli_selinux \- Security Enhanced Linux Policy for the wpa_cli processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the wpa_cli processes via flexible mandatory access control.
+
+The wpa_cli processes execute with the wpa_cli_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep wpa_cli_t
+
+
+.SH "ENTRYPOINTS"
+
+The wpa_cli_t SELinux type can be entered via the "wpa_cli_exec_t" file type.  The default entrypoint paths for the wpa_cli_t domain are the following:"
+
+/sbin/wpa_cli
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux wpa_cli policy is very flexible allowing users to setup their wpa_cli processes in as secure a method as possible.
+.PP
+The following process types are defined for wpa_cli:
+
+.EX
+.B wpa_cli_t
+.EE
+.PP
+Note:
+.B semanage permissive -a wpa_cli_t
+
+can be used to make the process type wpa_cli_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux wpa_cli policy is very flexible allowing users to setup their wpa_cli processes in as secure a method as possible.
+.PP
+The following file types are defined for wpa_cli:
+
+
+.EX
+.PP
+.B wpa_cli_exec_t
+.EE
+
+- Set files with the wpa_cli_exec_t type, if you want to transition an executable to the wpa_cli_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type wpa_cli_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), wpa_cli(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/xauth_selinux.8 serefpolicy-3.7.19/man/man8/xauth_selinux.8
--- nsaserefpolicy/man/man8/xauth_selinux.8	2013-03-15 11:41:12.177153508 +0100
+++ serefpolicy-3.7.19/man/man8/xauth_selinux.8	2013-03-15 11:40:05.495151987 +0100
@@ -1,49 +1,71 @@
-.TH  "xauth_selinux"  "8"  "xauth" "dwalsh@redhat.com" "xauth SELinux Policy documentation"
+.TH  "xauth_selinux"  "8"  "13-01-04" "xauth" "SELinux Policy documentation for xauth"
 .SH "NAME"
 xauth_selinux \- Security Enhanced Linux Policy for the xauth processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the xauth processes via flexible mandatory access control.
 
+The xauth processes execute with the xauth_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep xauth_t
+
+
+.SH "ENTRYPOINTS"
+
+The xauth_t SELinux type can be entered via the "xauth_exec_t" file type.  The default entrypoint paths for the xauth_t domain are the following:"
+
+/usr/bin/xauth, /usr/X11R6/bin/xauth
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux xauth policy is very flexible allowing users to setup their xauth processes in as secure a method as possible.
+.PP
+The following process types are defined for xauth:
+
+.EX
+.B xauth_t
+.EE
+.PP
+Note:
+.B semanage permissive -a xauth_t
+
+can be used to make the process type xauth_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux xauth policy is very flexible allowing users to setup their xauth processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for xauth:
 
 
 .EX
 .PP
-.B xauth_exec_t 
+.B xauth_exec_t
 .EE
 
 - Set files with the xauth_exec_t type, if you want to transition an executable to the xauth_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/xauth, /usr/X11R6/bin/xauth
 
 .EX
 .PP
-.B xauth_home_t 
+.B xauth_home_t
 .EE
 
 - Set files with the xauth_home_t type, if you want to store xauth files in the users home directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/nxserver/home/\.xauth.*, /root/\.Xauth.*, /var/lib/nxserver/home/\.Xauthority.*, /root/\.serverauth.*, /var/lib/pqsql/\.Xauthority.*, /root/\.xauth.*, /var/lib/pqsql/\.xauth.*
 
 .EX
 .PP
-.B xauth_tmp_t 
+.B xauth_tmp_t
 .EE
 
 - Set files with the xauth_tmp_t type, if you want to store xauth temporary files in the /tmp directories.
@@ -51,28 +73,140 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux xauth policy is very flexible allowing users to setup their xauth processes in as secure a method as possible.
-.PP 
-The following process types are defined for xauth:
+.SH "MANAGED FILES"
 
-.EX
-.B xauth_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type xauth_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_home_t
+
+	/home/[^/]*/.+
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B xauth_home_t
+
+	/root/\.Xauth.*
+.br
+	/root/\.xauth.*
+.br
+	/root/\.serverauth.*
+.br
+	/var/lib/pqsql/\.xauth.*
+.br
+	/var/lib/pqsql/\.Xauthority.*
+.br
+	/var/lib/nxserver/home/\.xauth.*
+.br
+	/var/lib/nxserver/home/\.Xauthority.*
+.br
+	/home/[^/]*/\.xauth.*
+.br
+	/home/[^/]*/\.Xauthority.*
+.br
+	/home/[^/]*/\.serverauth.*
+.br
+
+.br
+.B xauth_tmp_t
+
+
+.br
+.B xdm_tmp_t
+
+	/tmp/\.X11-unix(/.*)?
+.br
+	/tmp/\.ICE-unix(/.*)?
+.br
+	/tmp/\.X0-lock
+.br
+
+.br
+.B xdm_var_run_t
+
+	/usr/lib(64)?/qt-.*/etc/settings(/.*)?
+.br
+	/var/run/[gx]dm\.pid
+.br
+	/etc/kde3?/kdm/backgroundrc
+.br
+	/var/run/kdm(/.*)?
+.br
+	/var/run/gdm(/.*)?
+.br
+	/var/run/slim.*
+.br
+	/var/run/lxdm(/*.)?
+.br
+	/var/run/slim(/.*)?
+.br
+	/var/run/xauth(/.*)?
+.br
+	/var/run/xdmctl(/.*)?
+.br
+	/var/run/lxdm\.pid
+.br
+	/var/run/lxdm\.auth
+.br
+	/var/run/gdm_socket
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +219,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), xauth(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), xauth(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/xdm_selinux.8 serefpolicy-3.7.19/man/man8/xdm_selinux.8
--- nsaserefpolicy/man/man8/xdm_selinux.8	2013-03-15 11:41:12.173153508 +0100
+++ serefpolicy-3.7.19/man/man8/xdm_selinux.8	2013-03-15 11:40:05.266151982 +0100
@@ -1,43 +1,87 @@
-.TH  "xdm_selinux"  "8"  "xdm" "dwalsh@redhat.com" "xdm SELinux Policy documentation"
+.TH  "xdm_selinux"  "8"  "13-01-04" "xdm" "SELinux Policy documentation for xdm"
 .SH "NAME"
 xdm_selinux \- Security Enhanced Linux Policy for the xdm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the xdm processes via flexible mandatory access control.
 
+The xdm processes execute with the xdm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep xdm_t
+
+
+.SH "ENTRYPOINTS"
+
+The xdm_t SELinux type can be entered via the "xdm_exec_t,bin_t" file types.  The default entrypoint paths for the xdm_t domain are the following:"
+
+/usr/(s)?bin/lxdm, /usr/(s)?bin/[xgkw]dm, /usr/(s)?bin/gdm-binary, /usr/(s)?bin/lxdm-binary, /usr/X11R6/bin/[xgkw]dm, /usr/bin/slim, /usr/bin/gpe-dm, /opt/kde3/bin/kdm, /bin/.*, /opt/(.*/)?bin(/.*)?, /usr/(.*/)?Bin(/.*)?, /usr/(.*/)?bin(/.*)?, /usr/(.*/)?sbin(/.*)?, /opt/(.*/)?sbin(/.*)?, /opt/(.*/)?libexec(/.*)?, /sbin/.*, /usr/lib(64)?/dpkg/.+, /usr/lib(64)?/rpm/rpmd, /usr/lib(64)?/rpm/rpmk, /usr/lib(64)?/rpm/rpmv, /usr/lib(64)?/rpm/rpmq, /usr/lib(64)?/ipsec/.*, /usr/lib(.*/)?bin(/.*)?, /usr/lib(64)?/cups(/.*)?, /usr/lib(.*/)?sbin(/.*)?, /usr/lib(64)?/xfce4(/.*)?, /usr/lib(64)?/sftp-server, /usr/lib(64)?/xen/bin(/.*)?, /usr/lib(64)?/courier(/.*)?, /usr/lib(64)?/apt/methods.+, /usr/lib(64)?/pm-utils(/.*)?, /usr/lib(64)?/news/bin(/.*)?, /usr/lib(64)?/cyrus-imapd/.*, /usr/lib(64)?/debug/bin(/.*)?, /usr/lib(64)?/debug/sbin(/.*)?, /usr/lib(64)?/misc/sftp-server, /usr/lib(64)?/portage/bin(/.*)?, /usr/lib(64)?/mailman/bin(/.*)?, /usr/lib(64)?/emacsen-common/.*, /usr/lib(64)?/mailman/mail(/.*)?, /usr/lib(64)?/debug/usr/bin(/.*)?, /usr/lib(64)?/nspluginwrapper/np.*, /usr/lib(64)?/nagios/plugins(/.*)?, /usr/lib(64)?/[^/]*/run-mozilla\.sh, /usr/lib(64)?/debug/usr/sbin(/.*)?, /usr/lib(64)?/vte/gnome-pty-helper, /usr/lib(64)?/gimp/.*/plug-ins(/.*)?, /usr/lib(64)?/netsaint/plugins(/.*)?, /usr/lib(64)?/debug/usr/libexec(/.*)?, /usr/lib(64)?/chromium-browser/chrome, /usr/lib(64)?/ConsoleKit/scripts(/.*)?, /usr/lib(64)?/pgsql/test/regress/.*\.sh, /usr/lib(64)?/[^/]*firefox[^/]*/firefox, /usr/lib(64)?/[^/]*/mozilla-xremote-client, /usr/lib(64)?/ConsoleKit/run-session.d(/.*)?, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird, /usr/lib(64)?/thunderbird.*/mozilla-xremote-client, /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird-bin, /usr/lib(64)?/[^/]*thunderbird[^/]*/open-browser\.sh, /etc/gdm/[^/]+, /etc/gdm/[^/]+/.*, /etc/cron.daily(/.*)?, /etc/cron.hourly(/.*)?, /etc/cron.weekly(/.*)?, /etc/cron.monthly(/.*)?, /usr/lib/.*/program(/.*)?, /lib/udev/[^/]*, /etc/avahi/.*\.action, /usr/lib/qt.*/bin(/.*)?, /usr/lib64/.*/program(/.*)?, /usr/lib/yp/.+, /lib64/udev/[^/]*, /var/ftp/bin(/.*)?, /usr/libexec(/.*)?, /etc/kde/env(/.*)?, /etc/profile.d(/.*)?, /etc/hotplug/.*rc, /etc/hotplug/.*agent, /usr/lib64/yp/.+, /var/qmail/bin(/.*)?, /usr/lib/fence(/.*)?, /etc/X11/xinit(/.*)?, /etc/netplug\.d(/.*)?, /usr/local/lib(64)?/ipsec/.*, /usr/X11R6/lib(64)?/X11/xkb/xkbcomp, /etc/ppp/ip-up\..*, /etc/cipe/ip-up.*, /etc/pm/power\.d(/.*)?, /etc/pm/sleep\.d(/.*)?, /var/mailman/bin(/.*)?, /etc/xen/scripts(/.*)?, /etc/ppp/ipv6-up\..*, /etc/ppp/ip-down\..*, /etc/cipe/ip-down.*, /usr/share/hplip/[^/]*, /etc/vmware-tools(/.*)?, /etc/kde/shutdown(/.*)?, /etc/acpi/actions(/.*)?, /etc/pki/tls/misc(/.*)?, /usr/local/Printer(/.*)?, /usr/local/Brother(/.*)?, /opt/google/chrome(/.*)?, /usr/lib/bluetooth(/.*)?, /usr/lib/ruby/gems(/.*)?/helper-scripts(/.*)?, /usr/share/debconf/.+, /etc/ppp/ipv6-down\..*, /usr/share/cluster/.*\.sh, /usr/share/sectool/.*\.py, /usr/share/ssl/misc(/.*)?, /usr/share/e16/misc(/.*)?, /usr/lib/ccache/bin(/.*)?, /etc/racoon/scripts(/.*)?, /usr/lib/ruby/gems/.*/agents(/.*)?, /usr/local/Brother/(.*/)?inf/setup.*, /usr/local/Brother/(.*/)?inf/brprintconf.*, /usr/share/mc/extfs/.*, /etc/mcelog/triggers(/.*)?, /etc/dhcp/dhclient\.d(/.*)?, /emul/ia32-linux/bin(/.*)?, /usr/lib64/bluetooth(/.*)?, /emul/ia32-linux/usr(/.*)?/bin(/.*)?, /emul/ia32-linux/usr(/.*)?/Bin(/.*)?, /emul/ia32-linux/usr(/.*)?/sbin(/.*)?, /usr/lib/wicd/monitor.py, /usr/share/createrepo(/.*)?, /emul/ia32-linux/sbin(/.*)?, /usr/share/hal/scripts(/.*)?, /usr/lib/vmware-tools/(s)?bin64(/.*)?, /usr/lib/vmware-tools/(s)?bin32(/.*)?, /etc/gdm/XKeepsCrashing[^/]*, /usr/lib/oracle/xe/apps(/.*)?, /usr/share/smolt/client(/.*)?, /usr/share/Modules/init(/.*)?, /usr/share/apr-0/build/[^/]+\.sh, /usr/share/shorewall-perl(/.*)?, /usr/share/shorewall-lite(/.*)?, /usr/share/turboprint/lib(/.*)?, /usr/share/vhostmd/scripts(/.*)?, /usr/share/shorewall6-lite(/.*)?, /usr/share/shorewall-shell(/.*)?, /etc/ConsoleKit/run-seat\.d(/.*)?, /usr/share/sandbox/sandboxX.sh, /usr/share/denyhosts/plugins(/.*)?, /usr/share/denyhosts/scripts(/.*)?, /emul/ia32-linux/usr/libexec(/.*)?, /usr/share/PackageKit/helpers(/.*)?, /etc/ConsoleKit/run-session\.d(/.*)?, /etc/hotplug\.d/default/default.*, /usr/share/cluster/checkquorum.*, /usr/local/linuxprinter/filters(/.*)?, /opt/gutenprint/cups/lib/filter(/.*)?, /usr/share/system-config-network(/netconfig)?/[^/]+\.py, /etc/sysconfig/network-scripts/net.*, /etc/sysconfig/network-scripts/ifup.*, /etc/sysconfig/network-scripts/init.*, /etc/sysconfig/network-scripts/ifdown.*, /opt/OpenPrinting-Gutenprint/cups/lib/filter(/.*)?, /usr/share/gedit-2/plugins/externaltools/tools(/.*)?, /bin, /sbin, /dev/MAKEDEV, /var/qmail/rc, /var/qmail/bin, /etc/mail/make, /bin/mountpoint, /lib/udev/scsi_id, /sbin/mkfs\.cramfs, /etc/xen/qemu-ifup, /etc/sysconfig/init, /etc/apcupsd/commok, /etc/sysconfig/crond, /etc/X11/xdm/Xsetup_0, /etc/init\.d/functions, /etc/apcupsd/changeme, /etc/apcupsd/onbattery, /etc/sysconfig/libvirtd, /etc/apcupsd/offbattery, /etc/apcupsd/apccontrol, /etc/X11/xdm/GiveConsole, /etc/X11/xdm/TakeConsole, /etc/apcupsd/commfailure, /etc/sysconfig/netconsole, /etc/rc\.d/init\.d/functions, /etc/apcupsd/masterconnect, /etc/apcupsd/mastertimeout, /usr/share/pydict/pydict\.py, /usr/share/clamav/clamd-gen, /sbin/insmod_ksymoops_clean, /etc/mgetty\+sendfax/new_fax, /etc/sysconfig/readonly-root, /usr/share/cvs/contrib/rcs2log, /usr/share/hwbrowser/hwbrowser, /usr/share/shorewall/getparams, /usr/share/cluster/SAPDatabase, /usr/share/cluster/SAPInstance, /usr/share/apr-0/build/libtool, /etc/hotplug/hotplug\.functions, /usr/share/texmf/web2c/mktexdir, /usr/share/texmf/web2c/mktexnam, /usr/share/texmf/web2c/mktexupd, /usr/share/shorewall/configpath, /etc/mcelog/cache-error-trigger, /usr/share/shorewall/compiler\.pl, /usr/share/dayplanner/dayplanner, /usr/libexec/openssh/sftp-server, /usr/share/texmf/texconfig/tcfmgr, /usr/share/clamav/freshclam-sleep, /usr/share/cluster/ocf-shellfuncs, /usr/share/cluster/svclib_nfslock, /usr/share/pwlib/make/ptlib-config, /usr/share/fedora-usermgmt/wrapper, /usr/share/printconf/util/print\.py, /etc/pki/tls/certs/make-dummy-cert, /usr/share/rhn/rhn_applet/applet\.py, /usr/share/authconfig/authconfig\.py, /usr/share/spamassassin/sa-update\.cron, /usr/share/selinux/devel/policygentool, /usr/share/gnucash/finance-quote-check, /usr/share/cluster/fence_scsi_check\.pl, /usr/share/switchdesk/switchdesk-gui\.py, /usr/share/authconfig/authconfig-tui\.py, /usr/share/authconfig/authconfig-gtk\.py, /usr/share/gnucash/finance-quote-helper, /usr/share/gitolite/hooks/common/update, /usr/share/system-config-services/gui\.py, /lib/security/pam_krb5/pam_krb5_storetmp, /usr/share/system-config-netboot/pxeos\.py, /usr/share/system-config-printer/applet\.py, /usr/share/system-config-nfs/nfs-export\.py, /usr/share/system-config-selinux/polgen\.py, /lib64/security/pam_krb5/pam_krb5_storetmp, /usr/share/PackageKit/pk-upgrade-distro\.sh, /usr/share/system-config-netboot/pxeboot\.py, /usr/share/rhn/rhn_applet/needed-packages\.py, /usr/share/system-logviewer/system-logviewer\.py, /usr/share/system-config-network/neat-control\.py, /usr/share/system-config-services/serviceconf\.py, /usr/share/hal/device-manager/hal-device-manager, /usr/share/system-config-lvm/system-config-lvm\.py, /usr/share/system-config-nfs/system-config-nfs\.py, /usr/share/system-config-httpd/system-config-httpd, /usr/share/system-config-mouse/system-config-mouse, /usr/share/system-config-users/system-config-users, /usr/share/system-config-date/system-config-date\.py, /usr/share/gitolite/hooks/gitolite-admin/post-update, /usr/share/system-config-samba/system-config-samba\.py, /usr/share/system-config-display/system-config-display, /usr/share/system-config-keyboard/system-config-keyboard, /usr/share/system-config-language/system-config-language, /usr/share/system-config-services/system-config-services, /usr/share/system-config-netboot/system-config-netboot\.py, /usr/share/system-config-selinux/system-config-selinux\.py, /usr/share/system-config-soundcard/system-config-soundcard, /usr/share/system-config-rootpassword/system-config-rootpassword, /usr/share/system-config-securitylevel/system-config-securitylevel\.py
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
+.PP
+The following process types are defined for xdm:
+
+.EX
+.B xdm_t, xdm_dbusd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a xdm_t
+
+can be used to make the process type xdm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  xdm policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xdm with the tightest access possible.
 
 
 .PP
-If you want to allow xdm logins as sysad, you must turn on the xdm_sysadm_login boolean.
+If you want to allows xdm to execute bootloader, you must turn on the xdm_exec_bootloader boolean.
+
+.EX
+.B setsebool -P xdm_exec_bootloader 1
+.EE
+
+.PP
+If you want to allow xdm logins as sysadm, you must turn on the xdm_sysadm_login boolean.
 
 .EX
 .B setsebool -P xdm_sysadm_login 1
 .EE
 
 .PP
-If you want to allows xdm to execute bootloade, you must turn on the xdm_exec_bootloader boolean.
+If you want to allows xdm to execute bootloader, you must turn on the xdm_exec_bootloader boolean.
 
 .EX
 .B setsebool -P xdm_exec_bootloader 1
 .EE
 
+.PP
+If you want to allow xdm logins as sysadm, you must turn on the xdm_sysadm_login boolean.
+
+.EX
+.B setsebool -P xdm_sysadm_login 1
+.EE
+
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for xdm:
 
 
 .EX
 .PP
-.B xdm_etc_t 
+.B xdm_etc_t
 .EE
 
 - Set files with the xdm_etc_t type, if you want to store xdm files in the /etc directories.
@@ -45,19 +89,15 @@
 
 .EX
 .PP
-.B xdm_exec_t 
+.B xdm_exec_t
 .EE
 
 - Set files with the xdm_exec_t type, if you want to transition an executable to the xdm_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/slim, /usr/(s)?bin/lxdm, /usr/X11R6/bin/[xgkw]dm, /usr/(s)?bin/gdm-binary, /usr/(s)?bin/[xgkw]dm, /usr/(s)?bin/lxdm-binary, /usr/bin/gpe-dm, /opt/kde3/bin/kdm
 
 .EX
 .PP
-.B xdm_home_t 
+.B xdm_home_t
 .EE
 
 - Set files with the xdm_home_t type, if you want to store xdm files in the users home directory.
@@ -65,7 +105,7 @@
 
 .EX
 .PP
-.B xdm_lock_t 
+.B xdm_lock_t
 .EE
 
 - Set files with the xdm_lock_t type, if you want to treat the files as xdm lock data, stored under the /var/lock directory
@@ -73,19 +113,15 @@
 
 .EX
 .PP
-.B xdm_log_t 
+.B xdm_log_t
 .EE
 
 - Set files with the xdm_log_t type, if you want to treat the data as xdm log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/slim\.log.*, /var/log/lxdm\.log.*, /var/log/gdm(/.*)?
 
 .EX
 .PP
-.B xdm_rw_etc_t 
+.B xdm_rw_etc_t
 .EE
 
 - Set files with the xdm_rw_etc_t type, if you want to store xdm rw files in the /etc directories.
@@ -93,7 +129,7 @@
 
 .EX
 .PP
-.B xdm_spool_t 
+.B xdm_spool_t
 .EE
 
 - Set files with the xdm_spool_t type, if you want to store the xdm files under the /var/spool directory.
@@ -101,19 +137,15 @@
 
 .EX
 .PP
-.B xdm_tmp_t 
+.B xdm_tmp_t
 .EE
 
 - Set files with the xdm_tmp_t type, if you want to store xdm temporary files in the /tmp directories.
 
-.br
-.TP 5
-Paths: 
-/tmp/\.X0-lock, /tmp/\.X11-unix(/.*)?, /tmp/\.ICE-unix(/.*)?
 
 .EX
 .PP
-.B xdm_tmpfs_t 
+.B xdm_tmpfs_t
 .EE
 
 - Set files with the xdm_tmpfs_t type, if you want to store xdm files on a tmpfs file system.
@@ -121,75 +153,483 @@
 
 .EX
 .PP
-.B xdm_var_lib_t 
+.B xdm_var_lib_t
 .EE
 
 - Set files with the xdm_var_lib_t type, if you want to store the xdm files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/lxdm(/.*)?, /var/lib/[gxkw]dm(/.*)?, /var/cache/gdm(/.*)?
 
 .EX
 .PP
-.B xdm_var_run_t 
+.B xdm_var_run_t
 .EE
 
 - Set files with the xdm_var_run_t type, if you want to store the xdm files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/kdm(/.*)?, /var/run/slim.*, /var/run/gdm(/.*)?, /var/run/lxdm\.auth, /var/run/xauth(/.*)?, /var/run/xdmctl(/.*)?, /var/run/[gx]dm\.pid, /usr/lib(64)?/qt-.*/etc/settings(/.*)?, /var/run/lxdm(/*.)?, /var/run/slim(/.*)?, /var/run/gdm_socket, /etc/kde3?/kdm/backgroundrc, /var/run/lxdm\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for xdm:
 
 .EX
 .TP 5
-.B xdmcp_port_t 
+.B xdmcp_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 177
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
-.PP 
-The following process types are defined for xdm:
-
-.EX
-.B xdm_t, xdm_dbusd_t 
+udp 177
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type xdm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B cgroup_t
+
+	/cgroup(/.*)?
+.br
+
+.br
+.B etc_runtime_t
+
+	/[^/]+
+.br
+	/etc/mtab.*
+.br
+	/etc/blkid(/.*)?
+.br
+	/etc/nologin.*
+.br
+	/etc/smartd\.conf.*
+.br
+	/etc/\.fstab\.hal\..+
+.br
+	/etc/sysconfig/ip6?tables\.save
+.br
+	/halt
+.br
+	/etc/motd
+.br
+	/fastboot
+.br
+	/poweroff
+.br
+	/etc/issue
+.br
+	/etc/cmtab
+.br
+	/forcefsck
+.br
+	/\.autofsck
+.br
+	/\.suspended
+.br
+	/fsckoptions
+.br
+	/etc/HOSTNAME
+.br
+	/\.autorelabel
+.br
+	/etc/securetty
+.br
+	/etc/nohotplug
+.br
+	/etc/issue\.net
+.br
+	/etc/killpower
+.br
+	/etc/ioctl\.save
+.br
+	/etc/reader\.conf
+.br
+	/etc/fstab\.REVOKE
+.br
+	/etc/mtab\.fuselock
+.br
+	/etc/network/ifstate
+.br
+	/etc/sysconfig/hwconf
+.br
+	/etc/ptal/ptal-printd-like
+.br
+	/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf
+.br
+
+.br
+.B faillog_t
+
+	/var/log/btmp.*
+.br
+	/var/log/faillog.*
+.br
+	/var/log/tallylog.*
+.br
+	/var/run/faillock(/.*)?
+.br
+
+.br
+.B fonts_cache_t
+
+	/var/cache/fontconfig(/.*)?
+.br
+
+.br
+.B gconf_home_t
+
+	/root/\.local.*
+.br
+	/root/\.gconf(d)?(/.*)?
+.br
+	/home/[^/]*/\.local.*
+.br
+	/home/[^/]*/\.gconf(d)?(/.*)?
+.br
+
+.br
+.B gnome_home_type
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B initrc_var_run_t
+
+	/var/run/utmp
+.br
+	/var/run/random-seed
+.br
+	/var/run/runlevel\.dir
+.br
+	/var/run/setmixer_flag
+.br
+
+.br
+.B krb5_host_rcache_t
+
+	/var/cache/krb5rcache(/.*)?
+.br
+	/var/tmp/host_0
+.br
+	/var/tmp/HTTP_23
+.br
+
+.br
+.B lastlog_t
+
+	/var/log/lastlog.*
+.br
+
+.br
+.B locale_t
+
+	/usr/lib/locale(/.*)?
+.br
+	/usr/share/locale(/.*)?
+.br
+	/usr/share/zoneinfo(/.*)?
+.br
+	/usr/share/X11/locale(/.*)?
+.br
+	/etc/timezone
+.br
+	/etc/localtime
+.br
+	/etc/sysconfig/clock
+.br
+	/etc/avahi/etc/localtime
+.br
+	/var/empty/sshd/etc/localtime
+.br
+	/var/spool/postfix/etc/localtime
+.br
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B nfs_t
+
+
+.br
+.B pam_var_console_t
+
+	/var/run/console(/.*)?
+.br
+
+.br
+.B pam_var_run_t
+
+	/var/run/sudo(/.*)?
+.br
+	/var/run/sepermit(/.*)?
+.br
+	/var/run/pam_mount(/.*)?
+.br
+
+.br
+.B pcscd_var_run_t
+
+	/var/run/pcscd\.events(/.*)?
+.br
+	/var/run/pcscd\.pid
+.br
+	/var/run/pcscd\.pub
+.br
+	/var/run/pcscd\.comm
+.br
+
+.br
+.B security_t
+
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B user_fonts_t
+
+	/home/[^/]*/\.fonts(/.*)?
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.br
+.B var_auth_t
+
+	/var/lib/abl(/.*)?
+.br
+	/var/lib/pam_ssh(/.*)?
+.br
+	/var/run/pam_ssh(/.*)?
+.br
+	/var/lib/pam_shield(/.*)?
+.br
+	/var/opt/quest/vas/vasd(/.*)?
+.br
+
+.br
+.B wtmp_t
+
+	/var/log/wtmp.*
+.br
+
+.br
+.B xauth_home_t
+
+	/root/\.Xauth.*
+.br
+	/root/\.xauth.*
+.br
+	/root/\.serverauth.*
+.br
+	/var/lib/pqsql/\.xauth.*
+.br
+	/var/lib/pqsql/\.Xauthority.*
+.br
+	/var/lib/nxserver/home/\.xauth.*
+.br
+	/var/lib/nxserver/home/\.Xauthority.*
+.br
+	/home/[^/]*/\.xauth.*
+.br
+	/home/[^/]*/\.Xauthority.*
+.br
+	/home/[^/]*/\.serverauth.*
+.br
+
+.br
+.B xdm_home_t
+
+	/home/[^/]*/\.dmrc.*
+.br
+	/home/[^/]*/\.xsession-errors.*
+.br
+
+.br
+.B xdm_lock_t
+
+
+.br
+.B xdm_log_t
+
+	/var/log/gdm(/.*)?
+.br
+	/var/log/lxdm\.log.*
+.br
+	/var/log/slim\.log.*
+.br
+
+.br
+.B xdm_rw_etc_t
+
+	/etc/X11/wdm(/.*)?
+.br
+
+.br
+.B xdm_spool_t
+
+	/var/spool/gdm(/.*)?
+.br
+
+.br
+.B xdm_tmp_t
+
+	/tmp/\.X11-unix(/.*)?
+.br
+	/tmp/\.ICE-unix(/.*)?
+.br
+	/tmp/\.X0-lock
+.br
+
+.br
+.B xdm_tmpfs_t
+
+
+.br
+.B xdm_var_lib_t
+
+	/var/lib/[gxkw]dm(/.*)?
+.br
+	/var/lib/lxdm(/.*)?
+.br
+	/var/cache/gdm(/.*)?
+.br
+
+.br
+.B xdm_var_run_t
+
+	/usr/lib(64)?/qt-.*/etc/settings(/.*)?
+.br
+	/var/run/[gx]dm\.pid
+.br
+	/etc/kde3?/kdm/backgroundrc
+.br
+	/var/run/kdm(/.*)?
+.br
+	/var/run/gdm(/.*)?
+.br
+	/var/run/slim.*
+.br
+	/var/run/lxdm(/*.)?
+.br
+	/var/run/slim(/.*)?
+.br
+	/var/run/xauth(/.*)?
+.br
+	/var/run/xdmctl(/.*)?
+.br
+	/var/run/lxdm\.pid
+.br
+	/var/run/lxdm\.auth
+.br
+	/var/run/gdm_socket
+.br
+
+.br
+.B xkb_var_lib_t
+
+	/var/lib/xkb(/.*)?
+.br
+	/usr/X11R6/lib/X11/xkb/.*
+.br
+	/usr/X11R6/lib/X11/xkb
+.br
+
+.br
+.B xserver_log_t
+
+	/var/[xgk]dm(/.*)?
+.br
+	/var/log/[kw]dm\.log.*
+.br
+	/usr/var/[xgkw]dm(/.*)?
+.br
+	/var/log/Xorg.*
+.br
+	/var/log/XFree86.*
+.br
+	/var/log/nvidia-installer\.log.*
+.br
+
+.br
+.B xserver_tmpfs_t
+
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -208,12 +648,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), xdm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), xdm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/xenconsoled_selinux.8 serefpolicy-3.7.19/man/man8/xenconsoled_selinux.8
--- nsaserefpolicy/man/man8/xenconsoled_selinux.8	2013-03-15 11:41:12.168153508 +0100
+++ serefpolicy-3.7.19/man/man8/xenconsoled_selinux.8	2013-03-15 11:40:04.545151965 +0100
@@ -1,25 +1,55 @@
-.TH  "xenconsoled_selinux"  "8"  "xenconsoled" "dwalsh@redhat.com" "xenconsoled SELinux Policy documentation"
+.TH  "xenconsoled_selinux"  "8"  "13-01-04" "xenconsoled" "SELinux Policy documentation for xenconsoled"
 .SH "NAME"
 xenconsoled_selinux \- Security Enhanced Linux Policy for the xenconsoled processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the xenconsoled processes via flexible mandatory access control.
 
+The xenconsoled processes execute with the xenconsoled_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep xenconsoled_t
+
+
+.SH "ENTRYPOINTS"
+
+The xenconsoled_t SELinux type can be entered via the "xenconsoled_exec_t" file type.  The default entrypoint paths for the xenconsoled_t domain are the following:"
+
+/usr/sbin/xenconsoled
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux xenconsoled policy is very flexible allowing users to setup their xenconsoled processes in as secure a method as possible.
+.PP
+The following process types are defined for xenconsoled:
+
+.EX
+.B xenconsoled_t
+.EE
+.PP
+Note:
+.B semanage permissive -a xenconsoled_t
+
+can be used to make the process type xenconsoled_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux xenconsoled policy is very flexible allowing users to setup their xenconsoled processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for xenconsoled:
 
 
 .EX
 .PP
-.B xenconsoled_exec_t 
+.B xenconsoled_exec_t
 .EE
 
 - Set files with the xenconsoled_exec_t type, if you want to transition an executable to the xenconsoled_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B xenconsoled_var_run_t 
+.B xenconsoled_var_run_t
 .EE
 
 - Set files with the xenconsoled_var_run_t type, if you want to store the xenconsoled files under the /run directory.
@@ -35,28 +65,92 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux xenconsoled policy is very flexible allowing users to setup their xenconsoled processes in as secure a method as possible.
-.PP 
-The following process types are defined for xenconsoled:
+.SH "MANAGED FILES"
+
+The SELinux process type xenconsoled_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B sysfs_t
+
+	/sys(/.*)?
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B xenconsoled_var_run_t
+
+	/var/run/xenconsoled\.pid
+.br
+
+.br
+.B xend_var_log_t
+
+	/var/log/xen(/.*)?
+.br
+	/var/log/xend\.log.*
+.br
+	/var/log/xend-debug\.log.*
+.br
+	/var/log/xen-hotplug\.log.*
+.br
+
+.br
+.B xenfs_t
 
-.EX
-.B xenconsoled_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +163,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), xenconsoled(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), xenconsoled(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/xend_selinux.8 serefpolicy-3.7.19/man/man8/xend_selinux.8
--- nsaserefpolicy/man/man8/xend_selinux.8	2013-03-15 11:41:11.951153503 +0100
+++ serefpolicy-3.7.19/man/man8/xend_selinux.8	2013-03-15 11:40:00.608151875 +0100
@@ -1,56 +1,73 @@
-.TH  "xend_selinux"  "8"  "xend" "dwalsh@redhat.com" "xend SELinux Policy documentation"
+.TH  "xend_selinux"  "8"  "13-01-04" "xend" "SELinux Policy documentation for xend"
 .SH "NAME"
 xend_selinux \- Security Enhanced Linux Policy for the xend processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the xend processes via flexible mandatory access control.
 
+The xend processes execute with the xend_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  xend policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xend with the tightest access possible.
+.B ps -eZ | grep xend_t
 
 
-.PP
-If you want to allow xen to manage nfs file, you must turn on the xen_use_nfs boolean.
+.SH "ENTRYPOINTS"
 
-.EX
-.B setsebool -P xen_use_nfs 1
-.EE
+The xend_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,xend_exec_t" file types.  The default entrypoint paths for the xend_t domain are the following:"
 
-.SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+/dev/cpu/mtrr, all files on the system, /usr/sbin/xend
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
 .PP
-You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to files.
 SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
-.PP 
-The following file types are defined for xend:
-
+.PP
+The following process types are defined for xend:
 
 .EX
-.PP
-.B xen_devpts_t 
+.B xend_t, xenstored_t, xenconsoled_t
 .EE
+.PP
+Note:
+.B semanage permissive -a xend_t
+
+can be used to make the process type xend_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xend policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xend with the tightest access possible.
 
-- Set files with the xen_devpts_t type, if you want to treat the files as xen devpts data.
 
+.PP
+If you want to allow xen to manage nfs files, you must turn on the xen_use_nfs boolean.
 
 .EX
+.B setsebool -P xen_use_nfs 1
+.EE
+
 .PP
-.B xen_image_t 
+If you want to allow xen to manage nfs files, you must turn on the xen_use_nfs boolean.
+
+.EX
+.B setsebool -P xen_use_nfs 1
 .EE
 
-- Set files with the xen_image_t type, if you want to treat the files as xen image data.
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
+.PP
+The following file types are defined for xend:
 
-.br
-.TP 5
-Paths: 
-/xen(/.*)?, /var/lib/xen/images(/.*)?
 
 .EX
 .PP
-.B xend_exec_t 
+.B xend_exec_t
 .EE
 
 - Set files with the xend_exec_t type, if you want to transition an executable to the xend_t domain.
@@ -58,7 +75,7 @@
 
 .EX
 .PP
-.B xend_tmp_t 
+.B xend_tmp_t
 .EE
 
 - Set files with the xend_tmp_t type, if you want to store xend temporary files in the /tmp directories.
@@ -66,87 +83,67 @@
 
 .EX
 .PP
-.B xend_var_lib_t 
+.B xend_var_lib_t
 .EE
 
 - Set files with the xend_var_lib_t type, if you want to store the xend files under the /var/lib directory.
 
-.br
-.TP 5
-Paths: 
-/var/lib/xen(/.*)?, /var/lib/xend(/.*)?
 
 .EX
 .PP
-.B xend_var_log_t 
+.B xend_var_log_t
 .EE
 
 - Set files with the xend_var_log_t type, if you want to treat the data as xend var log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/xend\.log, /var/log/xen(/.*)?, /var/log/xen-hotplug\.log, /var/log/xend-debug\.log
 
 .EX
 .PP
-.B xend_var_run_t 
+.B xend_var_run_t
 .EE
 
 - Set files with the xend_var_run_t type, if you want to store the xend files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/xenner(/.*)?, /var/run/xend(/.*)?, /var/run/xend\.pid
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for xend:
 
 .EX
 .TP 5
-.B xen_port_t 
+.B xen_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 8002
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
-.PP 
-The following process types are defined for xend:
+.SH "MANAGED FILES"
 
-.EX
-.B xend_t, xenstored_t, xenconsoled_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type xend_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -165,12 +162,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), xend(8), semanage(8), restorecon(8), chcon(1)
-, setsebool(8)
\ No newline at end of file
+selinux(8), xend(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8), xenconsoled_selinux(8), xenstored_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/xenstored_selinux.8 serefpolicy-3.7.19/man/man8/xenstored_selinux.8
--- nsaserefpolicy/man/man8/xenstored_selinux.8	2013-03-15 11:41:12.006153504 +0100
+++ serefpolicy-3.7.19/man/man8/xenstored_selinux.8	2013-03-15 11:40:00.988151884 +0100
@@ -1,25 +1,55 @@
-.TH  "xenstored_selinux"  "8"  "xenstored" "dwalsh@redhat.com" "xenstored SELinux Policy documentation"
+.TH  "xenstored_selinux"  "8"  "13-01-04" "xenstored" "SELinux Policy documentation for xenstored"
 .SH "NAME"
 xenstored_selinux \- Security Enhanced Linux Policy for the xenstored processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the xenstored processes via flexible mandatory access control.
 
+The xenstored processes execute with the xenstored_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep xenstored_t
+
+
+.SH "ENTRYPOINTS"
+
+The xenstored_t SELinux type can be entered via the "xenstored_exec_t" file type.  The default entrypoint paths for the xenstored_t domain are the following:"
+
+/usr/sbin/xenstored
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux xenstored policy is very flexible allowing users to setup their xenstored processes in as secure a method as possible.
+.PP
+The following process types are defined for xenstored:
+
+.EX
+.B xenstored_t
+.EE
+.PP
+Note:
+.B semanage permissive -a xenstored_t
+
+can be used to make the process type xenstored_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux xenstored policy is very flexible allowing users to setup their xenstored processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for xenstored:
 
 
 .EX
 .PP
-.B xenstored_exec_t 
+.B xenstored_exec_t
 .EE
 
 - Set files with the xenstored_exec_t type, if you want to transition an executable to the xenstored_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B xenstored_tmp_t 
+.B xenstored_tmp_t
 .EE
 
 - Set files with the xenstored_tmp_t type, if you want to store xenstored temporary files in the /tmp directories.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B xenstored_var_lib_t 
+.B xenstored_var_lib_t
 .EE
 
 - Set files with the xenstored_var_lib_t type, if you want to store the xenstored files under the /var/lib directory.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B xenstored_var_log_t 
+.B xenstored_var_log_t
 .EE
 
 - Set files with the xenstored_var_log_t type, if you want to treat the data as xenstored var log data, usually stored under the /var/log directory.
@@ -51,40 +81,98 @@
 
 .EX
 .PP
-.B xenstored_var_run_t 
+.B xenstored_var_run_t
 .EE
 
 - Set files with the xenstored_var_run_t type, if you want to store the xenstored files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/xenstore\.pid, /var/run/xenstored(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux xenstored policy is very flexible allowing users to setup their xenstored processes in as secure a method as possible.
-.PP 
-The following process types are defined for xenstored:
+.SH "MANAGED FILES"
 
-.EX
-.B xenstored_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type xenstored_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B xenfs_t
+
+
+.br
+.B xenstored_tmp_t
+
+
+.br
+.B xenstored_var_lib_t
+
+	/var/lib/xenstored(/.*)?
+.br
+
+.br
+.B xenstored_var_log_t
+
+
+.br
+.B xenstored_var_run_t
+
+	/var/run/xenstored(/.*)?
+.br
+	/var/run/xenstore\.pid
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -97,11 +185,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), xenstored(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), xenstored(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/xfs_selinux.8 serefpolicy-3.7.19/man/man8/xfs_selinux.8
--- nsaserefpolicy/man/man8/xfs_selinux.8	2013-03-15 11:41:12.148153508 +0100
+++ serefpolicy-3.7.19/man/man8/xfs_selinux.8	2013-03-15 11:40:04.256151959 +0100
@@ -1,43 +1,63 @@
-.TH  "xfs_selinux"  "8"  "xfs" "dwalsh@redhat.com" "xfs SELinux Policy documentation"
+.TH  "xfs_selinux"  "8"  "13-01-04" "xfs" "SELinux Policy documentation for xfs"
 .SH "NAME"
 xfs_selinux \- Security Enhanced Linux Policy for the xfs processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the xfs processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B xfs
-(X Windows Font Server)
-processes via flexible mandatory access
-control.  
+The xfs processes execute with the xfs_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep xfs_t
+
+
+.SH "ENTRYPOINTS"
+
+The xfs_t SELinux type can be entered via the "xfs_exec_t" file type.  The default entrypoint paths for the xfs_t domain are the following:"
+
+/usr/bin/xfs, /usr/bin/xfstt, /usr/X11R6/bin/xfs, /usr/X11R6/bin/xfs-xtt
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux xfs policy is very flexible allowing users to setup their xfs processes in as secure a method as possible.
+.PP
+The following process types are defined for xfs:
+
+.EX
+.B xfs_t
+.EE
+.PP
+Note:
+.B semanage permissive -a xfs_t
+
+can be used to make the process type xfs_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux xfs policy is very flexible allowing users to setup their xfs processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for xfs:
 
 
 .EX
 .PP
-.B xfs_exec_t 
+.B xfs_exec_t
 .EE
 
 - Set files with the xfs_exec_t type, if you want to transition an executable to the xfs_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/xfstt, /usr/X11R6/bin/xfs-xtt, /usr/bin/xfs, /usr/X11R6/bin/xfs
 
 .EX
 .PP
-.B xfs_tmp_t 
+.B xfs_tmp_t
 .EE
 
 - Set files with the xfs_tmp_t type, if you want to store xfs temporary files in the /tmp directories.
@@ -45,7 +65,7 @@
 
 .EX
 .PP
-.B xfs_var_run_t 
+.B xfs_var_run_t
 .EE
 
 - Set files with the xfs_var_run_t type, if you want to store the xfs files under the /run directory.
@@ -53,51 +73,91 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux xfs policy is very flexible allowing users to setup their xfs processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for xfs:
 
 .EX
 .TP 5
-.B xfs_port_t 
+.B xfs_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 7100
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux xfs policy is very flexible allowing users to setup their xfs processes in as secure a method as possible.
-.PP 
-The following process types are defined for xfs:
+.SH "MANAGED FILES"
+
+The SELinux process type xfs_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B xfs_var_run_t
 
-.EX
-.B xfs_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -113,11 +173,13 @@
 can also be used to manipulate the port definitions
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), xfs(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), xfs(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/xguest_selinux.8 serefpolicy-3.7.19/man/man8/xguest_selinux.8
--- nsaserefpolicy/man/man8/xguest_selinux.8	2013-03-15 11:41:11.510153493 +0100
+++ serefpolicy-3.7.19/man/man8/xguest_selinux.8	2013-03-15 11:39:56.018151771 +0100
@@ -1,6 +1,6 @@
 .TH  "xguest_selinux"  "8"  "xguest" "mgrepl@redhat.com" "xguest SELinux Policy documentation"
 .SH "NAME"
-xguest_u \- \fBLeast priviledged X user\fP - Security Enhanced Linux Policy 
+xguest_u \- \fBLeast priviledged X user\fP - Security Enhanced Linux Policy
 
 .SH DESCRIPTION
 
@@ -10,9 +10,9 @@
 
 The SELinux user will usually login to a system with a context that looks like:
 
-.B xguest_u:xguest_r:xguest_u:s0-s0:c0.c1023
+.B xguest_u:xguest_r:xguest_t:s0-s0:c0.c1023
 
-Linux users are automatically assigned an SELinux users at login.  
+Linux users are automatically assigned an SELinux users at login.
 Login programs use the SELinux User to assign initial context to the user's shell.
 
 SELinux policy uses the context to control the user's access.
@@ -36,8 +36,6 @@
 
 .SH SUDO
 
-The SELinux type xguest_t is not allowed to execute sudo. 
-
 .SH X WINDOWS LOGIN
 
 The SELinux user xguest_u is able to X Windows login.
@@ -47,28 +45,22 @@
 .TP
 The SELinux user xguest_u is able to connect to the following tcp ports.
 
-.B dns_port_t: 53
-
 .B ldap_port_t: 389,636,3268
 
-.B soundd_port_t: 8000,9433,16001
-
-.B ipp_port_t: 631,8610-8614
-
-.B transproxy_port_t: 8081
+.B dns_port_t: 53
 
 .B all ports with out defined types
 
 .B ftp_port_t: 21,990
 
-.B kerberos_port_t: 88,750
-
 .B speech_port_t: 8036
 
 .B http_cache_port_t: 3128,8080,8118,8123,10001-10010
 
 .B http_port_t: 80,443,488,8008,8009,8443
 
+.B kerberos_port_t: 88,750
+
 .B ocsp_port_t: 9080
 
 .B flash_port_t: 843,1935
@@ -77,92 +69,89 @@
 
 .B jabber_client_port_t: 5222,5223
 
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  xguest_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xguest_t with the tightest access possible.
+.B soundd_port_t: 8000,9433,16001
 
+.B ipp_port_t: 631,8610-8614
 
-.PP
-If you want to allow xguest to configure Network Manager and connect to apache ports, you must turn on the xguest_connect_network boolean.
+.B transproxy_port_t: 8081
 
-.EX
-.B setsebool -P xguest_connect_network 1
-.EE
+.TP
+The SELinux user xguest_u is able to connect to the following tcp ports.
 
-.PP
-If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+.B ldap_port_t: 389,636,3268
 
-.EX
-.B setsebool -P allow_user_mysql_connect 1
-.EE
+.B dns_port_t: 53
 
-.PP
-If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+.B all ports with out defined types
 
-.EX
-.B setsebool -P user_setrlimit 1
-.EE
+.B ftp_port_t: 21,990
 
-.PP
-If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+.B speech_port_t: 8036
 
-.EX
-.B setsebool -P user_ping 1
-.EE
+.B http_cache_port_t: 3128,8080,8118,8123,10001-10010
 
-.PP
-If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+.B http_port_t: 80,443,488,8008,8009,8443
 
-.EX
-.B setsebool -P user_ttyfile_stat 1
-.EE
+.B kerberos_port_t: 88,750
 
-.PP
-If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+.B ocsp_port_t: 9080
+
+.B flash_port_t: 843,1935
+
+.B pulseaudio_port_t: 4713
+
+.B jabber_client_port_t: 5222,5223
+
+.B soundd_port_t: 8000,9433,16001
+
+.B ipp_port_t: 631,8610-8614
+
+.B transproxy_port_t: 8081
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xguest policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xguest with the tightest access possible.
 
-.EX
-.B setsebool -P user_direct_dri 1
-.EE
 
 .PP
-If you want to allow xguest to use blue tooth devices, you must turn on the xguest_use_bluetooth boolean.
+If you want to allow xguest users to mount removable media, you must turn on the xguest_mount_media boolean.
 
 .EX
-.B setsebool -P xguest_use_bluetooth 1
+.B setsebool -P xguest_mount_media 1
 .EE
 
 .PP
-If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+If you want to allow xguest to configure Network Manager and connect to apache ports, you must turn on the xguest_connect_network boolean.
 
 .EX
-.B setsebool -P user_rw_noexattrfile 1
+.B setsebool -P xguest_connect_network 1
 .EE
 
 .PP
-If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+If you want to allow xguest to use blue tooth devices, you must turn on the xguest_use_bluetooth boolean.
 
 .EX
-.B setsebool -P user_tcp_server 1
+.B setsebool -P xguest_use_bluetooth 1
 .EE
 
 .PP
-If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+If you want to allow xguest users to mount removable media, you must turn on the xguest_mount_media boolean.
 
 .EX
-.B setsebool -P user_direct_mouse 1
+.B setsebool -P xguest_mount_media 1
 .EE
 
 .PP
-If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+If you want to allow xguest to configure Network Manager and connect to apache ports, you must turn on the xguest_connect_network boolean.
 
 .EX
-.B setsebool -P allow_user_postgresql_connect 1
+.B setsebool -P xguest_connect_network 1
 .EE
 
 .PP
-If you want to allow xguest users to mount removable media, you must turn on the xguest_mount_media boolean.
+If you want to allow xguest to use blue tooth devices, you must turn on the xguest_use_bluetooth boolean.
 
 .EX
-.B setsebool -P xguest_mount_media 1
+.B setsebool -P xguest_use_bluetooth 1
 .EE
 
 .SH HOME_EXEC
@@ -181,7 +170,7 @@
 
 Execute the following to see the types that the SELinux user xguest_t can execute without transitioning:
 
-.B sesearch -A -s xguest_t -c file -p execute_no_trans
+.B search -A -s xguest_t -c file -p execute_no_trans
 
 .TP
 
@@ -189,22 +178,163 @@
 
 Execute the following to see the types that the SELinux user xguest_t can execute and transition:
 
-.B $ sesearch -A -s xguest_t -c process -p transition
+.B $ search -A -s xguest_t -c process -p transition
 
 
-.SH "COMMANDS"
+.SH "MANAGED FILES"
+
+The SELinux process type xguest_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B anon_inodefs_t
+
+
+.br
+.B auth_cache_t
+
+	/var/cache/coolkey(/.*)?
+.br
+
+.br
+.B chrome_sandbox_tmpfs_t
+
+
+.br
+.B httpd_user_content_t
+
+	/home/[^/]*/((www)|(web)|(public_html))(/.+)?
+.br
+
+.br
+.B httpd_user_htaccess_t
+
 
-.B semanage login
-can also be used to manipulate the Linux User to SELinux User mappings
+.br
+.B httpd_user_ra_content_t
 
-.B semanage user
-can also be used to manipulate SELinux user definitions.
 
-.B system-config-selinux 
+.br
+.B httpd_user_rw_content_t
+
+
+.br
+.B httpd_user_script_exec_t
+
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B noxattrfs
+
+	all files on file systems which do not support extended attributes
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B usbfs_t
+
+
+.br
+.B user_fonts_cache_t
+
+	/home/[^/]*/\.fonts/auto(/.*)?
+.br
+	/home/[^/]*/\.fontconfig(/.*)?
+.br
+	/home/[^/]*/\.fonts\.cache-.*
+.br
+
+.br
+.B user_home_type
+
+	all user home files
+.br
+
+.br
+.B user_tmp_t
+
+	/tmp/gconfd-.*
+.br
+
+.br
+.B user_tmpfs_t
+
+	/dev/shm/mono.*
+.br
+	/dev/shm/pulse-shm.*
+.br
+
+.br
+.B xdm_tmp_t
+
+	/tmp/\.X11-unix(/.*)?
+.br
+	/tmp/\.ICE-unix(/.*)?
+.br
+	/tmp/\.X0-lock
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genuserman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), semanage(8).
+selinux(8), xguest(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/xm_selinux.8 serefpolicy-3.7.19/man/man8/xm_selinux.8
--- nsaserefpolicy/man/man8/xm_selinux.8	2013-03-15 11:41:11.970153504 +0100
+++ serefpolicy-3.7.19/man/man8/xm_selinux.8	2013-03-15 11:40:00.892151882 +0100
@@ -1,58 +1,178 @@
-.TH  "xm_selinux"  "8"  "xm" "dwalsh@redhat.com" "xm SELinux Policy documentation"
+.TH  "xm_selinux"  "8"  "13-01-04" "xm" "SELinux Policy documentation for xm"
 .SH "NAME"
 xm_selinux \- Security Enhanced Linux Policy for the xm processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the xm processes via flexible mandatory access control.
 
+The xm processes execute with the xm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep xm_t
+
+
+.SH "ENTRYPOINTS"
+
+The xm_t SELinux type can be entered via the "xm_exec_t" file type.  The default entrypoint paths for the xm_t domain are the following:"
+
+/usr/sbin/xm, /usr/bin/virsh
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux xm policy is very flexible allowing users to setup their xm processes in as secure a method as possible.
+.PP
+The following process types are defined for xm:
+
+.EX
+.B xm_t, xm_ssh_t
+.EE
+.PP
+Note:
+.B semanage permissive -a xm_t
+
+can be used to make the process type xm_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux xm policy is very flexible allowing users to setup their xm processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for xm:
 
 
 .EX
 .PP
-.B xm_exec_t 
+.B xm_exec_t
 .EE
 
 - Set files with the xm_exec_t type, if you want to transition an executable to the xm_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/virsh, /usr/sbin/xm
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux xm policy is very flexible allowing users to setup their xm processes in as secure a method as possible.
-.PP 
-The following process types are defined for xm:
+.SH "MANAGED FILES"
+
+The SELinux process type xm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B ssh_home_t
+
+	/root/\.ssh(/.*)?
+.br
+	/var/lib/gitolite(3)?/\.ssh(/.*)?
+.br
+	/var/lib/openshift/[^/]+/\.ssh(/.*)?
+.br
+	/var/lib/amanda/\.ssh(/.*)?
+.br
+	/var/lib/stickshift/[^/]+/\.ssh(/.*)?
+.br
+	/root/\.shosts
+.br
+	/home/[^/]*/\.ssh(/.*)?
+.br
+	/home/[^/]*/\.shosts
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B vhostmd_tmpfs_t
+
+
+.br
+.B virt_etc_rw_t
+
+	/etc/xen/.*/.*
+.br
+	/etc/xen/[^/]*
+.br
+	/etc/libvirt/.*/.*
+.br
+	/etc/libvirt/[^/]*
+.br
+
+.br
+.B virt_etc_t
+
+	/etc/xen/[^/]*
+.br
+	/etc/libvirt/[^/]*
+.br
+	/etc/xen
+.br
+	/etc/libvirt
+.br
+
+.br
+.B virt_image_type
+
+	all virtual image files
+.br
+
+.br
+.B xend_var_lib_t
+
+	/var/lib/xen(/.*)?
+.br
+	/var/lib/xend(/.*)?
+.br
+
+.br
+.B xenfs_t
 
-.EX
-.B xm_t, xm_ssh_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -65,11 +185,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), xm(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), xm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/xserver_selinux.8 serefpolicy-3.7.19/man/man8/xserver_selinux.8
--- nsaserefpolicy/man/man8/xserver_selinux.8	2013-03-15 11:41:12.224153509 +0100
+++ serefpolicy-3.7.19/man/man8/xserver_selinux.8	2013-03-15 11:40:06.749152015 +0100
@@ -1,80 +1,117 @@
-.TH  "xserver_selinux"  "8"  "xserver" "dwalsh@redhat.com" "xserver SELinux Policy documentation"
+.TH  "xserver_selinux"  "8"  "13-01-04" "xserver" "SELinux Policy documentation for xserver"
 .SH "NAME"
 xserver_selinux \- Security Enhanced Linux Policy for the xserver processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the xserver processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B xserver
-(X Windows Server)
-processes via flexible mandatory access
-control.  
+The xserver processes execute with the xserver_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep xserver_t
+
+
+.SH "ENTRYPOINTS"
+
+The xserver_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,xserver_exec_t,file_type" file types.  The default entrypoint paths for the xserver_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/Xair, /usr/bin/Xorg, /usr/bin/Xephyr, /usr/X11R6/bin/X, /usr/X11R6/bin/Xorg, /usr/X11R6/bin/Xipaq, /usr/X11R6/bin/XFree86, /usr/X11R6/bin/Xwrapper, /etc/init\.d/xfree86-common, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
+.PP
+The following process types are defined for xserver:
+
+.EX
+.B xserver_t
+.EE
+.PP
+Note:
+.B semanage permissive -a xserver_t
+
+can be used to make the process type xserver_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  xserver policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xserver with the tightest access possible.
 
 
 .PP
-If you want to allow virtual machine to interact with the xserve, you must turn on the virt_use_xserver boolean.
+If you want to support X userspace object manager, you must turn on the xserver_object_manager boolean.
+
+.EX
+.B setsebool -P xserver_object_manager 1
+.EE
+
+.PP
+If you want to allow virtual machine to interact with the xserver, you must turn on the virt_use_xserver boolean.
 
 .EX
 .B setsebool -P virt_use_xserver 1
 .EE
 
 .PP
-If you want to support X userspace object manage, you must turn on the xserver_object_manager boolean.
+If you want to allows XServer to execute writable memory, you must turn on the allow_xserver_execmem boolean.
+
+.EX
+.B setsebool -P allow_xserver_execmem 1
+.EE
+
+.PP
+If you want to support X userspace object manager, you must turn on the xserver_object_manager boolean.
 
 .EX
 .B setsebool -P xserver_object_manager 1
 .EE
 
 .PP
-If you want to allows XServer to execute writable memor, you must turn on the allow_xserver_execmem boolean.
+If you want to allow virtual machine to interact with the xserver, you must turn on the virt_use_xserver boolean.
+
+.EX
+.B setsebool -P virt_use_xserver 1
+.EE
+
+.PP
+If you want to allows XServer to execute writable memory, you must turn on the allow_xserver_execmem boolean.
 
 .EX
 .B setsebool -P allow_xserver_execmem 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for xserver:
 
 
 .EX
 .PP
-.B xserver_exec_t 
+.B xserver_exec_t
 .EE
 
 - Set files with the xserver_exec_t type, if you want to transition an executable to the xserver_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/bin/Xair, /usr/bin/Xephyr, /usr/X11R6/bin/Xwrapper, /usr/X11R6/bin/XFree86, /etc/init\.d/xfree86-common, /usr/X11R6/bin/Xorg, /usr/X11R6/bin/Xipaq, /usr/bin/Xorg, /usr/X11R6/bin/X
 
 .EX
 .PP
-.B xserver_log_t 
+.B xserver_log_t
 .EE
 
 - Set files with the xserver_log_t type, if you want to treat the data as xserver log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/usr/var/[xgkw]dm(/.*)?, /var/[xgk]dm(/.*)?, /var/log/nvidia-installer\.log.*, /var/log/XFree86.*, /var/log/Xorg.*, /var/log/[kw]dm\.log.*
 
 .EX
 .PP
-.B xserver_tmpfs_t 
+.B xserver_tmpfs_t
 .EE
 
 - Set files with the xserver_tmpfs_t type, if you want to store xserver files on a tmpfs file system.
@@ -82,7 +119,7 @@
 
 .EX
 .PP
-.B xserver_var_lib_t 
+.B xserver_var_lib_t
 .EE
 
 - Set files with the xserver_var_lib_t type, if you want to store the xserver files under the /var/lib directory.
@@ -90,63 +127,51 @@
 
 .EX
 .PP
-.B xserver_var_run_t 
+.B xserver_var_run_t
 .EE
 
 - Set files with the xserver_var_run_t type, if you want to store the xserver files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/xorg(/.*)?, /var/run/video.rom
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for xserver:
 
 .EX
 .TP 5
-.B xserver_port_t 
+.B xserver_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 6000-6150
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
-.PP 
-The following process types are defined for xserver:
+.SH "MANAGED FILES"
 
-.EX
-.B xserver_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type xserver_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -165,12 +190,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), xserver(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), xserver(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/ypbind_selinux.8 serefpolicy-3.7.19/man/man8/ypbind_selinux.8
--- nsaserefpolicy/man/man8/ypbind_selinux.8	2013-03-15 11:41:12.105153507 +0100
+++ serefpolicy-3.7.19/man/man8/ypbind_selinux.8	2013-03-15 11:40:03.288151937 +0100
@@ -1,48 +1,81 @@
-.TH  "ypbind_selinux"  "8"  "ypbind" "dwalsh@redhat.com" "ypbind SELinux Policy documentation"
+.TH  "ypbind_selinux"  "8"  "13-01-04" "ypbind" "SELinux Policy documentation for ypbind"
 .SH "NAME"
 ypbind_selinux \- Security Enhanced Linux Policy for the ypbind processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ypbind processes via flexible mandatory access control.
 
+The ypbind processes execute with the ypbind_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ypbind_t
+
+
+.SH "ENTRYPOINTS"
+
+The ypbind_t SELinux type can be entered via the "ypbind_exec_t" file type.  The default entrypoint paths for the ypbind_t domain are the following:"
+
+/sbin/ypbind, /usr/sbin/ypbind
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ypbind policy is very flexible allowing users to setup their ypbind processes in as secure a method as possible.
+.PP
+The following process types are defined for ypbind:
+
+.EX
+.B ypbind_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ypbind_t
+
+can be used to make the process type ypbind_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  ypbind policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ypbind with the tightest access possible.
 
 
 .PP
-If you want to allow system to run with NI, you must turn on the allow_ypbind boolean.
+If you want to allow system to run with NIS, you must turn on the allow_ypbind boolean.
+
+.EX
+.B setsebool -P allow_ypbind 1
+.EE
+
+.PP
+If you want to allow system to run with NIS, you must turn on the allow_ypbind boolean.
 
 .EX
 .B setsebool -P allow_ypbind 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ypbind policy is very flexible allowing users to setup their ypbind processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ypbind:
 
 
 .EX
 .PP
-.B ypbind_exec_t 
+.B ypbind_exec_t
 .EE
 
 - Set files with the ypbind_exec_t type, if you want to transition an executable to the ypbind_t domain.
 
-.br
-.TP 5
-Paths: 
-/sbin/ypbind, /usr/sbin/ypbind
 
 .EX
 .PP
-.B ypbind_initrc_exec_t 
+.B ypbind_initrc_exec_t
 .EE
 
 - Set files with the ypbind_initrc_exec_t type, if you want to transition an executable to the ypbind_initrc_t domain.
@@ -50,7 +83,7 @@
 
 .EX
 .PP
-.B ypbind_tmp_t 
+.B ypbind_tmp_t
 .EE
 
 - Set files with the ypbind_tmp_t type, if you want to store ypbind temporary files in the /tmp directories.
@@ -58,7 +91,7 @@
 
 .EX
 .PP
-.B ypbind_var_run_t 
+.B ypbind_var_run_t
 .EE
 
 - Set files with the ypbind_var_run_t type, if you want to store the ypbind files under the /run directory.
@@ -66,28 +99,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ypbind policy is very flexible allowing users to setup their ypbind processes in as secure a method as possible.
-.PP 
-The following process types are defined for ypbind:
+.SH "MANAGED FILES"
 
-.EX
-.B ypbind_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ypbind_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_yp_t
+
+	/var/yp(/.*)?
+.br
+
+.br
+.B ypbind_tmp_t
+
+
+.br
+.B ypbind_var_run_t
+
+	/var/run/ypbind.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -103,12 +188,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ypbind(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ypbind(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/yppasswdd_selinux.8 serefpolicy-3.7.19/man/man8/yppasswdd_selinux.8
--- nsaserefpolicy/man/man8/yppasswdd_selinux.8	2013-03-15 11:41:12.171153508 +0100
+++ serefpolicy-3.7.19/man/man8/yppasswdd_selinux.8	2013-03-15 11:40:04.799151971 +0100
@@ -1,25 +1,55 @@
-.TH  "yppasswdd_selinux"  "8"  "yppasswdd" "dwalsh@redhat.com" "yppasswdd SELinux Policy documentation"
+.TH  "yppasswdd_selinux"  "8"  "13-01-04" "yppasswdd" "SELinux Policy documentation for yppasswdd"
 .SH "NAME"
 yppasswdd_selinux \- Security Enhanced Linux Policy for the yppasswdd processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the yppasswdd processes via flexible mandatory access control.
 
+The yppasswdd processes execute with the yppasswdd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep yppasswdd_t
+
+
+.SH "ENTRYPOINTS"
+
+The yppasswdd_t SELinux type can be entered via the "yppasswdd_exec_t" file type.  The default entrypoint paths for the yppasswdd_t domain are the following:"
+
+/usr/sbin/rpc\.yppasswdd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux yppasswdd policy is very flexible allowing users to setup their yppasswdd processes in as secure a method as possible.
+.PP
+The following process types are defined for yppasswdd:
+
+.EX
+.B yppasswdd_t
+.EE
+.PP
+Note:
+.B semanage permissive -a yppasswdd_t
+
+can be used to make the process type yppasswdd_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux yppasswdd policy is very flexible allowing users to setup their yppasswdd processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for yppasswdd:
 
 
 .EX
 .PP
-.B yppasswdd_exec_t 
+.B yppasswdd_exec_t
 .EE
 
 - Set files with the yppasswdd_exec_t type, if you want to transition an executable to the yppasswdd_t domain.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B yppasswdd_var_run_t 
+.B yppasswdd_var_run_t
 .EE
 
 - Set files with the yppasswdd_var_run_t type, if you want to store the yppasswdd files under the /run directory.
@@ -35,28 +65,94 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux yppasswdd policy is very flexible allowing users to setup their yppasswdd processes in as secure a method as possible.
-.PP 
-The following process types are defined for yppasswdd:
+.SH "MANAGED FILES"
 
-.EX
-.B yppasswdd_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type yppasswdd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B shadow_t
+
+	/etc/shadow.*
+.br
+	/etc/gshadow.*
+.br
+	/var/db/shadow.*
+.br
+	/etc/passwd\.adjunct.*
+.br
+	/etc/\.pwd\.lock
+.br
+	/etc/group\.lock
+.br
+	/etc/passwd\.lock
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_yp_t
+
+	/var/yp(/.*)?
+.br
+
+.br
+.B yppasswdd_var_run_t
+
+	/var/run/yppass.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -69,11 +165,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), yppasswdd(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), yppasswdd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ypserv_selinux.8 serefpolicy-3.7.19/man/man8/ypserv_selinux.8
--- nsaserefpolicy/man/man8/ypserv_selinux.8	2013-03-15 11:41:12.098153507 +0100
+++ serefpolicy-3.7.19/man/man8/ypserv_selinux.8	2013-03-15 11:40:02.669151922 +0100
@@ -1,25 +1,55 @@
-.TH  "ypserv_selinux"  "8"  "ypserv" "dwalsh@redhat.com" "ypserv SELinux Policy documentation"
+.TH  "ypserv_selinux"  "8"  "13-01-04" "ypserv" "SELinux Policy documentation for ypserv"
 .SH "NAME"
 ypserv_selinux \- Security Enhanced Linux Policy for the ypserv processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ypserv processes via flexible mandatory access control.
 
+The ypserv processes execute with the ypserv_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ypserv_t
+
+
+.SH "ENTRYPOINTS"
+
+The ypserv_t SELinux type can be entered via the "ypserv_exec_t" file type.  The default entrypoint paths for the ypserv_t domain are the following:"
+
+/usr/sbin/ypserv
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ypserv policy is very flexible allowing users to setup their ypserv processes in as secure a method as possible.
+.PP
+The following process types are defined for ypserv:
+
+.EX
+.B ypserv_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ypserv_t
+
+can be used to make the process type ypserv_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ypserv policy is very flexible allowing users to setup their ypserv processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ypserv:
 
 
 .EX
 .PP
-.B ypserv_conf_t 
+.B ypserv_conf_t
 .EE
 
 - Set files with the ypserv_conf_t type, if you want to treat the files as ypserv configuration data, usually stored under the /etc directory.
@@ -27,7 +57,7 @@
 
 .EX
 .PP
-.B ypserv_exec_t 
+.B ypserv_exec_t
 .EE
 
 - Set files with the ypserv_exec_t type, if you want to transition an executable to the ypserv_t domain.
@@ -35,7 +65,7 @@
 
 .EX
 .PP
-.B ypserv_tmp_t 
+.B ypserv_tmp_t
 .EE
 
 - Set files with the ypserv_tmp_t type, if you want to store ypserv temporary files in the /tmp directories.
@@ -43,7 +73,7 @@
 
 .EX
 .PP
-.B ypserv_var_run_t 
+.B ypserv_var_run_t
 .EE
 
 - Set files with the ypserv_var_run_t type, if you want to store the ypserv files under the /run directory.
@@ -51,28 +81,80 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ypserv policy is very flexible allowing users to setup their ypserv processes in as secure a method as possible.
-.PP 
-The following process types are defined for ypserv:
+.SH "MANAGED FILES"
 
-.EX
-.B ypserv_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ypserv_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_yp_t
+
+	/var/yp(/.*)?
+.br
+
+.br
+.B ypserv_tmp_t
+
+
+.br
+.B ypserv_var_run_t
+
+	/var/run/ypserv.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -85,11 +167,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ypserv(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ypserv(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/ypxfr_selinux.8 serefpolicy-3.7.19/man/man8/ypxfr_selinux.8
--- nsaserefpolicy/man/man8/ypxfr_selinux.8	2013-03-15 11:41:12.031153505 +0100
+++ serefpolicy-3.7.19/man/man8/ypxfr_selinux.8	2013-03-15 11:40:01.634151899 +0100
@@ -1,37 +1,63 @@
-.TH  "ypxfr_selinux"  "8"  "ypxfr" "dwalsh@redhat.com" "ypxfr SELinux Policy documentation"
+.TH  "ypxfr_selinux"  "8"  "13-01-04" "ypxfr" "SELinux Policy documentation for ypxfr"
 .SH "NAME"
 ypxfr_selinux \- Security Enhanced Linux Policy for the ypxfr processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the ypxfr processes via flexible mandatory access control.
 
+The ypxfr processes execute with the ypxfr_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
+
+.B ps -eZ | grep ypxfr_t
+
+
+.SH "ENTRYPOINTS"
+
+The ypxfr_t SELinux type can be entered via the "ypxfr_exec_t" file type.  The default entrypoint paths for the ypxfr_t domain are the following:"
+
+/usr/lib/yp/ypxfr, /usr/lib64/yp/ypxfr, /usr/sbin/rpc\.ypxfrd
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux ypxfr policy is very flexible allowing users to setup their ypxfr processes in as secure a method as possible.
+.PP
+The following process types are defined for ypxfr:
+
+.EX
+.B ypxfr_t
+.EE
+.PP
+Note:
+.B semanage permissive -a ypxfr_t
+
+can be used to make the process type ypxfr_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux ypxfr policy is very flexible allowing users to setup their ypxfr processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for ypxfr:
 
 
 .EX
 .PP
-.B ypxfr_exec_t 
+.B ypxfr_exec_t
 .EE
 
 - Set files with the ypxfr_exec_t type, if you want to transition an executable to the ypxfr_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/lib/yp/ypxfr, /usr/sbin/rpc\.ypxfrd, /usr/lib64/yp/ypxfr
 
 .EX
 .PP
-.B ypxfr_var_run_t 
+.B ypxfr_var_run_t
 .EE
 
 - Set files with the ypxfr_var_run_t type, if you want to store the ypxfr files under the /run directory.
@@ -39,28 +65,76 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux ypxfr policy is very flexible allowing users to setup their ypxfr processes in as secure a method as possible.
-.PP 
-The following process types are defined for ypxfr:
+.SH "MANAGED FILES"
 
-.EX
-.B ypxfr_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type ypxfr_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B var_yp_t
+
+	/var/yp(/.*)?
+.br
+
+.br
+.B ypxfr_var_run_t
+
+	/var/run/ypxfrd.*
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -73,11 +147,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), ypxfr(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), ypxfr(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/zabbix_selinux.8 serefpolicy-3.7.19/man/man8/zabbix_selinux.8
--- nsaserefpolicy/man/man8/zabbix_selinux.8	2013-03-15 11:41:11.838153501 +0100
+++ serefpolicy-3.7.19/man/man8/zabbix_selinux.8	2013-03-15 11:39:57.834151812 +0100
@@ -1,31 +1,55 @@
-.TH  "zabbix_selinux"  "8"  "zabbix" "dwalsh@redhat.com" "zabbix SELinux Policy documentation"
+.TH  "zabbix_selinux"  "8"  "13-01-04" "zabbix" "SELinux Policy documentation for zabbix"
 .SH "NAME"
 zabbix_selinux \- Security Enhanced Linux Policy for the zabbix processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the zabbix processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B zabbix
-(Distributed infrastructure monitoring)
-processes via flexible mandatory access
-control.  
+The zabbix processes execute with the zabbix_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep zabbix_t
+
+
+.SH "ENTRYPOINTS"
+
+The zabbix_t SELinux type can be entered via the "zabbix_exec_t" file type.  The default entrypoint paths for the zabbix_t domain are the following:"
+
+/usr/bin/zabbix_server
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zabbix policy is very flexible allowing users to setup their zabbix processes in as secure a method as possible.
+.PP
+The following process types are defined for zabbix:
+
+.EX
+.B zabbix_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zabbix_t
+
+can be used to make the process type zabbix_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux zabbix policy is very flexible allowing users to setup their zabbix processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for zabbix:
 
 
 .EX
 .PP
-.B zabbix_exec_t 
+.B zabbix_exec_t
 .EE
 
 - Set files with the zabbix_exec_t type, if you want to transition an executable to the zabbix_t domain.
@@ -33,7 +57,7 @@
 
 .EX
 .PP
-.B zabbix_initrc_exec_t 
+.B zabbix_initrc_exec_t
 .EE
 
 - Set files with the zabbix_initrc_exec_t type, if you want to transition an executable to the zabbix_initrc_t domain.
@@ -41,7 +65,7 @@
 
 .EX
 .PP
-.B zabbix_log_t 
+.B zabbix_log_t
 .EE
 
 - Set files with the zabbix_log_t type, if you want to treat the data as zabbix log data, usually stored under the /var/log directory.
@@ -49,7 +73,7 @@
 
 .EX
 .PP
-.B zabbix_var_run_t 
+.B zabbix_var_run_t
 .EE
 
 - Set files with the zabbix_var_run_t type, if you want to store the zabbix files under the /run directory.
@@ -57,28 +81,76 @@
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux zabbix policy is very flexible allowing users to setup their zabbix processes in as secure a method as possible.
-.PP 
-The following process types are defined for zabbix:
+.SH "MANAGED FILES"
 
-.EX
-.B zabbix_t 
-.EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+The SELinux process type zabbix_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B zabbix_log_t
+
+	/var/log/zabbix(/.*)?
+.br
+
+.br
+.B zabbix_var_run_t
+
+	/var/run/zabbix(/.*)?
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -91,11 +163,13 @@
 can also be used to enable/disable/install/remove policy modules.
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), zabbix(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), zabbix(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/man/man8/zarafa_deliver_selinux.8 serefpolicy-3.7.19/man/man8/zarafa_deliver_selinux.8
--- nsaserefpolicy/man/man8/zarafa_deliver_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/zarafa_deliver_selinux.8	2013-03-15 11:40:05.930151997 +0100
@@ -0,0 +1,120 @@
+.TH  "zarafa_deliver_selinux"  "8"  "13-01-04" "zarafa_deliver" "SELinux Policy documentation for zarafa_deliver"
+.SH "NAME"
+zarafa_deliver_selinux \- Security Enhanced Linux Policy for the zarafa_deliver processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the zarafa_deliver processes via flexible mandatory access control.
+
+The zarafa_deliver processes execute with the zarafa_deliver_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep zarafa_deliver_t
+
+
+.SH "ENTRYPOINTS"
+
+The zarafa_deliver_t SELinux type can be entered via the "mtrr_device_t,zarafa_deliver_exec_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the zarafa_deliver_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/zarafa-dagent, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zarafa_deliver policy is very flexible allowing users to setup their zarafa_deliver processes in as secure a method as possible.
+.PP
+The following process types are defined for zarafa_deliver:
+
+.EX
+.B zarafa_deliver_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zarafa_deliver_t
+
+can be used to make the process type zarafa_deliver_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux zarafa_deliver policy is very flexible allowing users to setup their zarafa_deliver processes in as secure a method as possible.
+.PP
+The following file types are defined for zarafa_deliver:
+
+
+.EX
+.PP
+.B zarafa_deliver_exec_t
+.EE
+
+- Set files with the zarafa_deliver_exec_t type, if you want to transition an executable to the zarafa_deliver_t domain.
+
+
+.EX
+.PP
+.B zarafa_deliver_log_t
+.EE
+
+- Set files with the zarafa_deliver_log_t type, if you want to treat the data as zarafa deliver log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_deliver_tmp_t
+.EE
+
+- Set files with the zarafa_deliver_tmp_t type, if you want to store zarafa deliver temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zarafa_deliver_var_run_t
+.EE
+
+- Set files with the zarafa_deliver_var_run_t type, if you want to store the zarafa deliver files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type zarafa_deliver_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), zarafa_deliver(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, zarafa_gateway_selinux(8), zarafa_ical_selinux(8), zarafa_indexer_selinux(8), zarafa_monitor_selinux(8), zarafa_server_selinux(8), zarafa_spooler_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/zarafa_gateway_selinux.8 serefpolicy-3.7.19/man/man8/zarafa_gateway_selinux.8
--- nsaserefpolicy/man/man8/zarafa_gateway_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/zarafa_gateway_selinux.8	2013-03-15 11:40:05.746151993 +0100
@@ -0,0 +1,112 @@
+.TH  "zarafa_gateway_selinux"  "8"  "13-01-04" "zarafa_gateway" "SELinux Policy documentation for zarafa_gateway"
+.SH "NAME"
+zarafa_gateway_selinux \- Security Enhanced Linux Policy for the zarafa_gateway processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the zarafa_gateway processes via flexible mandatory access control.
+
+The zarafa_gateway processes execute with the zarafa_gateway_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep zarafa_gateway_t
+
+
+.SH "ENTRYPOINTS"
+
+The zarafa_gateway_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,zarafa_gateway_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the zarafa_gateway_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/zarafa-gateway, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zarafa_gateway policy is very flexible allowing users to setup their zarafa_gateway processes in as secure a method as possible.
+.PP
+The following process types are defined for zarafa_gateway:
+
+.EX
+.B zarafa_gateway_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zarafa_gateway_t
+
+can be used to make the process type zarafa_gateway_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux zarafa_gateway policy is very flexible allowing users to setup their zarafa_gateway processes in as secure a method as possible.
+.PP
+The following file types are defined for zarafa_gateway:
+
+
+.EX
+.PP
+.B zarafa_gateway_exec_t
+.EE
+
+- Set files with the zarafa_gateway_exec_t type, if you want to transition an executable to the zarafa_gateway_t domain.
+
+
+.EX
+.PP
+.B zarafa_gateway_log_t
+.EE
+
+- Set files with the zarafa_gateway_log_t type, if you want to treat the data as zarafa gateway log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_gateway_var_run_t
+.EE
+
+- Set files with the zarafa_gateway_var_run_t type, if you want to store the zarafa gateway files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type zarafa_gateway_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), zarafa_gateway(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, zarafa_deliver_selinux(8), zarafa_ical_selinux(8), zarafa_indexer_selinux(8), zarafa_monitor_selinux(8), zarafa_server_selinux(8), zarafa_spooler_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/zarafa_ical_selinux.8 serefpolicy-3.7.19/man/man8/zarafa_ical_selinux.8
--- nsaserefpolicy/man/man8/zarafa_ical_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/zarafa_ical_selinux.8	2013-03-15 11:40:03.205151935 +0100
@@ -0,0 +1,112 @@
+.TH  "zarafa_ical_selinux"  "8"  "13-01-04" "zarafa_ical" "SELinux Policy documentation for zarafa_ical"
+.SH "NAME"
+zarafa_ical_selinux \- Security Enhanced Linux Policy for the zarafa_ical processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the zarafa_ical processes via flexible mandatory access control.
+
+The zarafa_ical processes execute with the zarafa_ical_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep zarafa_ical_t
+
+
+.SH "ENTRYPOINTS"
+
+The zarafa_ical_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,filesystem_type,file_type,zarafa_ical_exec_t" file types.  The default entrypoint paths for the zarafa_ical_t domain are the following:"
+
+/dev/cpu/mtrr, all files on the system, /usr/bin/zarafa-ical
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zarafa_ical policy is very flexible allowing users to setup their zarafa_ical processes in as secure a method as possible.
+.PP
+The following process types are defined for zarafa_ical:
+
+.EX
+.B zarafa_ical_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zarafa_ical_t
+
+can be used to make the process type zarafa_ical_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux zarafa_ical policy is very flexible allowing users to setup their zarafa_ical processes in as secure a method as possible.
+.PP
+The following file types are defined for zarafa_ical:
+
+
+.EX
+.PP
+.B zarafa_ical_exec_t
+.EE
+
+- Set files with the zarafa_ical_exec_t type, if you want to transition an executable to the zarafa_ical_t domain.
+
+
+.EX
+.PP
+.B zarafa_ical_log_t
+.EE
+
+- Set files with the zarafa_ical_log_t type, if you want to treat the data as zarafa ical log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_ical_var_run_t
+.EE
+
+- Set files with the zarafa_ical_var_run_t type, if you want to store the zarafa ical files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type zarafa_ical_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), zarafa_ical(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, zarafa_deliver_selinux(8), zarafa_gateway_selinux(8), zarafa_indexer_selinux(8), zarafa_monitor_selinux(8), zarafa_server_selinux(8), zarafa_spooler_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/zarafa_indexer_selinux.8 serefpolicy-3.7.19/man/man8/zarafa_indexer_selinux.8
--- nsaserefpolicy/man/man8/zarafa_indexer_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/zarafa_indexer_selinux.8	2013-03-15 11:39:55.027151748 +0100
@@ -0,0 +1,120 @@
+.TH  "zarafa_indexer_selinux"  "8"  "13-01-04" "zarafa_indexer" "SELinux Policy documentation for zarafa_indexer"
+.SH "NAME"
+zarafa_indexer_selinux \- Security Enhanced Linux Policy for the zarafa_indexer processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the zarafa_indexer processes via flexible mandatory access control.
+
+The zarafa_indexer processes execute with the zarafa_indexer_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep zarafa_indexer_t
+
+
+.SH "ENTRYPOINTS"
+
+The zarafa_indexer_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,zarafa_indexer_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the zarafa_indexer_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/zarafa-indexer, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zarafa_indexer policy is very flexible allowing users to setup their zarafa_indexer processes in as secure a method as possible.
+.PP
+The following process types are defined for zarafa_indexer:
+
+.EX
+.B zarafa_indexer_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zarafa_indexer_t
+
+can be used to make the process type zarafa_indexer_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux zarafa_indexer policy is very flexible allowing users to setup their zarafa_indexer processes in as secure a method as possible.
+.PP
+The following file types are defined for zarafa_indexer:
+
+
+.EX
+.PP
+.B zarafa_indexer_exec_t
+.EE
+
+- Set files with the zarafa_indexer_exec_t type, if you want to transition an executable to the zarafa_indexer_t domain.
+
+
+.EX
+.PP
+.B zarafa_indexer_log_t
+.EE
+
+- Set files with the zarafa_indexer_log_t type, if you want to treat the data as zarafa indexer log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_indexer_tmp_t
+.EE
+
+- Set files with the zarafa_indexer_tmp_t type, if you want to store zarafa indexer temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zarafa_indexer_var_run_t
+.EE
+
+- Set files with the zarafa_indexer_var_run_t type, if you want to store the zarafa indexer files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type zarafa_indexer_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), zarafa_indexer(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, zarafa_deliver_selinux(8), zarafa_gateway_selinux(8), zarafa_ical_selinux(8), zarafa_monitor_selinux(8), zarafa_server_selinux(8), zarafa_spooler_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/zarafa_monitor_selinux.8 serefpolicy-3.7.19/man/man8/zarafa_monitor_selinux.8
--- nsaserefpolicy/man/man8/zarafa_monitor_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/zarafa_monitor_selinux.8	2013-03-15 11:39:58.869151836 +0100
@@ -0,0 +1,112 @@
+.TH  "zarafa_monitor_selinux"  "8"  "13-01-04" "zarafa_monitor" "SELinux Policy documentation for zarafa_monitor"
+.SH "NAME"
+zarafa_monitor_selinux \- Security Enhanced Linux Policy for the zarafa_monitor processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the zarafa_monitor processes via flexible mandatory access control.
+
+The zarafa_monitor processes execute with the zarafa_monitor_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep zarafa_monitor_t
+
+
+.SH "ENTRYPOINTS"
+
+The zarafa_monitor_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,zarafa_monitor_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the zarafa_monitor_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/zarafa-monitor, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zarafa_monitor policy is very flexible allowing users to setup their zarafa_monitor processes in as secure a method as possible.
+.PP
+The following process types are defined for zarafa_monitor:
+
+.EX
+.B zarafa_monitor_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zarafa_monitor_t
+
+can be used to make the process type zarafa_monitor_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux zarafa_monitor policy is very flexible allowing users to setup their zarafa_monitor processes in as secure a method as possible.
+.PP
+The following file types are defined for zarafa_monitor:
+
+
+.EX
+.PP
+.B zarafa_monitor_exec_t
+.EE
+
+- Set files with the zarafa_monitor_exec_t type, if you want to transition an executable to the zarafa_monitor_t domain.
+
+
+.EX
+.PP
+.B zarafa_monitor_log_t
+.EE
+
+- Set files with the zarafa_monitor_log_t type, if you want to treat the data as zarafa monitor log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_monitor_var_run_t
+.EE
+
+- Set files with the zarafa_monitor_var_run_t type, if you want to store the zarafa monitor files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type zarafa_monitor_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), zarafa_monitor(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, zarafa_deliver_selinux(8), zarafa_gateway_selinux(8), zarafa_ical_selinux(8), zarafa_indexer_selinux(8), zarafa_server_selinux(8), zarafa_spooler_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/zarafa_server_selinux.8 serefpolicy-3.7.19/man/man8/zarafa_server_selinux.8
--- nsaserefpolicy/man/man8/zarafa_server_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/zarafa_server_selinux.8	2013-03-15 11:39:58.443151826 +0100
@@ -0,0 +1,120 @@
+.TH  "zarafa_server_selinux"  "8"  "13-01-04" "zarafa_server" "SELinux Policy documentation for zarafa_server"
+.SH "NAME"
+zarafa_server_selinux \- Security Enhanced Linux Policy for the zarafa_server processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the zarafa_server processes via flexible mandatory access control.
+
+The zarafa_server processes execute with the zarafa_server_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep zarafa_server_t
+
+
+.SH "ENTRYPOINTS"
+
+The zarafa_server_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,zarafa_server_exec_t,sysctl_type,filesystem_type,file_type" file types.  The default entrypoint paths for the zarafa_server_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/zarafa-server, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zarafa_server policy is very flexible allowing users to setup their zarafa_server processes in as secure a method as possible.
+.PP
+The following process types are defined for zarafa_server:
+
+.EX
+.B zarafa_server_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zarafa_server_t
+
+can be used to make the process type zarafa_server_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux zarafa_server policy is very flexible allowing users to setup their zarafa_server processes in as secure a method as possible.
+.PP
+The following file types are defined for zarafa_server:
+
+
+.EX
+.PP
+.B zarafa_server_exec_t
+.EE
+
+- Set files with the zarafa_server_exec_t type, if you want to transition an executable to the zarafa_server_t domain.
+
+
+.EX
+.PP
+.B zarafa_server_log_t
+.EE
+
+- Set files with the zarafa_server_log_t type, if you want to treat the data as zarafa server log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_server_tmp_t
+.EE
+
+- Set files with the zarafa_server_tmp_t type, if you want to store zarafa server temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zarafa_server_var_run_t
+.EE
+
+- Set files with the zarafa_server_var_run_t type, if you want to store the zarafa server files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type zarafa_server_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), zarafa_server(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, zarafa_deliver_selinux(8), zarafa_gateway_selinux(8), zarafa_ical_selinux(8), zarafa_indexer_selinux(8), zarafa_monitor_selinux(8), zarafa_spooler_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/zarafa_spooler_selinux.8 serefpolicy-3.7.19/man/man8/zarafa_spooler_selinux.8
--- nsaserefpolicy/man/man8/zarafa_spooler_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/zarafa_spooler_selinux.8	2013-03-15 11:39:57.601151807 +0100
@@ -0,0 +1,112 @@
+.TH  "zarafa_spooler_selinux"  "8"  "13-01-04" "zarafa_spooler" "SELinux Policy documentation for zarafa_spooler"
+.SH "NAME"
+zarafa_spooler_selinux \- Security Enhanced Linux Policy for the zarafa_spooler processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the zarafa_spooler processes via flexible mandatory access control.
+
+The zarafa_spooler processes execute with the zarafa_spooler_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep zarafa_spooler_t
+
+
+.SH "ENTRYPOINTS"
+
+The zarafa_spooler_t SELinux type can be entered via the "mtrr_device_t,unlabeled_t,proc_type,sysctl_type,zarafa_spooler_exec_t,filesystem_type,file_type" file types.  The default entrypoint paths for the zarafa_spooler_t domain are the following:"
+
+/dev/cpu/mtrr, /usr/bin/zarafa-spooler, all files on the system
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zarafa_spooler policy is very flexible allowing users to setup their zarafa_spooler processes in as secure a method as possible.
+.PP
+The following process types are defined for zarafa_spooler:
+
+.EX
+.B zarafa_spooler_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zarafa_spooler_t
+
+can be used to make the process type zarafa_spooler_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux zarafa_spooler policy is very flexible allowing users to setup their zarafa_spooler processes in as secure a method as possible.
+.PP
+The following file types are defined for zarafa_spooler:
+
+
+.EX
+.PP
+.B zarafa_spooler_exec_t
+.EE
+
+- Set files with the zarafa_spooler_exec_t type, if you want to transition an executable to the zarafa_spooler_t domain.
+
+
+.EX
+.PP
+.B zarafa_spooler_log_t
+.EE
+
+- Set files with the zarafa_spooler_log_t type, if you want to treat the data as zarafa spooler log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_spooler_var_run_t
+.EE
+
+- Set files with the zarafa_spooler_var_run_t type, if you want to store the zarafa spooler files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type zarafa_spooler_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B file_type
+
+	all files on the system
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), zarafa_spooler(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
+, zarafa_deliver_selinux(8), zarafa_gateway_selinux(8), zarafa_ical_selinux(8), zarafa_indexer_selinux(8), zarafa_monitor_selinux(8), zarafa_server_selinux(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/zebra_selinux.8 serefpolicy-3.7.19/man/man8/zebra_selinux.8
--- nsaserefpolicy/man/man8/zebra_selinux.8	2013-03-15 11:41:11.877153502 +0100
+++ serefpolicy-3.7.19/man/man8/zebra_selinux.8	2013-03-15 11:39:58.986151838 +0100
@@ -1,90 +1,105 @@
-.TH  "zebra_selinux"  "8"  "zebra" "dwalsh@redhat.com" "zebra SELinux Policy documentation"
+.TH  "zebra_selinux"  "8"  "13-01-04" "zebra" "SELinux Policy documentation for zebra"
 .SH "NAME"
 zebra_selinux \- Security Enhanced Linux Policy for the zebra processes
 .SH "DESCRIPTION"
 
+Security-Enhanced Linux secures the zebra processes via flexible mandatory access control.
 
-SELinux Linux secures
-.B zebra
-(Zebra border gateway protocol network routing service)
-processes via flexible mandatory access
-control.  
+The zebra processes execute with the zebra_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
 
+For example:
 
+.B ps -eZ | grep zebra_t
+
+
+.SH "ENTRYPOINTS"
+
+The zebra_t SELinux type can be entered via the "zebra_exec_t" file type.  The default entrypoint paths for the zebra_t domain are the following:"
+
+/usr/sbin/rip.*, /usr/sbin/ospf.*, /usr/sbin/bgpd, /usr/sbin/zebra
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
+.PP
+The following process types are defined for zebra:
+
+.EX
+.B zebra_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zebra_t
+
+can be used to make the process type zebra_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
 
 .SH BOOLEANS
 SELinux policy is customizable based on least access required.  zebra policy is extremely flexible and has several booleans that allow you to manipulate the policy and run zebra with the tightest access possible.
 
 
 .PP
-If you want to allow zebra daemon to write it configuration file, you must turn on the allow_zebra_write_config boolean.
+If you want to allow zebra daemon to write it configuration files, you must turn on the allow_zebra_write_config boolean.
+
+.EX
+.B setsebool -P allow_zebra_write_config 1
+.EE
+
+.PP
+If you want to allow zebra daemon to write it configuration files, you must turn on the allow_zebra_write_config boolean.
 
 .EX
 .B setsebool -P allow_zebra_write_config 1
 .EE
 
 .SH FILE CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
+SELinux requires files to have an extended attribute to define the file type.
 .PP
 You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-Policy governs the access confined processes have to these files. 
+Policy governs the access confined processes have to these files.
 SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
-.PP 
+.PP
 The following file types are defined for zebra:
 
 
 .EX
 .PP
-.B zebra_conf_t 
+.B zebra_conf_t
 .EE
 
 - Set files with the zebra_conf_t type, if you want to treat the files as zebra configuration data, usually stored under the /etc directory.
 
-.br
-.TP 5
-Paths: 
-/etc/zebra(/.*)?, /etc/quagga(/.*)?
 
 .EX
 .PP
-.B zebra_exec_t 
+.B zebra_exec_t
 .EE
 
 - Set files with the zebra_exec_t type, if you want to transition an executable to the zebra_t domain.
 
-.br
-.TP 5
-Paths: 
-/usr/sbin/zebra, /usr/sbin/rip.*, /usr/sbin/bgpd, /usr/sbin/ospf.*
 
 .EX
 .PP
-.B zebra_initrc_exec_t 
+.B zebra_initrc_exec_t
 .EE
 
 - Set files with the zebra_initrc_exec_t type, if you want to transition an executable to the zebra_initrc_t domain.
 
-.br
-.TP 5
-Paths: 
-/etc/rc\.d/init\.d/ripngd, /etc/rc\.d/init\.d/zebra, /etc/rc\.d/init\.d/ripd, /etc/rc\.d/init\.d/bgpd, /etc/rc\.d/init\.d/ospf6d, /etc/rc\.d/init\.d/ospfd
 
 .EX
 .PP
-.B zebra_log_t 
+.B zebra_log_t
 .EE
 
 - Set files with the zebra_log_t type, if you want to treat the data as zebra log data, usually stored under the /var/log directory.
 
-.br
-.TP 5
-Paths: 
-/var/log/zebra(/.*)?, /var/log/quagga(/.*)?
 
 .EX
 .PP
-.B zebra_tmp_t 
+.B zebra_tmp_t
 .EE
 
 - Set files with the zebra_tmp_t type, if you want to store zebra temporary files in the /tmp directories.
@@ -92,63 +107,123 @@
 
 .EX
 .PP
-.B zebra_var_run_t 
+.B zebra_var_run_t
 .EE
 
 - Set files with the zebra_var_run_t type, if you want to store the zebra files under the /run directory.
 
-.br
-.TP 5
-Paths: 
-/var/run/\.zserv, /var/run/\.zebra, /var/run/quagga(/.*)?
 
 .PP
 Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
-.B semanage fcontext 
+.B semanage fcontext
 command.  This will modify the SELinux labeling database.  You will need to use
 .B restorecon
 to apply the labels.
 
 .SH PORT TYPES
-SELinux defines port types to represent TCP and UDP ports. 
+SELinux defines port types to represent TCP and UDP ports.
 .PP
-You can see the types associated with a port by using the following command: 
+You can see the types associated with a port by using the following command:
 
 .B semanage port -l
 
 .PP
-Policy governs the access confined processes have to these ports. 
+Policy governs the access confined processes have to these ports.
 SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
-.PP 
+.PP
 The following port types are defined for zebra:
 
 .EX
 .TP 5
-.B zebra_port_t 
+.B zebra_port_t
 .TP 10
 .EE
 
 
 Default Defined Ports:
-tcp 8021
+tcp 2600-2604,2606
 .EE
-.SH PROCESS TYPES
-SELinux defines process types (domains) for each process running on the system
-.PP
-You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
-.PP
-Policy governs the access confined processes have to files. 
-SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
-.PP 
-The following process types are defined for zebra:
-
-.EX
-.B zebra_t 
+udp 2600-2604,2606
 .EE
-.PP
-Note: 
-.B semanage permissive -a PROCESS_TYPE 
-can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+.SH "MANAGED FILES"
+
+The SELinux process type zebra_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B root_t
+
+	/
+.br
+	/initrd
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.br
+.B zebra_conf_t
+
+	/etc/zebra(/.*)?
+.br
+	/etc/quagga(/.*)?
+.br
+
+.br
+.B zebra_log_t
+
+	/var/log/zebra(/.*)?
+.br
+	/var/log/quagga(/.*)?
+.br
+
+.br
+.B zebra_var_run_t
+
+	/var/run/quagga(/.*)?
+.br
+	/var/run/\.zebra
+.br
+	/var/run/\.zserv
+.br
 
 .SH "COMMANDS"
 .B semanage fcontext
@@ -167,12 +242,14 @@
 can also be used to manipulate the booleans
 
 .PP
-.B system-config-selinux 
+.B system-config-selinux
 is a GUI tool available to customize SELinux policy settings.
 
-.SH AUTHOR	
-This manual page was autogenerated by genman.py.
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
 
 .SH "SEE ALSO"
-selinux(8), zebra(8), semanage(8), restorecon(8), chcon(1)
+selinux(8), zebra(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
 , setsebool(8)
\ No newline at end of file
diff -Nur nsaserefpolicy/man/man8/zos_remote_selinux.8 serefpolicy-3.7.19/man/man8/zos_remote_selinux.8
--- nsaserefpolicy/man/man8/zos_remote_selinux.8	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/man/man8/zos_remote_selinux.8	2013-03-15 11:40:03.712151946 +0100
@@ -0,0 +1,131 @@
+.TH  "zos_remote_selinux"  "8"  "13-01-04" "zos_remote" "SELinux Policy documentation for zos_remote"
+.SH "NAME"
+zos_remote_selinux \- Security Enhanced Linux Policy for the zos_remote processes
+.SH "DESCRIPTION"
+
+Security-Enhanced Linux secures the zos_remote processes via flexible mandatory access control.
+
+The zos_remote processes execute with the zos_remote_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.
+
+For example:
+
+.B ps -eZ | grep zos_remote_t
+
+
+.SH "ENTRYPOINTS"
+
+The zos_remote_t SELinux type can be entered via the "zos_remote_exec_t" file type.  The default entrypoint paths for the zos_remote_t domain are the following:"
+
+/sbin/audispd-zos-remote
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files.
+SELinux zos_remote policy is very flexible allowing users to setup their zos_remote processes in as secure a method as possible.
+.PP
+The following process types are defined for zos_remote:
+
+.EX
+.B zos_remote_t
+.EE
+.PP
+Note:
+.B semanage permissive -a zos_remote_t
+
+can be used to make the process type zos_remote_t permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files.
+SELinux zos_remote policy is very flexible allowing users to setup their zos_remote processes in as secure a method as possible.
+.PP
+The following file types are defined for zos_remote:
+
+
+.EX
+.PP
+.B zos_remote_exec_t
+.EE
+
+- Set files with the zos_remote_exec_t type, if you want to transition an executable to the zos_remote_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH "MANAGED FILES"
+
+The SELinux process type zos_remote_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.
+
+.br
+.B initrc_tmp_t
+
+
+.br
+.B mnt_t
+
+	/mnt(/[^/]*)
+.br
+	/mnt(/[^/]*)?
+.br
+	/rhev(/[^/]*)?
+.br
+	/media(/[^/]*)
+.br
+	/media(/[^/]*)?
+.br
+	/etc/rhgb(/.*)?
+.br
+	/media/\.hal-.*
+.br
+	/net
+.br
+	/afs
+.br
+	/misc
+.br
+	/rhev
+.br
+
+.br
+.B tmp_t
+
+	/tmp
+.br
+	/usr/tmp
+.br
+	/var/tmp
+.br
+	/var/tmp/vi\.recover
+.br
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR
+This manual page was auto-generated using
+.B "sepolicy manpage"
+by mgrepl.
+
+.SH "SEE ALSO"
+selinux(8), zos_remote(8), semanage(8), restorecon(8), chcon(1), sepolicy(8)
diff -Nur nsaserefpolicy/policy/mcs serefpolicy-3.7.19/policy/mcs
--- nsaserefpolicy/policy/mcs	2013-03-15 11:41:12.369153513 +0100
+++ serefpolicy-3.7.19/policy/mcs	2013-04-15 11:01:27.275950817 +0200
@@ -106,7 +106,8 @@
 	( h1 dom h2 );
 
 mlsconstrain { dir lnk_file chr_file blk_file sock_file fifo_file file } { create relabelto }
-	(( h1 dom h2 ) and ( l2 eq h2 ));
+	((( h1 dom h2 ) and ( l2 eq h2 )) 
+	or ( t1 != mcsuntrustedproc ));
 
 mlsconstrain process { transition dyntransition }
 	(( h1 dom h2 ) or ( t1 == mcssetcats ));
@@ -166,7 +167,18 @@
 mlsconstrain { tcp_socket udp_socket rawip_socket } node_bind
 	(( h1 dom h2 ) or ( t1 != mcsuntrustedproc ));
 
-mlsconstrain packet { send recv }
-    (( h1 dom h2 ) or ( t1 == mcsnetwrite ));
+mlsconstrain { node } { recvfrom sendto }
+       (( l1 dom l2 ) or (t1 != mcsuntrustedproc));
+
+mlsconstrain { packet peer } { recv }
+       (( l1 dom l2 ) or
+        ((t1 != mcsuntrustedproc) and (t2 != mcsuntrustedproc)));
+
+# the netif ingress/egress ops, the ingress permission is a "write" operation
+# because the subject in this particular case is the remote domain which is
+# writing data out the network interface which is acting as the object
+mlsconstrain { netif } { egress ingress }
+               (( l1 dom l2 ) or (t1 != mcsuntrustedproc));
+
 
 ') dnl end enable_mcs
diff -Nur nsaserefpolicy/policy/modules/admin/bootloader.if serefpolicy-3.7.19/policy/modules/admin/bootloader.if
--- nsaserefpolicy/policy/modules/admin/bootloader.if	2013-03-15 11:41:12.762153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/bootloader.if	2013-03-15 11:40:10.079152091 +0100
@@ -108,6 +108,25 @@
 
 ########################################
 ## <summary>
+##     Manage the bootloader
+##     configuration file.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`bootloader_manage_config',`
+       gen_require(`
+               type bootloader_etc_t;
+       ')
+
+       manage_files_pattern($1, bootloader_etc_t, bootloader_etc_t)
+')
+
+########################################
+## <summary>
 ##	Read and write the bootloader
 ##	temporary data in /tmp.
 ## </summary>
diff -Nur nsaserefpolicy/policy/modules/admin/brctl.if serefpolicy-3.7.19/policy/modules/admin/brctl.if
--- nsaserefpolicy/policy/modules/admin/brctl.if	2013-03-15 11:41:12.765153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/brctl.if	2013-06-12 12:39:46.554270145 +0200
@@ -18,6 +18,24 @@
 	domtrans_pattern($1, brctl_exec_t, brctl_t)
 ')
 
+########################################
+## <summary>
+##	Execute a domain transition to run brctl.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`brctl_exec',`
+	gen_require(`
+		type brctl_exec_t;
+	')
+
+    can_exec($1, brctl_exec_t)
+')
+
 ######################################
 ## <summary>
 ##      Execute brctl in the brctl domain.
diff -Nur nsaserefpolicy/policy/modules/admin/dmidecode.if serefpolicy-3.7.19/policy/modules/admin/dmidecode.if
--- nsaserefpolicy/policy/modules/admin/dmidecode.if	2013-03-15 11:41:12.786153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/dmidecode.if	2013-03-15 11:40:10.310152097 +0100
@@ -48,3 +48,22 @@
 	dmidecode_domtrans($1)
 	role $2 types dmidecode_t;
 ')
+
+#####################################
+## <summary>
+##  Execute dmidecode in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`dmidecode_exec',`
+    gen_require(`
+        type dmidecode_exec_t;
+    ')
+
+    corecmd_search_bin($1)
+    can_exec($1, dmidecode_exec_t)
+')
diff -Nur nsaserefpolicy/policy/modules/admin/logrotate.te serefpolicy-3.7.19/policy/modules/admin/logrotate.te
--- nsaserefpolicy/policy/modules/admin/logrotate.te	2013-03-15 11:41:12.762153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/logrotate.te	2013-06-24 15:57:15.080076695 +0200
@@ -122,7 +122,9 @@
 userdom_use_user_terminals(logrotate_t)
 userdom_list_user_home_dirs(logrotate_t)
 userdom_use_unpriv_users_fds(logrotate_t)
-userdom_dontaudit_list_admin_dir(logrotate_t)
+#878757
+userdom_list_admin_dir(logrotate_t)
+userdom_read_admin_home_files(logrotate_t)
 
 cron_system_entry(logrotate_t, logrotate_exec_t)
 cron_search_spool(logrotate_t)
@@ -209,9 +211,17 @@
 ')
 
 optional_policy(`
-	psad_domtrans(logrotate_t)
+	openshift_manage_lib_files(logrotate_t)
+')
+
+optional_policy(`
+    openvswitch_read_pid_files(logrotate_t)
+    openvswitch_domtrans(logrotate_t)
 ')
 
+optional_policy(`
+	psad_domtrans(logrotate_t)
+')
 
 optional_policy(`
 	samba_exec_log(logrotate_t)
diff -Nur nsaserefpolicy/policy/modules/admin/netutils.te serefpolicy-3.7.19/policy/modules/admin/netutils.te
--- nsaserefpolicy/policy/modules/admin/netutils.te	2013-03-15 11:41:12.779153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/netutils.te	2013-03-15 11:40:10.164152093 +0100
@@ -183,6 +183,11 @@
 	hotplug_use_fds(ping_t)
 ')
 
+optional_policy(`
+	openshift_rw_inherited_content(ping_t)
+	openshift_dontaudit_rw_inherited_fifo_files(ping_t)
+')
+
 ########################################
 #
 # Traceroute local policy
diff -Nur nsaserefpolicy/policy/modules/admin/permissivedomains.te serefpolicy-3.7.19/policy/modules/admin/permissivedomains.te
--- nsaserefpolicy/policy/modules/admin/permissivedomains.te	2013-03-15 11:41:12.720153521 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/permissivedomains.te	2013-03-15 11:40:09.917152088 +0100
@@ -143,8 +143,10 @@
 optional_policy(`
     gen_require(`
         type rhev_agentd_t;
+		type rhev_agentd_consolehelper_t;
     ')
 
+	permissive rhev_agentd_consolehelper_t;
     permissive rhev_agentd_t;
 ')
 
@@ -261,10 +263,12 @@
 
 optional_policy(`
     gen_require(`
-                type glance_t;
+                type glance_registry_t;
+				type glance_api_t;
         ')
 
-        permissive glance_t;
+        permissive glance_registry_t;
+		permissive glance_api_t;
 ')
 
 optional_policy(`
@@ -295,4 +299,105 @@
 		permissive nova_volume_t;
 ')
 
+optional_policy(`
+    gen_require(`
+                type sensord_t;
+        ')
+
+        permissive sensord_t;
+')
+
+
+optional_policy(`
+    gen_require(`
+                type slpd_t;
+        ')
 
+        permissive slpd_t;
+')
+
+optional_policy(`
+    gen_require(`
+                type l2tpd_t;
+        ')
+	
+		permissive l2tpd_t;
+')
+
+
+optional_policy(`
+    gen_require(`
+                type svnserve_t;
+        ')
+
+        permissive svnserve_t;
+')
+
+optional_policy(`
+    gen_require(`
+               type glusterd_t;
+        ')
+
+        permissive glusterd_t;
+')
+
+optional_policy(`
+    gen_require(`
+               type bcfg2_t;
+        ')
+
+        permissive bcfg2_t;
+')
+
+optional_policy(`
+    gen_require(`
+               type numad_t;
+        ')
+        permissive numad_t;
+')
+
+optional_policy(`
+    gen_require(`
+               type virt_bridgehelper_t;
+        ')
+        permissive virt_bridgehelper_t;
+')
+
+optional_policy(`
+    gen_require(`
+               type pacemaker_t;
+        ')
+        permissive pacemaker_t;
+')
+
+optional_policy(`
+    gen_require(`
+               type pkcsslotd_t;
+        ')
+		permissive pkcsslotd_t;
+')
+
+optional_policy(`
+    gen_require(`
+               type rhnsd_t;
+        ')
+        permissive rhnsd_t;
+')
+
+optional_policy(`
+	gen_require(`
+		type openvswitch_ovsdb_server_t;
+	')
+')
+
+optional_policy(`
+	gen_require(`
+		type openvswitch_ovsv_switchd_t;
+	')
+')
+
+optional_policy(`
+    gen_require(`
+        type dspam_t;
+    ')
+')
diff -Nur nsaserefpolicy/policy/modules/admin/portage.fc serefpolicy-3.7.19/policy/modules/admin/portage.fc
--- nsaserefpolicy/policy/modules/admin/portage.fc	2013-03-15 11:41:12.753153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/portage.fc	2013-03-15 11:40:10.017152090 +0100
@@ -17,7 +17,7 @@
 /var/db/pkg(/.*)?			gen_context(system_u:object_r:portage_db_t,s0)
 /var/cache/edb(/.*)?			gen_context(system_u:object_r:portage_cache_t,s0)
 /var/log/emerge\.log.*		--	gen_context(system_u:object_r:portage_log_t,s0)
-/var/log/emerge-fetch.log	--	gen_context(system_u:object_r:portage_log_t,s0)
+/var/log/emerge-fetch.log.*	--	gen_context(system_u:object_r:portage_log_t,s0)
 /var/log/portage(/.*)?			gen_context(system_u:object_r:portage_log_t,s0)
 /var/lib/portage(/.*)?			gen_context(system_u:object_r:portage_cache_t,s0)
 /var/tmp/portage(/.*)?			gen_context(system_u:object_r:portage_tmp_t,s0)
diff -Nur nsaserefpolicy/policy/modules/admin/prelink.fc serefpolicy-3.7.19/policy/modules/admin/prelink.fc
--- nsaserefpolicy/policy/modules/admin/prelink.fc	2013-03-15 11:41:12.772153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/prelink.fc	2013-03-15 11:40:10.134152093 +0100
@@ -4,7 +4,7 @@
 
 /usr/sbin/prelink(\.bin)?	--	gen_context(system_u:object_r:prelink_exec_t,s0)
 
-/var/log/prelink\.log		--	gen_context(system_u:object_r:prelink_log_t,s0)
+/var/log/prelink\.log.*		--	gen_context(system_u:object_r:prelink_log_t,s0)
 /var/log/prelink(/.*)?			gen_context(system_u:object_r:prelink_log_t,s0)
 
 /var/lib/misc/prelink.*	--	gen_context(system_u:object_r:prelink_var_lib_t,s0)
diff -Nur nsaserefpolicy/policy/modules/admin/prelink.if serefpolicy-3.7.19/policy/modules/admin/prelink.if
--- nsaserefpolicy/policy/modules/admin/prelink.if	2013-03-15 11:41:12.785153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/prelink.if	2013-03-15 11:40:10.229152095 +0100
@@ -43,6 +43,24 @@
 	can_exec($1, prelink_exec_t)
 ')
 
+#######################################
+## <summary>
+##  Getattr the prelink program in the current domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`prelink_exec_getattr',`
+    gen_require(`
+        type prelink_exec_t;
+    ')
+
+	allow $1 prelink_exec_t:file getattr;
+')
+
 ########################################
 ## <summary>
 ##	Execute the prelink program in the prelink domain.
diff -Nur nsaserefpolicy/policy/modules/admin/quota.fc serefpolicy-3.7.19/policy/modules/admin/quota.fc
--- nsaserefpolicy/policy/modules/admin/quota.fc	2013-03-15 11:41:12.781153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/quota.fc	2013-03-15 11:40:10.192152094 +0100
@@ -22,3 +22,5 @@
 
 /var/run/quota_nld\.pid --  gen_context(system_u:object_r:quota_nld_var_run_t,s0)
 
+/var/lib/stickshift/a?quota\.(user|group)    --    gen_context(system_u:object_r:quota_db_t,s0)
+/var/lib/openshift/a?quota\.(user|group)    --    gen_context(system_u:object_r:quota_db_t,s0)
diff -Nur nsaserefpolicy/policy/modules/admin/quota.te serefpolicy-3.7.19/policy/modules/admin/quota.te
--- nsaserefpolicy/policy/modules/admin/quota.te	2013-03-15 11:41:12.715153521 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/quota.te	2013-03-15 11:40:09.910152088 +0100
@@ -91,6 +91,10 @@
 ')
 
 optional_policy(`
+	openshift_lib_filetrans(quota_t, quota_db_t, file)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(quota_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/admin/readahead.te serefpolicy-3.7.19/policy/modules/admin/readahead.te
--- nsaserefpolicy/policy/modules/admin/readahead.te	2013-03-15 11:41:12.764153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/readahead.te	2013-03-15 11:40:10.111152092 +0100
@@ -37,6 +37,7 @@
 kernel_read_all_sysctls(readahead_t)
 kernel_read_system_state(readahead_t)
 kernel_dontaudit_getattr_core_if(readahead_t)
+kernel_list_all_proc(readahead_t)
 
 dev_read_sysfs(readahead_t)
 dev_getattr_generic_chr_files(readahead_t)
diff -Nur nsaserefpolicy/policy/modules/admin/rpm.if serefpolicy-3.7.19/policy/modules/admin/rpm.if
--- nsaserefpolicy/policy/modules/admin/rpm.if	2013-03-15 11:41:12.786153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/rpm.if	2013-04-16 08:17:43.805360523 +0200
@@ -493,6 +493,26 @@
 
 ########################################
 ## <summary>
+##     Do not audit attempts to create, read,the RPM package database.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain to not audit.
+##     </summary>
+## </param>
+#
+interface(`rpm_dontaudit_read_db',`
+       gen_require(`
+               type rpm_var_lib_t;
+       ')
+
+       dontaudit $1 rpm_var_lib_t:dir list_dir_perms;
+       dontaudit $1 rpm_var_lib_t:file read_file_perms;
+       dontaudit $1 rpm_var_lib_t:lnk_file read_lnk_file_perms;
+')
+
+########################################
+## <summary>
 ##	Read the RPM cache.
 ## </summary>
 ## <param name="domain">
diff -Nur nsaserefpolicy/policy/modules/admin/rpm.te serefpolicy-3.7.19/policy/modules/admin/rpm.te
--- nsaserefpolicy/policy/modules/admin/rpm.te	2013-03-15 11:41:12.768153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/rpm.te	2013-03-15 11:40:10.124152092 +0100
@@ -380,6 +380,10 @@
 ')
 
 optional_policy(`
+	certmonger_dbus_chat(rpm_script_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(rpm_script_t)
 ')
 
@@ -388,6 +392,10 @@
 ')
 
 optional_policy(`
+	openshift_initrc_domtrans(rpm_script_t)
+')
+
+optional_policy(`
 	tzdata_domtrans(rpm_t)
 	tzdata_domtrans(rpm_script_t)
 ')
diff -Nur nsaserefpolicy/policy/modules/admin/sectoolm.fc serefpolicy-3.7.19/policy/modules/admin/sectoolm.fc
--- nsaserefpolicy/policy/modules/admin/sectoolm.fc	2013-03-15 11:41:12.791153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/sectoolm.fc	2013-03-15 11:40:10.325152097 +0100
@@ -1,4 +1,4 @@
 /usr/libexec/sectool-mechanism\.py	--	gen_context(system_u:object_r:sectoolm_exec_t,s0)
 
 /var/lib/sectool(/.*)?				gen_context(system_u:object_r:sectool_var_lib_t,s0)
-/var/log/sectool\.log			--	gen_context(system_u:object_r:sectool_var_log_t,s0)
+/var/log/sectool\.log.*			--	gen_context(system_u:object_r:sectool_var_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/admin/shorewall.te serefpolicy-3.7.19/policy/modules/admin/shorewall.te
--- nsaserefpolicy/policy/modules/admin/shorewall.te	2013-03-15 11:41:12.737153521 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/shorewall.te	2013-03-15 11:40:09.964152089 +0100
@@ -71,6 +71,7 @@
 corecmd_exec_bin(shorewall_t)
 corecmd_exec_shell(shorewall_t)
 
+dev_read_sysfs(shorewall_t)
 dev_read_urand(shorewall_t)
 
 domain_read_all_domains_state(shorewall_t)
diff -Nur nsaserefpolicy/policy/modules/admin/usermanage.te serefpolicy-3.7.19/policy/modules/admin/usermanage.te
--- nsaserefpolicy/policy/modules/admin/usermanage.te	2013-03-15 11:41:12.760153522 +0100
+++ serefpolicy-3.7.19/policy/modules/admin/usermanage.te	2013-06-18 07:46:42.930200940 +0200
@@ -328,6 +328,9 @@
 files_search_var(passwd_t)
 files_dontaudit_search_pids(passwd_t)
 files_relabel_etc_files(passwd_t)
+files_list_tmp(passwd_t)
+files_read_generic_tmp_symlinks(passwd_t)
+files_read_usr_files(passwd_t)
 
 # /usr/bin/passwd asks for w access to utmp, but it will operate
 # correctly without it.  Do not audit write denials to utmp.
@@ -520,6 +523,11 @@
 seutil_domtrans_semanage(useradd_t)
 seutil_domtrans_setfiles(useradd_t)
 
+seutil_manage_file_contexts(useradd_t)
+seutil_manage_config(useradd_t)
+seutil_manage_login_config(useradd_t)
+seutil_manage_default_contexts(useradd_t)
+
 userdom_use_unpriv_users_fds(useradd_t)
 # Add/remove user home directories
 userdom_home_filetrans_user_home_dir(useradd_t)
@@ -560,3 +568,7 @@
 	rpm_use_fds(useradd_t)
 	rpm_rw_pipes(useradd_t)
 ')
+
+optional_policy(`
+    openshift_manage_lib_dirs(useradd_t)
+')
diff -Nur nsaserefpolicy/policy/modules/apps/awstats.te serefpolicy-3.7.19/policy/modules/apps/awstats.te
--- nsaserefpolicy/policy/modules/apps/awstats.te	2013-03-15 11:41:13.266153533 +0100
+++ serefpolicy-3.7.19/policy/modules/apps/awstats.te	2013-03-15 11:40:11.636152127 +0100
@@ -18,8 +18,6 @@
 type awstats_var_lib_t;
 files_type(awstats_var_lib_t)
 
-apache_content_template(awstats)
-
 ########################################
 #
 # awstats policy
@@ -80,7 +78,18 @@
 # awstats cgi script policy
 #
 
-allow httpd_awstats_script_t awstats_var_lib_t:dir list_dir_perms;
+optional_policy(`
+	apache_content_template(awstats)
+	apache_read_log(httpd_awstats_script_t)
+
+	manage_dirs_pattern(httpd_awstats_script_t, awstats_tmp_t, awstats_tmp_t)
+	manage_files_pattern(httpd_awstats_script_t, awstats_tmp_t, awstats_tmp_t)
+	files_tmp_filetrans(httpd_awstats_script_t, awstats_tmp_t, { dir file })
+
+	allow httpd_awstats_script_t awstats_var_lib_t:dir list_dir_perms;
+
+	read_files_pattern(httpd_awstats_script_t, awstats_var_lib_t, awstats_var_lib_t)
+	files_search_var_lib(httpd_awstats_script_t)
+')
+
 
-read_files_pattern(httpd_awstats_script_t, awstats_var_lib_t, awstats_var_lib_t)
-files_search_var_lib(httpd_awstats_script_t)
diff -Nur nsaserefpolicy/policy/modules/apps/kdumpgui.te serefpolicy-3.7.19/policy/modules/apps/kdumpgui.te
--- nsaserefpolicy/policy/modules/apps/kdumpgui.te	2013-03-15 11:41:13.290153534 +0100
+++ serefpolicy-3.7.19/policy/modules/apps/kdumpgui.te	2013-03-15 11:40:11.729152129 +0100
@@ -68,6 +68,7 @@
 
 optional_policy(`
 	bootloader_exec(kdumpgui_t)
+	bootloader_manage_config(kdumpgui_t)
 ')
 
 optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/apps/qemu.te serefpolicy-3.7.19/policy/modules/apps/qemu.te
--- nsaserefpolicy/policy/modules/apps/qemu.te	2013-03-15 11:41:13.280153534 +0100
+++ serefpolicy-3.7.19/policy/modules/apps/qemu.te	2013-06-12 13:01:08.290889647 +0200
@@ -96,10 +96,18 @@
 ')
 
 optional_policy(`
+    nova_manage_lib_files(qemu_t)
+')
+
+optional_policy(`
 	samba_domtrans_smbd(qemu_t)
 ')
 
 optional_policy(`
+    virt_domtrans_bridgehelper(qemu_t)
+')
+
+optional_policy(`
 	virt_manage_images(qemu_t)
 	virt_append_log(qemu_t)
 	virt_write_tmp_sock(qemu_t)
diff -Nur nsaserefpolicy/policy/modules/apps/screen.if serefpolicy-3.7.19/policy/modules/apps/screen.if
--- nsaserefpolicy/policy/modules/apps/screen.if	2013-03-15 11:41:13.296153534 +0100
+++ serefpolicy-3.7.19/policy/modules/apps/screen.if	2013-03-15 11:40:11.767152130 +0100
@@ -161,3 +161,22 @@
 		fs_read_nfs_symlinks($1_screen_t)
 	')
 ')
+
+######################################
+## <summary>
+##      Execute the rssh program
+##      in the caller domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`screen_exec',`
+        gen_require(`
+                type screen_exec_t;
+        ')
+
+        can_exec($1, screen_exec_t)
+')
diff -Nur nsaserefpolicy/policy/modules/apps/seunshare.te serefpolicy-3.7.19/policy/modules/apps/seunshare.te
--- nsaserefpolicy/policy/modules/apps/seunshare.te	2013-03-15 11:41:13.271153533 +0100
+++ serefpolicy-3.7.19/policy/modules/apps/seunshare.te	2013-03-15 11:40:11.656152127 +0100
@@ -26,11 +26,13 @@
 files_search_all(seunshare_domain)
 files_read_etc_files(seunshare_domain)
 files_mounton_all_poly_members(seunshare_domain)
+files_mounton_rootfs(seunshare_domain)
 files_manage_generic_tmp_dirs(seunshare_domain)
 files_relabelfrom_tmp_dirs(seunshare_domain)
 
 fs_manage_cgroup_dirs(seunshare_domain)
 fs_manage_cgroup_files(seunshare_domain)
+fs_unmount_all_fs(seunshare_domain)
 
 auth_use_nsswitch(seunshare_domain)
 
diff -Nur nsaserefpolicy/policy/modules/apps/vmware.te serefpolicy-3.7.19/policy/modules/apps/vmware.te
--- nsaserefpolicy/policy/modules/apps/vmware.te	2013-03-15 11:41:13.277153533 +0100
+++ serefpolicy-3.7.19/policy/modules/apps/vmware.te	2013-03-15 11:40:11.672152128 +0100
@@ -73,6 +73,7 @@
 # VMWare host local policy
 #
 
+allow vmware_host_t self:capability { net_admin };
 allow vmware_host_t self:capability { setgid setuid net_raw sys_nice sys_time sys_ptrace kill dac_override };
 dontaudit vmware_host_t self:capability sys_tty_config;
 allow vmware_host_t self:process { execstack execmem signal_perms };
@@ -102,6 +103,7 @@
 kernel_read_kernel_sysctls(vmware_host_t)
 kernel_read_network_state(vmware_host_t)
 kernel_read_system_state(vmware_host_t)
+kernel_request_load_module(vmware_host_t)
 
 corenet_all_recvfrom_unlabeled(vmware_host_t)
 corenet_all_recvfrom_netlabel(vmware_host_t)
@@ -140,6 +142,8 @@
 fs_getattr_all_fs(vmware_host_t)
 fs_search_auto_mountpoints(vmware_host_t)
 
+storage_raw_write_fixed_disk(vmware_host_t)
+storage_raw_read_fixed_disk(vmware_host_t)
 storage_getattr_fixed_disk_dev(vmware_host_t)
 
 term_dontaudit_use_console(vmware_host_t)
@@ -178,6 +182,10 @@
 ')
 
 optional_policy(`
+	unconfined_domain(vmware_host_t)
+')
+
+optional_policy(`
 	xserver_read_tmp_files(vmware_host_t)
 	xserver_read_xdm_pid(vmware_host_t)
 ')
diff -Nur nsaserefpolicy/policy/modules/apps/wm.fc serefpolicy-3.7.19/policy/modules/apps/wm.fc
--- nsaserefpolicy/policy/modules/apps/wm.fc	2013-03-15 11:41:13.294153534 +0100
+++ serefpolicy-3.7.19/policy/modules/apps/wm.fc	2013-03-15 11:40:11.746152130 +0100
@@ -1,3 +1,4 @@
-/usr/bin/twm		--	gen_context(system_u:object_r:wm_exec_t,s0)
+/usr/bin/gnome-shell	--	gen_context(system_u:object_r:wm_exec_t,s0)
 /usr/bin/openbox	--	gen_context(system_u:object_r:wm_exec_t,s0)
 /usr/bin/metacity	--	gen_context(system_u:object_r:wm_exec_t,s0)
+/usr/bin/twm		--	gen_context(system_u:object_r:wm_exec_t,s0)
diff -Nur nsaserefpolicy/policy/modules/apps/wm.if serefpolicy-3.7.19/policy/modules/apps/wm.if
--- nsaserefpolicy/policy/modules/apps/wm.if	2013-03-15 11:41:13.301153534 +0100
+++ serefpolicy-3.7.19/policy/modules/apps/wm.if	2013-03-15 11:40:11.798152131 +0100
@@ -31,38 +31,35 @@
 	gen_require(`
 		type wm_exec_t;
 		class dbus send_msg;
+		attribute wm_domain;
 	')
 
-	type $1_wm_t;
+	type $1_wm_t, wm_domain;
 	domain_type($1_wm_t)
 	domain_entry_file($1_wm_t, wm_exec_t)
 	role $2 types $1_wm_t;
 
-	allow $1_wm_t self:fifo_file rw_fifo_file_perms;
-	allow $1_wm_t self:process getsched;
-	allow $1_wm_t self:shm create_shm_perms;
-
 	allow $1_wm_t $3:unix_stream_socket connectto;
 	allow $3 $1_wm_t:unix_stream_socket connectto;
-	allow $3 $1_wm_t:process { signal sigchld };
+	allow $3 $1_wm_t:process { signal sigchld signull };
 	allow $1_wm_t $3:process { signull sigkill };
 
 	allow $1_wm_t $3:dbus send_msg;
 	allow $3 $1_wm_t:dbus send_msg;
 
-	domtrans_pattern($3, wm_exec_t, $1_wm_t)
+	userdom_manage_home_role($2, $1_wm_t)
+	userdom_manage_tmpfs_role($2, $1_wm_t)
+	userdom_manage_tmp_role($2, $1_wm_t)
+	userdom_exec_user_tmp_files($1_wm_t)
 
-	kernel_read_system_state($1_wm_t)
+	domtrans_pattern($3, wm_exec_t, $1_wm_t)
 
 	corecmd_bin_domtrans($1_wm_t, $3)
 	corecmd_shell_domtrans($1_wm_t, $3)
 
-	dev_read_urand($1_wm_t)
-
-	files_read_etc_files($1_wm_t)
-	files_read_usr_files($1_wm_t)
+	auth_use_nsswitch($1_wm_t)
 
-	fs_getattr_tmpfs($1_wm_t)
+	kernel_read_system_state($1_wm_t)
 
 	mls_file_read_all_levels($1_wm_t)
 	mls_file_write_all_levels($1_wm_t)
@@ -70,29 +67,10 @@
 	mls_xwin_write_all_levels($1_wm_t)
 	mls_fd_use_all_levels($1_wm_t)
 
-	auth_use_nsswitch($1_wm_t)
-
-	miscfiles_read_fonts($1_wm_t)
-	miscfiles_read_localization($1_wm_t)
-
-	userdom_manage_home_role($2, $1_wm_t)
-	userdom_manage_tmpfs_role($2, $1_wm_t)
-	userdom_manage_tmp_role($2, $1_wm_t)
-
-	optional_policy(`
-		dbus_system_bus_client($1_wm_t)
-		dbus_session_bus_client($1_wm_t)
-	')
-
-	optional_policy(`
-		pulseaudio_stream_connect($1_wm_t)
-	')
-
 	optional_policy(`
 		xserver_role($2, $1_wm_t)
 		xserver_manage_core_devices($1_wm_t)
 	')
-
 ')
 
 ########################################
diff -Nur nsaserefpolicy/policy/modules/apps/wm.te serefpolicy-3.7.19/policy/modules/apps/wm.te
--- nsaserefpolicy/policy/modules/apps/wm.te	2013-03-15 11:41:13.253153533 +0100
+++ serefpolicy-3.7.19/policy/modules/apps/wm.te	2013-03-15 11:40:11.598152126 +0100
@@ -1,5 +1,6 @@
+policy_module(wm, 1.2.0)
 
-policy_module(wm, 1.0.0)
+attribute wm_domain;
 
 ########################################
 #
@@ -8,3 +9,35 @@
 
 type wm_exec_t;
 corecmd_executable_file(wm_exec_t)
+
+allow wm_domain self:fifo_file rw_fifo_file_perms;
+allow wm_domain self:process getsched;
+allow wm_domain self:shm create_shm_perms;
+allow wm_domain self:unix_dgram_socket create_socket_perms;
+
+dev_read_urand(wm_domain)
+
+files_read_etc_files(wm_domain)
+files_read_usr_files(wm_domain)
+
+fs_getattr_tmpfs(wm_domain)
+
+application_signull(wm_domain)
+
+miscfiles_read_fonts(wm_domain)
+miscfiles_read_localization(wm_domain)
+
+optional_policy(`
+	dbus_system_bus_client(wm_domain)
+	dbus_session_bus_client(wm_domain)
+')
+
+optional_policy(`
+	pulseaudio_stream_connect(wm_domain)
+')
+
+optional_policy(`
+	xserver_manage_core_devices(wm_domain)
+')
+
+
diff -Nur nsaserefpolicy/policy/modules/kernel/corecommands.fc serefpolicy-3.7.19/policy/modules/kernel/corecommands.fc
--- nsaserefpolicy/policy/modules/kernel/corecommands.fc	2013-03-15 11:41:12.889153525 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/corecommands.fc	2013-03-15 11:40:10.571152103 +0100
@@ -105,6 +105,8 @@
 /etc/sysconfig/network-scripts/net.* gen_context(system_u:object_r:bin_t,s0)
 /etc/sysconfig/network-scripts/init.* gen_context(system_u:object_r:bin_t,s0)
 
+/etc/tune-profiles/.*/*\.sh		--	gen_context(system_u:object_r:bin_t,s0)
+
 /etc/X11/xdm/GiveConsole	--	gen_context(system_u:object_r:bin_t,s0)
 /etc/X11/xdm/TakeConsole	--	gen_context(system_u:object_r:bin_t,s0)
 /etc/X11/xdm/Xsetup_0		--	gen_context(system_u:object_r:bin_t,s0)
@@ -210,6 +212,7 @@
 
 /usr/lib/ruby/gems(/.*)?/helper-scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/ruby/gems/.*/agents(/.*)?     gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gems(/.*)?/helper-scripts(/.*)? gen_context(system_u:object_r:bin_t,s0)
 
 /usr/lib(64)?/debug/bin(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/debug/sbin(/.*)? --	gen_context(system_u:object_r:bin_t,s0)
@@ -247,17 +250,29 @@
 /usr/share/debconf/.+		--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/denyhosts/scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/denyhosts/plugins(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/etc/wdmd\.d/checkquorum\.wdmd	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/.*\.sh		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/ocf-shellfuncs  --   gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/svclib_nfslock --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/SAPDatabase  --  gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/SAPInstance  --  gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/fence_scsi_check\.pl --  gen_context(system_u:object_r:bin_t,s0)
-/usr/share/cluster/checkquorum  --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/cluster/checkquorum.*  --  gen_context(system_u:object_r:bin_t,s0)
 /usr/share/e16/misc(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gedit-2/plugins/externaltools/tools(/.*)?  gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gitolite/hooks/common/update		--      gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gitolite/hooks/gitolite-admin/post-update -- gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/commands(/.*)?    --      gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/gitolite			--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/gitolite-shell		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/triggers/partial-copy	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/triggers/post-compile/ssh-authkeys     --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/triggers/post-compile/ssh-authkeys-shell-users     --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/triggers/post-compile/update-git-configs     --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/triggers/post-compile/update-git-daemon-access-list     --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/triggers/post-compile/update-gitweb-access-list     --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/triggers/renice     --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite3/triggers/upstream     --  gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gnucash/finance-quote-check -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gnucash/finance-quote-helper -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/hal/device-manager/hal-device-manager -- gen_context(system_u:object_r:bin_t,s0)
@@ -391,5 +406,7 @@
 
 /usr/lib(64)?/gimp/.*/plug-ins(/.*)?  gen_context(system_u:object_r:bin_t,s0)
 
+/usr/lib(64)?/yaboot/addnote	--	gen_context(system_u:object_r:bin_t,s0)
+
 /usr/local/Brother/(.*/)?inf/brprintconf.*  --  gen_context(system_u:object_r:bin_t,s0)
 /usr/local/Brother/(.*/)?inf/setup.*        --  gen_context(system_u:object_r:bin_t,s0)
diff -Nur nsaserefpolicy/policy/modules/kernel/corenetwork.te.in serefpolicy-3.7.19/policy/modules/kernel/corenetwork.te.in
--- nsaserefpolicy/policy/modules/kernel/corenetwork.te.in	2013-03-15 11:41:12.935153526 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/corenetwork.te.in	2013-07-09 16:12:48.120018806 +0200
@@ -6,6 +6,7 @@
 # Declarations
 #
 
+attribute netlabel_peer_type;
 attribute client_packet_type;
 attribute netif_type;
 attribute node_type;
@@ -120,10 +121,12 @@
 network_port(distccd, tcp,3632,s0)
 network_port(dns, udp,53,s0, tcp,53,s0)
 network_port(dogtag, tcp,7390,s0)
+network_port(dspam, tcp, 10026, s0)
 network_port(epmap, tcp,135,s0, udp,135,s0)
 network_port(festival, tcp,1314,s0)
 network_port(fingerd, tcp,79,s0)
 network_port(flash, tcp,843,s0, tcp,1935,s0, udp,1935,s0)
+network_port(florence, tcp,1228,s0, udp,1228,s0)
 network_port(ftp, tcp,21,s0, tcp,990,s0, udp,990,s0)
 network_port(ftp_data, tcp,20,s0)
 network_port(gatekeeper, udp,1718,s0, udp,1719,s0, tcp,1721,s0, tcp,7000,s0)
@@ -136,7 +139,7 @@
 network_port(hddtemp, tcp,7634,s0)
 network_port(howl, tcp,5335,s0, udp,5353,s0)
 network_port(hplip, tcp,1782,s0, tcp,2207,s0, tcp,2208,s0, tcp, 8290,s0, tcp,50000,s0, tcp,50002,s0, tcp,8292,s0, tcp,9100,s0, tcp,9101,s0, tcp,9102,s0, tcp,9220,s0, tcp,9221,s0, tcp,9222,s0, tcp,9280,s0, tcp,9281,s0, tcp,9282,s0, tcp,9290,s0, tcp,9291,s0)
-network_port(http, tcp,80,s0, tcp,443,s0, tcp,488,s0, tcp,8008,s0,tcp,8009,s0, tcp,8443,s0) #8443 is mod_nss default port
+network_port(http, tcp,80,s0, tcp,81,s0, tcp,443,s0, tcp,488,s0, tcp,8008,s0,tcp,8009,s0, tcp,8443,s0) #8443 is mod_nss default port
 network_port(http_cache, tcp,3128,s0, udp,3130,s0, tcp,8080,s0, tcp,8118,s0, tcp,8123,s0, tcp,10001-10010,s0) # 8118 is for privoxy
 network_port(i18n_input, tcp,9010,s0)
 network_port(imaze, tcp,5323,s0, udp,5323,s0)
@@ -170,6 +173,7 @@
 network_port(lirc, tcp,8765,s0)
 network_port(luci, tcp,8084,s0)
 type lrrd_port_t, port_type; dnl network_port(lrrd_port_t) # no defined portcon
+network_port(l2tp, tcp,1701,s0, udp,1701,s0)
 network_port(mail, tcp,2000,s0, tcp,3905,s0)
 network_port(matahari, tcp,49000,s0, udp,49000,s0)
 network_port(memcache, tcp,11211,s0, udp,11211,s0)
@@ -227,12 +231,13 @@
 network_port(ricci, tcp,11111,s0, udp,11111,s0)
 network_port(ricci_modcluster, tcp,16851,s0, udp,16851,s0)
 network_port(rlogind, tcp,513,s0)
-network_port(rndc, tcp,953,s0)
+network_port(rndc, tcp,953,s0, tcp,8953,s0)
 network_port(router, udp,520,s0, udp,521,s0, tcp,521,s0)
 network_port(rsh, tcp,514,s0)
 network_port(rsync, tcp,873,s0, udp,873,s0)
 network_port(rwho, udp,513,s0)
 network_port(sap, tcp,9875,s0, udp,9875,s0)
+network_port(saphostctrl, tcp,1128,s0, tcp,1129,s0)
 network_port(sieve, tcp,4190,s0)
 network_port(sip, tcp,5060,s0, udp,5060,s0, tcp,5061,s0, udp,5061,s0)
 network_port(sixxsconfig, tcp,3874,s0, udp,3874,s0)
@@ -315,6 +320,8 @@
 
 build_option(`enable_mls',`
 network_interface(lo, lo, s0 - mls_systemhigh)
+allow netlabel_peer_t lo_netif_t:netif ingress;
+allow netlabel_peer_type lo_netif_t:netif egress;
 ',`
 typealias netif_t alias { lo_netif_t netif_lo_t };
 ')
diff -Nur nsaserefpolicy/policy/modules/kernel/devices.if serefpolicy-3.7.19/policy/modules/kernel/devices.if
--- nsaserefpolicy/policy/modules/kernel/devices.if	2013-03-15 11:41:12.905153525 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/devices.if	2013-05-30 16:26:19.387570448 +0200
@@ -71,6 +71,42 @@
 	typeattribute $1 device_node;
 ')
 
+#######################################
+## <summary>
+##      Get attributes of device filesystems.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dev_getattr_fs',`
+        gen_require(`
+                type device_t;
+        ')
+
+        allow $1 device_t:filesystem getattr;
+')
+
+#######################################
+## <summary>
+##      Mount a filesystem on /dev
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allow access.
+##      </summary>
+## </param>
+#
+interface(`dev_mounton',`
+        gen_require(`
+                type device_t;
+        ')
+
+        allow $1 device_t:dir mounton;
+')
+
 ########################################
 ## <summary>
 ##	Allow full relabeling (to and from) of all device nodes.
@@ -3678,6 +3714,60 @@
 ')
 
 ########################################
+## <summary>
+## Mount a filesystem on /sys
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allow access.
+## </summary>
+## </param>
+#
+interface(`dev_mounton_sysfs',`
+    gen_require(`
+        type sysfs_t;
+    ')
+
+    allow $1 sysfs_t:dir mounton;
+')
+
+#######################################
+## <summary>
+##  Mount sysfs filesystems.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`dev_mount_sysfs_fs',`
+    gen_require(`
+        type sysfs_t;
+    ')
+
+    allow $1 sysfs_t:filesystem mount;
+')
+
+#######################################
+## <summary>
+##  Unmount sysfs filesystems.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`dev_unmount_sysfs_fs',`
+    gen_require(`
+        type sysfs_t;
+    ')
+
+        allow $1 sysfs_t:filesystem unmount;
+')
+
+########################################
 ## <summary>
 ##	Search the sysfs directories.
 ## </summary>
diff -Nur nsaserefpolicy/policy/modules/kernel/domain.te serefpolicy-3.7.19/policy/modules/kernel/domain.te
--- nsaserefpolicy/policy/modules/kernel/domain.te	2013-03-15 11:41:12.912153525 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/domain.te	2013-03-15 11:40:10.740152107 +0100
@@ -21,6 +21,14 @@
 #
 gen_tunable(domain_kernel_load_modules, false)
 
+## <desc>
+## <p>
+## Allow all domains to execute in fips_mode
+## </p>
+## </desc>
+#
+gen_tunable(fips_mode, true)
+
 # Mark process types as domains
 attribute domain;
 
@@ -119,9 +127,23 @@
 # place labels within these directories.  (samba_share_t) for example.
 files_search_default(domain)
 
+files_read_etc_files(domain)
+files_read_usr_files(domain)
+
 # All executables should be able to search the directory they are in
 corecmd_search_bin(domain)
 
+tunable_policy(`fips_mode',`
+       allow domain self:fifo_file manage_fifo_file_perms;
+       kernel_read_kernel_sysctls(domain)
+')
+
+optional_policy(`
+       tunable_policy(`fips_mode',`
+               prelink_exec(domain)
+       ')
+')
+
 tunable_policy(`domain_kernel_load_modules',`
 	kernel_request_load_module(domain)
 ')
@@ -145,6 +167,10 @@
 ')
 
 optional_policy(`
+	prelink_exec_getattr(domain)
+')
+
+optional_policy(`
 	setrans_translate_context(domain)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/kernel/files.fc serefpolicy-3.7.19/policy/modules/kernel/files.fc
--- nsaserefpolicy/policy/modules/kernel/files.fc	2013-03-15 11:41:12.872153524 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/files.fc	2013-03-15 11:40:10.384152098 +0100
@@ -190,7 +190,9 @@
 # /tmp
 #
 /tmp			-d	gen_context(system_u:object_r:tmp_t,s0-mls_systemhigh)
+/tmp-inst		-d	gen_context(system_u:object_r:tmp_t,s0-mls_systemhigh)
 /tmp/.*				<<none>>
+
 /tmp/\.journal			<<none>>
 
 /tmp/lost\+found	-d		gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
@@ -251,6 +253,13 @@
 
 /var/lib/nfs/rpc_pipefs(/.*)?	<<none>>
 
+/var/lib/stickshift/.stickshift-proxy.d(/.*)?   gen_context(system_u:object_r:etc_t,s0)
+/var/lib/stickshift/.limits.d(/.*)?        gen_context(system_u:object_r:etc_t,s0)
+
+/var/lib/openshift/.stickshift-proxy.d(/.*)?   gen_context(system_u:object_r:etc_t,s0)
+/var/lib/openshift/.openshift-proxy.d(/.*)?   gen_context(system_u:object_r:etc_t,s0)
+/var/lib/openshift/.limits.d(/.*)?        gen_context(system_u:object_r:etc_t,s0)
+
 /var/lock(/.*)?			gen_context(system_u:object_r:var_lock_t,s0)
 
 /var/lost\+found		-d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
@@ -265,6 +274,7 @@
 
 /var/tmp			-d	gen_context(system_u:object_r:tmp_t,s0-mls_systemhigh)
 /var/tmp/.*			<<none>>
+/var/tmp-inst          -d      gen_context(system_u:object_r:tmp_t,s0-mls_systemhigh)
 /var/tmp/lost\+found	-d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
 /var/tmp/lost\+found/.*		<<none>>
 /var/tmp/vi\.recover	-d	gen_context(system_u:object_r:tmp_t,s0)
diff -Nur nsaserefpolicy/policy/modules/kernel/files.if serefpolicy-3.7.19/policy/modules/kernel/files.if
--- nsaserefpolicy/policy/modules/kernel/files.if	2013-03-15 11:41:12.876153524 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/files.if	2013-03-15 11:40:10.533152102 +0100
@@ -648,6 +648,44 @@
 	dontaudit $1 non_security_file_type:file getattr;
 ')
 
+#######################################
+## <summary>
+##      Do not audit attempts to set the attributes
+##      of non security files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`files_dontaudit_setattr_non_security_files',`
+        gen_require(`
+                attribute non_security_file_type;
+        ')
+
+        dontaudit $1 non_security_file_type:file setattr;
+')
+
+#######################################
+## <summary>
+##      Do not audit attempts to set the attributes
+##      of non security directories.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`files_dontaudit_setattr_non_security_dirs',`
+        gen_require(`
+                attribute non_security_file_type;
+        ')
+
+        dontaudit $1 non_security_file_type:dir setattr;
+')
+
 ########################################
 ## <summary>
 ##	Read all files.
@@ -713,6 +751,7 @@
 		attribute non_security_file_type;
 	')
 
+	list_dirs_pattern($1, non_security_file_type, non_security_file_type)
 	read_files_pattern($1, non_security_file_type, non_security_file_type)
 	read_lnk_files_pattern($1, non_security_file_type, non_security_file_type)
 ')
@@ -1742,6 +1781,24 @@
 	allow $1 root_t:filesystem unmount;
 ')
 
+#######################################
+## <summary>
+##  Mount a filesystem on the root file system
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_mounton_rootfs',`
+    gen_require(`
+        type root_t;
+    ')
+
+    allow $1 root_t:dir { search_dir_perms mounton };
+')
+
 ########################################
 ## <summary>
 ##	Get attributes of the /boot directory.
@@ -5463,6 +5520,25 @@
 ')
 
 ########################################
+## <summary>
+##     Do not audit attempts to read/write inherited
+##     locks (/var/lock).
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain to not audit.
+##     </summary>
+## </param>
+#
+interface(`files_dontaudit_rw_inherited_locks',`
+       gen_require(`
+               type var_lock_t;
+       ')
+
+       dontaudit $1 var_lock_t:file rw_inherited_file_perms;
+')
+
+########################################
 ## <summary>
 ##     Set the attributes of the /var/lock directory.
 ## </summary>
diff -Nur nsaserefpolicy/policy/modules/kernel/filesystem.if serefpolicy-3.7.19/policy/modules/kernel/filesystem.if
--- nsaserefpolicy/policy/modules/kernel/filesystem.if	2013-03-15 11:41:12.899153525 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/filesystem.if	2013-03-15 11:40:10.674152105 +0100
@@ -648,6 +648,48 @@
 	allow $1 cgroup_t:filesystem getattr;
 ')
 
+#######################################
+## <summary>
+##  Get attributes of cgroup files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_getattr_cgroup_files',`
+    gen_require(`
+        type cgroup_t;
+
+    ')
+
+    getattr_files_pattern($1, cgroup_t, cgroup_t)
+    fs_search_tmpfs($1)
+    dev_search_sysfs($1)
+')
+
+#######################################
+## <summary>
+##  Search cgroup directories.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_search_cgroup_dirs',`
+    gen_require(`
+        type cgroup_t;
+
+    ')
+
+    search_dirs_pattern($1, cgroup_t, cgroup_t)
+    fs_search_tmpfs($1)
+    dev_search_sysfs($1)
+')
+
 ########################################
 ## <summary>
 ##	list dirs on cgroup
@@ -1566,6 +1608,26 @@
 	domain_entry_file($1, cifs_t)
 ')
 
+######################################
+## <summary>
+##  Create, read, write, and delete dirs
+##  on a configfs filesystem.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_search_configfs_dirs',`
+	gen_require(`
+		type configfs_t;
+	')
+
+	search_dirs_pattern($1, configfs_t, configfs_t)
+')
+
+
 #######################################
 ## <summary>
 ##	Create, read, write, and delete dirs
@@ -1870,6 +1932,69 @@
 	allow $1 fusefs_t:dir mounton;
 ')
 
+#######################################
+## <summary>
+##  Execute a file on a FUSE filesystem
+##  in the specified domain.
+## </summary>
+## <desc>
+##  <p>
+##  Execute a file on a FUSE filesystem
+##  in the specified domain.  This allows
+##  the specified domain to execute any file
+##  on these filesystems in the specified
+##  domain.  This is not suggested.
+##  </p>
+##  <p>
+##  No interprocess communication (signals, pipes,
+##  etc.) is provided by this interface since
+##  the domains are not owned by this module.
+##  </p>
+##  <p>
+##  This interface was added to handle
+##  home directories on FUSE filesystems,
+##  in particular used by the ssh-agent policy.
+##  </p>
+## </desc>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+## <param name="target_domain">
+##  <summary>
+##  The type of the new process.
+##  </summary>
+## </param>
+#
+interface(`fs_fusefs_domtrans',`
+    gen_require(`
+        type fusefs_t;
+    ')
+
+    allow $1 fusefs_t:dir search_dir_perms;
+    domain_auto_transition_pattern($1, fusefs_t, $2)
+')
+
+#######################################
+## <summary>
+##      Get the attributes of a FUSEFS filesystem.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+## <rolecap/>
+#
+interface(`fs_getattr_fusefs',`
+        gen_require(`
+                type fusefs_t;
+        ')
+
+        allow $1 fusefs_t:filesystem getattr;
+')
+
 ########################################
 ## <summary>
 ##	Search directories
@@ -2046,6 +2171,24 @@
 	read_lnk_files_pattern($1, fusefs_t, fusefs_t)
 ')
 
+#######################################
+## <summary>
+##  Manage symbolic links on a FUSEFS filesystem.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_manage_fusefs_symlinks',`
+    gen_require(`
+        type fusefs_t;
+    ')
+
+    manage_lnk_files_pattern($1, fusefs_t, fusefs_t)
+')
+
 ########################################
 ## <summary>
 ##	Get the attributes of an hugetlbfs 
diff -Nur nsaserefpolicy/policy/modules/kernel/filesystem.te serefpolicy-3.7.19/policy/modules/kernel/filesystem.te
--- nsaserefpolicy/policy/modules/kernel/filesystem.te	2013-03-15 11:41:12.902153525 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/filesystem.te	2013-06-25 10:30:42.548153822 +0200
@@ -35,6 +35,7 @@
 fs_use_xattr lustre gen_context(system_u:object_r:fs_t,s0);
 fs_use_xattr xfs gen_context(system_u:object_r:fs_t,s0);
 #fs_use_xattr squashfs gen_context(system_u:object_r:fs_t,s0);
+fs_use_xattr zfs gen_context(system_u:object_r:fs_t,s0);
 
 # Use the allocating task SID to label inodes in the following filesystem
 # types, and label the filesystem itself with the specified context.
@@ -65,6 +66,11 @@
 files_mountpoint(binfmt_misc_fs_t)
 genfscon binfmt_misc / gen_context(system_u:object_r:binfmt_misc_fs_t,s0)
 
+type oracleasmfs_t;
+fs_type(oracleasmfs_t)
+files_mountpoint(oracleasmfs_t)
+genfscon oracleasmfs / gen_context(system_u:object_r:oracleasmfs_t,s0)
+
 type capifs_t;
 fs_type(capifs_t)
 files_mountpoint(capifs_t)
@@ -166,6 +172,7 @@
 files_type(tmpfs_t)
 files_mountpoint(tmpfs_t)
 files_poly_parent(tmpfs_t)
+mls_trusted_object(tmpfs_t)
 
 # Use a transition SID based on the allocating task SID and the
 # filesystem SID to label inodes in the following filesystem types,
diff -Nur nsaserefpolicy/policy/modules/kernel/kernel.if serefpolicy-3.7.19/policy/modules/kernel/kernel.if
--- nsaserefpolicy/policy/modules/kernel/kernel.if	2013-03-15 11:41:12.925153525 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/kernel.if	2013-03-15 11:40:10.750152107 +0100
@@ -949,6 +949,107 @@
 
 ########################################
 ## <summary>
+##     Allow searching of numa state directory.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+##
+#
+interface(`kernel_search_numa_state',`
+       gen_require(`
+               type proc_t, proc_numa_t;
+       ')
+
+       search_dirs_pattern($1, proc_t, proc_numa_t)
+')
+
+########################################
+## <summary>
+##     Do not audit attempts to search the numa
+##     state directory.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain to not audit.
+##     </summary>
+## </param>
+##
+#
+interface(`kernel_dontaudit_search_numa_state',`
+       gen_require(`
+               type proc_numa_t;
+       ')
+
+       dontaudit $1 proc_numa_t:dir search;
+')
+
+########################################
+## <summary>
+##     Allow caller to read the numa state information.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+##
+#
+interface(`kernel_read_numa_state',`
+       gen_require(`
+               type proc_t, proc_numa_t;
+       ')
+
+       read_files_pattern($1, { proc_t proc_numa_t }, proc_numa_t)
+       read_lnk_files_pattern($1, { proc_t proc_numa_t }, proc_numa_t)
+
+       list_dirs_pattern($1, proc_t, proc_numa_t)
+')
+
+########################################
+## <summary>
+##     Allow caller to read the numa state symbolic links.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+##
+#
+interface(`kernel_read_numa_state_symlinks',`
+       gen_require(`
+               type proc_t, proc_numa_t;
+       ')
+
+       read_lnk_files_pattern($1, { proc_t proc_numa_t }, proc_numa_t)
+
+       list_dirs_pattern($1, proc_t, proc_numa_t)
+')
+
+########################################
+## <summary>
+##     Allow caller to write numa state information.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+##
+#
+interface(`kernel_write_numa_state',`
+       gen_require(`
+               type proc_t, proc_numa_t;
+       ')
+
+       write_files_pattern($1, { proc_t proc_numa_t }, proc_numa_t)
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts by caller to
 ##	read system state information in proc.
 ## </summary>
@@ -2448,6 +2549,24 @@
 	allow $1 unlabeled_t:dir { list_dir_perms relabelfrom };
 ')
 
+#######################################
+## <summary>
+##     Allow caller to relabel unlabeled filesystems.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`kernel_relabelfrom_unlabeled_fs',`
+       gen_require(`
+               type unlabeled_t;
+       ')
+
+       allow $1 unlabeled_t:filesystem relabelfrom;
+')
+
 ########################################
 ## <summary>
 ##	Allow caller to relabel unlabeled files.
diff -Nur nsaserefpolicy/policy/modules/kernel/kernel.te serefpolicy-3.7.19/policy/modules/kernel/kernel.te
--- nsaserefpolicy/policy/modules/kernel/kernel.te	2013-03-15 11:41:12.872153524 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/kernel.te	2013-03-15 11:40:10.475152101 +0100
@@ -98,6 +98,10 @@
 type proc_mdstat_t, proc_type;
 genfscon proc /mdstat gen_context(system_u:object_r:proc_mdstat_t,s0)
 
+type proc_numa_t, proc_type;
+genfscon proc /numatools gen_context(system_u:object_r:proc_numa_t,s0)
+mls_trusted_object(proc_numa_t)
+
 type proc_net_t, proc_type;
 genfscon proc /net gen_context(system_u:object_r:proc_net_t,s0)
 
@@ -290,6 +294,7 @@
 mls_socket_write_all_levels(kernel_t) 
 mls_fd_share_all_levels(kernel_t) 
 mls_file_downgrade(kernel_t)
+mls_fd_use_all_levels(kernel_t)
 
 logging_manage_generic_logs(kernel_t)
 
diff -Nur nsaserefpolicy/policy/modules/kernel/storage.fc serefpolicy-3.7.19/policy/modules/kernel/storage.fc
--- nsaserefpolicy/policy/modules/kernel/storage.fc	2013-03-15 11:41:12.863153524 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/storage.fc	2013-03-15 11:40:10.369152098 +0100
@@ -23,6 +23,8 @@
 /dev/ht[0-1]		-b	gen_context(system_u:object_r:tape_device_t,s0)
 /dev/hwcdrom		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/initrd		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
+/dev/infiniband/.*     -c      gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
+/dev/infiniband/.*     -b      gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/jsfd		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/jsflash		-c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/loop.*		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
@@ -53,7 +55,7 @@
 /dev/sonycd		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/tape.*		-c	gen_context(system_u:object_r:tape_device_t,s0)
 /dev/tgt		-c	gen_context(system_u:object_r:scsi_generic_device_t,s0)
-/dev/tw[a-z][^/]+	-c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
+/dev/tw[a-z][^/]*	-c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/ub[a-z][^/]+	-b	gen_context(system_u:object_r:removable_device_t,mls_systemhigh)
 /dev/ubd[^/]*		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/vd[^/]*		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
diff -Nur nsaserefpolicy/policy/modules/kernel/terminal.if serefpolicy-3.7.19/policy/modules/kernel/terminal.if
--- nsaserefpolicy/policy/modules/kernel/terminal.if	2013-03-15 11:41:12.938153526 +0100
+++ serefpolicy-3.7.19/policy/modules/kernel/terminal.if	2013-03-15 11:40:10.950152111 +0100
@@ -339,6 +339,25 @@
 	allow $1 console_device_t:chr_file relabel_chr_file_perms;
 ')
 
+#######################################
+## <summary>
+##  Relabel from and to the console type.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`term_relabel_devpts',`
+    gen_require(`
+        type devpts_t;
+    ')
+
+    dev_list_all_dev_nodes($1)
+    allow $1 devpts_t:chr_file relabel_chr_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Create the console device (/dev/console).
diff -Nur nsaserefpolicy/policy/modules/roles/staff.te serefpolicy-3.7.19/policy/modules/roles/staff.te
--- nsaserefpolicy/policy/modules/roles/staff.te	2013-03-15 11:41:12.952153526 +0100
+++ serefpolicy-3.7.19/policy/modules/roles/staff.te	2013-03-15 11:40:11.155152116 +0100
@@ -23,6 +23,8 @@
 kernel_getattr_core_if(staff_t)
 kernel_getattr_message_if(staff_t)
 kernel_read_software_raid_state(staff_t)
+kernel_read_numa_state(staff_t)
+kernel_write_numa_state(staff_t)
 
 auth_domtrans_pam_console(staff_t)
 
diff -Nur nsaserefpolicy/policy/modules/roles/sysadm_secadm.te serefpolicy-3.7.19/policy/modules/roles/sysadm_secadm.te
--- nsaserefpolicy/policy/modules/roles/sysadm_secadm.te	2013-03-15 11:41:12.955153526 +0100
+++ serefpolicy-3.7.19/policy/modules/roles/sysadm_secadm.te	2013-03-15 11:40:11.251152118 +0100
@@ -17,6 +17,8 @@
 # Local policy
 #
 
+mls_file_write_all_levels(sysadm_t)
+
 logging_manage_audit_log(sysadm_t)
 logging_manage_audit_config(sysadm_t)
 logging_run_auditctl(sysadm_t, sysadm_r)
diff -Nur nsaserefpolicy/policy/modules/roles/sysadm.te serefpolicy-3.7.19/policy/modules/roles/sysadm.te
--- nsaserefpolicy/policy/modules/roles/sysadm.te	2013-03-15 11:41:12.950153526 +0100
+++ serefpolicy-3.7.19/policy/modules/roles/sysadm.te	2013-03-15 11:40:11.099152115 +0100
@@ -196,9 +196,9 @@
 	firstboot_run(sysadm_t, sysadm_r)
 ')
 
-optional_policy(`
-	fstools_run(sysadm_t, sysadm_r)
-')
+#optional_policy(`
+#	fstools_run(sysadm_t, sysadm_r)
+#')
 
 ifndef(`distro_redhat',`
 optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/roles/unconfineduser.te serefpolicy-3.7.19/policy/modules/roles/unconfineduser.te
--- nsaserefpolicy/policy/modules/roles/unconfineduser.te	2013-03-15 11:41:12.972153527 +0100
+++ serefpolicy-3.7.19/policy/modules/roles/unconfineduser.te	2013-03-15 11:40:11.283152119 +0100
@@ -391,6 +391,10 @@
 ')
 
 optional_policy(`
+    openshift_run(unconfined_usertype, unconfined_r)
+')
+
+optional_policy(`
 	virt_transition_svirt(unconfined_t, unconfined_r)
 	#virt_run(unconfined_t, unconfined_r)
 ')
diff -Nur nsaserefpolicy/policy/modules/roles/unprivuser.te serefpolicy-3.7.19/policy/modules/roles/unprivuser.te
--- nsaserefpolicy/policy/modules/roles/unprivuser.te	2013-03-15 11:41:12.953153526 +0100
+++ serefpolicy-3.7.19/policy/modules/roles/unprivuser.te	2013-03-15 11:40:11.216152117 +0100
@@ -13,6 +13,9 @@
 
 userdom_unpriv_user_template(user)
 
+kernel_read_numa_state(user_t)
+kernel_write_numa_state(user_t)
+
 fs_exec_noxattr(user_t)
 
 tunable_policy(`allow_execmod',`
diff -Nur nsaserefpolicy/policy/modules/script1.sh serefpolicy-3.7.19/policy/modules/script1.sh
--- nsaserefpolicy/policy/modules/script1.sh	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/script1.sh	2013-03-15 11:40:09.678152082 +0100
@@ -0,0 +1,8 @@
+#!/bin/bash
+
+for i in `grep -l -E "\.log[^\.\*]" system/*.fc |cut -d ":" -f 1`;do
+	echo $i
+	sed -i 's/\.log[ \t]/\.log\.\*\t/' $i
+done
+
+#sed -i 's/\.log/\.log\.\*/'
diff -Nur nsaserefpolicy/policy/modules/services/abrt.fc serefpolicy-3.7.19/policy/modules/services/abrt.fc
--- nsaserefpolicy/policy/modules/services/abrt.fc	2013-03-15 11:41:13.696153543 +0100
+++ serefpolicy-3.7.19/policy/modules/services/abrt.fc	2013-03-15 11:40:12.968152157 +0100
@@ -11,7 +11,7 @@
 /var/cache/abrt(/.*)?			gen_context(system_u:object_r:abrt_var_cache_t,s0)
 /var/cache/abrt-di(/.*)?		gen_context(system_u:object_r:abrt_var_cache_t,s0)
 
-/var/log/abrt-logger		--	gen_context(system_u:object_r:abrt_var_log_t,s0)
+/var/log/abrt-logger.*		--	gen_context(system_u:object_r:abrt_var_log_t,s0)
 
 /var/run/abrt\.pid		--	gen_context(system_u:object_r:abrt_var_run_t,s0)
 /var/run/abrtd?\.lock		--	gen_context(system_u:object_r:abrt_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/abrt.te serefpolicy-3.7.19/policy/modules/services/abrt.te
--- nsaserefpolicy/policy/modules/services/abrt.te	2013-03-15 11:41:14.866153570 +0100
+++ serefpolicy-3.7.19/policy/modules/services/abrt.te	2013-03-15 11:40:15.911152225 +0100
@@ -196,6 +196,7 @@
 logging_read_generic_logs(abrt_t)
 
 miscfiles_read_certs(abrt_t)
+miscfiles_read_public_files(abrt_t)
 
 userdom_dontaudit_read_user_home_content_files(abrt_t)
 userdom_dontaudit_read_admin_home_files(abrt_t)
diff -Nur nsaserefpolicy/policy/modules/services/aide.fc serefpolicy-3.7.19/policy/modules/services/aide.fc
--- nsaserefpolicy/policy/modules/services/aide.fc	2013-03-15 11:41:15.065153574 +0100
+++ serefpolicy-3.7.19/policy/modules/services/aide.fc	2013-03-15 11:40:16.251152232 +0100
@@ -3,4 +3,4 @@
 /var/lib/aide(/.*)?		gen_context(system_u:object_r:aide_db_t,mls_systemhigh)
 
 /var/log/aide(/.*)?		gen_context(system_u:object_r:aide_log_t,mls_systemhigh)
-/var/log/aide\.log	--	gen_context(system_u:object_r:aide_log_t,mls_systemhigh)
+/var/log/aide\.log.*	--	gen_context(system_u:object_r:aide_log_t,mls_systemhigh)
diff -Nur nsaserefpolicy/policy/modules/services/aide.te serefpolicy-3.7.19/policy/modules/services/aide.te
--- nsaserefpolicy/policy/modules/services/aide.te	2013-03-15 11:41:13.664153542 +0100
+++ serefpolicy-3.7.19/policy/modules/services/aide.te	2013-06-18 08:52:03.478519011 +0200
@@ -48,3 +48,12 @@
 seutil_use_newrole_fds(aide_t)
 
 userdom_use_user_terminals(aide_t)
+
+optional_policy(`
+	cron_system_entry(aide_t, aide_exec_t)
+')
+
+optional_policy(`
+    prelink_domtrans(aide_t)
+')
+
diff -Nur nsaserefpolicy/policy/modules/services/aisexec.fc serefpolicy-3.7.19/policy/modules/services/aisexec.fc
--- nsaserefpolicy/policy/modules/services/aisexec.fc	2013-03-15 11:41:15.906153593 +0100
+++ serefpolicy-3.7.19/policy/modules/services/aisexec.fc	2013-03-15 11:40:18.775152290 +0100
@@ -5,6 +5,6 @@
 
 /var/lib/openais(/.*)?                         gen_context(system_u:object_r:aisexec_var_lib_t,s0)
 
-/var/log/cluster/aisexec\.log          --      gen_context(system_u:object_r:aisexec_var_log_t,s0)
+/var/log/cluster/aisexec\.log.*	         --      gen_context(system_u:object_r:aisexec_var_log_t,s0)
 
 /var/run/aisexec\.pid                  --      gen_context(system_u:object_r:aisexec_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/amavis.fc serefpolicy-3.7.19/policy/modules/services/amavis.fc
--- nsaserefpolicy/policy/modules/services/amavis.fc	2013-03-15 11:41:13.563153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/amavis.fc	2013-03-15 11:40:12.439152145 +0100
@@ -13,7 +13,7 @@
 
 /var/amavis(/.*)?			gen_context(system_u:object_r:amavis_var_lib_t,s0)
 /var/lib/amavis(/.*)?			gen_context(system_u:object_r:amavis_var_lib_t,s0)
-/var/log/amavisd\.log		--	gen_context(system_u:object_r:amavis_var_log_t,s0)
+/var/log/amavisd\.log.*		--	gen_context(system_u:object_r:amavis_var_log_t,s0)
 /var/run/amavis(d)?(/.*)?		gen_context(system_u:object_r:amavis_var_run_t,s0)
 /var/spool/amavisd(/.*)?		gen_context(system_u:object_r:amavis_spool_t,s0)
 /var/virusmails(/.*)?			gen_context(system_u:object_r:amavis_quarantine_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/amavis.if serefpolicy-3.7.19/policy/modules/services/amavis.if
--- nsaserefpolicy/policy/modules/services/amavis.if	2013-03-15 11:41:13.789153545 +0100
+++ serefpolicy-3.7.19/policy/modules/services/amavis.if	2013-03-15 11:40:13.063152160 +0100
@@ -207,6 +207,44 @@
 	files_search_pids($1)
 ')
 
+#######################################
+## <summary>
+##  Write of amavis pid files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`amavis_write_pid_files',`
+    gen_require(`
+        type amavis_var_run_t;
+    ')
+
+    allow $1 amavis_var_run_t:file write_file_perms;
+    files_search_pids($1)
+')
+
+####################################
+## <summary>
+##  Write of amavis pid files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`amavis_delete_pid_files',`
+    gen_require(`
+        type amavis_var_run_t;
+    ')
+
+    allow $1 amavis_var_run_t:file delete_file_perms;
+    files_search_pids($1)
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
diff -Nur nsaserefpolicy/policy/modules/services/amavis.te serefpolicy-3.7.19/policy/modules/services/amavis.te
--- nsaserefpolicy/policy/modules/services/amavis.te	2013-03-15 11:41:15.698153589 +0100
+++ serefpolicy-3.7.19/policy/modules/services/amavis.te	2013-03-15 11:40:18.130152275 +0100
@@ -177,6 +177,10 @@
 ')
 
 optional_policy(`
+    antivirus_domain_template(amavis_t)
+')
+
+optional_policy(`
 	clamav_stream_connect(amavis_t)
 	clamav_domtrans_clamscan(amavis_t)
 	clamav_read_state_clamd(amavis_t)
@@ -207,6 +211,8 @@
 
 optional_policy(`
 	snmp_manage_var_lib_files(amavis_t)
+	snmp_manage_var_lib_dirs(amavis_t)
+	snmp_stream_connect(amavis_t)
 ')
 
 optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/services/antivirus.fc serefpolicy-3.7.19/policy/modules/services/antivirus.fc
--- nsaserefpolicy/policy/modules/services/antivirus.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/antivirus.fc	2013-03-15 11:40:13.796152176 +0100
@@ -0,0 +1 @@
+/var/opt/f-secure(/.*)?			gen_context(system_u:object_r:antivirus_db_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/antivirus.if serefpolicy-3.7.19/policy/modules/services/antivirus.if
--- nsaserefpolicy/policy/modules/services/antivirus.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/antivirus.if	2013-03-15 11:40:14.856152200 +0100
@@ -0,0 +1,20 @@
+## <summary>SELinux policy for antivirus programs.</summary>
+
+######################################
+## <summary>
+##  Creates types and rules for a basic
+##  antivirus domain.
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+interface(`antivirus_domain_template',`
+        gen_require(`
+                attribute antivirus_domain;
+        ')
+
+        typeattribute $1 antivirus_domain;
+')
diff -Nur nsaserefpolicy/policy/modules/services/antivirus.te serefpolicy-3.7.19/policy/modules/services/antivirus.te
--- nsaserefpolicy/policy/modules/services/antivirus.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/antivirus.te	2013-03-15 11:40:13.464152169 +0100
@@ -0,0 +1,32 @@
+policy_module(antivirus, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+##  <p>
+##  Allow antivirus programs to read non security files on a system
+##  </p>
+## </desc>
+gen_tunable(antivirus_can_scan_system, false)
+
+attribute antivirus_domain;
+
+type antivirus_db_t;
+files_type(antivirus_db_t)
+
+########################################
+#
+# antivirus domain local policy
+#
+
+manage_files_pattern(antivirus_domain, antivirus_db_t, antivirus_db_t)
+manage_dirs_pattern(antivirus_domain, antivirus_db_t, antivirus_db_t)
+
+tunable_policy(`antivirus_can_scan_system',`
+        files_read_non_security_files(antivirus_domain)
+        files_getattr_all_pipes(antivirus_domain)
+        files_getattr_all_sockets(antivirus_domain)
+')
diff -Nur nsaserefpolicy/policy/modules/services/apache.fc serefpolicy-3.7.19/policy/modules/services/apache.fc
--- nsaserefpolicy/policy/modules/services/apache.fc	2013-03-15 11:41:14.431153560 +0100
+++ serefpolicy-3.7.19/policy/modules/services/apache.fc	2013-04-10 15:49:21.610995576 +0200
@@ -88,7 +88,10 @@
 /var/lib/httpd(/.*)?			gen_context(system_u:object_r:httpd_var_lib_t,s0)
 /var/lib/php/session(/.*)?		gen_context(system_u:object_r:httpd_var_run_t,s0)
 /var/lib/squirrelmail/prefs(/.*)?	gen_context(system_u:object_r:httpd_squirrelmail_t,s0)
-
+/var/lib/stickshift/\.httpd\.d(/.*)?         gen_context(system_u:object_r:httpd_config_t,s0)
+/var/lib/openshift/\.httpd\.d(/.*)?         gen_context(system_u:object_r:httpd_config_t,s0)
+/var/lib/openshift/\.log/httpd(/.*)?              gen_context(system_u:object_r:httpd_log_t,s0)
+/var/lib/owncloud(/.*)?                        gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/log/apache(2)?(/.*)?		gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/apache-ssl(2)?(/.*)?		gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/cacti(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
@@ -96,6 +99,7 @@
 /var/log/cherokee(/.*)?     gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/httpd(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/z-push(/.*)?          gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 
 ifdef(`distro_debian', `
 /var/log/horde2(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
@@ -127,13 +131,17 @@
 
 /var/www/gallery/albums(/.*)?		gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/www/moodledata(/.*)?              gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/www/moodle(/.*)?          gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 
 /var/lib/koji(/.*)? 			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/lib/rt3/data/RT-Shredder(/.*)?	gen_context(system_u:object_r:httpd_var_lib_t,s0)
 
+/var/www/openshift/console/tmp(/.*)?    gen_context(system_u:object_r:httpd_tmp_t,s0)
+/var/www/openshift/console/log(/.*)?   gen_context(system_u:object_r:httpd_log_t,s0)
+/var/www/stickshift/[^/]*/log(/.*)?     gen_context(system_u:object_r:httpd_log_t,s0)
 /var/lib/svn(/.*)?		gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/lib/trac(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
-
+/var/lib/z-push(/.*)?	 gen_context(system_u:object_r:httpd_var_lib_t,s0)
 
 /var/www/svn(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/www/svn/hooks(/.*)?		gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/apache.if serefpolicy-3.7.19/policy/modules/services/apache.if
--- nsaserefpolicy/policy/modules/services/apache.if	2013-03-15 11:41:15.625153587 +0100
+++ serefpolicy-3.7.19/policy/modules/services/apache.if	2013-05-29 11:17:16.495975267 +0200
@@ -295,6 +295,26 @@
 
 ########################################
 ## <summary>
+##	Read user web content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`apache_manage_user_content',`
+	gen_require(`
+		type httpd_user_content_t;
+	')
+
+	allow $1 httpd_user_content_t:dir list_dir_perms;
+	manage_files_pattern($1, httpd_user_content_t, httpd_user_content_t)
+	manage_lnk_files_pattern($1, httpd_user_content_t, httpd_user_content_t)
+')
+
+########################################
+## <summary>
 ##	Transition to apache.
 ## </summary>
 ## <param name="domain">
@@ -694,6 +714,28 @@
 
 ########################################
 ## <summary>
+##     dontaudit attempts to read
+##     apache log files.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+## <rolecap/>
+#
+interface(`apache_dontaudit_read_log',`
+       gen_require(`
+               type httpd_log_t;
+       ')
+
+       dontaudit $1 httpd_log_t:file read_file_perms;
+       dontaudit $1 httpd_log_t:lnk_file read_lnk_file_perms;
+')
+
+
+########################################
+## <summary>
 ##	Allow the specified domain to read
 ##	apache log files.
 ## </summary>
@@ -1419,11 +1461,8 @@
 	admin_pattern($1, httpd_tmp_t)
 	admin_pattern($1, httpd_php_tmp_t)
 	admin_pattern($1, httpd_suexec_tmp_t)
-#	files_tmp_filetrans($1, httpd_tmp_t, { file dir })
 
 ifdef(`TODO',`
-	#apache_set_booleans($1, $2, $3, httpd_bool_t )
-	#seutil_setsebool_role_template($1, $3, $2)
 	allow httpd_setsebool_t httpd_bool_t:dir list_dir_perms;
 	allow httpd_setsebool_t httpd_bool_t:file rw_file_perms;
 ')
@@ -1486,3 +1525,23 @@
 
     allow $1 httpd_t:unix_stream_socket rw_socket_perms;
 ')
+
+#######################################
+## <summary>
+##  Allow any httpd_exec_t to be an entrypoint of this domain
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`apache_entrypoint',`
+    gen_require(`
+        type httpd_exec_t;
+    ')
+    allow $1 httpd_exec_t:file entrypoint;
+')
+
+
diff -Nur nsaserefpolicy/policy/modules/services/apache.te serefpolicy-3.7.19/policy/modules/services/apache.te
--- nsaserefpolicy/policy/modules/services/apache.te	2013-03-15 11:41:15.150153576 +0100
+++ serefpolicy-3.7.19/policy/modules/services/apache.te	2013-05-24 08:50:48.659744896 +0200
@@ -195,6 +195,13 @@
 gen_tunable(httpd_use_cifs, false)
 
 ## <desc>
+##  <p>
+##  Allow httpd to access FUSE file systems
+##  </p>
+## </desc>
+gen_tunable(httpd_use_fusefs, false)
+
+## <desc>
 ## <p>
 ## Allow httpd to run gpg in gpg-web domain
 ## </p>
@@ -215,6 +222,20 @@
 ## </desc>
 gen_tunable(allow_httpd_sys_script_anon_write, false)
 
+## <desc>
+## <p>
+## Allow Apache to run in stickshift mode, not transition to passenger
+## </p>
+## </desc>
+gen_tunable(httpd_run_stickshift, false)
+
+## <desc>
+## <p>
+## Allow Apache to query NS records
+## </p>
+## </desc>
+gen_tunable(httpd_verify_dns, false)
+
 attribute httpdcontent;
 attribute httpd_user_content_type;
 
@@ -380,6 +401,7 @@
 files_lock_filetrans(httpd_t, httpd_lock_t, file)
 
 allow httpd_t httpd_log_t:dir setattr;
+create_dirs_pattern(httpd_t, httpd_log_t, httpd_log_t)
 create_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
 append_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
 read_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
@@ -423,7 +445,8 @@
 fs_tmpfs_filetrans(httpd_t, httpd_tmpfs_t, { dir file lnk_file sock_file fifo_file })
 
 manage_files_pattern(httpd_t, httpd_var_lib_t, httpd_var_lib_t)
-files_var_lib_filetrans(httpd_t, httpd_var_lib_t, file)
+manage_dirs_pattern(httpd_t, httpd_var_lib_t, httpd_var_lib_t)
+files_var_lib_filetrans(httpd_t, httpd_var_lib_t, { dir file })
 
 setattr_dirs_pattern(httpd_t, httpd_var_run_t, httpd_var_run_t)
 manage_dirs_pattern(httpd_t, httpd_var_run_t, httpd_var_run_t)
@@ -438,6 +461,7 @@
 kernel_read_kernel_sysctls(httpd_t)
 # for modules that want to access /proc/meminfo
 kernel_read_system_state(httpd_t)
+kernel_read_network_state(httpd_t)
 kernel_search_network_sysctl(httpd_t)
 
 corenet_all_recvfrom_unlabeled(httpd_t)
@@ -578,6 +602,10 @@
 	fs_cifs_domtrans(httpd_t, httpd_sys_script_t)
 ')
 
+tunable_policy(`httpd_enable_cgi && httpd_use_fusefs',`
+    fs_fusefs_domtrans(httpd_t, httpd_sys_script_t)
+')
+
 tunable_policy(`httpd_enable_cgi && httpd_unified && httpd_builtin_scripting',`
 	domtrans_pattern(httpd_t, httpdcontent, httpd_sys_script_t)
 	filetrans_pattern(httpd_t, httpd_sys_content_t, httpd_sys_rw_content_t, { file dir lnk_file })
@@ -646,6 +674,12 @@
 	fs_manage_cifs_symlinks(httpd_t)
 ')
 
+tunable_policy(`httpd_use_fusefs',`
+    fs_manage_fusefs_dirs(httpd_t)
+    fs_manage_fusefs_files(httpd_t)
+    fs_manage_fusefs_symlinks(httpd_t)
+')
+
 tunable_policy(`httpd_setrlimit',`
 	allow httpd_t self:process setrlimit;
 	allow httpd_t self:capability sys_resource;
@@ -783,10 +817,47 @@
 	openca_kill(httpd_t)
 ')
 
+tunable_policy(`httpd_verify_dns',`
+       corenet_udp_bind_generic_port(httpd_t)
+')
+
 optional_policy(`
-    passenger_domtrans(httpd_t)
-    passenger_manage_pid_content(httpd_t)
-    passenger_read_lib_files(httpd_t)
+    tunable_policy(`httpd_run_stickshift', `
+        allow httpd_t self:capability { fowner fsetid sys_resource };
+		dontaudit httpd_t self:capability sys_ptrace;
+        allow httpd_t self:process setexec;
+
+        files_dontaudit_getattr_all_files(httpd_t)
+        domain_dontaudit_read_all_domains_state(httpd_t)
+        domain_getpgid_all_domains(httpd_t)
+	')
+')
+
+optional_policy(`
+	tunable_policy(`httpd_run_stickshift', `
+		passenger_exec(httpd_t)
+        passenger_manage_pid_content(httpd_t)
+        passenger_manage_lib_files(httpd_t)
+		openshift_read_lib_files(httpd_t)
+	',`
+        passenger_domtrans(httpd_t)
+        passenger_manage_pid_content(httpd_t)
+        passenger_read_lib_files(httpd_t)
+        passenger_stream_connect(httpd_t)
+        passenger_manage_tmp_files(httpd_t)
+    ')
+')
+
+optional_policy(`
+    openshift_search_lib(httpd_t)
+    openshift_initrc_signull(httpd_t)
+	openshift_initrc_signal(httpd_t)
+')
+
+optional_policy(`
+	tunable_policy(`httpd_run_stickshift', `
+		oddjob_dbus_chat(httpd_t)
+	')
 ')
 
 optional_policy(`
@@ -794,6 +865,10 @@
 ')
 
 optional_policy(`
+    rpm_dontaudit_read_db(httpd_t)
+')
+
+optional_policy(`
 	rpc_search_nfs_state_data(httpd_t)
 ')
 
@@ -932,6 +1007,10 @@
 	postgresql_stream_connect(httpd_php_t)
 ')
 
+optional_policy(`
+    snmp_read_snmp_var_lib_files(httpd_sys_script_t)
+')
+
 ########################################
 #
 # Apache suexec local policy
@@ -1143,6 +1222,16 @@
 	fs_exec_cifs_files(httpd_suexec_t)
 ')
 
+tunable_policy(`httpd_use_fusefs',`
+    fs_manage_fusefs_dirs(httpd_sys_script_t)
+    fs_manage_fusefs_files(httpd_sys_script_t)
+    fs_manage_fusefs_symlinks(httpd_sys_script_t)
+    fs_manage_fusefs_dirs(httpd_suexec_t)
+    fs_manage_fusefs_files(httpd_suexec_t)
+    fs_manage_fusefs_symlinks(httpd_suexec_t)
+    fs_exec_fusefs_files(httpd_suexec_t)
+')
+
 tunable_policy(`httpd_enable_homedirs && use_samba_home_dirs',`
 	fs_read_cifs_files(httpd_sys_script_t)
 	fs_read_cifs_symlinks(httpd_sys_script_t)
@@ -1150,6 +1239,7 @@
 
 optional_policy(`
 	clamav_domtrans_clamscan(httpd_sys_script_t)
+	clamav_domtrans_clamscan(httpd_t)
 ')
 
 optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/services/apcupsd.te serefpolicy-3.7.19/policy/modules/services/apcupsd.te
--- nsaserefpolicy/policy/modules/services/apcupsd.te	2013-03-15 11:41:13.626153541 +0100
+++ serefpolicy-3.7.19/policy/modules/services/apcupsd.te	2013-03-15 11:40:12.655152150 +0100
@@ -60,9 +60,11 @@
 corenet_tcp_sendrecv_generic_node(apcupsd_t)
 corenet_tcp_sendrecv_all_ports(apcupsd_t)
 corenet_tcp_bind_generic_node(apcupsd_t)
+corenet_udp_bind_generic_node(apcupsd_t)
 corenet_tcp_bind_apcupsd_port(apcupsd_t)
 corenet_sendrecv_apcupsd_server_packets(apcupsd_t)
 corenet_tcp_connect_apcupsd_port(apcupsd_t)
+corenet_udp_bind_snmp_port(apcupsd_t)
 
 dev_rw_generic_usb_dev(apcupsd_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/bcfg2.fc serefpolicy-3.7.19/policy/modules/services/bcfg2.fc
--- nsaserefpolicy/policy/modules/services/bcfg2.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/bcfg2.fc	2013-03-15 11:40:12.565152148 +0100
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/bcfg2					--	gen_context(system_u:object_r:bcfg2_initrc_exec_t,s0)
+
+/usr/sbin/bcfg2-server						--	gen_context(system_u:object_r:bcfg2_exec_t,s0)
+
+/var/lib/bcfg2(/.*)?							gen_context(system_u:object_r:bcfg2_var_lib_t,s0)
+
+/var/run/bcfg2-server\.pid					--	gen_context(system_u:object_r:bcfg2_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/bcfg2.if serefpolicy-3.7.19/policy/modules/services/bcfg2.if
--- nsaserefpolicy/policy/modules/services/bcfg2.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/bcfg2.if	2013-03-15 11:40:18.152152276 +0100
@@ -0,0 +1,152 @@
+## <summary>bcfg2-server daemon which serves configurations to clients based on the data in its repository</summary>
+
+########################################
+## <summary>
+##	Execute bcfg2 in the bcfg2 domain..
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`bcfg2_domtrans',`
+	gen_require(`
+		type bcfg2_t, bcfg2_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, bcfg2_exec_t, bcfg2_t)
+')
+
+########################################
+## <summary>
+##	Execute bcfg2 server in the bcfg2 domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`bcfg2_initrc_domtrans',`
+	gen_require(`
+		type bcfg2_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, bcfg2_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Search bcfg2 lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`bcfg2_search_lib',`
+	gen_require(`
+		type bcfg2_var_lib_t;
+	')
+
+	allow $1 bcfg2_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read bcfg2 lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`bcfg2_read_lib_files',`
+	gen_require(`
+		type bcfg2_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, bcfg2_var_lib_t, bcfg2_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage bcfg2 lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`bcfg2_manage_lib_files',`
+	gen_require(`
+		type bcfg2_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, bcfg2_var_lib_t, bcfg2_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage bcfg2 lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`bcfg2_manage_lib_dirs',`
+	gen_require(`
+		type bcfg2_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, bcfg2_var_lib_t, bcfg2_var_lib_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an bcfg2 environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`bcfg2_admin',`
+	gen_require(`
+		type bcfg2_t;
+		type bcfg2_initrc_exec_t;
+		type bcfg2_var_lib_t;
+	type bcfg2_unit_file_t;
+	')
+
+	allow $1 bcfg2_t:process { ptrace signal_perms };
+	ps_process_pattern($1, bcfg2_t)
+
+	bcfg2_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 bcfg2_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, bcfg2_var_lib_t)
+
+')
diff -Nur nsaserefpolicy/policy/modules/services/bcfg2.te serefpolicy-3.7.19/policy/modules/services/bcfg2.te
--- nsaserefpolicy/policy/modules/services/bcfg2.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/bcfg2.te	2013-03-15 11:40:16.077152228 +0100
@@ -0,0 +1,55 @@
+policy_module(bcfg2, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type bcfg2_t;
+type bcfg2_exec_t;
+init_daemon_domain(bcfg2_t, bcfg2_exec_t)
+
+type bcfg2_initrc_exec_t;
+init_script_file(bcfg2_initrc_exec_t)
+
+type bcfg2_var_lib_t;
+files_type(bcfg2_var_lib_t)
+
+type bcfg2_var_run_t;
+files_pid_file(bcfg2_var_run_t)
+
+########################################
+#
+# bcfg2 local policy
+#
+
+allow bcfg2_t self:fifo_file rw_fifo_file_perms;
+allow bcfg2_t self:tcp_socket create_stream_socket_perms;
+allow bcfg2_t self:unix_stream_socket { connectto create_stream_socket_perms };
+
+manage_dirs_pattern(bcfg2_t, bcfg2_var_lib_t, bcfg2_var_lib_t)
+manage_files_pattern(bcfg2_t, bcfg2_var_lib_t, bcfg2_var_lib_t)
+files_var_lib_filetrans(bcfg2_t, bcfg2_var_lib_t, dir )
+
+manage_files_pattern(bcfg2_t, bcfg2_var_run_t, bcfg2_var_run_t)
+files_pid_filetrans(bcfg2_t, bcfg2_var_run_t, file )
+
+kernel_read_system_state(bcfg2_t)
+
+corenet_tcp_bind_cyphesis_port(bcfg2_t)
+
+dev_read_urand(bcfg2_t)
+
+domain_use_interactive_fds(bcfg2_t)
+
+files_read_usr_files(bcfg2_t)
+
+auth_use_nsswitch(bcfg2_t)
+
+logging_send_syslog_msg(bcfg2_t)
+
+miscfiles_read_localization(bcfg2_t)
+
+optional_policy(`
+	unconfined_domain(bcfg2_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/bind.fc serefpolicy-3.7.19/policy/modules/services/bind.fc
--- nsaserefpolicy/policy/modules/services/bind.fc	2013-03-15 11:41:15.718153589 +0100
+++ serefpolicy-3.7.19/policy/modules/services/bind.fc	2013-03-15 11:40:18.181152276 +0100
@@ -61,3 +61,4 @@
 /var/named/chroot/var/log/named.*	--	gen_context(system_u:object_r:named_log_t,s0)
 /var/named/dynamic(/.*)?		gen_context(system_u:object_r:named_cache_t,s0)
 ')
+/var/tmp/DNS_25 	--	gen_context(system_u:object_r:named_tmp_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/bind.te serefpolicy-3.7.19/policy/modules/services/bind.te
--- nsaserefpolicy/policy/modules/services/bind.te	2013-03-15 11:41:15.285153579 +0100
+++ serefpolicy-3.7.19/policy/modules/services/bind.te	2013-03-15 11:40:16.783152244 +0100
@@ -7,6 +7,13 @@
 #
 
 ## <desc>
+##  <p>
+##  Allow BIND to bind apache port.
+##  </p>
+## </desc>
+gen_tunable(named_bind_http_port, false)
+
+## <desc>
 ## <p>
 ## Allow BIND to write the master zone files.
 ## Generally this is used for dynamic DNS or zone transfers.
@@ -148,6 +155,10 @@
 userdom_dontaudit_use_unpriv_user_fds(named_t)
 userdom_dontaudit_search_user_home_dirs(named_t)
 
+tunable_policy(`named_bind_http_port',`
+    corenet_tcp_bind_http_port(named_t)
+')
+
 tunable_policy(`named_write_master_zones',`
 	manage_dirs_pattern(named_t, named_zone_t, named_zone_t)
 	manage_files_pattern(named_t, named_zone_t, named_zone_t)
diff -Nur nsaserefpolicy/policy/modules/services/cachefilesd.fc serefpolicy-3.7.19/policy/modules/services/cachefilesd.fc
--- nsaserefpolicy/policy/modules/services/cachefilesd.fc	2013-03-15 11:41:15.859153592 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cachefilesd.fc	2013-03-15 11:40:18.729152289 +0100
@@ -26,4 +26,4 @@
 /var/fscache(/.*)?		gen_context(system_u:object_r:cachefiles_var_t,s0)
 /var/cache/fscache(/.*)?		gen_context(system_u:object_r:cachefiles_var_t,s0)
 
-/var/run/cachefilesd\.pid --	gen_context(system_u:object_r:cachefiles_var_t,s0)
+/var/run/cachefilesd\.pid --	gen_context(system_u:object_r:cachefilesd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/certmonger.te serefpolicy-3.7.19/policy/modules/services/certmonger.te
--- nsaserefpolicy/policy/modules/services/certmonger.te	2013-03-15 11:41:13.668153542 +0100
+++ serefpolicy-3.7.19/policy/modules/services/certmonger.te	2013-03-15 11:40:12.890152156 +0100
@@ -29,7 +29,7 @@
 allow certmonger_t self:capability { dac_override dac_read_search setgid setuid kill sys_nice };
 dontaudit certmonger_t self:capability sys_tty_config;
 
-allow certmonger_t self:process { fork getsched setsched sigkill };
+allow certmonger_t self:process { fork getsched setsched sigkill signal };
 allow certmonger_t self:fifo_file rw_file_perms;
 allow certmonger_t self:unix_stream_socket create_stream_socket_perms;
 allow certmonger_t self:tcp_socket create_stream_socket_perms;
diff -Nur nsaserefpolicy/policy/modules/services/cgroup.fc serefpolicy-3.7.19/policy/modules/services/cgroup.fc
--- nsaserefpolicy/policy/modules/services/cgroup.fc	2013-03-15 11:41:15.770153590 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cgroup.fc	2013-03-15 11:40:18.522152284 +0100
@@ -11,5 +11,5 @@
 /sbin/cgrulesengd		--	gen_context(system_u:object_r:cgred_exec_t,s0)
 /sbin/cgclear           --  gen_context(system_u:object_r:cgclear_exec_t,s0)
 
-/var/log/cgrulesengd\.log   --  gen_context(system_u:object_r:cgred_log_t,s0)
+/var/log/cgrulesengd\.log.*	  --  gen_context(system_u:object_r:cgred_log_t,s0)
 /var/run/cgred.*			gen_context(system_u:object_r:cgred_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/cgroup.te serefpolicy-3.7.19/policy/modules/services/cgroup.te
--- nsaserefpolicy/policy/modules/services/cgroup.te	2013-03-15 11:41:15.614153587 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cgroup.te	2013-03-15 11:40:17.795152268 +0100
@@ -90,6 +90,7 @@
 files_pid_filetrans(cgred_t, cgred_var_run_t, { file sock_file })
 
 kernel_read_system_state(cgred_t)
+kernel_read_all_sysctls(cgred_t)
 
 mcs_file_read_all(cgred_t)
 
@@ -102,6 +103,7 @@
 files_read_etc_files(cgred_t)
 
 fs_write_cgroup_files(cgred_t)
+fs_list_inotifyfs(cgred_t)
 
 auth_use_nsswitch(cgred_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/chronyd.te serefpolicy-3.7.19/policy/modules/services/chronyd.te
--- nsaserefpolicy/policy/modules/services/chronyd.te	2013-03-15 11:41:15.277153579 +0100
+++ serefpolicy-3.7.19/policy/modules/services/chronyd.te	2013-07-09 16:41:50.622769655 +0200
@@ -34,7 +34,7 @@
 # Local policy
 #
 
-allow chronyd_t self:capability { dac_override ipc_lock setuid setgid sys_resource sys_time };
+allow chronyd_t self:capability { dac_override ipc_lock fsetid setuid setgid sys_nice sys_resource sys_time };
 allow chronyd_t self:process { getcap setcap setrlimit };
 allow chronyd_t self:shm create_shm_perms;
 allow chronyd_t self:udp_socket create_socket_perms;
diff -Nur nsaserefpolicy/policy/modules/services/clamav.te serefpolicy-3.7.19/policy/modules/services/clamav.te
--- nsaserefpolicy/policy/modules/services/clamav.te	2013-03-15 11:41:15.342153581 +0100
+++ serefpolicy-3.7.19/policy/modules/services/clamav.te	2013-03-15 11:40:16.917152247 +0100
@@ -2,6 +2,13 @@
 policy_module(clamav, 1.7.1)
 
 ## <desc>
+##  <p>
+##  Allow clamscan to non security files on a system
+##  </p>
+## </desc>
+gen_tunable(clamscan_can_scan_system, false)
+
+## <desc>
 ## <p>
 ## Allow clamd to use JIT compiler
 ## </p>
@@ -142,6 +149,8 @@
 	amavis_read_spool_files(clamd_t)
 	amavis_spool_filetrans(clamd_t, clamd_var_run_t, sock_file)
 	amavis_create_pid_files(clamd_t)
+	amavis_write_pid_files(clamd_t)
+	amavis_delete_pid_files(clamd_t)
 ')
 
 optional_policy(`
@@ -202,6 +211,7 @@
 corenet_tcp_sendrecv_all_ports(freshclam_t)
 corenet_tcp_sendrecv_clamd_port(freshclam_t)
 corenet_tcp_connect_http_port(freshclam_t)
+corenet_tcp_connect_http_cache_port(freshclam_t)
 corenet_tcp_connect_clamd_port(freshclam_t)
 corenet_sendrecv_http_client_packets(freshclam_t)
 
@@ -297,6 +307,16 @@
 	dontaudit clamscan_t self:process execmem;
 ') 
 
+tunable_policy(`clamscan_can_scan_system',`
+        files_read_non_security_files(clamscan_t)
+        files_getattr_all_pipes(clamscan_t)
+        files_getattr_all_sockets(clamscan_t)
+
+        files_read_non_security_files(clamd_t)
+        files_getattr_all_pipes(clamd_t)
+        files_getattr_all_sockets(clamd_t)
+')
+
 optional_policy(`
 	amavis_manage_spool_files(clamscan_t)
 ')
@@ -304,3 +324,15 @@
 optional_policy(`
 	apache_read_sys_content(clamscan_t)
 ')
+
+optional_policy(`
+    antivirus_domain_template(clamd_t)
+')
+
+optional_policy(`
+    antivirus_domain_template(clamscan_t)
+')
+
+optional_policy(`
+    antivirus_domain_template(freshclam_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/cloudform.fc serefpolicy-3.7.19/policy/modules/services/cloudform.fc
--- nsaserefpolicy/policy/modules/services/cloudform.fc	2013-03-15 11:41:14.531153562 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cloudform.fc	2013-03-15 11:40:15.295152210 +0100
@@ -12,7 +12,7 @@
 /var/lib/mongodb(/.*)?		gen_context(system_u:object_r:mongod_var_lib_t,s0)
 
 /var/log/deltacloud-core(/.*)?	gen_context(system_u:object_r:deltacloudd_log_t,s0)
-/var/log/iwhd\.log		--		gen_context(system_u:object_r:iwhd_log_t,s0)
+/var/log/iwhd\.log.*		--		gen_context(system_u:object_r:iwhd_log_t,s0)
 /var/log/mongodb(/.*)?		gen_context(system_u:object_r:mongod_log_t,s0)
 
 /var/run/aeolus/dbomatic\.pid   --  gen_context(system_u:object_r:mongod_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/cobbler.te serefpolicy-3.7.19/policy/modules/services/cobbler.te
--- nsaserefpolicy/policy/modules/services/cobbler.te	2013-03-15 11:41:15.193153577 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cobbler.te	2013-03-15 11:40:16.562152239 +0100
@@ -149,6 +149,12 @@
 userdom_dontaudit_search_user_home_dirs(cobblerd_t)
 userdom_dontaudit_search_admin_dir(cobblerd_t)
 
+#optional_policy(`
+#	tunable_policy(`cobbler_run_unconfined',`
+#		unconfined_domain(cobblerd_t)
+#	')
+#')
+
 tunable_policy(`cobbler_anon_write',`
 	miscfiles_manage_public_files(cobblerd_t)
 ')
diff -Nur nsaserefpolicy/policy/modules/services/condor.te serefpolicy-3.7.19/policy/modules/services/condor.te
--- nsaserefpolicy/policy/modules/services/condor.te	2013-03-15 11:41:14.504153561 +0100
+++ serefpolicy-3.7.19/policy/modules/services/condor.te	2013-03-15 11:40:15.273152210 +0100
@@ -230,6 +230,7 @@
 auth_use_nsswitch(condor_startd_t)
 
 init_domtrans_script(condor_startd_t)
+init_initrc_domain(condor_startd_t)
 
 libs_exec_lib_files(condor_startd_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/consolekit.te serefpolicy-3.7.19/policy/modules/services/consolekit.te
--- nsaserefpolicy/policy/modules/services/consolekit.te	2013-03-15 11:41:13.957153549 +0100
+++ serefpolicy-3.7.19/policy/modules/services/consolekit.te	2013-03-15 11:40:14.136152184 +0100
@@ -79,6 +79,8 @@
 userdom_dontaudit_read_user_home_content_files(consolekit_t)
 userdom_dontaudit_getattr_admin_home_files(consolekit_t)
 userdom_read_user_tmp_files(consolekit_t)
+#dontaudit leaks
+userdom_dontaudit_stream_connectto(consolekit_t)
 
 hal_ptrace(consolekit_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/corosync.fc serefpolicy-3.7.19/policy/modules/services/corosync.fc
--- nsaserefpolicy/policy/modules/services/corosync.fc	2013-03-15 11:41:13.541153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/corosync.fc	2013-03-15 11:40:12.382152144 +0100
@@ -1,22 +1,17 @@
 
 /etc/rc\.d/init\.d/corosync     --      gen_context(system_u:object_r:corosync_initrc_exec_t,s0)
-/etc/rc\.d/init\.d/heartbeat    --  gen_context(system_u:object_r:corosync_initrc_exec_t,s0)
 
 /usr/sbin/corosync              --      gen_context(system_u:object_r:corosync_exec_t,s0)
 /usr/sbin/corosync-notifyd		--		gen_context(system_u:object_r:corosync_exec_t,s0)
 
-/usr/sbin/ccs_tool              --      gen_context(system_u:object_r:corosync_exec_t,s0)
-/usr/sbin/cman_tool              --      gen_context(system_u:object_r:corosync_exec_t,s0)
+#/usr/sbin/ccs_tool              --      gen_context(system_u:object_r:corosync_exec_t,s0)
+#/usr/sbin/cman_tool              --      gen_context(system_u:object_r:corosync_exec_t,s0)
 
-/usr/lib(64)?/heartbeat(/.*)?           gen_context(system_u:object_r:corosync_var_lib_t,s0)
-/usr/lib(64)?/heartbeat/heartbeat   --  gen_context(system_u:object_r:corosync_exec_t,s0)
 
 /var/lib/corosync(/.*)?                 gen_context(system_u:object_r:corosync_var_lib_t,s0)
-/var/lib/heartbeat(/.*)?               gen_context(system_u:object_r:corosync_var_lib_t,s0)
 
-/var/log/cluster/corosync\.log  --      gen_context(system_u:object_r:corosync_var_log_t,s0)
+/var/log/cluster/corosync\.log.*	 --      gen_context(system_u:object_r:corosync_var_log_t,s0)
 
 /var/run/cman_.*                -s      gen_context(system_u:object_r:corosync_var_run_t,s0)
 /var/run/corosync\.pid          --      gen_context(system_u:object_r:corosync_var_run_t,s0)
-/var/run/heartbeat(/.*)?             gen_context(system_u:object_r:corosync_var_run_t,s0)
 /var/run/rsctmp(/.*)?             gen_context(system_u:object_r:corosync_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/corosync.if serefpolicy-3.7.19/policy/modules/services/corosync.if
--- nsaserefpolicy/policy/modules/services/corosync.if	2013-03-15 11:41:14.916153571 +0100
+++ serefpolicy-3.7.19/policy/modules/services/corosync.if	2013-03-15 11:40:16.029152227 +0100
@@ -20,6 +20,25 @@
 
 #######################################
 ## <summary>
+##  Execute a domain transition to run corosync.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`corosync_initrc_domtrans',`
+    gen_require(`
+        type corosync_initrc_exec_t;
+    ')
+
+    init_labeled_script_domtrans($1, corosync_initrc_exec_t)
+')
+
+
+#######################################
+## <summary>
 ##      Execute corosync in the caller domain.
 ## </summary>
 ## <param name="domain">
@@ -77,6 +96,25 @@
         read_files_pattern($1, corosync_var_log_t, corosync_var_log_t)
 ')
 
+#####################################
+## <summary>
+##  Allow the specified domain to read/write corosync's tmpfs files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`corosync_rw_tmpfs',`
+    gen_require(`
+        type corosync_tmpfs_t;
+    ')
+
+    rw_files_pattern($1, corosync_tmpfs_t, corosync_tmpfs_t)
+
+')
+
 ######################################
 ## <summary>
 ##      All of the rules required to administrate 
diff -Nur nsaserefpolicy/policy/modules/services/corosync.te serefpolicy-3.7.19/policy/modules/services/corosync.te
--- nsaserefpolicy/policy/modules/services/corosync.te	2013-03-15 11:41:14.379153559 +0100
+++ serefpolicy-3.7.19/policy/modules/services/corosync.te	2013-03-15 11:40:15.111152206 +0100
@@ -47,7 +47,7 @@
 allow corosync_t self:sem create_sem_perms;
 allow corosync_t self:shm create_shm_perms;
 allow corosync_t self:unix_stream_socket { create_stream_socket_perms connectto };
-allow corosync_t self:unix_dgram_socket create_socket_perms;
+allow corosync_t self:unix_dgram_socket { sendto create_socket_perms};
 allow corosync_t self:udp_socket create_socket_perms;
 
 can_exec(corosync_t,corosync_exec_t)
@@ -90,6 +90,11 @@
 domain_read_all_domains_state(corosync_t)
 
 corenet_udp_bind_netsupport_port(corosync_t)
+corenet_tcp_connect_saphostctrl_port(corosync_t)
+corenet_tcp_bind_florence_port(corosync_t)
+corenet_tcp_bind_zented_port(corosync_t)
+corenet_udp_bind_florence_port(corosync_t)
+corenet_udp_bind_zented_port(corosync_t)
 
 corecmd_exec_bin(corosync_t)
 corecmd_exec_shell(corosync_t)
@@ -135,6 +140,10 @@
 ')
 
 optional_policy(`
+	consoletype_exec(corosync_t)
+')
+
+optional_policy(`
     dbus_system_bus_client(corosync_t)
 ')
 
@@ -162,6 +171,10 @@
 ')
 
 optional_policy(`
+	# should be removed in F19
+	# workaround because we switch hearbeat from corosync to rgmanager
+	rgmanager_manage_files(corosync_t)
+
 	rgmanager_manage_tmpfs_files(corosync_t)
 ')
 
@@ -171,3 +184,11 @@
 	ricci_read_lib_files(corosync_t)
 	ricci_rw_modclusterd_tmpfs_files(corosync_t)
 ')
+
+optional_policy(`
+    rpc_search_nfs_state_data(corosync_t)
+')
+
+optional_policy(`
+	wdmd_manage_tmpfs(corosync_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/cron.if serefpolicy-3.7.19/policy/modules/services/cron.if
--- nsaserefpolicy/policy/modules/services/cron.if	2013-03-15 11:41:14.867153570 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cron.if	2013-03-15 11:40:15.924152225 +0100
@@ -89,6 +89,15 @@
 	userdom_read_user_home_content_files($1_t)
 	userdom_read_user_home_content_symlinks($1_t)
 
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_list_auto_mountpoints($1_t)
+    	fs_read_nfs_files($1_t)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+    	fs_read_cifs_files($1_t)
+	')
+
 	tunable_policy(`fcron_crond',`
 		# fcron wants an instant update of a crontab change for the administrator
 		# also crontab does a security check for crontab -u
@@ -98,6 +107,10 @@
 	optional_policy(`
 		nscd_socket_use($1_t)
 	')
+
+	optional_policy(`
+		openshift_dontaudit_rw_inherited_fifo_files($1_t)
+	')
 ')
 
 ########################################
@@ -213,6 +226,7 @@
 interface(`cron_admin_role',`
 	gen_require(`
 		type cronjob_t, crontab_exec_t, admin_crontab_t, admin_crontab_tmp_t;
+		type user_cron_spool_t, crond_t;
 		class passwd crontab;
 	')
 
@@ -231,6 +245,14 @@
 	ps_process_pattern($2, admin_crontab_t)
 	allow $2 admin_crontab_t:process signal;
 
+	allow $2 crond_t:process sigchld;
+	allow crond_t $2:process transition;
+
+	dontaudit crond_t $2:process { noatsecure siginh rlimitinh };
+
+	# needs to be authorized SELinux context for cron
+	allow $2 user_cron_spool_t:file entrypoint;
+
 	# Run helper programs as the user domain
 	#corecmd_bin_domtrans(admin_crontab_t, $2)
 	#corecmd_shell_domtrans(admin_crontab_t, $2)
diff -Nur nsaserefpolicy/policy/modules/services/cron.te serefpolicy-3.7.19/policy/modules/services/cron.te
--- nsaserefpolicy/policy/modules/services/cron.te	2013-03-15 11:41:13.455153538 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cron.te	2013-03-15 11:40:12.243152141 +0100
@@ -569,6 +569,10 @@
 ')
 
 optional_policy(`
+	openshift_transition(system_cronjob_t)
+')
+
+optional_policy(`
 	postfix_read_config(system_cronjob_t)
 ')	
 
diff -Nur nsaserefpolicy/policy/modules/services/ctdbd.fc serefpolicy-3.7.19/policy/modules/services/ctdbd.fc
--- nsaserefpolicy/policy/modules/services/ctdbd.fc	2013-03-15 11:41:15.168153577 +0100
+++ serefpolicy-3.7.19/policy/modules/services/ctdbd.fc	2013-03-15 11:40:16.434152236 +0100
@@ -5,7 +5,8 @@
 
 /usr/sbin/ctdbd			--	gen_context(system_u:object_r:ctdbd_exec_t,s0)
 
-/var/log/log\.ctdb		--	gen_context(system_u:object_r:ctdbd_log_t,s0)
+/var/log/log\.ctdb.*		--	gen_context(system_u:object_r:ctdbd_log_t,s0)
+/var/log/ctdb\.log.*        --  gen_context(system_u:object_r:ctdbd_log_t,s0)
 
 /var/spool/ctdb(/.*)?		gen_context(system_u:object_r:ctdbd_spool_t,s0)
 
diff -Nur nsaserefpolicy/policy/modules/services/cups.fc serefpolicy-3.7.19/policy/modules/services/cups.fc
--- nsaserefpolicy/policy/modules/services/cups.fc	2013-03-15 11:41:15.652153588 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cups.fc	2013-03-15 11:40:17.929152271 +0100
@@ -72,7 +72,7 @@
 /var/run/udev-configure-printer(/.*)? 	gen_context(system_u:object_r:cupsd_config_var_run_t,s0)
 /var/turboprint(/.*)?		gen_context(system_u:object_r:cupsd_var_run_t,s0)
 
-/usr/local/Brother/fax/.*\.log		gen_context(system_u:object_r:cupsd_log_t,s0)
+/usr/local/Brother/fax/.*\.log.*		gen_context(system_u:object_r:cupsd_log_t,s0)
 /usr/local/Brother/(.*/)?inf(/.*)?      gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 /usr/local/Printer/(.*/)?inf(/.*)?      gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 
diff -Nur nsaserefpolicy/policy/modules/services/cups.te serefpolicy-3.7.19/policy/modules/services/cups.te
--- nsaserefpolicy/policy/modules/services/cups.te	2013-03-15 11:41:15.617153587 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cups.te	2013-03-15 11:40:17.858152269 +0100
@@ -666,6 +666,9 @@
 kernel_read_system_state(hplip_t)
 kernel_read_kernel_sysctls(hplip_t)
 
+#for python
+corecmd_exec_bin(hplip_t)
+
 corenet_all_recvfrom_unlabeled(hplip_t)
 corenet_all_recvfrom_netlabel(hplip_t)
 corenet_tcp_sendrecv_generic_if(hplip_t)
@@ -707,6 +710,8 @@
 # bug 616010
 files_dontaudit_write_usr_dirs(hplip_t)
 
+term_use_ptmx(hplip_t)
+
 logging_send_syslog_msg(hplip_t)
 
 miscfiles_read_localization(hplip_t)
diff -Nur nsaserefpolicy/policy/modules/services/cyrus.if serefpolicy-3.7.19/policy/modules/services/cyrus.if
--- nsaserefpolicy/policy/modules/services/cyrus.if	2013-03-15 11:41:13.495153538 +0100
+++ serefpolicy-3.7.19/policy/modules/services/cyrus.if	2013-03-15 11:40:12.311152142 +0100
@@ -20,6 +20,26 @@
 	manage_files_pattern($1, cyrus_var_lib_t, cyrus_var_lib_t)
 ')
 
+
+########################################
+## <summary>
+##	Allow write cyrus data files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`cyrus_write_data',`
+    gen_require(`
+        type cyrus_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    write_files_pattern($1, cyrus_var_lib_t, cyrus_var_lib_t)
+')
+
 ########################################
 ## <summary>
 ##	Connect to Cyrus using a unix domain stream socket.
diff -Nur nsaserefpolicy/policy/modules/services/dbus.te serefpolicy-3.7.19/policy/modules/services/dbus.te
--- nsaserefpolicy/policy/modules/services/dbus.te	2013-03-15 11:41:13.812153546 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dbus.te	2013-03-21 15:42:57.127852256 +0100
@@ -37,6 +37,7 @@
 
 type system_dbusd_var_run_t;
 files_pid_file(system_dbusd_var_run_t)
+mls_trusted_object(system_dbusd_var_run_t)
 
 ifdef(`enable_mcs',`
 	init_ranged_system_domain(system_dbusd_t, dbusd_exec_t, s0 - mcs_systemhigh)
@@ -90,6 +91,7 @@
 fs_search_auto_mountpoints(system_dbusd_t)
 fs_dontaudit_list_nfs(system_dbusd_t)
 
+mls_trusted_object(system_dbusd_t)
 mls_fd_use_all_levels(system_dbusd_t)
 mls_rangetrans_target(system_dbusd_t)
 mls_file_read_all_levels(system_dbusd_t)
diff -Nur nsaserefpolicy/policy/modules/services/devicekit.if serefpolicy-3.7.19/policy/modules/services/devicekit.if
--- nsaserefpolicy/policy/modules/services/devicekit.if	2013-03-15 11:41:15.699153589 +0100
+++ serefpolicy-3.7.19/policy/modules/services/devicekit.if	2013-03-15 11:40:18.142152275 +0100
@@ -178,6 +178,26 @@
 	dontaudit devicekit_disk_t $1:dbus send_msg;
 ')
 
+#######################################
+## <summary>
+##  Manage devicekit PID files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`devicekit_manage_pid_files',`
+    gen_require(`
+        type devicekit_var_run_t;
+    ')
+
+    files_search_pids($1)
+    manage_dirs_pattern($1, devicekit_var_run_t, devicekit_var_run_t)
+    manage_files_pattern($1, devicekit_var_run_t, devicekit_var_run_t)
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
diff -Nur nsaserefpolicy/policy/modules/services/dhcp.te serefpolicy-3.7.19/policy/modules/services/dhcp.te
--- nsaserefpolicy/policy/modules/services/dhcp.te	2013-03-15 11:41:15.282153579 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dhcp.te	2013-03-15 11:40:16.754152244 +0100
@@ -129,3 +129,5 @@
 optional_policy(`
 	udev_read_db(dhcpd_t)
 ')
+
+
diff -Nur nsaserefpolicy/policy/modules/services/dirsrv-admin.te serefpolicy-3.7.19/policy/modules/services/dirsrv-admin.te
--- nsaserefpolicy/policy/modules/services/dirsrv-admin.te	2013-03-15 11:41:14.801153568 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dirsrv-admin.te	2013-04-16 08:11:17.698987638 +0200
@@ -27,8 +27,10 @@
 #
 # Local policy for the daemon
 #
+
 allow dirsrvadmin_t self:fifo_file rw_fifo_file_perms;
-allow dirsrvadmin_t self:capability { dac_read_search dac_override sys_tty_config };
+allow dirsrvadmin_t self:capability { dac_read_search dac_override sys_tty_config sys_resource };
+allow dirsrvadmin_t self:process { setrlimit signal_perms };
 
 manage_files_pattern(dirsrvadmin_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
 manage_dirs_pattern(dirsrvadmin_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
@@ -43,6 +45,8 @@
 
 files_exec_etc_files(dirsrvadmin_t)
 
+libs_exec_ld_so(dirsrvadmin_t)
+
 logging_search_logs(dirsrvadmin_t)
 
 miscfiles_read_localization(dirsrvadmin_t)
@@ -50,8 +54,10 @@
 # Needed for stop and restart scripts
 dirsrv_read_var_run(dirsrvadmin_t)
 
-apache_domtrans(dirsrvadmin_t)
-apache_signal(dirsrvadmin_t)
+optional_policy(`
+	apache_domtrans(dirsrvadmin_t)
+	apache_signal(dirsrvadmin_t)
+')
 
 ########################################
 #
@@ -60,57 +66,71 @@
 #
 #
 # Create a domain for the CGI scripts
-apache_content_template(dirsrvadmin)
-
-allow httpd_dirsrvadmin_script_t self:process { getsched getpgid };
-allow httpd_dirsrvadmin_script_t self:capability { setuid net_bind_service setgid chown sys_nice kill dac_read_search dac_override };
-allow httpd_dirsrvadmin_script_t self:tcp_socket create_stream_socket_perms;
-allow httpd_dirsrvadmin_script_t self:udp_socket create_socket_perms;
-allow httpd_dirsrvadmin_script_t self:unix_dgram_socket create_socket_perms;
-allow httpd_dirsrvadmin_script_t self:netlink_route_socket r_netlink_socket_perms;
-allow httpd_dirsrvadmin_script_t self:sem create_sem_perms;
-
-kernel_read_kernel_sysctls(httpd_dirsrvadmin_script_t)
-
-corenet_sendrecv_unlabeled_packets(httpd_dirsrvadmin_script_t)
-corenet_tcp_connect_generic_port(httpd_dirsrvadmin_script_t)
-corenet_tcp_connect_ldap_port(httpd_dirsrvadmin_script_t)
-corenet_tcp_connect_http_port(httpd_dirsrvadmin_script_t)
-
-files_search_var_lib(httpd_dirsrvadmin_script_t)
-
-sysnet_read_config(httpd_dirsrvadmin_script_t)
-
-
-manage_files_pattern(httpd_dirsrvadmin_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
-manage_dirs_pattern(httpd_dirsrvadmin_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
-files_tmp_filetrans(httpd_dirsrvadmin_script_t, dirsrvadmin_tmp_t, { file dir })
-
-# The CGI scripts must be able to manage dirsrv-admin
-dirsrvadmin_run_exec(httpd_dirsrvadmin_script_t)
-dirsrvadmin_manage_config(httpd_dirsrvadmin_script_t)
-dirsrv_domtrans(httpd_dirsrvadmin_script_t)
-dirsrv_signal(httpd_dirsrvadmin_script_t)
-dirsrv_signull(httpd_dirsrvadmin_script_t)
-dirsrv_manage_log(httpd_dirsrvadmin_script_t)
-dirsrv_manage_var_lib(httpd_dirsrvadmin_script_t)
-dirsrv_pid_filetrans(httpd_dirsrvadmin_script_t)
-dirsrv_manage_var_run(httpd_dirsrvadmin_script_t)
-dirsrv_manage_config(httpd_dirsrvadmin_script_t)
-dirsrv_read_share(httpd_dirsrvadmin_script_t)
-dirsrv_manage_lock(httpd_dirsrvadmin_script_t)
-dirsrv_filetrans_lock(httpd_dirsrvadmin_script_t)
 
 optional_policy(`
-	apache_rw_stream_sockets(httpd_dirsrvadmin_script_t)
+	apache_content_template(dirsrvadmin)
+
+	allow httpd_dirsrvadmin_script_t self:process { getsched getpgid };
+	allow httpd_dirsrvadmin_script_t self:capability { fowner fsetid setuid net_bind_service setgid chown sys_nice kill dac_read_search dac_override };
+	allow httpd_dirsrvadmin_script_t self:tcp_socket create_stream_socket_perms;
+	allow httpd_dirsrvadmin_script_t self:udp_socket create_socket_perms;
+	allow httpd_dirsrvadmin_script_t self:unix_dgram_socket create_socket_perms;
+	allow httpd_dirsrvadmin_script_t self:netlink_route_socket r_netlink_socket_perms;
+	allow httpd_dirsrvadmin_script_t self:sem create_sem_perms;
+
+	kernel_read_kernel_sysctls(httpd_dirsrvadmin_script_t)
+
+	corenet_tcp_bind_generic_node(httpd_dirsrvadmin_script_t)
+	corenet_udp_bind_generic_node(httpd_dirsrvadmin_script_t)
+	corenet_all_recvfrom_netlabel(httpd_dirsrvadmin_script_t)
+
+	corenet_tcp_bind_http_port(httpd_dirsrvadmin_script_t)
+	corenet_tcp_connect_generic_port(httpd_dirsrvadmin_script_t)
+	corenet_tcp_connect_ldap_port(httpd_dirsrvadmin_script_t)
+	corenet_tcp_connect_http_port(httpd_dirsrvadmin_script_t)
+
+	files_search_var_lib(httpd_dirsrvadmin_script_t)
+
+	sysnet_read_config(httpd_dirsrvadmin_script_t)
+
+	manage_files_pattern(httpd_dirsrvadmin_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+	manage_dirs_pattern(httpd_dirsrvadmin_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+	files_tmp_filetrans(httpd_dirsrvadmin_script_t, dirsrvadmin_tmp_t, { file dir })
+
+	optional_policy(`
+        apache_exec_modules(httpd_dirsrvadmin_script_t)
+		apache_read_modules(httpd_dirsrvadmin_script_t)
+		apache_read_config(httpd_dirsrvadmin_script_t)
+        apache_rw_stream_sockets(httpd_dirsrvadmin_script_t)
+		apache_signal(httpd_dirsrvadmin_script_t)
+		apache_signull(httpd_dirsrvadmin_script_t)
+	')
+
+	optional_policy(`
+		# The CGI scripts must be able to manage dirsrv-admin
+		dirsrvadmin_run_exec(httpd_dirsrvadmin_script_t)
+		dirsrvadmin_manage_config(httpd_dirsrvadmin_script_t)
+		dirsrv_domtrans(httpd_dirsrvadmin_script_t)
+		dirsrv_signal(httpd_dirsrvadmin_script_t)
+		dirsrv_signull(httpd_dirsrvadmin_script_t)
+		dirsrv_manage_log(httpd_dirsrvadmin_script_t)
+		dirsrv_manage_var_lib(httpd_dirsrvadmin_script_t)
+		dirsrv_pid_filetrans(httpd_dirsrvadmin_script_t)
+		dirsrv_manage_var_run(httpd_dirsrvadmin_script_t)
+		dirsrv_manage_config(httpd_dirsrvadmin_script_t)
+		dirsrv_read_share(httpd_dirsrvadmin_script_t)
+		dirsrv_manage_lock(httpd_dirsrvadmin_script_t)
+		dirsrv_filetrans_lock(httpd_dirsrvadmin_script_t)
+	')
 ')
 
-######################################
+#######################################
 #
 # Local policy for the admin CGIs
 #
 #
 
+
 manage_files_pattern(dirsrvadmin_unconfined_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
 manage_dirs_pattern(dirsrvadmin_unconfined_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
 files_tmp_filetrans(dirsrvadmin_unconfined_script_t, dirsrvadmin_tmp_t, { file dir })
@@ -131,3 +151,4 @@
 optional_policy(`
    unconfined_domain(dirsrvadmin_unconfined_script_t)
 ')
+
diff -Nur nsaserefpolicy/policy/modules/services/dirsrv.fc serefpolicy-3.7.19/policy/modules/services/dirsrv.fc
--- nsaserefpolicy/policy/modules/services/dirsrv.fc	2013-03-15 11:41:14.495153561 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dirsrv.fc	2013-04-16 08:08:53.926101191 +0200
@@ -14,10 +14,11 @@
 /var/lib/dirsrv(/.*)?		gen_context(system_u:object_r:dirsrv_var_lib_t,s0)
 
 /var/lock/subsys/dirsrv	--	gen_context(system_u:object_r:dirsrv_var_lock_t,s0)
+/var/lock/subsys/dirsrv-admin	--	gen_context(system_u:object_r:dirsrv_var_lock_t,s0)
 /var/lock/dirsrv(/.*)?		gen_context(system_u:object_r:dirsrv_var_lock_t,s0)
 
 /var/log/dirsrv(/.*)?		gen_context(system_u:object_r:dirsrv_var_log_t,s0)
 
-/var/log/dirsrv/ldap-agent\.log	gen_context(system_u:object_r:dirsrv_snmp_var_log_t,s0)
+/var/log/dirsrv/ldap-agent\.log.*	gen_context(system_u:object_r:dirsrv_snmp_var_log_t,s0)
 
 /var/run/slapd.* -s gen_context(system_u:object_r:dirsrv_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/dnsmasq.fc serefpolicy-3.7.19/policy/modules/services/dnsmasq.fc
--- nsaserefpolicy/policy/modules/services/dnsmasq.fc	2013-03-15 11:41:15.500153584 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dnsmasq.fc	2013-03-15 11:40:17.575152263 +0100
@@ -6,7 +6,7 @@
 /var/lib/misc/dnsmasq\.leases	--	gen_context(system_u:object_r:dnsmasq_lease_t,s0)
 /var/lib/dnsmasq(/.*)?			gen_context(system_u:object_r:dnsmasq_lease_t,s0)
 
-/var/log/dnsmasq\.log			gen_context(system_u:object_r:dnsmasq_var_log_t,s0)
+/var/log/dnsmasq\.log.*			gen_context(system_u:object_r:dnsmasq_var_log_t,s0)
 
 /var/run/dnsmasq\.pid		--	gen_context(system_u:object_r:dnsmasq_var_run_t,s0)
 /var/run/libvirt/network(/.*)?		gen_context(system_u:object_r:dnsmasq_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/dnsmasq.if serefpolicy-3.7.19/policy/modules/services/dnsmasq.if
--- nsaserefpolicy/policy/modules/services/dnsmasq.if	2013-03-15 11:41:15.103153575 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dnsmasq.if	2013-03-15 11:40:16.296152233 +0100
@@ -190,6 +190,44 @@
 	read_files_pattern($1, dnsmasq_var_run_t, dnsmasq_var_run_t)
 ')
 
+#######################################
+## <summary>
+##  Manage dnsmasq pid files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`dnsmasq_manage_pid_files',`
+    gen_require(`
+        type dnsmasq_var_run_t;
+    ')
+
+    files_search_pids($1)
+    manage_files_pattern($1, dnsmasq_var_run_t, dnsmasq_var_run_t)
+')
+
+#######################################
+## <summary>
+##  Create dnsmasq pid dirs
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`dnsmasq_create_pid_dirs',`
+    gen_require(`
+        type dnsmasq_var_run_t;
+    ')
+
+    files_search_pids($1)
+    create_dirs_pattern($1, dnsmasq_var_run_t, dnsmasq_var_run_t)
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
diff -Nur nsaserefpolicy/policy/modules/services/dnsmasq.te serefpolicy-3.7.19/policy/modules/services/dnsmasq.te
--- nsaserefpolicy/policy/modules/services/dnsmasq.te	2013-03-15 11:41:13.657153542 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dnsmasq.te	2013-06-05 13:25:18.786357349 +0200
@@ -74,6 +74,9 @@
 corenet_sendrecv_dns_server_packets(dnsmasq_t)
 corenet_sendrecv_dhcpd_server_packets(dnsmasq_t)
 
+corecmd_exec_shell(dnsmasq_t)
+corecmd_exec_bin(dnsmasq_t)
+
 dev_read_sysfs(dnsmasq_t)
 dev_read_urand(dnsmasq_t)
 
@@ -87,6 +90,8 @@
 
 auth_use_nsswitch(dnsmasq_t)
 
+libs_exec_ldconfig(dnsmasq_t)
+
 logging_send_syslog_msg(dnsmasq_t)
 
 miscfiles_read_localization(dnsmasq_t)
@@ -121,6 +126,14 @@
 
 optional_policy(`
 	tftp_read_content(dnsmasq_t)
+	tftp_list_rw_content(dnsmasq_t)
+')
+
+optional_policy(`
+    quantum_manage_lib_files(dnsmasq_t)
+    quantum_stream_connect(dnsmasq_t)
+    quantum_rw_fifo_file(dnsmasq_t)
+    quantum_sigchld(dnsmasq_t)
 ')
 
 optional_policy(`
@@ -129,5 +142,5 @@
 
 optional_policy(`
 	virt_manage_lib_files(dnsmasq_t)
-	virt_read_pid_files(dnsmasq_t)
+	virt_manage_pid_files(dnsmasq_t)
 ')
diff -Nur nsaserefpolicy/policy/modules/services/dovecot.te serefpolicy-3.7.19/policy/modules/services/dovecot.te
--- nsaserefpolicy/policy/modules/services/dovecot.te	2013-03-15 11:41:15.051153574 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dovecot.te	2013-04-29 10:42:44.981412227 +0200
@@ -135,6 +135,7 @@
 fs_list_inotifyfs(dovecot_t)
 
 corecmd_exec_bin(dovecot_t)
+corecmd_exec_shell(dovecot_t)
 
 domain_use_interactive_fds(dovecot_t)
 
@@ -225,6 +226,8 @@
 kernel_read_all_sysctls(dovecot_auth_t)
 kernel_read_system_state(dovecot_auth_t)
 
+corecmd_exec_bin(dovecot_auth_t)
+
 logging_send_audit_msgs(dovecot_auth_t)
 logging_send_syslog_msg(dovecot_auth_t)
 
@@ -351,6 +354,7 @@
 optional_policy(`
 	mta_read_queue(dovecot_deliver_t)
 	mta_manage_spool(dovecot_deliver_t)
+	mta_mailserver_delivery(dovecot_deliver_t)
 	mta_manage_home_rw(dovecot_deliver_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/services/dspam.fc serefpolicy-3.7.19/policy/modules/services/dspam.fc
--- nsaserefpolicy/policy/modules/services/dspam.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dspam.fc	2013-03-15 11:40:18.578152285 +0100
@@ -0,0 +1,18 @@
+
+/etc/rc\.d/init\.d/dspam	--	gen_context(system_u:object_r:dspam_initrc_exec_t,s0)
+
+/usr/bin/dspam			--	gen_context(system_u:object_r:dspam_exec_t,s0)
+
+/var/lib/dspam(/.*)?		gen_context(system_u:object_r:dspam_var_lib_t,s0)
+
+/var/log/dspam(/.*)?		gen_context(system_u:object_r:dspam_log_t,s0)
+
+/var/run/dspam(/.*)?		gen_context(system_u:object_r:dspam_var_run_t,s0)
+
+# web
+
+/var/www/dspam/.*\.cgi         --   gen_context(system_u:object_r:httpd_dspam_script_exec_t,s0)
+/var/www/dspam(/.*?)           		gen_context(system_u:object_r:httpd_dspam_content_t,s0)
+/usr/share/dspam-web/dspam\.cgi	--	gen_context(system_u:object_r:httpd_dspam_script_exec_t,s0)
+
+/var/lib/dspam/data(/.*)?			gen_context(system_u:object_r:httpd_dspam_content_rw_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/dspam.if serefpolicy-3.7.19/policy/modules/services/dspam.if
--- nsaserefpolicy/policy/modules/services/dspam.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dspam.if	2013-03-15 11:40:17.755152267 +0100
@@ -0,0 +1,267 @@
+
+## <summary>policy for dspam</summary>
+
+
+########################################
+## <summary>
+##	Execute a domain transition to run dspam.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`dspam_domtrans',`
+	gen_require(`
+		type dspam_t, dspam_exec_t;
+	')
+
+	domtrans_pattern($1, dspam_exec_t, dspam_t)
+')
+
+
+########################################
+## <summary>
+##	Execute dspam server in the dspam domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`dspam_initrc_domtrans',`
+	gen_require(`
+		type dspam_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, dspam_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to read dspam's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`dspam_read_log',`
+	gen_require(`
+		type dspam_log_t;
+	')
+
+	logging_search_logs($1)
+        read_files_pattern($1, dspam_log_t, dspam_log_t)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to append
+##	dspam log files.
+## </summary>
+## <param name="domain">
+## 	<summary>
+##	Domain allowed to transition.
+## 	</summary>
+## </param>
+#
+interface(`dspam_append_log',`
+	gen_require(`
+		type dspam_log_t;
+	')
+
+	logging_search_logs($1)
+        append_files_pattern($1, dspam_log_t, dspam_log_t)
+')
+
+########################################
+## <summary>
+##	Allow domain to manage dspam log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`dspam_manage_log',`
+	gen_require(`
+		type dspam_log_t;
+	')
+
+	logging_search_logs($1)
+        manage_dirs_pattern($1, dspam_log_t, dspam_log_t)
+        manage_files_pattern($1, dspam_log_t, dspam_log_t)
+        manage_lnk_files_pattern($1, dspam_log_t, dspam_log_t)
+')
+
+########################################
+## <summary>
+##	Search dspam lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dspam_search_lib',`
+	gen_require(`
+		type dspam_var_lib_t;
+	')
+
+	allow $1 dspam_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read dspam lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dspam_read_lib_files',`
+	gen_require(`
+		type dspam_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, dspam_var_lib_t, dspam_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	dspam lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dspam_manage_lib_files',`
+	gen_require(`
+		type dspam_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, dspam_var_lib_t, dspam_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage dspam lib dirs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dspam_manage_lib_dirs',`
+	gen_require(`
+		type dspam_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_dirs_pattern($1, dspam_var_lib_t, dspam_var_lib_t)
+')
+
+
+########################################
+## <summary>
+##	Read dspam PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dspam_read_pid_files',`
+	gen_require(`
+		type dspam_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 dspam_var_run_t:file read_file_perms;
+')
+
+#######################################
+## <summary>
+##  Connect to DSPAM using a unix domain stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`dspam_stream_connect',`
+    gen_require(`
+        type dspam_t, dspam_var_run_t, dspam_tmp_t;
+    ')
+
+    files_search_pids($1)
+	files_search_tmp($1)
+    stream_connect_pattern($1, dspam_var_run_t, dspam_var_run_t, dspam_t)
+    stream_connect_pattern($1, dspam_tmp_t, dspam_tmp_t, dspam_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an dspam environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`dspam_admin',`
+	gen_require(`
+		type dspam_t;
+		type dspam_initrc_exec_t;
+		type dspam_log_t;
+		type dspam_var_lib_t;
+		type dspam_var_run_t;
+	')
+
+	allow $1 dspam_t:process signal_perms;
+	ps_process_pattern($1, dspam_t)
+	tunable_policy(`deny_ptrace',`',`
+		allow $1 dspam_t:process ptrace;
+	')
+
+	dspam_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 dspam_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, dspam_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, dspam_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, dspam_var_run_t)
+
+')
diff -Nur nsaserefpolicy/policy/modules/services/dspam.te serefpolicy-3.7.19/policy/modules/services/dspam.te
--- nsaserefpolicy/policy/modules/services/dspam.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/dspam.te	2013-03-15 11:40:14.448152191 +0100
@@ -0,0 +1,119 @@
+
+policy_module(dspam, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type dspam_t;
+type dspam_exec_t;
+init_daemon_domain(dspam_t, dspam_exec_t)
+
+type dspam_initrc_exec_t;
+init_script_file(dspam_initrc_exec_t)
+
+type dspam_log_t;
+logging_log_file(dspam_log_t)
+
+type dspam_var_lib_t;
+files_type(dspam_var_lib_t)
+
+type dspam_var_run_t;
+files_pid_file(dspam_var_run_t)
+
+# FIXME
+# /tmp/dspam.sock
+type dspam_tmp_t;
+files_tmp_file(dspam_tmp_t)
+
+########################################
+#
+# dspam local policy
+#
+
+allow dspam_t self:capability net_admin;
+allow dspam_t self:process { signal };
+
+allow dspam_t self:tcp_socket { listen accept };
+
+allow dspam_t self:fifo_file rw_fifo_file_perms;
+allow dspam_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(dspam_t, dspam_log_t, dspam_log_t)
+manage_files_pattern(dspam_t, dspam_log_t, dspam_log_t)
+
+manage_dirs_pattern(dspam_t, dspam_var_lib_t, dspam_var_lib_t)
+manage_files_pattern(dspam_t, dspam_var_lib_t, dspam_var_lib_t)
+
+manage_dirs_pattern(dspam_t, dspam_var_run_t, dspam_var_run_t)
+manage_files_pattern(dspam_t, dspam_var_run_t, dspam_var_run_t)
+manage_sock_files_pattern(dspam_t, dspam_var_run_t, dspam_var_run_t)
+
+manage_sock_files_pattern(dspam_t, dspam_tmp_t, dspam_tmp_t)
+files_tmp_filetrans(dspam_t, dspam_tmp_t, { sock_file })
+
+corenet_tcp_connect_dspam_port(dspam_t)
+corenet_tcp_connect_spamd_port(dspam_t)
+corenet_tcp_bind_dspam_port(dspam_t)
+corenet_tcp_bind_spamd_port(dspam_t)
+
+files_search_spool(dspam_t)
+
+auth_use_nsswitch(dspam_t)
+
+# for RHEL5
+libs_use_ld_so(dspam_t)
+libs_use_shared_libs(dspam_t)
+libs_read_lib_files(dspam_t)
+
+logging_send_syslog_msg(dspam_t)
+
+miscfiles_read_localization(dspam_t)
+
+optional_policy(`
+    mysql_tcp_connect(dspam_t)
+    mysql_search_db(dspam_t)
+    mysql_stream_connect(dspam_t)	
+')
+
+optional_policy(`
+    postgresql_tcp_connect(dspam_t)
+    postgresql_stream_connect(dspam_t)
+')
+
+#######################################
+#
+# dspam web local policy.
+#
+
+optional_policy(`
+	apache_content_template(dspam)
+
+	read_files_pattern(httpd_dspam_script_t, dspam_var_lib_t, dspam_var_lib_t)
+
+	files_search_var_lib(httpd_dspam_script_t)
+	list_dirs_pattern(dspam_t, httpd_dspam_content_t, httpd_dspam_content_t)
+	manage_dirs_pattern(dspam_t, httpd_dspam_content_rw_t, httpd_dspam_content_rw_t)
+	manage_files_pattern(dspam_t, httpd_dspam_content_rw_t, httpd_dspam_content_rw_t)
+
+	domain_dontaudit_read_all_domains_state(httpd_dspam_script_t)
+
+    term_dontaudit_search_ptys(httpd_dspam_script_t)
+    term_dontaudit_getattr_all_ttys(httpd_dspam_script_t)
+    term_dontaudit_getattr_all_ptys(httpd_dspam_script_t)
+
+    init_read_utmp(httpd_dspam_script_t)
+
+    logging_send_syslog_msg(httpd_dspam_script_t)
+
+    mta_send_mail(httpd_dspam_script_t)
+
+	optional_policy(`
+        mysql_tcp_connect(httpd_dspam_script_t)
+        mysql_stream_connect(httpd_dspam_script_t)
+    ')
+
+
+')
+
diff -Nur nsaserefpolicy/policy/modules/services/exim.te serefpolicy-3.7.19/policy/modules/services/exim.te
--- nsaserefpolicy/policy/modules/services/exim.te	2013-03-15 11:41:14.813153569 +0100
+++ serefpolicy-3.7.19/policy/modules/services/exim.te	2013-03-15 11:40:15.834152223 +0100
@@ -110,10 +110,10 @@
 # Init script handling
 domain_use_interactive_fds(exim_t)
 
-files_search_usr(exim_t)
 files_search_var(exim_t)
 files_read_etc_files(exim_t)
 files_read_etc_runtime_files(exim_t)
+files_read_usr_files(exim_t)
 files_getattr_all_mountpoints(exim_t)
 
 fs_getattr_xattr_fs(exim_t)
diff -Nur nsaserefpolicy/policy/modules/services/fail2ban.fc serefpolicy-3.7.19/policy/modules/services/fail2ban.fc
--- nsaserefpolicy/policy/modules/services/fail2ban.fc	2013-03-15 11:41:13.949153549 +0100
+++ serefpolicy-3.7.19/policy/modules/services/fail2ban.fc	2013-03-15 11:40:14.126152184 +0100
@@ -4,5 +4,5 @@
 /usr/bin/fail2ban-server --	gen_context(system_u:object_r:fail2ban_exec_t,s0)
 
 /var/lib/fail2ban(/.*)?		gen_context(system_u:object_r:fail2ban_var_lib_t,s0)
-/var/log/fail2ban\.log	--	gen_context(system_u:object_r:fail2ban_log_t,s0)
+/var/log/fail2ban\.log.*	--	gen_context(system_u:object_r:fail2ban_log_t,s0)
 /var/run/fail2ban.*		gen_context(system_u:object_r:fail2ban_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/fail2ban.te serefpolicy-3.7.19/policy/modules/services/fail2ban.te
--- nsaserefpolicy/policy/modules/services/fail2ban.te	2013-03-15 11:41:13.609153541 +0100
+++ serefpolicy-3.7.19/policy/modules/services/fail2ban.te	2013-03-15 11:40:12.606152149 +0100
@@ -88,6 +88,8 @@
 
 auth_use_nsswitch(fail2ban_t)
 
+libs_exec_ldconfig(fail2ban_t)
+
 logging_read_all_logs(fail2ban_t)
 logging_send_syslog_msg(fail2ban_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/ftp.te serefpolicy-3.7.19/policy/modules/services/ftp.te
--- nsaserefpolicy/policy/modules/services/ftp.te	2013-03-15 11:41:15.754153590 +0100
+++ serefpolicy-3.7.19/policy/modules/services/ftp.te	2013-03-25 11:46:42.865629879 +0100
@@ -33,6 +33,13 @@
 
 ## <desc>
 ## <p>
+## Allow samba to export ntfs/fusefs volumes.
+## </p>
+## </desc>
+gen_tunable(ftpd_use_fusefs, false)
+
+## <desc>
+## <p>
 ## Allow ftp servers to use nfs
 ## used for public file transfer services.
 ## </p>
@@ -105,7 +112,7 @@
 # ftpd local policy
 #
 
-allow ftpd_t self:capability { chown fowner fsetid ipc_lock setgid setuid sys_chroot sys_admin sys_nice sys_resource };
+allow ftpd_t self:capability { chown fowner fsetid ipc_lock kill setgid setuid sys_chroot sys_admin sys_nice sys_resource };
 dontaudit ftpd_t self:capability sys_tty_config;
 allow ftpd_t self:process { getcap getpgid setcap setsched setrlimit signal_perms };
 allow ftpd_t self:fifo_file rw_fifo_file_perms;
@@ -222,6 +229,13 @@
 	fs_manage_cifs_files(ftpd_t)
 ')
 
+tunable_policy(`ftpd_use_fusefs',`
+        fs_manage_fusefs_dirs(ftpd_t)
+        fs_manage_fusefs_files(ftpd_t)
+',`
+        fs_search_fusefs(ftpd_t)
+')
+
 tunable_policy(`allow_ftpd_use_nfs',`
 	fs_read_nfs_files(ftpd_t)
 	fs_read_nfs_symlinks(ftpd_t)
diff -Nur nsaserefpolicy/policy/modules/services/git.if serefpolicy-3.7.19/policy/modules/services/git.if
--- nsaserefpolicy/policy/modules/services/git.if	2013-03-15 11:41:14.150153553 +0100
+++ serefpolicy-3.7.19/policy/modules/services/git.if	2013-03-15 11:40:14.649152196 +0100
@@ -444,6 +444,7 @@
 
 	list_dirs_pattern($1, git_system_content_t, git_system_content_t)
 	read_files_pattern($1, git_system_content_t, git_system_content_t)
+	read_lnk_files_pattern($1, git_system_content_t, git_system_content_t)
 	files_search_var_lib($1)
 
 	tunable_policy(`git_system_use_cifs',`
diff -Nur nsaserefpolicy/policy/modules/services/glance.te serefpolicy-3.7.19/policy/modules/services/glance.te
--- nsaserefpolicy/policy/modules/services/glance.te	2013-03-15 11:41:14.698153566 +0100
+++ serefpolicy-3.7.19/policy/modules/services/glance.te	2013-03-15 11:40:15.355152212 +0100
@@ -57,12 +57,15 @@
 kernel_read_system_state(glance_domain)
 
 corecmd_exec_bin(glance_domain)
+corecmd_exec_shell(glance_domain)
 
 dev_read_urand(glance_domain)
 
 files_read_etc_files(glance_domain)
 files_read_usr_files(glance_domain)
 
+libs_exec_ldconfig(glance_domain)
+
 miscfiles_read_localization(glance_domain)
 
 optional_policy(`
@@ -80,6 +83,7 @@
 
 corenet_tcp_bind_generic_node(glance_registry_t)
 corenet_tcp_bind_glance_registry_port(glance_registry_t)
+corenet_tcp_connect_mysqld_port(glance_registry_t)
 
 logging_send_syslog_msg(glance_registry_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/glusterd.fc serefpolicy-3.7.19/policy/modules/services/glusterd.fc
--- nsaserefpolicy/policy/modules/services/glusterd.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/glusterd.fc	2013-03-15 11:40:13.660152173 +0100
@@ -0,0 +1,16 @@
+
+/etc/rc\.d/init\.d/glusterd	--	gen_context(system_u:object_r:glusterd_initrc_exec_t,s0)
+
+/etc/glusterfs(/.*)?			gen_context(system_u:object_r:glusterd_etc_t,s0)
+/etc/glusterd(/.*)?			gen_context(system_u:object_r:glusterd_etc_t,s0)
+
+/usr/sbin/glusterd		--	gen_context(system_u:object_r:glusterd_initrc_exec_t,s0)
+/usr/sbin/glusterfsd		--	gen_context(system_u:object_r:glusterd_exec_t,s0)
+
+/opt/glusterfs/[^/]+/sbin/glusterfsd	--	gen_context(system_u:object_r:glusterd_exec_t,s0)
+
+/var/log/glusterfs(/.*)?		gen_context(system_u:object_r:glusterd_log_t,s0)
+
+/var/run/glusterd(/.*)?			gen_context(system_u:object_r:glusterd_var_run_t,s0)
+/var/run/glusterd\.pid		--	gen_context(system_u:object_r:glusterd_var_run_t,s0)
+
diff -Nur nsaserefpolicy/policy/modules/services/glusterd.if serefpolicy-3.7.19/policy/modules/services/glusterd.if
--- nsaserefpolicy/policy/modules/services/glusterd.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/glusterd.if	2013-03-15 11:40:17.487152261 +0100
@@ -0,0 +1,146 @@
+
+## <summary>policy for glusterd</summary>
+
+
+########################################
+## <summary>
+##	Transition to glusterd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`glusterd_domtrans',`
+	gen_require(`
+		type glusterd_t, glusterd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, glusterd_exec_t, glusterd_t)
+')
+
+
+########################################
+## <summary>
+##	Execute glusterd server in the glusterd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glusterd_initrc_domtrans',`
+	gen_require(`
+		type glusterd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, glusterd_initrc_exec_t)
+')
+
+
+########################################
+## <summary>
+##	Read glusterd's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`glusterd_read_log',`
+	gen_require(`
+		type glusterd_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, glusterd_log_t, glusterd_log_t)
+')
+
+########################################
+## <summary>
+##	Append to glusterd log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glusterd_append_log',`
+	gen_require(`
+		type glusterd_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, glusterd_log_t, glusterd_log_t)
+')
+
+########################################
+## <summary>
+##	Manage glusterd log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glusterd_manage_log',`
+	gen_require(`
+		type glusterd_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, glusterd_log_t, glusterd_log_t)
+	manage_files_pattern($1, glusterd_log_t, glusterd_log_t)
+	manage_lnk_files_pattern($1, glusterd_log_t, glusterd_log_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an glusterd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`glusterd_admin',`
+	gen_require(`
+		type glusterd_t;
+		type glusterd_initrc_exec_t;
+		type glusterd_log_t;
+		type glusterd_tmp_t;
+		type glusterd_etc_t; 
+	')
+
+	allow $1 glusterd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, glusterd_t)
+
+	glusterd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 glusterd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, glusterd_log_t)
+
+	admin_pattern($1, glusterd_tmp_t)
+
+	admin_pattern($1, glusterd_etc_t)
+
+')
+
diff -Nur nsaserefpolicy/policy/modules/services/glusterd.te serefpolicy-3.7.19/policy/modules/services/glusterd.te
--- nsaserefpolicy/policy/modules/services/glusterd.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/glusterd.te	2013-03-15 11:40:17.626152264 +0100
@@ -0,0 +1,142 @@
+policy_module(glusterd, 1.0.0)
+
+## <desc>
+## <p>
+## Allow glusterfsd to modify public files used for public file
+## transfer services.  Files/Directories must be labeled
+## public_content_rw_t.
+## </p>
+## </desc>
+gen_tunable(gluster_anon_write, false)
+
+## <desc>
+## <p>
+## Allow glusterfsd to share any file/directory read only.
+## </p>
+## </desc>
+gen_tunable(gluster_export_all_ro, false)
+
+## <desc>
+## <p>
+## Allow glusterfsd to share any file/directory read/write.
+## </p>
+## </desc>
+gen_tunable(gluster_export_all_rw, true)
+
+########################################
+#
+# Declarations
+#
+
+type glusterd_t;
+type glusterd_exec_t;
+init_daemon_domain(glusterd_t, glusterd_exec_t)
+
+type glusterd_etc_t;
+files_type(glusterd_etc_t)
+
+type glusterd_tmp_t;
+files_tmp_file(glusterd_tmp_t)
+
+type glusterd_initrc_exec_t;
+init_script_file(glusterd_initrc_exec_t)
+
+type glusterd_log_t;
+logging_log_file(glusterd_log_t)
+
+type glusterd_var_run_t;
+files_pid_file(glusterd_var_run_t)
+
+type glusterd_var_lib_t;
+files_type(glusterd_var_lib_t);
+
+
+########################################
+#
+# glusterd local policy
+#
+
+allow glusterd_t self:capability { net_bind_service sys_admin dac_override chown dac_read_search fowner };
+allow glusterd_t self:process { setrlimit signal };
+allow glusterd_t self:capability sys_resource;
+
+allow glusterd_t self:fifo_file rw_fifo_file_perms;
+allow glusterd_t self:netlink_route_socket r_netlink_socket_perms;
+allow glusterd_t self:tcp_socket create_stream_socket_perms;
+allow glusterd_t self:udp_socket create_socket_perms;
+allow glusterd_t self:unix_stream_socket create_stream_socket_perms;
+allow glusterd_t self:unix_dgram_socket create_socket_perms;
+
+manage_dirs_pattern(glusterd_t, glusterd_tmp_t, glusterd_tmp_t)
+manage_files_pattern(glusterd_t, glusterd_tmp_t, glusterd_tmp_t)
+manage_sock_files_pattern(glusterd_t, glusterd_tmp_t, glusterd_tmp_t)
+files_tmp_filetrans(glusterd_t, glusterd_tmp_t, { dir file sock_file }) 
+userdom_user_tmp_filetrans(glusterd_t, glusterd_tmp_t, { dir file sock_file })
+
+manage_dirs_pattern(glusterd_t, glusterd_log_t, glusterd_log_t)
+manage_files_pattern(glusterd_t, glusterd_log_t, glusterd_log_t)
+logging_log_filetrans(glusterd_t, glusterd_log_t, { dir file })
+
+manage_dirs_pattern(glusterd_t, glusterd_var_run_t, glusterd_var_run_t)
+manage_files_pattern(glusterd_t, glusterd_var_run_t, glusterd_var_run_t)
+files_pid_filetrans(glusterd_t, glusterd_var_run_t, { dir file })
+
+manage_dirs_pattern(glusterd_t, glusterd_var_lib_t, glusterd_var_lib_t)
+manage_files_pattern(glusterd_t, glusterd_var_lib_t, glusterd_var_lib_t)
+files_var_lib_filetrans(glusterd_t, glusterd_var_lib_t, { dir file })
+
+manage_dirs_pattern(glusterd_t, glusterd_etc_t, glusterd_etc_t)
+manage_files_pattern(glusterd_t, glusterd_etc_t, glusterd_etc_t)
+
+can_exec(glusterd_t, glusterd_exec_t)
+
+kernel_read_system_state(glusterd_t)
+
+corecmd_exec_bin(glusterd_t)
+corecmd_exec_shell(glusterd_t)
+
+domain_use_interactive_fds(glusterd_t)
+
+corenet_tcp_bind_generic_node(glusterd_t)
+corenet_tcp_bind_generic_port(glusterd_t)
+corenet_tcp_bind_all_reserved_ports(glusterd_t)
+corenet_udp_bind_all_rpc_ports(glusterd_t)
+corenet_udp_bind_generic_node(glusterd_t)
+corenet_udp_bind_ipp_port(glusterd_t)
+
+dev_read_sysfs(glusterd_t)
+dev_read_urand(glusterd_t)
+
+files_read_usr_files(glusterd_t)
+files_rw_pid_dirs(glusterd_t)
+
+# Why is this needed
+#files_manage_urandom_seed(glusterd_t)
+
+auth_use_nsswitch(glusterd_t)
+
+logging_send_syslog_msg(glusterd_t)
+
+miscfiles_read_localization(glusterd_t)
+
+sysnet_read_config(glusterd_t)
+
+userdom_manage_user_home_dirs(glusterd_t)
+
+optional_policy(`
+	unconfined_domain(glusterd_t)
+')
+
+tunable_policy(`gluster_anon_write',`
+        miscfiles_manage_public_files(glusterd_t)
+') 
+
+tunable_policy(`gluster_export_all_ro',`
+        fs_read_noxattr_fs_files(glusterd_t) 
+        files_read_non_security_files(glusterd_t) 
+')
+
+tunable_policy(`gluster_export_all_rw',`
+        fs_manage_noxattr_fs_files(glusterd_t) 
+        files_manage_non_security_files(glusterd_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/hal.fc serefpolicy-3.7.19/policy/modules/services/hal.fc
--- nsaserefpolicy/policy/modules/services/hal.fc	2013-03-15 11:41:14.031153551 +0100
+++ serefpolicy-3.7.19/policy/modules/services/hal.fc	2013-03-15 11:40:14.474152192 +0100
@@ -19,7 +19,7 @@
 /var/lib/hal(/.*)?				gen_context(system_u:object_r:hald_var_lib_t,s0)
 
 /var/log/pm(/.*)?				gen_context(system_u:object_r:hald_log_t,s0)
-/var/log/pm-.*\.log				gen_context(system_u:object_r:hald_log_t,s0)
+/var/log/pm-.*\.log.*				gen_context(system_u:object_r:hald_log_t,s0)
 
 /var/run/hald(/.*)?				gen_context(system_u:object_r:hald_var_run_t,s0)
 /var/run/haldaemon\.pid	--	 		gen_context(system_u:object_r:hald_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/hal.if serefpolicy-3.7.19/policy/modules/services/hal.if
--- nsaserefpolicy/policy/modules/services/hal.if	2013-03-15 11:41:14.211153555 +0100
+++ serefpolicy-3.7.19/policy/modules/services/hal.if	2013-03-15 11:40:14.778152199 +0100
@@ -300,6 +300,24 @@
 	dontaudit $1 hald_log_t:file { append write };
 ')
 
+#######################################
+## <summary>
+##  Manage hald log files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`hal_rw_log',`
+    gen_require(`
+        type hald_log_t;
+    ')
+
+	rw_files_pattern($1, hald_log_t, hald_log_t)
+')
+
 ########################################
 ## <summary>
 ##	Manage hald log files.
diff -Nur nsaserefpolicy/policy/modules/services/hal.te serefpolicy-3.7.19/policy/modules/services/hal.te
--- nsaserefpolicy/policy/modules/services/hal.te	2013-03-15 11:41:14.556153563 +0100
+++ serefpolicy-3.7.19/policy/modules/services/hal.te	2013-06-12 12:54:50.273756077 +0200
@@ -173,6 +173,7 @@
 files_getattr_all_mountpoints(hald_t)
 
 mls_file_read_all_levels(hald_t)
+mcs_file_read_all(hald_t)
 
 selinux_get_fs_mount(hald_t)
 selinux_validate_context(hald_t)
diff -Nur nsaserefpolicy/policy/modules/services/imaze.fc serefpolicy-3.7.19/policy/modules/services/imaze.fc
--- nsaserefpolicy/policy/modules/services/imaze.fc	2013-03-15 11:41:15.760153590 +0100
+++ serefpolicy-3.7.19/policy/modules/services/imaze.fc	2013-03-15 11:40:18.275152278 +0100
@@ -1,4 +1,4 @@
 /usr/games/imazesrv		 --	gen_context(system_u:object_r:imazesrv_exec_t,s0)
 /usr/share/games/imaze(/.*)?		gen_context(system_u:object_r:imazesrv_data_t,s0)
 
-/var/log/imaze\.log		 --	gen_context(system_u:object_r:imazesrv_log_t,s0)
+/var/log/imaze\.log.*		 --	gen_context(system_u:object_r:imazesrv_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/inetd.fc serefpolicy-3.7.19/policy/modules/services/inetd.fc
--- nsaserefpolicy/policy/modules/services/inetd.fc	2013-03-15 11:41:15.587153586 +0100
+++ serefpolicy-3.7.19/policy/modules/services/inetd.fc	2013-03-15 11:40:17.701152265 +0100
@@ -7,6 +7,6 @@
 /usr/sbin/rlinetd	--	gen_context(system_u:object_r:inetd_exec_t,s0)
 /usr/sbin/xinetd	--	gen_context(system_u:object_r:inetd_exec_t,s0)
 
-/var/log/(x)?inetd\.log	--	gen_context(system_u:object_r:inetd_log_t,s0)
+/var/log/(x)?inetd\.log.*	--	gen_context(system_u:object_r:inetd_log_t,s0)
 
 /var/run/(x)?inetd\.pid	--	gen_context(system_u:object_r:inetd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/kerberos.fc serefpolicy-3.7.19/policy/modules/services/kerberos.fc
--- nsaserefpolicy/policy/modules/services/kerberos.fc	2013-03-15 11:41:13.573153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/kerberos.fc	2013-03-15 11:40:12.442152145 +0100
@@ -28,8 +28,8 @@
 /var/kerberos/krb5kdc/principal.*	gen_context(system_u:object_r:krb5kdc_principal_t,s0)
 /var/kerberos/krb5kdc/principal.*\.ok	gen_context(system_u:object_r:krb5kdc_lock_t,s0)
 
-/var/log/krb5kdc\.log			gen_context(system_u:object_r:krb5kdc_log_t,s0)
-/var/log/kadmin(d)?\.log		gen_context(system_u:object_r:kadmind_log_t,s0)
+/var/log/krb5kdc\.log.*			gen_context(system_u:object_r:krb5kdc_log_t,s0)
+/var/log/kadmin(d)?\.log.*		gen_context(system_u:object_r:kadmind_log_t,s0)
 
 /var/tmp/host_0			-- 	gen_context(system_u:object_r:krb5_host_rcache_t,s0)
 /var/tmp/HTTP_23  		--  gen_context(system_u:object_r:krb5_host_rcache_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/kerberos.te serefpolicy-3.7.19/policy/modules/services/kerberos.te
--- nsaserefpolicy/policy/modules/services/kerberos.te	2013-03-15 11:41:13.541153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/kerberos.te	2013-03-15 11:40:12.391152144 +0100
@@ -86,6 +86,7 @@
 allow kadmind_t self:unix_dgram_socket { connect create write };
 allow kadmind_t self:tcp_socket connected_stream_socket_perms;
 allow kadmind_t self:udp_socket create_socket_perms;
+allow kadmind_t self:fifo_file ioctl;
 
 allow kadmind_t kadmind_log_t:file manage_file_perms;
 logging_log_filetrans(kadmind_t, kadmind_log_t, file)
@@ -95,12 +96,15 @@
 
 read_files_pattern(kadmind_t, krb5kdc_conf_t, krb5kdc_conf_t)
 dontaudit kadmind_t krb5kdc_conf_t:file { write_file_perms setattr_file_perms };
+manage_files_pattern(kadmind_t, krb5kdc_conf_t, krb5kdc_conf_t)
 
 allow kadmind_t krb5kdc_lock_t:file { rw_file_perms setattr_file_perms };
 
 allow kadmind_t krb5kdc_principal_t:file manage_file_perms;
 filetrans_pattern(kadmind_t, krb5kdc_conf_t, krb5kdc_principal_t, file)
 
+allow kadmind_t krb5_keytab_t:file read_file_perms;
+
 can_exec(kadmind_t, kadmind_exec_t)
 
 manage_dirs_pattern(kadmind_t, kadmind_tmp_t, kadmind_tmp_t)
@@ -116,6 +120,9 @@
 kernel_read_proc_symlinks(kadmind_t)
 kernel_read_system_state(kadmind_t)
 
+corecmd_exec_bin(kadmind_t)
+corecmd_exec_shell(kadmind_t)
+
 corenet_all_recvfrom_unlabeled(kadmind_t)
 corenet_all_recvfrom_netlabel(kadmind_t)
 corenet_tcp_sendrecv_generic_if(kadmind_t)
@@ -134,6 +141,7 @@
 corenet_dontaudit_tcp_bind_all_reserved_ports(kadmind_t)
 corenet_sendrecv_kerberos_admin_server_packets(kadmind_t)
 corenet_sendrecv_kerberos_password_server_packets(kadmind_t)
+corenet_tcp_connect_kprop_port(kadmind_t)
 
 dev_read_sysfs(kadmind_t)
 dev_read_rand(kadmind_t)
@@ -141,6 +149,7 @@
 
 fs_getattr_all_fs(kadmind_t)
 fs_search_auto_mountpoints(kadmind_t)
+fs_rw_anon_inodefs_files(kadmind_t)
 
 domain_use_interactive_fds(kadmind_t)
 
@@ -157,6 +166,7 @@
 miscfiles_read_localization(kadmind_t)
 
 seutil_read_file_contexts(kadmind_t)
+seutil_read_config(kadmind_t)
 
 sysnet_read_config(kadmind_t)
 sysnet_use_ldap(kadmind_t)
@@ -181,6 +191,10 @@
 ')
 
 optional_policy(`
+	sssd_read_public_files(kadmind_t)
+')
+
+optional_policy(`
 	udev_read_db(kadmind_t)
 ')
 
@@ -250,6 +264,7 @@
 
 fs_getattr_all_fs(krb5kdc_t)
 fs_search_auto_mountpoints(krb5kdc_t)
+fs_rw_anon_inodefs_files(krb5kdc_t)
 
 domain_use_interactive_fds(krb5kdc_t)
 
@@ -289,6 +304,10 @@
 ')
 
 optional_policy(`
+	sssd_read_public_files(krb5kdc_t)
+')
+
+optional_policy(`
 	udev_read_db(krb5kdc_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/services/l2tpd.fc serefpolicy-3.7.19/policy/modules/services/l2tpd.fc
--- nsaserefpolicy/policy/modules/services/l2tpd.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/l2tpd.fc	2013-03-15 11:40:17.809152268 +0100
@@ -0,0 +1,18 @@
+/etc/prol2tp(/.*)?	gen_context(system_u:object_r:l2tp_etc_t,s0)
+
+/etc/rc\.d/init\.d/openl2tpd	--	gen_context(system_u:object_r:l2tpd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/prol2tpd	--	gen_context(system_u:object_r:l2tpd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/xl2tpd	--	gen_context(system_u:object_r:l2tpd_initrc_exec_t,s0)
+
+/etc/sysconfig/prol2tpd	--	gen_context(system_u:object_r:l2tp_etc_t,s0)
+
+/usr/sbin/openl2tpd	--	gen_context(system_u:object_r:l2tpd_exec_t,s0)
+/usr/sbin/prol2tpd	--	gen_context(system_u:object_r:l2tpd_exec_t,s0)
+/usr/sbin/xl2tpd	--	gen_context(system_u:object_r:l2tpd_exec_t,s0)
+
+/var/run/openl2tpd\.pid	--	gen_context(system_u:object_r:l2tpd_var_run_t,s0)
+/var/run/prol2tpd(/.*)?	gen_context(system_u:object_r:l2tpd_var_run_t,s0)
+/var/run/prol2tpd\.ctl	-s	gen_context(system_u:object_r:l2tpd_var_run_t,s0)
+/var/run/prol2tpd\.pid	--	gen_context(system_u:object_r:l2tpd_var_run_t,s0)
+/var/run/xl2tpd(/.*)?	gen_context(system_u:object_r:l2tpd_var_run_t,s0)
+/var/run/xl2tpd\.pid	--	gen_context(system_u:object_r:l2tpd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/l2tpd.if serefpolicy-3.7.19/policy/modules/services/l2tpd.if
--- nsaserefpolicy/policy/modules/services/l2tpd.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/l2tpd.if	2013-03-15 11:40:14.171152185 +0100
@@ -0,0 +1,178 @@
+## <summary>Layer 2 Tunneling Protocol daemons.</summary>
+
+########################################
+## <summary>
+##	Transition to l2tpd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`l2tpd_domtrans',`
+	gen_require(`
+		type l2tpd_t, l2tpd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, l2tpd_exec_t, l2tpd_t)
+')
+
+########################################
+## <summary>
+##	Execute l2tpd server in the l2tpd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`l2tpd_initrc_domtrans',`
+	gen_require(`
+		type l2tpd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, l2tpd_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Send to l2tpd via a unix dgram socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`l2tpd_dgram_send',`
+	gen_require(`
+		type l2tpd_t, l2tpd_tmp_t, l2tpd_var_run_t;
+	')
+
+	files_search_tmp($1)
+	dgram_send_pattern($1, { l2tpd_tmp_t l2tpd_var_run_t }, { l2tpd_tmp_t l2tpd_var_run_t }, l2tpd_t)
+')
+
+########################################
+## <summary>
+##	Read and write l2tpd sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`l2tpd_rw_socket',`
+	gen_require(`
+		type l2tpd_t;
+	')
+
+	allow $1 l2tpd_t:socket rw_socket_perms;
+')
+
+########################################
+## <summary>
+##	Read l2tpd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`l2tpd_read_pid_files',`
+	gen_require(`
+		type l2tpd_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 l2tpd_var_run_t:file read_file_perms;
+')
+
+#####################################
+## <summary>
+##	Connect to l2tpd over a unix domain
+##	stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`l2tpd_stream_connect',`
+	gen_require(`
+		type l2tpd_t, l2tpd_var_run_t, l2tpd_tmp_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, l2tpd_tmp_t, l2tpd_tmp_t, l2tpd_t)
+	stream_connect_pattern($1, l2tpd_var_run_t, l2tpd_var_run_t, l2tpd_t)
+')
+
+########################################
+## <summary>
+##	Read and write l2tpd unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`l2tpd_rw_pipes',`
+	gen_require(`
+		type l2tpd_t;
+	')
+
+	allow $1 l2tpd_t:fifo_file rw_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an l2tpd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`l2tpd_admin',`
+	gen_require(`
+		type l2tpd_t, l2tpd_initrc_exec_t, l2tpd_var_run_t;
+		type l2tp_etc_t, l2tpd_tmp_t;
+	')
+
+	allow $1 l2tpd_t:process signal_perms;
+	ps_process_pattern($1, l2tpd_t)
+
+	tunable_policy(`deny_ptrace',`',`
+		allow $1 l2tpd_t:process ptrace;
+	')
+
+	l2tpd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 l2tpd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, l2tp_etc_t)
+
+	files_search_pids($1)
+	admin_pattern($1, l2tpd_var_run_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, l2tpd_tmp_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/l2tpd.te serefpolicy-3.7.19/policy/modules/services/l2tpd.te
--- nsaserefpolicy/policy/modules/services/l2tpd.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/l2tpd.te	2013-03-15 11:40:14.715152197 +0100
@@ -0,0 +1,102 @@
+policy_module(l2tpd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type l2tpd_t;
+type l2tpd_exec_t;
+init_daemon_domain(l2tpd_t, l2tpd_exec_t)
+
+type l2tpd_initrc_exec_t;
+init_script_file(l2tpd_initrc_exec_t)
+
+type l2tp_etc_t;
+files_config_file(l2tp_etc_t)
+
+type l2tpd_tmp_t;
+files_tmp_file(l2tpd_tmp_t)
+
+type l2tpd_var_run_t;
+files_pid_file(l2tpd_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow l2tpd_t self:capability { net_admin net_bind_service };
+allow l2tpd_t self:process signal;
+allow l2tpd_t self:fifo_file rw_fifo_file_perms;
+allow l2tpd_t self:netlink_socket create_socket_perms;
+allow l2tpd_t self:rawip_socket create_socket_perms;
+allow l2tpd_t self:socket create_socket_perms;
+allow l2tpd_t self:tcp_socket create_stream_socket_perms;
+allow l2tpd_t self:unix_dgram_socket sendto;
+allow l2tpd_t self:unix_stream_socket create_stream_socket_perms;
+
+read_files_pattern(l2tpd_t, l2tp_etc_t, l2tp_etc_t)
+
+manage_dirs_pattern(l2tpd_t, l2tpd_var_run_t, l2tpd_var_run_t)
+manage_files_pattern(l2tpd_t, l2tpd_var_run_t, l2tpd_var_run_t)
+manage_sock_files_pattern(l2tpd_t, l2tpd_var_run_t, l2tpd_var_run_t)
+manage_fifo_files_pattern(l2tpd_t, l2tpd_var_run_t, l2tpd_var_run_t)
+files_pid_filetrans(l2tpd_t, l2tpd_var_run_t, { dir file sock_file fifo_file })
+
+manage_sock_files_pattern(l2tpd_t, l2tpd_tmp_t, l2tpd_tmp_t)
+files_tmp_filetrans(l2tpd_t, l2tpd_tmp_t, sock_file)
+
+corenet_all_recvfrom_netlabel(l2tpd_t)
+corenet_raw_sendrecv_generic_if(l2tpd_t)
+corenet_tcp_sendrecv_generic_if(l2tpd_t)
+corenet_udp_sendrecv_generic_if(l2tpd_t)
+corenet_raw_bind_generic_node(l2tpd_t)
+corenet_tcp_bind_generic_node(l2tpd_t)
+corenet_udp_bind_generic_node(l2tpd_t)
+corenet_raw_sendrecv_generic_node(l2tpd_t)
+corenet_tcp_sendrecv_generic_node(l2tpd_t)
+corenet_udp_sendrecv_generic_node(l2tpd_t)
+
+corenet_tcp_bind_all_rpc_ports(l2tpd_t)
+corenet_udp_bind_all_rpc_ports(l2tpd_t)
+corenet_udp_bind_generic_port(l2tpd_t)
+
+corenet_udp_bind_l2tp_port(l2tpd_t)
+corenet_udp_sendrecv_l2tp_port(l2tpd_t)
+corenet_sendrecv_l2tp_server_packets(l2tpd_t)
+
+kernel_read_system_state(l2tpd_t)
+kernel_read_network_state(l2tpd_t)
+# net-pf-24 (pppox)
+kernel_request_load_module(l2tpd_t)
+
+term_use_ptmx(l2tpd_t)
+term_use_generic_ptys(l2tpd_t)
+
+# prol2tpc
+corecmd_exec_bin(l2tpd_t)
+
+dev_read_urand(l2tpd_t)
+
+domain_use_interactive_fds(l2tpd_t)
+
+files_read_etc_files(l2tpd_t)
+
+term_use_ptmx(l2tpd_t)
+
+logging_send_syslog_msg(l2tpd_t)
+
+miscfiles_read_localization(l2tpd_t)
+
+sysnet_dns_name_resolve(l2tpd_t)
+
+optional_policy(`
+	ppp_domtrans(l2tpd_t)
+	ppp_signal(l2tpd_t)
+	ppp_kill(l2tpd_t)
+')
+
+optional_policy(`
+	unconfined_domain(l2tpd_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/ldap.fc serefpolicy-3.7.19/policy/modules/services/ldap.fc
--- nsaserefpolicy/policy/modules/services/ldap.fc	2013-03-15 11:41:14.732153567 +0100
+++ serefpolicy-3.7.19/policy/modules/services/ldap.fc	2013-03-15 11:40:15.406152213 +0100
@@ -1,5 +1,6 @@
 
 /etc/ldap/slapd\.conf	--	gen_context(system_u:object_r:slapd_etc_t,s0)
+/etc/openldap/certs(/.*)?	gen_context(system_u:object_r:slapd_cert_t,s0)	
 /etc/openldap/slapd\.d(/.*)?	gen_context(system_u:object_r:slapd_db_t,s0)
 
 /etc/rc\.d/init\.d/slapd	--	gen_context(system_u:object_r:slapd_initrc_exec_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/matahari.te serefpolicy-3.7.19/policy/modules/services/matahari.te
--- nsaserefpolicy/policy/modules/services/matahari.te	2013-03-15 11:41:14.716153566 +0100
+++ serefpolicy-3.7.19/policy/modules/services/matahari.te	2013-03-15 11:40:15.370152212 +0100
@@ -39,6 +39,10 @@
 	dbus_system_bus_client(matahari_hostd_t)
 ')
 
+optional_policy(`
+	unconfined_domain(matahari_hostd_t)
+')
+
 ########################################
 #
 # matahari_netd local policy
@@ -50,6 +54,10 @@
 	dbus_system_bus_client(matahari_netd_t)
 ')
 
+optional_policy(`
+	unconfined_domain(matahari_netd_t)
+')
+
 ######################################
 #
 # matahari_rpcd local policy
@@ -61,6 +69,10 @@
 
 files_read_usr_files(matahari_rpcd_t)
 
+optional_policy(`
+	unconfined_domain(matahari_rpcd_t)
+')
+
 ########################################
 #
 # matahari_serviced local policy
@@ -74,6 +86,9 @@
 init_spec_domtrans_script(matahari_serviced_t)
 #init_domtrans_script(matahari_serviced_t)
 
+optional_policy(`
+	unconfined_domain(matahari_serviced_t)
+')
 
 ########################################
 #
@@ -81,6 +96,10 @@
 #
 dev_read_sysfs(matahari_sysconfigd_t)
 
+optional_policy(`
+	unconfined_domain(matahari_sysconfigd_t)
+')
+
 #######################################
 #
 # matahari domain local policy
diff -Nur nsaserefpolicy/policy/modules/services/milter.fc serefpolicy-3.7.19/policy/modules/services/milter.fc
--- nsaserefpolicy/policy/modules/services/milter.fc	2013-03-15 11:41:13.383153536 +0100
+++ serefpolicy-3.7.19/policy/modules/services/milter.fc	2013-03-15 11:40:12.023152136 +0100
@@ -1,6 +1,7 @@
 /etc/mail/dkim-milter/keys(/.*)?        gen_context(system_u:object_r:dkim_milter_private_key_t,s0)
 
 /usr/sbin/dkim-filter           --      gen_context(system_u:object_r:dkim_milter_exec_t,s0)
+/usr/sbin/opendkim      --  gen_context(system_u:object_r:dkim_milter_exec_t,s0)
 /usr/sbin/milter-greylist	--	gen_context(system_u:object_r:greylist_milter_exec_t,s0)
 /usr/sbin/milter-regex				--	gen_context(system_u:object_r:regex_milter_exec_t,s0)
 /usr/sbin/spamass-milter	--	gen_context(system_u:object_r:spamass_milter_exec_t,s0)
@@ -14,5 +15,7 @@
 /var/run/milter-greylist\.pid	--	gen_context(system_u:object_r:greylist_milter_data_t,s0)
 /var/run/spamass-milter(/.*)?		gen_context(system_u:object_r:spamass_milter_data_t,s0)
 /var/run/spamass-milter\.pid	--	gen_context(system_u:object_r:spamass_milter_data_t,s0)
+/var/run/opendkim(/.*)?         gen_context(system_u:object_r:dkim_milter_data_t,s0)
 
 /var/spool/milter-regex(/.*)?		gen_context(system_u:object_r:regex_milter_data_t,s0)
+/var/spool/opendkim(/.*)?       gen_context(system_u:object_r:dkim_milter_data_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/milter.te serefpolicy-3.7.19/policy/modules/services/milter.te
--- nsaserefpolicy/policy/modules/services/milter.te	2013-03-15 11:41:14.069153552 +0100
+++ serefpolicy-3.7.19/policy/modules/services/milter.te	2013-03-15 11:40:14.519152193 +0100
@@ -28,17 +28,26 @@
 type spamass_milter_state_t;
 files_type(spamass_milter_state_t)
 
+type milter_port_t;
+corenet_port(milter_port_t)
+allow milter_domains milter_port_t:tcp_socket name_bind;
+
+files_search_spool(milter_domains)
+
 #######################################
 #
 # dkim-milter local policy
 #
 
 allow dkim_milter_t self:capability { kill setgid setuid };
-
+allow dkim_milter_t self:process signal;
+allow dkim_milter_t self:tcp_socket create_stream_socket_perms;
 allow dkim_milter_t self:unix_stream_socket create_stream_socket_perms;
 
 read_files_pattern(dkim_milter_t, dkim_milter_private_key_t, dkim_milter_private_key_t)
 
+kernel_read_kernel_sysctls(dkim_milter_t)
+
 auth_use_nsswitch(dkim_milter_t)
 
 sysnet_dns_name_resolve(dkim_milter_t)
diff -Nur nsaserefpolicy/policy/modules/services/mta.te serefpolicy-3.7.19/policy/modules/services/mta.te
--- nsaserefpolicy/policy/modules/services/mta.te	2013-03-15 11:41:14.852153569 +0100
+++ serefpolicy-3.7.19/policy/modules/services/mta.te	2013-06-18 08:25:52.400770407 +0200
@@ -77,6 +77,7 @@
 dev_read_rand(system_mail_t)
 dev_read_urand(system_mail_t)
 
+fs_list_inotifyfs(system_mail_t)
 fs_rw_anon_inodefs_files(system_mail_t)
 
 selinux_getattr_fs(system_mail_t)
@@ -104,6 +105,9 @@
 	apache_dontaudit_rw_tcp_sockets(system_mail_t)
 	apache_dontaudit_rw_sys_script_stream_sockets(system_mail_t)
 	apache_dontaudit_rw_tmp_files(system_mail_t)
+
+	apache_dontaudit_rw_fifo_file(user_mail_domain)
+	apache_dontaudit_rw_fifo_file(mta_user_agent)
 ')
 
 optional_policy(`
@@ -226,6 +230,11 @@
 	optional_policy(`
 		cron_read_system_job_tmp_files(mta_user_agent)
 	')
+
+	optional_policy(`
+		openshift_rw_inherited_content(mta_user_agent)
+	')
+
 ')
 
 ########################################
Binary files nsaserefpolicy/policy/modules/services/.mta.te.swp and serefpolicy-3.7.19/policy/modules/services/.mta.te.swp differ
diff -Nur nsaserefpolicy/policy/modules/services/munin.fc serefpolicy-3.7.19/policy/modules/services/munin.fc
--- nsaserefpolicy/policy/modules/services/munin.fc	2013-03-15 11:41:15.316153580 +0100
+++ serefpolicy-3.7.19/policy/modules/services/munin.fc	2013-03-15 11:40:16.864152246 +0100
@@ -4,7 +4,9 @@
 /usr/bin/munin-.*		--	gen_context(system_u:object_r:munin_exec_t,s0)
 /usr/sbin/munin-.*		--	gen_context(system_u:object_r:munin_exec_t,s0)
 /usr/share/munin/munin-.*	--	gen_context(system_u:object_r:munin_exec_t,s0)
-/usr/share/munin/plugins/.*	--	gen_context(system_u:object_r:munin_exec_t,s0)
+
+# unconfined plugins
+/usr/share/munin/plugins/.*	--	gen_context(system_u:object_r:munin_unconfined_plugin_exec_t,s0)
 
 # disk plugins
 /usr/share/munin/plugins/diskstat.* --  gen_context(system_u:object_r:munin_disk_plugin_exec_t,s0)
@@ -62,6 +64,7 @@
 /usr/share/munin/plugins/processes 	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
 /usr/share/munin/plugins/swap		--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
 /usr/share/munin/plugins/threads 	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/unbound    --  gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
 /usr/share/munin/plugins/uptime		--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
 /usr/share/munin/plugins/users	 	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
 /usr/share/munin/plugins/yum      	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/munin.te serefpolicy-3.7.19/policy/modules/services/munin.te
--- nsaserefpolicy/policy/modules/services/munin.te	2013-03-15 11:41:14.812153569 +0100
+++ serefpolicy-3.7.19/policy/modules/services/munin.te	2013-03-15 11:40:15.791152222 +0100
@@ -40,13 +40,14 @@
 munin_plugin_template(selinux)
 munin_plugin_template(services)
 munin_plugin_template(system)
+munin_plugin_template(unconfined)
 
 ########################################
 #
 # Local policy
 #
 
-allow munin_t self:capability { chown dac_override setgid setuid sys_rawio };
+allow munin_t self:capability { chown dac_override kill setgid setuid sys_rawio };
 dontaudit munin_t self:capability sys_tty_config;
 allow munin_t self:process { getsched setsched signal_perms };
 allow munin_t self:unix_stream_socket { create_stream_socket_perms connectto };
@@ -81,7 +82,7 @@
 manage_sock_files_pattern(munin_t, munin_var_run_t, munin_var_run_t)
 files_pid_filetrans(munin_t, munin_var_run_t, file)
 
-read_files_pattern(munin_t, munin_plugin_state_t, munin_plugin_state_t)
+rw_files_pattern(munin_t, munin_plugin_state_t, munin_plugin_state_t)
 
 kernel_read_system_state(munin_t)
 kernel_read_network_state(munin_t)
@@ -212,6 +213,9 @@
 storage_raw_read_fixed_disk(munin_disk_plugin_t)
 storage_getattr_fixed_disk_dev(munin_disk_plugin_t)
 
+fs_getattr_all_fs(munin_disk_plugin_t)
+fs_getattr_all_dirs(munin_disk_plugin_t)
+
 sysnet_read_config(munin_disk_plugin_t)
 
 optional_policy(`
@@ -270,6 +274,8 @@
 allow munin_services_plugin_t self:udp_socket create_socket_perms;
 allow munin_services_plugin_t self:netlink_route_socket r_netlink_socket_perms;
 
+corenet_tcp_bind_generic_node(munin_services_plugin_t)
+corenet_udp_bind_generic_node(munin_services_plugin_t)
 corenet_tcp_connect_all_ports(munin_services_plugin_t)
 corenet_tcp_connect_http_port(munin_services_plugin_t)
 
@@ -305,6 +311,10 @@
 ')
 
 optional_policy(`
+    sssd_stream_connect(munin_services_plugin_t)
+')
+
+optional_policy(`
     varnishd_read_lib_files(munin_services_plugin_t)
 ')
 
@@ -318,7 +328,7 @@
 rw_files_pattern(munin_system_plugin_t, munin_var_lib_t, munin_var_lib_t)
 
 # needed by munin_* plugins
-allow munin_system_plugin_t munin_log_t:file read_file_perms;
+read_files_pattern(munin_system_plugin_t, munin_log_t, munin_log_t)
 logging_search_logs(munin_system_plugin_t)
 
 kernel_read_network_state(munin_system_plugin_t)
@@ -340,6 +350,19 @@
 
 auth_use_nsswitch(munin_system_plugin_t)
 
+optional_policy(`
+	bind_read_config(munin_system_plugin_t)
+')
+
+######################################
+#
+# Unconfined plugin policy
+#
+
+optional_policy(`
+    unconfined_domain(munin_unconfined_plugin_t)
+')
+
 ###############################
 #
 # local policy for munin plugin domains
@@ -353,6 +376,8 @@
 
 read_lnk_files_pattern(munin_plugin_domain, munin_etc_t, munin_etc_t)
 
+allow munin_plugin_domain munin_unconfined_plugin_exec_t:file r_file_perms;
+
 kernel_read_system_state(munin_plugin_domain)
 
 corecmd_exec_bin(munin_plugin_domain)
diff -Nur nsaserefpolicy/policy/modules/services/mysql.te serefpolicy-3.7.19/policy/modules/services/mysql.te
--- nsaserefpolicy/policy/modules/services/mysql.te	2013-03-15 11:41:13.775153545 +0100
+++ serefpolicy-3.7.19/policy/modules/services/mysql.te	2013-06-18 07:50:37.300953577 +0200
@@ -84,6 +84,8 @@
 manage_sock_files_pattern(mysqld_t, mysqld_var_run_t, mysqld_var_run_t)
 files_pid_filetrans(mysqld_t, mysqld_var_run_t, { file sock_file })
 
+can_exec(mysqld_t, mysqld_exec_t)
+
 kernel_read_system_state(mysqld_t)
 kernel_read_kernel_sysctls(mysqld_t)
 
@@ -146,6 +148,10 @@
 ')
 
 optional_policy(`
+    openshift_search_lib(mysqld_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(mysqld_t)
 ')
 
@@ -177,6 +183,7 @@
 kernel_read_kernel_sysctls(mysqld_safe_t)
 
 corecmd_exec_bin(mysqld_safe_t)
+corecmd_exec_shell(mysqld_safe_t)
 
 dev_list_sysfs(mysqld_safe_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/nagios.te serefpolicy-3.7.19/policy/modules/services/nagios.te
--- nsaserefpolicy/policy/modules/services/nagios.te	2013-03-15 11:41:14.905153571 +0100
+++ serefpolicy-3.7.19/policy/modules/services/nagios.te	2013-03-15 11:40:15.995152226 +0100
@@ -204,7 +204,7 @@
 # Nagios remote plugin executor local policy
 #
 
-allow nrpe_t self:capability { setuid setgid };
+allow nrpe_t self:capability { dac_override setuid setgid };
 dontaudit nrpe_t self:capability {sys_tty_config sys_resource};
 allow nrpe_t self:process { setpgid signal_perms setsched setrlimit };
 allow nrpe_t self:fifo_file rw_fifo_file_perms;
diff -Nur nsaserefpolicy/policy/modules/services/networkmanager.fc serefpolicy-3.7.19/policy/modules/services/networkmanager.fc
--- nsaserefpolicy/policy/modules/services/networkmanager.fc	2013-03-15 11:41:15.536153585 +0100
+++ serefpolicy-3.7.19/policy/modules/services/networkmanager.fc	2013-03-15 11:40:17.589152263 +0100
@@ -22,7 +22,7 @@
 /etc/NetworkManager(/.*)? 	gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
 
 /var/log/wicd(/.*)? 			gen_context(system_u:object_r:NetworkManager_log_t,s0)
-/var/log/wicd\.log		--		gen_context(system_u:object_r:NetworkManager_log_t,s0)
+/var/log/wicd\.log.*		--		gen_context(system_u:object_r:NetworkManager_log_t,s0)
 /var/log/wpa_supplicant.*	--	gen_context(system_u:object_r:NetworkManager_log_t,s0)
 
 /var/run/NetworkManager\.pid	--	gen_context(system_u:object_r:NetworkManager_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/networkmanager.te serefpolicy-3.7.19/policy/modules/services/networkmanager.te
--- nsaserefpolicy/policy/modules/services/networkmanager.te	2013-03-15 11:41:14.147153553 +0100
+++ serefpolicy-3.7.19/policy/modules/services/networkmanager.te	2013-03-15 11:40:14.641152196 +0100
@@ -165,6 +165,14 @@
 
 cron_read_system_job_lib_files(NetworkManager_t)
 
+tunable_policy(`use_nfs_home_dirs',`
+    fs_read_nfs_files(NetworkManager_t)
+')
+    
+tunable_policy(`use_samba_home_dirs',`
+    fs_read_cifs_files(NetworkManager_t)
+')
+
 optional_policy(`
 	avahi_domtrans(NetworkManager_t)
 	avahi_kill(NetworkManager_t)
diff -Nur nsaserefpolicy/policy/modules/services/nova.if serefpolicy-3.7.19/policy/modules/services/nova.if
--- nsaserefpolicy/policy/modules/services/nova.if	2013-03-15 11:41:13.556153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/nova.if	2013-06-12 13:00:42.794678270 +0200
@@ -2,6 +2,25 @@
 
 #######################################
 ## <summary>
+##  Manage nova lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`nova_manage_lib_files',`
+    gen_require(`
+            type nova_var_lib_t;
+                ')
+
+    files_search_var_lib($1)
+    manage_files_pattern($1, nova_var_lib_t, nova_var_lib_t)
+')
+
+#######################################
+## <summary>
 ##  Creates types and rules for a basic
 ##  openstack-nova systemd daemon domain.
 ## </summary>
diff -Nur nsaserefpolicy/policy/modules/services/nscd.te serefpolicy-3.7.19/policy/modules/services/nscd.te
--- nsaserefpolicy/policy/modules/services/nscd.te	2013-03-15 11:41:14.012153550 +0100
+++ serefpolicy-3.7.19/policy/modules/services/nscd.te	2013-03-15 11:40:14.440152191 +0100
@@ -146,8 +146,12 @@
 		samba_append_log(nscd_t)
 		samba_dontaudit_use_fds(nscd_t)
 	')
+')
+
+optional_policy(`
 	samba_read_config(nscd_t)
 	samba_read_var_files(nscd_t)
+	samba_stream_connect_nmbd(nscd_t)
 ')
 
 optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/services/nslcd.te serefpolicy-3.7.19/policy/modules/services/nslcd.te
--- nsaserefpolicy/policy/modules/services/nslcd.te	2013-03-15 11:41:15.457153583 +0100
+++ serefpolicy-3.7.19/policy/modules/services/nslcd.te	2013-03-15 11:40:17.517152261 +0100
@@ -23,7 +23,7 @@
 # nslcd local policy
 #
 
-allow nslcd_t self:capability { setgid setuid dac_override };
+allow nslcd_t self:capability { setgid setuid dac_override sys_nice };
 allow nslcd_t self:process { setsched signal };
 allow nslcd_t self:unix_stream_socket create_stream_socket_perms;
 
diff -Nur nsaserefpolicy/policy/modules/services/numad.fc serefpolicy-3.7.19/policy/modules/services/numad.fc
--- nsaserefpolicy/policy/modules/services/numad.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/numad.fc	2013-03-15 11:40:13.616152172 +0100
@@ -0,0 +1,5 @@
+/usr/bin/numad		--	gen_context(system_u:object_r:numad_exec_t,s0)
+
+/var/log/numad\.log.*	 --  gen_context(system_u:object_r:numad_var_log_t,s0)
+
+/var/run/numad\.pid      --  gen_context(system_u:object_r:numad_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/numad.if serefpolicy-3.7.19/policy/modules/services/numad.if
--- nsaserefpolicy/policy/modules/services/numad.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/numad.if	2013-03-15 11:40:14.728152198 +0100
@@ -0,0 +1,42 @@
+
+## <summary>policy for numad</summary>
+
+########################################
+## <summary>
+##	Transition to numad.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`numad_domtrans',`
+	gen_require(`
+		type numad_t, numad_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, numad_exec_t, numad_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an numad environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`numad_admin',`
+	gen_require(`
+		type numad_t;
+		type numad_unit_file_t;
+	')
+
+	allow $1 numad_t:process { ptrace signal_perms };
+	ps_process_pattern($1, numad_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/numad.te serefpolicy-3.7.19/policy/modules/services/numad.te
--- nsaserefpolicy/policy/modules/services/numad.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/numad.te	2013-03-15 11:40:15.199152208 +0100
@@ -0,0 +1,46 @@
+policy_module(numad, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type numad_t;
+type numad_exec_t;
+init_daemon_domain(numad_t, numad_exec_t)
+
+type numad_var_log_t;
+logging_log_file(numad_var_log_t)
+
+type numad_var_run_t;
+files_pid_file(numad_var_run_t)
+
+########################################
+#
+# numad local policy
+#
+
+allow numad_t self:process { fork };
+allow numad_t self:fifo_file rw_fifo_file_perms;
+allow numad_t self:msgq create_msgq_perms;
+allow numad_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(numad_t, numad_var_log_t, numad_var_log_t)
+logging_log_filetrans(numad_t, numad_var_log_t, { file })
+
+manage_files_pattern(numad_t, numad_var_run_t, numad_var_run_t)
+files_pid_filetrans(numad_t, numad_var_run_t, { file })
+
+kernel_read_system_state(numad_t)
+
+dev_read_sysfs(numad_t)
+
+domain_use_interactive_fds(numad_t)
+
+files_read_etc_files(numad_t)
+
+miscfiles_read_localization(numad_t)
+
+optional_policy(`
+	unconfined_domain(numad_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/oav.fc serefpolicy-3.7.19/policy/modules/services/oav.fc
--- nsaserefpolicy/policy/modules/services/oav.fc	2013-03-15 11:41:13.729153544 +0100
+++ serefpolicy-3.7.19/policy/modules/services/oav.fc	2013-03-15 11:40:13.003152158 +0100
@@ -6,4 +6,4 @@
 
 /var/lib/oav-virussignatures	--	gen_context(system_u:object_r:oav_update_var_lib_t,s0)
 /var/lib/oav-update(/.*)?		gen_context(system_u:object_r:oav_update_var_lib_t,s0)
-/var/log/scannerdaemon\.log 	--	gen_context(system_u:object_r:scannerdaemon_log_t,s0)
+/var/log/scannerdaemon\.log.*		--	gen_context(system_u:object_r:scannerdaemon_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/oddjob.if serefpolicy-3.7.19/policy/modules/services/oddjob.if
--- nsaserefpolicy/policy/modules/services/oddjob.if	2013-03-15 11:41:15.577153586 +0100
+++ serefpolicy-3.7.19/policy/modules/services/oddjob.if	2013-03-15 11:40:17.639152264 +0100
@@ -147,3 +147,41 @@
 	oddjob_domtrans_mkhomedir($1)
 	role $2 types oddjob_mkhomedir_t;
 ')
+
+########################################
+## <summary>
+##     Create a domain which can be started by init,
+##     with a range transition.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Type to be used as a domain.
+##     </summary>
+## </param>
+## <param name="entry_point">
+##     <summary>
+##     Type of the program to be used as an entry point to this domain.
+##     </summary>
+## </param>
+## <param name="range">
+##     <summary>
+##     Range for the domain.
+##     </summary>
+## </param>
+#
+interface(`oddjob_ranged_domain',`
+       gen_require(`
+               type oddjob_t;
+       ')
+
+       oddjob_system_entry($1, $2)
+
+       ifdef(`enable_mcs',`
+               range_transition oddjob_t $2:process $3;
+       ')
+
+       ifdef(`enable_mls',`
+               range_transition oddjob_t $2:process $3;
+               mls_rangetrans_target($1)
+       ')
+')
diff -Nur nsaserefpolicy/policy/modules/services/oddjob.te serefpolicy-3.7.19/policy/modules/services/oddjob.te
--- nsaserefpolicy/policy/modules/services/oddjob.te	2013-03-15 11:41:15.200153577 +0100
+++ serefpolicy-3.7.19/policy/modules/services/oddjob.te	2013-03-15 11:40:16.583152240 +0100
@@ -104,3 +104,16 @@
 userdom_manage_user_home_content_dirs(oddjob_mkhomedir_t)
 userdom_manage_user_home_content(oddjob_mkhomedir_t)
 
+tunable_policy(`use_nfs_home_dirs',`
+    fs_list_auto_mountpoints(oddjob_mkhomedir_t)
+    fs_manage_nfs_dirs(oddjob_mkhomedir_t)
+    fs_manage_nfs_files(oddjob_mkhomedir_t)
+    fs_manage_nfs_symlinks(oddjob_mkhomedir_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+    fs_manage_cifs_dirs(oddjob_mkhomedir_t)
+    fs_manage_cifs_files(oddjob_mkhomedir_t)
+    fs_manage_cifs_symlinks(oddjob_mkhomedir_t)
+')
+
diff -Nur nsaserefpolicy/policy/modules/services/openshift.fc serefpolicy-3.7.19/policy/modules/services/openshift.fc
--- nsaserefpolicy/policy/modules/services/openshift.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openshift.fc	2013-03-15 11:40:16.182152231 +0100
@@ -0,0 +1,27 @@
+/etc/rc\.d/init\.d/libra        gen_context(system_u:object_r:openshift_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/mcollective        gen_context(system_u:object_r:openshift_initrc_exec_t,s0)
+
+/etc/cron.minutely/openshift-facts -- gen_context(system_u:object_r:openshift_cron_exec_t,s0)
+
+/var/lib/stickshift(/.*)?            gen_context(system_u:object_r:openshift_var_lib_t,s0)
+/var/lib/stickshift/.*/data(/.*)?	       gen_context(system_u:object_r:openshift_rw_file_t,s0)
+
+/var/lib/openshift(/.*)?            gen_context(system_u:object_r:openshift_var_lib_t,s0)
+/var/lib/openshift/.*/data(/.*)?	       gen_context(system_u:object_r:openshift_rw_file_t,s0)
+
+/var/lib/stickshift/.*/\.tmp(/.*)?        gen_context(system_u:object_r:openshift_tmp_t,s0)
+/var/lib/stickshift/.*/\.sandbox(/.*)?        gen_context(system_u:object_r:openshift_tmp_t,s0)
+/var/lib/openshift/.*/\.tmp(/.*)?        gen_context(system_u:object_r:openshift_tmp_t,s0)
+/var/lib/openshift/.*/\.sandbox(/.*)?        gen_context(system_u:object_r:openshift_tmp_t,s0)
+
+/var/log/mcollective\.log.*	       --    gen_context(system_u:object_r:openshift_log_t,s0)
+
+/usr/s?bin/(oo|rhc)-cgroup-read        --    gen_context(system_u:object_r:openshift_cgroup_read_exec_t,s0)
+
+/usr/s?bin/(oo|rhc)-restorer           --    gen_context(system_u:object_r:openshift_initrc_exec_t,s0)
+/usr/s?bin/(oo|rhc)-restorer-wrapper.sh    --  gen_context(unconfined_u:object_r:httpd_openshift_script_exec_t,s0)
+/usr/s?bin/(oo|rhc)-admin-ctl-gears    --      gen_context(system_u:object_r:openshift_initrc_exec_t,s0)
+/usr/s?bin/mcollectived				--		gen_context(system_u:object_r:openshift_initrc_exec_t,s0)
+
+/var/run/stickshift(/.*)?		    	gen_context(system_u:object_r:openshift_var_run_t,s0)
+/var/run/openshift(/.*)?		    	gen_context(system_u:object_r:openshift_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/openshift.if serefpolicy-3.7.19/policy/modules/services/openshift.if
--- nsaserefpolicy/policy/modules/services/openshift.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openshift.if	2013-06-11 15:22:50.010282850 +0200
@@ -0,0 +1,650 @@
+
+## <summary> policy for openshift </summary>
+
+########################################
+## <summary>
+##	Execute openshift server in the openshift domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`openshift_initrc_domtrans',`
+	gen_require(`
+		type openshift_initrc_t;
+		type openshift_initrc_exec_t;
+	')
+
+	domtrans_pattern($1, openshift_initrc_exec_t, openshift_initrc_t)
+')
+
+########################################
+## <summary>
+##	Execute openshift server in the openshift domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`openshift_initrc_run',`
+   gen_require(`
+       type openshift_initrc_t;
+       type openshift_initrc_exec_t;
+   ')
+
+   openshift_initrc_domtrans($1)
+   role $2 types openshift_initrc_t;
+')
+
+#######################################
+## <summary>
+## Send a null signal to openshift init scripts.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`openshift_initrc_signull',`
+		gen_require(`
+			type openshift_initrc_t;
+		')
+
+		allow $1 openshift_initrc_t:process signull;
+')
+
+#######################################
+## <summary>
+##  Send a signal to openshift init scripts.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`openshift_initrc_signal',`
+    gen_require(`
+        type openshift_initrc_t;
+    ')
+
+    allow $1 openshift_initrc_t:process signal;
+')
+
+########################################
+## <summary>
+##	Search openshift cache directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_search_cache',`
+	gen_require(`
+		type openshift_cache_t;
+	')
+
+	allow $1 openshift_cache_t:dir search_dir_perms;
+	files_search_var($1)
+')
+
+########################################
+## <summary>
+##	Read openshift cache files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_read_cache_files',`
+	gen_require(`
+		type openshift_cache_t;
+	')
+
+	files_search_var($1)
+	read_files_pattern($1, openshift_cache_t, openshift_cache_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	openshift cache files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_manage_cache_files',`
+	gen_require(`
+		type openshift_cache_t;
+	')
+
+	files_search_var($1)
+	manage_files_pattern($1, openshift_cache_t, openshift_cache_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	openshift cache dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_manage_cache_dirs',`
+	gen_require(`
+		type openshift_cache_t;
+	')
+
+	files_search_var($1)
+	manage_dirs_pattern($1, openshift_cache_t, openshift_cache_t)
+')
+
+
+########################################
+## <summary>
+##	Allow the specified domain to read openshift's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`openshift_read_log',`
+	gen_require(`
+		type openshift_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, openshift_log_t, openshift_log_t)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to append
+##	openshift log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`openshift_append_log',`
+	gen_require(`
+		type openshift_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, openshift_log_t, openshift_log_t)
+')
+
+########################################
+## <summary>
+##	Allow domain to manage openshift log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`openshift_manage_log',`
+	gen_require(`
+		type openshift_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, openshift_log_t, openshift_log_t)
+	manage_files_pattern($1, openshift_log_t, openshift_log_t)
+	manage_lnk_files_pattern($1, openshift_log_t, openshift_log_t)
+')
+
+########################################
+## <summary>
+##	Search openshift lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_search_lib',`
+	gen_require(`
+		type openshift_var_lib_t;
+	')
+
+    
+    search_dirs_pattern($1, openshift_var_lib_t, openshift_var_lib_t)
+    getattr_files_pattern($1, openshift_var_lib_t, openshift_var_lib_t)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read openshift lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_read_lib_files',`
+	gen_require(`
+		type openshift_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, openshift_var_lib_t, openshift_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Read openshift lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_append_lib_files',`
+	gen_require(`
+		type openshift_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	append_files_pattern($1, openshift_var_lib_t, openshift_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	openshift lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_manage_lib_files',`
+	gen_require(`
+		type openshift_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, openshift_var_lib_t, openshift_var_lib_t)
+    manage_lnk_files_pattern($1, openshift_var_lib_t, openshift_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage openshift lib dirs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_manage_lib_dirs',`
+	gen_require(`
+		type openshift_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, openshift_var_lib_t, openshift_var_lib_t)
+')
+
+#######################################
+## <summary>
+##     Create private objects in the
+##     mail lib directory.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+## <param name="private type">
+##     <summary>
+##     The type of the object to be created.
+##     </summary>
+## </param>
+## <param name="object">
+##     <summary>
+##     The object class of the object being created.
+##     </summary>
+## </param>
+## <param name="name" optional="true">
+##     <summary>
+##     The name of the object being created.
+##     </summary>
+## </param>
+#
+interface(`openshift_lib_filetrans',`
+       gen_require(`
+               type openshift_var_lib_t;
+       ')
+
+       files_search_var_lib($1)
+       filetrans_pattern($1, openshift_var_lib_t, $2, $3, $4)
+')
+
+########################################
+## <summary>
+##	Read openshift PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_read_pid_files',`
+	gen_require(`
+		type openshift_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 openshift_var_run_t:file read_file_perms;
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an openshift environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`openshift_admin',`
+	gen_require(`
+		type openshift_t;
+		type openshift_initrc_exec_t;
+		type openshift_cache_t;
+		type openshift_log_t;
+		type openshift_var_lib_t;
+		type openshift_var_run_t;
+	')
+
+	allow $1 openshift_t:process { ptrace signal_perms };
+	ps_process_pattern($1, openshift_t)
+
+	openshift_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 openshift_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var($1)
+	admin_pattern($1, openshift_cache_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, openshift_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, openshift_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, openshift_var_run_t)
+
+')
+
+########################################
+## <summary>
+##	Make the specified type usable as a openshift domain.
+## </summary>
+## <param name="openshiftdomain_prefix">
+##  <summary>
+##  The prefix of the domain (e.g., openshift
+##  is the prefix for openshift_t).
+##  </summary>
+## </param>
+#
+template(`openshift_service_domain_template',`
+	gen_require(`
+		attribute openshift_domain;
+		attribute openshift_user_domain;
+	')
+
+	type $1_t;
+	typeattribute $1_t openshift_domain, openshift_user_domain;
+	domain_type($1_t)
+	role system_r types $1_t;
+	mcs_untrusted_proc($1_t)
+	domain_user_exemption_target($1_t)
+	auth_use_nsswitch($1_t)
+	domain_subj_id_change_exemption($1_t)
+	domain_obj_id_change_exemption($1_t)
+	domain_dyntrans_type($1_t)
+
+	kernel_read_system_state($1_t)
+
+	logging_send_syslog_msg($1_t)
+
+	type $1_app_t;
+	typeattribute $1_app_t openshift_domain;
+	domain_type($1_app_t)
+	role system_r types $1_app_t;
+	mcs_untrusted_proc($1_app_t)
+	domain_user_exemption_target($1_app_t)
+	domain_obj_id_change_exemption($1_app_t)
+	domain_dyntrans_type($1_app_t)
+    #auth_use_nsswitch($1_app_t)
+
+	kernel_read_system_state($1_app_t)
+
+	logging_send_syslog_msg($1_app_t)
+')
+
+########################################
+## <summary>
+##	Make the specified type usable as a openshift domain.
+## </summary>
+## <param name="type">
+##	<summary>
+##	Type to be used as a openshift domain type.
+##	</summary>
+## </param>
+#
+template(`openshift_net_type',`
+	gen_require(`
+		attribute openshift_net_domain;
+	')
+
+	typeattribute $1 openshift_net_domain;
+')
+
+########################################
+## <summary>
+##	Read and write inherited openshift files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_rw_inherited_content',`
+	gen_require(`
+		attribute openshift_file_type;
+	')
+
+	allow $1 openshift_file_type:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Manage openshift tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_manage_tmp_files',`
+	gen_require(`
+		type openshift_tmp_t;
+	')
+
+	manage_files_pattern($1, openshift_tmp_t, openshift_tmp_t)
+')
+
+########################################
+## <summary>
+##	Manage openshift tmp sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_manage_tmp_sockets',`
+	gen_require(`
+		type openshift_tmp_t;
+	')
+
+	manage_sock_files_pattern($1, openshift_tmp_t, openshift_tmp_t)
+')
+
+########################################
+## <summary>
+##	Mounton openshift tmp directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_mounton_tmp',`
+	gen_require(`
+		type openshift_tmp_t;
+	')
+
+	allow $1 openshift_tmp_t:dir mounton;
+')
+
+########################################
+## <summary>
+##	Dontaudit Read and write inherited script fifo files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_dontaudit_rw_inherited_fifo_files',`
+	gen_require(`
+		type openshift_initrc_t;
+	')
+
+	dontaudit $1 openshift_initrc_t:fifo_file rw_inherited_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	Allow calling app to transition to an openshift domain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`openshift_transition',`
+	gen_require(`
+		attribute openshift_user_domain;
+	')
+
+	allow $1 openshift_user_domain:process transition;
+	dontaudit $1 openshift_user_domain:process { noatsecure siginh rlimitinh };
+	allow openshift_user_domain $1:fd use;
+	allow openshift_user_domain $1:fifo_file rw_inherited_fifo_file_perms;
+	allow openshift_user_domain $1:process sigchld;
+	dontaudit $1 openshift_user_domain:socket_class_set { read write };
+')
+
+########################################
+## <summary>
+##	Allow calling app to transition to an openshift domain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`openshift_dyntransition',`
+	gen_require(`
+		attribute openshift_domain;
+		attribute openshift_user_domain;
+	')
+
+	allow $1 openshift_user_domain:process dyntransition;
+	dontaudit openshift_user_domain $1:key view;
+	allow openshift_user_domain $1:unix_stream_socket { connectto rw_socket_perms };
+	allow openshift_user_domain $1:unix_dgram_socket rw_socket_perms;
+	allow $1 openshift_user_domain:process { rlimitinh signal };
+	dontaudit openshift_domain $1:tcp_socket { read write getattr setopt getopt shutdown };
+')
+
+########################################
+## <summary>
+##	Execute openshift in the openshift domain, and
+##	allow the specified role the openshift domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`openshift_run',`
+	gen_require(`
+		type openshift_initrc_exec_t;
+	')
+
+	openshift_initrc_domtrans($1)
+	role_transition $2 openshift_initrc_exec_t system_r;
+	openshift_transition($1)
+')
diff -Nur nsaserefpolicy/policy/modules/services/openshift-origin.fc serefpolicy-3.7.19/policy/modules/services/openshift-origin.fc
--- nsaserefpolicy/policy/modules/services/openshift-origin.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openshift-origin.fc	2013-03-15 11:40:14.109152183 +0100
@@ -0,0 +1 @@
+# Left Blank
diff -Nur nsaserefpolicy/policy/modules/services/openshift-origin.if serefpolicy-3.7.19/policy/modules/services/openshift-origin.if
--- nsaserefpolicy/policy/modules/services/openshift-origin.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openshift-origin.if	2013-03-15 11:40:15.883152224 +0100
@@ -0,0 +1 @@
+## <summary></summary>
diff -Nur nsaserefpolicy/policy/modules/services/openshift-origin.te serefpolicy-3.7.19/policy/modules/services/openshift-origin.te
--- nsaserefpolicy/policy/modules/services/openshift-origin.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openshift-origin.te	2013-03-15 11:40:16.723152243 +0100
@@ -0,0 +1,14 @@
+policy_module(openshift-origin,1.0.0)
+gen_require(`
+	attribute openshift_domain;
+')
+
+########################################
+#
+# openshift origin standard local policy
+#
+allow openshift_domain self:socket_class_set create_socket_perms;
+corenet_tcp_connect_all_ports(openshift_domain)
+corenet_tcp_bind_all_ports(openshift_domain)
+dev_read_sysfs(openshift_domain)
+files_read_config_files(openshift_domain)
diff -Nur nsaserefpolicy/policy/modules/services/openshift.te serefpolicy-3.7.19/policy/modules/services/openshift.te
--- nsaserefpolicy/policy/modules/services/openshift.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openshift.te	2013-06-05 12:57:47.974758324 +0200
@@ -0,0 +1,537 @@
+policy_module(openshift,1.0.0)
+
+gen_require(`
+	role system_r;
+')
+ 
+########################################
+#
+# Declarations
+#
+
+# openshift applications that can use the network.
+attribute openshift_net_domain;
+# Attribute representing all openshift user processes (excludes apache processes)
+attribute openshift_user_domain;
+# Attribute representing all openshift processes
+attribute openshift_domain;
+
+# Attribute for all openshift content
+attribute openshift_file_type;
+
+# Type of openshift init script
+type openshift_initrc_t;
+type openshift_initrc_exec_t;
+init_daemon_domain(openshift_initrc_t, openshift_initrc_exec_t)
+init_ranged_daemon_domain(openshift_initrc_t, openshift_initrc_exec_t, s0 - mcs_systemhigh)
+domain_obj_id_change_exemption(openshift_initrc_t)
+optional_policy(`
+	oddjob_ranged_domain(openshift_initrc_t, openshift_initrc_exec_t, s0 - mcs_systemhigh)
+')
+
+type openshift_initrc_tmp_t;
+files_tmp_file(openshift_initrc_tmp_t)
+
+type openshift_tmpfs_t;
+files_tmpfs_file(openshift_tmpfs_t)
+
+type openshift_tmp_t, openshift_file_type;
+files_tmp_file(openshift_tmp_t)
+files_mountpoint(openshift_tmp_t)
+files_poly(openshift_tmp_t)
+files_poly_parent(openshift_tmp_t)
+
+type openshift_var_run_t;
+files_pid_file(openshift_var_run_t)
+
+type openshift_var_lib_t, openshift_file_type;
+files_poly(openshift_var_lib_t)
+files_poly_parent(openshift_var_lib_t)
+files_mountpoint(openshift_var_lib_t)
+
+type openshift_rw_file_t, openshift_file_type;
+files_poly(openshift_rw_file_t)
+files_poly_parent(openshift_rw_file_t)
+
+type openshift_log_t;
+logging_log_file(openshift_log_t)
+
+type openshift_port_t;
+corenet_port(openshift_port_t)
+corenet_reserved_port(openshift_port_t)
+
+type openshift_cgroup_read_t;
+type openshift_cgroup_read_exec_t;
+application_domain(openshift_cgroup_read_t, openshift_cgroup_read_exec_t)
+
+type openshift_cgroup_read_tmp_t, openshift_file_type;
+files_tmp_file(openshift_cgroup_read_tmp_t)
+
+type openshift_cron_t;
+type openshift_cron_exec_t;
+domain_type(openshift_cron_t)
+domain_entry_file(openshift_cron_t, openshift_cron_exec_t)
+role system_r types openshift_cron_t;
+
+optional_policy(`
+   cron_system_entry(openshift_cron_t, openshift_cron_exec_t)
+')
+
+type openshift_cron_tmp_t, openshift_file_type;
+files_tmp_file(openshift_cron_tmp_t)
+
+########################################
+#
+# Template to create openshift_t and openshift_app_t
+#
+openshift_service_domain_template(openshift)
+
+########################################
+#
+# openshift initrc local policy
+#
+
+unconfined_domain_noaudit(openshift_initrc_t)
+mcs_process_set_categories(openshift_initrc_t)
+#virt_lxc_domain(openshift_initrc_t)
+
+manage_dirs_pattern(openshift_initrc_t, openshift_initrc_tmp_t, openshift_initrc_tmp_t)
+manage_files_pattern(openshift_initrc_t, openshift_initrc_tmp_t, openshift_initrc_tmp_t)
+manage_lnk_files_pattern(openshift_initrc_t, openshift_initrc_tmp_t, openshift_initrc_tmp_t)
+files_tmp_filetrans(openshift_initrc_t, openshift_initrc_tmp_t, { file dir })
+
+manage_dirs_pattern(openshift_initrc_t, openshift_var_run_t, openshift_var_run_t)
+manage_files_pattern(openshift_initrc_t, openshift_var_run_t, openshift_var_run_t)
+manage_lnk_files_pattern(openshift_initrc_t, openshift_var_run_t, openshift_var_run_t)
+files_pid_filetrans(openshift_initrc_t, openshift_var_run_t, { file dir })
+
+manage_dirs_pattern(openshift_initrc_t, openshift_log_t, openshift_log_t)
+manage_files_pattern(openshift_initrc_t, openshift_log_t, openshift_log_t)
+logging_log_filetrans(openshift_initrc_t, openshift_log_t, { file dir })
+
+allow openshift_initrc_t openshift_domain:process { getattr getsched setsched transition signal signull sigkill };
+allow openshift_domain openshift_initrc_t:fd use;
+allow openshift_domain openshift_initrc_t:fifo_file rw_inherited_fifo_file_perms;
+allow openshift_domain openshift_initrc_t:process sigchld;
+dontaudit openshift_domain openshift_initrc_t:key view;
+dontaudit openshift_domain openshift_initrc_t:process signull;
+dontaudit openshift_domain openshift_initrc_t:socket_class_set { read write };
+
+init_domtrans_script(openshift_initrc_t)
+init_initrc_domain(openshift_initrc_t)
+
+#######################################################
+#
+# Policy for all openshift domains
+#
+allow openshift_domain self:process all_process_perms;
+allow openshift_domain self:msg all_msg_perms;
+allow openshift_domain self:msgq create_msgq_perms;
+allow openshift_domain self:shm create_shm_perms;
+allow openshift_domain self:sem create_sem_perms;
+dontaudit openshift_domain self:dir write;
+
+dontaudit openshift_t self:unix_stream_socket recvfrom;
+dontaudit openshift_domain self:netlink_tcpdiag_socket create;
+dontaudit openshift_domain self:netlink_route_socket nlmsg_write;
+allow openshift_domain self:tcp_socket  create_stream_socket_perms;
+allow openshift_domain self:fifo_file manage_fifo_file_perms;
+allow openshift_domain self:unix_stream_socket { create_stream_socket_perms connectto };
+allow openshift_domain self:unix_dgram_socket { create_socket_perms sendto };
+dontaudit openshift_domain self:netlink_audit_socket { create_socket_perms nlmsg_relay };
+
+manage_dirs_pattern(openshift_domain, openshift_rw_file_t, openshift_rw_file_t)
+manage_files_pattern(openshift_domain, openshift_rw_file_t, openshift_rw_file_t)
+manage_fifo_files_pattern(openshift_domain, openshift_rw_file_t, openshift_rw_file_t)
+manage_sock_files_pattern(openshift_domain, openshift_rw_file_t, openshift_rw_file_t)
+manage_lnk_files_pattern(openshift_domain, openshift_rw_file_t, openshift_rw_file_t)
+allow openshift_domain openshift_rw_file_t:dir_file_class_set { relabelfrom relabelto };
+
+list_dirs_pattern(openshift_domain, openshift_file_type, openshift_file_type)
+read_files_pattern(openshift_domain, openshift_file_type, openshift_file_type)
+rw_fifo_files_pattern(openshift_domain, openshift_file_type, openshift_file_type)
+rw_sock_files_pattern(openshift_domain, openshift_file_type, openshift_file_type)
+read_lnk_files_pattern(openshift_domain, openshift_file_type, openshift_file_type)
+allow openshift_domain openshift_file_type:file execmod;
+can_exec(openshift_domain, openshift_file_type)
+allow openshift_domain openshift_file_type:file entrypoint;
+# Allow users to execute files in their home dir
+allow openshift_domain openshift_file_type:file { execute execute_no_trans };
+
+# Dontaudit openshift domains trying to search other openshift domains directories, 
+# this happens just when users are probing the system
+dontaudit openshift_domain openshift_file_type:dir search_dir_perms
+;
+
+manage_dirs_pattern(openshift_domain, openshift_tmpfs_t, openshift_tmpfs_t)
+manage_files_pattern(openshift_domain, openshift_tmpfs_t, openshift_tmpfs_t)
+manage_lnk_files_pattern(openshift_domain, openshift_tmpfs_t, openshift_tmpfs_t)
+manage_sock_files_pattern(openshift_domain, openshift_tmpfs_t, openshift_tmpfs_t)
+manage_fifo_files_pattern(openshift_domain, openshift_tmpfs_t, openshift_tmpfs_t)
+fs_tmpfs_filetrans(openshift_domain, openshift_tmpfs_t, { dir file sock_file lnk_file fifo_file })
+can_exec(openshift_domain, openshift_tmpfs_t)
+
+manage_dirs_pattern(openshift_domain, openshift_tmp_t, openshift_tmp_t)
+manage_fifo_files_pattern(openshift_domain, openshift_tmp_t, openshift_tmp_t)
+manage_files_pattern(openshift_domain, openshift_tmp_t, openshift_tmp_t)
+manage_lnk_files_pattern(openshift_domain, openshift_tmp_t, openshift_tmp_t)
+manage_sock_files_pattern(openshift_domain, openshift_tmp_t, openshift_tmp_t)
+files_tmp_filetrans(openshift_domain, openshift_tmp_t, { lnk_file file dir sock_file fifo_file })
+allow openshift_domain openshift_tmp_t:dir_file_class_set { relabelfrom relabelto };
+
+allow openshift_domain openshift_log_t:file { getattr append lock ioctl };
+
+#lsof
+allow openshift_domain openshift_initrc_t:tcp_socket getattr;
+
+dontaudit openshift_domain openshift_initrc_tmp_t:file append;
+dontaudit openshift_domain openshift_var_run_t:file append;
+dontaudit openshift_domain openshift_file_type:sock_file execute;
+
+kernel_read_network_state(openshift_domain)
+kernel_dontaudit_list_all_proc(openshift_domain)
+kernel_dontaudit_list_all_sysctls(openshift_domain)
+kernel_dontaudit_request_load_module(openshift_domain)
+kernel_get_sysvipc_info(openshift_domain)
+
+corecmd_shell_entry_type(openshift_domain)
+corecmd_bin_entry_type(openshift_domain)
+corecmd_exec_all_executables(openshift_domain)
+
+dev_read_sysfs(openshift_domain)
+dev_read_urand(openshift_domain)
+dev_read_rand(openshift_domain)
+dev_dontaudit_append_rand(openshift_domain)
+dev_dontaudit_write_urand(openshift_domain)
+dev_dontaudit_getattr_all_blk_files(openshift_domain)
+dev_dontaudit_getattr_all_chr_files(openshift_domain)
+
+domain_use_interactive_fds(openshift_domain)
+domain_dontaudit_read_all_domains_state(openshift_domain)
+
+files_read_var_lib_symlinks(openshift_domain)
+
+fs_rw_hugetlbfs_files(openshift_domain)
+fs_rw_anon_inodefs_files(openshift_domain)
+fs_search_tmpfs(openshift_domain)
+fs_getattr_all_fs(openshift_domain)
+fs_dontaudit_getattr_all_fs(openshift_domain)
+fs_list_inotifyfs(openshift_domain)
+fs_dontaudit_list_auto_mountpoints(openshift_domain)
+fs_dontaudit_list_tmpfs(openshift_domain)
+storage_dontaudit_getattr_fixed_disk_dev(openshift_domain)
+storage_getattr_fixed_disk_dev(openshift_domain)
+fs_get_xattr_fs_quotas(openshift_domain)
+fs_rw_inherited_tmpfs_files(openshift_domain)
+fs_dontaudit_rw_anon_inodefs_files(openshift_domain)
+
+dontaudit openshift_domain file_type:dir read;
+files_dontaudit_list_home(openshift_domain)
+files_dontaudit_search_all_pids(openshift_domain)
+files_dontaudit_getattr_all_dirs(openshift_domain)
+files_dontaudit_getattr_all_files(openshift_domain)
+files_dontaudit_list_mnt(openshift_domain)
+files_dontaudit_list_var(openshift_domain)
+files_dontaudit_getattr_lost_found_dirs(openshift_domain)
+files_dontaudit_search_all_mountpoints(openshift_domain)
+files_dontaudit_search_spool(openshift_domain)
+files_dontaudit_search_all_dirs(openshift_domain)
+files_dontaudit_list_var(openshift_domain)
+files_read_etc_files(openshift_domain)
+files_exec_etc_files(openshift_domain)
+files_read_usr_files(openshift_domain)
+files_exec_usr_files(openshift_domain)
+files_dontaudit_getattr_non_security_sockets(openshift_domain)
+files_dontaudit_setattr_non_security_dirs(openshift_domain)
+files_dontaudit_setattr_non_security_files(openshift_domain)
+files_dontaudit_rw_inherited_locks(openshift_domain)
+
+libs_exec_lib_files(openshift_domain)
+libs_exec_ld_so(openshift_domain)
+
+selinux_validate_context(openshift_domain)
+
+logging_inherit_append_all_logs(openshift_domain)
+
+init_dontaudit_read_utmp(openshift_domain)
+
+miscfiles_read_localization(openshift_domain)
+miscfiles_read_fonts(openshift_domain)
+miscfiles_dontaudit_setattr_fonts_cache_dirs(openshift_domain)
+
+mta_dontaudit_read_spool_symlinks(openshift_domain)
+
+term_dontaudit_search_ptys(openshift_domain)
+term_use_generic_ptys(openshift_domain)
+term_dontaudit_getattr_generic_ptys(openshift_domain)
+term_use_ptmx(openshift_domain)
+
+userdom_use_inherited_user_ptys(openshift_domain)
+userdom_dontaudit_search_admin_dir(openshift_domain)
+
+application_exec(openshift_domain)
+
+optional_policy(`
+	apache_exec_modules(openshift_domain)
+	apache_list_modules(openshift_domain)
+	apache_read_config(openshift_domain)
+	apache_search_config(openshift_domain)
+	apache_read_sys_content(openshift_domain)
+	apache_exec_sys_script(openshift_domain)
+	apache_entrypoint(openshift_domain)
+	apache_dontaudit_read_log(openshift_domain)
+
+	#############################################
+	# 
+	# openshift cgi script policy
+	#
+	apache_content_template(openshift)
+	domtrans_pattern(httpd_openshift_script_t, openshift_initrc_exec_t, openshift_initrc_t)
+	optional_policy(`
+		dbus_system_bus_client(httpd_openshift_script_t)
+		optional_policy(`
+			oddjob_dbus_chat(httpd_openshift_script_t)
+			oddjob_dontaudit_rw_fifo_file(openshift_domain)
+		')
+	')
+')
+
+optional_policy(`
+	cron_role(system_r, openshift_domain)
+')
+
+optional_policy(`
+	gpg_entry_type(openshift_domain)
+')
+
+optional_policy(`
+	mysql_search_db(openshift_domain)
+')
+
+optional_policy(`
+	screen_exec(openshift_domain)
+')
+
+optional_policy(`
+	ssh_use_ptys(openshift_domain)
+	ssh_getattr_user_home_dir(openshift_domain)
+	ssh_dontaudit_search_user_home_dir(openshift_domain)
+')
+
+optional_policy(`
+       udev_read_pid_files(openshift_domain)
+')
+
+#######################################################
+#
+# Policy for openshift user domain process
+#
+manage_dirs_pattern(openshift_user_domain, openshift_file_type, openshift_file_type)
+manage_files_pattern(openshift_user_domain, openshift_file_type, openshift_file_type)
+manage_fifo_files_pattern(openshift_user_domain, openshift_file_type, openshift_file_type)
+manage_sock_files_pattern(openshift_user_domain, openshift_file_type, openshift_file_type)
+manage_lnk_files_pattern(openshift_user_domain, openshift_file_type, openshift_file_type)
+allow openshift_user_domain openshift_file_type:dir_file_class_set { relabelfrom relabelto };
+
+allow openshift_user_domain openshift_domain:process transition;
+allow openshift_domain openshift_user_domain:fd use;
+allow openshift_domain openshift_user_domain:fifo_file rw_inherited_fifo_file_perms;
+allow openshift_domain openshift_user_domain:process sigchld;
+dontaudit openshift_domain openshift_user_domain:key view;
+dontaudit openshift_domain openshift_user_domain:process signull;
+dontaudit openshift_domain openshift_user_domain:socket_class_set { read write };
+
+allow openshift_user_domain openshift_domain:process ptrace;
+
+mta_signal_user_agent(openshift_user_domain)
+
+optional_policy(`
+       ssh_rw_tcp_sockets(openshift_user_domain)
+')
+
+############################################################################
+#
+# Rules specific to openshift_net_domains
+#
+allow openshift_net_domain openshift_port_t:tcp_socket { name_connect name_bind };
+allow openshift_net_domain openshift_port_t:udp_socket name_bind;
+
+corenet_tcp_connect_mssql_port(openshift_net_domain)
+corenet_tcp_connect_mysqld_port(openshift_net_domain)
+corenet_tcp_connect_postgresql_port(openshift_net_domain)
+corenet_tcp_connect_git_port(openshift_net_domain)
+corenet_tcp_connect_oracle_port(openshift_net_domain)
+corenet_tcp_connect_flash_port(openshift_net_domain)
+corenet_tcp_connect_http_port(openshift_net_domain)
+corenet_tcp_connect_ftp_port(openshift_net_domain)
+#/* These ports are the ephemeral ports needed for ftp */
+corenet_tcp_connect_virt_migration_port(openshift_net_domain)
+corenet_tcp_connect_ssh_port(openshift_net_domain)
+corenet_tcp_connect_jacorb_port(openshift_net_domain)
+corenet_tcp_connect_jboss_management_port(openshift_net_domain)
+corenet_tcp_connect_jboss_debug_port(openshift_net_domain)
+corenet_tcp_connect_jboss_messaging_port(openshift_net_domain)
+corenet_tcp_connect_memcache_port(openshift_net_domain)
+corenet_tcp_connect_http_cache_port(openshift_net_domain)
+corenet_tcp_connect_amqp_port(openshift_net_domain)
+corenet_tcp_connect_generic_port(openshift_net_domain)
+corenet_tcp_connect_mongod_port(openshift_net_domain)
+corenet_tcp_connect_munin_port(openshift_net_domain)
+corenet_tcp_connect_pop_port(openshift_net_domain)
+corenet_tcp_connect_pulseaudio_port(openshift_net_domain)
+corenet_tcp_connect_smtp_port(openshift_net_domain)
+corenet_tcp_connect_whois_port(openshift_net_domain)
+corenet_udp_bind_generic_port(openshift_net_domain)
+corenet_tcp_bind_http_cache_port(openshift_domain)
+corenet_tcp_bind_jacorb_port(openshift_net_domain)
+corenet_tcp_bind_jboss_management_port(openshift_net_domain)
+corenet_tcp_bind_jboss_messaging_port(openshift_net_domain)
+corenet_tcp_bind_jboss_debug_port(openshift_net_domain)
+corenet_tcp_bind_mongod_port(openshift_net_domain)
+corenet_tcp_bind_mysqld_port(openshift_domain)
+corenet_tcp_bind_pulseaudio_port(openshift_net_domain)
+corenet_tcp_bind_postgresql_port(openshift_net_domain)
+
+############################################################################
+#
+# Rules specific to openshift and openshift_app_t
+#
+
+kernel_read_vm_sysctls(openshift_t)
+kernel_read_vm_sysctls(openshift_app_t)
+kernel_search_vm_sysctl(openshift_t)
+kernel_search_vm_sysctl(openshift_app_t)
+
+netutils_domtrans_ping(openshift_t)
+netutils_kill_ping(openshift_t)
+netutils_signal_ping(openshift_t)
+
+openshift_net_type(openshift_app_t)
+openshift_net_type(openshift_t)
+
+optional_policy(`
+       postfix_rw_public_pipes(openshift_t)
+       postfix_manage_spool_maildrop_files(openshift_t)
+')
+
+########################################
+#
+# openshift_cgroup_read local policy
+#
+
+allow openshift_cgroup_read_t self:process { getattr signal_perms };
+allow openshift_cgroup_read_t self:fifo_file rw_fifo_file_perms;
+allow openshift_cgroup_read_t self:unix_stream_socket create_stream_socket_perms;
+allow openshift_cgroup_read_t openshift_initrc_t:fifo_file rw_inherited_fifo_file_perms;
+
+manage_dirs_pattern(openshift_cgroup_read_t, openshift_cgroup_read_tmp_t, openshift_cgroup_read_tmp_t)
+manage_files_pattern(openshift_cgroup_read_t, openshift_cgroup_read_tmp_t, openshift_cgroup_read_tmp_t)
+files_tmp_filetrans(openshift_cgroup_read_t, openshift_cgroup_read_tmp_t, { file dir })
+
+kernel_read_system_state(openshift_cgroup_read_t)
+
+miscfiles_read_localization(openshift_cgroup_read_t)
+
+optional_policy(`
+	ssh_use_ptys(openshift_cgroup_read_t)
+')
+
+corecmd_exec_bin(openshift_cgroup_read_t)
+corecmd_exec_shell(openshift_cgroup_read_t)
+
+dev_read_urand(openshift_cgroup_read_t)
+
+domain_use_interactive_fds(openshift_cgroup_read_t)
+
+files_read_etc_files(openshift_cgroup_read_t)
+
+fs_dontaudit_rw_anon_inodefs_files(openshift_cgroup_read_t)
+
+userdom_use_inherited_user_ptys(openshift_cgroup_read_t)
+
+#miscfiles_read_generic_certs(openshift_cgroup_read_t)
+
+domtrans_pattern(openshift_domain, openshift_cgroup_read_exec_t, openshift_cgroup_read_t)
+role system_r types openshift_cgroup_read_t;
+
+allow openshift_domain openshift_cgroup_read_t:process { getattr signal signull sigkill };
+
+fs_list_cgroup_dirs(openshift_cgroup_read_t)
+fs_read_cgroup_files(openshift_cgroup_read_t)
+
+allow openshift_cgroup_read_t openshift_var_lib_t:dir list_dir_perms;
+manage_files_pattern(openshift_cgroup_read_t, openshift_var_lib_t, openshift_var_lib_t)
+
+########################################
+#
+# openshift_cron local policy
+#
+allow openshift_cron_t self:capability { dac_override net_admin sys_admin };
+allow openshift_cron_t self:process signal_perms;
+allow openshift_cron_t self:tcp_socket create_stream_socket_perms;
+allow openshift_cron_t self:udp_socket create_socket_perms;
+allow openshift_cron_t self:unix_dgram_socket create_socket_perms;
+allow openshift_cron_t self:netlink_route_socket rw_netlink_socket_perms;
+
+manage_dirs_pattern(openshift_cron_t, openshift_cron_tmp_t, openshift_cron_tmp_t)
+manage_fifo_files_pattern(openshift_cron_t, openshift_cron_tmp_t, openshift_cron_tmp_t)
+manage_files_pattern(openshift_cron_t, openshift_cron_tmp_t, openshift_cron_tmp_t)
+manage_lnk_files_pattern(openshift_cron_t, openshift_cron_tmp_t, openshift_cron_tmp_t)
+manage_sock_files_pattern(openshift_cron_t, openshift_cron_tmp_t, openshift_cron_tmp_t)
+files_tmp_filetrans(openshift_cron_t, openshift_cron_tmp_t, { lnk_file file dir sock_file fifo_file })
+
+openshift_manage_lib_dirs(openshift_cron_t)
+openshift_manage_lib_files(openshift_cron_t)
+
+kernel_search_network_sysctl(openshift_cron_t)
+kernel_search_xen_state(openshift_cron_t)
+kernel_read_network_state(openshift_cron_t)
+kernel_read_system_state(openshift_cron_t)
+
+corecmd_exec_bin(openshift_cron_t)
+corecmd_exec_shell(openshift_cron_t)
+
+dev_read_raw_memory(openshift_cron_t)
+dev_read_urand(openshift_cron_t)
+
+corenet_udp_bind_generic_node(openshift_cron_t)
+corenet_udp_bind_generic_port(openshift_cron_t)
+
+dev_getattr_fs(openshift_cron_t)
+dev_list_sysfs(openshift_cron_t)
+dev_read_sysfs(openshift_cron_t)
+
+files_getattr_home_dir(openshift_cron_t)
+files_manage_etc_files(openshift_cron_t)
+
+fs_getattr_tmpfs_dirs(openshift_cron_t)
+fs_getattr_all_fs(openshift_cron_t)
+fs_list_hugetlbfs(openshift_cron_t)
+fs_search_cgroup_dirs(openshift_cron_t)
+
+seutil_domtrans_setfiles(openshift_cron_t)
+
+term_getattr_pty_fs(openshift_cron_t)
+term_search_ptys(openshift_cron_t)
+
+auth_use_nsswitch(openshift_cron_t)
+
+#miscfiles_read_generic_certs(openshift_cron_t)
+miscfiles_read_hwdata(openshift_cron_t)
+miscfiles_read_localization(openshift_cron_t)
+
+sysnet_exec_ifconfig(openshift_cron_t)
+sysnet_read_config(openshift_cron_t)
+
+optional_policy(`
+   dmidecode_exec(openshift_cron_t)
+')
+
+optional_policy(`
+   hostname_exec(openshift_cron_t)
+')
+
+optional_policy(`
+   ssh_exec_keygen(openshift_cron_t)
+   ssh_dontaudit_read_server_keys(openshift_cron_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/openvpn.te serefpolicy-3.7.19/policy/modules/services/openvpn.te
--- nsaserefpolicy/policy/modules/services/openvpn.te	2013-03-15 11:41:14.399153559 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openvpn.te	2013-05-24 13:21:45.959762186 +0200
@@ -65,8 +65,9 @@
 manage_files_pattern(openvpn_t, openvpn_tmp_t, openvpn_tmp_t)
 files_tmp_filetrans(openvpn_t, openvpn_tmp_t, file)
 
-allow openvpn_t openvpn_var_log_t:file manage_file_perms;
-logging_log_filetrans(openvpn_t, openvpn_var_log_t, file)
+manage_dirs_pattern(openvpn_t, openvpn_var_log_t, openvpn_var_log_t)
+manage_files_pattern(openvpn_t, openvpn_var_log_t, openvpn_var_log_t)
+logging_log_filetrans(openvpn_t, openvpn_var_log_t,{ dir  file })
 
 manage_files_pattern(openvpn_t, openvpn_var_run_t, openvpn_var_run_t)
 files_pid_filetrans(openvpn_t, openvpn_var_run_t, { file dir })
diff -Nur nsaserefpolicy/policy/modules/services/openvswitch.fc serefpolicy-3.7.19/policy/modules/services/openvswitch.fc
--- nsaserefpolicy/policy/modules/services/openvswitch.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openvswitch.fc	2013-06-24 15:56:05.128597605 +0200
@@ -0,0 +1,18 @@
+
+#/usr/sbin/ovsdb-server		--	gen_context(system_u:object_r:openvswitch_ovsdb_server_exec_t,s0)
+#/usr/sbin/ovs-vswitchd      --  gen_context(system_u:object_r:openvswitch_ovsv_switchd_exec_t,s0)
+
+/usr/share/openvswitch/scripts/ovs-ctl --   gen_context(system_u:object_r:openvswitch_exec_t,s0)
+/usr/bin/ovs-vsctl      --  gen_context(system_u:object_r:openvswitch_exec_t,s0)
+/usr/sbin/ovsdb-ctl     --  gen_context(system_u:object_r:openvswitch_exec_t,s0)
+/usr/bin/ovs-appctl     --  gen_context(system_u:object_r:openvswitch_exec_t,s0)
+/usr/sbin/ovsdb-server      --  gen_context(system_u:object_r:openvswitch_exec_t,s0)
+/usr/sbin/ovs-vswitchd      --  gen_context(system_u:object_r:openvswitch_exec_t,s0)
+
+/var/lib/openvswitch(/.*)?		gen_context(system_u:object_r:openvswitch_var_lib_t,s0)
+
+/var/log/openvswitch(/.*)?      gen_context(system_u:object_r:openvswitch_log_t,s0)
+
+/var/run/openvswitch(/.*)?      gen_context(system_u:object_r:openvswitch_var_run_t,s0)
+
+/etc/openvswitch(/.*)?      gen_context(system_u:object_r:openvswitch_rw_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/openvswitch.if serefpolicy-3.7.19/policy/modules/services/openvswitch.if
--- nsaserefpolicy/policy/modules/services/openvswitch.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openvswitch.if	2013-06-24 15:56:05.128597605 +0200
@@ -0,0 +1,159 @@
+
+## <summary> Open vSwitch provides standard network bridging functions and support for the OpenFlow protocol for remote per-flow control of traffic. </summary>
+
+
+########################################
+## <summary>
+##	Transition to openvswitch.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`openvswitch_domain_template',`
+	gen_require(`
+		attribute openvswitch_domain;
+	')
+
+	type openvswitch_$1_t;
+	type openvswitch_$1_exec_t;
+	init_daemon_domain(openvswitch_$1_t, openvswitch_$1_exec_t)
+
+	logging_send_syslog_msg(openvswitch_$1_t)
+')
+
+#######################################
+## <summary>
+##  Execute TEMPLATE in the openvswitch domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`openvswitch_domtrans',`
+    gen_require(`
+            type openvswitch_t, openvswitch_exec_t;
+                ')
+
+        corecmd_search_bin($1)
+        domtrans_pattern($1, openvswitch_exec_t, openvswitch_t)
+')
+
+#######################################
+## <summary>
+##  Allow stream connect to openvswitch.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`openvswitch_stream_connect',`
+    gen_require(`
+        type openvswitch_t, openvswitch_var_run_t;
+    ')
+
+    files_search_pids($1)
+    stream_connect_pattern($1, openvswitch_var_run_t, openvswitch_var_run_t, openvswitch_t)
+')
+
+#######################################
+## <summary>
+##  Read openvswitch PID files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`openvswitch_read_pid_files',`
+    gen_require(`
+            type openvswitch_var_run_t;
+                ')
+
+        files_search_pids($1)
+        read_files_pattern($1, openvswitch_var_run_t, openvswitch_var_run_t)
+')
+
+########################################
+## <summary>
+##	Search openvswitch lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openvswitch_search_lib',`
+	gen_require(`
+		type openvswitch_var_lib_t;
+	')
+
+	allow $1 openvswitch_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read openvswitch lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openvswitch_read_lib_files',`
+	gen_require(`
+		type openvswitch_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, openvswitch_var_lib_t, openswitch_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage openvswitch lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openvswitch_manage_lib_files',`
+	gen_require(`
+		type openvswitch_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, openvswitch_var_lib_t, openswitchg_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage openvswitch lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`openvswitch_manage_lib_dirs',`
+	gen_require(`
+		type openvswitch_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, openvswitch_var_lib_t, openswitch_var_lib_t)
+')
+
diff -Nur nsaserefpolicy/policy/modules/services/openvswitch.te serefpolicy-3.7.19/policy/modules/services/openvswitch.te
--- nsaserefpolicy/policy/modules/services/openvswitch.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/openvswitch.te	2013-06-24 15:56:05.128597605 +0200
@@ -0,0 +1,94 @@
+policy_module(openvswitch, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute openvswitch_domain;
+type openvswitch_t;
+type openvswitch_exec_t;
+typealias openvswitch_t alias { openvswitch_ovsdb_server_t openvswitch_ovsv_switchd_t};
+typealias openvswitch_exec_t alias { openvswitch_ovsdb_server_exec_t openvswitch_ovsv_switchd_exec_t };
+init_daemon_domain(openvswitch_t, openvswitch_exec_t)
+
+type openvswitch_rw_t;
+files_config_file(openvswitch_rw_t)
+
+type openvswitch_log_t;
+logging_log_file(openvswitch_log_t)
+
+type openvswitch_var_lib_t;
+files_type(openvswitch_var_lib_t)
+
+type openvswitch_var_run_t;
+files_pid_file(openvswitch_var_run_t)
+
+#######################################
+#
+# openvswitch local policy
+#
+
+allow openvswitch_t self:capability { net_admin ipc_lock sys_nice sys_resource };
+allow openvswitch_t self:process { fork setsched setrlimit signal };
+allow openvswitch_t self:fifo_file rw_fifo_file_perms;
+allow openvswitch_t self:unix_stream_socket { create_stream_socket_perms connectto };
+allow openvswitch_t self:netlink_socket create_socket_perms;
+allow openvswitch_t self:netlink_route_socket rw_netlink_socket_perms;
+
+can_exec(openvswitch_t, openvswitch_exec_t)
+
+manage_dirs_pattern(openvswitch_t, openvswitch_rw_t, openvswitch_rw_t)
+manage_files_pattern(openvswitch_t, openvswitch_rw_t, openvswitch_rw_t)
+manage_lnk_files_pattern(openvswitch_t, openvswitch_rw_t, openvswitch_rw_t)
+
+manage_dirs_pattern(openvswitch_t, openvswitch_var_lib_t, openvswitch_var_lib_t)
+manage_files_pattern(openvswitch_t, openvswitch_var_lib_t, openvswitch_var_lib_t)
+manage_lnk_files_pattern(openvswitch_t, openvswitch_var_lib_t, openvswitch_var_lib_t)
+files_var_lib_filetrans(openvswitch_t, openvswitch_var_lib_t, { dir file lnk_file })
+
+manage_dirs_pattern(openvswitch_t, openvswitch_log_t, openvswitch_log_t)
+manage_files_pattern(openvswitch_t, openvswitch_log_t, openvswitch_log_t)
+manage_lnk_files_pattern(openvswitch_t, openvswitch_log_t, openvswitch_log_t)
+logging_log_filetrans(openvswitch_t, openvswitch_log_t, { dir file lnk_file })
+
+manage_dirs_pattern(openvswitch_t, openvswitch_var_run_t, openvswitch_var_run_t)
+manage_files_pattern(openvswitch_t, openvswitch_var_run_t, openvswitch_var_run_t)
+manage_sock_files_pattern(openvswitch_t, openvswitch_var_run_t, openvswitch_var_run_t)
+manage_lnk_files_pattern(openvswitch_t, openvswitch_var_run_t, openvswitch_var_run_t)
+files_pid_filetrans(openvswitch_t, openvswitch_var_run_t, { dir file lnk_file })
+
+kernel_read_network_state(openvswitch_t)
+kernel_read_system_state(openvswitch_t)
+kernel_request_load_module(openvswitch_t)
+
+corecmd_exec_bin(openvswitch_t)
+corecmd_exec_shell(openvswitch_t)
+
+dev_read_rand(openvswitch_t)
+dev_read_urand(openvswitch_t)
+
+domain_use_interactive_fds(openvswitch_t)
+
+files_read_kernel_modules(openvswitch_t)
+
+fs_getattr_all_fs(openvswitch_t)
+fs_search_cgroup_dirs(openvswitch_t)
+
+auth_use_nsswitch(openvswitch_t)
+
+logging_send_syslog_msg(openvswitch_t)
+
+modutils_exec_insmod(openvswitch_t)
+modutils_list_module_config(openvswitch_t)
+modutils_read_module_config(openvswitch_t)
+
+sysnet_dns_name_resolve(openvswitch_t)
+
+optional_policy(`
+    iptables_domtrans(openvswitch_t)
+')
+
+optional_policy(`
+	unconfined_domain(openvswitch_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/pacemaker.fc serefpolicy-3.7.19/policy/modules/services/pacemaker.fc
--- nsaserefpolicy/policy/modules/services/pacemaker.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/pacemaker.fc	2013-03-15 11:40:13.106152161 +0100
@@ -0,0 +1,9 @@
+/etc/rc\.d/init\.d/pacemaker	--	gen_context(system_u:object_r:pacemaker_initrc_exec_t,s0)
+
+/usr/sbin/pacemakerd		--	gen_context(system_u:object_r:pacemaker_exec_t,s0)
+
+/var/lib/heartbeat/crm(/.*)?	gen_context(system_u:object_r:pacemaker_var_lib_t,s0)
+
+/var/lib/pengine(/.*)?		gen_context(system_u:object_r:pacemaker_var_lib_t,s0)
+
+/var/run/crm(/.*)?		gen_context(system_u:object_r:pacemaker_var_run_t,s0)
Binary files nsaserefpolicy/policy/modules/services/.pacemaker.fc.swp and serefpolicy-3.7.19/policy/modules/services/.pacemaker.fc.swp differ
diff -Nur nsaserefpolicy/policy/modules/services/pacemaker.if serefpolicy-3.7.19/policy/modules/services/pacemaker.if
--- nsaserefpolicy/policy/modules/services/pacemaker.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/pacemaker.if	2013-03-15 11:40:15.822152223 +0100
@@ -0,0 +1,174 @@
+
+## <summary>policy for pacemaker</summary>
+
+########################################
+## <summary>
+##	Transition to pacemaker.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`pacemaker_domtrans',`
+	gen_require(`
+		type pacemaker_t, pacemaker_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, pacemaker_exec_t, pacemaker_t)
+')
+
+########################################
+## <summary>
+##	Execute pacemaker server in the pacemaker domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pacemaker_initrc_domtrans',`
+	gen_require(`
+		type pacemaker_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, pacemaker_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Search pacemaker lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pacemaker_search_lib',`
+	gen_require(`
+		type pacemaker_var_lib_t;
+	')
+
+	allow $1 pacemaker_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read pacemaker lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pacemaker_read_lib_files',`
+	gen_require(`
+		type pacemaker_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, pacemaker_var_lib_t, pacemaker_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage pacemaker lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pacemaker_manage_lib_files',`
+	gen_require(`
+		type pacemaker_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, pacemaker_var_lib_t, pacemaker_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage pacemaker lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pacemaker_manage_lib_dirs',`
+	gen_require(`
+		type pacemaker_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, pacemaker_var_lib_t, pacemaker_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Read pacemaker PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pacemaker_read_pid_files',`
+	gen_require(`
+		type pacemaker_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 pacemaker_var_run_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an pacemaker environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`pacemaker_admin',`
+	gen_require(`
+		type pacemaker_t;
+		type pacemaker_initrc_exec_t;
+		type pacemaker_var_lib_t;
+		type pacemaker_var_run_t;
+	')
+
+	allow $1 pacemaker_t:process { ptrace signal_perms };
+	ps_process_pattern($1, pacemaker_t)
+
+	pacemaker_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 pacemaker_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, pacemaker_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, pacemaker_var_run_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/pacemaker.te serefpolicy-3.7.19/policy/modules/services/pacemaker.te
--- nsaserefpolicy/policy/modules/services/pacemaker.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/pacemaker.te	2013-04-02 16:32:09.284712180 +0200
@@ -0,0 +1,54 @@
+policy_module(pacemaker, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type pacemaker_t;
+type pacemaker_exec_t;
+init_daemon_domain(pacemaker_t, pacemaker_exec_t)
+
+type pacemaker_initrc_exec_t;
+init_script_file(pacemaker_initrc_exec_t)
+
+type pacemaker_var_lib_t;
+files_type(pacemaker_var_lib_t)
+
+type pacemaker_var_run_t;
+files_pid_file(pacemaker_var_run_t)
+
+########################################
+#
+# pacemaker local policy
+#
+
+allow pacemaker_t self:capability { chown dac_override setuid };
+allow pacemaker_t self:process { fork setrlimit signal };
+allow pacemaker_t self:fifo_file rw_fifo_file_perms;
+allow pacemaker_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(pacemaker_t, pacemaker_var_lib_t, pacemaker_var_lib_t)
+manage_files_pattern(pacemaker_t, pacemaker_var_lib_t, pacemaker_var_lib_t)
+files_var_lib_filetrans(pacemaker_t, pacemaker_var_lib_t, { dir file })
+
+manage_dirs_pattern(pacemaker_t, pacemaker_var_run_t, pacemaker_var_run_t)
+manage_files_pattern(pacemaker_t, pacemaker_var_run_t, pacemaker_var_run_t)
+files_pid_filetrans(pacemaker_t, pacemaker_var_run_t, { dir file })
+
+domain_use_interactive_fds(pacemaker_t)
+
+
+auth_use_nsswitch(pacemaker_t)
+
+logging_send_syslog_msg(pacemaker_t)
+
+miscfiles_read_localization(pacemaker_t)
+
+optional_policy(`
+	corosync_stream_connect(pacemaker_t)
+')
+
+optional_policy(`
+	unconfined_domain(pacemaker_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/passenger.fc serefpolicy-3.7.19/policy/modules/services/passenger.fc
--- nsaserefpolicy/policy/modules/services/passenger.fc	2013-03-15 11:41:13.882153547 +0100
+++ serefpolicy-3.7.19/policy/modules/services/passenger.fc	2013-03-15 11:40:13.867152178 +0100
@@ -1,16 +1,17 @@
+/usr/share/gems/.*/Passenger.*	-- 	gen_context(system_u:object_r:passenger_exec_t,s0)
+/usr/share/gems/.*/ApplicationPoolServerExecutable	--  gen_context(system_u:object_r:passenger_exec_t,s0)
 
-/usr/lib/ruby/gems/.*/passenger-.*/ext/apache2/ApplicationPoolServerExecutable -- gen_context(system_u:object_r:passenger_exec_t,s0)
+/usr/lib/gems/.*/Passenger.*	-- 	gen_context(system_u:object_r:passenger_exec_t,s0)
+/usr/lib64/gems/.*/Passenger.*    --  gen_context(system_u:object_r:passenger_exec_t,s0)
 
-/usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerWatchdog -- gen_context(system_u:object_r:passenger_exec_t,s0)
+/usr/lib/gems/.*/ApplicationPoolServerExecutable  --  gen_context(system_u:object_r:passenger_exec_t,s0)	
+/usr/lib64/gems/.*/ApplicationPoolServerExecutable  --  gen_context(system_u:object_r:passenger_exec_t,s0)
 
-/usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerLoggingAgent -- gen_context(system_u:object_r:passenger_exec_t,s0)
+/usr/share/.*/gems/.*/helper-scripts/prespawn   --  gen_context(system_u:object_r:passenger_exec_t,s0)
 
-/usr/lib/ruby/gems/.*/passenger-.*/agents/apache2/PassengerHelperAgent -- gen_context(system_u:object_r:passenger_exec_t,s0)
+/var/lib/passenger(/.*)?		gen_context(system_u:object_r:passenger_var_lib_t,s0)
+/var/lib(64)?/passenger(/.*)?        gen_context(system_u:object_r:passenger_var_lib_t,s0)
 
+/var/log/passenger.*			gen_context(system_u:object_r:passenger_log_t,s0)
 
-/var/log/passenger(/.*)?           gen_context(system_u:object_r:passenger_log_t,s0)
-/var/log/passenger.*        --      gen_context(system_u:object_r:passenger_log_t,s0)
-
-/var/lib/passenger(/.*)?           gen_context(system_u:object_r:passenger_var_lib_t,s0)
-
-/var/run/passenger(/.*)?           gen_context(system_u:object_r:passenger_var_run_t,s0)
+/var/run/passenger(/.*)?		gen_context(system_u:object_r:passenger_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/passenger.if serefpolicy-3.7.19/policy/modules/services/passenger.if
--- nsaserefpolicy/policy/modules/services/passenger.if	2013-03-15 11:41:13.557153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/passenger.if	2013-03-15 11:40:12.426152145 +0100
@@ -1,4 +1,4 @@
-## <summary>Passenger policy</summary>
+## <summary>Ruby on rails deployment for Apache and Nginx servers.</summary>
 
 ######################################
 ## <summary>
@@ -15,35 +15,25 @@
 		type passenger_t, passenger_exec_t;
 	')
 
-	allow $1 self:capability { fowner fsetid };
-
-	allow $1 passenger_t:process signal;
-
 	domtrans_pattern($1, passenger_exec_t, passenger_t)
-	allow $1 passenger_t:unix_stream_socket { read write connectto shutdown };
-	allow passenger_t $1:unix_stream_socket { read write };
 ')
 
 ######################################
 ## <summary>
-##	Manage passenger var_run content.
+##	Execute passenger in the current domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
-interface(`passenger_manage_pid_content',`
+interface(`passenger_exec',`
 	gen_require(`
-		type passenger_var_run_t;
+		type passenger_exec_t;
 	')
 
-	files_search_pids($1)
-	manage_dirs_pattern($1, passenger_var_run_t, passenger_var_run_t)
-	manage_files_pattern($1, passenger_var_run_t, passenger_var_run_t)
-	manage_fifo_files_pattern($1, passenger_var_run_t, passenger_var_run_t)
-	manage_sock_files_pattern($1, passenger_var_run_t, passenger_var_run_t)
+	can_exec($1, passenger_exec_t)
 ')
 
 ########################################
@@ -61,7 +51,88 @@
 		type passenger_var_lib_t;
 	')
 
-	files_search_var_lib($1)
 	read_files_pattern($1, passenger_var_lib_t, passenger_var_lib_t)
 	read_lnk_files_pattern($1, passenger_var_lib_t, passenger_var_lib_t)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Manage passenger lib files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`passenger_manage_lib_files',`
+	gen_require(`
+		type passenger_var_lib_t;
+	')
+
+	manage_dirs_pattern($1, passenger_var_lib_t, passenger_var_lib_t)
+	manage_files_pattern($1, passenger_var_lib_t, passenger_var_lib_t)
+	manage_lnk_files_pattern($1, passenger_var_lib_t, passenger_var_lib_t)
+	files_search_var_lib($1)
+')
+
+#####################################
+## <summary>
+##  Manage passenger var_run content.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`passenger_manage_pid_content',`
+    gen_require(`
+        type passenger_var_run_t;
+    ')
+
+    files_search_pids($1)
+    manage_dirs_pattern($1, passenger_var_run_t, passenger_var_run_t)
+    manage_files_pattern($1, passenger_var_run_t, passenger_var_run_t)
+    manage_fifo_files_pattern($1, passenger_var_run_t, passenger_var_run_t)
+    manage_sock_files_pattern($1, passenger_var_run_t, passenger_var_run_t)
+')
+
+########################################
+## <summary>
+##	Connect to passenger unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`passenger_stream_connect',`
+	gen_require(`
+		type passenger_t;
+	')
+
+	allow $1 passenger_t:unix_stream_socket connectto;
+')
+
+#######################################
+## <summary>
+##  Allow to manage passenger tmp files/dirs.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`passenger_manage_tmp_files',`
+    gen_require(`
+        type passenger_tmp_t;
+    ')
+
+    files_search_tmp($1)
+	manage_files_pattern($1, passenger_tmp_t, passenger_tmp_t)
+	manage_dirs_pattern($1, passenger_tmp_t, passenger_tmp_t)
 ')
diff -Nur nsaserefpolicy/policy/modules/services/passenger.te serefpolicy-3.7.19/policy/modules/services/passenger.te
--- nsaserefpolicy/policy/modules/services/passenger.te	2013-03-15 11:41:13.958153549 +0100
+++ serefpolicy-3.7.19/policy/modules/services/passenger.te	2013-03-15 11:40:14.163152185 +0100
@@ -11,12 +11,12 @@
 domain_entry_file(passenger_t, passenger_exec_t)
 role system_r types passenger_t;
 
-type passenger_tmp_t;
-files_tmp_file(passenger_tmp_t)
-
 type passenger_log_t;
 logging_log_file(passenger_log_t)
 
+type passenger_tmp_t;
+files_tmp_file(passenger_tmp_t)
+
 type passenger_var_lib_t;
 files_type(passenger_var_lib_t)
 
@@ -28,19 +28,20 @@
 # passanger local policy
 #
 
-allow passenger_t self:capability { chown dac_override fsetid fowner kill setuid setgid sys_nice };
+allow passenger_t self:capability { chown dac_override fsetid fowner kill setuid setgid sys_nice sys_ptrace sys_resource };
 allow passenger_t self:process { setpgid setsched sigkill signal };
-
 allow passenger_t self:fifo_file rw_fifo_file_perms;
 allow passenger_t self:unix_stream_socket { create_stream_socket_perms connectto };
 
+can_exec(passenger_t, passenger_exec_t)
+
 manage_dirs_pattern(passenger_t, passenger_log_t, passenger_log_t)
 manage_files_pattern(passenger_t, passenger_log_t, passenger_log_t)
-logging_log_filetrans(passenger_t, passenger_log_t, file)
+logging_log_filetrans(passenger_t, passenger_log_t, { dir file })
 
-files_search_var_lib(passenger_t)
 manage_dirs_pattern(passenger_t, passenger_var_lib_t, passenger_var_lib_t)
 manage_files_pattern(passenger_t, passenger_var_lib_t, passenger_var_lib_t)
+files_search_var_lib(passenger_t)
 
 manage_dirs_pattern(passenger_t, passenger_var_run_t, passenger_var_run_t)
 manage_files_pattern(passenger_t, passenger_var_run_t, passenger_var_run_t)
@@ -51,13 +52,15 @@
 #needed by puppet
 manage_dirs_pattern(passenger_t, passenger_tmp_t, passenger_tmp_t)
 manage_files_pattern(passenger_t, passenger_tmp_t, passenger_tmp_t)
-files_tmp_filetrans(passenger_t, passenger_tmp_t, { file dir })
-
-can_exec(passenger_t, passenger_exec_t)
+manage_sock_files_pattern(passenger_t, passenger_tmp_t, passenger_tmp_t)
+files_tmp_filetrans(passenger_t, passenger_tmp_t, { file dir sock_file })
 
 kernel_read_system_state(passenger_t)
 kernel_read_kernel_sysctls(passenger_t)
 
+corenet_all_recvfrom_netlabel(passenger_t)
+corenet_tcp_sendrecv_generic_if(passenger_t)
+corenet_tcp_sendrecv_generic_node(passenger_t)
 corenet_tcp_connect_http_port(passenger_t)
 
 corecmd_exec_bin(passenger_t)
@@ -65,15 +68,14 @@
 
 dev_read_urand(passenger_t)
 
-files_read_etc_files(passenger_t)
+domain_read_all_domains_state(passenger_t)
+
 files_read_usr_files(passenger_t)
 
 auth_use_nsswitch(passenger_t)
 
 logging_send_syslog_msg(passenger_t)
 
-miscfiles_read_localization(passenger_t)
-
 userdom_dontaudit_use_user_terminals(passenger_t)
 
 optional_policy(`
@@ -82,7 +84,23 @@
 ')
 
 optional_policy(`
-    puppet_manage_lib(passenger_t)
-    puppet_search_log(passenger_t)
-    puppet_search_pid(passenger_t)
+	hostname_exec(passenger_t)
+')
+
+optional_policy(`
+	mta_send_mail(passenger_t)
+')
+
+optional_policy(`
+	puppet_manage_lib(passenger_t)
+	puppet_read_config(passenger_t)
+	puppet_append_log(passenger_t)
+	puppet_create_log(passenger_t)
+	puppet_read_log(passenger_t)
+	puppet_search_pid(passenger_t)
+')
+
+optional_policy(`
+    rpm_exec(passenger_t)
+    rpm_read_db(passenger_t)
 ')
diff -Nur nsaserefpolicy/policy/modules/services/pegasus.te serefpolicy-3.7.19/policy/modules/services/pegasus.te
--- nsaserefpolicy/policy/modules/services/pegasus.te	2013-03-15 11:41:15.665153588 +0100
+++ serefpolicy-3.7.19/policy/modules/services/pegasus.te	2013-03-15 11:40:18.046152273 +0100
@@ -30,12 +30,12 @@
 # Local policy
 #
 
-allow pegasus_t self:capability { chown ipc_lock kill sys_nice setuid setgid dac_override net_bind_service };
+allow pegasus_t self:capability { chown ipc_lock kill sys_nice setuid setgid dac_override net_admin net_bind_service };
 dontaudit pegasus_t self:capability sys_tty_config;
 allow pegasus_t self:process signal;
 allow pegasus_t self:fifo_file rw_fifo_file_perms;
 allow pegasus_t self:unix_dgram_socket create_socket_perms;
-allow pegasus_t self:unix_stream_socket create_stream_socket_perms;
+allow pegasus_t self:unix_stream_socket { connectto create_stream_socket_perms };
 allow pegasus_t self:tcp_socket create_stream_socket_perms;
 
 allow pegasus_t pegasus_conf_t:dir rw_dir_perms;
@@ -90,7 +90,7 @@
 corecmd_exec_bin(pegasus_t)
 corecmd_exec_shell(pegasus_t)
 
-dev_read_sysfs(pegasus_t)
+dev_rw_sysfs(pegasus_t)
 dev_read_urand(pegasus_t)
 
 fs_getattr_all_fs(pegasus_t)
@@ -123,10 +123,18 @@
 userdom_dontaudit_search_user_home_dirs(pegasus_t)
 
 optional_policy(`
+	corosync_stream_connect(pegasus_t)
+')
+
+optional_policy(`
     lldpad_dgram_send(pegasus_t)
 ')
 
 optional_policy(`
+	ricci_stream_connect_modclusterd(pegasus_t)
+')
+
+optional_policy(`
 	rpm_exec(pegasus_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/services/piranha.te serefpolicy-3.7.19/policy/modules/services/piranha.te
--- nsaserefpolicy/policy/modules/services/piranha.te	2013-03-15 11:41:14.389153559 +0100
+++ serefpolicy-3.7.19/policy/modules/services/piranha.te	2013-03-15 11:40:15.132152207 +0100
@@ -228,6 +228,10 @@
 ')
 
 optional_policy(`
+	iptables_domtrans(piranha_pulse_t)
+')
+
+optional_policy(`
     ldap_initrc_domtrans(piranha_pulse_t)
     ldap_domtrans(piranha_pulse_t)
 ')
diff -Nur nsaserefpolicy/policy/modules/services/pkcsslotd.fc serefpolicy-3.7.19/policy/modules/services/pkcsslotd.fc
--- nsaserefpolicy/policy/modules/services/pkcsslotd.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/pkcsslotd.fc	2013-03-15 11:40:16.674152242 +0100
@@ -0,0 +1,4 @@
+
+/usr/sbin/pkcsslotd		--	gen_context(system_u:object_r:pkcsslotd_exec_t,s0)
+
+/var/lib/opencryptoki(/.*)?		gen_context(system_u:object_r:pkcsslotd_var_lib_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/pkcsslotd.if serefpolicy-3.7.19/policy/modules/services/pkcsslotd.if
--- nsaserefpolicy/policy/modules/services/pkcsslotd.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/pkcsslotd.if	2013-03-15 11:40:15.127152207 +0100
@@ -0,0 +1,121 @@
+
+## <summary>policy for pkcsslotd</summary>
+
+########################################
+## <summary>
+##	Transition to pkcsslotd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`pkcsslotd_domtrans',`
+	gen_require(`
+		type pkcsslotd_t, pkcsslotd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, pkcsslotd_exec_t, pkcsslotd_t)
+')
+
+########################################
+## <summary>
+##	Search pkcsslotd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pkcsslotd_search_lib',`
+	gen_require(`
+		type pkcsslotd_var_lib_t;
+	')
+
+	allow $1 pkcsslotd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read pkcsslotd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pkcsslotd_read_lib_files',`
+	gen_require(`
+		type pkcsslotd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, pkcsslotd_var_lib_t, pkcsslotd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage pkcsslotd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pkcsslotd_manage_lib_files',`
+	gen_require(`
+		type pkcsslotd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, pkcsslotd_var_lib_t, pkcsslotd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage pkcsslotd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pkcsslotd_manage_lib_dirs',`
+	gen_require(`
+		type pkcsslotd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, pkcsslotd_var_lib_t, pkcsslotd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an pkcsslotd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pkcsslotd_admin',`
+	gen_require(`
+		type pkcsslotd_t;
+		type pkcsslotd_var_lib_t;
+	')
+
+	allow $1 pkcsslotd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, pkcsslotd_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, pkcsslotd_var_lib_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/pkcsslotd.te serefpolicy-3.7.19/policy/modules/services/pkcsslotd.te
--- nsaserefpolicy/policy/modules/services/pkcsslotd.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/pkcsslotd.te	2013-03-15 11:40:14.147152184 +0100
@@ -0,0 +1,65 @@
+policy_module(pkcsslotd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type pkcsslotd_t;
+type pkcsslotd_exec_t;
+init_daemon_domain(pkcsslotd_t, pkcsslotd_exec_t)
+
+type pkcsslotd_var_lib_t;
+files_type(pkcsslotd_var_lib_t)
+
+type pkcsslotd_tmp_t;
+files_tmp_file(pkcsslotd_tmp_t)
+
+type pkcsslotd_tmpfs_t;
+files_tmpfs_file(pkcsslotd_tmpfs_t)
+
+type pkcsslotd_var_run_t;
+files_pid_file(pkcsslotd_var_run_t)
+
+
+########################################
+#
+# pkcsslotd local policy
+#
+
+allow pkcsslotd_t self:capability { kill };
+allow pkcsslotd_t self:process { fork };
+
+allow pkcsslotd_t self:fifo_file rw_fifo_file_perms;
+allow pkcsslotd_t self:sem create_sem_perms;
+allow pkcsslotd_t self:shm create_shm_perms;
+allow pkcsslotd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(pkcsslotd_t, pkcsslotd_tmp_t, pkcsslotd_tmp_t)
+manage_files_pattern(pkcsslotd_t, pkcsslotd_tmp_t, pkcsslotd_tmp_t)
+files_tmp_filetrans(pkcsslotd_t, pkcsslotd_tmp_t, { file dir })
+
+manage_dirs_pattern(pkcsslotd_t, pkcsslotd_tmpfs_t, pkcsslotd_tmpfs_t)
+manage_files_pattern(pkcsslotd_t, pkcsslotd_tmpfs_t, pkcsslotd_tmpfs_t)
+fs_tmpfs_filetrans(pkcsslotd_t, pkcsslotd_tmpfs_t, { dir file })
+
+manage_dirs_pattern(pkcsslotd_t, pkcsslotd_var_lib_t, pkcsslotd_var_lib_t)
+manage_files_pattern(pkcsslotd_t, pkcsslotd_var_lib_t, pkcsslotd_var_lib_t)
+manage_lnk_files_pattern(pkcsslotd_t, pkcsslotd_var_lib_t, pkcsslotd_var_lib_t)
+files_var_lib_filetrans(pkcsslotd_t, pkcsslotd_var_lib_t, { dir file lnk_file })
+
+manage_files_pattern(pkcsslotd_t, pkcsslotd_var_run_t, pkcsslotd_var_run_t)
+manage_dirs_pattern(pkcsslotd_t, pkcsslotd_var_run_t,pkcsslotd_var_run_t)
+files_pid_filetrans(pkcsslotd_t, pkcsslotd_var_run_t, { file  dir })
+
+domain_use_interactive_fds(pkcsslotd_t)
+
+files_read_etc_files(pkcsslotd_t)
+
+logging_send_syslog_msg(pkcsslotd_t)
+
+miscfiles_read_localization(pkcsslotd_t)
+
+optional_policy(`
+	unconfined_domain(pkcsslotd_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/postfix.if serefpolicy-3.7.19/policy/modules/services/postfix.if
--- nsaserefpolicy/policy/modules/services/postfix.if	2013-03-15 11:41:13.608153541 +0100
+++ serefpolicy-3.7.19/policy/modules/services/postfix.if	2013-03-15 11:40:12.596152149 +0100
@@ -82,6 +82,7 @@
 	files_read_usr_files(postfix_$1_t)
 	files_read_usr_symlinks(postfix_$1_t)
 	files_search_spool(postfix_$1_t)
+	files_list_tmp(postfix_$1_t)
 	files_getattr_tmp_dirs(postfix_$1_t)
 	files_search_all_mountpoints(postfix_$1_t)
 
@@ -100,6 +101,10 @@
 	optional_policy(`
 		udev_read_db(postfix_$1_t)
 	')
+
+	optional_policy(`
+		mysql_stream_connect(postfix_$1_t)
+	')
 ')
 
 ########################################
@@ -141,6 +146,10 @@
 	corenet_udp_bind_generic_node(postfix_$1_t)
 	corenet_tcp_connect_all_ports(postfix_$1_t)
 	corenet_sendrecv_all_client_packets(postfix_$1_t)
+
+	optional_policy(`
+		mysql_stream_connect(postfix_$1_t)
+	')
 ')
 
 ########################################
@@ -262,6 +271,25 @@
 	allow $1 postfix_local_t:fifo_file rw_fifo_file_perms;
 ')
 
+#######################################
+## <summary>
+##  Allow read/write postfix public pipes
+##  TCP sockets.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`postfix_rw_public_pipes',`
+    gen_require(`
+        type postfix_public_t;
+    ')
+
+    allow $1 postfix_public_t:fifo_file rw_fifo_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Allow domain to read postfix local process state
@@ -684,6 +712,26 @@
 	manage_files_pattern($1, postfix_spool_type, postfix_spool_type)
 ')
 
+#######################################
+## <summary>
+##  Create, read, write, and delete postfix maildrop spool files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`postfix_manage_spool_maildrop_files',`
+    gen_require(`
+        type postfix_spool_maildrop_t;
+    ')
+
+    files_search_spool($1)
+    manage_dirs_pattern($1, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+    manage_files_pattern($1, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute postfix user mail programs
diff -Nur nsaserefpolicy/policy/modules/services/postfix.te serefpolicy-3.7.19/policy/modules/services/postfix.te
--- nsaserefpolicy/policy/modules/services/postfix.te	2013-03-15 11:41:15.948153594 +0100
+++ serefpolicy-3.7.19/policy/modules/services/postfix.te	2013-03-15 11:40:18.820152291 +0100
@@ -154,6 +154,7 @@
 delete_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 rename_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 rw_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+setattr_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 setattr_dirs_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 
 kernel_read_all_sysctls(postfix_master_t)
@@ -172,6 +173,7 @@
 corenet_tcp_bind_generic_node(postfix_master_t)
 corenet_tcp_bind_amavisd_send_port(postfix_master_t)
 corenet_tcp_bind_smtp_port(postfix_master_t)
+corenet_tcp_bind_dspam_port(postfix_master_t)
 corenet_tcp_connect_all_ports(postfix_master_t)
 corenet_sendrecv_amavisd_send_server_packets(postfix_master_t)
 corenet_sendrecv_smtp_server_packets(postfix_master_t)
@@ -270,6 +272,8 @@
 # connect to master process
 stream_connect_pattern(postfix_cleanup_t, postfix_private_t, postfix_private_t, postfix_master_t)
 
+allow postfix_cleanup_t postfix_smtpd_t:tcp_socket rw_stream_socket_perms;
+
 rw_fifo_files_pattern(postfix_cleanup_t, postfix_public_t, postfix_public_t)
 write_sock_files_pattern(postfix_cleanup_t, postfix_public_t, postfix_public_t)
 allow postfix_cleanup_t postfix_smtpd_t:unix_stream_socket rw_socket_perms;
@@ -307,11 +311,13 @@
 
 # for .forward - maybe we need a new type for it?
 rw_sock_files_pattern(postfix_local_t, postfix_private_t, postfix_private_t)
+rw_files_pattern(postfix_local_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 
 domtrans_pattern(postfix_local_t, postfix_postdrop_exec_t, postfix_postdrop_t)
 
 allow postfix_local_t postfix_spool_t:file rw_file_perms;
 
+
 corecmd_exec_shell(postfix_local_t)
 corecmd_exec_bin(postfix_local_t)
 
@@ -329,6 +335,15 @@
 userdom_read_user_home_content_files(postfix_local_t)
 userdom_exec_user_bin_files(postfix_local_t)
 
+tunable_policy(`use_nfs_home_dirs',`
+    fs_exec_nfs_files(postfix_local_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+    fs_exec_cifs_files(postfix_local_t)
+')
+
+
 tunable_policy(`allow_postfix_local_write_mail_spool',`
    mta_manage_spool(postfix_local_t)
 ')
@@ -343,6 +358,10 @@
 ')
 
 optional_policy(`
+    dspam_domtrans(postfix_local_t)
+')
+
+optional_policy(`
 #	for postalias
 	mailman_manage_data_files(postfix_local_t)
 	mailman_append_log(postfix_local_t)
@@ -354,6 +373,10 @@
 ')
 
 optional_policy(`
+	openshift_search_lib(postfix_local_t)
+')
+
+optional_policy(`
 	procmail_domtrans(postfix_local_t)
 ')
 
@@ -657,6 +680,10 @@
 ')
 
 optional_policy(`
+    dspam_stream_connect(postfix_smtp_t)
+')
+
+optional_policy(`
 	milter_stream_connect_all(postfix_smtp_t)
 	spamassassin_read_pid_files(postfix_smtpd_t)
 	spamd_stream_connect(postfix_smtpd_t)
diff -Nur nsaserefpolicy/policy/modules/services/postgresql.fc serefpolicy-3.7.19/policy/modules/services/postgresql.fc
--- nsaserefpolicy/policy/modules/services/postgresql.fc	2013-03-15 11:41:13.625153541 +0100
+++ serefpolicy-3.7.19/policy/modules/services/postgresql.fc	2013-03-15 11:40:12.626152150 +0100
@@ -28,12 +28,13 @@
 #
 /var/lib/postgres(ql)?(/.*)? 		gen_context(system_u:object_r:postgresql_db_t,s0)
 
+/var/lib/pgsql(/.*)?            gen_context(system_u:object_r:postgresql_db_t,s0)
 /var/lib/pgsql/data(/.*)?		gen_context(system_u:object_r:postgresql_db_t,s0)
 /var/lib/pgsql/logfile(/.*)?		gen_context(system_u:object_r:postgresql_log_t,s0)
-/var/lib/pgsql/pgstartup\.log		gen_context(system_u:object_r:postgresql_log_t,s0)
+/var/lib/pgsql/pgstartup\.log.*		gen_context(system_u:object_r:postgresql_log_t,s0)
 
 /var/lib/sepgsql(/.*)?			gen_context(system_u:object_r:postgresql_db_t,s0)
-/var/lib/sepgsql/pgstartup\.log	--	gen_context(system_u:object_r:postgresql_log_t,s0)
+/var/lib/sepgsql/pgstartup\.log.*	--	gen_context(system_u:object_r:postgresql_log_t,s0)
 
 /var/log/postgres\.log.* 	--	gen_context(system_u:object_r:postgresql_log_t,s0)
 /var/log/postgresql(/.*)?		gen_context(system_u:object_r:postgresql_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/postgresql.te serefpolicy-3.7.19/policy/modules/services/postgresql.te
--- nsaserefpolicy/policy/modules/services/postgresql.te	2013-03-15 11:41:13.840153546 +0100
+++ serefpolicy-3.7.19/policy/modules/services/postgresql.te	2013-03-15 11:40:13.122152161 +0100
@@ -19,6 +19,13 @@
 #
 
 ## <desc>
+##      <p>
+##      Allow postgresql to use ssh and rsync for point-in-time recovery
+##      </p>
+## </desc>
+gen_tunable(postgresql_can_rsync, false)
+
+## <desc>
 ##	<p>
 ##	Allow unprivileged users to execute DDL statement
 ##	</p>
@@ -529,3 +536,17 @@
 allow sepgsql_unconfined_type sepgsql_module_type:db_database install_module;
 
 kernel_relabelfrom_unlabeled_database(sepgsql_unconfined_type)
+
+optional_policy(`
+        tunable_policy(`postgresql_can_rsync',`
+                rsync_exec(postgresql_t)
+        ')
+')
+
+optional_policy(`
+        tunable_policy(`postgresql_can_rsync',`
+                ssh_exec(postgresql_t)
+                ssh_read_user_home_files(postgresql_t)
+                corenet_tcp_connect_ssh_port(postgresql_t)
+        ')
+')
diff -Nur nsaserefpolicy/policy/modules/services/ppp.te serefpolicy-3.7.19/policy/modules/services/ppp.te
--- nsaserefpolicy/policy/modules/services/ppp.te	2013-03-15 11:41:15.586153586 +0100
+++ serefpolicy-3.7.19/policy/modules/services/ppp.te	2013-03-15 11:40:17.700152265 +0100
@@ -161,6 +161,7 @@
 
 # for scripts
 files_read_etc_files(pppd_t)
+files_read_usr_files(pppd_t)
 
 init_read_utmp(pppd_t)
 init_dontaudit_write_utmp(pppd_t)
@@ -191,6 +192,12 @@
 ')
 
 optional_policy(`
+    l2tpd_dgram_send(pppd_t)
+    l2tpd_rw_socket(pppd_t)
+    l2tpd_stream_connect(pppd_t)
+')
+
+optional_policy(`
 	tunable_policy(`pppd_can_insmod && ! secure_mode_insmod',`
 		modutils_domtrans_insmod_uncond(pppd_t)
 	')
diff -Nur nsaserefpolicy/policy/modules/services/procmail.te serefpolicy-3.7.19/policy/modules/services/procmail.te
--- nsaserefpolicy/policy/modules/services/procmail.te	2013-03-15 11:41:15.009153573 +0100
+++ serefpolicy-3.7.19/policy/modules/services/procmail.te	2013-04-29 10:42:58.804387520 +0200
@@ -100,6 +100,10 @@
 userdom_manage_user_home_content_sockets(procmail_t)
 userdom_user_home_dir_filetrans_user_home_content(procmail_t, { dir file lnk_file fifo_file sock_file })
 
+userdom_manage_user_tmp_dirs(procmail_t)
+userdom_manage_user_tmp_files(procmail_t)
+userdom_manage_user_tmp_symlinks(procmail_t)
+
 # Execute user executables
 userdom_exec_user_bin_files(procmail_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/puppet.if serefpolicy-3.7.19/policy/modules/services/puppet.if
--- nsaserefpolicy/policy/modules/services/puppet.if	2013-03-15 11:41:14.469153561 +0100
+++ serefpolicy-3.7.19/policy/modules/services/puppet.if	2013-03-15 11:40:15.229152209 +0100
@@ -30,6 +30,83 @@
 	files_search_tmp($1)
 ')
 
+###################################
+## <summary>
+##  Allow the specified domain to read puppet's config files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`puppet_read_config',`
+    gen_require(`
+        type puppet_etc_t;
+    ')
+
+    logging_search_logs($1)
+    list_dirs_pattern($1, puppet_etc_t, puppet_etc_t)
+    read_files_pattern($1, puppet_etc_t, puppet_etc_t)
+')
+
+####################################
+## <summary>
+##  Allow the specified domain to read puppet's log files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`puppet_read_log',`
+    gen_require(`
+        type puppet_log_t;
+    ')
+
+    logging_search_logs($1)
+    read_files_pattern($1, puppet_log_t, puppet_log_t)
+')
+
+#####################################
+## <summary>
+##  Allow the specified domain to create puppet's log files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`puppet_create_log',`
+    gen_require(`
+        type puppet_log_t;
+    ')
+
+    logging_search_logs($1)
+    create_files_pattern($1, puppet_log_t, puppet_log_t)
+')
+
+####################################
+## <summary>
+##  Allow the specified domain to append puppet's log files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`puppet_append_log',`
+    gen_require(`
+        type puppet_log_t;
+    ')
+
+    logging_search_logs($1)
+    append_files_pattern($1, puppet_log_t, puppet_log_t)
+')
+
 ###############################################
 ## <summary>
 ##  Read Puppet lib files.
diff -Nur nsaserefpolicy/policy/modules/services/puppet.te serefpolicy-3.7.19/policy/modules/services/puppet.te
--- nsaserefpolicy/policy/modules/services/puppet.te	2013-03-15 11:41:14.973153572 +0100
+++ serefpolicy-3.7.19/policy/modules/services/puppet.te	2013-03-15 11:40:16.130152230 +0100
@@ -160,6 +160,10 @@
 ')
 
 optional_policy(`
+	openshift_initrc_domtrans(puppet_t)
+')
+
+optional_policy(`
 	files_rw_var_files(puppet_t)
 
 	rpm_domtrans(puppet_t)
diff -Nur nsaserefpolicy/policy/modules/services/pxe.fc serefpolicy-3.7.19/policy/modules/services/pxe.fc
--- nsaserefpolicy/policy/modules/services/pxe.fc	2013-03-15 11:41:14.912153571 +0100
+++ serefpolicy-3.7.19/policy/modules/services/pxe.fc	2013-03-15 11:40:16.019152227 +0100
@@ -1,6 +1,6 @@
 
 /usr/sbin/pxe		--	gen_context(system_u:object_r:pxe_exec_t,s0)
 
-/var/log/pxe\.log	--	gen_context(system_u:object_r:pxe_log_t,s0)
+/var/log/pxe\.log.*	--	gen_context(system_u:object_r:pxe_log_t,s0)
 
 /var/run/pxe\.pid	--	gen_context(system_u:object_r:pxe_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/pyzor.fc serefpolicy-3.7.19/policy/modules/services/pyzor.fc
--- nsaserefpolicy/policy/modules/services/pyzor.fc	2013-03-15 11:41:13.590153541 +0100
+++ serefpolicy-3.7.19/policy/modules/services/pyzor.fc	2013-03-15 11:40:12.511152147 +0100
@@ -10,4 +10,4 @@
 #/usr/bin/pyzord		--	gen_context(system_u:object_r:pyzord_exec_t,s0)
 
 #/var/lib/pyzord(/.*)?		gen_context(system_u:object_r:pyzor_var_lib_t,s0)
-#/var/log/pyzord\.log	--	gen_context(system_u:object_r:pyzord_log_t,s0)
+#/var/log/pyzord\.log.*	--	gen_context(system_u:object_r:pyzord_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/qpidd.te serefpolicy-3.7.19/policy/modules/services/qpidd.te
--- nsaserefpolicy/policy/modules/services/qpidd.te	2013-03-15 11:41:13.518153539 +0100
+++ serefpolicy-3.7.19/policy/modules/services/qpidd.te	2013-03-15 11:40:12.362152144 +0100
@@ -69,6 +69,7 @@
 logging_send_syslog_msg(qpidd_t)
 
 miscfiles_read_localization(qpidd_t)
+miscfiles_read_certs(qpidd_t)
 
 sysnet_dns_name_resolve(qpidd_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/quantum.fc serefpolicy-3.7.19/policy/modules/services/quantum.fc
--- nsaserefpolicy/policy/modules/services/quantum.fc	2013-03-15 11:41:14.470153561 +0100
+++ serefpolicy-3.7.19/policy/modules/services/quantum.fc	2013-03-15 11:40:15.237152209 +0100
@@ -5,6 +5,9 @@
 /usr/bin/quantum-openvswitch-agent	--	gen_context(system_u:object_r:quantum_exec_t,s0)
 /usr/bin/quantum-linuxbridge-agent	--	gen_context(system_u:object_r:quantum_exec_t,s0)
 /usr/bin/quantum-ryu-agent		--	gen_context(system_u:object_r:quantum_exec_t,s0)
+/usr/bin/quantum-dhcp-agent		--	gen_context(system_u:object_r:quantum_exec_t,s0)
+/usr/bin/quantum-l3-agent		--	gen_context(system_u:object_r:quantum_exec_t,s0)
+/usr/bin/quantum-ovs-cleanup	--	gen_context(system_u:object_r:quantum_exec_t,s0)
 
 /var/lib/quantum(/.*)?		gen_context(system_u:object_r:quantum_var_lib_t,s0)
 
diff -Nur nsaserefpolicy/policy/modules/services/quantum.if serefpolicy-3.7.19/policy/modules/services/quantum.if
--- nsaserefpolicy/policy/modules/services/quantum.if	2013-03-15 11:41:14.140153553 +0100
+++ serefpolicy-3.7.19/policy/modules/services/quantum.if	2013-06-05 13:33:23.353403918 +0200
@@ -155,6 +155,62 @@
 	manage_dirs_pattern($1, quantum_var_lib_t, quantum_var_lib_t)
 ')
 
+########################################
+## <summary>
+## Read and write quantum fifo files.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`quantum_rw_fifo_file',`
+    gen_require(`
+        type quantum_t;
+    ')
+
+    allow $1 quantum_t:fifo_file rw_inherited_fifo_file_perms;
+')
+
+########################################
+## <summary>
+## Allow domain to send sigchld to quantum process.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`quantum_sigchld',`
+    gen_require(`
+        type quantum_t;
+    ')
+
+    allow $1 quantum_t:process sigchld;
+')
+
+#####################################
+## <summary>
+##     Connect to quantum over a unix domain
+##     stream socket.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`quantum_stream_connect',`
+       gen_require(`
+               type quantum_t;
+               type quantum_var_lib_t;
+       ')
+
+       files_search_pids($1)
+       stream_connect_pattern($1, quantum_var_lib_t, quantum_var_lib_t, quantum_t)
+')
 
 ########################################
 ## <summary>
@@ -166,12 +222,6 @@
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <param name="role">
-##	<summary>
-##	Role allowed access.
-##	</summary>
-## </param>
-## <rolecap/>
 #
 interface(`quantum_admin',`
 	gen_require(`
diff -Nur nsaserefpolicy/policy/modules/services/quantum.te serefpolicy-3.7.19/policy/modules/services/quantum.te
--- nsaserefpolicy/policy/modules/services/quantum.te	2013-03-15 11:41:14.365153558 +0100
+++ serefpolicy-3.7.19/policy/modules/services/quantum.te	2013-06-24 15:56:49.086898763 +0200
@@ -79,10 +79,15 @@
 
 miscfiles_read_localization(quantum_t)
 
-sysnet_domtrans_ifconfig(quantum_t)
+sysnet_exec_ifconfig(quantum_t)
 
 optional_policy(`
-	brctl_domtrans(quantum_t)
+	brctl_exec(quantum_t)
+')
+
+optional_policy(`
+    openvswitch_domtrans(quantum_t)
+    openvswitch_stream_connect(quantum_t)
 ')
 
 optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/services/radius.fc serefpolicy-3.7.19/policy/modules/services/radius.fc
--- nsaserefpolicy/policy/modules/services/radius.fc	2013-03-15 11:41:15.401153582 +0100
+++ serefpolicy-3.7.19/policy/modules/services/radius.fc	2013-03-15 11:40:17.414152259 +0100
@@ -16,7 +16,7 @@
 /var/log/radius(/.*)?		gen_context(system_u:object_r:radiusd_log_t,s0)
 /var/log/radius\.log.*	--	gen_context(system_u:object_r:radiusd_log_t,s0)
 /var/log/radiusd-freeradius(/.*)? gen_context(system_u:object_r:radiusd_log_t,s0)
-/var/log/radutmp	--	gen_context(system_u:object_r:radiusd_log_t,s0)
+/var/log/radutmp.*	--	gen_context(system_u:object_r:radiusd_log_t,s0)
 /var/log/radwtmp.*	--	gen_context(system_u:object_r:radiusd_log_t,s0)
 
 /var/run/radiusd(/.*)?		gen_context(system_u:object_r:radiusd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/razor.fc serefpolicy-3.7.19/policy/modules/services/razor.fc
--- nsaserefpolicy/policy/modules/services/razor.fc	2013-03-15 11:41:13.577153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/razor.fc	2013-03-15 11:40:12.500152147 +0100
@@ -6,4 +6,4 @@
 #/usr/bin/razor.*	--	gen_context(system_u:object_r:razor_exec_t,s0)
 
 #/var/lib/razor(/.*)?		gen_context(system_u:object_r:razor_var_lib_t,s0)
-#/var/log/razor-agent\.log --	gen_context(system_u:object_r:razor_log_t,s0)
+#/var/log/razor-agent\.log.*	--	gen_context(system_u:object_r:razor_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/rgmanager.fc serefpolicy-3.7.19/policy/modules/services/rgmanager.fc
--- nsaserefpolicy/policy/modules/services/rgmanager.fc	2013-03-15 11:41:13.682153543 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rgmanager.fc	2013-03-15 11:40:12.931152157 +0100
@@ -1,10 +1,21 @@
-
+/etc/rc\.d/init\.d/cpglockd			--	gen_context(system_u:object_r:rgmanager_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/rgmanager          --  gen_context(system_u:object_r:rgmanager_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/heartbeat    --  gen_context(system_u:object_r:rgmanager_initrc_exec_t,s0)
+
+/usr/sbin/ccs_tool					--  gen_context(system_u:object_r:rgmanager_exec_t,s0)
+/usr/sbin/cman_tool					--  gen_context(system_u:object_r:rgmanager_exec_t,s0)
+/usr/sbin/cpglockd					--		gen_context(system_u:object_r:rgmanager_exec_t,s0)
+/usr/sbin/rgmanager					--      gen_context(system_u:object_r:rgmanager_exec_t,s0)
 
-/usr/sbin/rgmanager                    --      gen_context(system_u:object_r:rgmanager_exec_t,s0)
+/usr/lib(64)?/heartbeat(/.*)?           gen_context(system_u:object_r:rgmanager_var_lib_t,s0)
+/usr/lib(64)?/heartbeat/heartbeat   --  gen_context(system_u:object_r:rgmanager_exec_t,s0)
+/var/lib/heartbeat(/.*)?               gen_context(system_u:object_r:rgmanager_var_lib_t,s0)
 
-/var/log/cluster/rgmanager\.log        --      gen_context(system_u:object_r:rgmanager_var_log_t,s0)
+/var/log/cluster/cpglockd\.log.*        --      gen_context(system_u:object_r:rgmanager_var_log_t,s0)
+/var/log/cluster/rgmanager\.log.*        --      gen_context(system_u:object_r:rgmanager_var_log_t,s0)
 
+/var/run/cpglockd\.pid                --      gen_context(system_u:object_r:rgmanager_var_run_t,s0)
+/var/run/heartbeat(/.*)?             			gen_context(system_u:object_r:rgmanager_var_run_t,s0)
 /var/run/rgmanager\.pid                --      gen_context(system_u:object_r:rgmanager_var_run_t,s0)
 
 /var/run/cluster/rgmanager\.sk        -s      gen_context(system_u:object_r:rgmanager_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/rgmanager.if serefpolicy-3.7.19/policy/modules/services/rgmanager.if
--- nsaserefpolicy/policy/modules/services/rgmanager.if	2013-03-15 11:41:15.182153577 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rgmanager.if	2013-04-03 10:42:46.446928969 +0200
@@ -99,6 +99,25 @@
 
 ######################################
 ## <summary>
+##      Allow manage rgmanager pid files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`rgmanager_manage_pid_files',`
+    gen_require(`
+        type rgmanager_tmp_t;
+    ')
+
+    manage_files_pattern($1, rgmanager_var_run_t, rgmanager_var_run_t)
+')
+
+
+######################################
+## <summary>
 ##	All of the rules required to administrate 
 ##	an rgmanager environment
 ## </summary>
@@ -139,3 +158,45 @@
 	files_search_pids($1)
 	admin_pattern($1, rgmanager_var_run_t)
 ')
+
+######################################
+## <summary>
+##  Allow the specified domain to manage rgmanager's lib/run files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rgmanager_manage_files',`
+    gen_require(`
+        type rgmanager_var_lib_t;
+        type rgmanager_var_run_t;
+    ')
+
+    files_list_var_lib($1)
+    admin_pattern($1, rgmanager_var_lib_t)
+
+    files_list_pids($1)
+    admin_pattern($1, rgmanager_var_run_t)
+')
+
+######################################
+## <summary>
+##  Allow the specified domain to search rgmanager's lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rgmanager_search_lib',`
+    gen_require(`
+        type rgmanager_var_lib_t;
+    ')
+
+    files_list_var_lib($1)
+    allow $1 rgmanager_var_lib_t:dir search_dir_perms;
+')
diff -Nur nsaserefpolicy/policy/modules/services/rgmanager.te serefpolicy-3.7.19/policy/modules/services/rgmanager.te
--- nsaserefpolicy/policy/modules/services/rgmanager.te	2013-03-15 11:41:14.014153550 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rgmanager.te	2013-03-15 11:40:14.455152191 +0100
@@ -17,6 +17,7 @@
 type rgmanager_exec_t;
 domain_type(rgmanager_t)
 init_daemon_domain(rgmanager_t, rgmanager_exec_t)
+init_initrc_domain(rgmanager_t)
 
 type rgmanager_initrc_exec_t;
 init_script_file(rgmanager_initrc_exec_t)
@@ -27,6 +28,9 @@
 type rgmanager_tmpfs_t;
 files_tmpfs_file(rgmanager_tmpfs_t)
 
+type rgmanager_var_lib_t;
+files_type(rgmanager_var_lib_t)
+
 type rgmanager_var_log_t;
 logging_log_file(rgmanager_var_log_t)
 
@@ -57,6 +61,15 @@
 manage_files_pattern(rgmanager_t, rgmanager_tmpfs_t, rgmanager_tmpfs_t)
 fs_tmpfs_filetrans(rgmanager_t, rgmanager_tmpfs_t, { dir file })
 
+# var/lib files
+# # needed by hearbeat
+can_exec(rgmanager_t, rgmanager_var_lib_t)
+manage_files_pattern(rgmanager_t, rgmanager_var_lib_t,rgmanager_var_lib_t)
+manage_dirs_pattern(rgmanager_t, rgmanager_var_lib_t,rgmanager_var_lib_t)
+manage_sock_files_pattern(rgmanager_t, rgmanager_var_lib_t,rgmanager_var_lib_t)
+manage_fifo_files_pattern(rgmanager_t, rgmanager_var_lib_t,rgmanager_var_lib_t)
+files_var_lib_filetrans(rgmanager_t,rgmanager_var_lib_t, { file dir fifo_file sock_file })
+
 # log files
 manage_files_pattern(rgmanager_t, rgmanager_var_log_t, rgmanager_var_log_t)
 logging_log_filetrans(rgmanager_t, rgmanager_var_log_t, { file })
diff -Nur nsaserefpolicy/policy/modules/services/rhcs.fc serefpolicy-3.7.19/policy/modules/services/rhcs.fc
--- nsaserefpolicy/policy/modules/services/rhcs.fc	2013-03-15 11:41:15.131153576 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rhcs.fc	2013-03-15 11:40:16.324152234 +0100
@@ -2,6 +2,7 @@
 /usr/sbin/fenced                        --      gen_context(system_u:object_r:fenced_exec_t,s0)
 /usr/sbin/fence_node                    --      gen_context(system_u:object_r:fenced_exec_t,s0)
 /usr/sbin/fence_tool					--      gen_context(system_u:object_r:fenced_exec_t,s0)
+/usr/sbin/fence_virtd           		--      gen_context(system_u:object_r:fenced_exec_t,s0)
 /usr/sbin/foghorn               		--      gen_context(system_u:object_r:foghorn_exec_t,s0)
 /usr/sbin/gfs_controld                  --      gen_context(system_u:object_r:gfs_controld_exec_t,s0)
 /usr/sbin/groupd                        --      gen_context(system_u:object_r:groupd_exec_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/rhcs.te serefpolicy-3.7.19/policy/modules/services/rhcs.te
--- nsaserefpolicy/policy/modules/services/rhcs.te	2013-03-15 11:41:15.381153581 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rhcs.te	2013-03-15 11:40:17.008152250 +0100
@@ -100,16 +100,19 @@
 stream_connect_pattern(fenced_t, groupd_var_run_t, groupd_var_run_t, groupd_t)
 
 kernel_read_system_state(fenced_t)
+kernel_read_network_state(fenced_t)
 
 corecmd_exec_bin(fenced_t)
 corecmd_exec_shell(fenced_t)
 
 corenet_udp_bind_ionixnetmon_port(fenced_t)
 corenet_tcp_bind_zented_port(fenced_t)
+corenet_udp_bind_zented_port(fenced_t)
 corenet_tcp_connect_http_port(fenced_t)
 
 dev_read_sysfs(fenced_t)
 dev_read_urand(fenced_t)
+dev_read_rand(fenced_t)
 
 files_read_usr_files(fenced_t)
 files_read_usr_symlinks(fenced_t)
@@ -166,6 +169,13 @@
 	snmp_manage_var_lib_dirs(fenced_t)
 ')
 
+optional_policy(`
+	virt_domtrans(fenced_t)
+	virt_read_config(fenced_t)
+	virt_read_pid_files(fenced_t)
+	virt_stream_connect(fenced_t)
+')
+
 ######################################
 #
 # foghorn local policy
@@ -182,6 +192,8 @@
 files_read_etc_files(foghorn_t)
 files_read_usr_files(foghorn_t)
 
+sysnet_dns_name_resolve(foghorn_t)
+
 optional_policy(`
         dbus_connect_system_bus(foghorn_t)
 ')
@@ -258,7 +270,7 @@
 manage_sock_files_pattern(qdiskd_t, qdiskd_var_lib_t,qdiskd_var_lib_t)
 files_var_lib_filetrans(qdiskd_t,qdiskd_var_lib_t, { file dir sock_file })
 
-corecmd_getattr_bin_files(qdiskd_t)
+corecmd_exec_bin(qdiskd_t)
 corecmd_exec_shell(qdiskd_t)
 
 kernel_read_system_state(qdiskd_t)
@@ -280,6 +292,7 @@
 domain_dontaudit_getattr_all_pipes(qdiskd_t)
 domain_dontaudit_getattr_all_sockets(qdiskd_t)
 
+files_read_usr_files(qdiskd_t)
 files_dontaudit_getattr_all_sockets(qdiskd_t)
 files_dontaudit_getattr_all_pipes(qdiskd_t)
 
@@ -288,6 +301,7 @@
 auth_use_nsswitch(qdiskd_t)
 
 files_read_etc_files(qdiskd_t)
+files_read_usr_files(qdiskd_t)
 
 optional_policy(`
 	netutils_domtrans_ping(qdiskd_t)
diff -Nur nsaserefpolicy/policy/modules/services/rhev.fc serefpolicy-3.7.19/policy/modules/services/rhev.fc
--- nsaserefpolicy/policy/modules/services/rhev.fc	2013-03-15 11:41:14.952153572 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rhev.fc	2013-03-15 11:40:16.106152229 +0100
@@ -1,6 +1,14 @@
 /usr/share/rhev-agent/rhev-agentd\.py	--	gen_context(system_u:object_r:rhev_agentd_exec_t,s0)
 /usr/share/rhev-agent/LockActiveSession\.py	--	gen_context(system_u:object_r:rhev_agentd_exec_t,s0)
 
+/usr/share/ovirt-guest-agent    --   gen_context(system_u:object_r:rhev_agentd_exec_t,s0)
+/usr/share/ovirt-guest-agent/ovirt-guest-agent\.py	--	gen_context(system_u:object_r:rhev_agentd_exec_t,s0)
+/usr/share/ovirt-guest-agent/LockActiveSession\.py  --  gen_context(system_u:object_r:rhev_agentd_exec_t,s0)
+
+
 /var/run/rhev-agentd\.pid		--	gen_context(system_u:object_r:rhev_agentd_var_run_t,s0)
+/var/run/ovirt-guest-agent\.pid	--  gen_context(system_u:object_r:rhev_agentd_var_run_t,s0)
 
 /var/log/rhev-agent(/.*)?			gen_context(system_u:object_r:rhev_agentd_log_t,s0)
+/var/log/ovirt-guest-agent(/.*)?		gen_context(system_u:object_r:rhev_agentd_log_t,s0)
+/var/log/ovirt-guest-agent/ovirt-guest-agent\.log	gen_context(system_u:object_r:rhev_agentd_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/rhev.te serefpolicy-3.7.19/policy/modules/services/rhev.te
--- nsaserefpolicy/policy/modules/services/rhev.te	2013-03-15 11:41:14.309153557 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rhev.te	2013-03-15 11:40:14.890152201 +0100
@@ -24,7 +24,7 @@
 # rhev_agentd_t local policy
 #
 
-allow rhev_agentd_t self:capability sys_nice;
+allow rhev_agentd_t self:capability { setuid setgid sys_nice };
 allow rhev_agentd_t self:process setsched;
 
 allow rhev_agentd_t self:fifo_file rw_fifo_file_perms;
@@ -36,6 +36,8 @@
 files_pid_filetrans(rhev_agentd_t, rhev_agentd_var_run_t, { dir file sock_file })
 
 manage_files_pattern(rhev_agentd_t, rhev_agentd_log_t, rhev_agentd_log_t)
+manage_dirs_pattern(rhev_agentd_t, rhev_agentd_log_t, rhev_agentd_log_t)
+logging_log_filetrans(rhev_agentd_t, rhev_agentd_log_t, { dir file })
 
 manage_dirs_pattern(rhev_agentd_t, rhev_agentd_tmp_t, rhev_agentd_tmp_t)
 manage_files_pattern(rhev_agentd_t, rhev_agentd_tmp_t, rhev_agentd_tmp_t)
@@ -54,9 +56,12 @@
 term_use_virtio_console(rhev_agentd_t)
 
 fs_getattr_all_fs(rhev_agentd_t)
+fs_search_configfs_dirs(rhev_agentd_t)
 
 files_getattr_all_mountpoints(rhev_agentd_t)
+files_search_all_mountpoints(rhev_agentd_t)
 files_read_usr_files(rhev_agentd_t)
+files_exec_usr_files(rhev_agentd_t)
 
 auth_use_nsswitch(rhev_agentd_t)
 
@@ -79,10 +84,17 @@
 optional_policy(`
     dbus_system_bus_client(rhev_agentd_t)
     dbus_connect_system_bus(rhev_agentd_t)
+	dbus_session_bus_client(rhev_agentd_t)
 ')
 
 optional_policy(`
-   xserver_dbus_chat_xdm(rhev_agentd_t)
+	xserver_dbus_chat_xdm(rhev_agentd_t)
+	xserver_stream_connect(rhev_agentd_t)
+')
+
+
+optional_policy(`
+	unconfined_dbus_stream_connect(rhev_agentd_t)
 ')
 
 #######################################
@@ -94,13 +106,15 @@
 
 	userhelper_console_role_template(rhev_agentd, system_r, rhev_agentd_t)
 
-	allow rhev_agentd_consolehelper_t rhev_agentd_log_t:file append;
-	allow rhev_agentd_consolehelper_t rhev_agentd_tmp_t:file { read write };
+	allow rhev_agentd_consolehelper_t rhev_agentd_log_t:file rw_inherited_file_perms;
+	allow rhev_agentd_consolehelper_t rhev_agentd_tmp_t:file rw_inherited_file_perms;
 
 	can_exec(rhev_agentd_consolehelper_t, rhev_agentd_exec_t)
 	
 	kernel_read_system_state(rhev_agentd_consolehelper_t)
 
+	corenet_tcp_connect_xserver_port(rhev_agentd_consolehelper_t)
+
 	term_use_virtio_console(rhev_agentd_consolehelper_t)
 
 	optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/services/rhnsd.fc serefpolicy-3.7.19/policy/modules/services/rhnsd.fc
--- nsaserefpolicy/policy/modules/services/rhnsd.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rhnsd.fc	2013-03-15 11:40:14.099152183 +0100
@@ -0,0 +1,5 @@
+/etc/rc\.d/init\.d/rhnsd	--	gen_context(system_u:object_r:rhnsd_initrc_exec_t,s0)
+
+/usr/sbin/rhnsd		--	gen_context(system_u:object_r:rhnsd_exec_t,s0)
+
+/var/run/rhnsd\.pid		--	gen_context(system_u:object_r:rhnsd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/rhnsd.if serefpolicy-3.7.19/policy/modules/services/rhnsd.if
--- nsaserefpolicy/policy/modules/services/rhnsd.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rhnsd.if	2013-03-15 11:40:13.828152177 +0100
@@ -0,0 +1,75 @@
+
+## <summary>policy for rhnsd</summary>
+
+########################################
+## <summary>
+##	Transition to rhnsd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`rhnsd_domtrans',`
+	gen_require(`
+		type rhnsd_t, rhnsd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, rhnsd_exec_t, rhnsd_t)
+')
+
+########################################
+## <summary>
+##	Execute rhnsd server in the rhnsd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhnsd_initrc_domtrans',`
+	gen_require(`
+		type rhnsd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, rhnsd_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an rhnsd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`rhnsd_admin',`
+	gen_require(`
+		type rhnsd_t;
+		type rhnsd_initrc_exec_t;
+	')
+
+	allow $1 rhnsd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, rhnsd_t)
+
+	rhnsd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 rhnsd_initrc_exec_t system_r;
+	allow $2 system_r;
+	optional_policy(`
+		systemd_passwd_agent_exec($1)
+		systemd_read_fifo_file_passwd_run($1)
+	')
+')
diff -Nur nsaserefpolicy/policy/modules/services/rhnsd.te serefpolicy-3.7.19/policy/modules/services/rhnsd.te
--- nsaserefpolicy/policy/modules/services/rhnsd.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rhnsd.te	2013-03-15 11:40:15.081152206 +0100
@@ -0,0 +1,43 @@
+policy_module(rhnsd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type rhnsd_t;
+type rhnsd_exec_t;
+init_daemon_domain(rhnsd_t, rhnsd_exec_t)
+
+type rhnsd_var_run_t;
+files_pid_file(rhnsd_var_run_t)
+
+type rhnsd_initrc_exec_t;
+init_script_file(rhnsd_initrc_exec_t)
+
+########################################
+#
+# rhnsd local policy
+#
+
+allow rhnsd_t self:capability { kill };
+allow rhnsd_t self:process { fork signal };
+allow rhnsd_t self:fifo_file rw_fifo_file_perms;
+allow rhnsd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(rhnsd_t, rhnsd_var_run_t, rhnsd_var_run_t)
+manage_files_pattern(rhnsd_t, rhnsd_var_run_t, rhnsd_var_run_t)
+files_pid_filetrans(rhnsd_t, rhnsd_var_run_t, { dir file })
+
+files_read_etc_files(rhnsd_t)
+
+logging_send_syslog_msg(rhnsd_t)
+
+optional_policy(`
+	# execute rhn_check
+	rpm_domtrans(rhnsd_t)
+')
+
+optional_policy(`
+	unconfined_domain(rhnsd_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/rhsmcertd.fc serefpolicy-3.7.19/policy/modules/services/rhsmcertd.fc
--- nsaserefpolicy/policy/modules/services/rhsmcertd.fc	2013-03-15 11:41:14.169153554 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rhsmcertd.fc	2013-03-15 11:40:14.689152197 +0100
@@ -2,7 +2,6 @@
 /etc/rc\.d/init\.d/rhsmcertd	--	gen_context(system_u:object_r:rhsmcertd_initrc_exec_t,s0)
 
 /usr/bin/rhsmcertd		--	gen_context(system_u:object_r:rhsmcertd_exec_t,s0)
-/usr/sbin/rhnsd                        --      gen_context(system_u:object_r:rhsmcertd_exec_t,s0)
 
 /var/lib/rhsm(/.*)?		gen_context(system_u:object_r:rhsmcertd_var_lib_t,s0)
 
@@ -11,4 +10,3 @@
 /var/lock/subsys/rhsmcertd	--	gen_context(system_u:object_r:rhsmcertd_lock_t,s0)
 
 /var/run/rhsm(/.*)?		gen_context(system_u:object_r:rhsmcertd_var_run_t,s0)
-/var/run/rhnsd\.pid            --      gen_context(system_u:object_r:rhsmcertd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/rhsmcertd.te serefpolicy-3.7.19/policy/modules/services/rhsmcertd.te
--- nsaserefpolicy/policy/modules/services/rhsmcertd.te	2013-03-15 11:41:15.316153580 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rhsmcertd.te	2013-03-15 11:40:16.874152247 +0100
@@ -46,20 +46,30 @@
 
 manage_dirs_pattern(rhsmcertd_t, rhsmcertd_var_run_t, rhsmcertd_var_run_t)
 manage_files_pattern(rhsmcertd_t, rhsmcertd_var_run_t, rhsmcertd_var_run_t)
+files_pid_filetrans(rhsmcertd_t, rhsmcertd_var_run_t, { file dir })
 
+kernel_read_network_state(rhsmcertd_t)
 kernel_read_system_state(rhsmcertd_t)
 
 corecmd_exec_bin(rhsmcertd_t)
 
+dev_read_rand(rhsmcertd_t)
 dev_read_urand(rhsmcertd_t)
 
 files_read_etc_files(rhsmcertd_t)
 files_read_usr_files(rhsmcertd_t)
+files_list_tmp(rhsmcertd_t)
+
+logging_send_syslog_msg(rhsmcertd_t)
 
 miscfiles_read_localization(rhsmcertd_t)
 miscfiles_read_certs(rhsmcertd_t)
 
 optional_policy(`
+	rpm_read_db(rhsmcertd_t)
+')
+
+optional_policy(`
     sysnet_dns_name_resolve(rhsmcertd_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/services/ricci.fc serefpolicy-3.7.19/policy/modules/services/ricci.fc
--- nsaserefpolicy/policy/modules/services/ricci.fc	2013-03-15 11:41:15.262153579 +0100
+++ serefpolicy-3.7.19/policy/modules/services/ricci.fc	2013-03-15 11:40:16.714152243 +0100
@@ -12,7 +12,7 @@
 
 /var/lib/ricci(/.*)?			gen_context(system_u:object_r:ricci_var_lib_t,s0)
 
-/var/log/clumond\.log 		--	gen_context(system_u:object_r:ricci_modcluster_var_log_t,s0)
+/var/log/clumond\.log.*			--	gen_context(system_u:object_r:ricci_modcluster_var_log_t,s0)
 
 /var/run/clumond\.sock 		-s	gen_context(system_u:object_r:ricci_modcluster_var_run_t,s0)
 /var/run/modclusterd\.pid	--	gen_context(system_u:object_r:ricci_modcluster_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/ricci.te serefpolicy-3.7.19/policy/modules/services/ricci.te
--- nsaserefpolicy/policy/modules/services/ricci.te	2013-03-15 11:41:14.201153555 +0100
+++ serefpolicy-3.7.19/policy/modules/services/ricci.te	2013-03-15 11:40:14.744152198 +0100
@@ -399,6 +399,8 @@
 files_search_usr(ricci_modrpm_t)
 files_read_etc_files(ricci_modrpm_t)
 
+logging_send_syslog_msg(ricci_modrpm_t)
+
 miscfiles_read_localization(ricci_modrpm_t)
 
 optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/services/rpc.fc serefpolicy-3.7.19/policy/modules/services/rpc.fc
--- nsaserefpolicy/policy/modules/services/rpc.fc	2013-03-15 11:41:14.922153571 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rpc.fc	2013-03-15 11:40:16.049152228 +0100
@@ -15,10 +15,11 @@
 #
 # /usr
 #
+/usr/sbin/rpc\..*   	--  gen_context(system_u:object_r:rpcd_exec_t,s0)
 /usr/sbin/rpc\.idmapd	--	gen_context(system_u:object_r:rpcd_exec_t,s0)
-/usr/sbin/rpc\.gssd	--	gen_context(system_u:object_r:gssd_exec_t,s0)
+/usr/sbin/rpc\.gssd		--	gen_context(system_u:object_r:gssd_exec_t,s0)
 /usr/sbin/rpc\.mountd	--	gen_context(system_u:object_r:nfsd_exec_t,s0)
-/usr/sbin/rpc\.nfsd	--	gen_context(system_u:object_r:nfsd_exec_t,s0)
+/usr/sbin/rpc\.nfsd		--	gen_context(system_u:object_r:nfsd_exec_t,s0)
 /usr/sbin/rpc\.rquotad	--	gen_context(system_u:object_r:rpcd_exec_t,s0)
 /usr/sbin/rpc\.svcgssd	--	gen_context(system_u:object_r:gssd_exec_t,s0)
 
diff -Nur nsaserefpolicy/policy/modules/services/rpc.te serefpolicy-3.7.19/policy/modules/services/rpc.te
--- nsaserefpolicy/policy/modules/services/rpc.te	2013-03-15 11:41:15.695153589 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rpc.te	2013-03-15 11:40:18.118152275 +0100
@@ -88,6 +88,8 @@
 
 storage_getattr_fixed_disk_dev(rpcd_t)
 
+init_read_utmp(rpcd_t)
+
 selinux_dontaudit_read_fs(rpcd_t)
 
 miscfiles_read_certs(rpcd_t)
@@ -219,6 +221,7 @@
 fs_list_rpc(gssd_t)
 fs_rw_rpc_sockets(gssd_t)
 fs_read_rpc_files(gssd_t)
+fs_read_nfsd_files(gssd_t)
 
 fs_list_inotifyfs(gssd_t)
 files_list_tmp(gssd_t)
diff -Nur nsaserefpolicy/policy/modules/services/rsync.fc serefpolicy-3.7.19/policy/modules/services/rsync.fc
--- nsaserefpolicy/policy/modules/services/rsync.fc	2013-03-15 11:41:13.781153545 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rsync.fc	2013-03-15 11:40:13.039152159 +0100
@@ -2,6 +2,6 @@
 
 /usr/bin/rsync		--	gen_context(system_u:object_r:rsync_exec_t,s0)
 
-/var/log/rsync\.log	--	gen_context(system_u:object_r:rsync_log_t,s0)
+/var/log/rsync\.log.*	--	gen_context(system_u:object_r:rsync_log_t,s0)
 
 /var/run/rsyncd\.lock	--	gen_context(system_u:object_r:rsync_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/rsync.te serefpolicy-3.7.19/policy/modules/services/rsync.te
--- nsaserefpolicy/policy/modules/services/rsync.te	2013-03-15 11:41:14.012153550 +0100
+++ serefpolicy-3.7.19/policy/modules/services/rsync.te	2013-03-15 11:40:14.424152191 +0100
@@ -46,6 +46,7 @@
 type rsync_t;
 type rsync_exec_t;
 application_executable_file(rsync_exec_t)
+init_daemon_domain(rsync_t, rsync_exec_t)
 role system_r types rsync_t;
 
 type rsync_etc_t;
@@ -142,16 +143,17 @@
 	inetd_service_domain(rsync_t, rsync_exec_t)
 ')
 
-tunable_policy(`rsync_use_cifs',`
-       fs_list_cifs(rsync_t)
-       fs_read_cifs_files(rsync_t)
-       fs_read_cifs_symlinks(rsync_t)
+tunable_policy(`rsync_use_nfs',`
+    fs_list_auto_mountpoints(rsync_t)
+    fs_manage_nfs_dirs(rsync_t)
+    fs_manage_nfs_files(rsync_t)
+    fs_manage_nfs_symlinks(rsync_t)
 ')
 
-tunable_policy(`rsync_use_nfs',`
-       fs_list_nfs(rsync_t)
-       fs_read_nfs_files(rsync_t)
-       fs_read_nfs_symlinks(rsync_t)
+tunable_policy(`rsync_use_cifs',`
+    fs_manage_cifs_dirs(rsync_t)
+    fs_manage_cifs_files(rsync_t)
+    fs_manage_cifs_symlinks(rsync_t)
 ')
 
 tunable_policy(`rsync_export_all_ro',`
diff -Nur nsaserefpolicy/policy/modules/services/samba.fc serefpolicy-3.7.19/policy/modules/services/samba.fc
--- nsaserefpolicy/policy/modules/services/samba.fc	2013-03-15 11:41:13.574153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/samba.fc	2013-03-15 11:40:12.448152146 +0100
@@ -31,6 +31,8 @@
 /var/cache/samba(/.*)?			gen_context(system_u:object_r:samba_var_t,s0)
 /var/cache/samba/winbindd_privileged(/.*)? gen_context(system_u:object_r:winbind_var_run_t,s0)
 
+/var/nmbd(/.*)?		gen_context(system_u:object_r:samba_var_t,s0)
+
 /var/lib/samba(/.*)?			gen_context(system_u:object_r:samba_var_t,s0)
 /var/lib/samba/winbindd_privileged(/.*)? gen_context(system_u:object_r:winbind_var_run_t,s0)
 
@@ -39,6 +41,7 @@
 /var/run/nmbd\.pid    			--  gen_context(system_u:object_r:nmbd_var_run_t,s0)
 /var/run/smbd\.pid    			--  gen_context(system_u:object_r:smbd_var_run_t,s0)
 
+/var/run/samba(/.*)?            gen_context(system_u:object_r:smbd_var_run_t,s0)
 /var/run/samba/brlock\.tdb		--	gen_context(system_u:object_r:smbd_var_run_t,s0)
 /var/run/samba/connections\.tdb	--	gen_context(system_u:object_r:smbd_var_run_t,s0)
 /var/run/samba/gencache\.tdb	--	gen_context(system_u:object_r:smbd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/samba.if serefpolicy-3.7.19/policy/modules/services/samba.if
--- nsaserefpolicy/policy/modules/services/samba.if	2013-03-15 11:41:13.575153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/samba.if	2013-03-15 11:40:12.459152146 +0100
@@ -659,6 +659,26 @@
         allow $1 nmbd_t:process signal;
 ')
 
+#######################################
+## <summary>
+##  Connect to nmbd.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`samba_stream_connect_nmbd',`
+    gen_require(`
+        type nmbd_t, nmbd_var_run_t, samba_var_t;
+    ')
+
+    samba_search_pid($1)
+    stream_connect_pattern($1, nmbd_var_run_t, nmbd_var_run_t, nmbd_t)
+    stream_connect_pattern($1, samba_var_t, samba_var_t, nmbd_t)
+')
+
 ######################################
 ## <summary>
 ##     Allow domain to signal samba
@@ -738,6 +758,25 @@
 
 ')
 
+#######################################
+## <summary>
+##  Search the samba pid directory.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`samba_search_pid',`
+    gen_require(`
+        type smbd_var_run_t;
+    ')
+
+    files_search_pids($1)
+    allow $1 smbd_var_run_t:dir search_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
diff -Nur nsaserefpolicy/policy/modules/services/samba.te serefpolicy-3.7.19/policy/modules/services/samba.te
--- nsaserefpolicy/policy/modules/services/samba.te	2013-03-15 11:41:13.591153541 +0100
+++ serefpolicy-3.7.19/policy/modules/services/samba.te	2013-03-15 11:40:12.523152147 +0100
@@ -33,6 +33,14 @@
 
 ## <desc>
 ## <p>
+## Allow samba to act as a portmapper
+## 
+## </p>
+## </desc>
+gen_tunable(samba_portmapper, false)
+
+## <desc>
+## <p>
 ## Allow samba to share users home directories.
 ## </p>
 ## </desc>
@@ -181,7 +189,9 @@
 
 manage_dirs_pattern(samba_net_t, samba_var_t, samba_var_t)
 manage_files_pattern(samba_net_t, samba_var_t, samba_var_t)
+manage_sock_files_pattern(samba_net_t, samba_var_t, samba_var_t)
 manage_lnk_files_pattern(samba_net_t, samba_var_t, samba_var_t)
+files_var_filetrans(samba_net_t, samba_var_t, dir)
 
 kernel_read_proc_symlinks(samba_net_t)
 kernel_read_system_state(samba_net_t)
@@ -251,7 +261,7 @@
 allow smbd_t self:unix_stream_socket { create_stream_socket_perms connectto };
 
 allow smbd_t nmbd_t:process { signal signull };
-
+allow smbd_t nmbd_t:unix_stream_socket connectto;
 allow smbd_t nmbd_var_run_t:file rw_file_perms;
 
 allow smbd_t samba_etc_t:file { rw_file_perms setattr };
@@ -273,6 +283,7 @@
 manage_files_pattern(smbd_t, samba_var_t, samba_var_t)
 manage_lnk_files_pattern(smbd_t, samba_var_t, samba_var_t)
 manage_sock_files_pattern(smbd_t, samba_var_t, samba_var_t)
+files_var_filetrans(smbd_t, samba_var_t, dir)
 
 allow smbd_t smbcontrol_t:process { signal signull };
 
@@ -393,6 +404,11 @@
 	allow smbd_t self:passwd passwd;
 ')
 
+tunable_policy(`samba_portmapper',`
+	corenet_tcp_bind_epmap_port(smbd_t)
+	corenet_tcp_bind_all_unreserved_ports(smbd_t)
+')
+
 tunable_policy(`samba_enable_home_dirs',`
 	userdom_manage_user_home_content(smbd_t)
 ')
@@ -508,6 +524,10 @@
 manage_files_pattern(nmbd_t, samba_log_t, samba_log_t)
 
 manage_files_pattern(nmbd_t, samba_var_t, samba_var_t)
+manage_dirs_pattern(nmbd_t, samba_var_t, samba_var_t)
+manage_lnk_files_pattern(nmbd_t, samba_var_t, samba_var_t)
+manage_sock_files_pattern(nmbd_t, samba_var_t, samba_var_t)
+files_var_filetrans(nmbd_t, samba_var_t, dir)
 
 allow nmbd_t smbcontrol_t:process signal;
 
@@ -633,7 +653,10 @@
 allow smbmount_t samba_secrets_t:file manage_file_perms;
 
 manage_files_pattern(smbmount_t, samba_var_t, samba_var_t)
-manage_lnk_files_pattern(smbmount_t, samba_var_t, samba_var_t)
+manage_dirs_pattern(samba_net_t, samba_var_t, samba_var_t)
+manage_lnk_files_pattern(samba_net_t, samba_var_t, samba_var_t)
+manage_sock_files_pattern(samba_net_t, samba_var_t, samba_var_t)
+files_var_filetrans(smbmount_t, samba_var_t, dir)
 files_list_var_lib(smbmount_t)
 
 kernel_read_system_state(smbmount_t)
@@ -722,7 +745,11 @@
 
 manage_files_pattern(swat_t, samba_etc_t, samba_secrets_t)
 
+manage_dirs_pattern(swat_t, samba_var_t, samba_var_t)
 manage_files_pattern(swat_t, samba_var_t, samba_var_t)
+manage_lnk_files_pattern(swat_t, samba_var_t, samba_var_t)
+manage_sock_files_pattern(swat_t, samba_var_t, samba_var_t)
+files_var_filetrans(swat_t, samba_var_t, dir)
 files_list_var_lib(swat_t)
 
 allow swat_t smbd_exec_t:file mmap_file_perms ;
@@ -837,7 +864,10 @@
 manage_dirs_pattern(winbind_t, samba_var_t, samba_var_t)
 manage_files_pattern(winbind_t, samba_var_t, samba_var_t)
 manage_lnk_files_pattern(winbind_t, samba_var_t, samba_var_t)
+manage_sock_files_pattern(winbind_t, samba_var_t, samba_var_t)
+files_var_filetrans(winbind_t, samba_var_t, dir)
 files_list_var_lib(winbind_t)
+allow winbind_t nmbd_t:unix_stream_socket connectto;
 
 rw_files_pattern(winbind_t, smbd_tmp_t, smbd_tmp_t)
 
@@ -908,6 +938,10 @@
 userdom_manage_user_home_content_pipes(winbind_t)
 userdom_manage_user_home_content_sockets(winbind_t)
 userdom_user_home_dir_filetrans_user_home_content(winbind_t, { dir file lnk_file fifo_file sock_file })
+# /var/run/samba/krb5cc_samba
+manage_files_pattern(winbind_t, smbd_var_run_t, smbd_var_run_t)
+manage_dirs_pattern(winbind_t, smbd_var_run_t, smbd_var_run_t)
+manage_sock_files_pattern(winbind_t, smbd_var_run_t, smbd_var_run_t)
 
 optional_policy(`
 	ctdbd_stream_connect(winbind_t)
diff -Nur nsaserefpolicy/policy/modules/services/sanlock.fc serefpolicy-3.7.19/policy/modules/services/sanlock.fc
--- nsaserefpolicy/policy/modules/services/sanlock.fc	2013-03-15 11:41:14.179153554 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sanlock.fc	2013-03-15 11:40:14.697152197 +0100
@@ -3,6 +3,6 @@
 
 /var/run/sanlock(/.*)?			gen_context(system_u:object_r:sanlock_var_run_t,s0)
 
-/var/log/sanlock\.log			gen_context(system_u:object_r:sanlock_log_t,s0)
+/var/log/sanlock\.log.*			gen_context(system_u:object_r:sanlock_log_t,s0)
 
 /usr/sbin/sanlock		--	gen_context(system_u:object_r:sanlock_exec_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/sanlock.te serefpolicy-3.7.19/policy/modules/services/sanlock.te
--- nsaserefpolicy/policy/modules/services/sanlock.te	2013-03-15 11:41:13.576153540 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sanlock.te	2013-05-21 12:55:08.317903808 +0200
@@ -19,6 +19,13 @@
 ## </desc>
 gen_tunable(sanlock_use_samba, false)
 
+## <desc>
+## <p>
+## Allow sanlock to read/write fuse files
+## </p>
+## </desc>
+gen_tunable(sanlock_use_fusefs, false)
+
 type sanlock_t;
 type sanlock_exec_t;
 init_daemon_domain(sanlock_t, sanlock_exec_t)
@@ -66,6 +73,7 @@
 
 storage_raw_rw_fixed_disk(sanlock_t)
 
+dev_read_rand(sanlock_t)
 dev_read_urand(sanlock_t)
 
 auth_use_nsswitch(sanlock_t)
@@ -77,6 +85,13 @@
 
 miscfiles_read_localization(sanlock_t)
 
+tunable_policy(`sanlock_use_fusefs',`
+    fs_manage_fusefs_dirs(sanlock_t)
+    fs_manage_fusefs_files(sanlock_t)
+    fs_read_fusefs_symlinks(sanlock_t)
+    fs_getattr_fusefs(sanlock_t)
+')
+
 tunable_policy(`sanlock_use_nfs',`
     fs_manage_nfs_dirs(sanlock_t)
     fs_manage_nfs_files(sanlock_t)
@@ -97,6 +112,7 @@
 
 optional_policy(`
 	virt_kill_svirt(sanlock_t)
+    virt_kill(sanlock_t)
 	virt_manage_lib_files(sanlock_t)
 	virt_signal_svirt(sanlock_t)
 ')
diff -Nur nsaserefpolicy/policy/modules/services/sendmail.fc serefpolicy-3.7.19/policy/modules/services/sendmail.fc
--- nsaserefpolicy/policy/modules/services/sendmail.fc	2013-03-15 11:41:14.751153567 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sendmail.fc	2013-03-15 11:40:15.643152218 +0100
@@ -1,7 +1,7 @@
 
 /etc/rc\.d/init\.d/sendmail --  gen_context(system_u:object_r:sendmail_initrc_exec_t,s0)
 
-/var/log/sendmail\.st		--	gen_context(system_u:object_r:sendmail_log_t,s0)
+/var/log/sendmail\.st.*		--	gen_context(system_u:object_r:sendmail_log_t,s0)
 /var/log/mail(/.*)?			gen_context(system_u:object_r:sendmail_log_t,s0)
 
 /var/run/sendmail\.pid		--	gen_context(system_u:object_r:sendmail_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/sendmail.te serefpolicy-3.7.19/policy/modules/services/sendmail.te
--- nsaserefpolicy/policy/modules/services/sendmail.te	2013-03-15 11:41:14.075153552 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sendmail.te	2013-03-15 11:40:14.534152193 +0100
@@ -181,6 +181,11 @@
 ')
 
 optional_policy(`
+	openshift_dontaudit_rw_inherited_fifo_files(sendmail_t)
+	openshift_rw_inherited_content(sendmail_t)
+')
+
+optional_policy(`
 	sasl_connect(sendmail_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/services/sensord.fc serefpolicy-3.7.19/policy/modules/services/sensord.fc
--- nsaserefpolicy/policy/modules/services/sensord.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sensord.fc	2013-03-15 11:40:18.831152291 +0100
@@ -0,0 +1,3 @@
+/usr/sbin/sensord		--	gen_context(system_u:object_r:sensord_exec_t,s0)
+
+/var/run/sensord\.pid      --  gen_context(system_u:object_r:sensord_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/sensord.if serefpolicy-3.7.19/policy/modules/services/sensord.if
--- nsaserefpolicy/policy/modules/services/sensord.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sensord.if	2013-03-15 11:40:16.386152235 +0100
@@ -0,0 +1,44 @@
+
+## <summary>Sensor information logging daemon</summary>
+
+########################################
+## <summary>
+##	Execute sensord in the sensord domain.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`sensord_domtrans',`
+	gen_require(`
+		type sensord_t, sensord_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, sensord_exec_t, sensord_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an sensord environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sensord_admin',`
+	gen_require(`
+		type sensord_t;
+	')
+
+	allow $1 sensord_t:process { ptrace signal_perms };
+	ps_process_pattern($1, sensord_t)
+
+	sensord_systemctl($1)
+	admin_pattern($1, sensord_unit_file_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/sensord.te serefpolicy-3.7.19/policy/modules/services/sensord.te
--- nsaserefpolicy/policy/modules/services/sensord.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sensord.te	2013-03-15 11:40:15.381152212 +0100
@@ -0,0 +1,38 @@
+policy_module(sensord, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type sensord_t;
+type sensord_exec_t;
+init_daemon_domain(sensord_t, sensord_exec_t)
+
+type sensord_var_run_t;
+files_pid_file(sensord_var_run_t)
+
+########################################
+#
+# sensord local policy
+#
+
+allow sensord_t self:fifo_file rw_fifo_file_perms;
+allow sensord_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(sensord_t, sensord_var_run_t, sensord_var_run_t)
+files_pid_filetrans(sensord_t, sensord_var_run_t, { file })
+
+domain_use_interactive_fds(sensord_t)
+
+dev_read_sysfs(sensord_t)
+
+files_read_etc_files(sensord_t)
+
+logging_send_syslog_msg(sensord_t)
+
+miscfiles_read_localization(sensord_t)
+
+optional_policy(`
+	unconfined_domain(sensord_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/setroubleshoot.te serefpolicy-3.7.19/policy/modules/services/setroubleshoot.te
--- nsaserefpolicy/policy/modules/services/setroubleshoot.te	2013-03-15 11:41:14.185153554 +0100
+++ serefpolicy-3.7.19/policy/modules/services/setroubleshoot.te	2013-03-15 11:40:14.706152197 +0100
@@ -63,6 +63,7 @@
 kernel_read_network_state(setroubleshootd_t)
 kernel_dontaudit_list_all_proc(setroubleshootd_t)
 kernel_read_unlabeled_state(setroubleshootd_t)
+kernel_read_irq_sysctls(setroubleshootd_t)
 
 corecmd_exec_bin(setroubleshootd_t)
 corecmd_exec_shell(setroubleshootd_t)
diff -Nur nsaserefpolicy/policy/modules/services/slpd.fc serefpolicy-3.7.19/policy/modules/services/slpd.fc
--- nsaserefpolicy/policy/modules/services/slpd.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/slpd.fc	2013-03-15 11:40:15.806152222 +0100
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/slpd	--	gen_context(system_u:object_r:slpd_initrc_exec_t,s0)
+
+/usr/sbin/slpd		--	gen_context(system_u:object_r:slpd_exec_t,s0)
+
+/var/log/slpd\.log.*	     --  gen_context(system_u:object_r:slpd_var_log_t,s0)
+
+/var/run/slpd\.pid      --  gen_context(system_u:object_r:slpd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/slpd.if serefpolicy-3.7.19/policy/modules/services/slpd.if
--- nsaserefpolicy/policy/modules/services/slpd.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/slpd.if	2013-03-15 11:40:12.640152150 +0100
@@ -0,0 +1,75 @@
+
+## <summary>OpenSLP server daemon to dynamically register services.</summary>
+
+########################################
+## <summary>
+##	Transition to slpd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`slpd_domtrans',`
+	gen_require(`
+		type slpd_t, slpd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, slpd_exec_t, slpd_t)
+')
+
+########################################
+## <summary>
+##	Execute slpd server in the slpd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`slpd_initrc_domtrans',`
+	gen_require(`
+		type slpd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, slpd_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an slpd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`slpd_admin',`
+	gen_require(`
+		type slpd_t;
+		type slpd_initrc_exec_t;
+	')
+
+	allow $1 slpd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, slpd_t)
+
+	slpd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 slpd_initrc_exec_t system_r;
+	allow $2 system_r;
+	optional_policy(`
+		systemd_passwd_agent_exec($1)
+		systemd_read_fifo_file_passwd_run($1)
+	')
+')
diff -Nur nsaserefpolicy/policy/modules/services/slpd.te serefpolicy-3.7.19/policy/modules/services/slpd.te
--- nsaserefpolicy/policy/modules/services/slpd.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/slpd.te	2013-03-15 11:40:17.553152262 +0100
@@ -0,0 +1,56 @@
+policy_module(slpd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type slpd_t;
+type slpd_exec_t;
+init_daemon_domain(slpd_t, slpd_exec_t)
+
+type slpd_initrc_exec_t;
+init_script_file(slpd_initrc_exec_t)
+ 
+type slpd_var_log_t;
+logging_log_file(slpd_var_log_t)
+
+type slpd_var_run_t;
+files_pid_file(slpd_var_run_t)
+
+########################################
+#
+# slpd local policy
+#
+
+allow slpd_t self:capability { kill setgid setuid };
+allow slpd_t self:process { fork signal };
+allow slpd_t self:fifo_file rw_fifo_file_perms;
+allow slpd_t self:tcp_socket { create_socket_perms listen };
+allow slpd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(slpd_t, slpd_var_log_t, slpd_var_log_t)
+logging_log_filetrans(slpd_t, slpd_var_log_t, { file })
+
+manage_files_pattern(slpd_t, slpd_var_run_t, slpd_var_run_t)
+files_pid_filetrans(slpd_t, slpd_var_run_t, { file })
+
+corenet_all_recvfrom_netlabel(slpd_t)
+corenet_tcp_bind_generic_node(slpd_t)
+corenet_udp_bind_generic_node(slpd_t)
+corenet_tcp_bind_all_ports(slpd_t)
+corenet_udp_bind_all_ports(slpd_t)
+
+domain_use_interactive_fds(slpd_t)
+
+files_read_etc_files(slpd_t)
+
+auth_use_nsswitch(slpd_t)
+
+miscfiles_read_localization(slpd_t)
+
+sysnet_dns_name_resolve(slpd_t)
+
+optional_policy(`
+	unconfined_domain(slpd_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/snmp.fc serefpolicy-3.7.19/policy/modules/services/snmp.fc
--- nsaserefpolicy/policy/modules/services/snmp.fc	2013-03-15 11:41:15.664153588 +0100
+++ serefpolicy-3.7.19/policy/modules/services/snmp.fc	2013-03-18 14:10:12.654613459 +0100
@@ -14,9 +14,10 @@
 /var/agentx(/.*)?		gen_context(system_u:object_r:snmpd_var_lib_t,s0)
 
 /var/lib/net-snmp(/.*)?		gen_context(system_u:object_r:snmpd_var_lib_t,s0)
+/var/spool/snmptt(/.*)?		gen_context(system_u:object_r:snmpd_var_lib_t,s0)
 /var/lib/snmp(/.*)?		gen_context(system_u:object_r:snmpd_var_lib_t,s0)
 
-/var/log/snmpd\.log	--	gen_context(system_u:object_r:snmpd_log_t,s0)
+/var/log/snmpd\.log.*	--	gen_context(system_u:object_r:snmpd_log_t,s0)
 
 /var/net-snmp(/.*)		gen_context(system_u:object_r:snmpd_var_lib_t,s0)
 
diff -Nur nsaserefpolicy/policy/modules/services/snmp.te serefpolicy-3.7.19/policy/modules/services/snmp.te
--- nsaserefpolicy/policy/modules/services/snmp.te	2013-03-15 11:41:15.115153575 +0100
+++ serefpolicy-3.7.19/policy/modules/services/snmp.te	2013-03-15 11:40:16.317152234 +0100
@@ -134,6 +134,10 @@
 ')
 
 optional_policy(`
+    corosync_stream_connect(snmpd_t)
+')
+
+optional_policy(`
 	cups_read_rw_config(snmpd_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/services/spamassassin.fc serefpolicy-3.7.19/policy/modules/services/spamassassin.fc
--- nsaserefpolicy/policy/modules/services/spamassassin.fc	2013-03-15 11:41:14.439153560 +0100
+++ serefpolicy-3.7.19/policy/modules/services/spamassassin.fc	2013-03-15 11:40:15.183152208 +0100
@@ -17,8 +17,8 @@
 /var/lib/spamassassin(/.*)?	gen_context(system_u:object_r:spamd_var_lib_t,s0)
 /var/lib/spamassassin/compiled(/.*)?	gen_context(system_u:object_r:spamd_compiled_t,s0)
 
-/var/log/spamd\.log	--	gen_context(system_u:object_r:spamd_log_t,s0)
-/var/log/mimedefang	--	gen_context(system_u:object_r:spamd_log_t,s0)
+/var/log/spamd\.log.*	--	gen_context(system_u:object_r:spamd_log_t,s0)
+/var/log/mimedefang.*	--	gen_context(system_u:object_r:spamd_log_t,s0)
 
 /var/run/spamassassin(/.*)?	gen_context(system_u:object_r:spamd_var_run_t,s0)
 
@@ -36,7 +36,7 @@
 /usr/bin/razor.*    --  gen_context(system_u:object_r:spamc_exec_t,s0)
 
 /var/lib/razor(/.*)?        gen_context(system_u:object_r:spamd_var_lib_t,s0)
-/var/log/razor-agent\.log --    gen_context(system_u:object_r:spamd_log_t,s0)
+/var/log/razor-agent\.log.*	--    gen_context(system_u:object_r:spamd_log_t,s0)
 
 /etc/pyzor(/.*)?        gen_context(system_u:object_r:spamd_etc_t, s0)
 /etc/rc\.d/init\.d/pyzord   --  gen_context(system_u:object_r:spamd_initrc_exec_t,s0)
@@ -50,4 +50,4 @@
 /usr/bin/pyzord        --  gen_context(system_u:object_r:spamd_exec_t,s0)
 
 /var/lib/pyzord(/.*)?       gen_context(system_u:object_r:spamd_var_lib_t,s0)
-/var/log/pyzord\.log    --  gen_context(system_u:object_r:spamd_log_t,s0)
+/var/log/pyzord\.log.*	   --  gen_context(system_u:object_r:spamd_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/spamassassin.te serefpolicy-3.7.19/policy/modules/services/spamassassin.te
--- nsaserefpolicy/policy/modules/services/spamassassin.te	2013-03-15 11:41:14.482153561 +0100
+++ serefpolicy-3.7.19/policy/modules/services/spamassassin.te	2013-03-15 11:40:15.253152210 +0100
@@ -395,6 +395,9 @@
 allow spamd_t self:tcp_socket create_stream_socket_perms;
 allow spamd_t self:udp_socket create_socket_perms;
 
+# needed by razor
+rw_files_pattern(spamd_t, spamd_etc_t, spamd_etc_t)
+
 can_exec(spamd_t, spamd_compiled_t)
 manage_dirs_pattern(spamd_t, spamd_compiled_t, spamd_compiled_t)
 manage_files_pattern(spamd_t, spamd_compiled_t, spamd_compiled_t)
diff -Nur nsaserefpolicy/policy/modules/services/ssh.fc serefpolicy-3.7.19/policy/modules/services/ssh.fc
--- nsaserefpolicy/policy/modules/services/ssh.fc	2013-03-15 11:41:13.441153537 +0100
+++ serefpolicy-3.7.19/policy/modules/services/ssh.fc	2013-03-15 11:40:12.188152140 +0100
@@ -26,3 +26,8 @@
 
 /root/\.ssh(/.*)?			gen_context(system_u:object_r:ssh_home_t,s0)
 /root/\.shosts				gen_context(system_u:object_r:ssh_home_t,s0)
+
+/var/lib/stickshift/[^/]+/\.ssh(/.*)?        gen_context(system_u:object_r:ssh_home_t,s0)
+/var/lib/openshift/[^/]+/\.ssh(/.*)?        gen_context(system_u:object_r:ssh_home_t,s0)
+/var/lib/pgsql/\.ssh(/.*)?      gen_context(system_u:object_r:ssh_home_t,s0)
+
diff -Nur nsaserefpolicy/policy/modules/services/ssh.if serefpolicy-3.7.19/policy/modules/services/ssh.if
--- nsaserefpolicy/policy/modules/services/ssh.if	2013-03-15 11:41:15.167153577 +0100
+++ serefpolicy-3.7.19/policy/modules/services/ssh.if	2013-03-15 11:40:16.408152236 +0100
@@ -181,7 +181,7 @@
 	type $1_var_run_t;
 	files_pid_file($1_var_run_t)
 
-	allow $1_t self:capability { kill sys_chroot sys_nice sys_resource chown dac_override fowner fsetid net_admin setgid setuid sys_tty_config };
+	allow $1_t self:capability { sys_admin kill sys_chroot sys_nice sys_resource chown dac_override fowner fsetid net_admin setgid setuid sys_tty_config };
 	allow $1_t self:fifo_file rw_fifo_file_perms;
 	allow $1_t self:process { signal getcap getsched setsched setrlimit setexec };
 	allow $1_t self:tcp_socket create_stream_socket_perms;
@@ -940,6 +940,43 @@
 	dontaudit $1 ssh_home_t:dir search_dir_perms;
 ')
 
+#######################################
+## <summary>
+##      Do not audit attempts to read and
+##      write the sshd pty type.  
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`ssh_dontaudit_use_ptys',`
+        gen_require(`
+                type sshd_devpts_t;
+        ')
+
+        dontaudit $1 sshd_devpts_t:chr_file { getattr read write ioctl };
+')
+
+#######################################
+## <summary>
+##      Read and write inherited sshd pty type.  
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`ssh_use_ptys',`
+        gen_require(`
+                type sshd_devpts_t;
+        ')
+
+        allow $1 sshd_devpts_t:chr_file { open getattr read write ioctl };
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
Binary files nsaserefpolicy/policy/modules/services/.ssh.if.swp and serefpolicy-3.7.19/policy/modules/services/.ssh.if.swp differ
diff -Nur nsaserefpolicy/policy/modules/services/ssh.te serefpolicy-3.7.19/policy/modules/services/ssh.te
--- nsaserefpolicy/policy/modules/services/ssh.te	2013-03-15 11:41:13.537153539 +0100
+++ serefpolicy-3.7.19/policy/modules/services/ssh.te	2013-05-30 11:31:26.488838077 +0200
@@ -28,6 +28,20 @@
 ## </desc>
 gen_tunable(ssh_chroot_rw_homedirs, false)
 
+## <desc>
+## <p>
+## Allow ssh with chroot env to manage all files 
+## </p>
+## </desc>
+gen_tunable(ssh_chroot_full_access,false)
+
+## <desc>
+## <p>
+## Allow ssh with chroot env to apache content
+## </p>
+## </desc>
+gen_tunable(ssh_chroot_manage_apache_content,false)
+
 type chroot_user_t;
 domain_type(chroot_user_t)
 role system_r types chroot_user_t;
@@ -281,6 +295,9 @@
 term_setattr_all_ttys(sshd_t)
 term_relabelto_all_ptys(sshd_t)
 
+fs_search_cgroup_dirs(sshd_t)
+fs_rw_cgroup_files(sshd_t)
+
 # for X forwarding
 corenet_tcp_bind_xserver_port(sshd_t)
 corenet_sendrecv_xserver_server_packets(sshd_t)
@@ -292,7 +309,6 @@
 userdom_spec_domtrans_unpriv_users(sshd_t)
 userdom_signal_unpriv_users(sshd_t)
 userdom_dyntransition_unpriv_users(sshd_t)
-userdom_dyntransition_admin_users(sshd_t)
 
 tunable_policy(`ssh_sysadm_login',`
 	# Relabel and access ptys created by sshd
@@ -301,6 +317,7 @@
 	# some versions of sshd on the new SE Linux require setattr
 	userdom_signal_all_users(sshd_t)
 	userdom_spec_domtrans_all_users(sshd_t)
+	userdom_dyntransition_admin_users(sshd_t)
 ')
 
 optional_policy(`
@@ -322,6 +339,10 @@
 ')
 
 optional_policy(`
+	mysql_search_db(sshd_t)
+')
+
+optional_policy(`
 	ssh_dyntransition_chroot_user(sshd_t)
 ')
 
@@ -338,6 +359,10 @@
 ')
 
 optional_policy(`
+	postgresql_search_db(sshd_t)
+')
+
+optional_policy(`
 	rpm_use_script_fds(sshd_t)
 ')
 
@@ -353,6 +378,15 @@
 ')
 
 optional_policy(`
+    openshift_dyntransition(sshd_t)
+    openshift_transition(sshd_t)
+    openshift_manage_tmp_files(sshd_t)
+    openshift_manage_tmp_sockets(sshd_t)
+    openshift_mounton_tmp(sshd_t)
+    openshift_search_lib(sshd_t)
+')
+
+optional_policy(`
 	unconfined_shell_domtrans(sshd_t)
 ')
 
@@ -463,21 +497,45 @@
 allow chroot_user_t self:capability { setuid sys_chroot setgid };
 
 allow chroot_user_t self:fifo_file rw_fifo_file_perms;
+allow chroot_user_t self:unix_dgram_socket { create connect };
+
+corecmd_exec_shell(chroot_user_t)
+
+term_search_ptys(chroot_user_t)
+term_use_ptmx(chroot_user_t)
+
+fs_getattr_all_fs(chroot_user_t)
 
 userdom_read_user_home_content_files(chroot_user_t)
 userdom_read_inherited_user_home_content_files(chroot_user_t)
 userdom_read_user_home_content_symlinks(chroot_user_t)
 userdom_exec_user_home_content_files(chroot_user_t)
 
+logging_send_syslog_msg(chroot_user_t)
+
+tunable_policy(`ssh_chroot_full_access',`
+    allow chroot_user_t self:capability { dac_override dac_read_search };
+    auth_manage_all_files_except_shadow(chroot_user_t)
+')
+
+
 tunable_policy(`ssh_chroot_rw_homedirs',`
         files_list_home(chroot_user_t)
         userdom_read_user_home_content_files(chroot_user_t)
         userdom_manage_user_home_content(chroot_user_t)
+		# for /var/www/ home
 ', `
 
         userdom_user_home_dir_filetrans_pattern(chroot_user_t, { dir file lnk_file })
 ')
 
+optional_policy(`
+	tunable_policy(`ssh_chroot_manage_apache_content',`
+		apache_manage_sys_content(chroot_user_t)
+		apache_manage_sys_content_rw(chroot_user_t)
+	')
+')
+
 tunable_policy(`ssh_chroot_rw_homedirs && use_nfs_home_dirs',`
     fs_manage_nfs_dirs(chroot_user_t)
     fs_manage_nfs_files(chroot_user_t)
@@ -500,6 +558,7 @@
     fs_read_nfs_symlinks(chroot_user_t)
 ')
 
+
 optional_policy(`
     ssh_rw_stream_sockets(chroot_user_t)
     ssh_rw_tcp_sockets(chroot_user_t)
diff -Nur nsaserefpolicy/policy/modules/services/sssd.fc serefpolicy-3.7.19/policy/modules/services/sssd.fc
--- nsaserefpolicy/policy/modules/services/sssd.fc	2013-03-15 11:41:13.880153547 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sssd.fc	2013-03-15 11:40:13.771152176 +0100
@@ -6,6 +6,8 @@
 
 /var/lib/sss/pubconf(/.*)?	gen_context(system_u:object_r:sssd_public_t,s0)
 
+/var/lib/sss/mc(/.*)?       gen_context(system_u:object_r:sssd_public_t,s0)
+
 /var/log/sssd(/.*)?		gen_context(system_u:object_r:sssd_var_log_t,s0)
 
 /var/run/sssd.pid	--	gen_context(system_u:object_r:sssd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/sssd.if serefpolicy-3.7.19/policy/modules/services/sssd.if
--- nsaserefpolicy/policy/modules/services/sssd.if	2013-03-15 11:41:14.900153571 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sssd.if	2013-03-15 11:40:15.973152226 +0100
@@ -52,6 +52,7 @@
 	')
 
 	sssd_search_lib($1)
+	list_dirs_pattern($1, sssd_public_t, sssd_public_t)
 	read_files_pattern($1, sssd_public_t, sssd_public_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/services/sssd.te serefpolicy-3.7.19/policy/modules/services/sssd.te
--- nsaserefpolicy/policy/modules/services/sssd.te	2013-03-15 11:41:13.916153548 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sssd.te	2013-03-15 11:40:13.996152181 +0100
@@ -59,6 +59,7 @@
 
 corenet_udp_bind_generic_port(sssd_t)
 corenet_dontaudit_udp_bind_all_ports(sssd_t)
+corenet_tcp_connect_kerberos_password_port(sssd_t)
 
 corecmd_exec_bin(sssd_t)
 
@@ -78,6 +79,8 @@
 selinux_validate_context(sssd_t)
 
 seutil_read_file_contexts(sssd_t)
+seutil_rw_login_config_dirs(sssd_t)
+seutil_manage_login_config_files(sssd_t)
 
 mls_file_read_to_clearance(sssd_t)
 mls_socket_read_to_clearance(sssd_t)
diff -Nur nsaserefpolicy/policy/modules/services/svnserve.fc serefpolicy-3.7.19/policy/modules/services/svnserve.fc
--- nsaserefpolicy/policy/modules/services/svnserve.fc	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/svnserve.fc	2013-03-15 11:40:16.153152230 +0100
@@ -0,0 +1,9 @@
+/etc/rc.d/init.d/svnserve	--	gen_context(system_u:object_r:svnserve_initrc_exec_t,s0)
+
+/usr/bin/svnserve		--	gen_context(system_u:object_r:svnserve_exec_t,s0)
+
+/var/run/svnserve(/.*)?			gen_context(system_u:object_r:svnserve_var_run_t,s0)
+/var/run/svnserve.pid		--	gen_context(system_u:object_r:svnserve_var_run_t,s0)
+
+/var/subversion/repo(/.*)?		gen_context(system_u:object_r:svnserve_content_t,s0)	
+/var/lib/subversion/repo(/.*)?		gen_context(system_u:object_r:svnserve_content_t,s0)	
diff -Nur nsaserefpolicy/policy/modules/services/svnserve.if serefpolicy-3.7.19/policy/modules/services/svnserve.if
--- nsaserefpolicy/policy/modules/services/svnserve.if	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/svnserve.if	2013-03-15 11:40:16.597152240 +0100
@@ -0,0 +1,87 @@
+
+## <summary>policy for svnserve</summary>
+
+
+########################################
+## <summary>
+##	Transition to svnserve.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`svnserve_domtrans',`
+	gen_require(`
+		type svnserve_t, svnserve_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, svnserve_exec_t, svnserve_t)
+')
+
+
+########################################
+## <summary>
+##	Execute svnserve server in the svnserve domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`svnserve_initrc_domtrans',`
+	gen_require(`
+		type svnserve_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, svnserve_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Read svnserve PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`svnserve_read_pid_files',`
+	gen_require(`
+		type svnserve_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 svnserve_var_run_t:file read_file_perms;
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an svnserve environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`svnserve_admin',`
+	gen_require(`
+		type svnserve_t;
+		type svnserve_var_run_t;
+		type svnserve_unit_file_t;
+	')
+
+	allow $1 svnserve_t:process { ptrace signal_perms };
+	ps_process_pattern($1, svnserve_t)
+
+	files_search_pids($1)
+	admin_pattern($1, svnserve_var_run_t)
+')
+
diff -Nur nsaserefpolicy/policy/modules/services/svnserve.te serefpolicy-3.7.19/policy/modules/services/svnserve.te
--- nsaserefpolicy/policy/modules/services/svnserve.te	1970-01-01 01:00:00.000000000 +0100
+++ serefpolicy-3.7.19/policy/modules/services/svnserve.te	2013-03-15 11:40:12.203152140 +0100
@@ -0,0 +1,54 @@
+policy_module(svnserve, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type svnserve_t;
+type svnserve_exec_t;
+init_daemon_domain(svnserve_t, svnserve_exec_t)
+
+type svnserve_initrc_exec_t;
+init_script_file(svnserve_initrc_exec_t)
+
+type svnserve_var_run_t;
+files_pid_file(svnserve_var_run_t)
+
+type svnserve_content_t;
+files_type(svnserve_content_t)
+
+########################################
+#
+# svnserve local policy
+#
+
+allow svnserve_t self:fifo_file rw_fifo_file_perms;
+allow svnserve_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(svnserve_t, svnserve_content_t, svnserve_content_t)
+manage_files_pattern(svnserve_t, svnserve_content_t, svnserve_content_t)
+
+manage_dirs_pattern(svnserve_t, svnserve_var_run_t, svnserve_var_run_t)
+manage_files_pattern(svnserve_t, svnserve_var_run_t, svnserve_var_run_t)
+files_pid_filetrans(svnserve_t, svnserve_var_run_t, { dir file })
+
+corenet_udp_bind_generic_node(svnserve_t)
+#corenet_tcp_connect_svn_port(svnserve_t)
+#corenet_tcp_bind_svn_port(svnserve_t)
+#corenet_udp_bind_svn_port(svnserve_t)
+
+domain_use_interactive_fds(svnserve_t)
+
+files_read_etc_files(svnserve_t)
+files_read_usr_files(svnserve_t)
+
+logging_send_syslog_msg(svnserve_t)
+
+miscfiles_read_localization(svnserve_t)
+
+sysnet_dns_name_resolve(svnserve_t)
+
+optional_policy(`
+	unconfined_domain(svnserve_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/sysstat.fc serefpolicy-3.7.19/policy/modules/services/sysstat.fc
--- nsaserefpolicy/policy/modules/services/sysstat.fc	2013-03-15 11:41:15.923153594 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sysstat.fc	2013-03-15 11:40:18.798152290 +0100
@@ -6,3 +6,4 @@
 /var/log/atsar(/.*)?			gen_context(system_u:object_r:sysstat_log_t,s0)
 /var/log/sa(/.*)?			gen_context(system_u:object_r:sysstat_log_t,s0)
 /var/log/sysstat(/.*)?			gen_context(system_u:object_r:sysstat_log_t,s0)
+/opt/sartest(/.*)?      gen_context(system_u:object_r:sysstat_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/sysstat.te serefpolicy-3.7.19/policy/modules/services/sysstat.te
--- nsaserefpolicy/policy/modules/services/sysstat.te	2013-03-15 11:41:13.900153548 +0100
+++ serefpolicy-3.7.19/policy/modules/services/sysstat.te	2013-03-15 11:40:13.953152180 +0100
@@ -51,6 +51,8 @@
 fs_getattr_xattr_fs(sysstat_t)
 fs_list_inotifyfs(sysstat_t)
 
+storage_getattr_fixed_disk_dev(sysstat_t)
+
 term_use_console(sysstat_t)
 term_use_all_terms(sysstat_t)
 
diff -Nur nsaserefpolicy/policy/modules/services/tftp.if serefpolicy-3.7.19/policy/modules/services/tftp.if
--- nsaserefpolicy/policy/modules/services/tftp.if	2013-03-15 11:41:13.669153542 +0100
+++ serefpolicy-3.7.19/policy/modules/services/tftp.if	2013-03-15 11:40:12.923152156 +0100
@@ -42,6 +42,25 @@
 	files_search_var_lib($1)
 ')
 
+#######################################
+## <summary>
+##  Search tftp /var/lib directories.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`tftp_list_rw_content',`
+    gen_require(`
+        type tftpdir_rw_t;
+    ')
+
+    list_dirs_pattern($1, tftpdir_rw_t, tftpdir_rw_t)
+    files_search_var_lib($1)
+')
+
 ########################################
 ## <summary>
 ##	Manage tftp /var/lib files.
diff -Nur nsaserefpolicy/policy/modules/services/tgtd.if serefpolicy-3.7.19/policy/modules/services/tgtd.if
--- nsaserefpolicy/policy/modules/services/tgtd.if	2013-03-15 11:41:15.661153588 +0100
+++ serefpolicy-3.7.19/policy/modules/services/tgtd.if	2013-03-15 11:40:18.015152273 +0100
@@ -44,3 +44,22 @@
 
         allow $1 tgtd_t:sem create_sem_perms;
 ')
+
+#######################################
+## <summary>
+##  Connect to tgtd using a unix domain stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`tgtd_stream_connect',`
+    gen_require(`
+        type tgtd_t, tgtd_var_run_t;
+    ')
+
+    files_search_var_lib($1)
+    stream_connect_pattern($1, tgtd_var_run_t, tgtd_var_run_t, tgtd_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/tuned.fc serefpolicy-3.7.19/policy/modules/services/tuned.fc
--- nsaserefpolicy/policy/modules/services/tuned.fc	2013-03-15 11:41:15.199153577 +0100
+++ serefpolicy-3.7.19/policy/modules/services/tuned.fc	2013-03-15 11:40:16.570152240 +0100
@@ -1,9 +1,15 @@
 /etc/rc\.d/init\.d/tuned	--	gen_context(system_u:object_r:tuned_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/ktune    --  gen_context(system_u:object_r:tuned_initrc_exec_t,s0)
+
+#/etc/tune-profiles(/.*)?                 gen_context(system_u:object_r:tuned_rw_etc_t,s0)
 
 /usr/sbin/tuned			--	gen_context(system_u:object_r:tuned_exec_t,s0)
 
 /var/log/tuned(/.*)?			gen_context(system_u:object_r:tuned_log_t,s0)
-/var/log/tuned\.log		--	gen_context(system_u:object_r:tuned_log_t,s0)
+/var/log/tuned\.log.*		--	gen_context(system_u:object_r:tuned_log_t,s0)
+
+/var/lock/subsys/ktune	--	gen_context(system_u:object_r:tuned_var_lock_t,s0)
 
 /var/run/tuned(/.*)?	--  gen_context(system_u:object_r:tuned_var_run_t,s0)
 /var/run/tuned\.pid		--	gen_context(system_u:object_r:tuned_var_run_t,s0)
+/var/run/ktune\.save	--	gen_context(system_u:object_r:tuned_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/tuned.te serefpolicy-3.7.19/policy/modules/services/tuned.te
--- nsaserefpolicy/policy/modules/services/tuned.te	2013-03-15 11:41:14.399153559 +0100
+++ serefpolicy-3.7.19/policy/modules/services/tuned.te	2013-03-15 11:40:15.145152207 +0100
@@ -19,45 +19,97 @@
 type tuned_var_run_t;
 files_pid_file(tuned_var_run_t)
 
+type tuned_etc_t;
+files_config_file(tuned_etc_t)
+
+type tuned_rw_etc_t;
+files_config_file(tuned_rw_etc_t)
+
+type tuned_tmp_t;
+files_tmp_file(tuned_tmp_t)
+
+type tuned_var_lock_t;
+files_lock_file(tuned_var_lock_t)
+
 ########################################
 #
 # tuned local policy
 #
 
+allow tuned_t self:capability { sys_admin sys_nice };
 dontaudit tuned_t self:capability { dac_override sys_tty_config };
+allow tuned_t self:process {  setsched signal };
 allow tuned_t self:fifo_file rw_fifo_file_perms;
+allow tuned_t self:netlink_kobject_uevent_socket create_socket_perms;
+allow tuned_t self:udp_socket create_socket_perms;
+
+rw_files_pattern(tuned_t, tuned_rw_etc_t, tuned_rw_etc_t)
 
 manage_dirs_pattern(tuned_t, tuned_log_t, tuned_log_t)
 manage_files_pattern(tuned_t, tuned_log_t, tuned_log_t)
 logging_log_filetrans(tuned_t, tuned_log_t, file)
 
+manage_files_pattern(tuned_t, tuned_var_lock_t, tuned_var_lock_t)
+files_lock_filetrans(tuned_t,tuned_var_lock_t,file)
+
 manage_dirs_pattern(tuned_t, tuned_var_run_t, tuned_var_run_t)
 manage_files_pattern(tuned_t, tuned_var_run_t, tuned_var_run_t)
 manage_fifo_files_pattern(tuned_t, tuned_var_run_t, tuned_var_run_t)
 manage_sock_files_pattern(tuned_t, tuned_var_run_t, tuned_var_run_t)
 files_pid_filetrans(tuned_t, tuned_var_run_t, { file sock_file fifo_file })
 
+manage_dirs_pattern(tuned_t, tuned_tmp_t, tuned_tmp_t)
+manage_files_pattern(tuned_t, tuned_tmp_t, tuned_tmp_t)
+files_tmp_filetrans(tuned_t, tuned_tmp_t, { dir file })
+
+can_exec(tuned_t, tuned_initrc_exec_t)
+
 corecmd_exec_shell(tuned_t)
 corecmd_exec_bin(tuned_t)
 
 kernel_read_system_state(tuned_t)
 kernel_read_network_state(tuned_t)
-
+kernel_read_kernel_sysctls(tuned_t)
+kernel_request_load_module(tuned_t)
+kernel_rw_kernel_sysctl(tuned_t)
+kernel_rw_hotplug_sysctls(tuned_t)
+kernel_rw_vm_sysctls(tuned_t)
+kernel_setsched(tuned_t)
+
+dev_getattr_all_blk_files(tuned_t)
+dev_getattr_all_chr_files(tuned_t)
+#dev_dontaudit_getattr_all(tuned_t)
 dev_read_urand(tuned_t)
-dev_read_sysfs(tuned_t)
+dev_read_cpuid(tuned_t)
+dev_rw_sysfs(tuned_t)
 # to allow cpu tuning
 dev_rw_netcontrol(tuned_t)
 
+domain_read_all_domains_state(tuned_t)
+
 files_read_etc_files(tuned_t)
 files_read_usr_files(tuned_t)
 files_dontaudit_search_home(tuned_t)
 
+fs_getattr_all_fs(tuned_t)
+
+auth_use_nsswitch(tuned_t)
+
+# make cpuspeed and others init scripts working
+init_domtrans_script(tuned_t)
+
 logging_send_syslog_msg(tuned_t)
 
 miscfiles_read_localization(tuned_t)
 
 userdom_dontaudit_search_user_home_dirs(tuned_t)
 
+
+optional_policy(`
+    dbus_system_bus_client(tuned_t)
+    dbus_connect_system_bus(tuned_t)
+')
+
 # to allow disk tuning
 optional_policy(`
 	fstools_domtrans(tuned_t)
@@ -67,7 +119,24 @@
 	gnome_dontaudit_search_config(tuned_t)
 ')
 
+optional_policy(`
+	consoletype_exec(tuned_t)
+')
+
+optional_policy(`
+    libs_exec_ldconfig(tuned_t)
+')
+
+optional_policy(`
+    mount_domtrans(tuned_t)
+	#mount_read_pid_files(tuned_t)
+')
+
 # to allow network interface tuning
 optional_policy(`
 	sysnet_domtrans_ifconfig(tuned_t)
 ')
+
+optional_policy(`
+    unconfined_dbus_send(tuned_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/vdagent.fc serefpolicy-3.7.19/policy/modules/services/vdagent.fc
--- nsaserefpolicy/policy/modules/services/vdagent.fc	2013-03-15 11:41:14.220153555 +0100
+++ serefpolicy-3.7.19/policy/modules/services/vdagent.fc	2013-03-15 11:40:14.779152199 +0100
@@ -7,4 +7,4 @@
 /var/run/spice-vdagentd.\pid    --  gen_context(system_u:object_r:vdagent_var_run_t,s0)
 
 /var/log/spice-vdagentd(/.*)?           gen_context(system_u:object_r:vdagent_log_t,s0)
-/var/log/spice-vdagentd\.log    --  gen_context(system_u:object_r:vdagent_log_t,s0)
+/var/log/spice-vdagentd\.log.*	   --  gen_context(system_u:object_r:vdagent_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/vdagent.te serefpolicy-3.7.19/policy/modules/services/vdagent.te
--- nsaserefpolicy/policy/modules/services/vdagent.te	2013-03-15 11:41:13.987153550 +0100
+++ serefpolicy-3.7.19/policy/modules/services/vdagent.te	2013-03-15 11:40:14.218152186 +0100
@@ -51,6 +51,8 @@
 
 userdom_use_user_ptys(vdagent_t)
 
+logging_send_syslog_msg(vdagent_t)
+
 optional_policy(`
     consolekit_dbus_chat(vdagent_t)
 ')
diff -Nur nsaserefpolicy/policy/modules/services/virt.fc serefpolicy-3.7.19/policy/modules/services/virt.fc
--- nsaserefpolicy/policy/modules/services/virt.fc	2013-03-15 11:41:14.375153559 +0100
+++ serefpolicy-3.7.19/policy/modules/services/virt.fc	2013-05-23 11:26:06.355843730 +0200
@@ -13,10 +13,17 @@
 /etc/xen/[^/]*		-d	gen_context(system_u:object_r:virt_etc_rw_t,s0)
 /etc/xen/.*/.*			gen_context(system_u:object_r:virt_etc_rw_t,s0)
 
+/usr/libexec/libvirt_lxc -- gen_context(system_u:object_r:virtd_lxc_exec_t,s0)
+
 /usr/sbin/condor_vm-gahp -- gen_context(system_u:object_r:virtd_exec_t,s0)
 /usr/sbin/libvirtd	--	gen_context(system_u:object_r:virtd_exec_t,s0)
 /usr/sbin/libvirt-qmf   --  gen_context(system_u:object_r:virt_qmf_exec_t,s0)
 
+/usr/libexec/qemu-bridge-helper gen_context(system_u:object_r:virt_bridgehelper_exec_t,s0)
+
+/usr/libexec/qemu-ga(/.*)?     gen_context(system_u:object_r:virt_qemu_ga_exec_t,s0)
+/usr/libexec/qemu-ga/fsfreeze-hook.d(/.*)?  gen_context(system_u:object_r:virt_qemu_ga_unconfined_exec_t,s0)
+
 /var/cache/libvirt  -d  gen_context(system_u:object_r:virt_cache_t,s0-mls_systemhigh)
 /var/cache/libvirt/.*       <<none>>
 
@@ -50,3 +57,7 @@
 
 # support for nova-stack
 /usr/bin/nova-compute       --  gen_context(system_u:object_r:virtd_exec_t,s0)
+
+/usr/bin/qemu-ga                --      gen_context(system_u:object_r:virt_qemu_ga_exec_t,s0)
+/var/run/qemu-ga\.pid           --      gen_context(system_u:object_r:virt_qemu_ga_var_run_t,s0)
+/var/log/qemu-ga\.log.*	          --      gen_context(system_u:object_r:virt_qemu_ga_log_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/virt.if serefpolicy-3.7.19/policy/modules/services/virt.if
--- nsaserefpolicy/policy/modules/services/virt.if	2013-03-15 11:41:14.826153569 +0100
+++ serefpolicy-3.7.19/policy/modules/services/virt.if	2013-05-21 12:54:48.470781681 +0200
@@ -153,6 +153,23 @@
 
 #######################################
 ## <summary>
+##  Transition to virt_bridgehelper.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed to transition.
+## </summary>
+## </param>
+interface(`virt_domtrans_bridgehelper',`
+    gen_require(`
+        type virt_bridgehelper_t, virt_bridgehelper_exec_t;
+    ')
+
+    domtrans_pattern($1, virt_bridgehelper_exec_t, virt_bridgehelper_t)
+')
+
+#######################################
+## <summary>
 ##	Connect to virt over an unix domain stream socket.
 ## </summary>
 ## <param name="domain">
@@ -638,11 +655,14 @@
 interface(`virt_transition_svirt',`
 	gen_require(`
 		type svirt_t;
+        attribute virt_domain;
 	')
 
 	allow $1 svirt_t:process transition;
 	role $2 types svirt_t;
 
+    allow $1 virt_domain:process { sigkill sigstop signull signal };
+
 	optional_policy(`
 		ptchown_run(svirt_t, $2)
 	')
@@ -683,6 +703,24 @@
 	allow $1 virt_domain:process sigkill;
 ')
 
+######################################
+## <summary>
+##  Send a sigkill to virtd daemon
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`virt_kill',`
+    gen_require(`
+        type virtd_t;
+    ')
+
+    allow $1 virtd_t:process sigkill;
+')
+
 #######################################
 ## <summary>
 ##	Send a signal to virtual machines
diff -Nur nsaserefpolicy/policy/modules/services/virt.te serefpolicy-3.7.19/policy/modules/services/virt.te
--- nsaserefpolicy/policy/modules/services/virt.te	2013-03-15 11:41:15.207153578 +0100
+++ serefpolicy-3.7.19/policy/modules/services/virt.te	2013-05-24 08:02:23.497197522 +0200
@@ -62,6 +62,13 @@
 ## </desc>
 gen_tunable(virt_use_usb, true)
 
+## <desc>
+## <p>
+## Allow confined virtual guests to use executable memory and executable stack
+## </p>
+## </desc>
+gen_tunable(virt_use_execmem, false)
+
 virt_domain_template(svirt)
 role system_r types svirt_t;
 
@@ -131,6 +138,31 @@
 type virt_qmf_exec_t;
 init_daemon_domain(virt_qmf_t, virt_qmf_exec_t)
 
+type virt_bridgehelper_t;
+domain_type(virt_bridgehelper_t)
+type virt_bridgehelper_exec_t;
+domain_entry_file(virt_bridgehelper_t, virt_bridgehelper_exec_t)
+role system_r types virt_bridgehelper_t;
+
+type virt_qemu_ga_t;
+domain_type(virt_qemu_ga_t)
+type virt_qemu_ga_exec_t;
+domain_entry_file(virt_qemu_ga_t, virt_qemu_ga_exec_t)
+role system_r types virt_qemu_ga_t;
+init_initrc_domtrans_to(virt_qemu_ga_t, virt_qemu_ga_exec_t)
+
+type virt_qemu_ga_var_run_t;
+files_pid_file(virt_qemu_ga_var_run_t)
+
+type virt_qemu_ga_log_t;
+logging_log_file(virt_qemu_ga_log_t)
+
+type virt_qemu_ga_data_t;
+files_type(virt_qemu_ga_data_t)
+
+type virt_qemu_ga_unconfined_exec_t;
+application_executable_file(virt_qemu_ga_unconfined_exec_t)
+
 ########################################
 #
 # svirt local policy
@@ -138,6 +170,8 @@
 
 allow svirt_t self:udp_socket create_socket_perms;
 
+allow svirt_t virtd_t:fifo_file { write getattr };
+
 read_lnk_files_pattern(svirt_t, virt_image_t, virt_image_t)
 
 allow svirt_t svirt_image_t:dir search_dir_perms;
@@ -183,20 +217,26 @@
 ')
 
 tunable_policy(`virt_use_fusefs',`
+	fs_manage_fusefs_dirs(svirt_t)
+    fs_manage_fusefs_files(svirt_t)
 	fs_read_fusefs_files(svirt_t)
 	fs_read_fusefs_symlinks(svirt_t)
+	fs_getattr_fusefs(svirt_t)
 ')
 
 tunable_policy(`virt_use_nfs',`
 	fs_manage_nfs_dirs(svirt_t)
 	fs_manage_nfs_files(svirt_t)
 	fs_manage_nfs_named_sockets(svirt_t)
+	fs_getattr_nfs(svirt_t)
 ')
 
 tunable_policy(`virt_use_samba',`
 	fs_manage_cifs_dirs(svirt_t)
 	fs_manage_cifs_files(svirt_t)
 	fs_manage_cifs_named_sockets(svirt_t) 
+	fs_read_cifs_symlinks(virtd_t)
+	fs_getattr_cifs(svirt_t)
 ')
 
 tunable_policy(`virt_use_sysfs',`
@@ -277,6 +317,7 @@
 manage_blk_files_pattern(virtd_t, virt_image_type, virt_image_type)
 manage_chr_files_pattern(virtd_t, virt_image_type, virt_image_type)
 manage_lnk_files_pattern(virtd_t, virt_image_type, virt_image_type)
+allow virtd_t virt_image_type:dir setattr;
 allow virtd_t virt_image_type:file relabel_file_perms;
 allow virtd_t virt_image_type:blk_file relabel_blk_file_perms;
 allow virtd_t virt_image_type:chr_file relabel_chr_file_perms;
@@ -307,6 +348,7 @@
 kernel_read_kernel_sysctls(virtd_t)
 kernel_request_load_module(virtd_t)
 kernel_search_debugfs(virtd_t)
+kernel_setsched(virtd_t)
 
 corecmd_exec_bin(virtd_t)
 corecmd_exec_shell(virtd_t)
@@ -465,6 +507,8 @@
 	dnsmasq_kill(virtd_t)
 	dnsmasq_read_pid_files(virtd_t)
 	dnsmasq_signull(virtd_t)
+	dnsmasq_create_pid_dirs(virtd_t)
+	dnsmasq_manage_pid_files(virtd_t)
 ')
 
 optional_policy(`
@@ -656,6 +700,10 @@
 
 miscfiles_read_localization(virt_domain)
 
+tunable_policy(`virt_use_execmem',`
+    allow virt_domain self:process { execmem execstack };
+')
+
 optional_policy(`
 	ptchown_domtrans(virt_domain)
 ')
@@ -669,5 +717,253 @@
 	virt_read_lib_files(virt_domain)
 	virt_read_content(virt_domain)
 	virt_stream_connect(virt_domain)
+	virt_domtrans_bridgehelper(virt_domain)
+')
+
+########################################
+#
+# virt_bridgehelper local policy
+#
+
+allow virt_bridgehelper_t self:process { setcap getcap };
+allow virt_bridgehelper_t self:capability { setpcap setgid setuid net_admin };
+allow virt_bridgehelper_t self:tcp_socket create_stream_socket_perms;
+allow virt_bridgehelper_t self:tun_socket create_socket_perms;
+allow virt_bridgehelper_t self:unix_dgram_socket create_socket_perms;
+
+kernel_read_network_state(virt_bridgehelper_t)
+
+corenet_rw_tun_tap_dev(virt_bridgehelper_t)
+
+files_read_etc_files(virt_bridgehelper_t)
+
+userdom_use_inherited_user_ptys(virt_bridgehelper_t)
+
+######################################
+#
+# virt_qemu_ga local policy
+#
+
+allow virt_qemu_ga_t self:capability { sys_admin sys_tty_config };
+
+allow virt_qemu_ga_t self:fifo_file rw_fifo_file_perms;
+allow virt_qemu_ga_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(virt_qemu_ga_t, virt_qemu_ga_var_run_t, virt_qemu_ga_var_run_t)
+manage_dirs_pattern(virt_qemu_ga_t, virt_qemu_ga_var_run_t, virt_qemu_ga_var_run_t)
+files_pid_filetrans(virt_qemu_ga_t, virt_qemu_ga_var_run_t,{ dir file } )
+
+manage_files_pattern(virt_qemu_ga_t, virt_qemu_ga_data_t, virt_qemu_ga_data_t)
+manage_dirs_pattern(virt_qemu_ga_t, virt_qemu_ga_data_t, virt_qemu_ga_data_t)
+
+manage_files_pattern(virt_qemu_ga_t, virt_qemu_ga_log_t, virt_qemu_ga_log_t)
+logging_log_filetrans(virt_qemu_ga_t, virt_qemu_ga_log_t, file )
+
+allow virt_qemu_ga_t virt_qemu_ga_exec_t:dir search_dir_perms;
+can_exec(virt_qemu_ga_t, virt_qemu_ga_exec_t)
+
+kernel_read_system_state(virt_qemu_ga_t)
+kernel_rw_kernel_sysctl(virt_qemu_ga_t)
+
+corecmd_exec_shell(virt_qemu_ga_t)
+corecmd_exec_bin(virt_qemu_ga_t)
+
+dev_rw_sysfs(virt_qemu_ga_t)
+
+files_read_etc_files(virt_qemu_ga_t)
+files_read_boot_files(virt_qemu_ga_t)
+
+files_list_all_mountpoints(virt_qemu_ga_t)
+files_write_all_mountpoints(virt_qemu_ga_t)
+fs_list_all(virt_qemu_ga_t)
+
+term_use_virtio_console(virt_qemu_ga_t)
+term_use_all_ttys(virt_qemu_ga_t)
+term_use_unallocated_ttys(virt_qemu_ga_t)
+
+logging_send_syslog_msg(virt_qemu_ga_t)
+
+miscfiles_read_localization(virt_qemu_ga_t)
+
+sysnet_dns_name_resolve(virt_qemu_ga_t)
+
+userdom_use_user_ptys(virt_qemu_ga_t)
+
+optional_policy(`
+	bootloader_domtrans(virt_qemu_ga_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(virt_qemu_ga_t)
+')
+
+optional_policy(`
+	consoletype_exec(virt_qemu_ga_t)
+')
+
+# needed by at
+optional_policy(`
+	cron_initrc_domtrans(virt_qemu_ga_t)
+	cron_domtrans(virt_qemu_ga_t)
+')
+
+optional_policy(`
+	devicekit_manage_pid_files(virt_qemu_ga_t)
+')
+
+optional_policy(`
+	fstools_domtrans(virt_qemu_ga_t)
+')
+
+optional_policy(`
+	hal_domtrans(virt_qemu_ga_t)
+	hal_rw_log(virt_qemu_ga_t)
+	hal_manage_pid_files(virt_qemu_ga_t)
+	hal_manage_pid_dirs(virt_qemu_ga_t)
+')
+
+optional_policy(`
+	shutdown_domtrans(virt_qemu_ga_t)
+')
+
+######################################
+#
+# qemu-ga  unconfined hook script local policy
+#
+
+optional_policy(`
+    type virt_qemu_ga_unconfined_t;
+    domain_type(virt_qemu_ga_unconfined_t)
+
+    domain_entry_file(virt_qemu_ga_unconfined_t, virt_qemu_ga_unconfined_exec_t)
+    role system_r types virt_qemu_ga_unconfined_t;
+
+    domtrans_pattern(virt_qemu_ga_t, virt_qemu_ga_unconfined_exec_t, virt_qemu_ga_unconfined_t)
+
+    allow virt_qemu_ga_t virt_qemu_ga_unconfined_exec_t:dir search_dir_perms;
+    allow virt_qemu_ga_t virt_qemu_ga_unconfined_exec_t:dir read_file_perms;
+    allow virt_qemu_ga_t virt_qemu_ga_unconfined_exec_t:file ioctl;
+
+    init_domtrans_script(virt_qemu_ga_unconfined_t)
+
+    optional_policy(`
+        unconfined_domain(virt_qemu_ga_unconfined_t)
+    ')
+')
+
+
+#######################################
+#
+# Declarations
+#
+
+type virtd_lxc_t;
+type virtd_lxc_exec_t;
+init_system_domain(virtd_lxc_t, virtd_lxc_exec_t)
+
+type virt_lxc_var_run_t;
+files_pid_file(virt_lxc_var_run_t)
+typealias virt_lxc_var_run_t alias virtd_lxc_var_run_t;
+
+# virt lxc container files
+type svirt_lxc_file_t;
+files_mountpoint(svirt_lxc_file_t)
+
+#######################################
+#
+# virt_lxc local policy
+#
+allow virtd_lxc_t self:capability { dac_override net_admin net_raw setpcap chown sys_admin sys_boot sys_resource };
+
+allow virtd_lxc_t self:process { setexec setrlimit setsched getcap setcap signal_perms };
+allow virtd_lxc_t self:fifo_file rw_fifo_file_perms;
+allow virtd_lxc_t self:netlink_route_socket rw_netlink_socket_perms;
+allow virtd_lxc_t self:unix_stream_socket create_stream_socket_perms;
+allow virtd_lxc_t self:packet_socket create_socket_perms;
+
+allow virtd_lxc_t virt_image_type:dir mounton;
+manage_files_pattern(virtd_lxc_t, virt_image_t, virt_image_t)
+
+domtrans_pattern(virtd_t, virtd_lxc_exec_t, virtd_lxc_t)
+allow virtd_t virtd_lxc_t:process { signal signull sigkill };
+
+allow virtd_lxc_t virt_var_run_t:dir search_dir_perms;
+manage_dirs_pattern(virtd_lxc_t, virt_lxc_var_run_t, virt_lxc_var_run_t)
+manage_files_pattern(virtd_lxc_t, virt_lxc_var_run_t, virt_lxc_var_run_t)
+manage_sock_files_pattern(virtd_lxc_t, virt_lxc_var_run_t, virt_lxc_var_run_t)
+files_pid_filetrans(virtd_lxc_t, virt_lxc_var_run_t, { file dir })
+
+manage_dirs_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
+manage_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
+manage_chr_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
+manage_lnk_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
+manage_sock_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
+manage_fifo_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
+allow virtd_lxc_t svirt_lxc_file_t:dir_file_class_set { relabelto relabelfrom };
+allow virtd_lxc_t svirt_lxc_file_t:filesystem { relabelto relabelfrom };
+
+storage_manage_fixed_disk(virtd_lxc_t)
+storage_rw_fuse(virtd_lxc_t)
+
+kernel_read_all_sysctls(virtd_lxc_t)
+kernel_read_network_state(virtd_lxc_t)
+kernel_read_system_state(virtd_lxc_t)
+
+corecmd_exec_bin(virtd_lxc_t)
+corecmd_exec_shell(virtd_lxc_t)
+
+dev_relabel_all_dev_nodes(virtd_lxc_t)
+dev_rw_sysfs(virtd_lxc_t)
+dev_read_sysfs(virtd_lxc_t)
+dev_read_urand(virtd_lxc_t)
+
+domain_use_interactive_fds(virtd_lxc_t)
+
+files_search_all(virtd_lxc_t)
+files_getattr_all_files(virtd_lxc_t)
+files_read_usr_files(virtd_lxc_t)
+files_mounton_non_security(virtd_lxc_t)
+files_mount_all_file_type_fs(virtd_lxc_t)
+files_unmount_all_file_type_fs(virtd_lxc_t)
+files_list_isid_type_dirs(virtd_lxc_t)
+files_root_filetrans(virtd_lxc_t, svirt_lxc_file_t, dir_file_class_set)
+
+fs_getattr_all_fs(virtd_lxc_t)
+fs_manage_tmpfs_dirs(virtd_lxc_t)
+fs_manage_tmpfs_chr_files(virtd_lxc_t)
+fs_manage_tmpfs_symlinks(virtd_lxc_t)
+fs_manage_cgroup_dirs(virtd_lxc_t)
+fs_remount_all_fs(virtd_lxc_t)
+fs_rw_cgroup_files(virtd_lxc_t)
+fs_unmount_all_fs(virtd_lxc_t)
+
+logging_send_audit_msgs(virtd_lxc_t)
+
+seutil_read_config(virtd_lxc_t)
+
+term_use_generic_ptys(virtd_lxc_t)
+term_use_ptmx(virtd_lxc_t)
+
+auth_use_nsswitch(virtd_lxc_t)
+
+logging_send_syslog_msg(virtd_lxc_t)
+
+seutil_read_default_contexts(virtd_lxc_t)
+
+selinux_get_enforce_mode(virtd_lxc_t)
+selinux_get_fs_mount(virtd_lxc_t)
+selinux_validate_context(virtd_lxc_t)
+selinux_compute_access_vector(virtd_lxc_t)
+selinux_compute_create_context(virtd_lxc_t)
+selinux_compute_relabel_context(virtd_lxc_t)
+selinux_compute_user_contexts(virtd_lxc_t)
+seutil_read_default_contexts(virtd_lxc_t)
+
+optional_policy(`
+	openshift_initrc_domtrans(virtd_lxc_t)
+	openshift_transition(virtd_lxc_t)
 ')
 
+optional_policy(`
+    unconfined_domain(virtd_lxc_t)
+')
Binary files nsaserefpolicy/policy/modules/services/.virt.te.swp and serefpolicy-3.7.19/policy/modules/services/.virt.te.swp differ
diff -Nur nsaserefpolicy/policy/modules/services/wdmd.fc serefpolicy-3.7.19/policy/modules/services/wdmd.fc
--- nsaserefpolicy/policy/modules/services/wdmd.fc	2013-03-15 11:41:13.819153546 +0100
+++ serefpolicy-3.7.19/policy/modules/services/wdmd.fc	2013-03-15 11:40:13.084152160 +0100
@@ -2,5 +2,8 @@
 /etc/rc\.d/init\.d/wdmd	--	gen_context(system_u:object_r:wdmd_initrc_exec_t,s0)
 
 /var/run/wdmd(/.*)?			gen_context(system_u:object_r:wdmd_var_run_t,s0)
+/var/run/checkquorum-timer	--	gen_context(system_u:object_r:wdmd_var_run_t,s0)
+/var/run/cluster/checkquorum-timer	--	gen_context(system_u:object_r:wdmd_var_run_t,s0)
+
 
 /usr/sbin/wdmd		--	gen_context(system_u:object_r:wdmd_exec_t,s0)
diff -Nur nsaserefpolicy/policy/modules/services/wdmd.if serefpolicy-3.7.19/policy/modules/services/wdmd.if
--- nsaserefpolicy/policy/modules/services/wdmd.if	2013-03-15 11:41:14.886153570 +0100
+++ serefpolicy-3.7.19/policy/modules/services/wdmd.if	2013-03-15 11:40:15.961152226 +0100
@@ -90,3 +90,21 @@
         files_search_pids($1)
         stream_connect_pattern($1, wdmd_var_run_t, wdmd_var_run_t, wdmd_t)
 ')
+
+####################################
+## <summary>
+##  Allow the specified domain to read/write wdmd's tmpfs files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`wdmd_manage_tmpfs',`
+    gen_require(`
+        type wdmd_tmpfs_t;
+    ')
+
+    manage_files_pattern($1, wdmd_tmpfs_t, wdmd_tmpfs_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/wdmd.te serefpolicy-3.7.19/policy/modules/services/wdmd.te
--- nsaserefpolicy/policy/modules/services/wdmd.te	2013-03-15 11:41:15.578153586 +0100
+++ serefpolicy-3.7.19/policy/modules/services/wdmd.te	2013-03-15 11:40:17.654152264 +0100
@@ -15,6 +15,9 @@
 type wdmd_initrc_exec_t;
 init_script_file(wdmd_initrc_exec_t)
 
+type wdmd_tmpfs_t;
+files_tmpfs_file(wdmd_tmpfs_t)
+
 ########################################
 #
 # wdmd local policy
@@ -31,6 +34,17 @@
 manage_sock_files_pattern(wdmd_t, wdmd_var_run_t, wdmd_var_run_t)
 files_pid_filetrans(wdmd_t, wdmd_var_run_t, { file dir sock_file })
 
+manage_dirs_pattern(wdmd_t, wdmd_tmpfs_t, wdmd_tmpfs_t)
+manage_files_pattern(wdmd_t, wdmd_tmpfs_t, wdmd_tmpfs_t)
+fs_tmpfs_filetrans(wdmd_t, wdmd_tmpfs_t, { dir file })
+
+kernel_read_system_state(wdmd_t)
+kernel_rw_kernel_sysctl(wdmd_t)
+
+corecmd_exec_bin(wdmd_t)
+corecmd_exec_shell(wdmd_t)
+
+dev_read_sysfs(wdmd_t)
 dev_write_watchdog(wdmd_t)
 dev_read_watchdog(wdmd_t)
 
@@ -42,9 +56,23 @@
 
 miscfiles_read_localization(wdmd_t)
 
+fs_getattr_tmpfs(wdmd_t)
 fs_read_anon_inodefs_files(wdmd_t)
 
 gen_require(`
 	type watchdog_device_t;
 ')
 
+optional_policy(`
+	consoletype_exec(wdmd_t)
+')
+
+optional_policy(`
+	corosync_initrc_domtrans(wdmd_t)
+	corosync_stream_connect(wdmd_t)
+	corosync_rw_tmpfs(wdmd_t)
+')
+
+optional_policy(`
+	kdump_initrc_domtrans(wdmd_t)
+')
diff -Nur nsaserefpolicy/policy/modules/services/xserver.te serefpolicy-3.7.19/policy/modules/services/xserver.te
--- nsaserefpolicy/policy/modules/services/xserver.te	2013-03-15 11:41:14.905153571 +0100
+++ serefpolicy-3.7.19/policy/modules/services/xserver.te	2013-03-21 15:45:46.027954336 +0100
@@ -609,6 +609,7 @@
 fs_mount_tmpfs(xdm_t)
 
 mls_socket_write_to_clearance(xdm_t)
+mls_trusted_object(xdm_t)
 
 storage_dontaudit_read_fixed_disk(xdm_t)
 storage_dontaudit_write_fixed_disk(xdm_t)
@@ -1021,11 +1022,15 @@
 fs_search_ramfs(xserver_t)
 fs_rw_tmpfs_files(xserver_t)
 
-mls_xwin_read_to_clearance(xserver_t)
-mls_process_write_to_clearance(xserver_t)
 mls_file_read_to_clearance(xserver_t)
 mls_file_write_all_levels(xserver_t)
 mls_file_upgrade(xserver_t)
+mls_process_write_to_clearance(xserver_t)
+mls_socket_read_to_clearance(xserver_t)
+mls_sysvipc_read_to_clearance(xserver_t)
+mls_sysvipc_write_to_clearance(xserver_t)
+mls_trusted_object(xserver_t)
+mls_xwin_read_to_clearance(xserver_t)
 
 selinux_validate_context(xserver_t)
 selinux_compute_access_vector(xserver_t)
diff -Nur nsaserefpolicy/policy/modules/services/zabbix.te serefpolicy-3.7.19/policy/modules/services/zabbix.te
--- nsaserefpolicy/policy/modules/services/zabbix.te	2013-03-15 11:41:13.891153548 +0100
+++ serefpolicy-3.7.19/policy/modules/services/zabbix.te	2013-03-15 11:40:13.910152179 +0100
@@ -27,6 +27,8 @@
 #
 
 allow zabbix_t self:capability { setuid setgid };
+allow zabbix_t self:process { setsched signal_perms };
+allow zabbix_t self:sem create_sem_perms;
 allow zabbix_t self:fifo_file rw_file_perms;
 allow zabbix_t self:unix_stream_socket create_stream_socket_perms;
 
diff -Nur nsaserefpolicy/policy/modules/services/zarafa.fc serefpolicy-3.7.19/policy/modules/services/zarafa.fc
--- nsaserefpolicy/policy/modules/services/zarafa.fc	2013-03-15 11:41:15.253153579 +0100
+++ serefpolicy-3.7.19/policy/modules/services/zarafa.fc	2013-03-15 11:40:16.692152242 +0100
@@ -10,14 +10,15 @@
 
 /var/lib/zarafa(/.*)?			gen_context(system_u:object_r:zarafa_var_lib_t,s0)
 /var/lib/zarafa-webaccess(/.*)?	gen_context(system_u:object_r:zarafa_var_lib_t,s0)
+/var/lib/zarafa-webapp(/.*)?	gen_context(system_u:object_r:zarafa_var_lib_t,s0)
 
-/var/log/zarafa/dagent\.log		--	gen_context(system_u:object_r:zarafa_deliver_log_t,s0)
-/var/log/zarafa/gateway\.log	--	gen_context(system_u:object_r:zarafa_gateway_log_t,s0)
-/var/log/zarafa/ical\.log	--	gen_context(system_u:object_r:zarafa_ical_log_t,s0)
-/var/log/zarafa/indexer\.log	--	gen_context(system_u:object_r:zarafa_indexer_log_t,s0)
-/var/log/zarafa/monitor\.log	--	gen_context(system_u:object_r:zarafa_monitor_log_t,s0)
-/var/log/zarafa/server\.log	--	gen_context(system_u:object_r:zarafa_server_log_t,s0)
-/var/log/zarafa/spooler\.log	--	gen_context(system_u:object_r:zarafa_spooler_log_t,s0)
+/var/log/zarafa/dagent\.log.*		--	gen_context(system_u:object_r:zarafa_deliver_log_t,s0)
+/var/log/zarafa/gateway\.log.*	--	gen_context(system_u:object_r:zarafa_gateway_log_t,s0)
+/var/log/zarafa/ical\.log.*	--	gen_context(system_u:object_r:zarafa_ical_log_t,s0)
+/var/log/zarafa/indexer\.log.*	--	gen_context(system_u:object_r:zarafa_indexer_log_t,s0)
+/var/log/zarafa/monitor\.log.*	--	gen_context(system_u:object_r:zarafa_monitor_log_t,s0)
+/var/log/zarafa/server\.log.*	--	gen_context(system_u:object_r:zarafa_server_log_t,s0)
+/var/log/zarafa/spooler\.log.*	--	gen_context(system_u:object_r:zarafa_spooler_log_t,s0)
 
 /var/run/zarafa			-s	gen_context(system_u:object_r:zarafa_server_var_run_t,s0)
 /var/run/zarafa-dagent\.pid		--	gen_context(system_u:object_r:zarafa_deliver_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/system/authlogin.fc serefpolicy-3.7.19/policy/modules/system/authlogin.fc
--- nsaserefpolicy/policy/modules/system/authlogin.fc	2013-03-15 11:41:12.596153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/authlogin.fc	2013-03-15 11:40:09.517152079 +0100
@@ -25,6 +25,8 @@
 /usr/sbin/unix_chkpwd	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
 ')
 
+/var/opt/quest/vas/vasd(/.*)?  gen_context(system_u:object_r:var_auth_t,s0)
+
 /var/cache/coolkey(/.*)?	gen_context(system_u:object_r:auth_cache_t,s0)
 
 /var/db/shadow.*	--	gen_context(system_u:object_r:shadow_t,s0)
@@ -35,10 +37,10 @@
 
 /var/log/btmp.*		--	gen_context(system_u:object_r:faillog_t,s0)
 /var/log/dmesg		--	gen_context(system_u:object_r:var_log_t,s0)
-/var/log/faillog	--	gen_context(system_u:object_r:faillog_t,s0)
-/var/log/lastlog	--	gen_context(system_u:object_r:lastlog_t,s0)
+/var/log/faillog.*	--	gen_context(system_u:object_r:faillog_t,s0)
+/var/log/lastlog.*	--	gen_context(system_u:object_r:lastlog_t,s0)
 /var/log/syslog		--	gen_context(system_u:object_r:var_log_t,s0)
-/var/log/tallylog	--	gen_context(system_u:object_r:faillog_t,s0)
+/var/log/tallylog.*	--	gen_context(system_u:object_r:faillog_t,s0)
 /var/log/wtmp.*		--	gen_context(system_u:object_r:wtmp_t,s0)
 
 /var/run/console(/.*)?	 	gen_context(system_u:object_r:pam_var_console_t,s0)
diff -Nur nsaserefpolicy/policy/modules/system/authlogin.if serefpolicy-3.7.19/policy/modules/system/authlogin.if
--- nsaserefpolicy/policy/modules/system/authlogin.if	2013-03-15 11:41:12.596153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/authlogin.if	2013-03-15 11:40:09.529152079 +0100
@@ -128,6 +128,8 @@
 
 	files_list_var_lib($1)
 	manage_files_pattern($1, var_auth_t, var_auth_t)
+	manage_dirs_pattern($1, var_auth_t, var_auth_t)
+	manage_sock_files_pattern($1, var_auth_t, var_auth_t)
 
 	manage_dirs_pattern($1, auth_cache_t, auth_cache_t)
 	manage_files_pattern($1, auth_cache_t, auth_cache_t)
@@ -171,6 +173,7 @@
 	logging_set_tty_audit($1)
 
 	seutil_read_config($1)
+	seutil_read_login_config($1)
 	seutil_read_default_contexts($1)
 
 	userdom_set_rlimitnh($1)
@@ -436,6 +439,7 @@
 	optional_policy(`
 		samba_stream_connect_winbind($1)
 	')
+
 	auth_domtrans_upd_passwd($1)
 ')
 
@@ -1632,7 +1636,9 @@
 	')
 
 	optional_policy(`
+		sssd_read_public_files($1)
 		sssd_stream_connect($1)
+		sssd_read_lib_files($1)
 	')
 
 	optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/system/init.if serefpolicy-3.7.19/policy/modules/system/init.if
--- nsaserefpolicy/policy/modules/system/init.if	2013-03-15 11:41:12.671153520 +0100
+++ serefpolicy-3.7.19/policy/modules/system/init.if	2013-03-15 11:40:09.614152081 +0100
@@ -197,6 +197,7 @@
 		role system_r;
 		attribute daemon;
 		attribute initrc_transition_domain;
+		attribute initrc_domain;
 	')
 
 	typeattribute $1 daemon;
@@ -207,6 +208,8 @@
 	role system_r types $1;
 
 	domtrans_pattern(initrc_t,$2,$1)
+	domtrans_pattern(initrc_domain, $2,$1)
+
 	allow initrc_t $1:process siginh;
 	allow $1 initrc_transition_domain:fifo_file rw_inherited_fifo_file_perms;
 	allow $1 initrc_transition_domain:fd use;
@@ -249,6 +252,43 @@
 	')
 ')
 
+######################################
+## <summary>
+##      Create initrc domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##       Type to be used as a initrc daemon domain.
+##      </summary>
+## </param>
+#
+interface(`init_initrc_domain',`
+        gen_require(`
+                attribute initrc_domain;
+        ')
+
+        typeattribute $1 initrc_domain;
+')
+
+#####################################
+## <summary>
+##      Create initrc domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##       Type to be used as a initrc daemon domain.
+##      </summary>
+## </param>
+#
+interface(`init_initrc_domtrans_to',`
+        gen_require(`
+                type initrc_t;
+        ')
+
+	domtrans_pattern(initrc_t,$2, $1)
+	allow initrc_t $1:process siginh;
+')
+
 ########################################
 ## <summary>
 ##	Create a domain for long running processes
@@ -351,6 +391,7 @@
 		role system_r;
 		attribute initrc_transition_domain;
 		attribute systemprocess;
+		attribute initrc_domain;
 	')
 
 	typeattribute $1 systemprocess;
@@ -359,6 +400,7 @@
 	role system_r types $1;
 
 	domtrans_pattern(initrc_t,$2,$1)
+	domtrans_pattern(initrc_domain,$2,$1)
 	allow initrc_t $1:process siginh;
 	allow $1 initrc_transition_domain:fifo_file rw_inherited_fifo_file_perms;
 	allow $1 initrc_transition_domain:fd use;
@@ -1604,6 +1646,24 @@
 	rw_files_pattern($1, initrc_tmp_t, initrc_tmp_t)
 ')
 
+#######################################
+## <summary>
+##  Read and write init script inherited temporary data.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`init_rw_inherited_script_tmp_files',`
+    gen_require(`
+        type initrc_tmp_t;
+    ')
+
+    allow $1 initrc_tmp_t:file rw_inherited_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Create files in a init script
diff -Nur nsaserefpolicy/policy/modules/system/init.te serefpolicy-3.7.19/policy/modules/system/init.te
--- nsaserefpolicy/policy/modules/system/init.te	2013-03-15 11:41:12.475153515 +0100
+++ serefpolicy-3.7.19/policy/modules/system/init.te	2013-04-03 10:41:51.827546280 +0200
@@ -48,6 +48,7 @@
 attribute init_script_file_type;
 attribute init_run_all_scripts_domain;
 attribute initrc_transition_domain;
+attribute initrc_domain;
 
 # Mark process types as daemons
 attribute daemon;
@@ -324,6 +325,7 @@
 files_read_kernel_symbol_table(initrc_t)
 files_exec_etc_files(initrc_t)
 files_manage_etc_symlinks(initrc_t)
+files_manage_system_conf_files(initrc_t)
 
 fs_manage_tmpfs_dirs(initrc_t)
 fs_tmpfs_filetrans(initrc_t, initrc_state_t, file)
@@ -608,6 +610,10 @@
 	')
 
 	optional_policy(`
+		cyrus_manage_data(initrc_t)
+    ')
+
+	optional_policy(`
 		cgroup_stream_connect(initrc_t)
 	')
 
@@ -636,6 +642,10 @@
 		sysnet_relabelfrom_dhcpc_state(initrc_t)
 	')
 
+    optional_policy(`
+        tgtd_stream_connect(initrc_t)
+    ')
+
 	optional_policy(`
 		xserver_delete_log(initrc_t)
 	')
@@ -1100,6 +1110,10 @@
     firstboot_dontaudit_leaks(daemon)
 ')
 
+files_dontaudit_rw_inherited_locks(systemprocess)
+
+logging_dontaudit_rw_inherited_generic_logs(systemprocess)
+
 optional_policy(`
     abrt_stream_connect(systemprocess)
 ')
@@ -1107,3 +1121,7 @@
 optional_policy(`
 	cfengine_append_inherited_log(systemprocess)
 ')
+
+optional_policy(`
+	rgmanager_search_lib(initrc_domain)
+')
diff -Nur nsaserefpolicy/policy/modules/system/ipsec.fc serefpolicy-3.7.19/policy/modules/system/ipsec.fc
--- nsaserefpolicy/policy/modules/system/ipsec.fc	2013-03-15 11:41:12.540153517 +0100
+++ serefpolicy-3.7.19/policy/modules/system/ipsec.fc	2013-03-15 11:40:09.431152077 +0100
@@ -36,7 +36,7 @@
 /usr/sbin/racoon		--	gen_context(system_u:object_r:racoon_exec_t,s0)
 /usr/sbin/setkey		--	gen_context(system_u:object_r:setkey_exec_t,s0)
 
-/var/log/pluto\.log		--	gen_context(system_u:object_r:ipsec_log_t,s0)
+/var/log/pluto\.log.*		--	gen_context(system_u:object_r:ipsec_log_t,s0)
 
 /var/lock/subsys/ipsec  --	gen_context(system_u:object_r:ipsec_mgmt_lock_t,s0)
 
diff -Nur nsaserefpolicy/policy/modules/system/ipsec.te serefpolicy-3.7.19/policy/modules/system/ipsec.te
--- nsaserefpolicy/policy/modules/system/ipsec.te	2013-03-15 11:41:12.672153520 +0100
+++ serefpolicy-3.7.19/policy/modules/system/ipsec.te	2013-03-15 11:40:09.635152081 +0100
@@ -82,7 +82,7 @@
 allow ipsec_t self:key_socket create_socket_perms;
 allow ipsec_t self:fifo_file read_fifo_file_perms;
 allow ipsec_t self:netlink_xfrm_socket { create_netlink_socket_perms nlmsg_write };
-allow ipsec_t self:unix_stream_socket { read write };
+allow ipsec_t self:unix_stream_socket { connectto create_stream_socket_perms };
 
 allow ipsec_t ipsec_initrc_exec_t:file read_file_perms;
 
@@ -172,6 +172,7 @@
 init_use_script_ptys(ipsec_t)
 
 logging_send_syslog_msg(ipsec_t)
+logging_send_audit_msgs(ipsec_t)
 
 miscfiles_read_localization(ipsec_t)
 
diff -Nur nsaserefpolicy/policy/modules/system/iptables.fc serefpolicy-3.7.19/policy/modules/system/iptables.fc
--- nsaserefpolicy/policy/modules/system/iptables.fc	2013-03-15 11:41:12.584153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/iptables.fc	2013-03-15 11:40:09.479152078 +0100
@@ -1,9 +1,9 @@
 /etc/rc\.d/init\.d/ip6?tables	--	gen_context(system_u:object_r:iptables_initrc_exec_t,s0)
 
 /sbin/ipchains.*		--	gen_context(system_u:object_r:iptables_exec_t,s0)
-/sbin/ip6?tables		--	gen_context(system_u:object_r:iptables_exec_t,s0)
-/sbin/ip6?tables-restore	--	gen_context(system_u:object_r:iptables_exec_t,s0)
-/sbin/ip6?tables-multi		--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/sbin/ip6?tables.*		--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/sbin/ip6?tables-restore.*	--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/sbin/ip6?tables-multi.*		--	gen_context(system_u:object_r:iptables_exec_t,s0)
 
 /sbin/ebtables         --  gen_context(system_u:object_r:iptables_exec_t,s0)
 /sbin/ebtables-restore --  gen_context(system_u:object_r:iptables_exec_t,s0)
diff -Nur nsaserefpolicy/policy/modules/system/iptables.te serefpolicy-3.7.19/policy/modules/system/iptables.te
--- nsaserefpolicy/policy/modules/system/iptables.te	2013-03-15 11:41:12.529153516 +0100
+++ serefpolicy-3.7.19/policy/modules/system/iptables.te	2013-06-06 14:13:43.799893182 +0200
@@ -127,6 +127,11 @@
 ')
 
 optional_policy(`
+    quantum_sigchld(iptables_t)
+    quantum_rw_fifo_file(iptables_t)
+')
+
+optional_policy(`
 	rhgb_dontaudit_use_ptys(iptables_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/system/iscsi.fc serefpolicy-3.7.19/policy/modules/system/iscsi.fc
--- nsaserefpolicy/policy/modules/system/iscsi.fc	2013-03-15 11:41:12.585153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/iscsi.fc	2013-03-15 11:40:09.480152078 +0100
@@ -4,5 +4,5 @@
 
 /var/lib/iscsi(/.*)?		gen_context(system_u:object_r:iscsi_var_lib_t,s0)
 /var/lock/iscsi(/.*)?		gen_context(system_u:object_r:iscsi_lock_t,s0)
-/var/log/brcm-iscsi\.log --	gen_context(system_u:object_r:iscsi_log_t,s0)
+/var/log/brcm-iscsi\.log.*	--	gen_context(system_u:object_r:iscsi_log_t,s0)
 /var/run/iscsid\.pid	--	gen_context(system_u:object_r:iscsi_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/system/libraries.fc serefpolicy-3.7.19/policy/modules/system/libraries.fc
--- nsaserefpolicy/policy/modules/system/libraries.fc	2013-03-15 11:41:12.662153519 +0100
+++ serefpolicy-3.7.19/policy/modules/system/libraries.fc	2013-03-15 11:40:09.612152081 +0100
@@ -322,7 +322,11 @@
 
 /var/mailman/pythonlib(/.*)?/.+\.so(\..*)? --	gen_context(system_u:object_r:lib_t,s0)
 
-/var/named/chroot/.*/lib(64)?(/.*)?	--	gen_context(system_u:object_r:lib_t,s0)
+/var/named/chroot/lib(/.*)?			gen_context(system_u:object_r:lib_t,s0)
+/var/named/chroot/lib64(/.*)?		gen_context(system_u:object_r:lib_t,s0)
+
+/var/named/chroot/usr/lib(/.*)?		gen_context(system_u:object_r:lib_t,s0)
+/var/named/chroot/usr/lib64(/.*)?	gen_context(system_u:object_r:lib_t,s0)
 
 /usr/lib(64)?/pgsql/.*\.so.*		--	gen_context(system_u:object_r:lib_t,s0)
 /usr/lib(64)?/pgsql/test/regress/.*\.so.*		--	gen_context(system_u:object_r:lib_t,s0)
@@ -422,8 +426,6 @@
 /usr/lib(64)?/xulrunner-[^/]*/libxul\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 # Flash plugin, Macromedia
 HOME_DIR/\.mozilla(/.*)?/plugins/libflashplayer\.so.* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib(64)?/.*/libflashplayer\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/local/(.*/)?libflashplayer\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/php/modules/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/xorg/modules/dri/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/X11R6/lib/modules/dri/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
@@ -472,6 +474,9 @@
 /usr/lib/nsr/(.*/)?.*\.so		-- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/qutim/libplugman\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
+/usr/lib(64)?/.*/libflashplayer\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/(.*/)?libflashplayer\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
 /opt/lgtonmc/bin/.*\.so(\.[0-9])?  	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
 /opt/google/picasa/.*\.dll	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
 /opt/google/picasa/.*\.yti	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
diff -Nur nsaserefpolicy/policy/modules/system/locallogin.te serefpolicy-3.7.19/policy/modules/system/locallogin.te
--- nsaserefpolicy/policy/modules/system/locallogin.te	2013-03-15 11:41:12.599153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/locallogin.te	2013-03-15 11:40:09.548152079 +0100
@@ -11,6 +11,12 @@
 auth_login_pgm_domain(local_login_t)
 auth_login_entry_type(local_login_t)
 
+init_daemon_domain(local_login_t, login_exec_t)
+
+ifdef(`enable_mcs',`
+	init_ranged_daemon_domain(local_login_t, login_exec_t,  s0 - mcs_systemhigh)
+')
+
 type local_login_lock_t;
 files_lock_file(local_login_lock_t)
 
@@ -124,6 +130,9 @@
 term_relabel_all_ttys(local_login_t)
 term_setattr_all_ttys(local_login_t)
 term_setattr_unallocated_ttys(local_login_t)
+term_relabel_all_ptys(local_login_t)
+term_setattr_generic_ptys(local_login_t)
+term_relabel_devpts(local_login_t)
 
 auth_rw_login_records(local_login_t)
 auth_rw_faillog(local_login_t)
diff -Nur nsaserefpolicy/policy/modules/system/logging.fc serefpolicy-3.7.19/policy/modules/system/logging.fc
--- nsaserefpolicy/policy/modules/system/logging.fc	2013-03-15 11:41:12.569153517 +0100
+++ serefpolicy-3.7.19/policy/modules/system/logging.fc	2013-03-15 11:40:09.440152077 +0100
@@ -42,7 +42,7 @@
 
 /var/log		-d	gen_context(system_u:object_r:var_log_t,s0-mls_systemhigh)
 /var/log/.*			gen_context(system_u:object_r:var_log_t,s0)
-/var/log/boot\.log             gen_context(system_u:object_r:var_log_t,mls_systemhigh)
+/var/log/boot\.log.*	            gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/messages[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/secure[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/cron[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
@@ -52,7 +52,7 @@
 /var/log/syslog-ng(/.*)?       gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
 
 ifndef(`distro_gentoo',`
-/var/log/audit\.log	--	gen_context(system_u:object_r:auditd_log_t,mls_systemhigh)
+/var/log/audit\.log.*	--	gen_context(system_u:object_r:auditd_log_t,mls_systemhigh)
 ')
 
 ifdef(`distro_redhat',`
@@ -73,7 +73,7 @@
 
 /var/spool/bacula/log(/.*)? 	gen_context(system_u:object_r:var_log_t,s0)
 /var/spool/postfix/pid	-d	gen_context(system_u:object_r:var_run_t,s0)
-/var/spool/plymouth/boot\.log  gen_context(system_u:object_r:var_log_t,mls_systemhigh)
+/var/spool/plymouth/boot\.log.*	 gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/spool/rsyslog(/.*)? 	gen_context(system_u:object_r:var_log_t,s0)
 /var/spool/audit(/.*)?         gen_context(system_u:object_r:audit_spool_t,mls_systemhigh)
 
diff -Nur nsaserefpolicy/policy/modules/system/logging.if serefpolicy-3.7.19/policy/modules/system/logging.if
--- nsaserefpolicy/policy/modules/system/logging.if	2013-03-15 11:41:12.683153520 +0100
+++ serefpolicy-3.7.19/policy/modules/system/logging.if	2013-03-15 11:40:09.664152082 +0100
@@ -900,6 +900,24 @@
 
 ########################################
 ## <summary>
+##     Dontaudit read/Write inherited generic log files.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain to not audit.
+##     </summary>
+## </param>
+#
+interface(`logging_dontaudit_rw_inherited_generic_logs',`
+       gen_require(`
+               type var_log_t;
+       ')
+
+       dontaudit $1 var_log_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Dontaudit Write generic log files.
 ## </summary>
 ## <param name="domain">
diff -Nur nsaserefpolicy/policy/modules/system/logging.te serefpolicy-3.7.19/policy/modules/system/logging.te
--- nsaserefpolicy/policy/modules/system/logging.te	2013-03-15 11:41:12.625153519 +0100
+++ serefpolicy-3.7.19/policy/modules/system/logging.te	2013-03-15 11:40:09.567152080 +0100
@@ -13,6 +13,13 @@
 ## </desc>
 gen_tunable(logging_syslogd_can_sendmail, false)
 
+## <desc>
+## <p>
+## Allow syslogd daemon to send mail
+## </p>
+## </desc>
+gen_tunable(logging_syslog_can_read_tmp, false)
+
 attribute logfile;
 
 type auditctl_t;
@@ -390,7 +397,7 @@
 allow syslogd_t self:capability { dac_override sys_resource sys_tty_config net_admin sys_admin sys_nice chown fsetid ipc_lock };
 dontaudit syslogd_t self:capability sys_tty_config;
 # setpgid for metalog
-allow syslogd_t self:process { getsched setsched setrlimit signal_perms setpgid };
+allow syslogd_t self:process { getcap getsched setcap setsched setrlimit signal_perms setpgid };
 # receive messages to be logged
 allow syslogd_t self:unix_dgram_socket create_socket_perms;
 allow syslogd_t self:unix_stream_socket create_stream_socket_perms;
@@ -484,9 +491,11 @@
 # /initrd is not umounted before minilog starts
 files_dontaudit_search_isid_type_dirs(syslogd_t)
 files_read_kernel_symbol_table(syslogd_t)
+files_search_home(syslogd_t)
 
 fs_getattr_all_fs(syslogd_t)
 fs_search_auto_mountpoints(syslogd_t)
+fs_rw_anon_inodefs_files(syslogd_t)
 
 mls_file_write_all_levels(syslogd_t) # Need to be able to write to /var/run/ and /var/log directories
 
@@ -510,7 +519,11 @@
 miscfiles_read_localization(syslogd_t)
 
 userdom_dontaudit_use_unpriv_user_fds(syslogd_t)
-userdom_dontaudit_search_user_home_dirs(syslogd_t)
+userdom_search_user_home_dirs(syslogd_t)
+
+tunable_policy(`logging_syslog_can_read_tmp',`
+	userdom_read_user_tmp_files(syslogd_t)
+')
 
 ifdef(`distro_gentoo',`
 	# default gentoo syslog-ng config appends kernel
@@ -539,6 +552,12 @@
 ')
 
 optional_policy(`
+    kerberos_keytab_template(syslogd, syslogd_t)
+    kerberos_manage_host_rcache(syslogd_t)
+    kerberos_read_config(syslogd_t)
+')
+
+optional_policy(`
 	mysql_stream_connect(syslogd_t)
 ')
 
@@ -549,6 +568,7 @@
 optional_policy(`
 	seutil_sigchld_newrole(syslogd_t)
 	snmp_read_snmp_var_lib_files(syslogd_t)
+	snmp_dontaudit_write_snmp_var_lib_files(syslogd_t)
 ')
 
 optional_policy(`
diff -Nur nsaserefpolicy/policy/modules/system/lvm.fc serefpolicy-3.7.19/policy/modules/system/lvm.fc
--- nsaserefpolicy/policy/modules/system/lvm.fc	2013-03-15 11:41:12.583153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/lvm.fc	2013-03-15 11:40:09.467152078 +0100
@@ -23,6 +23,8 @@
 /etc/lvmtab(/.*)?		gen_context(system_u:object_r:lvm_metadata_t,s0)
 /etc/lvmtab\.d(/.*)?		gen_context(system_u:object_r:lvm_metadata_t,s0)
 
+/etc/multipath(/.*)?    gen_context(system_u:object_r:lvm_metadata_t,s0)
+
 #
 # /lib
 #
@@ -101,6 +103,7 @@
 /var/cache/multipathd(/.*)?	gen_context(system_u:object_r:lvm_metadata_t,s0)
 /var/lib/multipath(/.*)?	gen_context(system_u:object_r:lvm_var_lib_t,s0)
 /var/lock/lvm(/.*)?		gen_context(system_u:object_r:lvm_lock_t,s0)
+/var/run/lvm(/.*)?     gen_context(system_u:object_r:lvm_var_run_t,s0)
 /var/run/multipathd\.sock -s	gen_context(system_u:object_r:lvm_var_run_t,s0)
 /var/run/clvmd\.pid --  gen_context(system_u:object_r:clvmd_var_run_t,s0)
 /var/run/dmevent.*		gen_context(system_u:object_r:lvm_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/system/lvm.te serefpolicy-3.7.19/policy/modules/system/lvm.te
--- nsaserefpolicy/policy/modules/system/lvm.te	2013-03-15 11:41:12.529153516 +0100
+++ serefpolicy-3.7.19/policy/modules/system/lvm.te	2013-03-15 11:40:09.404152076 +0100
@@ -215,8 +215,9 @@
 
 manage_dirs_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
 manage_files_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
+manage_fifo_files_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
 manage_sock_files_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
-files_pid_filetrans(lvm_t, lvm_var_run_t, { dir file sock_file })
+files_pid_filetrans(lvm_t, lvm_var_run_t, { dir file fifo_file sock_file })
 
 read_files_pattern(lvm_t, lvm_etc_t, lvm_etc_t)
 read_lnk_files_pattern(lvm_t, lvm_etc_t, lvm_etc_t)
diff -Nur nsaserefpolicy/policy/modules/system/miscfiles.fc serefpolicy-3.7.19/policy/modules/system/miscfiles.fc
--- nsaserefpolicy/policy/modules/system/miscfiles.fc	2013-03-15 11:41:12.516153516 +0100
+++ serefpolicy-3.7.19/policy/modules/system/miscfiles.fc	2013-07-09 16:19:34.229384553 +0200
@@ -43,6 +43,8 @@
 
 /usr/man(/.*)?			gen_context(system_u:object_r:man_t,s0)
 
+/usr/share/ca-certificates(/.*)?    gen_context(system_u:object_r:cert_t,s0)
+/usr/share/pki/ca-certificates(/.*)?    gen_context(system_u:object_r:cert_t,s0)
 /usr/share/fonts(/.*)?		gen_context(system_u:object_r:fonts_t,s0)
 /usr/share/X11/fonts(/.*)?	gen_context(system_u:object_r:fonts_t,s0)
 /usr/share/ghostscript/fonts(/.*)? gen_context(system_u:object_r:fonts_t,s0)
@@ -73,6 +75,8 @@
 
 /var/lib/texmf(/.*)?		gen_context(system_u:object_r:tetex_data_t,s0)
 
+#/var/lib/ipa/pki-ca/publish(/.*)?        gen_context(system_u:object_r:cert_t,s0)
+
 /var/cache/fontconfig(/.*)?	gen_context(system_u:object_r:fonts_cache_t,s0)
 /var/cache/fonts(/.*)?		gen_context(system_u:object_r:tetex_data_t,s0)
 /var/cache/man(/.*)?		gen_context(system_u:object_r:man_t,s0)
@@ -91,4 +95,5 @@
 ifdef(`distro_redhat',`
 /var/empty/sshd/etc/localtime -- gen_context(system_u:object_r:locale_t,s0)
 /var/spool/postfix/etc/localtime -- gen_context(system_u:object_r:locale_t,s0)
+/var/named/chroot/etc/localtime	--	gen_context(system_u:object_r:locale_t,s0)
 ')
diff -Nur nsaserefpolicy/policy/modules/system/miscfiles.te serefpolicy-3.7.19/policy/modules/system/miscfiles.te
--- nsaserefpolicy/policy/modules/system/miscfiles.te	2013-03-15 11:41:12.683153520 +0100
+++ serefpolicy-3.7.19/policy/modules/system/miscfiles.te	2013-06-12 13:23:22.965961388 +0200
@@ -47,9 +47,11 @@
 #
 type public_content_t; #, customizable;
 files_type(public_content_t)
+files_mountpoint(public_content_t)
 
 type public_content_rw_t; #, customizable;
 files_type(public_content_rw_t)
+files_mountpoint(public_content_rw_t)
 
 #
 # Base type for the tests directory.
diff -Nur nsaserefpolicy/policy/modules/system/mount.te serefpolicy-3.7.19/policy/modules/system/mount.te
--- nsaserefpolicy/policy/modules/system/mount.te	2013-03-15 11:41:12.582153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/mount.te	2013-03-15 11:40:09.450152077 +0100
@@ -82,6 +82,7 @@
 kernel_read_system_state(mount_t)
 kernel_read_network_state(mount_t)
 kernel_read_kernel_sysctls(mount_t)
+kernel_relabelfrom_unlabeled_fs(mount_t)
 kernel_search_debugfs(mount_t)
 kernel_setsched(mount_t)
 kernel_use_fds(mount_t)
@@ -102,7 +103,7 @@
 dev_getattr_sound_dev(mount_t)
 
 domain_use_interactive_fds(mount_t)
-domain_dontaudit_search_all_domains_state(mount_t)
+domain_read_all_domains_state(mount_t)
 
 files_search_all(mount_t)
 files_read_etc_files(mount_t)
@@ -251,6 +252,9 @@
 	')
 ')
 
+optional_policy(`
+    glusterd_domtrans(mount_t)
+')
 
 optional_policy(`
 	hal_write_log(mount_t)
diff -Nur nsaserefpolicy/policy/modules/system/selinuxutil.fc serefpolicy-3.7.19/policy/modules/system/selinuxutil.fc
--- nsaserefpolicy/policy/modules/system/selinuxutil.fc	2013-03-15 11:41:12.636153519 +0100
+++ serefpolicy-3.7.19/policy/modules/system/selinuxutil.fc	2013-03-15 11:40:09.583152080 +0100
@@ -6,6 +6,7 @@
 /etc/selinux(/.*)?			gen_context(system_u:object_r:selinux_config_t,s0)
 /etc/selinux/([^/]*/)?contexts(/.*)?	gen_context(system_u:object_r:default_context_t,s0)
 /etc/selinux/([^/]*/)?contexts/files(/.*)? gen_context(system_u:object_r:file_context_t,s0)
+/etc/selinux/([^/]*/)?logins(/.*)? gen_context(system_u:object_r:selinux_login_config_t,s0)
 /etc/selinux/([^/]*/)?policy(/.*)?	gen_context(system_u:object_r:semanage_store_t,s0)
 /etc/selinux/([^/]*/)?setrans\.conf --	gen_context(system_u:object_r:selinux_config_t,mls_systemhigh)
 /etc/selinux/([^/]*/)?seusers	--	gen_context(system_u:object_r:selinux_config_t,s0)
diff -Nur nsaserefpolicy/policy/modules/system/selinuxutil.if serefpolicy-3.7.19/policy/modules/system/selinuxutil.if
--- nsaserefpolicy/policy/modules/system/selinuxutil.if	2013-03-15 11:41:12.453153515 +0100
+++ serefpolicy-3.7.19/policy/modules/system/selinuxutil.if	2013-03-15 11:40:09.209152072 +0100
@@ -792,6 +792,157 @@
 	allow $1 selinux_config_t:dir manage_dir_perms;
 ')
 
+#######################################
+## <summary>
+##  Do not audit attempts to search the SELinux
+##  login configuration directory.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`seutil_dontaudit_search_login_config',`
+    gen_require(`
+        type selinux_login_config_t;
+    ')
+
+    dontaudit $1 selinux_login_config_t:dir search_dir_perms;
+')
+
+#######################################
+## <summary>
+##  Do not audit attempts to read the SELinux
+##  login configuration.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`seutil_dontaudit_read_login_config',`
+    gen_require(`
+        type selinux_login_config_t;
+    ')
+    dontaudit $1 selinux_login_config_t:dir search_dir_perms;
+    dontaudit $1 selinux_login_config_t:file read_file_perms;
+')
+
+#######################################
+## <summary>
+##  Read the  SELinux login configuration files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`seutil_read_login_config',`
+    gen_require(`
+        type selinux_config_t;
+        type selinux_login_config_t;
+    ')
+
+    files_search_etc($1)
+    allow $1 selinux_config_t:dir search_dir_perms;
+    allow $1 selinux_login_config_t:dir list_dir_perms;
+    read_files_pattern($1, selinux_login_config_t, selinux_login_config_t)
+    read_lnk_files_pattern($1, selinux_login_config_t, selinux_login_config_t)
+')
+
+#######################################
+## <summary>
+##  Read and write the SELinux login configuration files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`seutil_rw_login_config',`
+    gen_require(`
+        type selinux_config_t;
+        type selinux_login_config_t;
+    ')
+
+    files_search_etc($1)
+    allow $1 selinux_config_t:dir search_dir_perms;
+    allow $1 selinux_login_config_t:dir list_dir_perms;
+    rw_files_pattern($1, selinux_login_config_t, selinux_login_config_t)
+')
+
+######################################
+## <summary>
+##  Create, read, write, and delete
+##  the general selinux configuration files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`seutil_rw_login_config_dirs',`
+    gen_require(`
+        type selinux_config_t;
+        type selinux_login_config_t;
+    ')
+
+    files_search_etc($1)
+    allow $1 selinux_config_t:dir search_dir_perms;
+    allow $1 selinux_login_config_t:dir rw_dir_perms;
+')
+
+#####################################
+## <summary>
+##  Create, read, write, and delete
+##  the general selinux configuration files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`seutil_manage_login_config',`
+    gen_require(`
+        type selinux_config_t;
+        type selinux_login_config_t;
+    ')
+
+    files_search_etc($1)
+    allow $1 selinux_config_t:dir search_dir_perms;
+    manage_dirs_pattern($1, selinux_login_config_t, selinux_login_config_t)
+    manage_files_pattern($1, selinux_login_config_t, selinux_login_config_t)
+    read_lnk_files_pattern($1, selinux_login_config_t, selinux_login_config_t)
+')
+
+#####################################
+## <summary>
+##  manage the login selinux configuration files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`seutil_manage_login_config_files',`
+    gen_require(`
+        type selinux_config_t;
+        type selinux_login_config_t;
+    ')
+
+    files_search_etc($1)
+    allow $1 selinux_config_t:dir search_dir_perms;
+    manage_files_pattern($1, selinux_login_config_t, selinux_login_config_t)
+    read_lnk_files_pattern($1, selinux_login_config_t, selinux_login_config_t)
+')
+
 ########################################
 ## <summary>
 ##	Search the policy directory with default_context files.
@@ -1310,9 +1461,9 @@
 		type semanage_tmp_t;
 		type policy_config_t;
 	')
-	allow $1 self:capability { dac_override sys_resource };
+	allow $1 self:capability { dac_override sys_resource sys_nice };
 	dontaudit $1 self:capability sys_tty_config;
-	allow $1 self:process signal;
+	allow $1 self:process { signal setsched };
 	allow $1 self:unix_stream_socket create_stream_socket_perms;
 	allow $1 self:unix_dgram_socket create_socket_perms;
 	logging_send_audit_msgs($1)
@@ -1349,6 +1500,7 @@
 	selinux_getattr_fs($1)
 	selinux_validate_context($1)
 	selinux_get_enforce_mode($1)
+	selinux_read_policy($1)
 
 	term_use_all_terms($1)
 
@@ -1427,6 +1579,7 @@
 	files_relabel_all_files($1)
 	files_list_isid_type_dirs($1)
 	files_read_isid_type_files($1)
+	files_read_all_symlinks($1)
 	files_dontaudit_read_all_symlinks($1)
 
 	fs_getattr_xattr_fs($1)
diff -Nur nsaserefpolicy/policy/modules/system/selinuxutil.te serefpolicy-3.7.19/policy/modules/system/selinuxutil.te
--- nsaserefpolicy/policy/modules/system/selinuxutil.te	2013-03-15 11:41:12.491153516 +0100
+++ serefpolicy-3.7.19/policy/modules/system/selinuxutil.te	2013-03-15 11:40:09.244152072 +0100
@@ -23,6 +23,9 @@
 type selinux_config_t;
 files_type(selinux_config_t)
 
+type selinux_login_config_t;
+files_type(selinux_login_config_t)
+
 type selinux_var_lib_t;
 files_type(selinux_var_lib_t)
 
@@ -92,6 +95,7 @@
 type semanage_t;
 type semanage_exec_t;
 application_domain(semanage_t, semanage_exec_t)
+init_daemon_domain(semanage_t, semanage_exec_t)
 dbus_system_domain(semanage_t, semanage_exec_t)
 domain_interactive_fd(semanage_t)
 role system_r types semanage_t;
@@ -139,6 +143,7 @@
 read_files_pattern(checkpolicy_t, policy_src_t, policy_src_t)
 read_lnk_files_pattern(checkpolicy_t, policy_src_t, policy_src_t)
 allow checkpolicy_t selinux_config_t:dir search_dir_perms;
+allow checkpolicy_t selinux_login_config_t:dir search_dir_perms;
 
 domain_use_interactive_fds(checkpolicy_t)
 
diff -Nur nsaserefpolicy/policy/modules/system/sysnetwork.fc serefpolicy-3.7.19/policy/modules/system/sysnetwork.fc
--- nsaserefpolicy/policy/modules/system/sysnetwork.fc	2013-03-15 11:41:12.598153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/sysnetwork.fc	2013-05-30 15:55:39.355311717 +0200
@@ -19,7 +19,7 @@
 /etc/resolv\.conf.*	--	gen_context(system_u:object_r:net_conf_t,s0)
 /etc/yp\.conf.*		--	gen_context(system_u:object_r:net_conf_t,s0)
 
-/etc/dhcp3(/.*)?		gen_context(system_u:object_r:dhcp_etc_t,s0)
+/etc/dhcp3?(/.*)?		gen_context(system_u:object_r:dhcp_etc_t,s0)
 /etc/dhcp3?/dhclient.*		gen_context(system_u:object_r:dhcp_etc_t,s0)
 
 ifdef(`distro_redhat',`
@@ -66,3 +66,4 @@
 ')
 
 /etc/firestarter/firestarter\.sh gen_context(system_u:object_r:dhcpc_helper_exec_t,s0)
+/var/run/netns(/.*)?        gen_context(system_u:object_r:ifconfig_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/system/sysnetwork.te serefpolicy-3.7.19/policy/modules/system/sysnetwork.te
--- nsaserefpolicy/policy/modules/system/sysnetwork.te	2013-03-15 11:41:12.550153517 +0100
+++ serefpolicy-3.7.19/policy/modules/system/sysnetwork.te	2013-06-05 13:28:03.981735627 +0200
@@ -44,6 +44,10 @@
 init_system_domain(ifconfig_t, ifconfig_exec_t)
 role system_r types ifconfig_t;
 
+type ifconfig_var_run_t;
+files_pid_file(ifconfig_var_run_t)
+files_mountpoint(ifconfig_var_run_t)
+
 type net_conf_t alias resolv_conf_t;
 files_type(net_conf_t)
 
@@ -146,6 +150,7 @@
 term_dontaudit_use_generic_ptys(dhcpc_t)
 
 init_rw_utmp(dhcpc_t)
+init_rw_inherited_script_tmp_files(ifconfig_t)
 
 logging_send_syslog_msg(dhcpc_t)
 
@@ -194,6 +199,10 @@
 ')
 
 optional_policy(`
+    dnsmasq_domtrans(ifconfig_t)
+')
+
+optional_policy(`
 	hal_dontaudit_rw_dgram_sockets(dhcpc_t)
 	hal_dontaudit_write_log(dhcpc_t)
 	hal_dontaudit_read_pid_files(dhcpc_t)
@@ -262,6 +271,10 @@
 ')
 
 optional_policy(`
+    virt_manage_pid_files(dhcpc_t)
+')
+
+optional_policy(`
 	kernel_read_xen_state(dhcpc_t)
 	kernel_write_xen_state(dhcpc_t)
 	xen_append_log(dhcpc_t)
@@ -273,7 +286,7 @@
 # Ifconfig local policy
 #
 
-allow ifconfig_t self:capability { net_raw net_admin sys_tty_config };
+allow ifconfig_t self:capability { net_raw net_admin sys_admin sys_tty_config };
 allow ifconfig_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execheap execstack };
 allow ifconfig_t self:fd use;
 allow ifconfig_t self:fifo_file rw_fifo_file_perms;
@@ -295,6 +308,13 @@
 allow ifconfig_t self:netlink_xfrm_socket { create_netlink_socket_perms nlmsg_read };
 allow ifconfig_t self:tcp_socket { create ioctl };
 
+can_exec(ifconfig_t, ifconfig_exec_t)
+
+manage_files_pattern(ifconfig_t, ifconfig_var_run_t, ifconfig_var_run_t)
+create_dirs_pattern(ifconfig_t, ifconfig_var_run_t, ifconfig_var_run_t)
+files_pid_filetrans(ifconfig_t, ifconfig_var_run_t, { file dir })
+allow ifconfig_t ifconfig_var_run_t:file mounton;
+
 kernel_use_fds(ifconfig_t)
 kernel_read_system_state(ifconfig_t)
 kernel_read_network_state(ifconfig_t)
@@ -304,9 +324,15 @@
 
 corenet_rw_tun_tap_dev(ifconfig_t)
 
+corecmd_exec_bin(ifconfig_t)
+corecmd_exec_shell(ifconfig_t)
+
 dev_read_sysfs(ifconfig_t)
 # for IPSEC setup:
 dev_read_urand(ifconfig_t)
+dev_mounton_sysfs(ifconfig_t)
+dev_mount_sysfs_fs(ifconfig_t)
+dev_unmount_sysfs_fs(ifconfig_t)
 
 domain_use_interactive_fds(ifconfig_t)
 
@@ -384,6 +410,14 @@
 ')
 
 optional_policy(`
+    iptables_domtrans(ifconfig_t)
+')
+
+optional_policy(`
+    libs_exec_ldconfig(ifconfig_t)
+')
+
+optional_policy(`
 	netutils_domtrans(dhcpc_t)
 ')
 
diff -Nur nsaserefpolicy/policy/modules/system/udev.if serefpolicy-3.7.19/policy/modules/system/udev.if
--- nsaserefpolicy/policy/modules/system/udev.if	2013-03-15 11:41:12.458153515 +0100
+++ serefpolicy-3.7.19/policy/modules/system/udev.if	2013-03-21 15:58:06.716942339 +0100
@@ -238,6 +238,29 @@
 	allow $1 udev_tbl_t:file unlink;
 ')
 
+#######################################
+## <summary>
+##      Create, read, write, and delete
+##      udev pid files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`udev_read_pid_files',`
+        gen_require(`
+                type udev_var_run_t;
+        ')
+
+        dev_list_all_dev_nodes($1)
+        files_search_pids($1)
+        allow $1 udev_var_run_t:dir list_dir_perms;
+        read_files_pattern($1, udev_var_run_t, udev_var_run_t)
+        read_lnk_files_pattern($1, udev_var_run_t, udev_var_run_t)
+')
+
 ########################################
 ## <summary>
 ##	Create, read, write, and delete
diff -Nur nsaserefpolicy/policy/modules/system/userdomain.if serefpolicy-3.7.19/policy/modules/system/userdomain.if
--- nsaserefpolicy/policy/modules/system/userdomain.if	2013-03-15 11:41:12.595153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/userdomain.if	2013-03-15 11:40:09.504152078 +0100
@@ -1489,6 +1489,7 @@
 	seutil_manage_file_contexts($1)
 	seutil_manage_module_store($1)
 	seutil_manage_config($1)
+	seutil_manage_login_config($1)
 
 	optional_policy(`
 		aide_run($1,$2)
@@ -3772,6 +3773,24 @@
 	stream_connect_pattern($1, user_tmp_t, user_tmp_t, userdomain)
 ')
 
+#######################################
+## <summary>
+##  Dontaudit connectto to users over an unix stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_stream_connectto',`
+    gen_require(`
+        attribute userdomain;
+    ')
+
+	dontaudit $1 userdomain:unix_stream_socket connectto;
+')
+
 ########################################
 ## <summary>
 ##	Ptrace user domains.
diff -Nur nsaserefpolicy/policy/modules/system/xen.fc serefpolicy-3.7.19/policy/modules/system/xen.fc
--- nsaserefpolicy/policy/modules/system/xen.fc	2013-03-15 11:41:12.651153519 +0100
+++ serefpolicy-3.7.19/policy/modules/system/xen.fc	2013-03-15 11:40:09.584152080 +0100
@@ -21,11 +21,11 @@
 /var/lib/xend(/.*)?		gen_context(system_u:object_r:xend_var_lib_t,s0)
 /var/lib/xenstored(/.*)?	gen_context(system_u:object_r:xenstored_var_lib_t,s0)
 
-/var/log/evtchnd\.log	--	gen_context(system_u:object_r:evtchnd_var_log_t,s0)
+/var/log/evtchnd\.log.*	--	gen_context(system_u:object_r:evtchnd_var_log_t,s0)
 /var/log/xen(/.*)?		gen_context(system_u:object_r:xend_var_log_t,s0)
-/var/log/xen-hotplug\.log --	gen_context(system_u:object_r:xend_var_log_t,s0)
-/var/log/xend\.log	--	gen_context(system_u:object_r:xend_var_log_t,s0)
-/var/log/xend-debug\.log --	gen_context(system_u:object_r:xend_var_log_t,s0)
+/var/log/xen-hotplug\.log.*	--	gen_context(system_u:object_r:xend_var_log_t,s0)
+/var/log/xend\.log.*	--	gen_context(system_u:object_r:xend_var_log_t,s0)
+/var/log/xend-debug\.log.*	--	gen_context(system_u:object_r:xend_var_log_t,s0)
 
 /var/run/evtchnd	-s	gen_context(system_u:object_r:evtchnd_var_run_t,s0)
 /var/run/evtchnd\.pid	--	gen_context(system_u:object_r:evtchnd_var_run_t,s0)
diff -Nur nsaserefpolicy/policy/modules/system/xen.te serefpolicy-3.7.19/policy/modules/system/xen.te
--- nsaserefpolicy/policy/modules/system/xen.te	2013-03-15 11:41:12.586153518 +0100
+++ serefpolicy-3.7.19/policy/modules/system/xen.te	2013-03-21 15:47:54.172802578 +0100
@@ -421,6 +421,7 @@
 storage_raw_read_fixed_disk(xm_t)
 
 term_use_all_terms(xm_t)
+term_dontaudit_use_generic_ptys(xm_t)
 
 init_stream_connect_script(xm_t)
 init_rw_script_stream_sockets(xm_t)
@@ -441,6 +442,9 @@
 		hal_dbus_chat(xm_t)
 	')
 ')
+optional_policy(`
+    rhcs_domtrans_fenced(xm_t)
+')
 
 optional_policy(`
 	vhostmd_rw_tmpfs_files(xm_t)

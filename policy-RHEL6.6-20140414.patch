diff --git a/policy/modules/admin/accountsd.te b/policy/modules/admin/accountsd.te
index 2306cf3..f9207d9 100644
--- a/policy/modules/admin/accountsd.te
+++ b/policy/modules/admin/accountsd.te
@@ -10,7 +10,7 @@ type accountsd_exec_t;
 dbus_system_domain(accountsd_t, accountsd_exec_t)
 
 type accountsd_var_lib_t;
-files_type(accountsd_var_lib_t)
+files_var_lib_file(accountsd_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/admin/alsa.te b/policy/modules/admin/alsa.te
index b5acac3..ccea867 100644
--- a/policy/modules/admin/alsa.te
+++ b/policy/modules/admin/alsa.te
@@ -15,7 +15,7 @@ type alsa_etc_rw_t;
 files_type(alsa_etc_rw_t)
 
 type alsa_var_lib_t;
-files_type(alsa_var_lib_t)
+files_var_lib_file(alsa_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/admin/amanda.te b/policy/modules/admin/amanda.te
index dc6d584..0be5edb 100644
--- a/policy/modules/admin/amanda.te
+++ b/policy/modules/admin/amanda.te
@@ -27,7 +27,7 @@ files_type(amanda_usr_lib_t)
 
 # type for all files in /var/lib/amanda
 type amanda_var_lib_t;
-files_type(amanda_var_lib_t)
+files_var_lib_file(amanda_var_lib_t)
 
 # type for all files in /var/lib/amanda/gnutar-lists/
 type amanda_gnutarlists_t;
diff --git a/policy/modules/admin/anaconda.fc b/policy/modules/admin/anaconda.fc
index 3afd63b..33acd4f 100644
--- a/policy/modules/admin/anaconda.fc
+++ b/policy/modules/admin/anaconda.fc
@@ -3,3 +3,7 @@
 # started during install.  This is a placeholder to satisfy
 # the policy Makefile dependencies.
 #
+
+/usr/bin/preupg.*   --  gen_context(system_u:object_r:preupgrade_exec_t,s0)
+/var/lib/preupgrade(/.*)?   gen_context(system_u:object_r:preupgrade_data_t,s0)
+/var/log/preupgrade(/.*)?   gen_context(system_u:object_r:preupgrade_data_t,s0)
diff --git a/policy/modules/admin/anaconda.if b/policy/modules/admin/anaconda.if
index 18491c8..ef8765b 100644
--- a/policy/modules/admin/anaconda.if
+++ b/policy/modules/admin/anaconda.if
@@ -1 +1,80 @@
 ## <summary>Policy for the Anaconda installer.</summary>
+
+########################################
+## <summary>
+##	Execute preupgrade in the caller domain.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`anaconda_exec_preupgrade',`
+	gen_require(`
+		type preupgrade_exec_t;
+	')
+
+	corecmd_search_bin($1)
+    can_exec($1, preupgrade_exec_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run preupgrade.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`anaconda_domtrans_preupgrade',`
+	gen_require(`
+		type preupgrade_t, preupgrade_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, preupgrade_exec_t, preupgrade_t)
+')
+
+########################################
+## <summary>
+##	Read preupgrade lib files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`anaconda_read_lib_files_preupgrade',`
+	gen_require(`
+		type preupgrade_data_t;
+	')
+
+	read_files_pattern($1, preupgrade_data_t, preupgrade_data_t)
+	read_lnk_files_pattern($1, preupgrade_data_t, preupgrade_data_t)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Manage preupgrade lib files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`anaconda_manage_lib_files_preupgrade',`
+	gen_require(`
+		type preupgrade_data_t;
+	')
+
+	manage_dirs_pattern($1, preupgrade_data_t, preupgrade_data_t)
+	manage_files_pattern($1, preupgrade_data_t, preupgrade_data_t)
+	manage_lnk_files_pattern($1, preupgrade_data_t, preupgrade_data_t)
+	files_search_var_lib($1)
+')
diff --git a/policy/modules/admin/anaconda.te b/policy/modules/admin/anaconda.te
index 158dbb8..a487fda 100644
--- a/policy/modules/admin/anaconda.te
+++ b/policy/modules/admin/anaconda.te
@@ -12,6 +12,15 @@ domain_type(anaconda_t)
 domain_obj_id_change_exemption(anaconda_t)
 role system_r types anaconda_t;
 
+type preupgrade_t;
+type preupgrade_exec_t;
+application_domain(preupgrade_t, preupgrade_exec_t)
+role system_r types preupgrade_t;
+
+type preupgrade_data_t;
+files_type(preupgrade_data_t)
+
+
 ########################################
 #
 # Local policy
@@ -60,3 +69,16 @@ optional_policy(`
 optional_policy(`
 	usermanage_domtrans_admin_passwd(anaconda_t)
 ')
+
+########################################
+#
+# Local policy
+#
+
+manage_files_pattern(preupgrade_t, preupgrade_data_t, preupgrade_data_t)
+manage_dirs_pattern(preupgrade_t, preupgrade_data_t, preupgrade_data_t)
+manage_lnk_files_pattern(preupgrade_t, preupgrade_data_t, preupgrade_data_t)
+
+optional_policy(`
+    unconfined_domain_noaudit(preupgrade_t)
+')
diff --git a/policy/modules/admin/apt.te b/policy/modules/admin/apt.te
index cd19979..13d10b0 100644
--- a/policy/modules/admin/apt.te
+++ b/policy/modules/admin/apt.te
@@ -32,7 +32,7 @@ files_type(apt_var_cache_t)
 
 # status files
 type apt_var_lib_t alias var_lib_apt_t;
-files_type(apt_var_lib_t)
+files_var_lib_file(apt_var_lib_t)
 
 # aptitude log file
 type apt_var_log_t;
diff --git a/policy/modules/admin/dmesg.te b/policy/modules/admin/dmesg.te
index 43a3c1e..dd4ee4b 100644
--- a/policy/modules/admin/dmesg.te
+++ b/policy/modules/admin/dmesg.te
@@ -29,6 +29,7 @@ kernel_list_proc(dmesg_t)
 kernel_read_proc_symlinks(dmesg_t)
 
 dev_read_sysfs(dmesg_t)
+dev_read_raw_memory(dmesg_t)
 
 fs_search_auto_mountpoints(dmesg_t)
 
diff --git a/policy/modules/admin/dpkg.te b/policy/modules/admin/dpkg.te
index 85ed408..f745c9c 100644
--- a/policy/modules/admin/dpkg.te
+++ b/policy/modules/admin/dpkg.te
@@ -29,7 +29,7 @@ files_tmpfs_file(dpkg_tmpfs_t)
 
 # status files
 type dpkg_var_lib_t alias var_lib_dpkg_t;
-files_type(dpkg_var_lib_t)
+files_var_lib_file(dpkg_var_lib_t)
 
 # package scripts
 type dpkg_script_t;
diff --git a/policy/modules/admin/kismet.te b/policy/modules/admin/kismet.te
index 6bb8c2c..47616d3 100644
--- a/policy/modules/admin/kismet.te
+++ b/policy/modules/admin/kismet.te
@@ -24,7 +24,7 @@ type kismet_tmpfs_t;
 files_tmp_file(kismet_tmpfs_t)
 
 type kismet_var_lib_t;
-files_type(kismet_var_lib_t)
+files_var_lib_file(kismet_var_lib_t)
 
 type kismet_var_run_t;
 files_pid_file(kismet_var_run_t)
diff --git a/policy/modules/admin/logrotate.te b/policy/modules/admin/logrotate.te
index 475e8b1..f03d007 100644
--- a/policy/modules/admin/logrotate.te
+++ b/policy/modules/admin/logrotate.te
@@ -5,6 +5,13 @@ policy_module(logrotate, 1.12.0)
 #
 # Declarations
 #
+## <desc>
+## <p>
+## Allow logrotate to manage nfs files
+## </p>
+## </desc>
+gen_tunable(logrotate_use_nfs, false)
+
 
 type logrotate_t;
 domain_type(logrotate_t)
@@ -22,7 +29,7 @@ type logrotate_tmp_t;
 files_tmp_file(logrotate_tmp_t)
 
 type logrotate_var_lib_t;
-files_type(logrotate_var_lib_t)
+files_var_lib_file(logrotate_var_lib_t)
 
 ########################################
 #
@@ -40,6 +47,7 @@ allow logrotate_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimi
 allow logrotate_t self:process setfscreate;
 
 allow logrotate_t self:fd use;
+allow logrotate_t self:key manage_key_perms;
 allow logrotate_t self:fifo_file rw_fifo_file_perms;
 allow logrotate_t self:unix_dgram_socket create_socket_perms;
 allow logrotate_t self:unix_stream_socket create_stream_socket_perms;
@@ -126,6 +134,13 @@ userdom_use_unpriv_users_fds(logrotate_t)
 userdom_list_admin_dir(logrotate_t)
 userdom_read_admin_home_files(logrotate_t)
 
+tunable_policy(`logrotate_use_nfs',`
+        fs_manage_nfs_files(logrotate_t)
+        fs_manage_nfs_dirs(logrotate_t)
+        fs_manage_nfs_symlinks(logrotate_t)
+')
+
+
 cron_system_entry(logrotate_t, logrotate_exec_t)
 cron_search_spool(logrotate_t)
 
diff --git a/policy/modules/admin/logwatch.te b/policy/modules/admin/logwatch.te
index 6a1162d..27a17b4 100644
--- a/policy/modules/admin/logwatch.te
+++ b/policy/modules/admin/logwatch.te
@@ -189,3 +189,7 @@ mta_read_home(logwatch_mail_t)
 optional_policy(`
     cron_use_system_job_fds(logwatch_mail_t)
 ')
+
+optional_policy(`
+    courier_stream_connect_authdaemon(logwatch_mail_t)
+')
diff --git a/policy/modules/admin/mcelog.if b/policy/modules/admin/mcelog.if
index 3d4cb1a..7cd7922 100644
--- a/policy/modules/admin/mcelog.if
+++ b/policy/modules/admin/mcelog.if
@@ -18,3 +18,21 @@ interface(`mcelog_domtrans',`
 	domtrans_pattern($1, mcelog_exec_t, mcelog_t)
 ')
 
+####################################
+## <summary>
+##     Read mcelog logs.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`mcelog_read_log',`
+       gen_require(`
+               type mcelog_log_t;
+       ')
+
+       logging_search_logs($1)
+       read_files_pattern($1, mcelog_log_t, mcelog_log_t)
+')
diff --git a/policy/modules/admin/mcelog.te b/policy/modules/admin/mcelog.te
index 5ca35f1..c3aee62 100644
--- a/policy/modules/admin/mcelog.te
+++ b/policy/modules/admin/mcelog.te
@@ -5,6 +5,13 @@ policy_module(mcelog,1.0.0)
 #
 # Declarations
 #
+## <desc>
+##      <p>
+##      Determine whether mcelog can use all
+##      the user ttys.
+##      </p>
+## </desc>
+gen_tunable(mcelog_foreground, false)
 
 type mcelog_t;
 type mcelog_exec_t;
@@ -45,8 +52,14 @@ files_read_etc_files(mcelog_t)
 
 mls_file_read_all_levels(mcelog_t)
 
+auth_use_nsswitch(mcelog_t)
+
 logging_send_syslog_msg(mcelog_t)
 
+tunable_policy(`mcelog_foreground',`
+         userdom_use_user_terminals(mcelog_t)
+')
+
 miscfiles_read_localization(mcelog_t)
 
 optional_policy(`
diff --git a/policy/modules/admin/mrtg.te b/policy/modules/admin/mrtg.te
index 8f81e08..21d2e71 100644
--- a/policy/modules/admin/mrtg.te
+++ b/policy/modules/admin/mrtg.te
@@ -20,7 +20,7 @@ type mrtg_log_t;
 logging_log_file(mrtg_log_t)
 
 type mrtg_var_lib_t;
-files_type(mrtg_var_lib_t)
+files_var_lib_file(mrtg_var_lib_t)
 
 type mrtg_var_run_t;
 files_pid_file(mrtg_var_run_t)
diff --git a/policy/modules/admin/permissivedomains.te b/policy/modules/admin/permissivedomains.te
index 0ee3d49..2c2defb 100644
--- a/policy/modules/admin/permissivedomains.te
+++ b/policy/modules/admin/permissivedomains.te
@@ -403,3 +403,123 @@ optional_policy(`
     ')
     permissive openhpid_t;
 ')
+
+optional_policy(`
+    gen_require(`
+        type hypervkvp_t;
+    ')
+    permissive hypervkvp_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type keepalived_t;
+    ')
+    permissive keepalived_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type rtas_errd_t;
+    ')
+    permissive rtas_errd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type mip6d_t;
+    ')
+    permissive mip6d_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type isnsd_t;
+    ')
+    permissive isnsd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type stapserver_t;
+    ')
+    permissive stapserver_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type lsmd_t;
+    ')
+    permissive lsmd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type pcp_pmcd_t;
+    ')
+    permissive pcp_pmcd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type pcp_pmlogger_t;
+    ')
+    permissive pcp_pmlogger_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type pcp_pmproxy_t;
+    ')
+    permissive pcp_pmproxy_t;
+')
+
+
+optional_policy(`
+    gen_require(`
+        type pcp_pmwebd_t;
+    ')
+    permissive pcp_pmwebd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type pcp_pmie_t;
+    ')
+    permissive pcp_pmie_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type pcp_pmmgr_t;
+    ')
+    permissive pcp_pmmgr_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type freeipmi_ipmiseld_t;
+    ')
+    permissive freeipmi_ipmiseld_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type freeipmi_ipmidetectd_t;
+    ')
+    permissive freeipmi_ipmidetectd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type freeipmi_bmc-watchdog_t;
+    ')
+    permissive freeipmi_bmc-watchdog_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type mirrormanager_t;
+    ')
+    permissive mirrormanager_t;
+')
diff --git a/policy/modules/admin/prelink.if b/policy/modules/admin/prelink.if
index 1aac843..d171c7f 100644
--- a/policy/modules/admin/prelink.if
+++ b/policy/modules/admin/prelink.if
@@ -10,17 +10,81 @@
 ##	</summary>
 ## </param>
 #
+interface(`prelink_transition_domain_attribute',`
+    gen_require(`
+        attribute prelink_transition_domain;
+    ')
+
+    typeattribute $1 prelink_transition_domain;
+')
+
+########################################
+## <summary>
+##	Execute the prelink program in the prelink domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`prelink_domtrans_mask',`
+	gen_require(`
+        attribute prelink_transition_domain;
+        type prelink_exec_t, prelink_mask_t;
+	')
+
+    domtrans_pattern({ $1 -prelink_transition_domain }, prelink_exec_t, prelink_mask_t)
+	corecmd_search_bin($1)
+
+    allow $1 prelink_mask_t:process signal;
+
+	ifdef(`hide_broken_symptoms', `
+	        dontaudit prelink_mask_t $1:socket_class_set { read write };
+	        dontaudit prelink_mask_t $1:fifo_file { read write setattr };
+	')
+')
+
+########################################
+## <summary>
+##	Execute the prelink program in the prelink domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`prelink_role_access_mask',`
+	gen_require(`
+        type prelink_mask_t;
+	')
+    role $1 types prelink_mask_t;
+')
+
+########################################
+## <summary>
+##	Execute the prelink program in the prelink domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
 interface(`prelink_domtrans',`
 	gen_require(`
+        attribute prelink_transition_domain;
 		type prelink_t, prelink_exec_t;
 	')
 
+    typeattribute $1 prelink_transition_domain;
 	corecmd_search_bin($1)
-	domtrans_pattern($1, prelink_exec_t, prelink_t)
+	#domtrans_pattern($1, prelink_exec_t, prelink_t)
 
 	ifdef(`hide_broken_symptoms', `
 	        dontaudit prelink_t $1:socket_class_set { read write };
-	        dontaudit prelink_t $1:fifo_file setattr;
+	        dontaudit prelink_t $1:fifo_file { read write setattr };
 	')
 ')
 
diff --git a/policy/modules/admin/prelink.te b/policy/modules/admin/prelink.te
index 6bd43be..18c3cb9 100644
--- a/policy/modules/admin/prelink.te
+++ b/policy/modules/admin/prelink.te
@@ -6,11 +6,19 @@ policy_module(prelink, 1.8.0)
 # Declarations
 
 attribute prelink_object;
+attribute prelink_transition_domain;
+attribute prelink_domain;
 
-type prelink_t;
+type prelink_mask_t, prelink_domain;
+domain_type(prelink_mask_t)
+domain_entry_file(prelink_mask_t, prelink_exec_t)
+role system_r types prelink_mask_t;
+
+type prelink_t, prelink_domain;
 type prelink_exec_t;
 init_system_domain(prelink_t, prelink_exec_t)
 domain_obj_id_change_exemption(prelink_t)
+domtrans_pattern(prelink_transition_domain, prelink_exec_t, prelink_t)
 
 type prelink_cache_t;
 files_type(prelink_cache_t)
@@ -25,7 +33,12 @@ type prelink_tmpfs_t;
 files_tmpfs_file(prelink_tmpfs_t)
 
 type prelink_var_lib_t;
-files_type(prelink_var_lib_t)
+files_var_lib_file(prelink_var_lib_t)
+
+ifdef(`hide_broken_symptoms', `
+    files_dontaudit_rw_non_security_pipes(prelink_domain)
+    domain_dontaudit_rw_pipes(prelink_domain)
+')
 
 ########################################
 #
@@ -36,6 +49,54 @@ type prelink_cron_system_t;
 type prelink_cron_system_exec_t;
 domain_type(prelink_cron_system_t)
 domain_entry_file(prelink_cron_system_t, prelink_cron_system_exec_t)
+prelink_transition_domain_attribute(prelink_cron_system_t)
+
+########################################
+#
+# Local prelink mask policy
+#
+
+allow prelink_mask_t self:capability { chown dac_override fowner fsetid sys_resource };
+
+corecmd_exec_bin(prelink_mask_t)
+
+dev_read_raw_memory(prelink_mask_t)
+
+dev_dontaudit_rw_generic_dev_nodes(prelink_mask_t)
+dev_dontaudit_rw_all_dev_nodes(prelink_mask_t)
+
+fs_list_inotifyfs(prelink_mask_t)
+fs_rw_anon_inodefs_files(prelink_mask_t)
+
+#1103674
+files_write_generic_tmp_files(prelink_mask_t)
+files_setattr_generic_tmp_files(prelink_mask_t)
+files_create_generic_tmp_files(prelink_mask_t)
+files_delete_generic_tmp_files(prelink_mask_t)
+
+files_dontaudit_search_all_dirs(prelink_mask_t)
+files_dontaudit_tmp_file_leaks(prelink_mask_t)
+files_dontaudit_rw_inherited_all_locks(prelink_mask_t)
+files_dontaudit_relabel_tmp_files(prelink_mask_t)
+files_dontaudit_relabel_var_lib_files(prelink_mask_t)
+files_dontaudit_all_non_security_leaks(prelink_mask_t)
+files_dontaudit_leaks(prelink_mask_t)
+files_dontaudit_rw_boot_files(prelink_mask_t)
+
+libs_dontaudit_relabel_lib_files(prelink_mask_t)
+# located in /var/tmp
+libs_delete_lib_files(prelink_mask_t)
+
+libs_exec_ld_so(prelink_mask_t)
+libs_legacy_use_shared_libs(prelink_mask_t)
+
+logging_append_all_logs(prelink_mask_t)
+logging_dontaudit_rw_inherited_all_logs(prelink_mask_t)
+
+miscfiles_read_localization(prelink_mask_t)
+miscfiles_dontaudit_rw_certs(prelink_mask_t)
+
+userdom_use_user_terminals(prelink_mask_t)
 
 ########################################
 #
@@ -80,6 +141,7 @@ corecmd_mmap_all_executables(prelink_t)
 corecmd_read_bin_symlinks(prelink_t)
 
 dev_read_urand(prelink_t)
+dev_read_raw_memory(prelink_t)
 dev_getattr_all_chr_files(prelink_t)
 
 files_list_all(prelink_t)
diff --git a/policy/modules/admin/readahead.te b/policy/modules/admin/readahead.te
index 44be051..639d77c 100644
--- a/policy/modules/admin/readahead.te
+++ b/policy/modules/admin/readahead.te
@@ -12,7 +12,7 @@ init_daemon_domain(readahead_t, readahead_exec_t)
 application_domain(readahead_t, readahead_exec_t)
 
 type readahead_var_lib_t;
-files_type(readahead_var_lib_t)
+files_var_lib_file(readahead_var_lib_t)
 typealias readahead_var_lib_t alias readahead_etc_rw_t;
 
 type readahead_var_run_t;
diff --git a/policy/modules/admin/rpm.te b/policy/modules/admin/rpm.te
index f2ed1da..fd14803 100644
--- a/policy/modules/admin/rpm.te
+++ b/policy/modules/admin/rpm.te
@@ -33,7 +33,7 @@ type rpm_log_t;
 logging_log_file(rpm_log_t)
 
 type rpm_var_lib_t;
-files_type(rpm_var_lib_t)
+files_var_lib_file(rpm_var_lib_t)
 typealias rpm_var_lib_t alias var_lib_rpm_t;
 
 type rpm_var_cache_t;
@@ -226,7 +226,7 @@ optional_policy(`
 ')
 
 optional_policy(`
-	prelink_domtrans(rpm_t)
+    prelink_transition_domain_attribute(rpm_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/admin/sectoolm.te b/policy/modules/admin/sectoolm.te
index e523ab0..c6f8bf6 100644
--- a/policy/modules/admin/sectoolm.te
+++ b/policy/modules/admin/sectoolm.te
@@ -11,7 +11,7 @@ type sectoolm_exec_t;
 dbus_system_domain(sectoolm_t, sectoolm_exec_t)
 
 type sectool_var_lib_t;
-files_type(sectool_var_lib_t)
+files_var_lib_file(sectool_var_lib_t)
 
 type sectool_var_log_t;
 logging_log_file(sectool_var_log_t)
@@ -98,7 +98,7 @@ optional_policy(`
 # suid test using
 # rpm -Vf option
 optional_policy(`
-	prelink_domtrans(sectoolm_t)
+    prelink_transition_domain_attribute(sectoolm_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/admin/shorewall.te b/policy/modules/admin/shorewall.te
index 4bff420..af73fb8 100644
--- a/policy/modules/admin/shorewall.te
+++ b/policy/modules/admin/shorewall.te
@@ -27,7 +27,7 @@ files_tmp_file(shorewall_tmp_t)
 
 # var/lib files
 type shorewall_var_lib_t;
-files_type(shorewall_var_lib_t)
+files_var_lib_file(shorewall_var_lib_t)
 
 type shorewall_log_t;
 logging_log_file(shorewall_log_t)
diff --git a/policy/modules/admin/shutdown.fc b/policy/modules/admin/shutdown.fc
index d8c7d23..631dbc1 100644
--- a/policy/modules/admin/shutdown.fc
+++ b/policy/modules/admin/shutdown.fc
@@ -1,5 +1,11 @@
-/etc/nologin			--	gen_context(system_u:object_r:shutdown_etc_t,s0)
+/etc/nologin	--	gen_context(system_u:object_r:shutdown_etc_t,s0)
 
-/sbin/shutdown			--	gen_context(system_u:object_r:shutdown_exec_t,s0)
+/lib/upstart/shutdown	--	gen_context(system_u:object_r:shutdown_exec_t,s0)
 
-/var/run/shutdown\.pid 	--	gen_context(system_u:object_r:shutdown_var_run_t,s0)
+/sbin/shutdown	--	gen_context(system_u:object_r:shutdown_exec_t,s0)
+
+/usr/lib/upstart/shutdown	--	gen_context(system_u:object_r:shutdown_exec_t,s0)
+
+/usr/sbin/shutdown	--	gen_context(system_u:object_r:shutdown_exec_t,s0)
+
+/var/run/shutdown\.pid		--	gen_context(system_u:object_r:shutdown_var_run_t,s0)
diff --git a/policy/modules/admin/shutdown.te b/policy/modules/admin/shutdown.te
index ccfa7eb..ded0973 100644
--- a/policy/modules/admin/shutdown.te
+++ b/policy/modules/admin/shutdown.te
@@ -43,7 +43,7 @@ mls_file_write_to_clearance(shutdown_t)
 term_use_all_terms(shutdown_t)
 
 auth_use_nsswitch(shutdown_t)
-auth_write_login_records(shutdown_t)
+auth_rw_login_records(shutdown_t)
 
 init_read_utmp(shutdown_t)
 init_rw_utmp(shutdown_t)
diff --git a/policy/modules/admin/su.if b/policy/modules/admin/su.if
index 97575f1..c194c98 100644
--- a/policy/modules/admin/su.if
+++ b/policy/modules/admin/su.if
@@ -217,6 +217,7 @@ ifdef(`hide_broken_symptoms', `
 	auth_dontaudit_read_shadow($1_su_t)
 	auth_use_pam($1_su_t)
 	auth_rw_faillog($1_su_t)
+    auth_write_login_records($1_su_t)
 
 	corecmd_search_bin($1_su_t)
 
diff --git a/policy/modules/admin/sudo.if b/policy/modules/admin/sudo.if
index 30ac94e..8003c0b 100644
--- a/policy/modules/admin/sudo.if
+++ b/policy/modules/admin/sudo.if
@@ -129,6 +129,7 @@ template(`sudo_role_template',`
 	# sudo stores a token in the pam_pid directory
 	auth_manage_pam_pid($1_sudo_t)
 	auth_use_nsswitch($1_sudo_t)
+    auth_read_lastlog($1_sudo_t)
 
 	init_rw_utmp($1_sudo_t)
 
diff --git a/policy/modules/admin/sudo.te b/policy/modules/admin/sudo.te
index e3cc160..80c51a2 100644
--- a/policy/modules/admin/sudo.te
+++ b/policy/modules/admin/sudo.te
@@ -12,3 +12,7 @@ application_executable_file(sudo_exec_t)
 type sudo_db_t;
 files_type(sudo_db_t)
 mls_trusted_object(sudo_db_t)
+
+kernel_getattr_core_if(sudodomain)
+
+dev_dontaudit_getattr_all(sudodomain)
diff --git a/policy/modules/admin/tripwire.te b/policy/modules/admin/tripwire.te
index c39de4a..38ed5b0 100644
--- a/policy/modules/admin/tripwire.te
+++ b/policy/modules/admin/tripwire.te
@@ -25,7 +25,7 @@ type tripwire_tmp_t;
 files_tmp_file(tripwire_tmp_t)
 
 type tripwire_var_lib_t;
-files_type(tripwire_var_lib_t)
+files_var_lib_file(tripwire_var_lib_t)
 
 type twadmin_t;
 type twadmin_exec_t;
diff --git a/policy/modules/admin/usermanage.te b/policy/modules/admin/usermanage.te
index d395eb0..56c2372 100644
--- a/policy/modules/admin/usermanage.te
+++ b/policy/modules/admin/usermanage.te
@@ -360,6 +360,7 @@ userdom_read_user_tmp_files(passwd_t)
 # on user home dir
 userdom_dontaudit_search_user_home_content(passwd_t)
 userdom_stream_connect(passwd_t)
+userdom_rw_stream(passwd_t)
 
 optional_policy(`
 	nscd_domtrans(passwd_t)
diff --git a/policy/modules/apps/awstats.te b/policy/modules/apps/awstats.te
index 19687ff..60f0fc7 100644
--- a/policy/modules/apps/awstats.te
+++ b/policy/modules/apps/awstats.te
@@ -24,7 +24,7 @@ type awstats_tmp_t;
 files_tmp_file(awstats_tmp_t)
 
 type awstats_var_lib_t;
-files_type(awstats_var_lib_t)
+files_var_lib_file(awstats_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/apps/chrome.if b/policy/modules/apps/chrome.if
index 1553356..734e336 100644
--- a/policy/modules/apps/chrome.if
+++ b/policy/modules/apps/chrome.if
@@ -84,8 +84,8 @@ interface(`chrome_role_notrans',`
 
 	allow chrome_sandbox_t $2:unix_dgram_socket { read write };
 	allow $2 chrome_sandbox_t:unix_dgram_socket { read write };
-	allow chrome_sandbox_t $2:unix_stream_socket { getattr read write };
-	allow chrome_sandbox_nacl_t $2:unix_stream_socket { getattr read write };
+	allow chrome_sandbox_t $2:unix_stream_socket rw_socket_perms;
+	allow chrome_sandbox_nacl_t $2:unix_stream_socket rw_socket_perms;
 	allow $2 chrome_sandbox_nacl_t:unix_stream_socket { getattr read write };
 	allow $2 chrome_sandbox_t:unix_stream_socket { getattr read write };
 
diff --git a/policy/modules/apps/gitosis.te b/policy/modules/apps/gitosis.te
index 2885686..cdcef94 100644
--- a/policy/modules/apps/gitosis.te
+++ b/policy/modules/apps/gitosis.te
@@ -12,7 +12,7 @@ application_domain(gitosis_t, gitosis_exec_t)
 role system_r types gitosis_t;
 
 type gitosis_var_lib_t;
-files_type(gitosis_var_lib_t)
+files_var_lib_file(gitosis_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/apps/kdumpgui.te b/policy/modules/apps/kdumpgui.te
index d123653..63ac554 100644
--- a/policy/modules/apps/kdumpgui.te
+++ b/policy/modules/apps/kdumpgui.te
@@ -97,3 +97,6 @@ optional_policy(`
 optional_policy(`
 	policykit_dbus_chat(kdumpgui_t)
 ')
+optional_policy(`
+    openshift_dontaudit_read_initrc(kdumpgui_t)
+')
diff --git a/policy/modules/apps/pulseaudio.te b/policy/modules/apps/pulseaudio.te
index f91a466..aeba48e 100644
--- a/policy/modules/apps/pulseaudio.te
+++ b/policy/modules/apps/pulseaudio.te
@@ -19,7 +19,7 @@ type pulseaudio_tmpfs_t;
 files_tmpfs_file(pulseaudio_tmpfs_t)
 
 type pulseaudio_var_lib_t;
-files_type(pulseaudio_var_lib_t)
+files_var_lib_file(pulseaudio_var_lib_t)
 
 type pulseaudio_var_run_t;
 files_pid_file(pulseaudio_var_run_t)
diff --git a/policy/modules/apps/sandbox.te b/policy/modules/apps/sandbox.te
index fd3855e..a337afc 100644
--- a/policy/modules/apps/sandbox.te
+++ b/policy/modules/apps/sandbox.te
@@ -116,6 +116,7 @@ optional_policy(`
 # sandbox local policy
 #
 
+allow sandbox_domain self:process setpgid;
 allow sandbox_domain self:fifo_file manage_file_perms;
 allow sandbox_domain self:sem create_sem_perms;
 allow sandbox_domain self:shm create_shm_perms;
@@ -148,6 +149,7 @@ files_entrypoint_all_files(sandbox_domain)
 files_read_config_files(sandbox_domain)
 files_read_usr_files(sandbox_domain)
 files_read_var_files(sandbox_domain)
+files_read_all_mountpoint_symlinks(sandbox_domain)
 files_dontaudit_search_all_dirs(sandbox_domain)
 files_dontaudit_list_all_mountpoints(sandbox_x_domain)
 
diff --git a/policy/modules/apps/slocate.te b/policy/modules/apps/slocate.te
index 29f2145..7f9dee5 100644
--- a/policy/modules/apps/slocate.te
+++ b/policy/modules/apps/slocate.te
@@ -14,7 +14,7 @@ type locate_log_t;
 logging_log_file(locate_log_t)
 
 type locate_var_lib_t;
-files_type(locate_var_lib_t)
+files_var_lib_file(locate_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/apps/webalizer.te b/policy/modules/apps/webalizer.te
index aaf717f..29f24fe 100644
--- a/policy/modules/apps/webalizer.te
+++ b/policy/modules/apps/webalizer.te
@@ -21,7 +21,7 @@ type webalizer_tmp_t;
 files_tmp_file(webalizer_tmp_t)
 
 type webalizer_var_lib_t;
-files_type(webalizer_var_lib_t)
+files_var_lib_file(webalizer_var_lib_t)
 
 type webalizer_write_t;
 files_type(webalizer_write_t)
diff --git a/policy/modules/kernel/corecommands.fc b/policy/modules/kernel/corecommands.fc
index 4227432..62b9540 100644
--- a/policy/modules/kernel/corecommands.fc
+++ b/policy/modules/kernel/corecommands.fc
@@ -250,6 +250,7 @@ ifdef(`distro_gentoo',`
 
 /usr/share/apr-0/build/[^/]+\.sh --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/apr-0/build/libtool --	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/conman/exec/.*\.exp	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/dayplanner/dayplanner -- 	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/debconf/.+		--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/denyhosts/scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
@@ -381,6 +382,8 @@ ifdef(`distro_suse', `
 
 /var/ftp/bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 
+/var/lib/asterisk/agi-bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+
 /usr/lib/yp/.+			--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib64/yp/.+		--	gen_context(system_u:object_r:bin_t,s0)
 
diff --git a/policy/modules/kernel/corenetwork.te.in b/policy/modules/kernel/corenetwork.te.in
index 31d6923..4756083 100644
--- a/policy/modules/kernel/corenetwork.te.in
+++ b/policy/modules/kernel/corenetwork.te.in
@@ -90,33 +90,41 @@ network_port(amanda, udp,10080-10082,s0, tcp,10080-10083,s0)
 network_port(amavisd_recv, tcp,10024,s0)
 network_port(amavisd_send, tcp,10025,s0)
 network_port(amqp, tcp,5671,s0, udp,5671,s0, tcp,5672,s0, udp,5672,s0)
-network_port(aol, udp,5190-5193,s0, tcp,5190-5193,s0) 
+network_port(aol, udp,5190-5193,s0, tcp,5190-5193,s0)
+network_port(apc, tcp,3052,s0, udp,3052,s0)
 network_port(apcupsd, tcp,3551,s0, udp,3551,s0)
 network_port(apertus_ldp, tcp,539,s0, udp,539,s0)
 network_port(asterisk, tcp,1720,s0, udp,2427,s0, udp,2727,s0, udp,4569,s0)
 network_port(audit, tcp,60,s0)
 network_port(auth, tcp,113,s0)
+network_port(bacula, tcp,9103,s0, udp,9103,s0)
 network_port(bgp, tcp,179,s0, udp,179,s0, tcp,2605,s0, udp,2605,s0)
 network_port(boinc, tcp,31416,s0)
 type biff_port_t, port_type, reserved_port_type; dnl network_port(biff) # no defined portcon in current strict
 network_port(certmaster, tcp,51235,s0)
+network_port(cockpit, udp,1001,s0)
+network_port(collectd, udp,25826,s0)
 network_port(chronyd, udp,323,s0)
 network_port(clamd, tcp,3310,s0)
 network_port(clockspeed, udp,4041,s0)
 network_port(cluster, tcp,5149,s0, udp,5149,s0, tcp,40040,s0, tcp,50006-50008,s0, udp,50006-50008,s0)
 network_port(cma, tcp,1050,s0, udp,1050,s0)
 network_port(cobbler, tcp,25151,s0)
-network_port(commplex, tcp,5000,s0, udp,5000,s0, tcp,5001,s0, udp,5001,s0)
+network_port(commplex, tcp,5000,s0, udp,5000,s0, tcp,5001,s0, udp,5001,s0, tcp,4331,s0)
 network_port(comsat, udp,512,s0)
 network_port(condor, tcp, 9618,s0, udp, 9618,s0)
+network_port(conman, tcp,7890,s0, udp,7890,s0)
 network_port(ctdb, tcp,4379,s0, udp,4379,s0)
 network_port(cvs, tcp,2401,s0, udp,2401,s0)
 network_port(cyphesis, tcp,6767,s0, tcp,6769,s0, tcp,6780-6799,s0, udp,32771,s0)
+network_port(connlcli, tcp,1358,s0, udp,1358,s0)
+network_port(gluster, tcp,24007-24027,s0, tcp, 38465-38469,s0)
 network_port(dbskkd, tcp,1178,s0)
 network_port(dcc, udp,6276,s0, udp,6277,s0)
 network_port(dccm, tcp,5679,s0, udp,5679,s0)
 network_port(dhcpc, udp,68,s0, tcp,68,s0, udp,546,s0, tcp, 546,s0)
 network_port(dhcpd, udp,67,s0, udp,547,s0, tcp, 547,s0, udp,548,s0, tcp, 548,s0, tcp,647,s0, udp,647,s0, tcp,847,s0, udp,847,s0, tcp,7911,s0)
+network_port(dey_sapi, tcp,4330,s0)
 network_port(dict, tcp,2628,s0)
 network_port(distccd, tcp,3632,s0)
 network_port(dns, udp,53,s0, tcp,53,s0)
@@ -127,6 +135,7 @@ network_port(festival, tcp,1314,s0)
 network_port(fingerd, tcp,79,s0)
 network_port(flash, tcp,843,s0, tcp,1935,s0, udp,1935,s0)
 network_port(florence, tcp,1228,s0, udp,1228,s0)
+network_port(freeipmi, tcp,9225,s0, udp,9225,s0)
 network_port(ftp, tcp,21,s0, tcp,990,s0, udp,990,s0)
 network_port(ftp_data, tcp,20,s0)
 network_port(gatekeeper, udp,1718,s0, udp,1719,s0, tcp,1721,s0, tcp,7000,s0)
@@ -188,9 +197,11 @@ network_port(munin, tcp,4949,s0, udp,4949,s0)
 network_port(mysqld, tcp,1186,s0, tcp,3306,s0, tcp,63132-63164,s0)
 network_port(mysqlmanagerd, tcp,2273,s0)
 network_port(movaz_ssc, tcp,5252,s0)
+network_port(mountd, tcp,20048,s0, udp,20048,s0)
 network_port(nessus, tcp,1241,s0)
 network_port(netport, tcp,3129,s0, udp,3129,s0)
 network_port(netsupport, tcp,5404,s0, udp,5404,s0, tcp,5405,s0, udp,5405,s0)
+network_port(nfs, tcp,2049,s0, udp,2049,s0, tcp,20048-20049,s0, udp,20048-20049,s0)
 network_port(nmbd, udp,137,s0, udp,138,s0)
 network_port(nodejs_debug, tcp,5858,s0, udp,5858,s0)
 network_port(ntp, udp,123,s0)
@@ -218,13 +229,14 @@ network_port(postgresql, tcp,5432,s0)
 network_port(postgrey, tcp,60000,s0)
 network_port(prelude, tcp,4690,s0, udp,4690,s0)
 network_port(presence, tcp,5298,s0, udp,5298,s0)
+network_port(preupgrade, tcp, 8099, s0)
 network_port(printer, tcp,515,s0)
 network_port(ptal, tcp,5703,s0)
 network_port(pulseaudio, tcp,4713,s0, udp,4713,s0)
 network_port(puppet, tcp, 8140, s0)
 network_port(pxe, udp,4011,s0)
 network_port(pyzor, udp,24441,s0)
-network_port(quantum, tcp,9696,s0)
+network_port(neutron, tcp,9696,s0)
 network_port(radacct, udp,1646,s0, udp,1813,s0)
 network_port(radius, udp,1645,s0, udp,1812,s0)
 network_port(radsec, tcp,2083,s0)
@@ -257,7 +269,7 @@ type stunnel_port_t, port_type; dnl network_port(stunnel) # no defined portcon i
 network_port(svn, tcp,3690,s0, udp,3690,s0)
 network_port(swat, tcp,901,s0)
 network_port(sype, tcp,9911,s0, udp,9911,s0)
-network_port(syslogd, udp,514,s0, tcp,6514,s0, udp,6514,s0)
+network_port(syslogd, udp,514,s0, tcp,6514,s0, udp,6514,s0, udp,601,s0, tcp,601,s0)
 network_port(telnetd, tcp,23,s0)
 network_port(tftp, udp,69,s0)
 network_port(tor, tcp, 6969, s0, tcp,9001,s0, tcp,9030,s0, tcp,9051,s0)
@@ -345,3 +357,7 @@ allow corenet_unconfined_type port_type:udp_socket { send_msg recv_msg };
 # Bind to any network address.
 allow corenet_unconfined_type port_type:{ tcp_socket udp_socket rawip_socket } name_bind;
 allow corenet_unconfined_type node_type:{ tcp_socket udp_socket rawip_socket } node_bind;
+
+typealias  neutron_port_t alias quantum_port_t;
+typealias  neutron_server_packet_t alias quantum_server_packet_t;
+typealias  neutron_client_packet_t alias quantum_client_packet_t;
diff --git a/policy/modules/kernel/devices.if b/policy/modules/kernel/devices.if
index 6dea126..ccff7d9 100644
--- a/policy/modules/kernel/devices.if
+++ b/policy/modules/kernel/devices.if
@@ -531,6 +531,24 @@ interface(`dev_dontaudit_read_generic_chr_files',`
     dontaudit $1 device_t:chr_file { getattr read };
 ')
 
+#######################################
+## <summary>
+##  Dontaudit read for generic character device files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to dontaudit access.
+##  </summary>
+## </param>
+#
+interface(`dev_dontaudit_read_generic_blk_files',`
+    gen_require(`
+        type device_t;
+    ')
+
+    dontaudit $1 device_t:blk_file { getattr read };
+')
+
 ########################################
 ## <summary>
 ##	Dontaudit setattr for generic character device files.
@@ -768,6 +786,24 @@ interface(`dev_dontaudit_rw_generic_dev_nodes',`
 
 ########################################
 ## <summary>
+##	Dontaudit getattr for generic device files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to dontaudit access.
+##	</summary>
+## </param>
+#
+interface(`dev_dontaudit_rw_all_dev_nodes',`
+	gen_require(`
+		attribute device_node;
+	')
+
+	dontaudit $1 device_node:{ chr_file blk_file } { getattr read write ioctl };
+')
+
+########################################
+## <summary>
 ##	Create, delete, read, and write block device files.
 ## </summary>
 ## <param name="domain">
@@ -942,6 +978,25 @@ interface(`dev_dontaudit_getattr_all_chr_files',`
 
 ########################################
 ## <summary>
+##      Dontaudit getattr on all device nodes.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`dev_dontaudit_getattr_all',`
+        gen_require(`
+                attribute device_node;
+                type device_t;
+        ')
+
+        dontaudit $1 { device_t device_node }:dir_file_class_set getattr;
+')
+
+########################################
+## <summary>
 ##	Setattr on all block file device nodes.
 ## </summary>
 ## <param name="domain">
@@ -2580,6 +2635,24 @@ interface(`dev_read_misc',`
 
 ########################################
 ## <summary>
+##	Read and write ipmi devices.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rw_ipmi_dev',`
+	gen_require(`
+		type device_t, ipmi_device_t;
+	')
+
+	rw_chr_files_pattern($1, device_t, ipmi_device_t)
+')
+
+########################################
+## <summary>
 ##	Write miscellaneous devices.
 ## </summary>
 ## <param name="domain">
diff --git a/policy/modules/kernel/domain.if b/policy/modules/kernel/domain.if
index ccc556d..7be0fe4 100644
--- a/policy/modules/kernel/domain.if
+++ b/policy/modules/kernel/domain.if
@@ -491,6 +491,26 @@ interface(`domain_signull_all_domains',`
 	allow $1 domain:process signull;
 ')
 
+#######################################
+## <summary>
+##  Send a null signal to all domains.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`domain_dontaudit_signull_all_domains',`
+    gen_require(`
+        attribute domain;
+    ')
+
+    dontaudit $1 domain:process signull;
+')
+
+
 ########################################
 ## <summary>
 ##	Send a stop signal to all domains.
@@ -1077,6 +1097,25 @@ interface(`domain_dontaudit_rw_all_key_sockets',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to read or write
+##	all domains key sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`domain_dontaudit_rw_pipes',`
+	gen_require(`
+		attribute domain;
+	')
+
+	dontaudit $1 domain:fifo_file { read write setattr };
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to get the attributes
 ##	of all domains unix datagram sockets.
 ## </summary>
diff --git a/policy/modules/kernel/domain.te b/policy/modules/kernel/domain.te
index 5a5c36a..7f0b7a5 100644
--- a/policy/modules/kernel/domain.te
+++ b/policy/modules/kernel/domain.te
@@ -133,6 +133,9 @@ files_search_default(domain)
 files_read_etc_files(domain)
 files_read_usr_files(domain)
 
+files_read_inherited_tmp_files(domain)
+files_append_inherited_tmp_files(domain)
+
 # All executables should be able to search the directory they are in
 corecmd_search_bin(domain)
 
@@ -143,7 +146,8 @@ tunable_policy(`fips_mode',`
 
 optional_policy(`
        tunable_policy(`fips_mode',`
-               prelink_exec(domain)
+               #prelink_exec(domain)
+               prelink_domtrans_mask(domain)
        ')
 ')
 
diff --git a/policy/modules/kernel/files.if b/policy/modules/kernel/files.if
index 4c1b716..04888e2 100644
--- a/policy/modules/kernel/files.if
+++ b/policy/modules/kernel/files.if
@@ -128,6 +128,26 @@ interface(`files_lock_file',`
 ########################################
 ## <summary>
 ##	Make the specified type usable for
+##	lock files.
+## </summary>
+## <param name="type">
+##	<summary>
+##	Type to be used for lock files.
+##	</summary>
+## </param>
+#
+interface(`files_var_lib_file',`
+	gen_require(`
+		attribute variablestatefile;
+	')
+
+	files_type($1)
+	typeattribute $1 variablestatefile;
+')
+
+########################################
+## <summary>
+##	Make the specified type usable for
 ##	filesystem mount points.
 ## </summary>
 ## <param name="type">
@@ -1022,6 +1042,25 @@ interface(`files_dontaudit_getattr_non_security_pipes',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to get the attributes
+##	of non security named pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_rw_non_security_pipes',`
+	gen_require(`
+		attribute non_security_file_type;
+	')
+
+	dontaudit $1 non_security_file_type:fifo_file { read write setattr };
+')
+
+########################################
+## <summary>
 ##	Get the attributes of all named sockets.
 ## </summary>
 ## <param name="domain">
@@ -1495,6 +1534,24 @@ interface(`files_getattr_all_mountpoints',`
 	allow $1 mountpoint:dir getattr;
 ')
 
+########################################
+## <summary>
+##	Read  all mountpoint symbolic links.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_read_all_mountpoint_symlinks',`
+	gen_require(`
+		attribute mountpoint;
+	')
+
+    allow $1 mountpoint:lnk_file read_lnk_file_perms;
+')
+
 #######################################
 ## <summary>
 ##  List the attributes of all mount points.
@@ -1605,6 +1662,25 @@ interface(`files_write_all_mountpoints',`
 
 ########################################
 ## <summary>
+##	Write all mount points.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_rw_all_mountpoints',`
+	gen_require(`
+		attribute mountpoint;
+	')
+
+	allow $1 mountpoint:dir { read write };
+	allow $1 mountpoint:file { read write };
+')
+
+########################################
+## <summary>
 ##	List the contents of the root directory.
 ## </summary>
 ## <param name="domain">
@@ -1986,6 +2062,26 @@ interface(`files_read_boot_files',`
 ## </param>
 ## <rolecap/>
 #
+interface(`files_dontaudit_rw_boot_files',`
+	gen_require(`
+		type boot_t;
+	')
+
+    dontaudit $1 boot_t:file { read write };
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete files
+##	in the /boot directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
 interface(`files_manage_boot_files',`
 	gen_require(`
 		type boot_t;
@@ -4280,6 +4376,74 @@ interface(`files_read_generic_tmp_files',`
 
 ########################################
 ## <summary>
+##	Read files in the tmp directory (/tmp).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_write_generic_tmp_files',`
+	gen_require(`
+		type tmp_t;
+	')
+    allow $1 tmp_t:file write_file_perms;
+')
+
+########################################
+## <summary>
+##	Read files in the tmp directory (/tmp).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_setattr_generic_tmp_files',`
+	gen_require(`
+		type tmp_t;
+	')
+    allow $1 tmp_t:file setattr_file_perms;
+')
+
+########################################
+## <summary>
+##	Read files in the tmp directory (/tmp).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_create_generic_tmp_files',`
+	gen_require(`
+		type tmp_t;
+	')
+    create_files_pattern($1, tmp_t, tmp_t)
+')
+
+########################################
+## <summary>
+##	Read files in the tmp directory (/tmp).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_delete_generic_tmp_files',`
+	gen_require(`
+		type tmp_t;
+	')
+    delete_files_pattern($1, tmp_t, tmp_t)
+')
+
+########################################
+## <summary>
 ##	Manage temporary directories in /tmp.
 ## </summary>
 ## <param name="domain">
@@ -4414,6 +4578,60 @@ interface(`files_setattr_all_tmp_dirs',`
 
 ########################################
 ## <summary>
+##	Allow caller to read inherited tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_read_inherited_tmp_files',`
+	gen_require(`
+		attribute tmpfile;
+	')
+
+	allow $1 tmpfile:file { append read_inherited_file_perms };
+')
+
+########################################
+## <summary>
+##	Allow caller to append inherited tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_append_inherited_tmp_files',`
+	gen_require(`
+		attribute tmpfile;
+	')
+
+	allow $1 tmpfile:file append_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Allow caller to read and write inherited tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_rw_inherited_tmp_file',`
+	gen_require(`
+		attribute tmpfile;
+	')
+
+	allow $1 tmpfile:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	List all tmp directories.
 ## </summary>
 ## <param name="domain">
@@ -5239,7 +5457,7 @@ interface(`files_dontaudit_rw_var_files',`
 		type var_t;
 	')
 
-	dontaudit $1 var_t:file rw_file_perms;
+	dontaudit $1 var_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -5411,6 +5629,42 @@ interface(`files_rw_var_lib_dirs',`
 	rw_dirs_pattern($1, var_lib_t, var_lib_t)
 ')
 
+###########################################
+## <summary>
+##	Read-write /var/lib directories
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_relabel_var_lib_files',`
+	gen_require(`
+		attribute variablestatefile;
+	')
+
+    dontaudit $1 variablestatefile:file { relabelfrom relabelto };
+')
+
+###########################################
+## <summary>
+##	Read-write /var/lib directories
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_relabel_tmp_files',`
+	gen_require(`
+		attribute tmpfile;
+	')
+
+    dontaudit $1 tmpfile:file { relabelfrom relabelto };
+')
+
 ########################################
 ## <summary>
 ##	Create objects in the /var/lib directory
@@ -5578,6 +5832,25 @@ interface(`files_dontaudit_rw_inherited_locks',`
 
 ########################################
 ## <summary>
+##     Do not audit attempts to read/write inherited
+##     locks (/var/lock).
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain to not audit.
+##     </summary>
+## </param>
+#
+interface(`files_dontaudit_rw_inherited_all_locks',`
+       gen_require(`
+               type lockfile;
+       ')
+
+       dontaudit $1 lockfile:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##     Set the attributes of the /var/lock directory.
 ## </summary>
 ## <param name="domain">
diff --git a/policy/modules/kernel/files.te b/policy/modules/kernel/files.te
index 7ec26b5..6e2996d 100644
--- a/policy/modules/kernel/files.te
+++ b/policy/modules/kernel/files.te
@@ -13,6 +13,7 @@ attribute mountpoint;
 attribute pidfile;
 attribute configfile;
 attribute etcfile;
+attribute variablestatefile;
 
 # For labeling types that are to be polyinstantiated
 attribute polydir;
diff --git a/policy/modules/kernel/filesystem.te b/policy/modules/kernel/filesystem.te
index 861b0b6..b3ce08f 100644
--- a/policy/modules/kernel/filesystem.te
+++ b/policy/modules/kernel/filesystem.te
@@ -68,6 +68,7 @@ genfscon binfmt_misc / gen_context(system_u:object_r:binfmt_misc_fs_t,s0)
 
 type oracleasmfs_t;
 fs_type(oracleasmfs_t)
+dev_node(oracleasmfs_t)
 files_mountpoint(oracleasmfs_t)
 genfscon oracleasmfs / gen_context(system_u:object_r:oracleasmfs_t,s0)
 
diff --git a/policy/modules/kernel/kernel.if b/policy/modules/kernel/kernel.if
index 171c8dc..08cb863 100644
--- a/policy/modules/kernel/kernel.if
+++ b/policy/modules/kernel/kernel.if
@@ -3066,6 +3066,26 @@ interface(`kernel_unconfined',`
 	typeattribute $1 kern_unconfined;
 ')
 
+######################################
+## <summary>
+##  Allow the specified domain to read/write on 
+##  the kernel with a unix socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`kernel_rw_stream_socket_perms',`
+    gen_require(`
+        type kernel_t;
+    ')
+
+    allow $1 kernel_t:unix_stream_socket rw_socket_perms;
+    allow $1 kernel_t:fd use;
+')
+
 ########################################
 ## <summary>
 ##	Allow the specified domain to connect to
diff --git a/policy/modules/roles/sysadm.te b/policy/modules/roles/sysadm.te
index 513f3bd..4531c50 100644
--- a/policy/modules/roles/sysadm.te
+++ b/policy/modules/roles/sysadm.te
@@ -276,6 +276,11 @@ optional_policy(`
 ')
 
 optional_policy(`
+    lldpad_dgram_send(sysadm_t)
+    lldpad_dgram_recv(sysadm_t)
+')
+
+optional_policy(`
 	lpd_run_checkpc(sysadm_t, sysadm_r)
 	lpd_role(sysadm_r, sysadm_t)
 ')
@@ -355,7 +360,9 @@ optional_policy(`
 ')
 
 optional_policy(`
-    postfix_admin(sysadm_t, sysadm_r)
+    postfix_run_map(sysadm_t, sysadm_r)
+    postfix_run_postdrop(sysadm_t, sysadm_r)
+    postfix_stream_connect_master(sysadm_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/services/abrt.te b/policy/modules/services/abrt.te
index 3acc91a..1a3b384 100644
--- a/policy/modules/services/abrt.te
+++ b/policy/modules/services/abrt.te
@@ -97,9 +97,9 @@ files_type(abrt_retrace_spool_t)
 # abrt local policy
 #
 
-allow abrt_t self:capability { chown dac_override fowner fsetid kill setgid setuid sys_nice };
+allow abrt_t self:capability { chown dac_override fowner fsetid kill setgid setuid sys_nice ipc_lock sys_ptrace };
 dontaudit abrt_t self:capability sys_rawio;
-allow abrt_t self:process { setpgid sigkill signal signull setsched getsched };
+allow abrt_t self:process { setpgid sigkill signal signull setsched getsched getcap };
 
 allow abrt_t self:fifo_file rw_fifo_file_perms;
 allow abrt_t self:tcp_socket create_stream_socket_perms;
@@ -197,6 +197,7 @@ logging_read_generic_logs(abrt_t)
 
 miscfiles_read_certs(abrt_t)
 miscfiles_read_public_files(abrt_t)
+miscfiles_read_man_pages(abrt_t)
 
 userdom_dontaudit_read_user_home_content_files(abrt_t)
 userdom_dontaudit_read_admin_home_files(abrt_t)
@@ -220,6 +221,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+       mcelog_read_log(abrt_t)
+')
+
+optional_policy(`
 	policykit_dbus_chat(abrt_t)
 	policykit_domtrans_auth(abrt_t)
 	policykit_read_lib(abrt_t)
@@ -227,7 +232,10 @@ optional_policy(`
 ')
 
 optional_policy(`
-	prelink_domtrans(abrt_t)
+    prelink_transition_domain_attribute(abrt_t)
+')
+
+optional_policy(`
 	libs_exec_ld_so(abrt_t)
 	corecmd_exec_all_executables(abrt_t)
 ')
@@ -272,6 +280,10 @@ tunable_policy(`abrt_handle_event',`
 ')
 
 optional_policy(`
+    prelink_transition_domain_attribute(abrt_handle_event_t)
+')
+
+optional_policy(`
 	unconfined_domain(abrt_handle_event_t)
 ')
 
@@ -333,6 +345,10 @@ ifdef(`hide_broken_symptoms',`
 	allow abrt_t domain:process setrlimit;
 ')
 
+optional_policy(`
+    prelink_transition_domain_attribute(abrt_helper_t)
+')
+
 #######################################
 #
 # abrt retrace coredump policy
diff --git a/policy/modules/services/aide.te b/policy/modules/services/aide.te
index aef8ec4..3619e85 100644
--- a/policy/modules/services/aide.te
+++ b/policy/modules/services/aide.te
@@ -24,6 +24,7 @@ files_type(aide_db_t)
 #
 
 allow aide_t self:capability { dac_override fowner ipc_lock sys_admin };
+allow aide_t self:process signal;
 
 # database actions
 manage_files_pattern(aide_t, aide_db_t, aide_db_t)
@@ -33,6 +34,9 @@ files_var_lib_filetrans(aide_t, aide_db_t, { dir file })
 manage_files_pattern(aide_t, aide_log_t, aide_log_t)
 logging_log_filetrans(aide_t, aide_log_t, file)
 
+dev_read_urand(aide_t)
+dev_read_rand(aide_t)
+
 files_read_all_files(aide_t)
 files_read_boot_symlinks(aide_t)
 files_read_all_symlinks(aide_t)
@@ -55,6 +59,6 @@ optional_policy(`
 ')
 
 optional_policy(`
-    prelink_domtrans(aide_t)
+    prelink_transition_domain_attribute(aide_t)
 ')
 
diff --git a/policy/modules/services/aisexec.te b/policy/modules/services/aisexec.te
index 8bfb251..97f5b8c 100644
--- a/policy/modules/services/aisexec.te
+++ b/policy/modules/services/aisexec.te
@@ -26,7 +26,7 @@ logging_log_file(aisexec_var_log_t)
 
 # var/lib files
 type aisexec_var_lib_t;
-files_type(aisexec_var_lib_t)
+files_var_lib_file(aisexec_var_lib_t)
 
 # pid files
 type aisexec_var_run_t;
diff --git a/policy/modules/services/amavis.te b/policy/modules/services/amavis.te
index 71830dc..12f3196 100644
--- a/policy/modules/services/amavis.te
+++ b/policy/modules/services/amavis.te
@@ -31,7 +31,7 @@ files_pid_file(amavis_var_run_t)
 
 # var/lib files
 type amavis_var_lib_t;
-files_type(amavis_var_lib_t)
+files_var_lib_file(amavis_var_lib_t)
 
 # log files
 type amavis_var_log_t;
diff --git a/policy/modules/services/antivirus.if b/policy/modules/services/antivirus.if
index e9d25fb..cf88027 100644
--- a/policy/modules/services/antivirus.if
+++ b/policy/modules/services/antivirus.if
@@ -263,10 +263,6 @@ interface(`antivirus_admin',`
 	allow $1 antivirus_t:process signal_perms;
     ps_process_pattern($1, antivirus_t)
 
-    tunable_policy(`deny_ptrace',`',`
-        allow $1 antivirus_t:process ptrace;
-    ')
-
     init_labeled_script_domtrans($1, antivirus_initrc_exec_t)
     domain_system_change_exemption($1)
     role_transition $2 antivirus_initrc_exec_t system_r;
diff --git a/policy/modules/services/apache.fc b/policy/modules/services/apache.fc
index 6b6661d..d31a20d 100644
--- a/policy/modules/services/apache.fc
+++ b/policy/modules/services/apache.fc
@@ -13,8 +13,13 @@ HOME_DIR/((www)|(web)|(public_html))(/.+)? gen_context(system_u:object_r:httpd_u
 /etc/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_config_t,s0)
 /etc/init\.d/cherokee   --  gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
 /etc/mock/koji(/.*)? 			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/etc/nginx(/.*)?         gen_context(system_u:object_r:httpd_config_t,s0)
+/etc/thttpd\.conf       	-- 	gen_context(system_u:object_r:httpd_config_t,s0)
 /etc/rc\.d/init\.d/httpd	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/lighttpd	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/php-fpm.*	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/thttpd	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/nginx	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
 
 /etc/vhosts			--	gen_context(system_u:object_r:httpd_config_t,s0)
 /etc/zabbix/web(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
@@ -40,8 +45,12 @@ HOME_DIR/((www)|(web)|(public_html))(/.+)? gen_context(system_u:object_r:httpd_u
 /usr/sbin/cherokee      --  gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/sbin/httpd(\.worker)?	--	gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/sbin/lighttpd		--	gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/sbin/nginx         --  gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/sbin/rotatelogs		--	gen_context(system_u:object_r:httpd_rotatelogs_exec_t,s0)
 /usr/sbin/suexec		--	gen_context(system_u:object_r:httpd_suexec_exec_t,s0)
+/usr/sbin/php-fpm       	--  	gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/sbin/htcacheclean      --  gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/sbin/thttpd        	-- 	gen_context(system_u:object_r:httpd_exec_t,s0)
 
 ifdef(`distro_suse', `
 /usr/sbin/httpd2-.*		--	gen_context(system_u:object_r:httpd_exec_t,s0)
@@ -81,11 +90,12 @@ ifdef(`distro_suse', `
 /var/lib/cacti/rra(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /var/lib/cherokee(/.*)?         gen_context(system_u:object_r:httpd_var_lib_t,s0)
 /var/lib/dav(/.*)?			gen_context(system_u:object_r:httpd_var_lib_t,s0)
-/var/lib/dokuwiki(/.*)?         gen_context(system_u:object_r:httpd_sys_content_rw_t,s0)
+/var/lib/dokuwiki(/.*)?         gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/lib/drupal.*  				gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/lib/graphite-web(/.*)		gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /var/lib/htdig(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /var/lib/httpd(/.*)?			gen_context(system_u:object_r:httpd_var_lib_t,s0)
+/var/lib/nginx(/.*)?            gen_context(system_u:object_r:httpd_var_lib_t,s0)
 /var/lib/php/session(/.*)?		gen_context(system_u:object_r:httpd_var_run_t,s0)
 /var/lib/squirrelmail/prefs(/.*)?	gen_context(system_u:object_r:httpd_squirrelmail_t,s0)
 /var/lib/stickshift/\.httpd\.d(/.*)?         gen_context(system_u:object_r:httpd_config_t,s0)
@@ -99,7 +109,10 @@ ifdef(`distro_suse', `
 /var/log/cherokee(/.*)?     gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/httpd(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/nginx(/.*)?            gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/z-push(/.*)?          gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/log/php-fpm(/.*)?      gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/thttpd\.log.*  	-- 	gen_context(system_u:object_r:httpd_log_t,s0)
 
 ifdef(`distro_debian', `
 /var/log/horde2(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
@@ -110,7 +123,10 @@ ifdef(`distro_debian', `
 /var/run/httpd.*			gen_context(system_u:object_r:httpd_var_run_t,s0)
 /var/run/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_var_run_t,s0)
 /var/run/mod_.*				gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/nginx.*            gen_context(system_u:object_r:httpd_var_run_t,s0)
 /var/run/wsgi.*			-s	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/php-fpm(/.*)?      gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/thttpd\.pid    	-- 	gen_context(system_u:object_r:httpd_var_run_t,s0)
 
 /var/spool/gosa(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /var/spool/squirrelmail(/.*)?		gen_context(system_u:object_r:squirrelmail_spool_t,s0)
diff --git a/policy/modules/services/apache.te b/policy/modules/services/apache.te
index 72ae77b..28d026d 100644
--- a/policy/modules/services/apache.te
+++ b/policy/modules/services/apache.te
@@ -248,6 +248,13 @@ gen_tunable(httpd_run_stickshift, false)
 
 ## <desc>
 ## <p>
+## Allow Apache to run preupgrade
+## </p>
+## </desc>
+gen_tunable(httpd_run_preupgrade, false)
+
+## <desc>
+## <p>
 ## Allow Apache to query NS records
 ## </p>
 ## </desc>
@@ -368,7 +375,7 @@ typealias httpd_user_ra_content_t alias { httpd_auditadm_script_ra_t httpd_secad
 
 # for apache2 memory mapped files
 type httpd_var_lib_t;
-files_type(httpd_var_lib_t)
+files_var_lib_file(httpd_var_lib_t)
 
 type httpd_var_run_t;
 files_pid_file(httpd_var_run_t)
@@ -400,6 +407,7 @@ allow httpd_t self:unix_dgram_socket { create_socket_perms sendto };
 allow httpd_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow httpd_t self:tcp_socket create_stream_socket_perms;
 allow httpd_t self:udp_socket create_socket_perms;
+allow httpd_t self:key manage_key_perms;
 
 # Allow httpd_t to put files in /var/cache/httpd etc
 manage_dirs_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
@@ -421,6 +429,7 @@ allow httpd_t httpd_log_t:dir setattr;
 create_dirs_pattern(httpd_t, httpd_log_t, httpd_log_t)
 create_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
 append_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
+setattr_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
 read_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
 read_lnk_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
 # cjp: need to refine create interfaces to
@@ -803,6 +812,13 @@ optional_policy(`
 ')
 
 optional_policy(`
+        mirrormanager_manage_pid_files(httpd_t)
+        mirrormanager_manage_pid_sock_files(httpd_t)
+        mirrormanager_read_lib_files(httpd_t)
+        mirrormanager_read_log(httpd_t)
+')
+
+optional_policy(`
 	kerberos_keytab_template(httpd, httpd_t)
 ')
 
@@ -879,6 +895,23 @@ optional_policy(`
         passenger_read_lib_files(httpd_t)
         passenger_stream_connect(httpd_t)
         passenger_manage_tmp_files(httpd_t)
+        passenger_rw_tmp_sock_files(httpd_t)
+    ')
+')
+
+optional_policy(`
+    tunable_policy(`httpd_run_preupgrade', `
+        anaconda_manage_lib_files_preupgrade(httpd_t)
+        anaconda_domtrans_preupgrade(httpd_t)
+    ',`
+        anaconda_read_lib_files_preupgrade(httpd_t)
+        anaconda_exec_preupgrade(httpd_t)
+    ')
+')
+
+optional_policy(`
+    tunable_policy(`httpd_run_preupgrade', `
+        corenet_tcp_bind_preupgrade_port(httpd_t)
     ')
 ')
 
@@ -1180,6 +1213,7 @@ files_search_spool(httpd_sys_script_t)
 files_read_var_symlinks(httpd_sys_script_t)
 
 logging_inherit_append_all_logs(httpd_sys_script_t)
+logging_send_syslog_msg(httpd_sys_script_t)
 
 # Should we add a boolean?
 apache_domtrans_rotatelogs(httpd_sys_script_t)
diff --git a/policy/modules/services/apcupsd.te b/policy/modules/services/apcupsd.te
index 2370608..1d57789 100644
--- a/policy/modules/services/apcupsd.te
+++ b/policy/modules/services/apcupsd.te
@@ -65,6 +65,7 @@ corenet_tcp_bind_apcupsd_port(apcupsd_t)
 corenet_sendrecv_apcupsd_server_packets(apcupsd_t)
 corenet_tcp_connect_apcupsd_port(apcupsd_t)
 corenet_udp_bind_snmp_port(apcupsd_t)
+corenet_udp_bind_apc_port(apcupsd_t)
 
 dev_rw_generic_usb_dev(apcupsd_t)
 
diff --git a/policy/modules/services/arpwatch.te b/policy/modules/services/arpwatch.te
index c114622..4f7787c 100644
--- a/policy/modules/services/arpwatch.te
+++ b/policy/modules/services/arpwatch.te
@@ -35,6 +35,7 @@ allow arpwatch_t self:tcp_socket { connect create_stream_socket_perms };
 allow arpwatch_t self:udp_socket create_socket_perms;
 allow arpwatch_t self:packet_socket create_socket_perms;
 allow arpwatch_t self:socket create_socket_perms;
+allow arpwatch_t self:netlink_socket create_socket_perms;
 
 manage_dirs_pattern(arpwatch_t, arpwatch_data_t, arpwatch_data_t)
 manage_files_pattern(arpwatch_t, arpwatch_data_t, arpwatch_data_t)
diff --git a/policy/modules/services/asterisk.te b/policy/modules/services/asterisk.te
index a2b3cdb..5d3ffa5 100644
--- a/policy/modules/services/asterisk.te
+++ b/policy/modules/services/asterisk.te
@@ -29,7 +29,7 @@ type asterisk_tmpfs_t;
 files_tmpfs_file(asterisk_tmpfs_t)
 
 type asterisk_var_lib_t;
-files_type(asterisk_var_lib_t)
+files_var_lib_file(asterisk_var_lib_t)
 
 type asterisk_var_run_t;
 files_pid_file(asterisk_var_run_t)
@@ -115,6 +115,7 @@ corenet_tcp_connect_pktcable_port(asterisk_t)
 corenet_tcp_connect_postgresql_port(asterisk_t)
 corenet_tcp_connect_snmp_port(asterisk_t)
 corenet_tcp_connect_sip_port(asterisk_t)
+corenet_tcp_connect_http_port(asterisk_t)
 
 dev_rw_generic_usb_dev(asterisk_t)
 dev_read_sysfs(asterisk_t)
diff --git a/policy/modules/services/audioentropy.fc b/policy/modules/services/audioentropy.fc
index 001235e..0acd6d0 100644
--- a/policy/modules/services/audioentropy.fc
+++ b/policy/modules/services/audioentropy.fc
@@ -1,6 +1,8 @@
-#
-# /usr
-#
+
+/etc/rc\.d/init\.d/((audio-entropyd)|(haveged)) --  gen_context(system_u:object_r:entropyd_initrc_exec_t,s0)
+
 /usr/sbin/audio-entropyd	--	gen_context(system_u:object_r:entropyd_exec_t,s0)
+/usr/sbin/haveged   --  gen_context(system_u:object_r:entropyd_exec_t,s0)
 
 /var/run/audio-entropyd\.pid	--	gen_context(system_u:object_r:entropyd_var_run_t,s0)
+/var/run/haveged\.pid   --  gen_context(system_u:object_r:entropyd_var_run_t,s0)
diff --git a/policy/modules/services/audioentropy.te b/policy/modules/services/audioentropy.te
index 5342f72..b9e9d7f 100644
--- a/policy/modules/services/audioentropy.te
+++ b/policy/modules/services/audioentropy.te
@@ -13,6 +13,9 @@ init_daemon_domain(entropyd_t, entropyd_exec_t)
 type entropyd_var_run_t;
 files_pid_file(entropyd_var_run_t)
 
+type entropyd_initrc_exec_t;
+init_script_file(entropyd_initrc_exec_t)
+
 ########################################
 #
 # Local policy
@@ -28,6 +31,8 @@ files_pid_filetrans(entropyd_t, entropyd_var_run_t, file)
 kernel_read_kernel_sysctls(entropyd_t)
 kernel_list_proc(entropyd_t)
 kernel_read_proc_symlinks(entropyd_t)
+kernel_read_system_state(entropyd_t)
+kernel_rw_kernel_sysctl(entropyd_t)
 
 dev_read_sysfs(entropyd_t)
 dev_read_urand(entropyd_t)
diff --git a/policy/modules/services/automount.te b/policy/modules/services/automount.te
index 39d4ab5..ef3c6d4 100644
--- a/policy/modules/services/automount.te
+++ b/policy/modules/services/automount.te
@@ -131,6 +131,7 @@ fs_unmount_autofs(automount_t)
 fs_mount_autofs(automount_t)
 fs_manage_autofs_symlinks(automount_t)
 fs_read_nfs_files(automount_t)
+fs_read_nfs_symlinks(automount_t)
 
 storage_rw_fuse(automount_t)
 
diff --git a/policy/modules/services/bacula.fc b/policy/modules/services/bacula.fc
new file mode 100644
index 0000000..27ec3d5
--- /dev/null
+++ b/policy/modules/services/bacula.fc
@@ -0,0 +1,17 @@
+/bacula(/.*)?	gen_context(system_u:object_r:bacula_store_t,s0)
+
+/etc/bacula.*	gen_context(system_u:object_r:bacula_etc_t,s0)
+
+/etc/rc\.d/init\.d/bacula.*	--	gen_context(system_u:object_r:bacula_initrc_exec_t,s0)
+
+/usr/sbin/bacula.*	--	gen_context(system_u:object_r:bacula_exec_t,s0)
+/usr/sbin/bat	--	gen_context(system_u:object_r:bacula_admin_exec_t,s0)
+/usr/sbin/bconsole	--	gen_context(system_u:object_r:bacula_admin_exec_t,s0)
+
+/var/lib/bacula.*	gen_context(system_u:object_r:bacula_var_lib_t,s0)
+
+/var/log/bacula.*	gen_context(system_u:object_r:bacula_log_t,s0)
+
+/var/run/bacula.*	--	gen_context(system_u:object_r:bacula_var_run_t,s0)
+
+/var/spool/bacula.*	gen_context(system_u:object_r:bacula_spool_t,s0)
diff --git a/policy/modules/services/bacula.if b/policy/modules/services/bacula.if
new file mode 100644
index 0000000..58aadc7
--- /dev/null
+++ b/policy/modules/services/bacula.if
@@ -0,0 +1,98 @@
+## <summary>Cross platform network backup.</summary>
+
+########################################
+## <summary>
+##	Execute bacula admin bacula
+##	admin domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`bacula_domtrans_admin',`
+	gen_require(`
+		type bacula_admin_t, bacula_admin_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, bacula_admin_exec_t, bacula_admin_t)
+')
+
+########################################
+## <summary>
+##	Execute user interfaces in the
+##	bacula admin domain, and allow the
+##	specified role the bacula admin domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`bacula_run_admin',`
+	gen_require(`
+		type bacula_admin_t;
+	')
+
+	bacula_domtrans_admin($1)
+    role $2 types bacula_admin_t;
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an bacula environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`bacula_admin',`
+	gen_require(`
+		type bacula_t, bacula_etc_t, bacula_log_t;
+		type bacula_spool_t, bacula_var_lib_t;
+		type bacula_var_run_t, bacula_initrc_exec_t;
+	')
+
+	allow $1 bacula_t:process { ptrace signal_perms };
+	ps_process_pattern($1, bacula_t)
+
+	init_labeled_script_domtrans($1, bacula_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 bacula_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, bacula_etc_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, bacula_log_t)
+
+	files_search_var($1)
+	admin_pattern($1, bacula_spool_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, bacula_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, bacula_var_run_t)
+
+	bacula_run_admin($1, $2)
+')
diff --git a/policy/modules/services/bacula.te b/policy/modules/services/bacula.te
new file mode 100644
index 0000000..445d4f8
--- /dev/null
+++ b/policy/modules/services/bacula.te
@@ -0,0 +1,159 @@
+policy_module(bacula, 1.2.0)
+
+########################################
+#
+# Declarations
+#
+
+type bacula_t;
+type bacula_exec_t;
+init_daemon_domain(bacula_t, bacula_exec_t)
+
+type bacula_initrc_exec_t;
+init_script_file(bacula_initrc_exec_t)
+
+type bacula_etc_t;
+files_type(bacula_etc_t)
+
+type bacula_log_t;
+logging_log_file(bacula_log_t)
+
+type bacula_spool_t;
+files_type(bacula_spool_t)
+
+type bacula_store_t;
+files_type(bacula_store_t)
+files_mountpoint(bacula_store_t)
+
+type bacula_var_lib_t;
+files_var_lib_file(bacula_var_lib_t)
+
+type bacula_var_run_t;
+files_pid_file(bacula_var_run_t)
+
+type bacula_admin_t;
+type bacula_admin_exec_t;
+application_domain(bacula_admin_t, bacula_admin_exec_t)
+role system_r types bacula_admin_t;
+
+########################################
+#
+# Local policy
+#
+
+allow bacula_t self:capability { dac_read_search dac_override chown fowner fsetid setgid setuid};
+allow bacula_t self:process signal;
+allow bacula_t self:fifo_file rw_fifo_file_perms;
+allow bacula_t self:tcp_socket { accept listen };
+
+read_files_pattern(bacula_t, bacula_etc_t, bacula_etc_t)
+
+manage_dirs_pattern(bacula_t, bacula_log_t, bacula_log_t)
+append_files_pattern(bacula_t, bacula_log_t, bacula_log_t)
+create_files_pattern(bacula_t, bacula_log_t, bacula_log_t)
+setattr_files_pattern(bacula_t, bacula_log_t, bacula_log_t)
+logging_log_filetrans(bacula_t, bacula_log_t, { file dir })
+
+manage_dirs_pattern(bacula_t, bacula_spool_t, bacula_spool_t)
+manage_files_pattern(bacula_t, bacula_spool_t, bacula_spool_t)
+
+manage_files_pattern(bacula_t, bacula_store_t, bacula_store_t)
+manage_lnk_files_pattern(bacula_t, bacula_store_t, bacula_store_t)
+manage_dirs_pattern(bacula_t, bacula_store_t, bacula_store_t)
+
+manage_dirs_pattern(bacula_t, bacula_var_lib_t, bacula_var_lib_t)
+manage_files_pattern(bacula_t, bacula_var_lib_t, bacula_var_lib_t)
+files_var_lib_filetrans(bacula_t, bacula_var_lib_t, dir)
+
+allow bacula_t bacula_var_run_t:file manage_file_perms;
+files_pid_filetrans(bacula_t, bacula_var_run_t, file)
+
+kernel_read_kernel_sysctls(bacula_t)
+kernel_read_system_state(bacula_t)
+
+corecmd_exec_bin(bacula_t)
+corecmd_exec_shell(bacula_t)
+
+corenet_all_recvfrom_unlabeled(bacula_t)
+corenet_all_recvfrom_netlabel(bacula_t)
+corenet_tcp_sendrecv_generic_if(bacula_t)
+corenet_udp_sendrecv_generic_if(bacula_t)
+corenet_tcp_sendrecv_generic_node(bacula_t)
+corenet_udp_sendrecv_generic_node(bacula_t)
+corenet_tcp_sendrecv_all_ports(bacula_t)
+corenet_udp_sendrecv_all_ports(bacula_t)
+corenet_tcp_bind_generic_node(bacula_t)
+corenet_udp_bind_generic_node(bacula_t)
+
+corenet_sendrecv_generic_server_packets(bacula_t)
+corenet_udp_bind_generic_port(bacula_t)
+
+
+#TODO: check port labels for hplip a bacula
+corenet_tcp_bind_bacula_port(bacula_t)
+
+corenet_sendrecv_hplip_server_packets(bacula_t)
+corenet_tcp_bind_hplip_port(bacula_t)
+corenet_udp_bind_hplip_port(bacula_t)
+
+corenet_sendrecv_all_client_packets(bacula_t)
+corenet_tcp_connect_all_ports(bacula_t)
+
+dev_getattr_all_blk_files(bacula_t)
+dev_getattr_all_chr_files(bacula_t)
+
+files_dontaudit_getattr_all_sockets(bacula_t)
+files_read_all_files(bacula_t)
+files_read_all_symlinks(bacula_t)
+
+fs_getattr_xattr_fs(bacula_t)
+fs_list_all(bacula_t)
+
+auth_use_nsswitch(bacula_t)
+auth_read_shadow(bacula_t)
+
+logging_send_syslog_msg(bacula_t)
+
+sysnet_dns_name_resolve(bacula_t)
+
+optional_policy(`
+	mysql_stream_connect(bacula_t)
+	mysql_tcp_connect(bacula_t)
+')
+
+optional_policy(`
+	nis_use_ypbind(bacula_t)
+')
+
+optional_policy(`
+	sysnet_use_ldap(bacula_t)
+	ldap_stream_connect(bacula_t)
+')
+
+########################################
+#
+# Client local policy
+#
+
+allow bacula_admin_t self:process signal;
+allow bacula_admin_t self:tcp_socket { accept listen };
+allow bacula_admin_t self:dgram_socket_class_set create_socket_perms;
+
+read_files_pattern(bacula_admin_t, bacula_etc_t, bacula_etc_t)
+
+corenet_all_recvfrom_unlabeled(bacula_admin_t)
+corenet_all_recvfrom_netlabel(bacula_admin_t)
+corenet_tcp_sendrecv_generic_if(bacula_admin_t)
+corenet_tcp_sendrecv_generic_node(bacula_admin_t)
+corenet_tcp_sendrecv_all_ports(bacula_admin_t)
+corenet_tcp_bind_generic_node(bacula_admin_t)
+
+corenet_sendrecv_hplip_client_packets(bacula_admin_t)
+corenet_tcp_connect_hplip_port(bacula_admin_t)
+
+domain_use_interactive_fds(bacula_admin_t)
+
+sysnet_dns_name_resolve(bacula_admin_t)
+
+userdom_dontaudit_search_user_home_dirs(bacula_admin_t)
+userdom_use_user_ptys(bacula_admin_t)
diff --git a/policy/modules/services/bcfg2.te b/policy/modules/services/bcfg2.te
index af229b1..206896b 100644
--- a/policy/modules/services/bcfg2.te
+++ b/policy/modules/services/bcfg2.te
@@ -13,7 +13,7 @@ type bcfg2_initrc_exec_t;
 init_script_file(bcfg2_initrc_exec_t)
 
 type bcfg2_var_lib_t;
-files_type(bcfg2_var_lib_t)
+files_var_lib_file(bcfg2_var_lib_t)
 
 type bcfg2_var_run_t;
 files_pid_file(bcfg2_var_run_t)
diff --git a/policy/modules/services/bind.te b/policy/modules/services/bind.te
index 9ad3a54..d86cf9d 100644
--- a/policy/modules/services/bind.te
+++ b/policy/modules/services/bind.te
@@ -241,6 +241,9 @@ corenet_tcp_bind_generic_node(ndc_t)
 corenet_tcp_connect_rndc_port(ndc_t)
 corenet_sendrecv_rndc_client_packets(ndc_t)
 
+dev_read_rand(ndc_t)
+dev_read_urand(ndc_t)
+
 domain_use_interactive_fds(ndc_t)
 
 files_read_etc_files(ndc_t)
diff --git a/policy/modules/services/bluetooth.te b/policy/modules/services/bluetooth.te
index 7e0674b..fd6a09c 100644
--- a/policy/modules/services/bluetooth.te
+++ b/policy/modules/services/bluetooth.te
@@ -44,7 +44,7 @@ type bluetooth_tmp_t;
 files_tmp_file(bluetooth_tmp_t)
 
 type bluetooth_var_lib_t;
-files_type(bluetooth_var_lib_t)
+files_var_lib_file(bluetooth_var_lib_t)
 
 type bluetooth_var_run_t;
 files_pid_file(bluetooth_var_run_t)
diff --git a/policy/modules/services/boinc.te b/policy/modules/services/boinc.te
index f607c81..4379429 100644
--- a/policy/modules/services/boinc.te
+++ b/policy/modules/services/boinc.te
@@ -20,7 +20,7 @@ type boinc_tmpfs_t;
 files_tmpfs_file(boinc_tmpfs_t)
 
 type boinc_var_lib_t;
-files_type(boinc_var_lib_t)
+files_var_lib_file(boinc_var_lib_t)
 
 type boinc_project_t;
 domain_type(boinc_project_t)
@@ -30,7 +30,7 @@ type boinc_project_tmp_t;
 files_tmp_file(boinc_project_tmp_t)
 
 type boinc_project_var_lib_t;
-files_type(boinc_project_var_lib_t)
+files_var_lib_file(boinc_project_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/canna.te b/policy/modules/services/canna.te
index 2d09e7c..021e76e 100644
--- a/policy/modules/services/canna.te
+++ b/policy/modules/services/canna.te
@@ -17,7 +17,7 @@ type canna_log_t;
 logging_log_file(canna_log_t)
 
 type canna_var_lib_t;
-files_type(canna_var_lib_t)
+files_var_lib_file(canna_var_lib_t)
 
 type canna_var_run_t;
 files_pid_file(canna_var_run_t)
diff --git a/policy/modules/services/certmaster.te b/policy/modules/services/certmaster.te
index 3d78cae..bd65135 100644
--- a/policy/modules/services/certmaster.te
+++ b/policy/modules/services/certmaster.te
@@ -17,7 +17,7 @@ type certmaster_etc_rw_t;
 files_type(certmaster_etc_rw_t)
 
 type certmaster_var_lib_t;
-files_type(certmaster_var_lib_t)
+files_var_lib_file(certmaster_var_lib_t)
 
 type certmaster_var_log_t;
 logging_log_file(certmaster_var_log_t)
diff --git a/policy/modules/services/certmonger.fc b/policy/modules/services/certmonger.fc
index 5496814..ebfc5f9 100644
--- a/policy/modules/services/certmonger.fc
+++ b/policy/modules/services/certmonger.fc
@@ -2,7 +2,7 @@
 
 /usr/sbin/certmonger	--	gen_context(system_u:object_r:certmonger_exec_t,s0)
 
-/var/run/certmonger.pid		--	gen_context(system_u:object_r:certmonger_var_run_t,s0)
+/var/run/certmonger.*		gen_context(system_u:object_r:certmonger_var_run_t,s0)
 /var/lib/certmonger(/.*)?			gen_context(system_u:object_r:certmonger_var_lib_t,s0)
 
 /usr/lib(64)?/ipa/certmonger(/.*)?       gen_context(system_u:object_r:certmonger_unconfined_exec_t,s0)
diff --git a/policy/modules/services/certmonger.te b/policy/modules/services/certmonger.te
index 264b14b..3857107 100644
--- a/policy/modules/services/certmonger.te
+++ b/policy/modules/services/certmonger.te
@@ -16,7 +16,7 @@ type certmonger_var_run_t;
 files_pid_file(certmonger_var_run_t)
 
 type certmonger_var_lib_t;
-files_type(certmonger_var_lib_t)
+files_var_lib_file(certmonger_var_lib_t)
 
 type certmonger_unconfined_exec_t;
 application_executable_file(certmonger_unconfined_exec_t)
@@ -112,6 +112,10 @@ optional_policy(`
 	pcscd_read_pub_files(certmonger_t)
 ')
 
+optional_policy(`
+	puppet_read_lib(certmonger_t)
+')
+
 #######################################
 #
 # certmonger_unconfined_script_t local policy
diff --git a/policy/modules/services/cfengine.te b/policy/modules/services/cfengine.te
index bb03b0a..0133b1c 100644
--- a/policy/modules/services/cfengine.te
+++ b/policy/modules/services/cfengine.te
@@ -15,7 +15,7 @@ type cfengine_initrc_exec_t;
 init_script_file(cfengine_initrc_exec_t)
 
 type cfengine_var_lib_t;
-files_type(cfengine_var_lib_t)
+files_var_lib_file(cfengine_var_lib_t)
 
 type cfengine_var_log_t;
 logging_log_file(cfengine_var_log_t)
diff --git a/policy/modules/services/cgroup.te b/policy/modules/services/cgroup.te
index a074fa2..108dba0 100644
--- a/policy/modules/services/cgroup.te
+++ b/policy/modules/services/cgroup.te
@@ -102,7 +102,8 @@ files_getattr_all_sockets(cgred_t)
 files_read_all_symlinks(cgred_t)
 files_read_etc_files(cgred_t)
 
-fs_write_cgroup_files(cgred_t)
+fs_manage_cgroup_dirs(cgred_t)
+fs_manage_cgroup_files(cgred_t)
 fs_list_inotifyfs(cgred_t)
 
 auth_use_nsswitch(cgred_t)
diff --git a/policy/modules/services/chronyd.te b/policy/modules/services/chronyd.te
index 406fe20..699c6d4 100644
--- a/policy/modules/services/chronyd.te
+++ b/policy/modules/services/chronyd.te
@@ -20,7 +20,7 @@ type chronyd_tmpfs_t;
 files_tmpfs_file(chronyd_tmpfs_t)
 
 type chronyd_var_lib_t;
-files_type(chronyd_var_lib_t)
+files_var_lib_file(chronyd_var_lib_t)
 
 type chronyd_var_log_t;
 logging_log_file(chronyd_var_log_t)
diff --git a/policy/modules/services/clamav.te b/policy/modules/services/clamav.te
index bfeade5..bd9d3fb 100644
--- a/policy/modules/services/clamav.te
+++ b/policy/modules/services/clamav.te
@@ -42,7 +42,7 @@ logging_log_file(clamd_var_log_t)
 
 # var/lib files
 type clamd_var_lib_t;
-files_type(clamd_var_lib_t)
+files_var_lib_file(clamd_var_lib_t)
 
 # pid files
 type clamd_var_run_t;
diff --git a/policy/modules/services/clockspeed.te b/policy/modules/services/clockspeed.te
index 26d09f1..f7fc3ae 100644
--- a/policy/modules/services/clockspeed.te
+++ b/policy/modules/services/clockspeed.te
@@ -15,7 +15,7 @@ type clockspeed_srv_exec_t;
 init_daemon_domain(clockspeed_srv_t, clockspeed_srv_exec_t)
 
 type clockspeed_var_lib_t;
-files_type(clockspeed_var_lib_t)
+files_var_lib_file(clockspeed_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/cloudform.te b/policy/modules/services/cloudform.te
index b25a2e8..1a0daa6 100644
--- a/policy/modules/services/cloudform.te
+++ b/policy/modules/services/cloudform.te
@@ -22,7 +22,7 @@ type iwhd_initrc_exec_t;
 init_script_file(iwhd_initrc_exec_t)
 
 type iwhd_var_lib_t;
-files_type(iwhd_var_lib_t)
+files_var_lib_file(iwhd_var_lib_t)
 
 type iwhd_var_run_t;
 files_pid_file(iwhd_var_run_t)
@@ -34,7 +34,7 @@ type mongod_log_t;
 logging_log_file(mongod_log_t)
 
 type mongod_var_lib_t;
-files_type(mongod_var_lib_t)
+files_var_lib_file(mongod_var_lib_t)
 
 type mongod_tmp_t;
 files_tmp_file(mongod_tmp_t)
diff --git a/policy/modules/services/cobbler.te b/policy/modules/services/cobbler.te
index 0c749b4..07affd8 100644
--- a/policy/modules/services/cobbler.te
+++ b/policy/modules/services/cobbler.te
@@ -49,7 +49,7 @@ type cobbler_var_log_t;
 logging_log_file(cobbler_var_log_t)
 
 type cobbler_var_lib_t alias cobbler_content_t;
-files_type(cobbler_var_lib_t)
+files_var_lib_file(cobbler_var_lib_t)
 
 type cobbler_tmp_t;
 files_tmp_file(cobbler_tmp_t)
diff --git a/policy/modules/services/collectd.fc b/policy/modules/services/collectd.fc
new file mode 100644
index 0000000..79a3abe
--- /dev/null
+++ b/policy/modules/services/collectd.fc
@@ -0,0 +1,9 @@
+/etc/rc\.d/init\.d/collectd	--	gen_context(system_u:object_r:collectd_initrc_exec_t,s0)
+
+/usr/sbin/collectd	--	gen_context(system_u:object_r:collectd_exec_t,s0)
+
+/var/lib/collectd(/.*)?	gen_context(system_u:object_r:collectd_var_lib_t,s0)
+
+/var/run/collectd\.pid	--	gen_context(system_u:object_r:collectd_var_run_t,s0)
+
+/usr/share/collectd/collection3/bin/.*\.cgi	--	gen_context(system_u:object_r:httpd_collectd_script_exec_t,s0)
diff --git a/policy/modules/services/collectd.if b/policy/modules/services/collectd.if
new file mode 100644
index 0000000..7c41bc4
--- /dev/null
+++ b/policy/modules/services/collectd.if
@@ -0,0 +1,154 @@
+## <summary>Statistics collection daemon for filling RRD files.</summary>
+
+########################################
+## <summary>
+##	Transition to collectd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`collectd_domtrans',`
+	gen_require(`
+		type collectd_t, collectd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, collectd_exec_t, collectd_t)
+')
+
+########################################
+## <summary>
+##	Execute collectd server in the collectd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`collectd_initrc_domtrans',`
+	gen_require(`
+		type collectd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, collectd_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Search collectd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`collectd_search_lib',`
+	gen_require(`
+		type collectd_var_lib_t;
+	')
+
+	allow $1 collectd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read collectd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`collectd_read_lib_files',`
+	gen_require(`
+		type collectd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, collectd_var_lib_t, collectd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage collectd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`collectd_manage_lib_files',`
+	gen_require(`
+		type collectd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, collectd_var_lib_t, collectd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage collectd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`collectd_manage_lib_dirs',`
+	gen_require(`
+		type collectd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, collectd_var_lib_t, collectd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an collectd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`collectd_admin',`
+	gen_require(`
+		type collectd_t, collectd_initrc_exec_t, collectd_var_run_t;
+        type collectd_var_lib_t;
+	')
+
+	allow $1 collectd_t:process signal_perms;
+	ps_process_pattern($1, collectd_t)
+
+	collectd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 collectd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_pids($1)
+	admin_pattern($1, collectd_var_run_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, collectd_var_lib_t)
+
+')
+
diff --git a/policy/modules/services/collectd.te b/policy/modules/services/collectd.te
new file mode 100644
index 0000000..99fd691
--- /dev/null
+++ b/policy/modules/services/collectd.te
@@ -0,0 +1,117 @@
+policy_module(collectd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+##	<p>
+##	Determine whether collectd can connect
+##	to the network using TCP.
+##	</p>
+## </desc>
+gen_tunable(collectd_tcp_network_connect, false)
+
+type collectd_t;
+type collectd_exec_t;
+init_daemon_domain(collectd_t, collectd_exec_t)
+
+type collectd_initrc_exec_t;
+init_script_file(collectd_initrc_exec_t)
+
+type collectd_var_lib_t;
+files_type(collectd_var_lib_t)
+
+type collectd_var_run_t;
+files_pid_file(collectd_var_run_t)
+
+type collectd_script_tmp_t alias httpd_collectd_script_tmp_t;
+files_tmp_file(collectd_script_tmp_t)
+
+########################################
+#
+# Local policy
+#
+
+allow collectd_t self:capability { ipc_lock net_admin sys_nice };
+allow collectd_t self:process { getsched setsched signal };
+allow collectd_t self:fifo_file rw_fifo_file_perms;
+allow collectd_t self:packet_socket create_socket_perms;
+allow collectd_t self:unix_stream_socket { accept listen };
+allow collectd_t self:netlink_tcpdiag_socket create_netlink_socket_perms;
+allow collectd_t self:udp_socket create_socket_perms;
+allow collectd_t self:rawip_socket create_socket_perms;
+
+manage_dirs_pattern(collectd_t, collectd_var_lib_t, collectd_var_lib_t)
+manage_files_pattern(collectd_t, collectd_var_lib_t, collectd_var_lib_t)
+files_var_lib_filetrans(collectd_t, collectd_var_lib_t, dir)
+
+manage_files_pattern(collectd_t, collectd_var_run_t, collectd_var_run_t)
+files_pid_filetrans(collectd_t, collectd_var_run_t, file)
+
+kernel_read_all_sysctls(collectd_t)
+kernel_read_network_state(collectd_t)
+kernel_read_system_state(collectd_t)
+
+files_read_etc_files(collectd_t)
+
+corenet_udp_bind_generic_node(collectd_t)
+corenet_udp_bind_collectd_port(collectd_t)
+
+dev_read_rand(collectd_t)
+dev_read_sysfs(collectd_t)
+dev_read_urand(collectd_t)
+
+domain_use_interactive_fds(collectd_t)
+domain_read_all_domains_state(collectd_t)
+
+files_getattr_all_dirs(collectd_t)
+
+fs_getattr_all_fs(collectd_t)
+fs_getattr_all_dirs(collectd_t)
+
+init_read_utmp(collectd_t)
+
+miscfiles_read_localization(collectd_t)
+
+logging_send_syslog_msg(collectd_t)
+
+sysnet_dns_name_resolve(collectd_t)
+
+tunable_policy(`collectd_tcp_network_connect',`
+	corenet_sendrecv_all_client_packets(collectd_t)
+	corenet_tcp_connect_all_ports(collectd_t)
+	corenet_tcp_sendrecv_all_ports(collectd_t)
+')
+
+optional_policy(`
+	mysql_stream_connect(collectd_t)
+')
+
+optional_policy(`
+    netutils_domtrans_ping(collectd_t)
+')
+
+optional_policy(`
+	virt_read_config(collectd_t)
+	virt_stream_connect(collectd_t)
+')
+
+########################################
+#
+# Web collectd local policy
+#
+
+apache_content_template(collectd)
+
+files_search_var_lib(httpd_collectd_script_t)
+read_files_pattern(httpd_collectd_script_t, collectd_var_lib_t, collectd_var_lib_t)
+list_dirs_pattern(httpd_collectd_script_t, collectd_var_lib_t, collectd_var_lib_t)
+miscfiles_setattr_fonts_cache_dirs(httpd_collectd_script_t)
+
+manage_dirs_pattern(httpd_collectd_script_t, collectd_script_tmp_t, collectd_script_tmp_t)
+manage_files_pattern(httpd_collectd_script_t, collectd_script_tmp_t, collectd_script_tmp_t)
+files_tmp_filetrans(httpd_collectd_script_t, collectd_script_tmp_t, { file dir })
+
+files_read_etc_files(httpd_collectd_script_t)
diff --git a/policy/modules/services/condor.te b/policy/modules/services/condor.te
index f158b0a..96a0493 100644
--- a/policy/modules/services/condor.te
+++ b/policy/modules/services/condor.te
@@ -37,7 +37,7 @@ type condor_log_t;
 logging_log_file(condor_log_t)
 
 type condor_var_lib_t;
-files_type(condor_var_lib_t)
+files_var_lib_file(condor_var_lib_t)
 
 type condor_var_lock_t;
 files_lock_file(condor_var_lock_t)
@@ -257,5 +257,9 @@ optional_policy(`
 ')
 
 optional_policy(`
+    prelink_transition_domain_attribute(condor_startd_t)
+')
+
+optional_policy(`
 	unconfined_domain(condor_startd_t)
 ')
diff --git a/policy/modules/services/conman.fc b/policy/modules/services/conman.fc
new file mode 100644
index 0000000..6bd92ce
--- /dev/null
+++ b/policy/modules/services/conman.fc
@@ -0,0 +1,8 @@
+/etc/rc\.d/init\.d/conman	--	gen_context(system_u:object_r:conman_initrc_exec_t,s0)
+
+/usr/sbin/conmand		--	gen_context(system_u:object_r:conman_exec_t,s0)
+
+/var/log/conman(/.*)?			gen_context(system_u:object_r:conman_log_t,s0)
+/var/log/conman\.old(/.*)?		gen_context(system_u:object_r:conman_log_t,s0)
+
+/var/run/conmand.*      --      gen_context(system_u:object_r:conman_var_run_t,s0)
diff --git a/policy/modules/services/conman.if b/policy/modules/services/conman.if
new file mode 100644
index 0000000..81808ec
--- /dev/null
+++ b/policy/modules/services/conman.if
@@ -0,0 +1,79 @@
+## <summary>Conman is a program for connecting to remote consoles being managed by conmand</summary>
+
+########################################
+## <summary>
+##	Execute conman in the conman domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`conman_domtrans',`
+	gen_require(`
+		type conman_t, conman_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, conman_exec_t, conman_t)
+')
+
+########################################
+## <summary>
+##	Read conman's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`conman_read_log',`
+	gen_require(`
+		type conman_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, conman_log_t, conman_log_t)
+')
+
+########################################
+## <summary>
+##	Append to conman log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`conman_append_log',`
+	gen_require(`
+		type conman_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, conman_log_t, conman_log_t)
+')
+
+########################################
+## <summary>
+##	Manage conman log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`conman_manage_log',`
+	gen_require(`
+		type conman_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, conman_log_t, conman_log_t)
+	manage_files_pattern($1, conman_log_t, conman_log_t)
+')
+
diff --git a/policy/modules/services/conman.te b/policy/modules/services/conman.te
new file mode 100644
index 0000000..be38291
--- /dev/null
+++ b/policy/modules/services/conman.te
@@ -0,0 +1,57 @@
+policy_module(conman, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type conman_t;
+type conman_exec_t;
+init_daemon_domain(conman_t, conman_exec_t)
+
+type conman_log_t;
+logging_log_file(conman_log_t)
+
+type conman_var_run_t;
+files_pid_file(conman_var_run_t)
+
+type conman_initrc_exec_t;
+init_script_file(conman_initrc_exec_t)
+
+########################################
+#
+# conman local policy
+#
+
+allow conman_t self:capability { sys_tty_config };
+allow conman_t self:process { setrlimit signal_perms };
+
+allow conman_t self:fifo_file rw_fifo_file_perms;
+allow conman_t self:unix_stream_socket create_stream_socket_perms;
+allow conman_t self:tcp_socket { accept listen create_socket_perms };
+
+manage_dirs_pattern(conman_t, conman_log_t, conman_log_t)
+manage_files_pattern(conman_t, conman_log_t, conman_log_t)
+logging_log_filetrans(conman_t, conman_log_t, { dir })
+
+manage_files_pattern(conman_t, conman_var_run_t, conman_var_run_t)
+files_pid_filetrans(conman_t, conman_var_run_t, file)
+
+corenet_tcp_bind_generic_node(conman_t)
+corenet_tcp_bind_conman_port(conman_t)
+
+corecmd_exec_bin(conman_t)
+
+files_read_etc_files(conman_t)
+
+logging_send_syslog_msg(conman_t)
+
+miscfiles_read_localization(conman_t)
+
+sysnet_dns_name_resolve(conman_t)
+
+userdom_use_user_ptys(conman_t)
+
+optional_policy(`
+    freeipmi_stream_connect(conman_t)
+')
diff --git a/policy/modules/services/corosync.te b/policy/modules/services/corosync.te
index 94c8ba7..80c098b 100644
--- a/policy/modules/services/corosync.te
+++ b/policy/modules/services/corosync.te
@@ -27,7 +27,7 @@ logging_log_file(corosync_var_log_t)
 
 # var/lib files
 type corosync_var_lib_t;
-files_type(corosync_var_lib_t)
+files_var_lib_file(corosync_var_lib_t)
 
 # pid files
 type corosync_var_run_t;
diff --git a/policy/modules/services/courier.te b/policy/modules/services/courier.te
index 5c3d708..f176684 100644
--- a/policy/modules/services/courier.te
+++ b/policy/modules/services/courier.te
@@ -21,7 +21,7 @@ files_type(courier_spool_t)
 courier_domain_template(tcpd)
 
 type courier_var_lib_t;
-files_type(courier_var_lib_t)
+files_var_lib_file(courier_var_lib_t)
 
 type courier_var_run_t;
 files_pid_file(courier_var_run_t)
@@ -121,6 +121,9 @@ manage_files_pattern(courier_tcpd_t, courier_var_lib_t, courier_var_lib_t)
 manage_lnk_files_pattern(courier_tcpd_t, courier_var_lib_t, courier_var_lib_t)
 files_search_var_lib(courier_tcpd_t)
 
+manage_files_pattern(courier_tcpd_t, courier_spool_t, courier_spool_t)
+manage_sock_files_pattern(courier_tcpd_t, courier_spool_t, courier_spool_t)
+
 corecmd_search_bin(courier_tcpd_t)
 
 corenet_tcp_bind_generic_node(courier_tcpd_t)
diff --git a/policy/modules/services/cron.te b/policy/modules/services/cron.te
index eedbabc..bbc08d9 100644
--- a/policy/modules/services/cron.te
+++ b/policy/modules/services/cron.te
@@ -36,7 +36,7 @@ files_type(cron_spool_t)
 
 # var/lib files
 type cron_var_lib_t;
-files_type(cron_var_lib_t)
+files_var_lib_file(cron_var_lib_t)
 
 # var/lib files
 type cron_var_run_t;
@@ -119,7 +119,7 @@ ubac_constrained(user_cron_spool_t)
 mta_system_content(user_cron_spool_t)
 
 type system_cronjob_var_lib_t;
-files_type(system_cronjob_var_lib_t)
+files_var_lib_file(system_cronjob_var_lib_t)
 typealias system_cronjob_var_lib_t alias system_crond_var_lib_t;
 
 type system_cronjob_var_run_t;
@@ -208,6 +208,10 @@ fs_list_inotifyfs(crond_t)
 # need auth_chkpwd to check for locked accounts.
 auth_domtrans_chk_passwd(crond_t)
 
+# needed when unconfined module is disabled
+auth_rw_lastlog(crond_t)
+auth_write_login_records(crond_t)
+
 corecmd_exec_shell(crond_t)
 corecmd_list_bin(crond_t)
 corecmd_read_bin_symlinks(crond_t)
@@ -577,6 +581,7 @@ optional_policy(`
 ')	
 
 optional_policy(`
+    prelink_transition_domain_attribute(system_cronjob_t)
 	prelink_delete_cache(system_cronjob_t)
 	prelink_manage_lib(system_cronjob_t)
 	prelink_manage_log(system_cronjob_t)
@@ -604,6 +609,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+    prelink_transition_domain_attribute(crond_t)
+')
+
+optional_policy(`
 	unconfined_domain(crond_t)
 	unconfined_domain(system_cronjob_t)
 ')
diff --git a/policy/modules/services/ctdbd.fc b/policy/modules/services/ctdbd.fc
index 255568d..4131a82 100644
--- a/policy/modules/services/ctdbd.fc
+++ b/policy/modules/services/ctdbd.fc
@@ -15,5 +15,6 @@
 
 /var/ctdbd(/.*)?		gen_context(system_u:object_r:ctdbd_var_lib_t,s0)
 /var/ctdb(/.*)?			gen_context(system_u:object_r:ctdbd_var_lib_t,s0)
+/var/lib/ctdb(/.*)?	gen_context(system_u:object_r:ctdbd_var_lib_t,s0)
 /var/lib/ctdbd(/.*)?	gen_context(system_u:object_r:ctdbd_var_lib_t,s0)
 
diff --git a/policy/modules/services/ctdbd.te b/policy/modules/services/ctdbd.te
index 6e1dc87..d1dec2f 100644
--- a/policy/modules/services/ctdbd.te
+++ b/policy/modules/services/ctdbd.te
@@ -23,7 +23,7 @@ type ctdbd_tmp_t;
 files_tmp_file(ctdbd_tmp_t)
 
 type ctdbd_var_lib_t;
-files_type(ctdbd_var_lib_t)
+files_var_lib_file(ctdbd_var_lib_t)
 
 type ctdbd_var_run_t;
 files_pid_file(ctdbd_var_run_t)
diff --git a/policy/modules/services/cups.te b/policy/modules/services/cups.te
index 6df7d03..2be7c19 100644
--- a/policy/modules/services/cups.te
+++ b/policy/modules/services/cups.te
@@ -75,7 +75,7 @@ type hplip_etc_t;
 files_config_file(hplip_etc_t)
 
 type hplip_var_lib_t;
-files_type(hplip_var_lib_t)
+files_var_lib_file(hplip_var_lib_t)
 
 type hplip_var_run_t;
 files_pid_file(hplip_var_run_t)
diff --git a/policy/modules/services/cyrus.te b/policy/modules/services/cyrus.te
index 6625c26..72062fc 100644
--- a/policy/modules/services/cyrus.te
+++ b/policy/modules/services/cyrus.te
@@ -17,7 +17,7 @@ type cyrus_tmp_t;
 files_tmp_file(cyrus_tmp_t)
 
 type cyrus_var_lib_t;
-files_type(cyrus_var_lib_t)
+files_var_lib_file(cyrus_var_lib_t)
 
 type cyrus_var_run_t;
 files_pid_file(cyrus_var_run_t)
diff --git a/policy/modules/services/dbus.te b/policy/modules/services/dbus.te
index 70883de..88052e4 100644
--- a/policy/modules/services/dbus.te
+++ b/policy/modules/services/dbus.te
@@ -33,7 +33,7 @@ type system_dbusd_tmp_t;
 files_tmp_file(system_dbusd_tmp_t)
 
 type system_dbusd_var_lib_t;
-files_type(system_dbusd_var_lib_t)
+files_var_lib_file(system_dbusd_var_lib_t)
 
 type system_dbusd_var_run_t;
 files_pid_file(system_dbusd_var_run_t)
diff --git a/policy/modules/services/ddclient.fc b/policy/modules/services/ddclient.fc
index 083c135..13c0c4a 100644
--- a/policy/modules/services/ddclient.fc
+++ b/policy/modules/services/ddclient.fc
@@ -1,12 +1,16 @@
 /etc/ddclient\.conf	--	gen_context(system_u:object_r:ddclient_etc_t,s0)
 /etc/ddtcd\.conf	--	gen_context(system_u:object_r:ddclient_etc_t,s0)
-/etc/rc\.d/init\.d/ddclient --	gen_context(system_u:object_r:ddclient_initrc_exec_t,s0)
+
+/etc/rc\.d/init\.d/ddclient	--	gen_context(system_u:object_r:ddclient_initrc_exec_t,s0)
 
 /usr/sbin/ddclient	--	gen_context(system_u:object_r:ddclient_exec_t,s0)
-/usr/sbin/ddtcd		--	gen_context(system_u:object_r:ddclient_exec_t,s0)
+/usr/sbin/ddtcd	--	gen_context(system_u:object_r:ddclient_exec_t,s0)
 
 /var/cache/ddclient(/.*)?	gen_context(system_u:object_r:ddclient_var_t,s0)
+
 /var/lib/ddt-client(/.*)?	gen_context(system_u:object_r:ddclient_var_lib_t,s0)
+
 /var/log/ddtcd\.log.*	--	gen_context(system_u:object_r:ddclient_log_t,s0)
+
 /var/run/ddclient\.pid	--	gen_context(system_u:object_r:ddclient_var_run_t,s0)
 /var/run/ddtcd\.pid	--	gen_context(system_u:object_r:ddclient_var_run_t,s0)
diff --git a/policy/modules/services/ddclient.if b/policy/modules/services/ddclient.if
index ead762a..8f873d5 100644
--- a/policy/modules/services/ddclient.if
+++ b/policy/modules/services/ddclient.if
@@ -1,4 +1,4 @@
-## <summary>Update dynamic IP address at DynDNS.org</summary>
+## <summary>Update dynamic IP address at DynDNS.org.</summary>
 
 #######################################
 ## <summary>
@@ -6,7 +6,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -21,11 +21,13 @@ interface(`ddclient_domtrans',`
 
 ########################################
 ## <summary>
-##	 Execute ddclient daemon on behalf of a user or staff type.
+##	Execute ddclient in the ddclient
+##	domain, and allow the specified
+##	role the ddclient domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	 Domain allowed access.
+##	 Domain allowed to transition.
 ##	</summary>
 ## </param>
 ## <param name="role">
@@ -46,8 +48,8 @@ interface(`ddclient_run',`
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an ddclient environment
+##	All of the rules required to
+##	administrate an ddclient environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -56,7 +58,7 @@ interface(`ddclient_run',`
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the ddclient domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -64,11 +66,11 @@ interface(`ddclient_run',`
 interface(`ddclient_admin',`
 	gen_require(`
 		type ddclient_t, ddclient_etc_t, ddclient_log_t;
-		type ddclient_var_t, ddclient_var_lib_t;
+		type ddclient_var_t, ddclient_var_lib_t, ddclient_tmp_t;
 		type ddclient_var_run_t, ddclient_initrc_exec_t;
 	')
 
-	allow $1 ddclient_t:process { ptrace signal_perms };
+	allow $1 ddclient_t:process signal_perms;
 	ps_process_pattern($1, ddclient_t)
 
 	init_labeled_script_domtrans($1, ddclient_initrc_exec_t)
@@ -90,4 +92,7 @@ interface(`ddclient_admin',`
 
 	files_list_pids($1)
 	admin_pattern($1, ddclient_var_run_t)
+
+	files_list_tmp($1)
+	admin_pattern($1, ddclient_tmp_t)
 ')
diff --git a/policy/modules/services/ddclient.te b/policy/modules/services/ddclient.te
index 79d631e..3e404d3 100644
--- a/policy/modules/services/ddclient.te
+++ b/policy/modules/services/ddclient.te
@@ -1,14 +1,16 @@
-
-policy_module(ddclient, 1.8.1)
+policy_module(ddclient, 1.10.0)
 
 ########################################
 #
 # Declarations
 #
 
+
+
 type ddclient_t;
 type ddclient_exec_t;
 init_daemon_domain(ddclient_t, ddclient_exec_t)
+role system_r types ddclient_t;
 
 type ddclient_etc_t;
 files_config_file(ddclient_etc_t)
@@ -19,11 +21,14 @@ init_script_file(ddclient_initrc_exec_t)
 type ddclient_log_t;
 logging_log_file(ddclient_log_t)
 
+type ddclient_tmp_t;
+files_tmp_file(ddclient_tmp_t)
+
 type ddclient_var_t;
 files_type(ddclient_var_t)
 
 type ddclient_var_lib_t;
-files_type(ddclient_var_lib_t)
+files_var_lib_file(ddclient_var_lib_t)
 
 type ddclient_var_run_t;
 files_pid_file(ddclient_var_run_t)
@@ -33,41 +38,47 @@ files_pid_file(ddclient_var_run_t)
 # Declarations
 #
 
+
 dontaudit ddclient_t self:capability sys_tty_config;
 allow ddclient_t self:process signal_perms;
 allow ddclient_t self:fifo_file rw_fifo_file_perms;
 allow ddclient_t self:tcp_socket create_socket_perms;
 allow ddclient_t self:udp_socket create_socket_perms;
+allow ddclient_t self:netlink_route_socket r_netlink_socket_perms;
 
-allow ddclient_t ddclient_etc_t:file read_file_perms;
+read_files_pattern(ddclient_t, ddclient_etc_t, ddclient_etc_t)
+setattr_files_pattern(ddclient_t, ddclient_etc_t, ddclient_etc_t)
 
-allow ddclient_t ddclient_log_t:file manage_file_perms;
+allow ddclient_t ddclient_log_t:file append_file_perms;
+allow ddclient_t ddclient_log_t:file create_file_perms;
+allow ddclient_t ddclient_log_t:file setattr_file_perms;
 logging_log_filetrans(ddclient_t, ddclient_log_t, file)
 
+manage_files_pattern(ddclient_t, ddclient_tmp_t, ddclient_tmp_t)
+files_tmp_filetrans(ddclient_t, ddclient_tmp_t, file)
+
 manage_dirs_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
 manage_files_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
 manage_lnk_files_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
 manage_fifo_files_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
 manage_sock_files_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
-files_var_filetrans(ddclient_t, ddclient_var_t, { file lnk_file sock_file fifo_file })
 
 manage_files_pattern(ddclient_t, ddclient_var_lib_t, ddclient_var_lib_t)
-files_var_lib_filetrans(ddclient_t, ddclient_var_lib_t, file)
 
 manage_files_pattern(ddclient_t, ddclient_var_run_t, ddclient_var_run_t)
 files_pid_filetrans(ddclient_t, ddclient_var_run_t, file)
 
-kernel_read_system_state(ddclient_t)
-kernel_read_network_state(ddclient_t)
-kernel_read_software_raid_state(ddclient_t)
 kernel_getattr_core_if(ddclient_t)
 kernel_getattr_message_if(ddclient_t)
 kernel_read_kernel_sysctls(ddclient_t)
+kernel_read_network_state(ddclient_t)
+kernel_read_software_raid_state(ddclient_t)
+kernel_read_system_state(ddclient_t)
+kernel_search_network_sysctl(ddclient_t)
 
 corecmd_exec_shell(ddclient_t)
 corecmd_exec_bin(ddclient_t)
 
-corenet_all_recvfrom_unlabeled(ddclient_t)
 corenet_all_recvfrom_netlabel(ddclient_t)
 corenet_tcp_sendrecv_generic_if(ddclient_t)
 corenet_udp_sendrecv_generic_if(ddclient_t)
@@ -75,17 +86,19 @@ corenet_tcp_sendrecv_generic_node(ddclient_t)
 corenet_udp_sendrecv_generic_node(ddclient_t)
 corenet_tcp_sendrecv_all_ports(ddclient_t)
 corenet_udp_sendrecv_all_ports(ddclient_t)
-corenet_tcp_connect_all_ports(ddclient_t)
+corenet_tcp_bind_generic_node(ddclient_t)
+corenet_udp_bind_generic_node(ddclient_t)
+
 corenet_sendrecv_all_client_packets(ddclient_t)
+corenet_tcp_connect_all_ports(ddclient_t)
 
 dev_read_sysfs(ddclient_t)
 dev_read_urand(ddclient_t)
 
 domain_use_interactive_fds(ddclient_t)
 
-files_read_etc_files(ddclient_t)
 files_read_etc_runtime_files(ddclient_t)
-files_read_usr_files(ddclient_t)
+files_read_etc_files(ddclient_t)
 
 fs_getattr_all_fs(ddclient_t)
 fs_search_auto_mountpoints(ddclient_t)
@@ -94,8 +107,10 @@ logging_send_syslog_msg(ddclient_t)
 
 miscfiles_read_localization(ddclient_t)
 
+mta_send_mail(ddclient_t)
+
 sysnet_exec_ifconfig(ddclient_t)
-sysnet_read_config(ddclient_t)
+sysnet_dns_name_resolve(ddclient_t)
 
 userdom_dontaudit_use_unpriv_user_fds(ddclient_t)
 userdom_dontaudit_search_user_home_dirs(ddclient_t)
diff --git a/policy/modules/services/denyhosts.te b/policy/modules/services/denyhosts.te
index 3e4af44..8d428ea 100644
--- a/policy/modules/services/denyhosts.te
+++ b/policy/modules/services/denyhosts.te
@@ -14,7 +14,7 @@ type denyhosts_initrc_exec_t;
 init_script_file(denyhosts_initrc_exec_t)
 
 type denyhosts_var_lib_t;
-files_type(denyhosts_var_lib_t)
+files_var_lib_file(denyhosts_var_lib_t)
 
 type denyhosts_var_lock_t;
 files_lock_file(denyhosts_var_lock_t)
diff --git a/policy/modules/services/devicekit.te b/policy/modules/services/devicekit.te
index 33ff5ab..9995afd 100644
--- a/policy/modules/services/devicekit.te
+++ b/policy/modules/services/devicekit.te
@@ -24,7 +24,7 @@ type devicekit_var_run_t;
 files_pid_file(devicekit_var_run_t)
 
 type devicekit_var_lib_t;
-files_type(devicekit_var_lib_t)
+files_var_lib_file(devicekit_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/dhcp.fc b/policy/modules/services/dhcp.fc
index eb54c13..9c38759 100644
--- a/policy/modules/services/dhcp.fc
+++ b/policy/modules/services/dhcp.fc
@@ -1,6 +1,8 @@
 /etc/rc\.d/init\.d/dhcpd(6)?	--	gen_context(system_u:object_r:dhcpd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/dhcrelay(6)? --  gen_context(system_u:object_r:dhcpd_initrc_exec_t,s0)
 
 /usr/sbin/dhcpd.*		--	gen_context(system_u:object_r:dhcpd_exec_t,s0)
+/usr/sbin/dhcrelay.*  --  gen_context(system_u:object_r:dhcpd_exec_t,s0)
 
 /var/lib/dhcpd(/.*)?			gen_context(system_u:object_r:dhcpd_state_t,s0)
 /var/lib/dhcp(3)?/dhcpd\.leases.* --	gen_context(system_u:object_r:dhcpd_state_t,s0)
diff --git a/policy/modules/services/dhcp.te b/policy/modules/services/dhcp.te
index b135f11..cf5497e 100644
--- a/policy/modules/services/dhcp.te
+++ b/policy/modules/services/dhcp.te
@@ -27,7 +27,7 @@ files_pid_file(dhcpd_var_run_t)
 # Local policy
 #
 
-allow dhcpd_t self:capability { dac_override sys_chroot net_raw setgid setuid sys_resource };
+allow dhcpd_t self:capability { chown dac_override sys_chroot net_raw setgid setuid sys_resource };
 dontaudit dhcpd_t self:capability { net_admin sys_tty_config };
 allow dhcpd_t self:process signal_perms;
 allow dhcpd_t self:fifo_file rw_fifo_file_perms;
diff --git a/policy/modules/services/dictd.te b/policy/modules/services/dictd.te
index 8364f01..b9779a7 100644
--- a/policy/modules/services/dictd.te
+++ b/policy/modules/services/dictd.te
@@ -17,7 +17,7 @@ type dictd_initrc_exec_t;
 init_script_file(dictd_initrc_exec_t)
 
 type dictd_var_lib_t alias var_lib_dictd_t;
-files_type(dictd_var_lib_t)
+files_var_lib_file(dictd_var_lib_t)
 
 type dictd_var_run_t;
 files_pid_file(dictd_var_run_t)
diff --git a/policy/modules/services/dirsrv.te b/policy/modules/services/dirsrv.te
index a8c39be..494ee86 100644
--- a/policy/modules/services/dirsrv.te
+++ b/policy/modules/services/dirsrv.te
@@ -17,7 +17,7 @@ domain_type(dirsrv_snmp_t)
 init_daemon_domain(dirsrv_snmp_t, dirsrv_snmp_exec_t)
 
 type dirsrv_var_lib_t;
-files_type(dirsrv_var_lib_t)
+files_var_lib_file(dirsrv_var_lib_t)
 
 type dirsrv_var_log_t;
 logging_log_file(dirsrv_var_log_t)
diff --git a/policy/modules/services/dovecot.te b/policy/modules/services/dovecot.te
index 7ce4d5e..bdabde5 100644
--- a/policy/modules/services/dovecot.te
+++ b/policy/modules/services/dovecot.te
@@ -47,7 +47,7 @@ files_type(dovecot_spool_t)
 
 # /var/lib/dovecot holds SSL parameters file
 type dovecot_var_lib_t;
-files_type(dovecot_var_lib_t)
+files_var_lib_file(dovecot_var_lib_t)
 
 type dovecot_var_log_t;
 logging_log_file(dovecot_var_log_t)
diff --git a/policy/modules/services/drbd.te b/policy/modules/services/drbd.te
index 16bc75e..d50f8bb 100644
--- a/policy/modules/services/drbd.te
+++ b/policy/modules/services/drbd.te
@@ -10,7 +10,7 @@ type drbd_exec_t;
 init_daemon_domain(drbd_t, drbd_exec_t)
 
 type drbd_var_lib_t;
-files_type(drbd_var_lib_t)
+files_var_lib_file(drbd_var_lib_t)
 
 type drbd_lock_t;
 files_lock_file(drbd_lock_t)
diff --git a/policy/modules/services/dspam.if b/policy/modules/services/dspam.if
index a446210..b4754be 100644
--- a/policy/modules/services/dspam.if
+++ b/policy/modules/services/dspam.if
@@ -246,9 +246,6 @@ interface(`dspam_admin',`
 
 	allow $1 dspam_t:process signal_perms;
 	ps_process_pattern($1, dspam_t)
-	tunable_policy(`deny_ptrace',`',`
-		allow $1 dspam_t:process ptrace;
-	')
 
 	dspam_initrc_domtrans($1)
 	domain_system_change_exemption($1)
diff --git a/policy/modules/services/dspam.te b/policy/modules/services/dspam.te
index 9e4d2a9..8d4fd08 100644
--- a/policy/modules/services/dspam.te
+++ b/policy/modules/services/dspam.te
@@ -17,7 +17,7 @@ type dspam_log_t;
 logging_log_file(dspam_log_t)
 
 type dspam_var_lib_t;
-files_type(dspam_var_lib_t)
+files_var_lib_file(dspam_var_lib_t)
 
 type dspam_var_run_t;
 files_pid_file(dspam_var_run_t)
@@ -57,6 +57,8 @@ corenet_tcp_connect_dspam_port(dspam_t)
 corenet_tcp_connect_spamd_port(dspam_t)
 corenet_tcp_bind_dspam_port(dspam_t)
 corenet_tcp_bind_spamd_port(dspam_t)
+corenet_tcp_bind_lmtp_port(dspam_t)
+corenet_tcp_connect_lmtp_port(dspam_t)
 
 files_search_spool(dspam_t)
 
diff --git a/policy/modules/services/fail2ban.te b/policy/modules/services/fail2ban.te
index c6570aa..c1fdedc 100644
--- a/policy/modules/services/fail2ban.te
+++ b/policy/modules/services/fail2ban.te
@@ -18,7 +18,7 @@ type fail2ban_log_t;
 logging_log_file(fail2ban_log_t)
 
 type fail2ban_var_lib_t;
-files_type(fail2ban_var_lib_t)
+files_var_lib_file(fail2ban_var_lib_t)
 
 # pid files
 type fail2ban_var_run_t;
diff --git a/policy/modules/services/fprintd.te b/policy/modules/services/fprintd.te
index 7a0e135..9c2cc2d 100644
--- a/policy/modules/services/fprintd.te
+++ b/policy/modules/services/fprintd.te
@@ -11,7 +11,7 @@ type fprintd_exec_t;
 dbus_system_domain(fprintd_t, fprintd_exec_t)
 
 type fprintd_var_lib_t;
-files_type(fprintd_var_lib_t)
+files_var_lib_file(fprintd_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/freeipmi.fc b/policy/modules/services/freeipmi.fc
new file mode 100644
index 0000000..0e37d23
--- /dev/null
+++ b/policy/modules/services/freeipmi.fc
@@ -0,0 +1,17 @@
+/etc/rc\.d/init\.d/bmc-watchdog		--	gen_context(system_u:object_r:freeipmi_bmc_watchdog_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/ipmidetectd		--	gen_context(system_u:object_r:freeipmi_ipmidetectd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/ipmiseld        --  gen_context(system_u:object_r:freeipmi_ipmiseld_initrc_exec_t,s0)
+
+/usr/sbin/bmc-watchdog		--	gen_context(system_u:object_r:freeipmi_bmc_watchdog_exec_t,s0)
+/usr/sbin/ipmidetectd			--	gen_context(system_u:object_r:freeipmi_ipmidetectd_exec_t,s0)
+/usr/sbin/ipmiseld		--	gen_context(system_u:object_r:freeipmi_ipmiseld_exec_t,s0)
+
+/var/cache/ipmiseld(/.*)?       			gen_context(system_u:object_r:freeipmi_var_cache_t,s0)
+/var/cache/ipmimonitoringsdrcache(/.*)?		gen_context(system_u:object_r:freeipmi_var_cache_t,s0)
+
+/var/lib/freeipmi(/.*)?     gen_context(system_u:object_r:freeipmi_var_lib_t,s0)
+
+
+/var/run/ipmidetectd\.pid	--	gen_context(system_u:object_r:freeipmi_ipmidetectd_var_run_t,s0)
+/var/run/ipmiseld\.pid	--	gen_context(system_u:object_r:freeipmi_ipmiseld_var_run_t,s0)
+/var/run/bmc-watchdog\.pid	--	gen_context(system_u:object_r:freeipmi_bmc_watchdog_var_run_t,s0)
diff --git a/policy/modules/services/freeipmi.if b/policy/modules/services/freeipmi.if
new file mode 100644
index 0000000..f6ea20c
--- /dev/null
+++ b/policy/modules/services/freeipmi.if
@@ -0,0 +1,75 @@
+## <summary>Remote-Console (out-of-band) and System Management Software (in-band) based on Intelligent Platform Management Interface specification</summary>
+
+#####################################
+## <summary>
+##  Creates types and rules for a basic
+##  freeipmi init daemon domain.
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+template(`freeipmi_domain_template',`
+    gen_require(`
+        attribute freeipmi_domain, freeipmi_pid;
+    ')
+
+    #############################
+    #
+    # Declarations
+    #
+
+    type freeipmi_$1_t, freeipmi_domain;
+    type freeipmi_$1_exec_t;
+    init_daemon_domain(freeipmi_$1_t, freeipmi_$1_exec_t)
+    role system_r types freeipmi_$1_t;
+
+    type freeipmi_$1_initrc_exec_t;
+    init_script_file(freeipmi_$1_initrc_exec_t)
+
+    type freeipmi_$1_var_run_t, freeipmi_pid;
+    files_pid_file(freeipmi_$1_var_run_t)
+
+    #############################
+    #
+    # Local policy
+    #
+
+    manage_files_pattern(freeipmi_$1_t, freeipmi_$1_var_run_t, freeipmi_$1_var_run_t)
+
+    kernel_read_system_state(freeipmi_$1_t)
+
+    corenet_all_recvfrom_netlabel(freeipmi_$1_t)
+    corenet_all_recvfrom_unlabeled(freeipmi_$1_t)
+
+    dev_read_raw_memory(freeipmi_$1_t)
+
+    auth_use_nsswitch(freeipmi_$1_t)
+
+    logging_send_syslog_msg(freeipmi_$1_t)
+    
+    miscfiles_read_localization(freeipmi_$1_t)
+')
+
+####################################
+## <summary>
+##	Connect to cluster domains over a unix domain
+##	stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`freeipmi_stream_connect',`
+	gen_require(`
+		attribute freeipmi_domain, freeipmi_pid;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, freeipmi_pid, freeipmi_pid, freeipmi_domain)
+')
+
diff --git a/policy/modules/services/freeipmi.te b/policy/modules/services/freeipmi.te
new file mode 100644
index 0000000..44eacb4
--- /dev/null
+++ b/policy/modules/services/freeipmi.te
@@ -0,0 +1,75 @@
+policy_module(freeipmi, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute freeipmi_domain;
+attribute freeipmi_pid;
+
+freeipmi_domain_template(ipmidetectd)
+freeipmi_domain_template(ipmiseld)
+freeipmi_domain_template(bmc_watchdog)
+
+type freeipmi_var_lib_t;
+files_var_lib_file(freeipmi_var_lib_t)
+
+type freeipmi_var_cache_t;
+files_type(freeipmi_var_cache_t)
+
+########################################
+#
+# freeipmi_domain local policy
+#
+
+allow freeipmi_domain self:fifo_file rw_fifo_file_perms;
+allow freeipmi_domain self:unix_stream_socket create_stream_socket_perms;
+allow freeipmi_domain self:sem create_sem_perms;
+allow freeipmi_domain self:tcp_socket { listen create_stream_socket_perms };
+
+manage_dirs_pattern(freeipmi_domain, freeipmi_var_cache_t, freeipmi_var_cache_t)
+manage_files_pattern(freeipmi_domain, freeipmi_var_cache_t, freeipmi_var_cache_t)
+manage_lnk_files_pattern(freeipmi_domain, freeipmi_var_cache_t, freeipmi_var_cache_t)
+files_var_filetrans(freeipmi_domain, freeipmi_var_cache_t, { dir })
+
+manage_dirs_pattern(freeipmi_domain, freeipmi_var_lib_t, freeipmi_var_lib_t)
+manage_files_pattern(freeipmi_domain, freeipmi_var_lib_t, freeipmi_var_lib_t)
+manage_lnk_files_pattern(freeipmi_domain, freeipmi_var_lib_t, freeipmi_var_lib_t)
+files_var_lib_filetrans(freeipmi_domain, freeipmi_var_lib_t, { dir })
+
+dev_read_rand(freeipmi_domain)
+dev_read_urand(freeipmi_domain)
+dev_rw_ipmi_dev(freeipmi_domain)
+
+sysnet_dns_name_resolve(freeipmi_domain)
+
+#######################################
+#
+# bmc-watchdog local policy
+#
+
+files_pid_filetrans(freeipmi_bmc_watchdog_t, freeipmi_bmc_watchdog_var_run_t, file)
+
+
+allow freeipmi_bmc_watchdog_t freeipmi_ipmiseld_t:sem rw_sem_perms;
+
+#######################################
+#
+# ipmidetectd local policy
+#
+
+files_pid_filetrans(freeipmi_ipmidetectd_t, freeipmi_ipmidetectd_var_run_t, file)
+
+corenet_tcp_bind_freeipmi_port(freeipmi_ipmidetectd_t)
+
+#######################################
+#
+# ipmiseld local policy
+#
+
+allow freeipmi_ipmiseld_t self:capability sys_rawio;
+
+allow freeipmi_ipmiseld_t freeipmi_bmc_watchdog_t:sem rw_sem_perms;
+
+files_pid_filetrans(freeipmi_ipmiseld_t, freeipmi_ipmiseld_var_run_t, file)
diff --git a/policy/modules/services/ftp.te b/policy/modules/services/ftp.te
index d07479a..f71a5b4 100644
--- a/policy/modules/services/ftp.te
+++ b/policy/modules/services/ftp.te
@@ -175,7 +175,6 @@ corenet_tcp_bind_generic_node(ftpd_t)
 corenet_tcp_bind_ftp_port(ftpd_t)
 corenet_tcp_bind_ftp_data_port(ftpd_t)
 corenet_tcp_bind_generic_port(ftpd_t)
-corenet_tcp_bind_all_unreserved_ports(ftpd_t)
 corenet_dontaudit_tcp_bind_all_ports(ftpd_t)
 corenet_tcp_connect_all_ports(ftpd_t)
 corenet_sendrecv_ftp_server_packets(ftpd_t)
@@ -324,6 +323,7 @@ tunable_policy(`ftpd_connect_db',`
 
 tunable_policy(`ftpd_use_passive_mode',`
        corenet_tcp_bind_all_unreserved_ports(ftpd_t)
+       corenet_sendrecv_all_server_packets(ftpd_t)	
 ')
 
 optional_policy(`
diff --git a/policy/modules/services/glance.fc b/policy/modules/services/glance.fc
index 657d8f5..1411325 100644
--- a/policy/modules/services/glance.fc
+++ b/policy/modules/services/glance.fc
@@ -1,10 +1,11 @@
 
 /etc/rc\.d/init\.d/openstack-glance-api --	gen_context(system_u:object_r:glance_api_initrc_exec_t,s0)
-
 /etc/rc\.d/init\.d/openstack-glance-registry --	gen_context(system_u:object_r:glance_registry_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/openstack-glance-scrubber --	gen_context(system_u:object_r:glance_scrubber_initrc_exec_t,s0)
 
 /usr/bin/glance-api		--	gen_context(system_u:object_r:glance_api_exec_t,s0)
 /usr/bin/glance-registry	--	gen_context(system_u:object_r:glance_registry_exec_t,s0)
+/usr/bin/glance-scrubber	--	gen_context(system_u:object_r:glance_scrubber_exec_t,s0)
 
 /var/lib/glance(/.*)?		gen_context(system_u:object_r:glance_var_lib_t,s0)
 
diff --git a/policy/modules/services/glance.if b/policy/modules/services/glance.if
index ebe1dde..b83b50d 100644
--- a/policy/modules/services/glance.if
+++ b/policy/modules/services/glance.if
@@ -241,10 +241,6 @@ interface(`glance_admin',`
 
 	allow $1 glance_registry_t:process signal_perms;
 	ps_process_pattern($1, glance_registry_t)
-	tunable_policy(`deny_ptrace',`',`
-		allow $1 glance_registry_t:process ptrace;
-		allow $1 glance_api_t:process ptrace;
-	')
 
 	allow $1 glance_api_t:process signal_perms;
 	ps_process_pattern($1, glance_api_t)
diff --git a/policy/modules/services/glance.te b/policy/modules/services/glance.te
index 176af1f..0139d97 100644
--- a/policy/modules/services/glance.te
+++ b/policy/modules/services/glance.te
@@ -24,11 +24,18 @@ init_daemon_domain(glance_api_t, glance_api_exec_t)
 type glance_api_initrc_exec_t;
 init_script_file(glance_api_initrc_exec_t)
 
+type glance_scrubber_t, glance_domain;
+type glance_scrubber_exec_t;
+init_daemon_domain(glance_scrubber_t, glance_scrubber_exec_t)
+
+type glance_scrubber_initrc_exec_t;
+init_script_file(glance_scrubber_initrc_exec_t)
+
 type glance_log_t;
 logging_log_file(glance_log_t)
 
 type glance_var_lib_t;
-files_type(glance_var_lib_t)
+files_var_lib_file(glance_var_lib_t)
 
 type glance_tmp_t;
 files_tmp_file(glance_tmp_t)
@@ -128,3 +135,12 @@ libs_exec_ldconfig(glance_api_t)
 optional_policy(`
 	unconfined_domain(glance_api_t)
 ')
+
+########################################
+#
+# glance-scrubber local policy
+#
+
+optional_policy(`
+	unconfined_domain(glance_scrubber_t)
+')
diff --git a/policy/modules/services/glusterd.fc b/policy/modules/services/glusterd.fc
index 6418e39..735bd28 100644
--- a/policy/modules/services/glusterd.fc
+++ b/policy/modules/services/glusterd.fc
@@ -1,16 +1,17 @@
+/etc/rc\.d/init\.d/gluster.*	--	gen_context(system_u:object_r:glusterd_initrc_exec_t,s0)
 
-/etc/rc\.d/init\.d/glusterd	--	gen_context(system_u:object_r:glusterd_initrc_exec_t,s0)
+/etc/glusterfs(/.*)?	gen_context(system_u:object_r:glusterd_conf_t,s0)
+/etc/glusterd(/.*)?	gen_context(system_u:object_r:glusterd_conf_t,s0)
 
-/etc/glusterfs(/.*)?			gen_context(system_u:object_r:glusterd_etc_t,s0)
-/etc/glusterd(/.*)?			gen_context(system_u:object_r:glusterd_etc_t,s0)
-
-/usr/sbin/glusterd		--	gen_context(system_u:object_r:glusterd_initrc_exec_t,s0)
-/usr/sbin/glusterfsd		--	gen_context(system_u:object_r:glusterd_exec_t,s0)
+/usr/sbin/glusterd	--	gen_context(system_u:object_r:glusterd_initrc_exec_t,s0)
+/usr/sbin/glusterfsd	--	gen_context(system_u:object_r:glusterd_exec_t,s0)
 
 /opt/glusterfs/[^/]+/sbin/glusterfsd	--	gen_context(system_u:object_r:glusterd_exec_t,s0)
 
-/var/log/glusterfs(/.*)?		gen_context(system_u:object_r:glusterd_log_t,s0)
+/var/lib/glusterd(/.*)?		gen_context(system_u:object_r:glusterd_var_lib_t,s0)
 
-/var/run/glusterd(/.*)?			gen_context(system_u:object_r:glusterd_var_run_t,s0)
-/var/run/glusterd\.pid		--	gen_context(system_u:object_r:glusterd_var_run_t,s0)
+/var/log/glusterfs(/.*)?	gen_context(system_u:object_r:glusterd_log_t,s0)
 
+/var/run/gluster(/.*)?      gen_context(system_u:object_r:glusterd_var_run_t,s0)
+/var/run/glusterd.*     --	gen_context(system_u:object_r:glusterd_var_run_t,s0)
+/var/run/glusterd.*     -s  gen_context(system_u:object_r:glusterd_var_run_t,s0)
diff --git a/policy/modules/services/glusterd.if b/policy/modules/services/glusterd.if
index e15bbb0..8281da7 100644
--- a/policy/modules/services/glusterd.if
+++ b/policy/modules/services/glusterd.if
@@ -124,10 +124,10 @@ interface(`glusterd_admin',`
 		type glusterd_initrc_exec_t;
 		type glusterd_log_t;
 		type glusterd_tmp_t;
-		type glusterd_etc_t; 
+		type glusterd_conf_t; 
 	')
 
-	allow $1 glusterd_t:process { ptrace signal_perms };
+	allow $1 glusterd_t:process { signal_perms };
 	ps_process_pattern($1, glusterd_t)
 
 	glusterd_initrc_domtrans($1)
@@ -140,7 +140,7 @@ interface(`glusterd_admin',`
 
 	admin_pattern($1, glusterd_tmp_t)
 
-	admin_pattern($1, glusterd_etc_t)
+	admin_pattern($1, glusterd_conf_t)
 
 ')
 
diff --git a/policy/modules/services/glusterd.te b/policy/modules/services/glusterd.te
index 7eee8e9..4056454 100644
--- a/policy/modules/services/glusterd.te
+++ b/policy/modules/services/glusterd.te
@@ -1,4 +1,4 @@
-policy_module(glusterd, 1.0.0)
+policy_module(glusterd, 1.1.2)
 
 ## <desc>
 ## <p>
@@ -32,15 +32,16 @@ type glusterd_t;
 type glusterd_exec_t;
 init_daemon_domain(glusterd_t, glusterd_exec_t)
 
-type glusterd_etc_t;
-files_type(glusterd_etc_t)
-
-type glusterd_tmp_t;
-files_tmp_file(glusterd_tmp_t)
+type glusterd_conf_t;
+files_type(glusterd_conf_t)
+typealias glusterd_conf_t alias glusterd_etc_t ;
 
 type glusterd_initrc_exec_t;
 init_script_file(glusterd_initrc_exec_t)
 
+type glusterd_tmp_t;
+files_tmp_file(glusterd_tmp_t)
+
 type glusterd_log_t;
 logging_log_file(glusterd_log_t)
 
@@ -48,95 +49,150 @@ type glusterd_var_run_t;
 files_pid_file(glusterd_var_run_t)
 
 type glusterd_var_lib_t;
-files_type(glusterd_var_lib_t);
+files_var_lib_file(glusterd_var_lib_t)
 
+type glusterd_brick_t;
+files_type(glusterd_brick_t)
 
 ########################################
 #
-# glusterd local policy
+# Local policy
 #
 
-allow glusterd_t self:capability { net_bind_service sys_admin dac_override chown dac_read_search fowner };
-allow glusterd_t self:process { setrlimit signal };
-allow glusterd_t self:capability sys_resource;
+allow glusterd_t self:capability { sys_admin sys_resource dac_override chown dac_read_search fowner fsetid kill setgid setuid net_admin };
 
+allow glusterd_t self:process { getcap setcap setrlimit signal_perms };
 allow glusterd_t self:fifo_file rw_fifo_file_perms;
-allow glusterd_t self:netlink_route_socket r_netlink_socket_perms;
-allow glusterd_t self:tcp_socket create_stream_socket_perms;
-allow glusterd_t self:udp_socket create_socket_perms;
-allow glusterd_t self:unix_stream_socket create_stream_socket_perms;
-allow glusterd_t self:unix_dgram_socket create_socket_perms;
+allow glusterd_t self:tcp_socket { accept listen };
+allow glusterd_t self:unix_stream_socket { accept listen connectto };
+
+manage_dirs_pattern(glusterd_t, glusterd_conf_t, glusterd_conf_t)
+manage_files_pattern(glusterd_t, glusterd_conf_t, glusterd_conf_t)
+files_etc_filetrans(glusterd_t, glusterd_conf_t, { dir file })
 
 manage_dirs_pattern(glusterd_t, glusterd_tmp_t, glusterd_tmp_t)
 manage_files_pattern(glusterd_t, glusterd_tmp_t, glusterd_tmp_t)
 manage_sock_files_pattern(glusterd_t, glusterd_tmp_t, glusterd_tmp_t)
-files_tmp_filetrans(glusterd_t, glusterd_tmp_t, { dir file sock_file }) 
-userdom_user_tmp_filetrans(glusterd_t, glusterd_tmp_t, { dir file sock_file })
+files_tmp_filetrans(glusterd_t, glusterd_tmp_t, { dir file sock_file })
+allow glusterd_t glusterd_tmp_t:dir mounton;
 
 manage_dirs_pattern(glusterd_t, glusterd_log_t, glusterd_log_t)
-manage_files_pattern(glusterd_t, glusterd_log_t, glusterd_log_t)
-logging_log_filetrans(glusterd_t, glusterd_log_t, { dir file })
+append_files_pattern(glusterd_t, glusterd_log_t, glusterd_log_t)
+create_files_pattern(glusterd_t, glusterd_log_t, glusterd_log_t)
+setattr_files_pattern(glusterd_t, glusterd_log_t, glusterd_log_t)
+logging_log_filetrans(glusterd_t, glusterd_log_t, dir)
 
 manage_dirs_pattern(glusterd_t, glusterd_var_run_t, glusterd_var_run_t)
 manage_files_pattern(glusterd_t, glusterd_var_run_t, glusterd_var_run_t)
-files_pid_filetrans(glusterd_t, glusterd_var_run_t, { dir file })
+manage_sock_files_pattern(glusterd_t, glusterd_var_run_t, glusterd_var_run_t)
+files_pid_filetrans(glusterd_t, glusterd_var_run_t, { dir file sock_file })
 
 manage_dirs_pattern(glusterd_t, glusterd_var_lib_t, glusterd_var_lib_t)
 manage_files_pattern(glusterd_t, glusterd_var_lib_t, glusterd_var_lib_t)
-files_var_lib_filetrans(glusterd_t, glusterd_var_lib_t, { dir file })
-
-manage_dirs_pattern(glusterd_t, glusterd_etc_t, glusterd_etc_t)
-manage_files_pattern(glusterd_t, glusterd_etc_t, glusterd_etc_t)
+manage_sock_files_pattern(glusterd_t, glusterd_var_lib_t, glusterd_var_lib_t)
+files_var_lib_filetrans(glusterd_t, glusterd_var_lib_t, dir)
+relabel_files_pattern(glusterd_t, glusterd_var_lib_t, glusterd_var_lib_t)
+
+manage_dirs_pattern(glusterd_t, glusterd_brick_t, glusterd_brick_t)
+manage_files_pattern(glusterd_t, glusterd_brick_t, glusterd_brick_t)
+manage_fifo_files_pattern(glusterd_t, glusterd_brick_t, glusterd_brick_t)
+manage_lnk_files_pattern(glusterd_t, glusterd_brick_t, glusterd_brick_t)
+relabel_files_pattern(glusterd_t, glusterd_brick_t, glusterd_brick_t)
+relabel_lnk_files_pattern(glusterd_t, glusterd_brick_t, glusterd_brick_t)
+relabel_dirs_pattern(glusterd_t, glusterd_brick_t, glusterd_brick_t)
 
 can_exec(glusterd_t, glusterd_exec_t)
 
 kernel_read_system_state(glusterd_t)
+kernel_read_network_state(glusterd_t)
+kernel_read_net_sysctls(glusterd_t)
+kernel_request_load_module(glusterd_t)
 
 corecmd_exec_bin(glusterd_t)
 corecmd_exec_shell(glusterd_t)
 
-domain_use_interactive_fds(glusterd_t)
-
+corenet_all_recvfrom_unlabeled(glusterd_t)
+corenet_all_recvfrom_netlabel(glusterd_t)
+corenet_tcp_sendrecv_generic_if(glusterd_t)
+corenet_udp_sendrecv_generic_if(glusterd_t)
+corenet_tcp_sendrecv_generic_node(glusterd_t)
+corenet_udp_sendrecv_generic_node(glusterd_t)
+corenet_tcp_sendrecv_all_ports(glusterd_t)
+corenet_udp_sendrecv_all_ports(glusterd_t)
 corenet_tcp_bind_generic_node(glusterd_t)
-corenet_tcp_bind_generic_port(glusterd_t)
+corenet_udp_bind_generic_node(glusterd_t)
+
+corenet_tcp_connect_gluster_port(glusterd_t)
+corenet_tcp_bind_gluster_port(glusterd_t)
+
+# replacement for rpc.mountd
+corenet_sendrecv_all_server_packets(glusterd_t)
 corenet_tcp_bind_all_reserved_ports(glusterd_t)
 corenet_udp_bind_all_rpc_ports(glusterd_t)
-corenet_udp_bind_generic_node(glusterd_t)
+corenet_tcp_bind_all_rpc_ports(glusterd_t)
+corenet_tcp_bind_nfs_port(glusterd_t)
+corenet_udp_bind_nfs_port(glusterd_t)
+corenet_udp_bind_mountd_port(glusterd_t)
+corenet_tcp_bind_mountd_port(glusterd_t)
 corenet_udp_bind_ipp_port(glusterd_t)
 
+corenet_sendrecv_all_client_packets(glusterd_t)
+corenet_tcp_bind_all_unreserved_ports(glusterd_t)
+corenet_tcp_connect_all_unreserved_ports(glusterd_t)
+corenet_tcp_connect_ssh_port(glusterd_t)
+
 dev_read_sysfs(glusterd_t)
 dev_read_urand(glusterd_t)
 
-files_read_usr_files(glusterd_t)
-files_rw_pid_dirs(glusterd_t)
+domain_read_all_domains_state(glusterd_t)
+
+domain_use_interactive_fds(glusterd_t)
 
-# Why is this needed
-#files_manage_urandom_seed(glusterd_t)
+fs_mount_all_fs(glusterd_t)
+fs_unmount_all_fs(glusterd_t)
+fs_getattr_all_fs(glusterd_t)
+
+files_mounton_non_security(glusterd_t)
+
+storage_rw_fuse(glusterd_t)
 
 auth_use_nsswitch(glusterd_t)
 
+fs_getattr_all_fs(glusterd_t)
+
 logging_send_syslog_msg(glusterd_t)
+libs_exec_ldconfig(glusterd_t)
 
 miscfiles_read_localization(glusterd_t)
-
-sysnet_read_config(glusterd_t)
+miscfiles_read_public_files(glusterd_t)
 
 userdom_manage_user_home_dirs(glusterd_t)
 
-optional_policy(`
-	unconfined_domain(glusterd_t)
-')
-
+mount_domtrans(glusterd_t)
 tunable_policy(`gluster_anon_write',`
-        miscfiles_manage_public_files(glusterd_t)
+	miscfiles_manage_public_files(glusterd_t)
 ') 
 
 tunable_policy(`gluster_export_all_ro',`
-        fs_read_noxattr_fs_files(glusterd_t) 
-        files_read_non_security_files(glusterd_t) 
+	fs_read_noxattr_fs_files(glusterd_t) 
+	files_read_non_security_files(glusterd_t) 
 ')
 
 tunable_policy(`gluster_export_all_rw',`
-        fs_manage_noxattr_fs_files(glusterd_t) 
-        files_manage_non_security_files(glusterd_t)
+	fs_manage_noxattr_fs_files(glusterd_t) 
+	files_manage_non_security_dirs(glusterd_t)
+	files_manage_non_security_files(glusterd_t)
+')
+
+optional_policy(`
+    rpc_domtrans_rpcd(glusterd_t)
+    rpc_kill_rpcd(glusterd_t)
+')
+
+optional_policy(`
+	rsync_exec(glusterd_t)
+')
+
+optional_policy(`
+	ssh_exec(glusterd_t)
 ')
diff --git a/policy/modules/services/hal.te b/policy/modules/services/hal.te
index 344ef32..3ca9978 100644
--- a/policy/modules/services/hal.te
+++ b/policy/modules/services/hal.te
@@ -53,7 +53,7 @@ type hald_var_run_t;
 files_pid_file(hald_var_run_t)
 
 type hald_var_lib_t;
-files_type(hald_var_lib_t)
+files_var_lib_file(hald_var_lib_t)
 
 typealias hald_log_t alias pmtools_log_t;
 typealias hald_var_run_t alias pmtools_var_run_t;
@@ -332,6 +332,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	rpm_script_dbus_chat(hald_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(hald_t)
 ')
 
diff --git a/policy/modules/services/hypervkvp.fc b/policy/modules/services/hypervkvp.fc
new file mode 100644
index 0000000..e5bc3e1
--- /dev/null
+++ b/policy/modules/services/hypervkvp.fc
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/hypervkvpd	--	gen_context(system_u:object_r:hypervkvp_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/hypervvssd	--	gen_context(system_u:object_r:hypervvssd_initrc_exec_t,s0)
+
+/usr/sbin/hv_kvp_daemon              --      gen_context(system_u:object_r:hypervkvp_exec_t,s0)
+/usr/sbin/hv_vss_daemon             --       gen_context(system_u:object_r:hypervvssd_exec_t,s0)
+
+/var/lib/hyperv(/.*)?		gen_context(system_u:object_r:hypervkvp_var_lib_t,s0)
diff --git a/policy/modules/services/hypervkvp.if b/policy/modules/services/hypervkvp.if
new file mode 100644
index 0000000..b872398
--- /dev/null
+++ b/policy/modules/services/hypervkvp.if
@@ -0,0 +1,80 @@
+## <summary>policy for hypervkvp</summary>
+
+########################################
+## <summary>
+##	Execute hypervkvpd in the hypervkvp domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`hypervkvp_domtrans',`
+	gen_require(`
+		type hypervkvp_t, hypervkvp_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, hypervkvp_exec_t, hypervkvp_t)
+')
+
+########################################
+## <summary>
+##	Search hypervkvp lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`hypervkvp_search_lib',`
+	gen_require(`
+		type hypervkvp_var_lib_t;
+	')
+
+	allow $1 hypervkvp_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read hypervkvp lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`hypervkvp_read_lib_files',`
+	gen_require(`
+		type hypervkvp_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	allow $1 hypervkvp_var_lib_t:dir list_dir_perms;
+	read_files_pattern($1, hypervkvp_var_lib_t, hypervkvp_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	hypervkvp lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`hypervkvp_manage_lib_files',`
+	gen_require(`
+		type hypervkvp_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, hypervkvp_var_lib_t, hypervkvp_var_lib_t)
+')
+
diff --git a/policy/modules/services/hypervkvp.te b/policy/modules/services/hypervkvp.te
new file mode 100644
index 0000000..cc20fb3
--- /dev/null
+++ b/policy/modules/services/hypervkvp.te
@@ -0,0 +1,81 @@
+policy_module(hypervkvp, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute hyperv_domain;
+
+type hypervkvp_t, hyperv_domain;
+type hypervkvp_exec_t;
+init_daemon_domain(hypervkvp_t, hypervkvp_exec_t)
+
+type hypervkvp_initrc_exec_t;
+init_script_file(hypervkvp_initrc_exec_t)
+
+type hypervkvp_var_lib_t;
+files_var_lib_file(hypervkvp_var_lib_t)
+
+type hypervvssd_t, hyperv_domain;
+type hypervvssd_exec_t;
+init_daemon_domain(hypervvssd_t, hypervvssd_exec_t)
+
+type hypervvssd_initrc_exec_t;
+init_script_file(hypervvssd_initrc_exec_t)
+
+########################################
+#
+# hyperv domain local policy
+#
+
+allow hyperv_domain self:capability net_admin;
+allow hyperv_domain self:netlink_socket create_socket_perms;
+
+allow hyperv_domain self:fifo_file rw_fifo_file_perms;
+allow hyperv_domain self:unix_stream_socket create_stream_socket_perms;
+
+corecmd_exec_shell(hyperv_domain)
+corecmd_exec_bin(hyperv_domain)
+
+dev_read_sysfs(hyperv_domain)
+
+########################################
+#
+# hypervkvp local policy
+#
+
+manage_dirs_pattern(hypervkvp_t, hypervkvp_var_lib_t, hypervkvp_var_lib_t)
+manage_files_pattern(hypervkvp_t, hypervkvp_var_lib_t, hypervkvp_var_lib_t)
+files_var_lib_filetrans(hypervkvp_t, hypervkvp_var_lib_t, dir)
+
+kernel_read_system_state(hypervkvp_t)
+kernel_read_network_state(hypervkvp_t)
+
+files_dontaudit_search_home(hypervkvp_t)
+files_read_etc_files(hypervkvp_t)
+
+logging_send_syslog_msg(hypervkvp_t)
+
+miscfiles_read_localization(hypervkvp_t)
+
+sysnet_dns_name_resolve(hypervkvp_t)
+
+userdom_dontaudit_search_admin_dir(hypervkvp_t)
+
+optional_policy(`
+    sysnet_exec_ifconfig(hypervkvp_t)
+')
+
+########################################
+#
+# hypervvssd local policy
+#
+
+allow hypervvssd_t self:capability sys_admin;
+
+files_list_boot(hypervvssd_t)
+
+logging_send_syslog_msg(hypervvssd_t)
+
+miscfiles_read_localization(hypervvssd_t)
diff --git a/policy/modules/services/icecast.te b/policy/modules/services/icecast.te
index 01649f5..3fe0e55 100644
--- a/policy/modules/services/icecast.te
+++ b/policy/modules/services/icecast.te
@@ -7,10 +7,10 @@ policy_module(icecast, 1.0.0)
 #
 
 ## <desc>
-## <p>
-## Allow icecast to connect to all ports, not just
-## sound ports.
-## </p>
+##      <p>
+##      Determine whether icecast can listen
+##      on and connect to any TCP port.
+##      </p>
 ## </desc>
 gen_tunable(icecast_connect_any, false)
 
@@ -52,9 +52,11 @@ corenet_tcp_bind_soundd_port(icecast_t)
 corenet_tcp_connect_soundd_port(icecast_t)
 
 tunable_policy(`icecast_connect_any',`
-        corenet_tcp_connect_all_ports(icecast_t)
-        corenet_tcp_bind_all_ports(icecast_t)
-        corenet_sendrecv_all_packets(icecast_t)
+	 corenet_tcp_connect_all_ports(icecast_t)
+	 corenet_sendrecv_all_client_packets(icecast_t)
+	 corenet_tcp_bind_all_ports(icecast_t)
+	 corenet_sendrecv_all_server_packets(icecast_t)
+	 corenet_tcp_sendrecv_all_ports(icecast_t)
 ')
 
 # Init script handling
@@ -62,6 +64,8 @@ domain_use_interactive_fds(icecast_t)
 
 files_read_etc_files(icecast_t)
 
+files_dontaudit_list_tmp(icecast_t)
+
 auth_use_nsswitch(icecast_t)
 
 miscfiles_read_localization(icecast_t)
diff --git a/policy/modules/services/inn.te b/policy/modules/services/inn.te
index aa250dc..8f48b0b 100644
--- a/policy/modules/services/inn.te
+++ b/policy/modules/services/inn.te
@@ -19,7 +19,7 @@ type innd_log_t;
 logging_log_file(innd_log_t)
 
 type innd_var_lib_t;
-files_type(innd_var_lib_t)
+files_var_lib_file(innd_var_lib_t)
 
 type innd_var_run_t;
 files_pid_file(innd_var_run_t)
diff --git a/policy/modules/services/ircd.te b/policy/modules/services/ircd.te
index 9395637..ec793ca 100644
--- a/policy/modules/services/ircd.te
+++ b/policy/modules/services/ircd.te
@@ -17,7 +17,7 @@ type ircd_log_t;
 logging_log_file(ircd_log_t)
 
 type ircd_var_lib_t;
-files_type(ircd_var_lib_t)
+files_var_lib_file(ircd_var_lib_t)
 
 type ircd_var_run_t;
 files_pid_file(ircd_var_run_t)
diff --git a/policy/modules/services/isns.fc b/policy/modules/services/isns.fc
new file mode 100644
index 0000000..a0852ec
--- /dev/null
+++ b/policy/modules/services/isns.fc
@@ -0,0 +1,8 @@
+/etc/rc\.d/init\.d/isnsd	--	gen_context(system_u:object_r:isnsd_initrc_exec_t,s0)
+
+/usr/sbin/isnsd	--	gen_context(system_u:object_r:isnsd_exec_t,s0)
+
+/var/lib/isns(/.*)?	gen_context(system_u:object_r:isnsd_var_lib_t,s0)
+
+/var/run/isnsd\.pid	--	gen_context(system_u:object_r:isnsd_var_run_t,s0)
+/var/run/isnsctl	-s	gen_context(system_u:object_r:isnsd_var_run_t,s0)
diff --git a/policy/modules/services/isns.if b/policy/modules/services/isns.if
new file mode 100644
index 0000000..da7e970
--- /dev/null
+++ b/policy/modules/services/isns.if
@@ -0,0 +1,39 @@
+## <summary>Internet Storage Name Service.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an isnsd environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`isnsd_admin',`
+	gen_require(`
+		type isnsd_t, isnsd_initrc_exec_t, isnsd_var_lib_t;
+		type isnsd_var_run_t;
+	')
+
+	allow $1 isnsd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, isnsd_t)
+
+	init_labeled_script_domtrans($1, isnsd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 isnsd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, isnsd_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, isnsd_var_run_t)
+')
diff --git a/policy/modules/services/isns.te b/policy/modules/services/isns.te
new file mode 100644
index 0000000..939cad1
--- /dev/null
+++ b/policy/modules/services/isns.te
@@ -0,0 +1,54 @@
+policy_module(isns, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type isnsd_t;
+type isnsd_exec_t;
+init_daemon_domain(isnsd_t, isnsd_exec_t)
+
+type isnsd_initrc_exec_t;
+init_script_file(isnsd_initrc_exec_t)
+
+type isnsd_var_lib_t;
+files_var_lib_file(isnsd_var_lib_t)
+
+type isnsd_var_run_t;
+files_pid_file(isnsd_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow isnsd_t self:capability kill;
+allow isnsd_t self:process signal;
+allow isnsd_t self:fifo_file rw_fifo_file_perms;
+allow isnsd_t self:tcp_socket { listen };
+allow isnsd_t self:udp_socket { accept listen };
+allow isnsd_t self:unix_stream_socket { accept listen };
+
+manage_dirs_pattern(isnsd_t, isnsd_var_lib_t, isnsd_var_lib_t)
+manage_files_pattern(isnsd_t, isnsd_var_lib_t, isnsd_var_lib_t)
+files_var_lib_filetrans(isnsd_t, isnsd_var_lib_t, dir)
+
+manage_sock_files_pattern(isnsd_t, isnsd_var_run_t, isnsd_var_run_t)
+manage_files_pattern(isnsd_t, isnsd_var_run_t, isnsd_var_run_t)
+files_pid_filetrans(isnsd_t, isnsd_var_run_t, { file sock_file })
+
+corenet_all_recvfrom_unlabeled(isnsd_t)
+corenet_all_recvfrom_netlabel(isnsd_t)
+corenet_tcp_sendrecv_generic_if(isnsd_t)
+corenet_tcp_sendrecv_generic_node(isnsd_t)
+corenet_tcp_sendrecv_isns_port(isnsd_t)
+corenet_tcp_bind_generic_node(isnsd_t)
+corenet_sendrecv_isns_server_packets(isnsd_t)
+corenet_tcp_bind_isns_port(isnsd_t)
+
+logging_send_syslog_msg(isnsd_t)
+
+miscfiles_read_localization(isnsd_t)
+
+sysnet_dns_name_resolve(isnsd_t)
diff --git a/policy/modules/services/jabber.te b/policy/modules/services/jabber.te
index 8b75395..944e494 100644
--- a/policy/modules/services/jabber.te
+++ b/policy/modules/services/jabber.te
@@ -23,7 +23,7 @@ type jabberd_log_t;
 logging_log_file(jabberd_log_t)
 
 type jabberd_var_lib_t;
-files_type(jabberd_var_lib_t)
+files_var_lib_file(jabberd_var_lib_t)
 
 type jabberd_var_run_t;
 files_pid_file(jabberd_var_run_t)
diff --git a/policy/modules/services/keepalived.fc b/policy/modules/services/keepalived.fc
new file mode 100644
index 0000000..5a58b1e
--- /dev/null
+++ b/policy/modules/services/keepalived.fc
@@ -0,0 +1,5 @@
+/etc/rc\.d/init\.d/keepalived	--	gen_context(system_u:object_r:keepalived_initrc_exec_t,s0)
+
+/usr/sbin/keepalived		--	gen_context(system_u:object_r:keepalived_exec_t,s0)
+
+/var/run/keepalived.*		--	gen_context(system_u:object_r:keepalived_var_run_t,s0)
diff --git a/policy/modules/services/keepalived.if b/policy/modules/services/keepalived.if
new file mode 100644
index 0000000..dd76ed7
--- /dev/null
+++ b/policy/modules/services/keepalived.if
@@ -0,0 +1,23 @@
+
+## <summary> keepalived - load-balancing and high-availability service</summary>
+
+########################################
+## <summary>
+##	Execute keepalived in the keepalived domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`keepalived_domtrans',`
+	gen_require(`
+		type keepalived_t, keepalived_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, keepalived_exec_t, keepalived_t)
+')
+
+
diff --git a/policy/modules/services/keepalived.te b/policy/modules/services/keepalived.te
new file mode 100644
index 0000000..31775ab
--- /dev/null
+++ b/policy/modules/services/keepalived.te
@@ -0,0 +1,61 @@
+policy_module(keepalived, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type keepalived_t;
+type keepalived_exec_t;
+init_daemon_domain(keepalived_t, keepalived_exec_t)
+
+type keepalived_initrc_exec_t;
+init_script_file(keepalived_initrc_exec_t)
+
+type keepalived_var_run_t;
+files_pid_file(keepalived_var_run_t)
+
+########################################
+#
+# keepalived local policy
+#
+allow keepalived_t self:capability { net_admin net_raw };
+allow keepalived_t self:process { signal_perms };
+allow keepalived_t self:netlink_socket create_socket_perms;
+allow keepalived_t self:netlink_route_socket nlmsg_write;
+allow keepalived_t self:packet_socket create_socket_perms;
+allow keepalived_t self:rawip_socket create_socket_perms;
+
+
+manage_files_pattern(keepalived_t, keepalived_var_run_t, keepalived_var_run_t)
+files_pid_filetrans(keepalived_t, keepalived_var_run_t, { file })
+
+kernel_read_system_state(keepalived_t)
+kernel_read_network_state(keepalived_t)
+
+auth_use_nsswitch(keepalived_t)
+
+corecmd_exec_bin(keepalived_t)
+corecmd_exec_shell(keepalived_t)
+
+corenet_tcp_connect_connlcli_port(keepalived_t)
+corenet_tcp_connect_http_port(keepalived_t)
+corenet_tcp_connect_smtp_port(keepalived_t)
+corenet_tcp_connect_agentx_port(keepalived_t)
+corenet_tcp_connect_snmp_port(keepalived_t)
+
+dev_read_urand(keepalived_t)
+
+files_dontaudit_list_tmp(keepalived_t)
+
+miscfiles_read_localization(keepalived_t)
+
+modutils_domtrans_insmod(keepalived_t)
+
+logging_send_syslog_msg(keepalived_t)
+
+optional_policy(`
+    snmp_stream_connect(keepalived_t)
+    snmp_manage_var_lib_dirs(keepalived_t)
+    snmp_manage_var_lib_files(keepalived_t)
+')
diff --git a/policy/modules/services/keystone.te b/policy/modules/services/keystone.te
index 6384501..b9ccbaf 100644
--- a/policy/modules/services/keystone.te
+++ b/policy/modules/services/keystone.te
@@ -16,7 +16,7 @@ type keystone_log_t;
 logging_log_file(keystone_log_t)
 
 type keystone_var_lib_t;
-files_type(keystone_var_lib_t)
+files_var_lib_file(keystone_var_lib_t)
 
 type keystone_var_run_t;
 files_pid_file(keystone_var_run_t)
diff --git a/policy/modules/services/l2tpd.if b/policy/modules/services/l2tpd.if
index 562d25b..5ceee5b 100644
--- a/policy/modules/services/l2tpd.if
+++ b/policy/modules/services/l2tpd.if
@@ -158,10 +158,6 @@ interface(`l2tpd_admin',`
 	allow $1 l2tpd_t:process signal_perms;
 	ps_process_pattern($1, l2tpd_t)
 
-	tunable_policy(`deny_ptrace',`',`
-		allow $1 l2tpd_t:process ptrace;
-	')
-
 	l2tpd_initrc_domtrans($1)
 	domain_system_change_exemption($1)
 	role_transition $2 l2tpd_initrc_exec_t system_r;
diff --git a/policy/modules/services/likewise.te b/policy/modules/services/likewise.te
index f3cb65d..90319ae 100644
--- a/policy/modules/services/likewise.te
+++ b/policy/modules/services/likewise.te
@@ -15,7 +15,7 @@ type likewise_initrc_exec_t;
 init_script_file(likewise_initrc_exec_t)
 
 type likewise_var_lib_t;
-files_type(likewise_var_lib_t)
+files_var_lib_file(likewise_var_lib_t)
 
 type likewise_pstore_lock_t;
 files_type(likewise_pstore_lock_t)
diff --git a/policy/modules/services/lldpad.if b/policy/modules/services/lldpad.if
index fb5b674..0809fe7 100644
--- a/policy/modules/services/lldpad.if
+++ b/policy/modules/services/lldpad.if
@@ -38,6 +38,25 @@ interface(`lldpad_dgram_send',`
 	dgram_send_pattern($1, lldpad_var_run_t, lldpad_var_run_t, lldpad_t)
 ')
 
+#######################################
+## <summary>
+##	Recv to lldpad with a unix dgram socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lldpad_dgram_recv',`
+	gen_require(`
+		type lldpad_t, lldpad_var_run_t;
+	')
+
+	files_search_pids($1)
+	dgram_send_pattern(lldpad_t, lldpad_var_run_t, lldpad_var_run_t, $1)
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to
@@ -64,10 +83,6 @@ interface(`lldpad_admin',`
 	allow $1 lldpad_t:process { signal_perms };
 	ps_process_pattern($1, lldpad_t)
 
-	tunable_policy(`deny_ptrace',`',`
-		allow $1 lldpad_t:process ptrace;
-	')
-
 	init_labeled_script_domtrans($1, lldpad_initrc_exec_t)
 	domain_system_change_exemption($1)
 	role_transition $2 lldpad_initrc_exec_t system_r;
diff --git a/policy/modules/services/lldpad.te b/policy/modules/services/lldpad.te
index 364235b..043c28d 100644
--- a/policy/modules/services/lldpad.te
+++ b/policy/modules/services/lldpad.te
@@ -16,7 +16,7 @@ type lldpad_tmpfs_t;
 files_tmpfs_file(lldpad_tmpfs_t)
 
 type lldpad_var_lib_t;
-files_type(lldpad_var_lib_t)
+files_var_lib_file(lldpad_var_lib_t)
 
 type lldpad_var_run_t;
 files_pid_file(lldpad_var_run_t)
@@ -26,7 +26,7 @@ files_pid_file(lldpad_var_run_t)
 # Local policy
 #
 
-allow lldpad_t self:capability { net_admin net_raw };
+allow lldpad_t self:capability { net_admin net_raw sys_resource };
 allow lldpad_t self:shm create_shm_perms;
 allow lldpad_t self:fifo_file rw_fifo_file_perms;
 allow lldpad_t self:unix_stream_socket { accept listen };
@@ -53,6 +53,8 @@ dev_read_sysfs(lldpad_t)
 
 logging_send_syslog_msg(lldpad_t)
 
+miscfiles_read_localization(lldpad_t)
+
 userdom_dgram_send(lldpad_t)
 
 optional_policy(`
diff --git a/policy/modules/services/lsm.fc b/policy/modules/services/lsm.fc
new file mode 100644
index 0000000..bd33a9f
--- /dev/null
+++ b/policy/modules/services/lsm.fc
@@ -0,0 +1,7 @@
+/usr/bin/lsmd		--	gen_context(system_u:object_r:lsmd_exec_t,s0)
+
+/usr/bin/.*_lsmplugin    --  gen_context(system_u:object_r:lsmd_plugin_exec_t,s0)
+
+/etc/rc\.d/init\.d/libstoragemgmtd		--	gen_context(system_u:object_r:lsmd_initrc_exec_t,s0)
+
+/var/run/lsm(/.*)?	    gen_context(system_u:object_r:lsmd_var_run_t,s0)
diff --git a/policy/modules/services/lsm.if b/policy/modules/services/lsm.if
new file mode 100644
index 0000000..aaa4d13
--- /dev/null
+++ b/policy/modules/services/lsm.if
@@ -0,0 +1,40 @@
+
+## <summary>libStorageMgmt  plug-in  daemon </summary>
+
+########################################
+## <summary>
+##	Execute TEMPLATE in the lsmd domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`lsmd_domtrans',`
+	gen_require(`
+		type lsmd_t, lsmd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, lsmd_exec_t, lsmd_t)
+')
+########################################
+## <summary>
+##	Read lsmd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lsmd_read_pid_files',`
+	gen_require(`
+		type lsmd_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, lsmd_var_run_t, lsmd_var_run_t)
+')
+
diff --git a/policy/modules/services/lsm.te b/policy/modules/services/lsm.te
new file mode 100644
index 0000000..682039c
--- /dev/null
+++ b/policy/modules/services/lsm.te
@@ -0,0 +1,93 @@
+policy_module(lsm, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+##	<p>
+##	Determine whether lsmd_plugin can
+##	connect to all TCP ports.
+##	</p>
+## </desc>
+gen_tunable(lsmd_plugin_connect_any, false)
+
+type lsmd_t;
+type lsmd_exec_t;
+init_daemon_domain(lsmd_t, lsmd_exec_t)
+
+type lsmd_var_run_t;
+files_pid_file(lsmd_var_run_t)
+
+type lsmd_initrc_exec_t;
+init_script_file(lsmd_initrc_exec_t)
+
+type lsmd_plugin_t;
+type lsmd_plugin_exec_t;
+application_domain(lsmd_plugin_t, lsmd_plugin_exec_t)
+role system_r types lsmd_plugin_t;
+
+type lsmd_plugin_tmp_t;
+files_tmp_file(lsmd_plugin_tmp_t)
+
+########################################
+#
+# lsmd local policy
+#
+allow lsmd_t self:capability { setuid setgid  };
+allow lsmd_t self:process { fork };
+allow lsmd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(lsmd_t, lsmd_var_run_t, lsmd_var_run_t)
+manage_files_pattern(lsmd_t, lsmd_var_run_t, lsmd_var_run_t)
+manage_lnk_files_pattern(lsmd_t, lsmd_var_run_t, lsmd_var_run_t)
+manage_sock_files_pattern(lsmd_t, lsmd_var_run_t, lsmd_var_run_t)
+files_pid_filetrans(lsmd_t, lsmd_var_run_t, { dir file sock_file })
+
+corecmd_exec_bin(lsmd_t)
+
+logging_send_syslog_msg(lsmd_t)
+
+########################################
+#
+# Local lsmd plugin policy
+#
+
+allow lsmd_plugin_t self:udp_socket create_socket_perms;
+allow lsmd_plugin_t self:tcp_socket create_stream_socket_perms;
+allow lsmd_plugin_t self:netlink_route_socket create_netlink_socket_perms;
+
+domtrans_pattern(lsmd_t, lsmd_plugin_exec_t, lsmd_plugin_t)
+allow lsmd_plugin_t lsmd_t:unix_stream_socket { read write };
+
+allow lsmd_t lsmd_plugin_exec_t:file read_file_perms;
+stream_connect_pattern(lsmd_plugin_t, lsmd_var_run_t, lsmd_var_run_t, lsmd_t)
+
+manage_files_pattern(lsmd_plugin_t, lsmd_plugin_tmp_t, lsmd_plugin_tmp_t)
+manage_dirs_pattern(lsmd_plugin_t, lsmd_plugin_tmp_t, lsmd_plugin_tmp_t)
+files_tmp_filetrans(lsmd_plugin_t, lsmd_plugin_tmp_t, { file dir })
+
+tunable_policy(`lsmd_plugin_connect_any',`
+	corenet_tcp_connect_all_ports(lsmd_plugin_t)
+	corenet_sendrecv_all_packets(lsmd_plugin_t)
+	corenet_tcp_sendrecv_all_ports(lsmd_plugin_t)
+')
+
+kernel_read_system_state(lsmd_plugin_t)
+
+dev_read_urand(lsmd_plugin_t)
+
+corecmd_exec_bin(lsmd_plugin_t)
+
+corenet_tcp_connect_http_port(lsmd_plugin_t)
+corenet_tcp_connect_http_cache_port(lsmd_plugin_t)
+corenet_tcp_connect_ssh_port(lsmd_plugin_t)
+
+init_stream_connect(lsmd_plugin_t)
+
+logging_send_syslog_msg(lsmd_plugin_t)
+
+miscfiles_read_localization(lsmd_plugin_t)
+
+sysnet_read_config(lsmd_plugin_t)
diff --git a/policy/modules/services/matahari.te b/policy/modules/services/matahari.te
index 66ab99a..de53845 100644
--- a/policy/modules/services/matahari.te
+++ b/policy/modules/services/matahari.te
@@ -17,7 +17,7 @@ type matahari_initrc_exec_t;
 init_script_file(matahari_initrc_exec_t)
 
 type matahari_var_lib_t;
-files_type(matahari_var_lib_t)
+files_var_lib_file(matahari_var_lib_t)
 
 type matahari_var_run_t;
 files_pid_file(matahari_var_run_t)
diff --git a/policy/modules/services/mip6d.fc b/policy/modules/services/mip6d.fc
new file mode 100644
index 0000000..c72d590
--- /dev/null
+++ b/policy/modules/services/mip6d.fc
@@ -0,0 +1,3 @@
+/etc/rc\.d/init\.d/mip6d     --  gen_context(system_u:object_r:mip6d_initrc_exec_t,s0)
+
+/usr/sbin/mip6d		--	gen_context(system_u:object_r:mip6d_exec_t,s0)
diff --git a/policy/modules/services/mip6d.if b/policy/modules/services/mip6d.if
new file mode 100644
index 0000000..a075cd7
--- /dev/null
+++ b/policy/modules/services/mip6d.if
@@ -0,0 +1,21 @@
+
+## <summary>Mobile IPv6 and NEMO Basic Support implementation</summary>
+
+########################################
+## <summary>
+##	Execute TEMPLATE in the mip6d domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`mip6d_domtrans',`
+	gen_require(`
+		type mip6d_t, mip6d_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, mip6d_exec_t, mip6d_t)
+')
diff --git a/policy/modules/services/mip6d.te b/policy/modules/services/mip6d.te
new file mode 100644
index 0000000..a4f16ca
--- /dev/null
+++ b/policy/modules/services/mip6d.te
@@ -0,0 +1,34 @@
+policy_module(mip6d, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type mip6d_t;
+type mip6d_exec_t;
+init_daemon_domain(mip6d_t, mip6d_exec_t)
+
+type mip6d_initrc_exec_t;
+init_script_file(mip6d_initrc_exec_t)
+
+########################################
+#
+# mip6d local policy
+#
+allow mip6d_t self:capability { net_admin net_raw };
+allow mip6d_t self:process { setpgid fork signal };
+allow mip6d_t self:netlink_route_socket create_netlink_socket_perms;
+allow mip6d_t self:netlink_xfrm_socket create_netlink_socket_perms;
+allow mip6d_t self:rawip_socket create_socket_perms;
+allow mip6d_t self:udp_socket create_socket_perms;
+allow mip6d_t self:fifo_file rw_fifo_file_perms;
+allow mip6d_t self:unix_stream_socket create_stream_socket_perms;
+
+kernel_rw_net_sysctls(mip6d_t)
+kernel_read_network_state(mip6d_t)
+kernel_request_load_module(mip6d_t)
+
+logging_send_syslog_msg(mip6d_t)
+
+miscfiles_read_localization(mip6d_t)
diff --git a/policy/modules/services/mirrormanager.fc b/policy/modules/services/mirrormanager.fc
new file mode 100644
index 0000000..c713b27
--- /dev/null
+++ b/policy/modules/services/mirrormanager.fc
@@ -0,0 +1,7 @@
+/usr/share/mirrormanager/server/mirrormanager		--	gen_context(system_u:object_r:mirrormanager_exec_t,s0)
+
+/var/lib/mirrormanager(/.*)?		gen_context(system_u:object_r:mirrormanager_var_lib_t,s0)
+
+/var/log/mirrormanager(/.*)?		gen_context(system_u:object_r:mirrormanager_log_t,s0)
+
+/var/run/mirrormanager(/.*)?		gen_context(system_u:object_r:mirrormanager_var_run_t,s0)
diff --git a/policy/modules/services/mirrormanager.if b/policy/modules/services/mirrormanager.if
new file mode 100644
index 0000000..982fb8d
--- /dev/null
+++ b/policy/modules/services/mirrormanager.if
@@ -0,0 +1,252 @@
+
+## <summary>policy for mirrormanager</summary>
+
+########################################
+## <summary>
+##	Execute mirrormanager in the mirrormanager domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`mirrormanager_domtrans',`
+	gen_require(`
+		type mirrormanager_t, mirrormanager_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, mirrormanager_exec_t, mirrormanager_t)
+')
+
+########################################
+## <summary>
+##	Read mirrormanager's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`mirrormanager_read_log',`
+	gen_require(`
+		type mirrormanager_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, mirrormanager_log_t, mirrormanager_log_t)
+')
+
+########################################
+## <summary>
+##	Append to mirrormanager log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_append_log',`
+	gen_require(`
+		type mirrormanager_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, mirrormanager_log_t, mirrormanager_log_t)
+')
+
+########################################
+## <summary>
+##	Manage mirrormanager log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_manage_log',`
+	gen_require(`
+		type mirrormanager_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, mirrormanager_log_t, mirrormanager_log_t)
+	manage_files_pattern($1, mirrormanager_log_t, mirrormanager_log_t)
+	manage_lnk_files_pattern($1, mirrormanager_log_t, mirrormanager_log_t)
+')
+
+########################################
+## <summary>
+##	Search mirrormanager lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_search_lib',`
+	gen_require(`
+		type mirrormanager_var_lib_t;
+	')
+
+	allow $1 mirrormanager_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read mirrormanager lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_read_lib_files',`
+	gen_require(`
+		type mirrormanager_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+    list_dirs_pattern($1, mirrormanager_var_lib_t, mirrormanager_var_lib_t)
+	read_files_pattern($1, mirrormanager_var_lib_t, mirrormanager_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage mirrormanager lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_manage_lib_files',`
+	gen_require(`
+		type mirrormanager_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, mirrormanager_var_lib_t, mirrormanager_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage mirrormanager lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_manage_lib_dirs',`
+	gen_require(`
+		type mirrormanager_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, mirrormanager_var_lib_t, mirrormanager_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Read mirrormanager PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_read_pid_files',`
+	gen_require(`
+		type mirrormanager_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, mirrormanager_var_run_t, mirrormanager_var_run_t)
+')
+
+########################################
+## <summary>
+##	Manage mirrormanager PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_manage_pid_files',`
+	gen_require(`
+		type mirrormanager_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_files_pattern($1, mirrormanager_var_run_t, mirrormanager_var_run_t)
+')
+
+########################################
+## <summary>
+##	Manage mirrormanager PID sock files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_manage_pid_sock_files',`
+	gen_require(`
+		type mirrormanager_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_sock_files_pattern($1, mirrormanager_var_run_t, mirrormanager_var_run_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an mirrormanager environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mirrormanager_admin',`
+	gen_require(`
+		type mirrormanager_t;
+		type mirrormanager_log_t;
+		type mirrormanager_var_lib_t;
+		type mirrormanager_var_run_t;
+	')
+
+	allow $1 mirrormanager_t:process { signal_perms };
+	ps_process_pattern($1, mirrormanager_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, mirrormanager_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, mirrormanager_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, mirrormanager_var_run_t)
+
+	optional_policy(`
+		systemd_passwd_agent_exec($1)
+		systemd_read_fifo_file_passwd_run($1)
+	')
+')
diff --git a/policy/modules/services/mirrormanager.te b/policy/modules/services/mirrormanager.te
new file mode 100644
index 0000000..81991fc
--- /dev/null
+++ b/policy/modules/services/mirrormanager.te
@@ -0,0 +1,47 @@
+policy_module(mirrormanager, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type mirrormanager_t;
+type mirrormanager_exec_t;
+application_domain(mirrormanager_t, mirrormanager_exec_t)
+role system_r types mirrormanager_t;
+
+type mirrormanager_log_t;
+logging_log_file(mirrormanager_log_t)
+
+type mirrormanager_var_lib_t;
+files_var_lib_file(mirrormanager_var_lib_t)
+
+type mirrormanager_var_run_t;
+files_pid_file(mirrormanager_var_run_t)
+
+########################################
+#
+# mirrormanager local policy
+#
+
+allow mirrormanager_t self:fifo_file rw_fifo_file_perms;
+allow mirrormanager_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(mirrormanager_t, mirrormanager_log_t, mirrormanager_log_t)
+manage_files_pattern(mirrormanager_t, mirrormanager_log_t, mirrormanager_log_t)
+manage_lnk_files_pattern(mirrormanager_t, mirrormanager_log_t, mirrormanager_log_t)
+logging_log_filetrans(mirrormanager_t, mirrormanager_log_t, { dir })
+
+manage_dirs_pattern(mirrormanager_t, mirrormanager_var_lib_t, mirrormanager_var_lib_t)
+manage_files_pattern(mirrormanager_t, mirrormanager_var_lib_t, mirrormanager_var_lib_t)
+manage_lnk_files_pattern(mirrormanager_t, mirrormanager_var_lib_t, mirrormanager_var_lib_t)
+files_var_lib_filetrans(mirrormanager_t, mirrormanager_var_lib_t, { dir })
+
+manage_dirs_pattern(mirrormanager_t, mirrormanager_var_run_t, mirrormanager_var_run_t)
+manage_files_pattern(mirrormanager_t, mirrormanager_var_run_t, mirrormanager_var_run_t)
+manage_lnk_files_pattern(mirrormanager_t, mirrormanager_var_run_t, mirrormanager_var_run_t)
+files_pid_filetrans(mirrormanager_t, mirrormanager_var_run_t, { dir })
+
+optional_policy(`
+    cron_system_entry(mirrormanager_t, mirrormanager_exec_t)
+')
diff --git a/policy/modules/services/mpd.te b/policy/modules/services/mpd.te
index b0e1924..2ded345 100644
--- a/policy/modules/services/mpd.te
+++ b/policy/modules/services/mpd.te
@@ -30,7 +30,7 @@ type mpd_tmpfs_t;
 files_tmpfs_file(mpd_tmpfs_t)
 
 type mpd_var_lib_t;
-files_type(mpd_var_lib_t)
+files_var_lib_file(mpd_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/mta.fc b/policy/modules/services/mta.fc
index cafa755..36be7d2 100644
--- a/policy/modules/services/mta.fc
+++ b/policy/modules/services/mta.fc
@@ -21,7 +21,6 @@ ifdef(`distro_redhat',`
 /root/Maildir(/.*)?            gen_context(system_u:object_r:mail_home_rw_t,s0)
 
 /usr/lib(64)?/sendmail	--	gen_context(system_u:object_r:sendmail_exec_t,s0)
-/usr/lib/courier/bin/sendmail	--	gen_context(system_u:object_r:sendmail_exec_t,s0)
 
 /usr/sbin/rmail		--	gen_context(system_u:object_r:sendmail_exec_t,s0)
 /usr/sbin/sendmail\.postfix --	gen_context(system_u:object_r:sendmail_exec_t,s0)
diff --git a/policy/modules/services/mta.te b/policy/modules/services/mta.te
index d7afa51..e6ace55 100644
--- a/policy/modules/services/mta.te
+++ b/policy/modules/services/mta.te
@@ -294,6 +294,10 @@ optional_policy(`
 	uucp_domtrans_uux(mailserver_delivery)
 ')
 
+optional_policy(`
+    pcp_read_lib_files(mailserver_delivery)
+')
+
 ########################################
 #
 # User send mail local policy
diff --git a/policy/modules/services/munin.te b/policy/modules/services/munin.te
index 794525f..1e44abe 100644
--- a/policy/modules/services/munin.te
+++ b/policy/modules/services/munin.te
@@ -25,7 +25,7 @@ type munin_tmp_t alias lrrd_tmp_t;
 files_tmp_file(munin_tmp_t)
 
 type munin_var_lib_t alias lrrd_var_lib_t;
-files_type(munin_var_lib_t)
+files_var_lib_file(munin_var_lib_t)
 
 type munin_var_run_t alias lrrd_var_run_t;
 files_pid_file(munin_var_run_t)
diff --git a/policy/modules/services/mysql.te b/policy/modules/services/mysql.te
index 76c494f..025b3be 100644
--- a/policy/modules/services/mysql.te
+++ b/policy/modules/services/mysql.te
@@ -114,6 +114,7 @@ fs_search_auto_mountpoints(mysqld_t)
 fs_rw_hugetlbfs_files(mysqld_t)
 
 domain_use_interactive_fds(mysqld_t)
+domain_read_all_domains_state(mysqld_t)
 
 files_getattr_var_lib_dirs(mysqld_t)
 files_read_etc_runtime_files(mysqld_t)
diff --git a/policy/modules/services/nagios.fc b/policy/modules/services/nagios.fc
index d25932f..02c4602 100644
--- a/policy/modules/services/nagios.fc
+++ b/policy/modules/services/nagios.fc
@@ -1,4 +1,5 @@
 /etc/nagios(/.*)?			gen_context(system_u:object_r:nagios_etc_t,s0)
+/etc/pnp4nagios(/.*)?                   gen_context(system_u:object_r:nagios_etc_t,s0)
 /etc/nagios/nrpe\.cfg		--	gen_context(system_u:object_r:nrpe_etc_t,s0)
 /etc/rc\.d/init\.d/nagios	--	gen_context(system_u:object_r:nagios_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/nrpe	--	gen_context(system_u:object_r:nagios_initrc_exec_t,s0)
@@ -12,6 +13,9 @@
 
 /var/log/nagios(/.*)?			gen_context(system_u:object_r:nagios_log_t,s0)
 /var/log/netsaint(/.*)?			gen_context(system_u:object_r:nagios_log_t,s0)
+/var/log/pnp4nagios(/.*)?                   gen_context(system_u:object_r:nagios_log_t,s0)
+
+/var/lib/pnp4nagios(/.*)?               gen_context(system_u:object_r:nagios_var_lib_t,s0)
 
 /var/run/nagios.*			gen_context(system_u:object_r:nagios_var_run_t,s0)
 
diff --git a/policy/modules/services/nagios.te b/policy/modules/services/nagios.te
index 9b4e058..b96ad72 100644
--- a/policy/modules/services/nagios.te
+++ b/policy/modules/services/nagios.te
@@ -30,6 +30,9 @@ files_pid_file(nagios_var_run_t)
 type nagios_spool_t;
 files_type(nagios_spool_t)
 
+type nagios_var_lib_t;
+files_type(nagios_var_lib_t)
+
 type nrpe_t;
 type nrpe_exec_t;
 init_daemon_domain(nrpe_t, nrpe_exec_t)
@@ -101,8 +104,14 @@ files_tmp_filetrans(nagios_t, nagios_tmp_t, { file dir })
 manage_files_pattern(nagios_t, nagios_var_run_t, nagios_var_run_t)
 files_pid_filetrans(nagios_t, nagios_var_run_t, file)
 
+manage_files_pattern(nagios_t, nagios_var_lib_t, nagios_var_lib_t)
+manage_dirs_pattern(nagios_t, nagios_var_lib_t, nagios_var_lib_t)
+manage_fifo_files_pattern(nagios_t, nagios_var_lib_t, nagios_var_lib_t)
+files_var_lib_filetrans(nagios_t, nagios_var_lib_t, { file fifo_file dir })
+
 manage_fifo_files_pattern(nagios_t, nagios_spool_t, nagios_spool_t)
 manage_files_pattern(nagios_t, nagios_spool_t, nagios_spool_t)
+manage_sock_files_pattern(nagios_t, nagios_spool_t, nagios_spool_t)
 files_spool_filetrans(nagios_t, nagios_spool_t, { file fifo_file })
 
 kernel_read_system_state(nagios_t)
@@ -167,6 +176,10 @@ optional_policy(`
 	udev_read_db(nagios_t)
 ')
 
+optional_policy(`
+	postgresql_stream_connect(nagios_t)
+')
+
 ########################################
 #
 # Nagios CGI local policy
@@ -425,6 +438,8 @@ files_read_etc_files(nagios_system_plugin_t)
 
 fs_getattr_all_fs(nagios_system_plugin_t)
 
+logging_search_logs(nagios_system_plugin_t)
+
 # needed by check_users plugin
 optional_policy(`
 	init_read_utmp(nagios_system_plugin_t)
diff --git a/policy/modules/services/networkmanager.fc b/policy/modules/services/networkmanager.fc
index a7b35b4..8fe32be 100644
--- a/policy/modules/services/networkmanager.fc
+++ b/policy/modules/services/networkmanager.fc
@@ -1,5 +1,5 @@
 /etc/rc\.d/init\.d/wicd		--	gen_context(system_u:object_r:NetworkManager_initrc_exec_t, s0)
-/etc/NetworkManager/dispatcher\.d(/.*)	gen_context(system_u:object_r:NetworkManager_initrc_exec_t,s0)
+/etc/NetworkManager/dispatcher\.d(/.*)? gen_context(system_u:object_r:NetworkManager_initrc_exec_t,s0)
 /etc/wicd/manager-settings.conf -- gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
 /etc/wicd/wireless-settings.conf -- gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
 /etc/wicd/wired-settings.conf -- gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
diff --git a/policy/modules/services/networkmanager.te b/policy/modules/services/networkmanager.te
index 29af3a6..2a28311 100644
--- a/policy/modules/services/networkmanager.te
+++ b/policy/modules/services/networkmanager.te
@@ -20,7 +20,7 @@ type NetworkManager_tmp_t;
 files_tmp_file(NetworkManager_tmp_t)
 
 type NetworkManager_var_lib_t;
-files_type(NetworkManager_var_lib_t)
+files_var_lib_file(NetworkManager_var_lib_t)
 
 type NetworkManager_var_run_t;
 files_pid_file(NetworkManager_var_run_t)
diff --git a/policy/modules/services/nova.te b/policy/modules/services/nova.te
index 1b49212..a18b9e8 100644
--- a/policy/modules/services/nova.te
+++ b/policy/modules/services/nova.te
@@ -28,7 +28,7 @@ type nova_log_t;
 logging_log_file(nova_log_t)
 
 type nova_var_lib_t;
-files_type(nova_var_lib_t)
+files_var_lib_file(nova_var_lib_t)
 
 type nova_var_run_t;
 files_pid_file(nova_var_run_t)
@@ -285,6 +285,8 @@ optional_policy(`
 allow nova_scheduler_t self:netlink_route_socket r_netlink_socket_perms;
 allow nova_scheduler_t self:udp_socket create_socket_perms;
 
+init_read_utmp(nova_scheduler_t)
+
 optional_policy(`
 	unconfined_domain(nova_scheduler_t)
 ')
diff --git a/policy/modules/services/ntop.te b/policy/modules/services/ntop.te
index 8a7adb7..cfda269 100644
--- a/policy/modules/services/ntop.te
+++ b/policy/modules/services/ntop.te
@@ -21,7 +21,7 @@ type ntop_tmp_t;
 files_tmp_file(ntop_tmp_t)
 
 type ntop_var_lib_t;
-files_type(ntop_var_lib_t)
+files_var_lib_file(ntop_var_lib_t)
 
 type ntop_var_run_t;
 files_pid_file(ntop_var_run_t)
diff --git a/policy/modules/services/nx.te b/policy/modules/services/nx.te
index ea79bfe..ded05da 100644
--- a/policy/modules/services/nx.te
+++ b/policy/modules/services/nx.te
@@ -26,7 +26,7 @@ type nx_server_var_run_t;
 files_pid_file(nx_server_var_run_t)
 
 type nx_server_var_lib_t;
-files_type(nx_server_var_lib_t)
+files_var_lib_file(nx_server_var_lib_t)
 
 type nx_server_home_ssh_t;
 files_type(nx_server_home_ssh_t)
diff --git a/policy/modules/services/oav.te b/policy/modules/services/oav.te
index f281317..8d78ebc 100644
--- a/policy/modules/services/oav.te
+++ b/policy/modules/services/oav.te
@@ -15,7 +15,7 @@ type oav_update_etc_t;
 files_config_file(oav_update_etc_t)
 
 type oav_update_var_lib_t;
-files_type(oav_update_var_lib_t)
+files_var_lib_file(oav_update_var_lib_t)
 
 type scannerdaemon_t;
 type scannerdaemon_exec_t;
diff --git a/policy/modules/services/openca.te b/policy/modules/services/openca.te
index f5162c8..ee18b0c 100644
--- a/policy/modules/services/openca.te
+++ b/policy/modules/services/openca.te
@@ -34,7 +34,7 @@ files_type(openca_usr_share_t)
 
 # /var/lib/openca
 type openca_var_lib_t;
-files_type(openca_var_lib_t)
+files_var_lib_file(openca_var_lib_t)
 
 # /var/lib/openca/crypto/keys
 type openca_var_lib_keys_t;
diff --git a/policy/modules/services/openhpid.te b/policy/modules/services/openhpid.te
index 2149d2d..af730a5 100644
--- a/policy/modules/services/openhpid.te
+++ b/policy/modules/services/openhpid.te
@@ -13,7 +13,7 @@ type openhpid_initrc_exec_t;
 init_script_file(openhpid_initrc_exec_t)
 
 type openhpid_var_lib_t;
-files_type(openhpid_var_lib_t)
+files_var_lib_file(openhpid_var_lib_t)
 
 type openhpid_var_run_t;
 files_pid_file(openhpid_var_run_t)
@@ -48,6 +48,8 @@ dev_read_urand(openhpid_t)
 
 logging_send_syslog_msg(openhpid_t)
 
+miscfiles_read_localization(openhpid_t)
+
 optional_policy(`
     unconfined_domain(openhpid_t)
 ')
diff --git a/policy/modules/services/openshift.fc b/policy/modules/services/openshift.fc
index 47ed95f..5516bfd 100644
--- a/policy/modules/services/openshift.fc
+++ b/policy/modules/services/openshift.fc
@@ -15,6 +15,7 @@
 /var/lib/openshift/.*/\.sandbox(/.*)?        gen_context(system_u:object_r:openshift_tmp_t,s0)
 
 /var/log/mcollective\.log.*	       --    gen_context(system_u:object_r:openshift_log_t,s0)
+/var/log/openshift(/.*)?        gen_context(system_u:object_r:openshift_log_t,s0)
 
 /usr/s?bin/(oo|rhc)-cgroup-read        --    gen_context(system_u:object_r:openshift_cgroup_read_exec_t,s0)
 
diff --git a/policy/modules/services/openshift.if b/policy/modules/services/openshift.if
index a0b5eee..621aafa 100644
--- a/policy/modules/services/openshift.if
+++ b/policy/modules/services/openshift.if
@@ -29,6 +29,23 @@ interface(`openshift_initrc_domtrans',`
 ##	The type of the process performing this action.
 ##	</summary>
 ## </param>
+#
+interface(`openshift_dontaudit_read_initrc',`
+	gen_require(`
+		type openshift_initrc_exec_t;
+	')
+    dontaudit $1 openshift_initrc_exec_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Execute openshift server in the openshift domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
 ## <param name="role">
 ##  <summary>
 ##  Role access to this domain.
diff --git a/policy/modules/services/openshift.te b/policy/modules/services/openshift.te
index ee05763..f595f2e 100644
--- a/policy/modules/services/openshift.te
+++ b/policy/modules/services/openshift.te
@@ -9,6 +9,13 @@ gen_require(`
 # Declarations
 #
 
+## <desc>
+## <p>
+## Allow openshift to access nfs file systems without labels
+## </p>
+## </desc>
+gen_tunable(openshift_use_nfs, false)
+
 # openshift applications that can use the network.
 attribute openshift_net_domain;
 # Attribute representing all openshift user processes (excludes apache processes)
@@ -121,6 +128,10 @@ dontaudit openshift_domain openshift_initrc_t:socket_class_set { read write };
 init_domtrans_script(openshift_initrc_t)
 init_initrc_domain(openshift_initrc_t)
 
+optional_policy(`
+    prelink_transition_domain_attribute(openshift_initrc_t)
+')
+
 #######################################################
 #
 # Policy for all openshift domains
@@ -172,6 +183,7 @@ manage_fifo_files_pattern(openshift_domain, openshift_tmpfs_t, openshift_tmpfs_t
 fs_tmpfs_filetrans(openshift_domain, openshift_tmpfs_t, { dir file sock_file lnk_file fifo_file })
 can_exec(openshift_domain, openshift_tmpfs_t)
 
+append_files_pattern(openshift_cron_t, openshift_log_t, openshift_log_t)
 manage_dirs_pattern(openshift_domain, openshift_tmp_t, openshift_tmp_t)
 manage_fifo_files_pattern(openshift_domain, openshift_tmp_t, openshift_tmp_t)
 manage_files_pattern(openshift_domain, openshift_tmp_t, openshift_tmp_t)
@@ -481,6 +493,7 @@ allow openshift_cron_t self:udp_socket create_socket_perms;
 allow openshift_cron_t self:unix_dgram_socket create_socket_perms;
 allow openshift_cron_t self:netlink_route_socket rw_netlink_socket_perms;
 
+append_files_pattern(openshift_cron_t, openshift_log_t, openshift_log_t)
 manage_dirs_pattern(openshift_cron_t, openshift_cron_tmp_t, openshift_cron_tmp_t)
 manage_fifo_files_pattern(openshift_cron_t, openshift_cron_tmp_t, openshift_cron_tmp_t)
 manage_files_pattern(openshift_cron_t, openshift_cron_tmp_t, openshift_cron_tmp_t)
@@ -496,6 +509,8 @@ kernel_search_xen_state(openshift_cron_t)
 kernel_read_network_state(openshift_cron_t)
 kernel_read_system_state(openshift_cron_t)
 
+files_dontaudit_search_all_mountpoints(openshift_cron_t)
+
 corecmd_exec_bin(openshift_cron_t)
 corecmd_exec_shell(openshift_cron_t)
 
@@ -547,3 +562,12 @@ optional_policy(`
    ssh_domtrans_keygen(openshift_cron_t)
    ssh_dontaudit_read_server_keys(openshift_cron_t)
 ')
+
+tunable_policy(`openshift_use_nfs',`
+        fs_list_auto_mountpoints(openshift_domain)
+        fs_manage_nfs_dirs(openshift_domain)
+        fs_manage_nfs_files(openshift_domain)
+        fs_manage_nfs_symlinks(openshift_domain)
+        fs_exec_nfs_files(openshift_domain)
+')
+
diff --git a/policy/modules/services/openvpn.te b/policy/modules/services/openvpn.te
index f5f7ab6..f8b7047 100644
--- a/policy/modules/services/openvpn.te
+++ b/policy/modules/services/openvpn.te
@@ -39,7 +39,7 @@ type openvpn_initrc_exec_t;
 init_script_file(openvpn_initrc_exec_t)
 
 type openvpn_var_lib_t;
-files_type(openvpn_var_lib_t)
+files_var_lib_file(openvpn_var_lib_t)
 
 # log files
 type openvpn_var_log_t;
diff --git a/policy/modules/services/openvswitch.te b/policy/modules/services/openvswitch.te
index 19bb208..6a2103e 100644
--- a/policy/modules/services/openvswitch.te
+++ b/policy/modules/services/openvswitch.te
@@ -19,7 +19,7 @@ type openvswitch_log_t;
 logging_log_file(openvswitch_log_t)
 
 type openvswitch_var_lib_t;
-files_type(openvswitch_var_lib_t)
+files_var_lib_file(openvswitch_var_lib_t)
 
 type openvswitch_var_run_t;
 files_pid_file(openvswitch_var_run_t)
diff --git a/policy/modules/services/openwsman.fc b/policy/modules/services/openwsman.fc
new file mode 100644
index 0000000..2d3a3b5
--- /dev/null
+++ b/policy/modules/services/openwsman.fc
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/openwsmand		--	gen_context(system_u:object_r:openwsman_initrc_exec_t,s0)
+
+/usr/sbin/openwsmand		--	gen_context(system_u:object_r:openwsman_exec_t,s0)
+
+/var/log/wsmand.*	--	gen_context(system_u:object_r:openwsman_log_t,s0)
+
+/var/run/wsmand.*	--	gen_context(system_u:object_r:openwsman_run_t,s0)
diff --git a/policy/modules/services/openwsman.if b/policy/modules/services/openwsman.if
new file mode 100644
index 0000000..09f4ceb
--- /dev/null
+++ b/policy/modules/services/openwsman.if
@@ -0,0 +1,21 @@
+## <summary>WS-Management Server</summary>
+
+########################################
+## <summary>
+##	Execute openwsman in the openwsman domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`openwsman_domtrans',`
+	gen_require(`
+		type openwsman_t, openwsman_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, openwsman_exec_t, openwsman_t)
+')
+
diff --git a/policy/modules/services/openwsman.te b/policy/modules/services/openwsman.te
new file mode 100644
index 0000000..35b7e58
--- /dev/null
+++ b/policy/modules/services/openwsman.te
@@ -0,0 +1,68 @@
+policy_module(openwsman, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type openwsman_t;
+type openwsman_exec_t;
+init_daemon_domain(openwsman_t, openwsman_exec_t)
+
+type openwsman_tmp_t;
+files_tmp_file(openwsman_tmp_t)
+
+type openwsman_tmpfs_t;
+files_tmpfs_file(openwsman_tmpfs_t)
+
+type openwsman_log_t;
+logging_log_file(openwsman_log_t)
+
+type openwsman_run_t;
+files_pid_file(openwsman_run_t)
+
+type openwsman_initrc_exec_t;
+init_script_file(openwsman_initrc_exec_t)
+
+########################################
+#
+# openwsman local policy
+#
+
+allow openwsman_t self:capability setuid;
+
+allow openwsman_t self:process { fork };
+allow openwsman_t self:fifo_file rw_fifo_file_perms;
+allow openwsman_t self:unix_stream_socket create_stream_socket_perms;
+allow openwsman_t self:tcp_socket { create_socket_perms accept listen };
+
+manage_files_pattern(openwsman_t, openwsman_tmp_t, openwsman_tmp_t)
+manage_dirs_pattern(openwsman_t, openwsman_tmp_t, openwsman_tmp_t)
+files_tmp_filetrans(openwsman_t, openwsman_tmp_t, { dir file })
+
+manage_files_pattern(openwsman_t, openwsman_tmpfs_t, openwsman_tmpfs_t)
+manage_dirs_pattern(openwsman_t, openwsman_tmpfs_t, openwsman_tmpfs_t)
+fs_tmpfs_filetrans(openwsman_t, openwsman_tmpfs_t, { dir file })
+
+manage_files_pattern(openwsman_t, openwsman_log_t, openwsman_log_t)
+logging_log_filetrans(openwsman_t, openwsman_log_t, { file })
+
+manage_files_pattern(openwsman_t, openwsman_run_t, openwsman_run_t)
+files_pid_filetrans(openwsman_t, openwsman_run_t, { file })
+
+auth_use_nsswitch(openwsman_t)
+auth_domtrans_chkpwd(openwsman_t)
+
+corenet_tcp_connect_pegasus_https_port(openwsman_t)
+corenet_tcp_bind_vnc_port(openwsman_t)
+corenet_tcp_bind_http_port(openwsman_t)
+
+dev_read_urand(openwsman_t)
+
+logging_send_syslog_msg(openwsman_t)
+logging_send_audit_msgs(openwsman_t)
+
+optional_policy(`
+    unconfined_domain(openwsman_t)
+')
+
diff --git a/policy/modules/services/osad.fc b/policy/modules/services/osad.fc
new file mode 100644
index 0000000..cf911d5
--- /dev/null
+++ b/policy/modules/services/osad.fc
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/osad	--	gen_context(system_u:object_r:osad_initrc_exec_t,s0)
+
+/usr/sbin/osad		--	gen_context(system_u:object_r:osad_exec_t,s0)
+
+/var/log/osad.*		--	gen_context(system_u:object_r:osad_log_t,s0)
+
+/var/run/osad.*		--	gen_context(system_u:object_r:osad_var_run_t,s0)
diff --git a/policy/modules/services/osad.if b/policy/modules/services/osad.if
new file mode 100644
index 0000000..8e3484f
--- /dev/null
+++ b/policy/modules/services/osad.if
@@ -0,0 +1,157 @@
+
+## <summary>Client-side service written in Python that responds to pings and runs rhn_check when told to by osa-dispatcher. </summary>
+
+########################################
+## <summary>
+##	Execute osad in the osad domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`osad_domtrans',`
+	gen_require(`
+		type osad_t, osad_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, osad_exec_t, osad_t)
+')
+
+########################################
+## <summary>
+##	Execute osad server in the osad domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`osad_initrc_domtrans',`
+	gen_require(`
+		type osad_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, osad_initrc_exec_t)
+')
+########################################
+## <summary>
+##	Read osad's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`osad_read_log',`
+	gen_require(`
+		type osad_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, osad_log_t, osad_log_t)
+')
+
+########################################
+## <summary>
+##	Append to osad log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`osad_append_log',`
+	gen_require(`
+		type osad_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, osad_log_t, osad_log_t)
+')
+
+########################################
+## <summary>
+##	Manage osad log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`osad_manage_log',`
+	gen_require(`
+		type osad_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, osad_log_t, osad_log_t)
+	manage_files_pattern($1, osad_log_t, osad_log_t)
+	manage_lnk_files_pattern($1, osad_log_t, osad_log_t)
+')
+########################################
+## <summary>
+##	Read osad PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`osad_read_pid_files',`
+	gen_require(`
+		type osad_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, osad_var_run_t, osad_var_run_t)
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an osad environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`osad_admin',`
+	gen_require(`
+		type osad_t;
+		type osad_initrc_exec_t;
+		type osad_log_t;
+		type osad_var_run_t;
+	')
+
+	allow $1 osad_t:process { signal_perms };
+	ps_process_pattern($1, osad_t)
+
+	osad_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 osad_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, osad_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, osad_var_run_t)
+')
diff --git a/policy/modules/services/osad.te b/policy/modules/services/osad.te
new file mode 100644
index 0000000..1fd4f10
--- /dev/null
+++ b/policy/modules/services/osad.te
@@ -0,0 +1,50 @@
+policy_module(osad, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type osad_t;
+type osad_exec_t;
+init_daemon_domain(osad_t, osad_exec_t)
+
+type osad_initrc_exec_t;
+init_script_file(osad_initrc_exec_t)
+
+type osad_log_t;
+logging_log_file(osad_log_t)
+
+type osad_var_run_t;
+files_pid_file(osad_var_run_t)
+
+########################################
+#
+# osad local policy
+#
+
+allow osad_t self:process setpgid;
+
+manage_files_pattern(osad_t, osad_log_t, osad_log_t)
+logging_log_filetrans(osad_t, osad_log_t, file )
+
+manage_files_pattern(osad_t, osad_var_run_t, osad_var_run_t)
+files_pid_filetrans(osad_t, osad_var_run_t, file)
+
+kernel_read_system_state(osad_t)
+
+corenet_tcp_connect_http_port(osad_t)
+
+dev_read_urand(osad_t)
+
+auth_use_nsswitch(osad_t)
+
+miscfiles_read_localization(osad_t)
+
+optional_policy(`
+    gnome_dontaudit_search_config(osad_t)
+')
+
+optional_policy(`
+    rhnsd_manage_config(osad_t)
+')
diff --git a/policy/modules/services/pacemaker.te b/policy/modules/services/pacemaker.te
index 6096083..71c0491 100644
--- a/policy/modules/services/pacemaker.te
+++ b/policy/modules/services/pacemaker.te
@@ -13,7 +13,7 @@ type pacemaker_initrc_exec_t;
 init_script_file(pacemaker_initrc_exec_t)
 
 type pacemaker_var_lib_t;
-files_type(pacemaker_var_lib_t)
+files_var_lib_file(pacemaker_var_lib_t)
 
 type pacemaker_var_run_t;
 files_pid_file(pacemaker_var_run_t)
diff --git a/policy/modules/services/passenger.if b/policy/modules/services/passenger.if
index 8fb9cd3..9561f68 100644
--- a/policy/modules/services/passenger.if
+++ b/policy/modules/services/passenger.if
@@ -136,3 +136,22 @@ interface(`passenger_manage_tmp_files',`
 	manage_files_pattern($1, passenger_tmp_t, passenger_tmp_t)
 	manage_dirs_pattern($1, passenger_tmp_t, passenger_tmp_t)
 ')
+
+#######################################
+## <summary>
+##  Allow to manage passenger tmp sock_files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`passenger_rw_tmp_sock_files',`
+    gen_require(`
+        type passenger_tmp_t;
+    ')
+
+    files_search_tmp($1)
+	rw_sock_files_pattern($1, passenger_tmp_t, passenger_tmp_t)
+')
diff --git a/policy/modules/services/passenger.te b/policy/modules/services/passenger.te
index 0fbe5c4..2862c33 100644
--- a/policy/modules/services/passenger.te
+++ b/policy/modules/services/passenger.te
@@ -18,7 +18,7 @@ type passenger_tmp_t;
 files_tmp_file(passenger_tmp_t)
 
 type passenger_var_lib_t;
-files_type(passenger_var_lib_t)
+files_var_lib_file(passenger_var_lib_t)
 
 type passenger_var_run_t;
 files_pid_file(passenger_var_run_t)
@@ -76,6 +76,8 @@ auth_use_nsswitch(passenger_t)
 
 logging_send_syslog_msg(passenger_t)
 
+miscfiles_read_localization(passenger_t)
+
 userdom_dontaudit_use_user_terminals(passenger_t)
 
 optional_policy(`
@@ -92,6 +94,11 @@ optional_policy(`
 ')
 
 optional_policy(`
+    mysql_stream_connect(passenger_t)
+    mysql_list_db(passenger_t)
+')
+
+optional_policy(`
     puppet_domtrans_master(passenger_t)
 	puppet_manage_lib(passenger_t)
 	puppet_read_config(passenger_t)
diff --git a/policy/modules/services/pcp.fc b/policy/modules/services/pcp.fc
new file mode 100644
index 0000000..9b8cb6b
--- /dev/null
+++ b/policy/modules/services/pcp.fc
@@ -0,0 +1,28 @@
+/etc/rc\.d/init\.d/pmcd		--	gen_context(system_u:object_r:pcp_pmcd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/pmlogger 	--      gen_context(system_u:object_r:pcp_pmlogger_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/pmproxy 	--	gen_context(system_u:object_r:pcp_pmproxy_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/pmwebd      --       gen_context(system_u:object_r:pcp_pmwebd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/pmie      --       gen_context(system_u:object_r:pcp_pmie_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/pmmgr    --      gen_context(system_u:object_r:pcp_pmmgr_initrc_exec_t,s0)
+
+/usr/bin/pmie       --      gen_context(system_u:object_r:pcp_pmie_exec_t,s0)
+/usr/bin/pmcd	    --	    gen_context(system_u:object_r:pcp_pmcd_exec_t,s0)
+/usr/bin/pmlogger   --      gen_context(system_u:object_r:pcp_pmlogger_exec_t,s0)
+/usr/bin/pmproxy    --      gen_context(system_u:object_r:pcp_pmproxy_exec_t,s0)
+/usr/bin/pmwebd	    --	    gen_context(system_u:object_r:pcp_pmwebd_exec_t,s0)
+/usr/bin/pmmgr      --      gen_context(system_u:object_r:pcp_pmmgr_exec_t,s0)
+
+
+/usr/libexec/pcp/bin/pmcd	--	gen_context(system_u:object_r:pcp_pmcd_exec_t,s0)
+/usr/libexec/pcp/bin/pmlogger   --      gen_context(system_u:object_r:pcp_pmlogger_exec_t,s0)
+/usr/libexec/pcp/bin/pmproxy    --      gen_context(system_u:object_r:pcp_pmproxy_exec_t,s0)
+/usr/libexec/pcp/bin/pmwebd	--	gen_context(system_u:object_r:pcp_pmwebd_exec_t,s0)
+/usr/libexec/pcp/bin/pmie     --      gen_context(system_u:object_r:pcp_pmie_exec_t,s0)
+/usr/libexec/pcp/bin/pmmgr  --      gen_context(system_u:object_r:pcp_pmmgr_exec_t,s0)
+
+/var/lib/pcp(/.*)?		gen_context(system_u:object_r:pcp_var_lib_t,s0)
+
+/var/log/pcp(/.*)?		gen_context(system_u:object_r:pcp_log_t,s0)
+
+/var/run/pcp(/.*)?		gen_context(system_u:object_r:pcp_var_run_t,s0)
+/var/run/pmcd\.socket    --  gen_context(system_u:object_r:pcp_var_run_t,s0)
diff --git a/policy/modules/services/pcp.if b/policy/modules/services/pcp.if
new file mode 100644
index 0000000..7c99bf4
--- /dev/null
+++ b/policy/modules/services/pcp.if
@@ -0,0 +1,130 @@
+## <summary>The  pcp  command summarizes the status of a Performance Co-Pilot (PCP) installation</summary>
+
+######################################
+## <summary>
+##  Creates types and rules for a basic
+##  pcp daemon domain.
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+template(`pcp_domain_template',`
+    gen_require(`
+        attribute pcp_domain;
+    ')
+
+    type pcp_$1_t, pcp_domain;
+    type pcp_$1_exec_t;
+    init_daemon_domain(pcp_$1_t, pcp_$1_exec_t)
+
+    type pcp_$1_initrc_exec_t;
+    init_script_file(pcp_$1_initrc_exec_t)
+
+')
+
+######################################
+## <summary>
+##  Allow domain to read pcp lib files
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+interface(`pcp_read_lib_files',`
+    gen_require(`
+        type pcp_var_lib_t;
+    ')
+    libs_search_lib($1)
+    read_files_pattern($1,pcp_var_lib_t,pcp_var_lib_t)
+')
+
+########################################
+## <summary>
+##  All of the rules required to administrate
+##  an pcp environment
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`pcp_admin',`
+    gen_require(`
+        type pcp_pmcd_t;
+        type pcp_pmlogger_t;
+        type pcp_pmproxy_t;
+        type pcp_pmwebd_t;
+        type pcp_pmie_t;
+        type pcp_pmmgr_t;
+        type pcp_var_run_t;
+    ')
+
+    allow $1 pcp_pmcd_t:process signal_perms;
+    ps_process_pattern($1, pcp_pmcd_t)
+
+    allow $1 pcp_pmlogger_t:process signal_perms;
+    ps_process_pattern($1, pcp_pmlogger_t)
+
+    allow $1 pcp_pmproxy_t:process signal_perms;
+    ps_process_pattern($1, pcp_pmproxy_t)
+
+    allow $1 pcp_pmwebd_t:process signal_perms;
+    ps_process_pattern($1, pcp_pmwebd_t)
+
+    allow $1 pcp_pmie_t:process signal_perms;
+    ps_process_pattern($1, pcp_pmie_t)
+
+    allow $1 pcp_pmmgr_t:process signal_perms;
+    ps_process_pattern($1, pcp_pmmgr_t)
+
+    files_search_pids($1)
+    admin_pattern($1, pcp_var_run_t)
+')
+
+########################################
+## <summary>
+##  Allow the specified domain to execute pcp_pmie
+##  in the caller domain.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`pcp_pmie_exec',`
+    gen_require(`
+        type pcp_pmie_exec_t;
+    ')
+
+    corecmd_search_bin($1)
+    can_exec($1, pcp_pmie_exec_t)
+')
+
+########################################
+## <summary>
+##  Allow the specified domain to execute pcp_pmlogger
+##  in the caller domain.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`pcp_pmlogger_exec',`
+    gen_require(`
+        type pcp_pmlogger_exec_t;
+    ')
+
+    corecmd_search_bin($1)
+    can_exec($1, pcp_pmlogger_exec_t)
+')
+
diff --git a/policy/modules/services/pcp.te b/policy/modules/services/pcp.te
new file mode 100644
index 0000000..0146d4c
--- /dev/null
+++ b/policy/modules/services/pcp.te
@@ -0,0 +1,281 @@
+policy_module(pcp, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+## <p>
+## Allow pcp to bind to all unreserved_ports
+## </p>
+## </desc>
+gen_tunable(pcp_bind_all_unreserved_ports, false)
+
+attribute pcp_domain;
+
+pcp_domain_template(pmcd)
+pcp_domain_template(pmlogger)
+pcp_domain_template(pmproxy)
+pcp_domain_template(pmwebd)
+pcp_domain_template(pmie)
+pcp_domain_template(pmmgr)
+
+type pcp_log_t;
+logging_log_file(pcp_log_t)
+
+type pcp_var_lib_t;
+files_var_lib_file(pcp_var_lib_t)
+
+type pcp_var_run_t;
+files_pid_file(pcp_var_run_t)
+
+type pcp_tmp_t;
+files_tmp_file(pcp_tmp_t)
+
+type pcp_tmpfs_t;
+files_tmpfs_file(pcp_tmpfs_t)
+
+########################################
+#
+# pcp domain local  policy
+#
+
+allow pcp_domain self:capability { setuid setgid dac_override };
+allow pcp_domain self:process signal_perms;
+allow pcp_domain self:tcp_socket create_stream_socket_perms;
+allow pcp_domain self:udp_socket create_socket_perms;
+
+manage_dirs_pattern(pcp_domain, pcp_log_t, pcp_log_t)
+manage_files_pattern(pcp_domain, pcp_log_t, pcp_log_t)
+logging_log_filetrans(pcp_domain, pcp_log_t, { dir })
+
+manage_dirs_pattern(pcp_domain, pcp_var_lib_t, pcp_var_lib_t)
+manage_files_pattern(pcp_domain, pcp_var_lib_t, pcp_var_lib_t)
+exec_files_pattern(pcp_domain, pcp_var_lib_t, pcp_var_lib_t)
+files_var_lib_filetrans(pcp_domain, pcp_var_lib_t, { dir})
+
+manage_dirs_pattern(pcp_domain, pcp_var_run_t, pcp_var_run_t)
+manage_files_pattern(pcp_domain, pcp_var_run_t, pcp_var_run_t)
+manage_sock_files_pattern(pcp_domain, pcp_var_run_t, pcp_var_run_t)
+files_pid_filetrans(pcp_domain, pcp_var_run_t, { dir file sock_file })
+
+manage_dirs_pattern(pcp_domain, pcp_tmp_t, pcp_tmp_t)
+manage_files_pattern(pcp_domain, pcp_tmp_t, pcp_tmp_t)
+manage_sock_files_pattern(pcp_domain, pcp_tmp_t, pcp_tmp_t)
+files_tmp_filetrans(pcp_domain, pcp_tmp_t, { dir file sock_file })
+
+manage_dirs_pattern(pcp_domain, pcp_tmpfs_t, pcp_tmpfs_t)
+manage_files_pattern(pcp_domain, pcp_tmpfs_t, pcp_tmpfs_t)
+fs_tmpfs_filetrans(pcp_domain, pcp_tmpfs_t, { dir file })
+
+dev_read_urand(pcp_domain)
+
+files_read_etc_files(pcp_domain)
+
+fs_getattr_all_fs(pcp_domain)
+
+files_read_etc_files(pcp_domain)
+
+sysnet_read_config(pcp_domain)
+
+########################################
+#
+# pcp_pmcd local  policy
+#
+
+allow pcp_pmcd_t self:process { setsched };
+allow pcp_pmcd_t self:netlink_route_socket create_socket_perms;
+allow pcp_pmcd_t self:unix_dgram_socket create_socket_perms;
+
+auth_use_nsswitch(pcp_pmcd_t)
+
+kernel_get_sysvipc_info(pcp_pmcd_t)
+kernel_read_network_state(pcp_pmcd_t)
+kernel_read_system_state(pcp_pmcd_t)
+kernel_read_fs_sysctls(pcp_pmcd_t)
+kernel_read_rpc_sysctls(pcp_pmcd_t)
+kernel_read_debugfs(pcp_pmcd_t)
+
+corecmd_exec_bin(pcp_pmcd_t)
+
+corenet_tcp_bind_amqp_port(pcp_pmcd_t)
+corenet_tcp_connect_amqp_port(pcp_pmcd_t)
+corenet_tcp_connect_http_port(pcp_pmcd_t)
+#corenet_tcp_connect_all_ephemeral_ports(pcp_pmcd_t)
+
+domain_read_all_domains_state(pcp_pmcd_t)
+domain_getattr_all_domains(pcp_pmcd_t)
+
+dev_getattr_all_blk_files(pcp_pmcd_t)
+dev_getattr_all_chr_files(pcp_pmcd_t)
+dev_read_sysfs(pcp_pmcd_t)
+dev_read_urand(pcp_pmcd_t)
+
+fs_getattr_all_fs(pcp_pmcd_t)
+fs_getattr_all_dirs(pcp_pmcd_t)
+fs_list_cgroup_dirs(pcp_pmcd_t)
+fs_read_cgroup_files(pcp_pmcd_t)
+
+hostname_exec(pcp_pmcd_t)
+
+init_read_utmp(pcp_pmcd_t)
+
+logging_send_syslog_msg(pcp_pmcd_t)
+
+sendmail_read_log(pcp_pmcd_t)
+
+storage_getattr_fixed_disk_dev(pcp_pmcd_t)
+
+userdom_read_user_tmp_files(pcp_pmcd_t)
+
+tunable_policy(`pcp_bind_all_unreserved_ports',`
+    corenet_sendrecv_all_server_packets(pcp_pmcd_t)
+    corenet_tcp_bind_all_unreserved_ports(pcp_pmcd_t)
+')
+
+optional_policy(`
+    dbus_system_bus_client(pcp_pmcd_t)
+
+    optional_policy(`
+        avahi_dbus_chat(pcp_pmcd_t)
+    ')
+')
+
+optional_policy(`
+    unconfined_domain(pcp_pmcd_t)
+')
+
+optional_policy(`
+    rpm_read_db(pcp_pmcd_t)
+')
+
+optional_policy(`
+    rpcbind_stream_connect(pcp_pmcd_t)
+')
+
+optional_policy(`
+    pcp_pmie_exec(pcp_pmcd_t)
+')
+
+optional_policy(`
+    mta_read_config(pcp_pmcd_t)
+')
+
+########################################
+#
+# pcp_pmproxy local  policy
+#
+
+allow pcp_pmproxy_t self:process setsched;
+allow pcp_pmproxy_t self:netlink_route_socket create_socket_perms;
+allow pcp_pmproxy_t self:unix_dgram_socket create_socket_perms;
+
+auth_use_nsswitch(pcp_pmproxy_t)
+
+logging_send_syslog_msg(pcp_pmproxy_t)
+
+optional_policy(`
+    dbus_system_bus_client(pcp_pmproxy_t)
+
+    optional_policy(`
+        avahi_dbus_chat(pcp_pmproxy_t)
+    ')
+')
+
+optional_policy(`
+    unconfined_domain(pcp_pmproxy_t)
+')
+
+########################################
+#
+# pcp_pmwebd local  policy
+#
+
+corenet_tcp_bind_generic_node(pcp_pmwebd_t)
+
+optional_policy(`
+    unconfined_domain(pcp_pmwebd_t)
+')
+
+########################################
+#
+# pcp_pmmgr local  policy
+#
+
+allow pcp_pmmgr_t self:process { setpgid };
+allow pcp_pmmgr_t self:unix_dgram_socket create_socket_perms;
+allow pcp_pmmgr_t pcp_pmcd_t:unix_stream_socket connectto;
+
+kernel_read_system_state(pcp_pmmgr_t)
+
+auth_use_nsswitch(pcp_pmmgr_t)
+
+corenet_udp_bind_dey_sapi_port(pcp_pmmgr_t)
+corenet_tcp_bind_commplex_port(pcp_pmmgr_t)
+corenet_tcp_bind_dey_sapi_port(pcp_pmmgr_t)
+
+#corenet_tcp_connect_all_ephemeral_ports(pcp_pmmgr_t)
+
+corecmd_exec_bin(pcp_pmmgr_t)
+
+logging_send_syslog_msg(pcp_pmmgr_t)
+
+optional_policy(`
+    pcp_pmie_exec(pcp_pmmgr_t)
+    pcp_pmlogger_exec(pcp_pmmgr_t)
+')
+
+optional_policy(`
+    unconfined_domain(pcp_pmmgr_t)
+')
+
+########################################
+#
+# pcp_pmie local  policy
+#
+
+allow pcp_pmie_t self:netlink_route_socket { create_socket_perms nlmsg_read };
+allow pcp_pmie_t self:unix_dgram_socket { create_socket_perms sendto };
+
+allow pcp_pmie_t pcp_pmcd_t:unix_stream_socket connectto;
+
+kernel_read_system_state(pcp_pmie_t)
+
+corecmd_exec_bin(pcp_pmie_t)
+
+#corenet_tcp_connect_all_ephemeral_ports(pcp_pmie_t)
+
+logging_send_syslog_msg(pcp_pmie_t)
+
+userdom_read_user_tmp_files(pcp_pmie_t)
+
+optional_policy(`
+    unconfined_domain(pcp_pmie_t)
+')
+
+########################################
+#
+# pcp_pmlogger local  policy
+#
+
+allow pcp_pmlogger_t self:process setpgid;
+allow pcp_pmlogger_t self:netlink_route_socket {create_socket_perms nlmsg_read };
+
+allow pcp_pmlogger_t pcp_pmcd_t:unix_stream_socket connectto;
+
+corenet_tcp_bind_generic_node(pcp_pmlogger_t)
+corenet_tcp_bind_dey_sapi_port(pcp_pmlogger_t)
+corenet_tcp_bind_commplex_port(pcp_pmlogger_t)
+corenet_tcp_bind_amqp_port(pcp_pmlogger_t)
+
+#corenet_tcp_connect_all_ephemeral_ports(pcp_pmlogger_t)
+
+tunable_policy(`pcp_bind_all_unreserved_ports',`
+    corenet_sendrecv_all_server_packets(pcp_pmlogger_t)
+    corenet_tcp_bind_all_unreserved_ports(pcp_pmlogger_t)
+')
+
+optional_policy(`
+    unconfined_domain(pcp_pmlogger_t)
+')
diff --git a/policy/modules/services/pegasus.te b/policy/modules/services/pegasus.te
index b4e9a76..9b28067 100644
--- a/policy/modules/services/pegasus.te
+++ b/policy/modules/services/pegasus.te
@@ -57,9 +57,10 @@ manage_dirs_pattern(pegasus_t, pegasus_tmp_t, pegasus_tmp_t)
 manage_files_pattern(pegasus_t, pegasus_tmp_t, pegasus_tmp_t)
 files_tmp_filetrans(pegasus_t, pegasus_tmp_t, { file dir })
 
-allow pegasus_t pegasus_var_run_t:sock_file { create_sock_file_perms setattr_sock_file_perms delete_sock_file_perms };
+manage_sock_files_pattern(pegasus_t, pegasus_var_run_t, pegasus_var_run_t)
+manage_dirs_pattern(pegasus_t, pegasus_var_run_t, pegasus_var_run_t)
 manage_files_pattern(pegasus_t, pegasus_var_run_t, pegasus_var_run_t)
-files_pid_filetrans(pegasus_t, pegasus_var_run_t, file)
+files_pid_filetrans(pegasus_t, pegasus_var_run_t, { dir file })
 
 kernel_read_network_state(pegasus_t)
 kernel_read_kernel_sysctls(pegasus_t)
diff --git a/policy/modules/services/piranha.fc b/policy/modules/services/piranha.fc
index 1774f3d..19ab68d 100644
--- a/policy/modules/services/piranha.fc
+++ b/policy/modules/services/piranha.fc
@@ -1,5 +1,6 @@
 
 /etc/rc\.d/init\.d/pulse	--	gen_context(system_u:object_r:piranha_pulse_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/luci       --  gen_context(system_u:object_r:piranha_web_initrc_exec_t,s0)
 
 # RHEL6
 /etc/sysconfig/ha/lvs\.cf	--	gen_context(system_u:object_r:piranha_etc_rw_t,s0)
@@ -10,6 +11,7 @@
 
 /usr/sbin/fos               --  gen_context(system_u:object_r:piranha_fos_exec_t,s0)
 /usr/sbin/lvsd				--	gen_context(system_u:object_r:piranha_lvs_exec_t,s0)
+/usr/sbin/luci		        --	gen_context(system_u:object_r:piranha_web_exec_t,s0)
 /usr/sbin/piranha_gui		--	gen_context(system_u:object_r:piranha_web_exec_t,s0)
 /usr/sbin/pulse       		--  gen_context(system_u:object_r:piranha_pulse_exec_t,s0)
 
@@ -18,6 +20,7 @@
 /var/lib/luci/etc(/.*)?         gen_context(system_u:object_r:piranha_web_conf_t,s0)
 
 /var/log/piranha(/.*)?			gen_context(system_u:object_r:piranha_log_t,s0)
+/var/log/luci(/.*)?             gen_context(system_u:object_r:piranha_log_t,s0)
 
 /var/run/fos\.pid           --  gen_context(system_u:object_r:piranha_fos_var_run_t,s0)
 /var/run/luci(/.*)?				gen_context(system_u:object_r:piranha_web_var_run_t,s0)
diff --git a/policy/modules/services/piranha.if b/policy/modules/services/piranha.if
index e05c97e..cbf4f55 100644
--- a/policy/modules/services/piranha.if
+++ b/policy/modules/services/piranha.if
@@ -27,6 +27,9 @@ template(`piranha_domain_template',`
 	type piranha_$1_exec_t;
 	init_daemon_domain(piranha_$1_t, piranha_$1_exec_t)
 
+    type piranha_$1_initrc_exec_t;
+    init_script_file(piranha_$1_initrc_exec_t)
+
     # tmpfs files
     type piranha_$1_tmpfs_t, piranha_tmpfs;
     files_tmpfs_file(piranha_$1_tmpfs_t)
diff --git a/policy/modules/services/piranha.te b/policy/modules/services/piranha.te
index e6756d5..1c2025a 100644
--- a/policy/modules/services/piranha.te
+++ b/policy/modules/services/piranha.te
@@ -22,9 +22,6 @@ piranha_domain_template(lvs)
 
 piranha_domain_template(pulse)
 
-type piranha_pulse_initrc_exec_t;
-init_script_file(piranha_pulse_initrc_exec_t)
-
 piranha_domain_template(web)
 
 type piranha_web_conf_t;
@@ -252,6 +249,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+    prelink_transition_domain_attribute(piranha_pulse_t)    
+')
+
+optional_policy(`
     samba_initrc_domtrans(piranha_pulse_t)
     samba_domtrans_smbd(piranha_pulse_t)
     samba_domtrans_nmbd(piranha_pulse_t)
diff --git a/policy/modules/services/pkcsslotd.te b/policy/modules/services/pkcsslotd.te
index 7ad2826..1e0b402 100644
--- a/policy/modules/services/pkcsslotd.te
+++ b/policy/modules/services/pkcsslotd.te
@@ -10,7 +10,7 @@ type pkcsslotd_exec_t;
 init_daemon_domain(pkcsslotd_t, pkcsslotd_exec_t)
 
 type pkcsslotd_var_lib_t;
-files_type(pkcsslotd_var_lib_t)
+files_var_lib_file(pkcsslotd_var_lib_t)
 
 type pkcsslotd_tmp_t;
 files_tmp_file(pkcsslotd_tmp_t)
diff --git a/policy/modules/services/plymouthd.te b/policy/modules/services/plymouthd.te
index 9be8186..a038514 100644
--- a/policy/modules/services/plymouthd.te
+++ b/policy/modules/services/plymouthd.te
@@ -13,7 +13,7 @@ type plymouthd_var_run_t;
 files_pid_file(plymouthd_var_run_t)
 
 type plymouthd_var_lib_t;
-files_type(plymouthd_var_lib_t)
+files_var_lib_file(plymouthd_var_lib_t)
 
 type plymouthd_spool_t;
 files_type(plymouthd_spool_t)
diff --git a/policy/modules/services/policykit.te b/policy/modules/services/policykit.te
index 6d218f6..27c7472 100644
--- a/policy/modules/services/policykit.te
+++ b/policy/modules/services/policykit.te
@@ -29,7 +29,7 @@ type policykit_tmp_t;
 files_tmp_file(policykit_tmp_t)
 
 type policykit_var_lib_t alias polkit_var_lib_t;
-files_type(policykit_var_lib_t)
+files_var_lib_file(policykit_var_lib_t)
 
 type policykit_var_run_t alias polkit_var_run_t;
 files_pid_file(policykit_var_run_t)
diff --git a/policy/modules/services/postfix.if b/policy/modules/services/postfix.if
index 78e2459..97b343b 100644
--- a/policy/modules/services/postfix.if
+++ b/policy/modules/services/postfix.if
@@ -823,7 +823,7 @@ interface(`postfix_admin',`
 
 	postfix_initrc_domtrans($1)
 	domain_system_change_exemption($1)
-	#role_transition $2 postfix_initrc_exec_t system_r;
+    role_transition $2 postfix_initrc_exec_t system_r;
 	allow $2 system_r;
 
     postfix_stream_connect_master($1)
diff --git a/policy/modules/services/postfix.te b/policy/modules/services/postfix.te
index 24ea210..39d38b3 100644
--- a/policy/modules/services/postfix.te
+++ b/policy/modules/services/postfix.te
@@ -352,6 +352,13 @@ tunable_policy(`allow_postfix_local_write_mail_spool',`
    mta_manage_spool(postfix_local_t)
 ')
 
+
+optional_policy(`
+	antivirus_search_db(postfix_local_t)
+	antivirus_exec(postfix_local_t)
+	antivirus_stream_connect(postfix_t)
+')
+
 optional_policy(`
 	clamav_search_lib(postfix_local_t)
 	clamav_exec_clamscan(postfix_local_t)
@@ -488,6 +495,7 @@ allow postfix_pipe_t self:process setrlimit;
 allow postfix_pipe_t self:fifo_file rw_fifo_file_perms;
 
 write_sock_files_pattern(postfix_pipe_t, postfix_private_t, postfix_private_t)
+write_sock_files_pattern(postfix_pipe_t, postfix_public_t, postfix_public_t)
 
 write_fifo_files_pattern(postfix_pipe_t, postfix_public_t, postfix_public_t)
 
@@ -498,6 +506,10 @@ domtrans_pattern(postfix_pipe_t, postfix_postdrop_exec_t, postfix_postdrop_t)
 corecmd_exec_bin(postfix_pipe_t)
 
 optional_policy(`
+    cyrus_stream_connect(postfix_pipe_t)
+')
+
+optional_policy(`
 	dovecot_domtrans_deliver(postfix_pipe_t)
 ')
 
@@ -740,6 +752,10 @@ optional_policy(`
 	sasl_connect(postfix_smtpd_t)
 ')
 
+optional_policy(`
+	antivirus_stream_connect(postfix_smtpd_t)
+')
+
 ########################################
 #
 # Postfix virtual local policy
diff --git a/policy/modules/services/postgrey.te b/policy/modules/services/postgrey.te
index 2a7c489..efe1d21 100644
--- a/policy/modules/services/postgrey.te
+++ b/policy/modules/services/postgrey.te
@@ -20,7 +20,7 @@ type postgrey_spool_t;
 files_type(postgrey_spool_t)
 
 type postgrey_var_lib_t;
-files_type(postgrey_var_lib_t)
+files_var_lib_file(postgrey_var_lib_t)
 
 type postgrey_var_run_t;
 files_pid_file(postgrey_var_run_t)
diff --git a/policy/modules/services/prelude.te b/policy/modules/services/prelude.te
index 39dd70f..bd8746a 100644
--- a/policy/modules/services/prelude.te
+++ b/policy/modules/services/prelude.te
@@ -23,7 +23,7 @@ type prelude_var_run_t;
 files_pid_file(prelude_var_run_t)
 
 type prelude_var_lib_t;
-files_type(prelude_var_lib_t)
+files_var_lib_file(prelude_var_lib_t)
 
 type prelude_audisp_t;
 type prelude_audisp_exec_t;
diff --git a/policy/modules/services/procmail.te b/policy/modules/services/procmail.te
index 1ac6a8e..6e04544 100644
--- a/policy/modules/services/procmail.te
+++ b/policy/modules/services/procmail.te
@@ -61,6 +61,7 @@ corenet_tcp_connect_spamd_port(procmail_t)
 corenet_sendrecv_spamd_client_packets(procmail_t)
 corenet_sendrecv_comsat_client_packets(procmail_t)
 
+dev_read_rand(procmail_t)
 dev_read_urand(procmail_t)
 
 fs_getattr_xattr_fs(procmail_t)
@@ -160,6 +161,13 @@ optional_policy(`
 ')
 
 optional_policy(`
+	zarafa_domtrans_deliver(procmail_t)
+    zarafa_read_deliver_exec(procmail_t)
+	zarafa_stream_connect_server(procmail_t)
+    zarafa_read_lib_files(procmail_t)
+')
+
+optional_policy(`
 	mta_read_config(procmail_t)
 	mta_manage_home_rw(procmail_t)
 	sendmail_domtrans(procmail_t)
diff --git a/policy/modules/services/psad.te b/policy/modules/services/psad.te
index c354eef..ac2410c 100644
--- a/policy/modules/services/psad.te
+++ b/policy/modules/services/psad.te
@@ -19,7 +19,7 @@ init_script_file(psad_initrc_exec_t)
 
 # var/lib files
 type psad_var_lib_t;
-files_type(psad_var_lib_t)
+files_var_lib_file(psad_var_lib_t)
 
 # log files
 type psad_var_log_t;
diff --git a/policy/modules/services/puppet.te b/policy/modules/services/puppet.te
index a788bc3..1754737 100644
--- a/policy/modules/services/puppet.te
+++ b/policy/modules/services/puppet.te
@@ -38,7 +38,7 @@ type puppet_tmp_t;
 files_tmp_file(puppet_tmp_t)
 
 type puppet_var_lib_t;
-files_type(puppet_var_lib_t)
+files_var_lib_file(puppet_var_lib_t)
 
 type puppet_var_run_t;
 files_pid_file(puppet_var_run_t)
diff --git a/policy/modules/services/pyzor.te b/policy/modules/services/pyzor.te
index a3acf2e..9ee99df 100644
--- a/policy/modules/services/pyzor.te
+++ b/policy/modules/services/pyzor.te
@@ -63,7 +63,7 @@ ubac_constrained(pyzor_tmp_t)
 type pyzor_var_lib_t;
 typealias pyzor_var_lib_t alias { user_pyzor_var_lib_t staff_pyzor_var_lib_t sysadm_pyzor_var_lib_t };
 typealias pyzor_var_lib_t alias { auditadm_pyzor_var_lib_t secadm_pyzor_var_lib_t };
-files_type(pyzor_var_lib_t)
+files_var_lib_file(pyzor_var_lib_t)
 ubac_constrained(pyzor_var_lib_t)
 
 type pyzord_t;
diff --git a/policy/modules/services/qpidd.te b/policy/modules/services/qpidd.te
index 31d0327..4f72e3c 100644
--- a/policy/modules/services/qpidd.te
+++ b/policy/modules/services/qpidd.te
@@ -19,7 +19,7 @@ type qpidd_var_run_t;
 files_pid_file(qpidd_var_run_t)
 
 type qpidd_var_lib_t;
-files_type(qpidd_var_lib_t)
+files_var_lib_file(qpidd_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/quantum.te b/policy/modules/services/quantum.te
index 91e4c1c..d40aeb1 100644
--- a/policy/modules/services/quantum.te
+++ b/policy/modules/services/quantum.te
@@ -19,7 +19,7 @@ type neutron_tmp_t alias quantum_tmp_t;
 files_tmp_file(neutron_tmp_t)
 
 type neutron_var_lib_t alias quantum_var_lib_t;
-files_type(neutron_var_lib_t)
+files_var_lib_file(neutron_var_lib_t)
 
 type neutron_var_run_t alias quantum_var_run_t;
 files_type(neutron_var_run_t)
@@ -66,7 +66,7 @@ corenet_tcp_sendrecv_all_ports(neutron_t)
 corenet_tcp_bind_generic_node(neutron_t)
 
 corenet_tcp_bind_generic_node(neutron_t)
-corenet_tcp_bind_quantum_port(neutron_t)
+corenet_tcp_bind_neutron_port(neutron_t)
 
 dev_read_urand(neutron_t)
 dev_list_sysfs(neutron_t)
diff --git a/policy/modules/services/radius.fc b/policy/modules/services/radius.fc
index 8385ab2..4035c6f 100644
--- a/policy/modules/services/radius.fc
+++ b/policy/modules/services/radius.fc
@@ -9,7 +9,7 @@
 /usr/sbin/radiusd	--	gen_context(system_u:object_r:radiusd_exec_t,s0)
 /usr/sbin/freeradius	--	gen_context(system_u:object_r:radiusd_exec_t,s0)
 
-/var/lib/radiousd(/.*)?		gen_context(system_u:object_r:radiusd_var_lib_t,s0)
+/var/lib/radiusd(/.*)?		gen_context(system_u:object_r:radiusd_var_lib_t,s0)
 
 /var/log/freeradius(/.*)?	gen_context(system_u:object_r:radiusd_log_t,s0)
 /var/log/radacct(/.*)?		gen_context(system_u:object_r:radiusd_log_t,s0)
diff --git a/policy/modules/services/radius.te b/policy/modules/services/radius.te
index 2efdf2f..616d0d6 100644
--- a/policy/modules/services/radius.te
+++ b/policy/modules/services/radius.te
@@ -22,8 +22,11 @@ init_script_file(radiusd_initrc_exec_t)
 type radiusd_log_t;
 logging_log_file(radiusd_log_t)
 
+type radiusd_tmp_t;
+files_tmp_file(radiusd_tmp_t)
+
 type radiusd_var_lib_t;
-files_type(radiusd_var_lib_t)
+files_var_lib_file(radiusd_var_lib_t)
 
 type radiusd_var_run_t;
 files_pid_file(radiusd_var_run_t)
@@ -57,6 +60,10 @@ manage_dirs_pattern(radiusd_t, radiusd_log_t, radiusd_log_t)
 manage_files_pattern(radiusd_t, radiusd_log_t, radiusd_log_t)
 logging_log_filetrans(radiusd_t, radiusd_log_t,{ file dir })
 
+manage_dirs_pattern(radiusd_t, radiusd_tmp_t, radiusd_tmp_t)
+manage_files_pattern(radiusd_t, radiusd_tmp_t, radiusd_tmp_t)
+files_tmp_filetrans(radiusd_t, radiusd_tmp_t, { file dir })
+
 manage_files_pattern(radiusd_t, radiusd_var_lib_t, radiusd_var_lib_t)
 
 manage_sock_files_pattern(radiusd_t, radiusd_var_run_t, radiusd_var_run_t)
@@ -124,6 +131,11 @@ optional_policy(`
 ')
 
 optional_policy(`
+    kerberos_keytab_template(radiusd, radiusd_t)
+    kerberos_manage_host_rcache(radiusd_t)
+')
+
+optional_policy(`
 	logrotate_exec(radiusd_t)
 ')
 
diff --git a/policy/modules/services/radvd.if b/policy/modules/services/radvd.if
index be05bff..8cecc7f 100644
--- a/policy/modules/services/radvd.if
+++ b/policy/modules/services/radvd.if
@@ -1,5 +1,24 @@
 ## <summary>IPv6 router advertisement daemon</summary>
 
+######################################
+## <summary>
+##	Read radvd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`radvd_read_pid_files',`
+	gen_require(`
+		type radvd_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, radvd_var_run_t, radvd_var_run_t)
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
diff --git a/policy/modules/services/razor.te b/policy/modules/services/razor.te
index 38397f2..f8e07c8 100644
--- a/policy/modules/services/razor.te
+++ b/policy/modules/services/razor.te
@@ -54,7 +54,7 @@ files_tmp_file(razor_tmp_t)
 ubac_constrained(razor_tmp_t)
 
 type razor_var_lib_t;
-files_type(razor_var_lib_t)
+files_var_lib_file(razor_var_lib_t)
 
 # these are here due to ordering issues:
 razor_common_domain_template(razor)
diff --git a/policy/modules/services/remotelogin.te b/policy/modules/services/remotelogin.te
index d76128c..2200b10 100644
--- a/policy/modules/services/remotelogin.te
+++ b/policy/modules/services/remotelogin.te
@@ -80,6 +80,8 @@ files_list_mnt(remote_login_t)
 # for when /var/mail is a sym-link
 files_read_var_symlinks(remote_login_t)
 
+auth_can_read_shadow_passwords(remote_login_t)
+
 sysnet_dns_name_resolve(remote_login_t)
 
 miscfiles_read_localization(remote_login_t)
diff --git a/policy/modules/services/rgmanager.te b/policy/modules/services/rgmanager.te
index d96e1fc..4fea660 100644
--- a/policy/modules/services/rgmanager.te
+++ b/policy/modules/services/rgmanager.te
@@ -29,7 +29,7 @@ type rgmanager_tmpfs_t;
 files_tmpfs_file(rgmanager_tmpfs_t)
 
 type rgmanager_var_lib_t;
-files_type(rgmanager_var_lib_t)
+files_var_lib_file(rgmanager_var_lib_t)
 
 type rgmanager_var_log_t;
 logging_log_file(rgmanager_var_log_t)
diff --git a/policy/modules/services/rhcs.fc b/policy/modules/services/rhcs.fc
index 57899ae..6c8c588 100644
--- a/policy/modules/services/rhcs.fc
+++ b/policy/modules/services/rhcs.fc
@@ -34,7 +34,7 @@
 /var/run/cluster/fenced_override		--      	gen_context(system_u:object_r:fenced_var_run_t,s0)
 /var/run/cluster/fence_scsi.*			--       gen_context(system_u:object_r:fenced_var_run_t,s0)
 /var/run/dlm_controld\.pid             --      	gen_context(system_u:object_r:dlm_controld_var_run_t,s0)
-/var/run/fenced\.pid                   --      	gen_context(system_u:object_r:fenced_var_run_t,s0)
+/var/run/fence.*				    gen_context(system_u:object_r:fenced_var_run_t,s0)
 /var/run/gfs_controld\.pid             --      	gen_context(system_u:object_r:gfs_controld_var_run_t,s0)
 /var/run/groupd\.pid                   --      	gen_context(system_u:object_r:groupd_var_run_t,s0)
 /var/run/haproxy\.pid           --  gen_context(system_u:object_r:haproxy_var_run_t,s0)
@@ -49,14 +49,15 @@
 /usr/sbin/ldirectord        --  gen_context(system_u:object_r:cluster_exec_t,s0)
 /usr/sbin/rgmanager         --  gen_context(system_u:object_r:cluster_exec_t,s0)
 /usr/sbin/pacemakerd        --  gen_context(system_u:object_r:cluster_exec_t,s0)
+/usr/sbin/pacemaker_remoted --  gen_context(system_u:object_r:cluster_exec_t,s0)
 
-/usr/lib/heartbeat(/.*)?            gen_context(system_u:object_r:cluster_var_lib_t,s0)
-/usr/lib/heartbeat/heartbeat   --   gen_context(system_u:object_r:cluster_exec_t,s0)
-/var/lib/heartbeat(/.*)?            gen_context(system_u:object_r:cluster_var_lib_t,s0)
-/var/lib/corosync(/.*)?             gen_context(system_u:object_r:cluster_var_lib_t,s0)
-/var/lib/openais(/.*)?              gen_context(system_u:object_r:cluster_var_lib_t,s0)
-/var/lib/pacemaker(/.*)?            gen_context(system_u:object_r:cluster_var_lib_t,s0)
-/var/lib/pengine(/.*)?              gen_context(system_u:object_r:cluster_var_lib_t,s0)
+/usr/lib(64)?/heartbeat(/.*)?            gen_context(system_u:object_r:cluster_var_lib_t,s0)
+/usr/lib(64)?/heartbeat/heartbeat   --   gen_context(system_u:object_r:cluster_exec_t,s0)
+/var/lib(64)?/heartbeat(/.*)?            gen_context(system_u:object_r:cluster_var_lib_t,s0)
+/var/lib(64)?/corosync(/.*)?             gen_context(system_u:object_r:cluster_var_lib_t,s0)
+/var/lib(64)?/openais(/.*)?              gen_context(system_u:object_r:cluster_var_lib_t,s0)
+/var/lib(64)?/pacemaker(/.*)?            gen_context(system_u:object_r:cluster_var_lib_t,s0)
+/var/lib(64)?/pengine(/.*)?              gen_context(system_u:object_r:cluster_var_lib_t,s0)
 
 /var/run/aisexec.*                  gen_context(system_u:object_r:cluster_var_run_t,s0)
 /var/run/cman_.*                    -s  gen_context(system_u:object_r:cluster_var_run_t,s0)
diff --git a/policy/modules/services/rhcs.te b/policy/modules/services/rhcs.te
index 1e2193d..dc19196 100644
--- a/policy/modules/services/rhcs.te
+++ b/policy/modules/services/rhcs.te
@@ -64,7 +64,7 @@ rhcs_domain_template(gfs_controld)
 rhcs_domain_template(haproxy)
 
 type haproxy_var_lib_t;
-files_type(haproxy_var_lib_t)
+files_var_lib_file(haproxy_var_lib_t)
 
 rhcs_domain_template(groupd)
 
@@ -72,7 +72,7 @@ rhcs_domain_template(qdiskd)
 
 # var/lib files
 type qdiskd_var_lib_t;
-files_type(qdiskd_var_lib_t)
+files_var_lib_file(qdiskd_var_lib_t)
 
 # cluster_t is a new domain for administrative generic cluster services 
 # (rgmanager, corosync, hearbeat, cman, pacemaker)
@@ -94,7 +94,7 @@ files_tmp_file(cluster_tmp_t)
 
 type cluster_var_lib_t;
 typealias cluster_var_lib_t alias { aisexec_var_lib_t corosync_var_lib_t pacemaker_var_lib_t rgmanager_var_lib_t };
-files_type(cluster_var_lib_t)
+files_var_lib_file(cluster_var_lib_t)
 
 #####################################
 #
@@ -225,6 +225,9 @@ tunable_policy(`cluster_manage_all_files',`
 optional_policy(`
     ccs_read_config(cluster_t)
 ')
+optional_policy(`
+    prelink_transition_domain_attribute(cluster_t)
+')
 
 optional_policy(`
     cmirrord_rw_shm(cluster_t)
@@ -504,12 +507,15 @@ stream_connect_pattern(gfs_controld_t, groupd_var_run_t, groupd_var_run_t, group
 kernel_read_system_state(gfs_controld_t)
 
 storage_getattr_removable_dev(gfs_controld_t)
+storage_getattr_fixed_disk_dev(gfs_controld_t)
 
 dev_rw_dlm_control(gfs_controld_t)
 dev_setattr_dlm_control(gfs_controld_t)
 
 dev_rw_sysfs(gfs_controld_t)
 
+fs_getattr_all_fs(gfs_controld_t)
+
 init_rw_script_tmp_files(gfs_controld_t)
 
 optional_policy(`
diff --git a/policy/modules/services/rhnsd.fc b/policy/modules/services/rhnsd.fc
index 1936028..cf0043d 100644
--- a/policy/modules/services/rhnsd.fc
+++ b/policy/modules/services/rhnsd.fc
@@ -1,5 +1,7 @@
 /etc/rc\.d/init\.d/rhnsd	--	gen_context(system_u:object_r:rhnsd_initrc_exec_t,s0)
 
+/etc/sysconfig/rhn(/.*)?        gen_context(system_u:object_r:rhnsd_conf_t,s0)
+
 /usr/sbin/rhnsd		--	gen_context(system_u:object_r:rhnsd_exec_t,s0)
 
 /var/run/rhnsd\.pid		--	gen_context(system_u:object_r:rhnsd_var_run_t,s0)
diff --git a/policy/modules/services/rhnsd.if b/policy/modules/services/rhnsd.if
index 806f0f0..d2ed1d0 100644
--- a/policy/modules/services/rhnsd.if
+++ b/policy/modules/services/rhnsd.if
@@ -38,6 +38,26 @@ interface(`rhnsd_initrc_domtrans',`
 	init_labeled_script_domtrans($1, rhnsd_initrc_exec_t)
 ')
 
+######################################
+## <summary>
+## Allow the specified domain to manage
+## rhnsd configuration files.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`rhnsd_manage_config',`
+    gen_require(`
+        type rhnsd_conf_t;
+    ')
+
+    files_search_etc($1)
+    manage_files_pattern( $1, rhnsd_conf_t, rhnsd_conf_t)
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate
diff --git a/policy/modules/services/rhnsd.te b/policy/modules/services/rhnsd.te
index fae1eb9..2ee49b7 100644
--- a/policy/modules/services/rhnsd.te
+++ b/policy/modules/services/rhnsd.te
@@ -15,6 +15,9 @@ files_pid_file(rhnsd_var_run_t)
 type rhnsd_initrc_exec_t;
 init_script_file(rhnsd_initrc_exec_t)
 
+type rhnsd_conf_t;
+files_config_file(rhnsd_conf_t)
+
 ########################################
 #
 # rhnsd local policy
@@ -29,6 +32,10 @@ manage_dirs_pattern(rhnsd_t, rhnsd_var_run_t, rhnsd_var_run_t)
 manage_files_pattern(rhnsd_t, rhnsd_var_run_t, rhnsd_var_run_t)
 files_pid_filetrans(rhnsd_t, rhnsd_var_run_t, { dir file })
 
+manage_files_pattern(rhnsd_t, rhnsd_conf_t, rhnsd_conf_t)
+
+corecmd_exec_bin(rhnsd_t)
+
 files_read_etc_files(rhnsd_t)
 
 logging_send_syslog_msg(rhnsd_t)
diff --git a/policy/modules/services/rhsmcertd.fc b/policy/modules/services/rhsmcertd.fc
index 5094d93..91a2eab 100644
--- a/policy/modules/services/rhsmcertd.fc
+++ b/policy/modules/services/rhsmcertd.fc
@@ -3,6 +3,8 @@
 
 /usr/bin/rhsmcertd		--	gen_context(system_u:object_r:rhsmcertd_exec_t,s0)
 
+/usr/libexec/rhsmd      --  gen_context(system_u:object_r:rhsmcertd_exec_t,s0)
+
 /var/lib/rhsm(/.*)?		gen_context(system_u:object_r:rhsmcertd_var_lib_t,s0)
 
 /var/log/rhsm(/.*)?		gen_context(system_u:object_r:rhsmcertd_log_t,s0)
diff --git a/policy/modules/services/rhsmcertd.te b/policy/modules/services/rhsmcertd.te
index c28c77e..267cfd6 100644
--- a/policy/modules/services/rhsmcertd.te
+++ b/policy/modules/services/rhsmcertd.te
@@ -19,7 +19,7 @@ type rhsmcertd_lock_t;
 files_lock_file(rhsmcertd_lock_t)
 
 type rhsmcertd_var_lib_t;
-files_type(rhsmcertd_var_lib_t)
+files_var_lib_file(rhsmcertd_var_lib_t)
 
 type rhsmcertd_var_run_t;
 files_pid_file(rhsmcertd_var_run_t)
@@ -66,6 +66,10 @@ miscfiles_read_localization(rhsmcertd_t)
 miscfiles_read_certs(rhsmcertd_t)
 
 optional_policy(`
+    dbus_system_domain(rhsmcertd_t, rhsmcertd_exec_t)
+')
+
+optional_policy(`
 	rpm_read_db(rhsmcertd_t)
 ')
 
diff --git a/policy/modules/services/ricci.te b/policy/modules/services/ricci.te
index 60ab1be..98b7619 100644
--- a/policy/modules/services/ricci.te
+++ b/policy/modules/services/ricci.te
@@ -20,7 +20,7 @@ files_tmp_file(ricci_tmp_t)
 
 # var/lib files
 type ricci_var_lib_t;
-files_type(ricci_var_lib_t)
+files_var_lib_file(ricci_var_lib_t)
 
 # log files
 type ricci_var_log_t;
@@ -38,7 +38,7 @@ role system_r types ricci_modcluster_t;
 
 # var/lib files
 type ricci_modcluster_var_lib_t;
-files_type(ricci_modcluster_var_lib_t)
+files_var_lib_file(ricci_modcluster_var_lib_t)
 
 # log files
 type ricci_modcluster_var_log_t;
diff --git a/policy/modules/services/rlogin.te b/policy/modules/services/rlogin.te
index 28b588b..d9857b8 100644
--- a/policy/modules/services/rlogin.te
+++ b/policy/modules/services/rlogin.te
@@ -72,7 +72,9 @@ fs_search_auto_mountpoints(rlogind_t)
 auth_login_pgm_domain(rlogind_t)
 auth_domtrans_chk_passwd(rlogind_t)
 auth_rw_login_records(rlogind_t)
+auth_signal_chk_passwd(rlogind_t)
 auth_use_nsswitch(rlogind_t)
+auth_can_read_shadow_passwords(rlogind_t)
 
 files_read_etc_files(rlogind_t)
 files_read_etc_runtime_files(rlogind_t)
diff --git a/policy/modules/services/roundup.te b/policy/modules/services/roundup.te
index 6a999c9..094518b 100644
--- a/policy/modules/services/roundup.te
+++ b/policy/modules/services/roundup.te
@@ -17,7 +17,7 @@ type roundup_var_run_t;
 files_pid_file(roundup_var_run_t)
 
 type roundup_var_lib_t;
-files_type(roundup_var_lib_t)
+files_var_lib_file(roundup_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/rpc.if b/policy/modules/services/rpc.if
index c374504..a8b34e4 100644
--- a/policy/modules/services/rpc.if
+++ b/policy/modules/services/rpc.if
@@ -248,6 +248,24 @@ interface(`rpc_domtrans_rpcd',`
 
 ########################################
 ## <summary>
+##	Send kill signals to rpcd.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rpc_kill_rpcd',`
+	gen_require(`
+		type rpcd_t;
+	')
+
+	allow $1 rpcd_t:process sigkill;
+')
+
+########################################
+## <summary>
 ##	Execute rpcd in the rcpd domain, and
 ##	allow the specified role the rpcd domain.
 ## </summary>
diff --git a/policy/modules/services/rpc.te b/policy/modules/services/rpc.te
index 1d33062..6642fed 100644
--- a/policy/modules/services/rpc.te
+++ b/policy/modules/services/rpc.te
@@ -142,6 +142,8 @@ corecmd_exec_shell(nfsd_t)
 
 corenet_tcp_bind_all_rpc_ports(nfsd_t)
 corenet_udp_bind_all_rpc_ports(nfsd_t)
+corenet_tcp_bind_nfs_port(nfsd_t)
+corenet_udp_bind_nfs_port(nfsd_t)
 
 dev_dontaudit_getattr_all_blk_files(nfsd_t)
 dev_dontaudit_getattr_all_chr_files(nfsd_t)
diff --git a/policy/modules/services/rpcbind.te b/policy/modules/services/rpcbind.te
index 2b44901..6f46faa 100644
--- a/policy/modules/services/rpcbind.te
+++ b/policy/modules/services/rpcbind.te
@@ -17,7 +17,7 @@ type rpcbind_var_run_t;
 files_pid_file(rpcbind_var_run_t)
 
 type rpcbind_var_lib_t;
-files_type(rpcbind_var_lib_t)
+files_var_lib_file(rpcbind_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/rshd.te b/policy/modules/services/rshd.te
index cbb0ce6..cf218b7 100644
--- a/policy/modules/services/rshd.te
+++ b/policy/modules/services/rshd.te
@@ -53,6 +53,7 @@ files_list_home(rshd_t)
 files_read_etc_files(rshd_t)
 files_search_tmp(rshd_t)
 
+auth_can_read_shadow_passwords(rshd_t)
 auth_login_pgm_domain(rshd_t)
 auth_write_login_records(rshd_t)
 
diff --git a/policy/modules/services/rsync.te b/policy/modules/services/rsync.te
index edf3e6a..376d2a3 100644
--- a/policy/modules/services/rsync.te
+++ b/policy/modules/services/rsync.te
@@ -182,3 +182,8 @@ optional_policy(`
 ')
 
 auth_can_read_shadow_passwords(rsync_t)
+
+optional_policy(`
+	swift_manage_data_files(rsync_t)
+    swift_manage_lock(rsync_t)
+')
diff --git a/policy/modules/services/rtas.fc b/policy/modules/services/rtas.fc
new file mode 100644
index 0000000..b1431d7
--- /dev/null
+++ b/policy/modules/services/rtas.fc
@@ -0,0 +1,13 @@
+/etc/rc\.d/init\.d/rtas_errd  --  gen_context(system_u:object_r:rtas_errd_initrc_exec_t,s0)
+
+/usr/sbin/rtas_errd    --  gen_context(system_u:object_r:rtas_errd_exec_t,s0)
+
+/var/lock/subsys/rtas_errd  --  gen_context(system_u:object_r:rtas_errd_var_lock_t)
+/var/lock/.*librtas  --  gen_context(system_u:object_r:rtas_errd_var_lock_t)
+
+/var/log/rtas_errd.*    --  gen_context(system_u:object_r:rtas_errd_log_t)
+/var/log/platform.*   --  gen_context(system_u:object_r:rtas_errd_log_t)
+/var/log/epow_status.*    --  gen_context(system_u:object_r:rtas_errd_log_t)
+
+/var/run/rtas_errd.*     --     gen_context(system_u:object_r:rtas_errd_var_run_t,s0)
+
diff --git a/policy/modules/services/rtas.if b/policy/modules/services/rtas.if
new file mode 100644
index 0000000..4f69605
--- /dev/null
+++ b/policy/modules/services/rtas.if
@@ -0,0 +1,131 @@
+
+## <summary>Platform diagnostics report firmware events.</summary>
+
+########################################
+## <summary>
+##	Execute rtas_errd in the rtas_errd domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`rtas_errd_domtrans',`
+	gen_require(`
+		type rtas_errd_t, rtas_errd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, rtas_errd_exec_t, rtas_errd_t)
+')
+
+########################################
+## <summary>
+##	Read rtas_errd's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`rtas_errd_read_log',`
+	gen_require(`
+		type rtas_errd_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, rtas_errd_log_t, rtas_errd_log_t)
+')
+
+########################################
+## <summary>
+##	Append to rtas_errd log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rtas_errd_append_log',`
+	gen_require(`
+		type rtas_errd_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, rtas_errd_log_t, rtas_errd_log_t)
+')
+
+########################################
+## <summary>
+##	Manage rtas_errd log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rtas_errd_manage_log',`
+	gen_require(`
+		type rtas_errd_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, rtas_errd_log_t, rtas_errd_log_t)
+	manage_files_pattern($1, rtas_errd_log_t, rtas_errd_log_t)
+	manage_lnk_files_pattern($1, rtas_errd_log_t, rtas_errd_log_t)
+')
+
+########################################
+## <summary>
+##	Read rtas_errd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rtas_errd_read_pid_files',`
+	gen_require(`
+		type rtas_errd_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, rtas_errd_var_run_t, rtas_errd_var_run_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an rtas_errd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rtas_errd_admin',`
+	gen_require(`
+		type rtas_errd_t;
+		type rtas_errd_log_t, rtas_errd_var_run_t;
+    	type rtas_errd_unit_file_t;
+	')
+
+	allow $1 rtas_errd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, rtas_errd_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, rtas_errd_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, rtas_errd_var_run_t)
+
+	admin_pattern($1, rtas_errd_unit_file_t)
+	allow $1 rtas_errd_unit_file_t:service all_service_perms;
+')
diff --git a/policy/modules/services/rtas.te b/policy/modules/services/rtas.te
new file mode 100644
index 0000000..dbf5c78
--- /dev/null
+++ b/policy/modules/services/rtas.te
@@ -0,0 +1,95 @@
+policy_module(rtas, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type rtas_errd_t;
+type rtas_errd_exec_t;
+init_daemon_domain(rtas_errd_t, rtas_errd_exec_t)
+
+type rtas_errd_log_t;
+logging_log_file(rtas_errd_log_t)
+
+type rtas_errd_var_run_t;
+files_pid_file(rtas_errd_var_run_t)
+
+type rtas_errd_var_lock_t;
+files_lock_file(rtas_errd_var_lock_t)
+
+type rtas_errd_initrc_exec_t;
+init_script_file(rtas_errd_initrc_exec_t)
+
+type rtas_errd_tmp_t;
+files_tmp_file(rtas_errd_tmp_t)
+
+type rtas_errd_tmpfs_t;
+files_tmpfs_file(rtas_errd_tmpfs_t)
+
+########################################
+#
+# rtas_errd local policy
+#
+
+allow rtas_errd_t self:capability { net_admin chown sys_admin };
+allow rtas_errd_t self:process { fork signull };
+allow rtas_errd_t self:fifo_file rw_fifo_file_perms;
+allow rtas_errd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(rtas_errd_t, rtas_errd_log_t, rtas_errd_log_t)
+manage_files_pattern(rtas_errd_t, rtas_errd_log_t, rtas_errd_log_t)
+manage_lnk_files_pattern(rtas_errd_t, rtas_errd_log_t, rtas_errd_log_t)
+logging_log_filetrans(rtas_errd_t, rtas_errd_log_t, { dir file lnk_file })
+
+manage_files_pattern(rtas_errd_t,rtas_errd_var_lock_t,rtas_errd_var_lock_t)
+manage_lnk_files_pattern(rtas_errd_t,rtas_errd_var_lock_t,rtas_errd_var_lock_t)
+files_lock_filetrans(rtas_errd_t,rtas_errd_var_lock_t, { dir file } )
+
+manage_dirs_pattern(rtas_errd_t, rtas_errd_var_run_t, rtas_errd_var_run_t)
+manage_files_pattern(rtas_errd_t, rtas_errd_var_run_t, rtas_errd_var_run_t)
+manage_lnk_files_pattern(rtas_errd_t, rtas_errd_var_run_t, rtas_errd_var_run_t)
+files_pid_filetrans(rtas_errd_t, rtas_errd_var_run_t, { dir file lnk_file })
+
+manage_files_pattern(rtas_errd_t, rtas_errd_tmp_t, rtas_errd_tmp_t)
+manage_dirs_pattern(rtas_errd_t, rtas_errd_tmp_t, rtas_errd_tmp_t)
+files_tmp_filetrans(rtas_errd_t, rtas_errd_tmp_t, { file dir })
+
+manage_files_pattern(rtas_errd_t, rtas_errd_tmpfs_t, rtas_errd_tmpfs_t)
+manage_dirs_pattern(rtas_errd_t, rtas_errd_tmpfs_t, rtas_errd_tmpfs_t)
+fs_tmpfs_filetrans(rtas_errd_t, rtas_errd_tmpfs_t, { file dir })
+
+kernel_read_all_sysctls(rtas_errd_t)
+kernel_read_system_state(rtas_errd_t)
+kernel_read_network_state(rtas_errd_t)
+
+domain_read_all_domains_state(rtas_errd_t)
+
+auth_use_nsswitch(rtas_errd_t)
+
+corecmd_exec_bin(rtas_errd_t)
+
+dev_read_rand(rtas_errd_t)
+dev_read_urand(rtas_errd_t)
+dev_read_raw_memory(rtas_errd_t)
+dev_write_raw_memory(rtas_errd_t)
+dev_read_sysfs(rtas_errd_t)
+dev_rw_nvram(rtas_errd_t)
+
+#files_manage_system_db_files(rtas_errd_t)  missing system_db_t
+
+logging_send_syslog_msg(rtas_errd_t)
+logging_read_generic_logs(rtas_errd_t)
+
+optional_policy(`
+    hostname_exec(rtas_errd_t)
+')
+
+optional_policy(`
+    rpm_exec(rtas_errd_t)
+    rpm_dontaudit_manage_db(rtas_errd_t)
+')
+
+optional_policy(`
+    unconfined_domain(rtas_errd_t)
+')
diff --git a/policy/modules/services/samba.fc b/policy/modules/services/samba.fc
index 5c21de2..62fb41d 100644
--- a/policy/modules/services/samba.fc
+++ b/policy/modules/services/samba.fc
@@ -56,7 +56,7 @@
 
 /var/run/winbindd(/.*)?			gen_context(system_u:object_r:winbind_var_run_t,s0)
 
-/var/spool/samba(/.*)?			gen_context(system_u:object_r:samba_var_t,s0)
+/var/spool/samba(/.*)?			gen_context(system_u:object_r:samba_spool_t,s0)
 
 ifndef(`enable_mls',`
 /var/lib/samba/scripts(/.*)?		gen_context(system_u:object_r:samba_unconfined_script_exec_t,s0)
diff --git a/policy/modules/services/samba.te b/policy/modules/services/samba.te
index e91cad7..d0e1c4d 100644
--- a/policy/modules/services/samba.te
+++ b/policy/modules/services/samba.te
@@ -81,7 +81,9 @@ gen_tunable(samba_share_nfs, false)
 ## </desc>
 gen_tunable(samba_share_fusefs, false)
 
-type nmbd_t;
+attribute samba_domain;
+
+type nmbd_t, samba_domain;
 type nmbd_exec_t;
 init_daemon_domain(nmbd_t, nmbd_exec_t)
 
@@ -97,7 +99,7 @@ init_script_file(samba_initrc_exec_t)
 type samba_log_t;
 logging_log_file(samba_log_t)
 
-type samba_net_t;
+type samba_net_t, samba_domain;
 type samba_net_exec_t;
 application_domain(samba_net_t, samba_net_exec_t)
 role system_r types samba_net_t;
@@ -111,15 +113,18 @@ files_type(samba_secrets_t)
 type samba_share_t; # customizable
 files_type(samba_share_t)
 
+type samba_spool_t;
+files_type(samba_spool_t)
+
 type samba_var_t;
 files_type(samba_var_t)
 
-type smbcontrol_t;
+type smbcontrol_t, samba_domain;
 type smbcontrol_exec_t;
 application_domain(smbcontrol_t, smbcontrol_exec_t)
 role system_r types smbcontrol_t;
 
-type smbd_t;
+type smbd_t, samba_domain;
 type smbd_exec_t;
 init_daemon_domain(smbd_t, smbd_exec_t)
 
@@ -135,7 +140,7 @@ domain_type(smbmount_t)
 type smbmount_exec_t;
 domain_entry_file(smbmount_t, smbmount_exec_t)
 
-type swat_t;
+type swat_t, samba_domain;
 type swat_exec_t;
 domain_type(swat_t)
 domain_entry_file(swat_t, swat_exec_t)
@@ -147,11 +152,11 @@ files_tmp_file(swat_tmp_t)
 type swat_var_run_t;
 files_pid_file(swat_var_run_t)
 
-type winbind_t;
+type winbind_t, samba_domain;
 type winbind_exec_t;
 init_daemon_domain(winbind_t, winbind_exec_t)
 
-type winbind_helper_t;
+type winbind_helper_t, samba_domain;
 domain_type(winbind_helper_t)
 role system_r types winbind_helper_t;
 
@@ -169,6 +174,13 @@ files_pid_file(winbind_var_run_t)
 
 ########################################
 #
+# samba_domain local policy
+#
+
+files_list_tmp(samba_domain)
+
+########################################
+#
 # Samba net local policy
 #
 allow samba_net_t self:capability { sys_chroot sys_nice dac_read_search dac_override };
@@ -193,6 +205,12 @@ manage_sock_files_pattern(samba_net_t, samba_var_t, samba_var_t)
 manage_lnk_files_pattern(samba_net_t, samba_var_t, samba_var_t)
 files_var_filetrans(samba_net_t, samba_var_t, dir)
 
+manage_dirs_pattern(smbd_t, samba_spool_t, samba_spool_t)
+manage_files_pattern(smbd_t, samba_spool_t, samba_spool_t)
+manage_lnk_files_pattern(smbd_t, samba_spool_t, samba_spool_t)
+manage_sock_files_pattern(smbd_t, samba_spool_t, samba_spool_t)
+files_spool_filetrans(smbd_t, samba_spool_t, dir)
+
 kernel_read_proc_symlinks(samba_net_t)
 kernel_read_system_state(samba_net_t)
 kernel_read_network_state(samba_net_t)
@@ -276,6 +294,8 @@ filetrans_pattern(smbd_t, samba_etc_t, samba_secrets_t, file)
 
 manage_dirs_pattern(smbd_t, samba_share_t, samba_share_t)
 manage_files_pattern(smbd_t, samba_share_t, samba_share_t)
+manage_fifo_files_pattern(smbd_t, samba_share_t, samba_share_t)
+manage_sock_files_pattern(smbd_t, samba_share_t, samba_share_t)
 manage_lnk_files_pattern(smbd_t, samba_share_t, samba_share_t)
 allow smbd_t samba_share_t:filesystem { getattr quotaget };
 
@@ -336,6 +356,8 @@ dev_dontaudit_getattr_usbfs_dirs(smbd_t)
 dev_getattr_all_blk_files(smbd_t)
 dev_getattr_all_chr_files(smbd_t)
 
+domain_dontaudit_signull_all_domains(smbd_t)
+
 fs_getattr_all_fs(smbd_t)
 fs_getattr_all_dirs(smbd_t)
 fs_get_xattr_fs_quotas(smbd_t)
@@ -915,6 +937,7 @@ dev_read_urand(winbind_t)
 
 fs_getattr_all_fs(winbind_t)
 fs_search_auto_mountpoints(winbind_t)
+fs_read_anon_inodefs_files(winbind_t)
 
 auth_domtrans_chk_passwd(winbind_t)
 auth_use_nsswitch(winbind_t)
diff --git a/policy/modules/services/sblim.fc b/policy/modules/services/sblim.fc
index d5c3c3f..e976fc6 100644
--- a/policy/modules/services/sblim.fc
+++ b/policy/modules/services/sblim.fc
@@ -1,6 +1,10 @@
+/etc/rc\.d/init\.d/gatherer	--	gen_context(system_u:object_r:sblim_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/sblim-sfcbd     --      gen_context(system_u:object_r:sblim_initrc_exec_t,s0)
 
-/usr/sbin/gatherd		--	gen_context(system_u:object_r:sblim_gatherd_exec_t,s0)
+/usr/sbin/gatherd	--	gen_context(system_u:object_r:sblim_gatherd_exec_t,s0)
+/usr/sbin/reposd	--	gen_context(system_u:object_r:sblim_reposd_exec_t,s0)
+/usr/sbin/sfcbd         --      gen_context(system_u:object_r:sblim_sfcbd_exec_t,s0)
 
-/usr/sbin/reposd		--	gen_context(system_u:object_r:sblim_reposd_exec_t,s0)
+/var/lib/sfcb(/.*)?             gen_context(system_u:object_r:sblim_var_lib_t,s0)
 
-/var/run/gather(/.*)?		gen_context(system_u:object_r:sblim_var_run_t,s0)
+/var/run/gather(/.*)?	gen_context(system_u:object_r:sblim_var_run_t,s0)
diff --git a/policy/modules/services/sblim.if b/policy/modules/services/sblim.if
index 863148b..7c115d3 100644
--- a/policy/modules/services/sblim.if
+++ b/policy/modules/services/sblim.if
@@ -1,17 +1,44 @@
+## <summary> Standards Based Linux Instrumentation for Manageability. </summary>
 
-## <summary> policy for SBLIM Gatherer </summary>
+######################################
+## <summary>
+##  Creates types and rules for a basic
+##  sblim daemon domain.
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+template(`sblim_domain_template',`
+    gen_require(`
+        attribute sblim_domain;
+    ')
+
+    type sblim_$1_t, sblim_domain;
+    type sblim_$1_exec_t;
+    init_daemon_domain(sblim_$1_t, sblim_$1_exec_t)
+
+	kernel_read_system_state(sblim_$1_t)
+
+	corenet_all_recvfrom_unlabeled(sblim_$1_t)
+	corenet_all_recvfrom_netlabel(sblim_$1_t)
+
+	logging_send_syslog_msg(sblim_$1_t)
+')
 
 ########################################
 ## <summary>
 ##	Transition to gatherd.
 ## </summary>
 ## <param name="domain">
-## <summary>
+##	<summary>
 ##	Domain allowed to transition.
-## </summary>
+##	</summary>
 ## </param>
 #
-interface(`sblim_gatherd_domtrans',`
+interface(`sblim_domtrans_gatherd',`
 	gen_require(`
 		type sblim_gatherd_t, sblim_gatherd_exec_t;
 	')
@@ -20,7 +47,6 @@ interface(`sblim_gatherd_domtrans',`
 	domtrans_pattern($1, sblim_gatherd_exec_t, sblim_gatherd_t)
 ')
 
-
 ########################################
 ## <summary>
 ##	Read gatherd PID files.
@@ -40,6 +66,83 @@ interface(`sblim_read_pid_files',`
 	allow $1 sblim_var_run_t:file read_file_perms;
 ')
 
+########################################
+## <summary>
+##	Connect to sblim_sfcb over a unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sblim_stream_connect_sfcbd',`
+	gen_require(`
+		type sblim_sfcb_t, sblim_var_lib_t;
+        type sblim_tmp_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, sblim_var_lib_t, sblim_var_lib_t, sblim_sfcb_t)
+	stream_connect_pattern($1, sblim_var_lib_t, sblim_tmp_t, sblim_tmp_t)
+')
+
+#######################################
+## <summary>
+##  Getattr on sblim executable.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`sblim_getattr_exec_sfcbd',`
+    gen_require(`
+        type sblim_sfcbd_exec_t;
+    ')
+
+	allow $1 sblim_sfcbd_exec_t:file getattr;
+')
+
+
+########################################
+## <summary>
+##	Connect to sblim_sfcb over a unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sblim_stream_connect_sfcb',`
+	gen_require(`
+		type sblim_sfcb_t, sblim_var_lib_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, sblim_var_lib_t, sblim_var_lib_t, sblim_sfcb_t)
+')
+
+#######################################
+## <summary>
+##	Allow read and write access to sblim semaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sblim_rw_semaphores_sfcbd',`
+	gen_require(`
+		type sblim_sfcbd_t;
+	')
+
+	allow $1 sblim_sfcbd_t:sem rw_sem_perms;
+')
+
 
 ########################################
 ## <summary>
@@ -51,6 +154,7 @@ interface(`sblim_read_pid_files',`
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
+## <rolecap/>
 #
 interface(`sblim_admin',`
 	gen_require(`
@@ -59,13 +163,12 @@ interface(`sblim_admin',`
 		type sblim_var_run_t;
 	')
 
-	allow $1 sblim_gatherd_t:process { ptrace signal_perms };
+	allow $1 sblim_gatherd_t:process signal_perms;
 	ps_process_pattern($1, sblim_gatherd_t)
 
-	allow $1 sblim_reposd_t:process { ptrace signal_perms };
-    ps_process_pattern($1, sblim_reposd_t)
+	allow $1 sblim_reposd_t:process signal_perms;
+	ps_process_pattern($1, sblim_reposd_t)
 
 	files_search_pids($1)
 	admin_pattern($1, sblim_var_run_t)
 ')
-
diff --git a/policy/modules/services/sblim.te b/policy/modules/services/sblim.te
index 869a139..e00cf16 100644
--- a/policy/modules/services/sblim.te
+++ b/policy/modules/services/sblim.te
@@ -1,4 +1,4 @@
-policy_module(sblim, 1.0.0)
+policy_module(sblim, 1.1.0)
 
 ########################################
 #
@@ -7,28 +7,75 @@ policy_module(sblim, 1.0.0)
 
 attribute sblim_domain;
 
-type sblim_gatherd_t, sblim_domain;
-type sblim_gatherd_exec_t;
-init_daemon_domain(sblim_gatherd_t, sblim_gatherd_exec_t)
+sblim_domain_template(gatherd)
 
-type sblim_reposd_t, sblim_domain;
-type sblim_reposd_exec_t;
-init_daemon_domain(sblim_reposd_t, sblim_reposd_exec_t)
+sblim_domain_template(reposd)
+
+sblim_domain_template(sfcbd)
+
+type sblim_initrc_exec_t;
+init_script_file(sblim_initrc_exec_t)
 
 type sblim_var_run_t;
 files_pid_file(sblim_var_run_t)
 
-########################################
+type sblim_var_lib_t;
+files_var_lib_file(sblim_var_lib_t)
+
+type sblim_tmp_t;
+files_tmp_file(sblim_tmp_t)
+
+type sblim_sfcb_tmpfs_t;
+files_tmpfs_file(sblim_sfcb_tmpfs_t)
+
+######################################
 #
-# sblim_gatherd local policy
+# Common sblim domain local policy
 #
 
-#needed by ps
-allow sblim_gatherd_t self:capability { sys_ptrace kill dac_override };
-allow sblim_gatherd_t self:process signal;
+allow sblim_domain self:tcp_socket create_stream_socket_perms;
 
+manage_dirs_pattern(sblim_domain, sblim_var_run_t, sblim_var_run_t)
+manage_files_pattern(sblim_domain, sblim_var_run_t, sblim_var_run_t)
+manage_sock_files_pattern(sblim_domain, sblim_var_run_t, sblim_var_run_t)
+files_pid_filetrans(sblim_domain, sblim_var_run_t,dir,"gather")
+
+manage_dirs_pattern(sblim_domain, sblim_var_lib_t, sblim_var_lib_t)
+manage_files_pattern(sblim_domain, sblim_var_lib_t, sblim_var_lib_t)
+manage_lnk_files_pattern(sblim_domain, sblim_var_lib_t, sblim_var_lib_t)
+files_var_lib_filetrans(sblim_domain, sblim_var_lib_t, { dir file lnk_file })
+
+manage_dirs_pattern(sblim_domain, sblim_tmp_t, sblim_tmp_t)
+manage_files_pattern(sblim_domain, sblim_tmp_t, sblim_tmp_t)
+manage_sock_files_pattern(sblim_domain, sblim_tmp_t, sblim_tmp_t)
+files_tmp_filetrans(sblim_domain, sblim_tmp_t, { dir file sock_file})
+
+kernel_read_network_state(sblim_domain)
+
+corenet_tcp_sendrecv_generic_if(sblim_domain)
+corenet_tcp_sendrecv_generic_node(sblim_domain)
+
+corenet_tcp_sendrecv_repository_port(sblim_domain)
+
+dev_read_sysfs(sblim_domain)
+dev_read_rand(sblim_domain)
+dev_read_urand(sblim_domain)
+
+files_read_etc_files(sblim_domain)
+
+miscfiles_read_localization(sblim_domain)
+
+########################################
+#
+# Gatherd local policy
+#
+
+allow sblim_gatherd_t self:capability { dac_override sys_nice };
+allow sblim_gatherd_t self:process { setsched signal };
 allow sblim_gatherd_t self:fifo_file rw_fifo_file_perms;
-allow sblim_gatherd_t self:unix_stream_socket create_stream_socket_perms;
+allow sblim_gatherd_t self:unix_stream_socket { accept listen };
+
+domtrans_pattern(sblim_gatherd_t, sblim_reposd_exec_t, sblim_reposd_t)
 
 kernel_read_fs_sysctls(sblim_gatherd_t)
 kernel_read_kernel_sysctls(sblim_gatherd_t)
@@ -36,80 +83,107 @@ kernel_read_kernel_sysctls(sblim_gatherd_t)
 corecmd_exec_bin(sblim_gatherd_t)
 corecmd_exec_shell(sblim_gatherd_t)
 
+corenet_sendrecv_repository_client_packets(sblim_gatherd_t)
 corenet_tcp_connect_repository_port(sblim_gatherd_t)
 
 dev_read_rand(sblim_gatherd_t)
 dev_read_urand(sblim_gatherd_t)
 
 domain_read_all_domains_state(sblim_gatherd_t)
+files_search_all_mountpoints(sblim_gatherd_t)
 
 fs_getattr_all_fs(sblim_gatherd_t)
+fs_search_cgroup_dirs(sblim_gatherd_t)
 
-term_getattr_pty_fs(sblim_gatherd_t)
+storage_raw_read_fixed_disk(sblim_gatherd_t)
+storage_raw_read_removable_device(sblim_gatherd_t)
 
 init_read_utmp(sblim_gatherd_t)
 
+logging_send_syslog_msg(sblim_gatherd_t)
+
+sysnet_dns_name_resolve(sblim_gatherd_t)
+
+term_getattr_pty_fs(sblim_gatherd_t)
+
 userdom_signull_unpriv_users(sblim_gatherd_t)
 
 optional_policy(`
-    locallogin_signull(sblim_gatherd_t)
+	locallogin_signull(sblim_gatherd_t)
 ')
 
 optional_policy(`
-    rpc_search_nfs_state_data(sblim_gatherd_t)
+	rpc_search_nfs_state_data(sblim_gatherd_t)
 ')
 
 optional_policy(`
 	ssh_signull(sblim_gatherd_t)
-    sysnet_dns_name_resolve(sblim_gatherd_t)
 ')
 
 optional_policy(`
+	virt_read_config(sblim_gatherd_t)
 	virt_stream_connect(sblim_gatherd_t)
 	virt_getattr_exec(sblim_gatherd_t)
 ')
 
 optional_policy(`
-    xen_stream_connect(sblim_gatherd_t)
-    xen_stream_connect_xenstore(sblim_gatherd_t)
-')
-
-optional_policy(`
-	unconfined_domain(sblim_gatherd_t)
+	xen_stream_connect(sblim_gatherd_t)
+	xen_stream_connect_xenstore(sblim_gatherd_t)
 ')
 
 #######################################
 #
-# sblim_reposd local policy
+# Reposd local policy
 #
 
-domtrans_pattern(sblim_gatherd_t, sblim_reposd_exec_t, sblim_reposd_t)
+corenet_tcp_bind_generic_node(sblim_reposd_t)
 
-corenet_tcp_bind_all_nodes(sblim_reposd_t)
+corenet_sendrecv_repository_server_packets(sblim_reposd_t)
 corenet_tcp_bind_repository_port(sblim_reposd_t)
 
-optional_policy(`
-    unconfined_domain(sblim_reposd_t)
-')
+logging_send_syslog_msg(sblim_reposd_t)
 
-######################################
+#######################################
 #
-# sblim_domain local policy
+# Sfcbd local policy
 #
 
-allow sblim_domain self:tcp_socket create_stream_socket_perms;
+allow sblim_sfcbd_t self:capability { sys_ptrace setgid };
+allow sblim_sfcbd_t self:process signal;
+allow sblim_sfcbd_t self:unix_stream_socket connectto;
+allow sblim_sfcbd_t self:sem create_sem_perms;
 
-manage_dirs_pattern(sblim_domain, sblim_var_run_t, sblim_var_run_t)
-manage_files_pattern(sblim_domain, sblim_var_run_t, sblim_var_run_t)
-manage_sock_files_pattern(sblim_domain, sblim_var_run_t, sblim_var_run_t)
+manage_dirs_pattern(sblim_sfcbd_t, sblim_sfcb_tmpfs_t, sblim_sfcb_tmpfs_t)
+manage_files_pattern(sblim_sfcbd_t, sblim_sfcb_tmpfs_t, sblim_sfcb_tmpfs_t)
+fs_tmpfs_filetrans(sblim_sfcbd_t, sblim_sfcb_tmpfs_t, { dir file })
 
-kernel_read_network_state(sblim_domain)
-kernel_read_system_state(sblim_domain)
+auth_use_nsswitch(sblim_sfcbd_t)
 
-dev_read_sysfs(sblim_domain)
+corenet_tcp_bind_pegasus_http_port(sblim_sfcbd_t)
+corenet_tcp_connect_pegasus_http_port(sblim_sfcbd_t)
+corenet_tcp_bind_pegasus_https_port(sblim_sfcbd_t)
+corenet_tcp_connect_pegasus_https_port(sblim_sfcbd_t)
 
-logging_send_syslog_msg(sblim_domain)
+corecmd_exec_shell(sblim_sfcbd_t)
+corecmd_exec_bin(sblim_sfcbd_t)
 
-files_read_etc_files(sblim_domain)
+dev_read_rand(sblim_sfcbd_t)
+dev_read_urand(sblim_sfcbd_t)
 
-miscfiles_read_localization(sblim_domain)
+domain_read_all_domains_state(sblim_sfcbd_t)
+domain_use_interactive_fds(sblim_sfcbd_t)
+
+optional_policy(`
+	virt_manage_config(sblim_sfcbd_t)
+	virt_stream_connect(sblim_sfcbd_t)
+	virt_getattr_exec(sblim_sfcbd_t)
+    virt_search_content(sblim_sfcbd_t)
+    virt_search_images(sblim_sfcbd_t)
+    virt_getattr_images(sblim_sfcbd_t)
+')
+
+
+optional_policy(`
+    rpm_exec(sblim_sfcbd_t)
+    rpm_dontaudit_manage_db(sblim_sfcbd_t)
+')
diff --git a/policy/modules/services/sensord.fc b/policy/modules/services/sensord.fc
index 3070d28..ea170a3 100644
--- a/policy/modules/services/sensord.fc
+++ b/policy/modules/services/sensord.fc
@@ -1,3 +1,8 @@
-/usr/sbin/sensord		--	gen_context(system_u:object_r:sensord_exec_t,s0)
 
-/var/run/sensord\.pid      --  gen_context(system_u:object_r:sensord_var_run_t,s0)
+/etc/rc\.d/init\.d/sensord	--	gen_context(system_u:object_r:sensord_initrc_exec_t,s0)
+
+/usr/sbin/sensord	--	gen_context(system_u:object_r:sensord_exec_t,s0)
+
+/var/log/sensor.*		gen_context(system_u:object_r:sensord_log_t,s0)
+
+/var/run/sensord\.pid	--	gen_context(system_u:object_r:sensord_var_run_t,s0)
diff --git a/policy/modules/services/sensord.te b/policy/modules/services/sensord.te
index f202f87..dc3f866 100644
--- a/policy/modules/services/sensord.te
+++ b/policy/modules/services/sensord.te
@@ -9,9 +9,15 @@ type sensord_t;
 type sensord_exec_t;
 init_daemon_domain(sensord_t, sensord_exec_t)
 
+type sensord_initrc_exec_t;
+init_script_file(sensord_initrc_exec_t)
+
 type sensord_var_run_t;
 files_pid_file(sensord_var_run_t)
 
+type sensord_log_t;
+logging_log_file(sensord_log_t)
+
 ########################################
 #
 # sensord local policy
@@ -20,6 +26,9 @@ files_pid_file(sensord_var_run_t)
 allow sensord_t self:fifo_file rw_fifo_file_perms;
 allow sensord_t self:unix_stream_socket create_stream_socket_perms;
 
+manage_files_pattern(sensord_t, sensord_log_t, sensord_log_t)
+logging_log_filetrans(sensord_t, sensord_log_t, file)
+
 manage_files_pattern(sensord_t, sensord_var_run_t, sensord_var_run_t)
 files_pid_filetrans(sensord_t, sensord_var_run_t, { file })
 
diff --git a/policy/modules/services/setroubleshoot.te b/policy/modules/services/setroubleshoot.te
index d79a90a..fcbb296 100644
--- a/policy/modules/services/setroubleshoot.te
+++ b/policy/modules/services/setroubleshoot.te
@@ -16,7 +16,7 @@ type setroubleshoot_fixit_exec_t;
 dbus_system_domain(setroubleshoot_fixit_t, setroubleshoot_fixit_exec_t)
 
 type setroubleshoot_var_lib_t;
-files_type(setroubleshoot_var_lib_t)
+files_var_lib_file(setroubleshoot_var_lib_t)
 
 # log files
 type setroubleshoot_var_log_t;
diff --git a/policy/modules/services/smartmon.te b/policy/modules/services/smartmon.te
index ccbcbef..3a7868b 100644
--- a/policy/modules/services/smartmon.te
+++ b/policy/modules/services/smartmon.te
@@ -67,6 +67,8 @@ corenet_udp_sendrecv_all_ports(fsdaemon_t)
 dev_read_sysfs(fsdaemon_t)
 dev_read_urand(fsdaemon_t)
 
+dev_rw_generic_chr_files(fsdaemon_t)
+
 domain_use_interactive_fds(fsdaemon_t)
 
 files_exec_etc_files(fsdaemon_t)
diff --git a/policy/modules/services/smokeping.te b/policy/modules/services/smokeping.te
index df7ad64..aca2e08 100644
--- a/policy/modules/services/smokeping.te
+++ b/policy/modules/services/smokeping.te
@@ -17,7 +17,7 @@ type smokeping_var_run_t;
 files_pid_file(smokeping_var_run_t)
 
 type smokeping_var_lib_t;
-files_type(smokeping_var_lib_t)
+files_var_lib_file(smokeping_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/smstools.te b/policy/modules/services/smstools.te
index 7b38016..65ba3f7 100644
--- a/policy/modules/services/smstools.te
+++ b/policy/modules/services/smstools.te
@@ -19,7 +19,7 @@ type smsd_log_t;
 logging_log_file(smsd_log_t)
 
 type smsd_var_lib_t;
-files_type(smsd_var_lib_t)
+files_var_lib_file(smsd_var_lib_t)
 
 type smsd_var_run_t;
 files_pid_file(smsd_var_run_t)
diff --git a/policy/modules/services/snmp.te b/policy/modules/services/snmp.te
index 7875ff6..efb6114 100644
--- a/policy/modules/services/snmp.te
+++ b/policy/modules/services/snmp.te
@@ -19,7 +19,7 @@ type snmpd_var_run_t;
 files_pid_file(snmpd_var_run_t)
 
 type snmpd_var_lib_t;
-files_type(snmpd_var_lib_t)
+files_var_lib_file(snmpd_var_lib_t)
 
 ########################################
 #
diff --git a/policy/modules/services/spamassassin.te b/policy/modules/services/spamassassin.te
index a3ad0bf..922e691 100644
--- a/policy/modules/services/spamassassin.te
+++ b/policy/modules/services/spamassassin.te
@@ -104,7 +104,7 @@ files_tmp_file(spamd_tmp_t)
 
 # var/lib files
 type spamd_var_lib_t;
-files_type(spamd_var_lib_t)
+files_var_lib_file(spamd_var_lib_t)
 
 type spamd_var_run_t;
 files_pid_file(spamd_var_run_t)
diff --git a/policy/modules/services/squid.fc b/policy/modules/services/squid.fc
index 6cc4a90..b238933 100644
--- a/policy/modules/services/squid.fc
+++ b/policy/modules/services/squid.fc
@@ -9,6 +9,6 @@
 /var/cache/squid(/.*)?		gen_context(system_u:object_r:squid_cache_t,s0)
 /var/log/squid(/.*)?		gen_context(system_u:object_r:squid_log_t,s0)
 /var/log/squidGuard(/.*)?	gen_context(system_u:object_r:squid_log_t,s0)
-/var/run/squid\.pid	--	gen_context(system_u:object_r:squid_var_run_t,s0)
+/var/run/squid.*	gen_context(system_u:object_r:squid_var_run_t,s0)
 /var/spool/squid(/.*)?		gen_context(system_u:object_r:squid_cache_t,s0)
 /var/squidGuard(/.*)?		gen_context(system_u:object_r:squid_cache_t,s0)
diff --git a/policy/modules/services/squid.te b/policy/modules/services/squid.te
index 4b7350d..890f9b2 100644
--- a/policy/modules/services/squid.te
+++ b/policy/modules/services/squid.te
@@ -79,8 +79,10 @@ manage_files_pattern(squid_t, squid_log_t, squid_log_t)
 manage_lnk_files_pattern(squid_t, squid_log_t, squid_log_t)
 logging_log_filetrans(squid_t, squid_log_t, { file dir })
 
+manage_dirs_pattern(squid_t, squid_var_run_t, squid_var_run_t)
 manage_files_pattern(squid_t, squid_var_run_t, squid_var_run_t)
-files_pid_filetrans(squid_t, squid_var_run_t, file)
+manage_sock_files_pattern(squid_t, squid_var_run_t, squid_var_run_t)
+files_pid_filetrans(squid_t, squid_var_run_t, { dir file sock_file })
 
 kernel_read_kernel_sysctls(squid_t)
 kernel_read_system_state(squid_t)
diff --git a/policy/modules/services/ssh.te b/policy/modules/services/ssh.te
index acb63d2..d223dda 100644
--- a/policy/modules/services/ssh.te
+++ b/policy/modules/services/ssh.te
@@ -44,6 +44,8 @@ gen_tunable(ssh_chroot_manage_apache_content,false)
 
 type chroot_user_t;
 domain_type(chroot_user_t)
+domain_subj_id_change_exemption(chroot_user_t)
+domain_role_change_exemption(chroot_user_t)
 role system_r types chroot_user_t;
 
 attribute ssh_server;
@@ -60,6 +62,7 @@ corecmd_executable_file(sshd_exec_t)
 ssh_server_template(sshd)
 init_daemon_domain(sshd_t, sshd_exec_t)
 mls_trusted_object(sshd_t)
+mls_process_write_all_levels(sshd_t)
 
 type sshd_initrc_exec_t;
 init_script_file(sshd_initrc_exec_t)
@@ -195,6 +198,8 @@ auth_use_nsswitch(ssh_t)
 
 miscfiles_read_localization(ssh_t)
 
+miscfiles_read_public_files(sshd_t)
+
 seutil_read_config(ssh_t)
 
 userdom_dontaudit_list_user_home_dirs(ssh_t)
@@ -230,6 +235,7 @@ tunable_policy(`use_fusefs_home_dirs',`
 tunable_policy(`use_nfs_home_dirs',`
 	fs_manage_nfs_dirs(ssh_t)
 	fs_manage_nfs_files(ssh_t)
+    fs_manage_nfs_symlinks(ssh_t)
 ')
 
 tunable_policy(`use_samba_home_dirs',`
@@ -302,6 +308,8 @@ fs_rw_cgroup_files(sshd_t)
 corenet_tcp_bind_xserver_port(sshd_t)
 corenet_sendrecv_xserver_server_packets(sshd_t)
 
+auth_can_read_shadow_passwords(sshd_t)
+
 userdom_read_user_home_content_files(sshd_t)
 userdom_read_user_home_content_symlinks(sshd_t)
 userdom_search_admin_dir(sshd_t)
@@ -470,6 +478,7 @@ userdom_use_user_terminals(ssh_keygen_t)
 tunable_policy(`use_nfs_home_dirs',`
     fs_manage_nfs_files(ssh_keygen_t)
     fs_manage_nfs_dirs(ssh_keygen_t)
+    fs_manage_nfs_symlinks(ssh_keygen_t)
 ')
 
 optional_policy(`
@@ -565,3 +574,8 @@ optional_policy(`
     ssh_rw_tcp_sockets(chroot_user_t)
     ssh_rw_dgram_sockets(chroot_user_t)
 ')
+
+optional_policy(`
+	unconfined_shell_domtrans(chroot_user_t)
+')
+
diff --git a/policy/modules/services/sssd.te b/policy/modules/services/sssd.te
index b90aede..f41d7be 100644
--- a/policy/modules/services/sssd.te
+++ b/policy/modules/services/sssd.te
@@ -17,7 +17,7 @@ type sssd_public_t;
 files_pid_file(sssd_public_t)
 
 type sssd_var_lib_t;
-files_type(sssd_var_lib_t)
+files_var_lib_file(sssd_var_lib_t)
 mls_trusted_object(sssd_var_lib_t)
 
 type sssd_var_log_t;
@@ -110,6 +110,7 @@ optional_policy(`
 
 optional_policy(`
 	kerberos_manage_host_rcache(sssd_t)
+    kerberos_rw_config(sssd_t)
 	kerberos_read_home_content(sssd_t)
 ')
 
diff --git a/policy/modules/services/stapserver.fc b/policy/modules/services/stapserver.fc
new file mode 100644
index 0000000..0ccce59
--- /dev/null
+++ b/policy/modules/services/stapserver.fc
@@ -0,0 +1,7 @@
+/usr/bin/stap-server		--	gen_context(system_u:object_r:stapserver_exec_t,s0)
+
+/var/lib/stap-server(/.*)?		gen_context(system_u:object_r:stapserver_var_lib_t,s0)
+
+/var/log/stap-server(/.*)?		gen_context(system_u:object_r:stapserver_log_t,s0)
+
+/var/run/stap-server(/.*)?		gen_context(system_u:object_r:stapserver_var_run_t,s0)
diff --git a/policy/modules/services/stapserver.if b/policy/modules/services/stapserver.if
new file mode 100644
index 0000000..80c6480
--- /dev/null
+++ b/policy/modules/services/stapserver.if
@@ -0,0 +1,151 @@
+
+## <summary> Instrumentation System Server </summary>
+
+########################################
+## <summary>
+##	Execute stapserver in the stapserver domain.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`stapserver_domtrans',`
+	gen_require(`
+		type stapserver_t, stapserver_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, stapserver_exec_t, stapserver_t)
+')
+########################################
+## <summary>
+##	Read stapserver's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`stapserver_read_log',`
+	gen_require(`
+		type stapserver_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, stapserver_log_t, stapserver_log_t)
+')
+
+########################################
+## <summary>
+##	Append to stapserver log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`stapserver_append_log',`
+	gen_require(`
+		type stapserver_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, stapserver_log_t, stapserver_log_t)
+')
+
+########################################
+## <summary>
+##	Manage stapserver log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`stapserver_manage_log',`
+	gen_require(`
+		type stapserver_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, stapserver_log_t, stapserver_log_t)
+	manage_files_pattern($1, stapserver_log_t, stapserver_log_t)
+	manage_lnk_files_pattern($1, stapserver_log_t, stapserver_log_t)
+')
+########################################
+## <summary>
+##	Read stapserver PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`stapserver_read_pid_files',`
+	gen_require(`
+		type stapserver_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 stapserver_var_run_t:file read_file_perms;
+')
+
+#######################################
+## <summary>
+##      Manage stapserver lib files
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`stapserver_manage_lib',`
+        gen_require(`
+                type stapserver_var_lib_t;
+        ')
+
+        manage_dirs_pattern($1, stapserver_var_lib_t, stapserver_var_lib_t)
+        manage_files_pattern($1, stapserver_var_lib_t, stapserver_var_lib_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an stapserver environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`stapserver_admin',`
+	gen_require(`
+		type stapserver_t;
+		type stapserver_log_t;
+		type stapserver_var_run_t;
+	')
+
+	allow $1 stapserver_t:process { ptrace signal_perms };
+	ps_process_pattern($1, stapserver_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, stapserver_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, stapserver_var_run_t)
+
+	optional_policy(`
+		systemd_passwd_agent_exec($1)
+		systemd_read_fifo_file_passwd_run($1)
+	')
+')
diff --git a/policy/modules/services/stapserver.te b/policy/modules/services/stapserver.te
new file mode 100644
index 0000000..7e0bf37
--- /dev/null
+++ b/policy/modules/services/stapserver.te
@@ -0,0 +1,113 @@
+policy_module(stapserver, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type stapserver_t;
+type stapserver_exec_t;
+init_daemon_domain(stapserver_t, stapserver_exec_t)
+
+type stapserver_var_lib_t;
+files_var_lib_file(stapserver_var_lib_t)
+
+type stapserver_log_t;
+logging_log_file(stapserver_log_t)
+
+type stapserver_var_run_t;
+files_pid_file(stapserver_var_run_t)
+
+type stapserver_tmp_t;
+files_tmp_file(stapserver_tmp_t)
+
+########################################
+#
+# stapserver local policy
+#
+
+#runuser
+allow stapserver_t self:capability { setuid setgid };
+allow stapserver_t self:process setsched;
+
+allow stapserver_t self:capability { dac_override kill sys_ptrace };
+allow stapserver_t self:process { setrlimit signal };
+
+allow stapserver_t self:fifo_file rw_fifo_file_perms;
+allow stapserver_t self:key write;
+allow stapserver_t self:unix_stream_socket create_stream_socket_perms;
+allow stapserver_t self:tcp_socket { accept listen };
+
+manage_dirs_pattern(stapserver_t, stapserver_var_lib_t, stapserver_var_lib_t)
+manage_files_pattern(stapserver_t, stapserver_var_lib_t, stapserver_var_lib_t)
+files_var_lib_filetrans(stapserver_t, stapserver_var_lib_t, dir)
+
+manage_dirs_pattern(stapserver_t, stapserver_log_t, stapserver_log_t)
+manage_files_pattern(stapserver_t, stapserver_log_t, stapserver_log_t)
+logging_log_filetrans(stapserver_t, stapserver_log_t, dir )
+
+manage_dirs_pattern(stapserver_t, stapserver_tmp_t, stapserver_tmp_t)
+manage_files_pattern(stapserver_t, stapserver_tmp_t, stapserver_tmp_t)
+manage_lnk_files_pattern(stapserver_t, stapserver_tmp_t, stapserver_tmp_t)
+files_tmp_filetrans(stapserver_t, stapserver_tmp_t, { file dir })
+
+manage_dirs_pattern(stapserver_t, stapserver_var_run_t, stapserver_var_run_t)
+manage_files_pattern(stapserver_t, stapserver_var_run_t, stapserver_var_run_t)
+files_pid_filetrans(stapserver_t, stapserver_var_run_t, dir )
+
+kernel_read_system_state(stapserver_t)
+kernel_read_kernel_sysctls(stapserver_t)
+
+corecmd_exec_bin(stapserver_t)
+corecmd_exec_shell(stapserver_t)
+
+domain_read_all_domains_state(stapserver_t)
+domain_use_interactive_fds(stapserver_t)
+
+dev_read_sysfs(stapserver_t)
+dev_read_rand(stapserver_t)
+dev_read_urand(stapserver_t)
+
+files_list_tmp(stapserver_t)
+files_search_kernel_modules(stapserver_t)
+
+fs_search_cgroup_dirs(stapserver_t)
+
+auth_use_nsswitch(stapserver_t)
+
+init_read_utmp(stapserver_t)
+
+logging_send_audit_msgs(stapserver_t)
+logging_send_syslog_msg(stapserver_t)
+
+miscfiles_read_localization(stapserver_t)
+
+#lspci
+miscfiles_read_hwdata(stapserver_t)
+
+userdom_use_user_terminals(stapserver_t)
+
+optional_policy(`
+    avahi_dbus_chat(stapserver_t)
+')
+
+optional_policy(`
+	consoletype_exec(stapserver_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(stapserver_t)
+')
+
+optional_policy(`
+	hostname_exec(stapserver_t)
+')
+
+optional_policy(`
+	plymouthd_exec_plymouth(stapserver_t)
+')
+
+optional_policy(`
+	rpm_exec(stapserver_t)
+')
+
diff --git a/policy/modules/services/swift.fc b/policy/modules/services/swift.fc
new file mode 100644
index 0000000..0768456
--- /dev/null
+++ b/policy/modules/services/swift.fc
@@ -0,0 +1,36 @@
+/usr/bin/swift-account-auditor		--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-account-reaper		--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-account-replicator	--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-account-server		--	gen_context(system_u:object_r:swift_exec_t,s0)
+
+/usr/bin/swift-container-auditor	--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-container-replicator	--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-container-server		--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-container-sync		--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-container-updater	--	gen_context(system_u:object_r:swift_exec_t,s0)
+
+/usr/bin/swift-object-auditor		--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-object-info		--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-object-replicator		--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-object-server		--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-object-updater		--	gen_context(system_u:object_r:swift_exec_t,s0)
+/usr/bin/swift-object-expirer		--	gen_context(system_u:object_r:swift_exec_t,s0)
+
+/usr/bin/swift-proxy-server         --  gen_context(system_u:object_r:swift_exec_t,s0)
+
+/etc/rc\.d/init\.d/openstack-swift-proxy      --  gen_context(system_u:object_r:swift_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/openstack-swift-object-expirer      --  gen_context(system_u:object_r:swift_initrc_exec_t,s0)
+
+/var/lock/swift.*                   gen_context(system_u:object_r:swift_lock_t,s0)
+/var/cache/swift(/.*)?			--	gen_context(system_u:object_r:swift_var_cache_t,s0)
+/var/run/swift(/.*)?			--	gen_context(system_u:object_r:swift_var_run_t,s0)
+
+/var/log/swift-startup.*    --  gen_context(system_u:object_r:swift_log_t,s0)
+
+# This seems to be a de-facto standard when using swift.
+/srv/node(/.*)?		gen_context(system_u:object_r:swift_data_t,s0)
+
+# This is specific to RHOS's packstack utility
+ifdef(`distro_redhat', `
+/srv/loopback-device(/.*)?		gen_context(system_u:object_r:swift_data_t,s0)
+')
diff --git a/policy/modules/services/swift.if b/policy/modules/services/swift.if
new file mode 100644
index 0000000..b0564fd
--- /dev/null
+++ b/policy/modules/services/swift.if
@@ -0,0 +1,98 @@
+
+## <summary>policy for swift</summary>
+
+########################################
+## <summary>
+##	Execute TEMPLATE in the swift domin.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`swift_domtrans',`
+	gen_require(`
+		type swift_t, swift_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, swift_exec_t, swift_t)
+')
+
+########################################
+## <summary>
+##	Read swift PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`swift_read_pid_files',`
+	gen_require(`
+		type swift_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, swift_var_run_t, swift_var_run_t)
+')
+
+########################################
+## <summary>
+##	Manage swift data files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`swift_manage_data_files',`
+	gen_require(`
+		type swift_data_t;
+	')
+
+	files_search_pids($1)
+	manage_files_pattern($1, swift_data_t, swift_data_t)
+	manage_dirs_pattern($1, swift_data_t, swift_data_t)
+')
+
+#####################################
+## <summary>
+##	Read and write swift lock files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`swift_manage_lock',`
+	gen_require(`
+		type swift_lock_t;
+	')
+
+	files_search_locks($1)
+    manage_files_pattern($1, swift_lock_t, swift_lock_t)
+')
+
+#######################################
+## <summary>
+##  Transition content labels to swift named content
+## </summary>
+## <param name="domain">
+##  <summary>
+##      Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`swift_filetrans_lock',`
+    gen_require(`
+        type swift_lock_t;
+    ')
+
+    files_lock_filetrans($1, swift_lock_t, file)
+')
+
diff --git a/policy/modules/services/swift.te b/policy/modules/services/swift.te
new file mode 100644
index 0000000..e67bfaf
--- /dev/null
+++ b/policy/modules/services/swift.te
@@ -0,0 +1,128 @@
+policy_module(swift, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+##  <p>
+##	Determine whether swift can
+##	connect to all TCP ports
+##	</p>
+## </desc>
+gen_tunable(swift_can_network, false)
+
+
+type swift_t;
+type swift_exec_t;
+init_daemon_domain(swift_t, swift_exec_t)
+
+type swift_log_t;
+logging_log_file(swift_log_t)
+
+type swift_lock_t;
+files_lock_file(swift_lock_t)
+
+type swift_tmp_t;
+files_tmp_file(swift_tmp_t)
+
+type swift_tmpfs_t;
+files_tmpfs_file(swift_tmpfs_t)
+
+type swift_var_cache_t;
+files_type(swift_var_cache_t)
+
+type swift_var_run_t;
+files_pid_file(swift_var_run_t)
+
+type swift_initrc_exec_t;
+init_script_file(swift_initrc_exec_t)
+
+type swift_data_t;
+files_type(swift_data_t)
+
+########################################
+#
+# swift local policy
+#
+
+allow swift_t self:capability { setuid setgid };
+allow swift_t self:process signal;
+
+allow swift_t self:fifo_file rw_fifo_file_perms;
+allow swift_t self:tcp_socket create_stream_socket_perms;
+allow swift_t self:unix_stream_socket create_stream_socket_perms;
+allow swift_t self:unix_dgram_socket create_socket_perms;
+
+manage_files_pattern(swift_t, swift_log_t, swift_log_t)
+logging_log_filetrans(swift_t, swift_log_t, { file })
+
+manage_dirs_pattern(swift_t, swift_lock_t, swift_lock_t)
+manage_files_pattern(swift_t, swift_lock_t, swift_lock_t)
+files_lock_filetrans(swift_t, swift_lock_t, { dir file })
+
+manage_dirs_pattern(swift_t, swift_tmp_t, swift_tmp_t)
+manage_files_pattern(swift_t, swift_tmp_t, swift_tmp_t)
+files_tmp_filetrans(swift_t, swift_tmp_t, { dir file })
+
+manage_dirs_pattern(swift_t, swift_tmpfs_t, swift_tmpfs_t)
+manage_files_pattern(swift_t, swift_tmpfs_t, swift_tmpfs_t)
+fs_tmpfs_filetrans(swift_t, swift_tmpfs_t, { dir file })
+
+manage_dirs_pattern(swift_t, swift_var_cache_t, swift_var_cache_t)
+manage_files_pattern(swift_t, swift_var_cache_t, swift_var_cache_t)
+manage_lnk_files_pattern(swift_t, swift_var_cache_t, swift_var_cache_t)
+files_var_filetrans(swift_t,swift_var_cache_t, { dir file })
+
+manage_dirs_pattern(swift_t, swift_var_run_t, swift_var_run_t)
+manage_files_pattern(swift_t, swift_var_run_t, swift_var_run_t)
+manage_lnk_files_pattern(swift_t, swift_var_run_t, swift_var_run_t)
+files_pid_filetrans(swift_t, swift_var_run_t, { dir file  })
+
+# swift makes use of rsync, so we need to give rsync permissions
+# to edit swift_data_t files as well as swift_t those permissions
+manage_dirs_pattern(swift_t, swift_data_t, swift_data_t)
+manage_files_pattern(swift_t, swift_data_t, swift_data_t)
+
+kernel_dgram_send(swift_t)
+kernel_read_system_state(swift_t)
+kernel_read_network_state(swift_t)
+
+# bug in swift
+corenet_tcp_bind_xserver_port(swift_t)
+corenet_tcp_bind_http_cache_port(swift_t)
+
+corenet_tcp_connect_xserver_port(swift_t)
+
+corecmd_exec_shell(swift_t)
+corecmd_exec_bin(swift_t)
+
+dev_read_urand(swift_t)
+
+domain_use_interactive_fds(swift_t)
+
+files_dontaudit_search_home(swift_t)
+
+fs_getattr_all_fs(swift_t)
+
+auth_use_nsswitch(swift_t)
+
+libs_exec_ldconfig(swift_t)
+
+logging_send_syslog_msg(swift_t)
+
+miscfiles_read_localization(swift_t)
+
+userdom_dontaudit_search_user_home_dirs(swift_t)
+
+tunable_policy(`swift_can_network',`
+	corenet_sendrecv_all_client_packets(swift_t)
+	corenet_tcp_connect_all_ports(swift_t)
+	corenet_tcp_sendrecv_all_ports(swift_t)
+')
+
+optional_policy(`
+    rpm_exec(swift_t)
+    rpm_dontaudit_manage_db(swift_t)
+')
diff --git a/policy/modules/services/tgtd.te b/policy/modules/services/tgtd.te
index 247c241..29ca61f 100644
--- a/policy/modules/services/tgtd.te
+++ b/policy/modules/services/tgtd.te
@@ -20,7 +20,7 @@ type tgtd_tmpfs_t;
 files_tmpfs_file(tgtd_tmpfs_t)
 
 type tgtd_var_lib_t;
-files_type(tgtd_var_lib_t)
+files_var_lib_file(tgtd_var_lib_t)
 
 type tgtd_var_run_t;
 files_pid_file(tgtd_var_run_t)
@@ -56,6 +56,7 @@ manage_sock_files_pattern(tgtd_t, tgtd_var_run_t,tgtd_var_run_t)
 files_pid_filetrans(tgtd_t,tgtd_var_run_t, { file sock_file })
 
 kernel_read_fs_sysctls(tgtd_t)
+kernel_read_network_state(tgtd_t)
 
 corenet_all_recvfrom_netlabel(tgtd_t)
 corenet_all_recvfrom_unlabeled(tgtd_t)
diff --git a/policy/modules/services/tomcat.fc b/policy/modules/services/tomcat.fc
new file mode 100644
index 0000000..852ae15
--- /dev/null
+++ b/policy/modules/services/tomcat.fc
@@ -0,0 +1,9 @@
+/usr/sbin/tomcat(6)?	--	gen_context(system_u:object_r:tomcat_exec_t,s0)
+
+/var/cache/tomcat6?(/.*)?		gen_context(system_u:object_r:tomcat_cache_t,s0)
+
+/var/lib/tomcat6?(/.*)?		gen_context(system_u:object_r:tomcat_var_lib_t,s0)
+
+/var/log/tomcat6?(/.*)?		gen_context(system_u:object_r:tomcat_log_t,s0)
+
+/var/run/tomcat6?\.pid		--	gen_context(system_u:object_r:tomcat_var_run_t,s0)
diff --git a/policy/modules/services/tomcat.if b/policy/modules/services/tomcat.if
new file mode 100644
index 0000000..fa4c1a4
--- /dev/null
+++ b/policy/modules/services/tomcat.if
@@ -0,0 +1,364 @@
+
+## <summary>policy for tomcat</summary>
+
+######################################
+## <summary>
+##      Creates types and rules for a basic
+##      tomcat daemon domain.
+## </summary>
+## <param name="prefix">
+##      <summary>
+##      Prefix for the domain.
+##      </summary>
+## </param>
+#
+template(`tomcat_domain_template',`
+        gen_require(`
+                attribute tomcat_domain;
+        ')
+
+	type $1_t, tomcat_domain;
+	type $1_exec_t;
+	init_daemon_domain($1_t, $1_exec_t)
+
+	type $1_cache_t;
+	files_type($1_cache_t)
+
+	type $1_log_t;
+	logging_log_file($1_log_t)
+
+	type $1_var_lib_t;
+	files_type($1_var_lib_t)
+
+	type $1_var_run_t;
+	files_pid_file($1_var_run_t)
+
+	type $1_tmp_t;
+	files_tmp_file($1_tmp_t)
+
+	##################################
+	#
+	# Local policy
+	#
+
+	manage_dirs_pattern($1_t, $1_cache_t, $1_cache_t)
+	manage_files_pattern($1_t, $1_cache_t, $1_cache_t)
+	manage_lnk_files_pattern($1_t, $1_cache_t, $1_cache_t)
+	files_var_filetrans($1_t, $1_cache_t, { dir file })
+
+	manage_dirs_pattern($1_t, $1_log_t, $1_log_t)
+	manage_files_pattern($1_t, $1_log_t, $1_log_t)
+	manage_lnk_files_pattern($1_t, $1_log_t, $1_log_t)
+	logging_log_filetrans($1_t, $1_log_t, { dir file })
+
+	manage_dirs_pattern($1_t, $1_var_lib_t, $1_var_lib_t)
+	manage_files_pattern($1_t, $1_var_lib_t, $1_var_lib_t)
+	manage_lnk_files_pattern($1_t, $1_var_lib_t, $1_var_lib_t)
+	files_var_lib_filetrans($1_t, $1_var_lib_t, { dir file lnk_file })
+
+	manage_dirs_pattern($1_t, $1_var_run_t, $1_var_run_t)
+	manage_files_pattern($1_t, $1_var_run_t, $1_var_run_t)
+	manage_lnk_files_pattern($1_t, $1_var_run_t, $1_var_run_t)
+	files_pid_filetrans($1_t, $1_var_run_t, { dir file lnk_file })
+
+	manage_dirs_pattern($1_t, $1_tmp_t, $1_tmp_t)
+	manage_files_pattern($1_t, $1_tmp_t, $1_tmp_t)
+	manage_fifo_files_pattern($1_t, $1_tmp_t, $1_tmp_t)
+	files_tmp_filetrans($1_t, $1_tmp_t, { file fifo_file dir })
+
+	can_exec($1_t, $1_exec_t)
+
+	kernel_read_system_state($1_t)
+
+	logging_send_syslog_msg($1_t)
+')
+
+########################################
+## <summary>
+##	Transition to tomcat.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`tomcat_domtrans',`
+	gen_require(`
+		type tomcat_t, tomcat_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, tomcat_exec_t, tomcat_t)
+')
+
+########################################
+## <summary>
+##	Search tomcat cache directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_search_cache',`
+	gen_require(`
+		type tomcat_cache_t;
+	')
+
+	allow $1 tomcat_cache_t:dir search_dir_perms;
+	files_search_var($1)
+')
+
+########################################
+## <summary>
+##	Read tomcat cache files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_read_cache_files',`
+	gen_require(`
+		type tomcat_cache_t;
+	')
+
+	files_search_var($1)
+	read_files_pattern($1, tomcat_cache_t, tomcat_cache_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	tomcat cache files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_manage_cache_files',`
+	gen_require(`
+		type tomcat_cache_t;
+	')
+
+	files_search_var($1)
+	manage_files_pattern($1, tomcat_cache_t, tomcat_cache_t)
+')
+
+########################################
+## <summary>
+##	Manage tomcat cache dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_manage_cache_dirs',`
+	gen_require(`
+		type tomcat_cache_t;
+	')
+
+	files_search_var($1)
+	manage_dirs_pattern($1, tomcat_cache_t, tomcat_cache_t)
+')
+
+########################################
+## <summary>
+##	Read tomcat's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`tomcat_read_log',`
+	gen_require(`
+		type tomcat_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, tomcat_log_t, tomcat_log_t)
+')
+
+########################################
+## <summary>
+##	Append to tomcat log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_append_log',`
+	gen_require(`
+		type tomcat_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, tomcat_log_t, tomcat_log_t)
+')
+
+########################################
+## <summary>
+##	Manage tomcat log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_manage_log',`
+	gen_require(`
+		type tomcat_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, tomcat_log_t, tomcat_log_t)
+	manage_files_pattern($1, tomcat_log_t, tomcat_log_t)
+	manage_lnk_files_pattern($1, tomcat_log_t, tomcat_log_t)
+')
+
+########################################
+## <summary>
+##	Search tomcat lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_search_lib',`
+	gen_require(`
+		type tomcat_var_lib_t;
+	')
+
+	allow $1 tomcat_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read tomcat lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_read_lib_files',`
+	gen_require(`
+		type tomcat_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, tomcat_var_lib_t, tomcat_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage tomcat lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_manage_lib_files',`
+	gen_require(`
+		type tomcat_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, tomcat_var_lib_t, tomcat_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage tomcat lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_manage_lib_dirs',`
+	gen_require(`
+		type tomcat_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, tomcat_var_lib_t, tomcat_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Read tomcat PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tomcat_read_pid_files',`
+	gen_require(`
+		type tomcat_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 tomcat_var_run_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an tomcat environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`tomcat_admin',`
+	gen_require(`
+		type tomcat_t;
+		type tomcat_cache_t;
+		type tomcat_log_t;
+		type tomcat_var_lib_t;
+		type tomcat_var_run_t;
+	type tomcat_unit_file_t;
+	')
+
+	allow $1 tomcat_t:process { ptrace signal_perms };
+	ps_process_pattern($1, tomcat_t)
+
+	files_search_var($1)
+	admin_pattern($1, tomcat_cache_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, tomcat_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, tomcat_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, tomcat_var_run_t)
+
+')
diff --git a/policy/modules/services/tomcat.te b/policy/modules/services/tomcat.te
new file mode 100644
index 0000000..06757c9
--- /dev/null
+++ b/policy/modules/services/tomcat.te
@@ -0,0 +1,64 @@
+policy_module(tomcat, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute tomcat_domain;
+
+tomcat_domain_template(tomcat)
+
+type tomcat_unit_file_t;
+
+#######################################
+#
+# tomcat local policy
+#
+
+optional_policy(`
+	unconfined_domain(tomcat_t)
+')
+
+########################################
+#
+# tomcat domain local policy
+#
+
+allow tomcat_t self:process execmem;
+allow tomcat_t self:process { signal signull };
+
+allow tomcat_t self:tcp_socket { accept listen };
+allow tomcat_domain self:fifo_file rw_fifo_file_perms;
+allow tomcat_domain self:unix_stream_socket create_stream_socket_perms;
+
+# we want to stay in a new tomcat domain if we call tomcat binary from a script
+# initrc_t@tomcat_test_exec_t->tomcat_test_t@tomcat_exec_t->tomcat_test_t
+can_exec(tomcat_domain, tomcat_exec_t)
+
+kernel_read_network_state(tomcat_domain)
+
+corecmd_exec_bin(tomcat_domain)
+corecmd_exec_shell(tomcat_domain)
+
+corenet_tcp_bind_generic_node(tomcat_domain)
+corenet_udp_bind_generic_node(tomcat_domain)
+corenet_tcp_bind_http_port(tomcat_domain)
+corenet_tcp_bind_http_cache_port(tomcat_domain)
+corenet_tcp_connect_http_port(tomcat_domain)
+
+dev_read_rand(tomcat_domain)
+dev_read_urand(tomcat_domain)
+dev_read_sysfs(tomcat_domain)
+
+domain_use_interactive_fds(tomcat_domain)
+
+fs_getattr_all_fs(tomcat_domain)
+fs_read_hugetlbfs_files(tomcat_domain)
+
+
+sysnet_dns_name_resolve(tomcat_domain)
+
+optional_policy(`
+	tomcat_search_lib(tomcat_domain)
+')
diff --git a/policy/modules/services/tor.te b/policy/modules/services/tor.te
index b9ea181..6702582 100644
--- a/policy/modules/services/tor.te
+++ b/policy/modules/services/tor.te
@@ -27,7 +27,7 @@ init_script_file(tor_initrc_exec_t)
 
 # var/lib/tor
 type tor_var_lib_t;
-files_type(tor_var_lib_t)
+files_var_lib_file(tor_var_lib_t)
 
 # log files
 type tor_var_log_t;
diff --git a/policy/modules/services/tuned.fc b/policy/modules/services/tuned.fc
index 7e4b51c..5b1ab8e 100644
--- a/policy/modules/services/tuned.fc
+++ b/policy/modules/services/tuned.fc
@@ -10,6 +10,6 @@
 
 /var/lock/subsys/ktune	--	gen_context(system_u:object_r:tuned_var_lock_t,s0)
 
-/var/run/tuned(/.*)?	--  gen_context(system_u:object_r:tuned_var_run_t,s0)
+/var/run/tuned(/.*)?      gen_context(system_u:object_r:tuned_var_run_t,s0)
 /var/run/tuned\.pid		--	gen_context(system_u:object_r:tuned_var_run_t,s0)
 /var/run/ktune\.save	--	gen_context(system_u:object_r:tuned_var_run_t,s0)
diff --git a/policy/modules/services/uuidd.te b/policy/modules/services/uuidd.te
index 819d84b..f6e1d28 100644
--- a/policy/modules/services/uuidd.te
+++ b/policy/modules/services/uuidd.te
@@ -13,7 +13,7 @@ type uuidd_initrc_exec_t;
 init_script_file(uuidd_initrc_exec_t)
 
 type uuidd_var_lib_t;
-files_type(uuidd_var_lib_t)
+files_var_lib_file(uuidd_var_lib_t)
 
 type uuidd_var_run_t;
 files_pid_file(uuidd_var_run_t)
diff --git a/policy/modules/services/varnishd.te b/policy/modules/services/varnishd.te
index 52d8918..15a1799 100644
--- a/policy/modules/services/varnishd.te
+++ b/policy/modules/services/varnishd.te
@@ -28,7 +28,7 @@ type varnishd_tmp_t;
 files_tmp_file(varnishd_tmp_t)
 
 type varnishd_var_lib_t;
-files_type(varnishd_var_lib_t)
+files_var_lib_file(varnishd_var_lib_t)
 
 type varnishd_var_run_t;
 files_pid_file(varnishd_var_run_t)
@@ -51,7 +51,7 @@ files_type(varnishlog_log_t)
 # varnishd local policy
 #
 
-allow varnishd_t self:capability { dac_override ipc_lock setuid setgid };
+allow varnishd_t self:capability { kill dac_override ipc_lock setuid setgid };
 dontaudit varnishd_t self:capability sys_tty_config;
 allow varnishd_t self:process signal;
 allow varnishd_t self:fifo_file rw_fifo_file_perms;
diff --git a/policy/modules/services/virt.fc b/policy/modules/services/virt.fc
index ffa630a..1d75d33 100644
--- a/policy/modules/services/virt.fc
+++ b/policy/modules/services/virt.fc
@@ -43,10 +43,13 @@ HOME_DIR/VirtualMachines/isos(/.*)? gen_context(system_u:object_r:virt_content_t
 
 # support for vdsm
 # bug 685061
-/usr/share/vdsm/vdsm    --  gen_context(system_u:object_r:virtd_exec_t,s0)
+/usr/share/vdsm/vdsm    --       gen_context(system_u:object_r:virtd_exec_t,s0)
+/usr/share/vdsm/respawn    --       gen_context(system_u:object_r:virtd_exec_t,s0)
+/usr/share/vdsm/supervdsmServer    --       gen_context(system_u:object_r:virtd_exec_t,s0)
 /var/run/vdsm(/.*)?     gen_context(system_u:object_r:virt_var_run_t,s0)
 /var/vdsm(/.*)?			gen_context(system_u:object_r:virt_var_run_t,s0)
 
+
 # support for AEOLUS project
 /usr/bin/imgfac\.py     --          gen_context(system_u:object_r:virtd_exec_t,s0)
 /usr/bin/imagefactory	--			gen_context(system_u:object_r:virtd_exec_t,s0)
diff --git a/policy/modules/services/virt.if b/policy/modules/services/virt.if
index 75fb4ce..5e6aa82 100644
--- a/policy/modules/services/virt.if
+++ b/policy/modules/services/virt.if
@@ -252,6 +252,45 @@ interface(`virt_manage_config',`
 
 ########################################
 ## <summary>
+##	Allow domain to search virt image files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`virt_search_content',`
+	gen_require(`
+		type virt_content_t;
+	')
+
+	virt_search_lib($1)
+	allow $1 virt_content_t:dir list_dir_perms;
+	list_dirs_pattern($1, virt_content_t, virt_content_t)
+')
+
+#######################################
+## <summary>
+##  Allow domain to search virt image direcories
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`virt_search_images',`
+    gen_require(`
+            attribute virt_image_type;
+    ')
+
+    virt_search_lib($1)
+    allow $1 virt_image_type:dir search_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Allow domain to manage virt image files
 ## </summary>
 ## <param name="domain">
@@ -525,6 +564,26 @@ interface(`virt_read_blk_images',`
 ##	</summary>
 ## </param>
 #
+interface(`virt_getattr_images',`
+	gen_require(`
+		type virt_var_lib_t;
+		attribute virt_image_type;
+	')
+
+	virt_search_lib($1)
+    getattr_files_pattern($1, virt_image_type, virt_image_type)
+')
+
+########################################
+## <summary>
+##	Allow domain to read virt image files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
 interface(`virt_read_images',`
 	gen_require(`
 		type virt_var_lib_t;
@@ -815,3 +874,102 @@ interface(`virt_write_tmp_sock',`
 
 	write_sock_files_pattern($1, virt_tmp_t, virt_tmp_t)
 ')
+
+#######################################
+## <summary>
+##	Execute Sandbox Files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`virt_exec_sandbox_files',`
+	gen_require(`
+		type svirt_sandbox_file_t;
+	')
+
+	can_exec($1, svirt_sandbox_file_t)
+')
+
+#######################################
+## <summary>
+##	Manage Sandbox Files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`virt_manage_sandbox_files',`
+	gen_require(`
+		type svirt_sandbox_file_t;
+	')
+
+	manage_dirs_pattern($1, svirt_sandbox_file_t, svirt_sandbox_file_t)
+	manage_files_pattern($1, svirt_sandbox_file_t, svirt_sandbox_file_t)
+	manage_fifo_files_pattern($1, svirt_sandbox_file_t, svirt_sandbox_file_t)
+	manage_chr_files_pattern($1, svirt_sandbox_file_t, svirt_sandbox_file_t)
+	manage_lnk_files_pattern($1, svirt_sandbox_file_t, svirt_sandbox_file_t)
+')
+
+#######################################
+## <summary>
+##	Relabel Sandbox File systems
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`virt_relabel_sandbox_filesystem',`
+	gen_require(`
+		type svirt_sandbox_file_t;
+	')
+
+	allow $1 svirt_sandbox_file_t:filesystem { relabelfrom relabelto };
+')
+
+#######################################
+## <summary>
+##	Mounton Sandbox Files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`virt_mounton_sandbox_file',`
+	gen_require(`
+		type svirt_sandbox_file_t;
+	')
+
+	allow $1 svirt_sandbox_file_t:dir_file_class_set mounton;
+')
+
+#######################################
+## <summary>
+##	Connect to virt over a unix domain stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`virt_stream_connect_sandbox',`
+	gen_require(`
+		attribute svirt_sandbox_domain;
+		type svirt_sandbox_file_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, svirt_sandbox_file_t, svirt_sandbox_file_t, svirt_sandbox_domain)
+	ps_process_pattern(svirt_sandbox_domain, $1)
+')
+
+
diff --git a/policy/modules/services/virt.te b/policy/modules/services/virt.te
index 97b7a48..19c1eda 100644
--- a/policy/modules/services/virt.te
+++ b/policy/modules/services/virt.te
@@ -109,7 +109,7 @@ type virt_var_run_t;
 files_pid_file(virt_var_run_t)
 
 type virt_var_lib_t;
-files_type(virt_var_lib_t)
+files_var_lib_file(virt_var_lib_t)
 files_mountpoint(virt_var_lib_t)
 
 type virtd_t;
@@ -747,7 +747,7 @@ userdom_use_inherited_user_ptys(virt_bridgehelper_t)
 # virt_qemu_ga local policy
 #
 
-allow virt_qemu_ga_t self:capability { sys_admin sys_tty_config };
+allow virt_qemu_ga_t self:capability { sys_admin sys_time sys_tty_config };
 
 allow virt_qemu_ga_t self:fifo_file rw_fifo_file_perms;
 allow virt_qemu_ga_t self:unix_stream_socket create_stream_socket_perms;
@@ -797,6 +797,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+        clock_domtrans(virt_qemu_ga_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(virt_qemu_ga_t)
 ')
 
@@ -869,8 +873,8 @@ files_pid_file(virt_lxc_var_run_t)
 typealias virt_lxc_var_run_t alias virtd_lxc_var_run_t;
 
 # virt lxc container files
-type svirt_lxc_file_t;
-files_mountpoint(svirt_lxc_file_t)
+type svirt_sandbox_file_t alias svirt_lxc_file_t;
+files_mountpoint(svirt_sandbox_file_t)
 
 #######################################
 #
@@ -896,14 +900,14 @@ manage_files_pattern(virtd_lxc_t, virt_lxc_var_run_t, virt_lxc_var_run_t)
 manage_sock_files_pattern(virtd_lxc_t, virt_lxc_var_run_t, virt_lxc_var_run_t)
 files_pid_filetrans(virtd_lxc_t, virt_lxc_var_run_t, { file dir })
 
-manage_dirs_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
-manage_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
-manage_chr_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
-manage_lnk_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
-manage_sock_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
-manage_fifo_files_pattern(virtd_lxc_t, svirt_lxc_file_t, svirt_lxc_file_t)
-allow virtd_lxc_t svirt_lxc_file_t:dir_file_class_set { relabelto relabelfrom };
-allow virtd_lxc_t svirt_lxc_file_t:filesystem { relabelto relabelfrom };
+manage_dirs_pattern(virtd_lxc_t, svirt_sandbox_file_t, svirt_sandbox_file_t)
+manage_files_pattern(virtd_lxc_t, svirt_sandbox_file_t, svirt_sandbox_file_t)
+manage_chr_files_pattern(virtd_lxc_t, svirt_sandbox_file_t, svirt_sandbox_file_t)
+manage_lnk_files_pattern(virtd_lxc_t, svirt_sandbox_file_t, svirt_sandbox_file_t)
+manage_sock_files_pattern(virtd_lxc_t, svirt_sandbox_file_t, svirt_sandbox_file_t)
+manage_fifo_files_pattern(virtd_lxc_t, svirt_sandbox_file_t, svirt_sandbox_file_t)
+allow virtd_lxc_t svirt_sandbox_file_t:dir_file_class_set { relabelto relabelfrom };
+allow virtd_lxc_t svirt_sandbox_file_t:filesystem { relabelto relabelfrom };
 
 storage_manage_fixed_disk(virtd_lxc_t)
 storage_rw_fuse(virtd_lxc_t)
@@ -929,7 +933,7 @@ files_mounton_non_security(virtd_lxc_t)
 files_mount_all_file_type_fs(virtd_lxc_t)
 files_unmount_all_file_type_fs(virtd_lxc_t)
 files_list_isid_type_dirs(virtd_lxc_t)
-files_root_filetrans(virtd_lxc_t, svirt_lxc_file_t, dir_file_class_set)
+files_root_filetrans(virtd_lxc_t, svirt_sandbox_file_t, dir_file_class_set)
 
 fs_getattr_all_fs(virtd_lxc_t)
 fs_manage_tmpfs_dirs(virtd_lxc_t)
diff --git a/policy/modules/services/xserver.fc b/policy/modules/services/xserver.fc
index a2e825c..bbcc1fa 100644
--- a/policy/modules/services/xserver.fc
+++ b/policy/modules/services/xserver.fc
@@ -9,7 +9,6 @@ HOME_DIR/\.fonts/auto(/.*)?	gen_context(system_u:object_r:user_fonts_cache_t,s0)
 HOME_DIR/\.fonts\.cache-.* --	gen_context(system_u:object_r:user_fonts_cache_t,s0)
 HOME_DIR/\.DCOP.* 	   --	gen_context(system_u:object_r:iceauth_home_t,s0)
 HOME_DIR/\.ICEauthority.* --	gen_context(system_u:object_r:iceauth_home_t,s0)
-HOME_DIR/\.ICEauthority.* --	gen_context(system_u:object_r:iceauth_home_t,s0)
 HOME_DIR/\.serverauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
 HOME_DIR/\.xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
 HOME_DIR/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
diff --git a/policy/modules/services/xserver.te b/policy/modules/services/xserver.te
index c2eb7aa..b7f62be 100644
--- a/policy/modules/services/xserver.te
+++ b/policy/modules/services/xserver.te
@@ -167,11 +167,11 @@ userdom_user_home_content(iceauth_home_t)
 
 type xauth_t;
 type xauth_exec_t;
+role system_r types xauth_t;
 typealias xauth_t alias { user_xauth_t staff_xauth_t sysadm_xauth_t };
 typealias xauth_t alias { auditadm_xauth_t secadm_xauth_t };
 typealias xauth_t alias { xguest_xauth_t unconfined_xauth_t };
-application_domain(xauth_t, xauth_exec_t)
-ubac_constrained(xauth_t)
+userdom_user_application_domain(xauth_t, xauth_exec_t)
 
 type xauth_home_t;
 typealias xauth_home_t alias { user_xauth_home_t staff_xauth_home_t sysadm_xauth_home_t };
@@ -195,6 +195,7 @@ files_associate_tmp(xconsole_device_t)
 
 type xdm_t;
 type xdm_exec_t;
+auth_can_read_shadow_passwords(xdm_t)
 auth_login_pgm_domain(xdm_t)
 init_domain(xdm_t, xdm_exec_t)
 init_system_domain(xdm_t, xdm_exec_t)
@@ -214,13 +215,13 @@ type xdm_spool_t;
 files_type(xdm_spool_t)
 
 type xdm_var_lib_t;
-files_type(xdm_var_lib_t)
+files_var_lib_file(xdm_var_lib_t)
 
 type xdm_var_run_t;
 files_pid_file(xdm_var_run_t)
 
 type xserver_var_lib_t;
-files_type(xserver_var_lib_t)
+files_var_lib_file(xserver_var_lib_t)
 
 type xserver_var_run_t;
 files_pid_file(xserver_var_run_t)
@@ -242,7 +243,7 @@ logging_log_file(xdm_log_t)
 
 # type for /var/lib/xkb
 type xkb_var_lib_t;
-files_type(xkb_var_lib_t)
+files_var_lib_file(xkb_var_lib_t)
 
 # Type for the executable used to start the X server, e.g. Xwrapper.
 type xserver_t;
@@ -602,7 +603,7 @@ files_dontaudit_write_usr_files(xdm_t)
 files_dontaudit_write_etc_dirs(xdm_t)
 files_dontaudit_getattr_all_dirs(xdm_t)
 files_dontaudit_getattr_all_symlinks(xdm_t)
-
+files_dontaudit_list_non_security(xdm_t)
 
 fs_getattr_all_fs(xdm_t)
 fs_search_auto_mountpoints(xdm_t)
@@ -631,6 +632,7 @@ term_relabel_unallocated_ttys(xdm_t)
 
 application_signal(xdm_t)
 
+auth_can_write_shadow_passwords(xdm_t)
 auth_domtrans_pam_console(xdm_t)
 auth_manage_pam_pid(xdm_t)
 auth_manage_pam_console_data(xdm_t)
@@ -670,6 +672,15 @@ userdom_dontaudit_write_admin_dir(xdm_t)
 xserver_rw_session(xdm_t, xdm_tmpfs_t)
 xserver_unconfined(xdm_t)
 
+tunable_policy(`authlogin_shadow',`
+    auth_tunable_manage_shadow(xdm_t)
+')
+
+tunable_policy(`authlogin_shadow',`
+    #allow to manage nopasswd
+    files_manage_etc_files(xdm_t)
+')
+
 tunable_policy(`use_nfs_home_dirs',`
 	fs_manage_nfs_dirs(xdm_t)
 	fs_manage_nfs_files(xdm_t)
@@ -801,6 +812,7 @@ optional_policy(`
 
 optional_policy(`
 	plymouthd_search_spool(xdm_t)
+    plymouthd_read_spool_files(xdm_t)
 	plymouthd_exec_plymouth(xdm_t)
 ')
 
diff --git a/policy/modules/services/zabbix.fc b/policy/modules/services/zabbix.fc
index 8879bb1..6799108 100644
--- a/policy/modules/services/zabbix.fc
+++ b/policy/modules/services/zabbix.fc
@@ -3,9 +3,20 @@
 
 /usr/(s)?bin/zabbix_server  --  gen_context(system_u:object_r:zabbix_exec_t,s0)
 /usr/(s)?bin/zabbix_agentd  --  gen_context(system_u:object_r:zabbix_agent_exec_t,s0)
+
 /usr/sbin/zabbix_server_mysql   --  gen_context(system_u:object_r:zabbix_exec_t,s0)
 /usr/sbin/zabbix_server_pgsql   --  gen_context(system_u:object_r:zabbix_exec_t,s0)
 /usr/sbin/zabbix_server_sqlite3 --  gen_context(system_u:object_r:zabbix_exec_t,s0)
+/usr/sbin/zabbix_proxy        --    gen_context(system_u:object_r:zabbix_exec_t,s0)
+/usr/sbin/zabbix_proxy_mysql   --  gen_context(system_u:object_r:zabbix_exec_t,s0)
+/usr/sbin/zabbix_proxy_pgsql   --  gen_context(system_u:object_r:zabbix_exec_t,s0)
+/usr/sbin/zabbix_proxy_sqlite3 --  gen_context(system_u:object_r:zabbix_exec_t,s0)
+
+/usr/lib/zabbix/externalscripts(/.*)? gen_context(system_u:object_r:zabbix_script_exec_t,s0)
+
+/var/lib/zabbixsrv(/.*)?	gen_context(system_u:object_r:zabbix_var_lib_t,s0)
+/var/lib/zabbix(/.*)?    gen_context(system_u:object_r:zabbix_var_lib_t,s0)
+/var/lib/zabbix/externalscripts(/.*)? gen_context(system_u:object_r:zabbix_script_exec_t,s0)
 
 /var/log/zabbix(/.*)?		gen_context(system_u:object_r:zabbix_log_t,s0)
 
diff --git a/policy/modules/services/zabbix.te b/policy/modules/services/zabbix.te
index e2f19b1..7627531 100644
--- a/policy/modules/services/zabbix.te
+++ b/policy/modules/services/zabbix.te
@@ -1,5 +1,4 @@
-
-policy_module(zabbix, 1.2.0)
+policy_module(zabbix, 1.6.0)
 
 ########################################
 #
@@ -8,54 +7,94 @@ policy_module(zabbix, 1.2.0)
 
 ## <desc>
 ##  <p>
-##  Determine whether zabbix can
-##  connect to all TCP ports
-##  </p>
+##	Determine whether zabbix can
+##	connect to all TCP ports
+##	</p>
 ## </desc>
 gen_tunable(zabbix_can_network, false)
 
-type zabbix_t;
+attribute zabbix_domain;
+
+type zabbix_t, zabbix_domain;
 type zabbix_exec_t;
 init_daemon_domain(zabbix_t, zabbix_exec_t)
 
 type zabbix_initrc_exec_t;
 init_script_file(zabbix_initrc_exec_t)
 
-type zabbix_agent_t;
+type zabbix_agent_t, zabbix_domain;
 type zabbix_agent_exec_t;
 init_daemon_domain(zabbix_agent_t, zabbix_agent_exec_t)
 
 type zabbix_agent_initrc_exec_t;
 init_script_file(zabbix_agent_initrc_exec_t)
 
-# log files
+type zabbixd_var_lib_t;
+files_var_lib_file(zabbixd_var_lib_t)
+
 type zabbix_log_t;
 logging_log_file(zabbix_log_t)
 
-# pid files
-type zabbix_var_run_t;
-files_pid_file(zabbix_var_run_t)
-
 type zabbix_tmp_t;
 files_tmp_file(zabbix_tmp_t)
 
 type zabbix_tmpfs_t;
 files_tmpfs_file(zabbix_tmpfs_t)
 
+type zabbix_var_lib_t;
+files_var_lib_file(zabbix_var_lib_t)
+
+type zabbix_var_run_t;
+files_pid_file(zabbix_var_run_t)
+
+type zabbix_script_t;
+type zabbix_script_exec_t;
+domain_type(zabbix_script_t)
+domain_entry_file(zabbix_script_t, zabbix_script_exec_t)
+application_executable_file(zabbix_script_exec_t)
+role system_r types zabbix_script_t;
+
 ########################################
 #
-# zabbix local policy
+# zabbix domain local policy
 #
 
-allow zabbix_t self:capability { dac_read_search dac_override setuid setgid };
-allow zabbix_t self:process { setsched signal_perms };
-allow zabbix_t self:tcp_socket create_stream_socket_perms;
-allow zabbix_t self:sem create_sem_perms;
-allow zabbix_t self:shm create_shm_perms;
-allow zabbix_t self:fifo_file rw_file_perms;
-allow zabbix_t self:unix_stream_socket create_stream_socket_perms;
+allow zabbix_domain self:capability { setuid setgid };
+allow zabbix_domain self:process { setpgid setsched getsched signal_perms };
+allow zabbix_domain self:fifo_file rw_fifo_file_perms;
+allow zabbix_domain self:sem create_sem_perms;
+allow zabbix_domain self:shm create_shm_perms;
+allow zabbix_domain self:tcp_socket { accept listen };
+allow zabbix_domain self:unix_stream_socket create_stream_socket_perms;
+
+kernel_read_all_sysctls(zabbix_domain)
+
+corenet_tcp_sendrecv_generic_if(zabbix_domain)
+corenet_tcp_sendrecv_generic_node(zabbix_domain)
+corenet_tcp_bind_generic_node(zabbix_domain)
+
+corecmd_exec_shell(zabbix_domain)
+corecmd_exec_bin(zabbix_domain)
+
+dev_read_sysfs(zabbix_domain)
+dev_read_urand(zabbix_domain)
+
+files_read_etc_files(zabbix_domain)
+
+miscfiles_read_localization(zabbix_domain)
+
+########################################
+#
+# Local policy
+#
+
+allow zabbix_t self:capability { dac_read_search dac_override };
+
+manage_dirs_pattern(zabbix_t, zabbix_var_lib_t, zabbix_var_lib_t)
+manage_files_pattern(zabbix_t, zabbix_var_lib_t, zabbix_var_lib_t)
+manage_lnk_files_pattern(zabbix_t, zabbix_var_lib_t, zabbix_var_lib_t)
+files_var_lib_filetrans(zabbix_t, zabbix_var_lib_t, dir, "zabbixsrv")
 
-# log files
 manage_dirs_pattern(zabbix_t, zabbix_log_t, zabbix_log_t)
 manage_files_pattern(zabbix_t, zabbix_log_t, zabbix_log_t)
 manage_lnk_files_pattern(zabbix_t, zabbix_log_t, zabbix_log_t)
@@ -68,19 +107,14 @@ files_tmp_filetrans(zabbix_t, zabbix_tmp_t, { dir file })
 rw_files_pattern(zabbix_t, zabbix_tmpfs_t, zabbix_tmpfs_t)
 fs_tmpfs_filetrans(zabbix_t, zabbix_tmpfs_t, file)
 
-# pid file
 manage_dirs_pattern(zabbix_t, zabbix_var_run_t, zabbix_var_run_t)
 manage_files_pattern(zabbix_t, zabbix_var_run_t, zabbix_var_run_t)
 files_pid_filetrans(zabbix_t, zabbix_var_run_t, { dir file })
 
-kernel_read_all_sysctls(zabbix_t)
 kernel_read_system_state(zabbix_t)
 
 corenet_all_recvfrom_unlabeled(zabbix_t)
 corenet_all_recvfrom_netlabel(zabbix_t)
-corenet_tcp_sendrecv_generic_if(zabbix_t)
-corenet_tcp_sendrecv_generic_node(zabbix_t)
-corenet_tcp_bind_generic_node(zabbix_t)
 
 corenet_sendrecv_ftp_client_packets(zabbix_t)
 corenet_tcp_connect_ftp_port(zabbix_t)
@@ -89,28 +123,22 @@ corenet_tcp_sendrecv_ftp_port(zabbix_t)
 corenet_sendrecv_http_client_packets(zabbix_t)
 corenet_tcp_connect_http_port(zabbix_t)
 corenet_tcp_sendrecv_http_port(zabbix_t)
+corenet_tcp_connect_smtp_port(zabbix_t)
 
 corenet_sendrecv_zabbix_server_packets(zabbix_t)
 corenet_tcp_bind_zabbix_port(zabbix_t)
 corenet_tcp_sendrecv_zabbix_port(zabbix_t)
 
-corecmd_exec_bin(zabbix_t)
-corecmd_exec_shell(zabbix_t)
-
-dev_read_urand(zabbix_t)
-
 auth_use_nsswitch(zabbix_t)
 
-files_read_etc_files(zabbix_t)
-
-miscfiles_read_localization(zabbix_t)
-
 zabbix_agent_tcp_connect(zabbix_t)
 
+logging_send_syslog_msg(zabbix_t)
+
 tunable_policy(`zabbix_can_network',`
-    corenet_sendrecv_all_client_packets(zabbix_t)
-    corenet_tcp_connect_all_ports(zabbix_t)
-    corenet_tcp_sendrecv_all_ports(zabbix_t)
+	corenet_sendrecv_all_client_packets(zabbix_domain)
+	corenet_tcp_connect_all_ports(zabbix_domain)
+	corenet_tcp_sendrecv_all_ports(zabbix_domain)
 ')
 
 optional_policy(`
@@ -118,16 +146,17 @@ optional_policy(`
 ')
 
 optional_policy(`
-    netutils_domtrans_ping(zabbix_t)
+	netutils_domtrans_ping(zabbix_t)
 ')
 
 optional_policy(`
 	postgresql_stream_connect(zabbix_t)
+	postgresql_tcp_connect(zabbix_t)
 ')
 
 optional_policy(`
-    snmp_read_snmp_var_lib_files(zabbix_t)
-    snmp_read_snmp_var_lib_dirs(zabbix_t)
+	snmp_read_snmp_var_lib_files(zabbix_t)
+	snmp_read_snmp_var_lib_dirs(zabbix_t)
 ')
 
 ########################################
@@ -135,14 +164,6 @@ optional_policy(`
 # Agent local policy
 #
 
-allow zabbix_agent_t self:capability { setuid setgid };
-allow zabbix_agent_t self:process { setpgid setsched getsched signal };
-allow zabbix_agent_t self:fifo_file rw_fifo_file_perms;
-allow zabbix_agent_t self:sem create_sem_perms;
-allow zabbix_agent_t self:shm create_shm_perms;
-allow zabbix_agent_t self:tcp_socket { accept listen };
-allow zabbix_agent_t self:unix_stream_socket create_stream_socket_perms;
-
 manage_files_pattern(zabbix_agent_t, zabbix_log_t, zabbix_log_t)
 
 rw_files_pattern(zabbix_agent_t, zabbix_tmpfs_t, zabbix_tmpfs_t)
@@ -151,19 +172,13 @@ fs_tmpfs_filetrans(zabbix_agent_t, zabbix_tmpfs_t, file)
 manage_files_pattern(zabbix_agent_t, zabbix_var_run_t, zabbix_var_run_t)
 files_pid_filetrans(zabbix_agent_t, zabbix_var_run_t, file)
 
-kernel_read_all_sysctls(zabbix_agent_t)
 kernel_read_system_state(zabbix_agent_t)
 kernel_read_network_state(zabbix_agent_t)
 
-corecmd_exec_shell(zabbix_agent_t)
-corecmd_exec_bin(zabbix_agent_t)
-corecmd_read_all_executables(zabbix_agent_t)
-
 corenet_all_recvfrom_unlabeled(zabbix_agent_t)
 corenet_all_recvfrom_netlabel(zabbix_agent_t)
-corenet_tcp_sendrecv_generic_if(zabbix_agent_t)
-corenet_tcp_sendrecv_generic_node(zabbix_agent_t)
-corenet_tcp_bind_generic_node(zabbix_agent_t)
+
+corecmd_read_all_executables(zabbix_agent_t)
 
 corenet_sendrecv_zabbix_agent_server_packets(zabbix_agent_t)
 corenet_tcp_bind_zabbix_agent_port(zabbix_agent_t)
@@ -177,8 +192,6 @@ corenet_sendrecv_zabbix_client_packets(zabbix_agent_t)
 corenet_tcp_connect_zabbix_port(zabbix_agent_t)
 corenet_tcp_sendrecv_zabbix_port(zabbix_agent_t)
 
-dev_read_sysfs(zabbix_agent_t)
-
 dev_getattr_all_blk_files(zabbix_agent_t)
 dev_getattr_all_chr_files(zabbix_agent_t)
 
@@ -190,6 +203,8 @@ files_read_all_symlinks(zabbix_agent_t)
 
 fs_getattr_all_fs(zabbix_agent_t)
 
+auth_use_nsswitch(zabbix_agent_t)
+
 init_read_utmp(zabbix_agent_t)
 
 logging_search_logs(zabbix_agent_t)
@@ -198,24 +213,35 @@ sysnet_dns_name_resolve(zabbix_agent_t)
 
 zabbix_tcp_connect(zabbix_agent_t)
 
-miscfiles_read_localization(zabbix_agent_t)
+optional_policy(`
+	dmidecode_domtrans(zabbix_agent_t)
+')
 
 optional_policy(`
-    dmidecode_domtrans(zabbix_agent_t)
+	hostname_exec(zabbix_agent_t)
 ')
 
 optional_policy(`
-    hostname_exec(zabbix_agent_t)
+    unconfined_domain(zabbix_agent_t)
 ')
 
-#probably should be used
-#optional_policy(`
-#    unconfined_domain(zabbix_agent_t)
-#')
+#######################################
+#
+# zabbix_script_t local policy
+#
 
-tunable_policy(`zabbix_can_network',`
-    corenet_sendrecv_all_client_packets(zabbix_agent_t)
-    corenet_tcp_connect_all_ports(zabbix_agent_t)
-    corenet_tcp_sendrecv_all_ports(zabbix_agent_t)
+domtrans_pattern(zabbix_t, zabbix_script_exec_t, zabbix_script_t)
+
+allow zabbix_t zabbix_script_exec_t:dir search_dir_perms;
+allow zabbix_t zabbix_script_exec_t:dir read_file_perms;
+allow zabbix_t zabbix_script_exec_t:file ioctl;
+
+init_domtrans_script(zabbix_script_t)
+
+optional_policy(`
+     mta_send_mail(zabbix_script_t)
 ')
 
+optional_policy(`
+    unconfined_domain(zabbix_script_t)
+    ')
diff --git a/policy/modules/services/zarafa.fc b/policy/modules/services/zarafa.fc
index 6a30507..6ebf654 100644
--- a/policy/modules/services/zarafa.fc
+++ b/policy/modules/services/zarafa.fc
@@ -3,7 +3,8 @@
 /usr/bin/zarafa-dagent		--	gen_context(system_u:object_r:zarafa_deliver_exec_t,s0)
 /usr/bin/zarafa-gateway		--	gen_context(system_u:object_r:zarafa_gateway_exec_t,s0)
 /usr/bin/zarafa-ical		--	gen_context(system_u:object_r:zarafa_ical_exec_t,s0)
-/usr/bin/zarafa-indexer		--	gen_context(system_u:object_r:zarafa_indexer_exec_t,s0)
+/usr/bin/zarafa-search		--	gen_context(system_u:object_r:zarafa_indexer_exec_t,s0)
+/usr/bin/zarafa-indexer     --  gen_context(system_u:object_r:zarafa_indexer_exec_t,s0)
 /usr/bin/zarafa-monitor		--	gen_context(system_u:object_r:zarafa_monitor_exec_t,s0)
 /usr/bin/zarafa-server		--	gen_context(system_u:object_r:zarafa_server_exec_t,s0)
 /usr/bin/zarafa-spooler		--	gen_context(system_u:object_r:zarafa_spooler_exec_t,s0)
@@ -15,7 +16,8 @@
 /var/log/zarafa/dagent\.log.*		--	gen_context(system_u:object_r:zarafa_deliver_log_t,s0)
 /var/log/zarafa/gateway\.log.*	--	gen_context(system_u:object_r:zarafa_gateway_log_t,s0)
 /var/log/zarafa/ical\.log.*	--	gen_context(system_u:object_r:zarafa_ical_log_t,s0)
-/var/log/zarafa/indexer\.log.*	--	gen_context(system_u:object_r:zarafa_indexer_log_t,s0)
+/var/log/zarafa/search\.log.*	--	gen_context(system_u:object_r:zarafa_indexer_log_t,s0)
+/var/log/zarafa/indexer\.log.*  --  gen_context(system_u:object_r:zarafa_indexer_log_t,s0)
 /var/log/zarafa/monitor\.log.*	--	gen_context(system_u:object_r:zarafa_monitor_log_t,s0)
 /var/log/zarafa/server\.log.*	--	gen_context(system_u:object_r:zarafa_server_log_t,s0)
 /var/log/zarafa/spooler\.log.*	--	gen_context(system_u:object_r:zarafa_spooler_log_t,s0)
@@ -24,7 +26,9 @@
 /var/run/zarafa-dagent\.pid		--	gen_context(system_u:object_r:zarafa_deliver_var_run_t,s0)
 /var/run/zarafa-gateway\.pid	--	gen_context(system_u:object_r:zarafa_gateway_var_run_t,s0)
 /var/run/zarafa-ical\.pid	--	gen_context(system_u:object_r:zarafa_ical_var_run_t,s0)
-/var/run/zarafa-indexer		-s	gen_context(system_u:object_r:zarafa_indexer_var_run_t,s0)
+/var/run/zarafa-search		-s	gen_context(system_u:object_r:zarafa_indexer_var_run_t,s0)
+/var/run/zarafa-search\.pid    --  gen_context(system_u:object_r:zarafa_indexer_var_run_t,s0)
+/var/run/zarafa-indexer     -s  gen_context(system_u:object_r:zarafa_indexer_var_run_t,s0)
 /var/run/zarafa-indexer\.pid    --  gen_context(system_u:object_r:zarafa_indexer_var_run_t,s0)
 /var/run/zarafa-monitor\.pid	--	gen_context(system_u:object_r:zarafa_monitor_var_run_t,s0)
 /var/run/zarafa-server\.pid	--	gen_context(system_u:object_r:zarafa_server_var_run_t,s0)
diff --git a/policy/modules/services/zarafa.if b/policy/modules/services/zarafa.if
index b7a3690..d409e2d 100644
--- a/policy/modules/services/zarafa.if
+++ b/policy/modules/services/zarafa.if
@@ -84,6 +84,23 @@ interface(`zarafa_domtrans_deliver',`
 
 ########################################
 ## <summary>
+##	Read zarafa_deliver executable.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`zarafa_read_deliver_exec',`
+	gen_require(`
+		type zarafa_deliver_exec_t;
+	')
+    allow $1 zarafa_deliver_exec_t:file read_file_perms;
+')
+
+########################################
+## <summary>
 ##	Execute a domain transition to run zarafa_server.
 ## </summary>
 ## <param name="domain">
@@ -140,3 +157,25 @@ interface(`zarafa_manage_lib_files',`
 	manage_lnk_files_pattern($1, zarafa_var_lib_t, zarafa_var_lib_t)
     manage_dirs_pattern($1, zarafa_var_lib_t, zarafa_var_lib_t)
 ')
+
+####################################
+## <summary>
+##  Allow the specified domain to manage
+##  zarafa /var/lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`zarafa_read_lib_files',`
+    gen_require(`
+        type zarafa_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    read_files_pattern($1, zarafa_var_lib_t, zarafa_var_lib_t)
+	read_lnk_files_pattern($1, zarafa_var_lib_t, zarafa_var_lib_t)
+    list_dirs_pattern($1, zarafa_var_lib_t, zarafa_var_lib_t)
+')
diff --git a/policy/modules/services/zebra.te b/policy/modules/services/zebra.te
index c23f9a1..52687ea 100644
--- a/policy/modules/services/zebra.te
+++ b/policy/modules/services/zebra.te
@@ -93,8 +93,12 @@ corenet_sendrecv_router_server_packets(zebra_t)
 dev_associate_usbfs(zebra_var_run_t)
 dev_list_all_dev_nodes(zebra_t)
 dev_read_sysfs(zebra_t)
+dev_read_urand(zebra_t)
 dev_rw_zero(zebra_t)
 
+files_dontaudit_getattr_all_dirs(zebra_t)
+files_dontaudit_getattr_all_files(zebra_t)
+
 fs_getattr_all_fs(zebra_t)
 fs_search_auto_mountpoints(zebra_t)
 
diff --git a/policy/modules/system/application.te b/policy/modules/system/application.te
index 83919fb..ad31686 100644
--- a/policy/modules/system/application.te
+++ b/policy/modules/system/application.te
@@ -10,6 +10,7 @@ attribute application_exec_type;
 userdom_inherit_append_user_home_content_files(application_domain_type)
 userdom_inherit_append_admin_home_files(application_domain_type)
 userdom_inherit_append_user_tmp_files(application_domain_type)
+userdom_rw_inherited_user_tmp_files(application_domain_type)
 logging_inherit_append_all_logs(application_domain_type)
 
 files_dontaudit_search_all_dirs(application_domain_type)
diff --git a/policy/modules/system/authlogin.fc b/policy/modules/system/authlogin.fc
index ac4f97f..83c0226 100644
--- a/policy/modules/system/authlogin.fc
+++ b/policy/modules/system/authlogin.fc
@@ -4,8 +4,6 @@
 /etc/\.pwd\.lock	--	gen_context(system_u:object_r:shadow_t,s0)
 /etc/group\.lock	--	gen_context(system_u:object_r:shadow_t,s0)
 /etc/gshadow.*		--	gen_context(system_u:object_r:shadow_t,s0)
-/etc/security/opasswd   --      gen_context(system_u:object_r:shadow_t,s0)
-/etc/security/opasswd\.old      --      gen_context(system_u:object_r:shadow_t,s0)
 /etc/passwd\.lock	--	gen_context(system_u:object_r:shadow_t,s0)
 /etc/passwd\.adjunct.* --      gen_context(system_u:object_r:shadow_t,s0)
 /etc/shadow.*		--	gen_context(system_u:object_r:shadow_t,s0)
@@ -28,6 +26,7 @@ ifdef(`distro_gentoo', `
 ')
 
 /var/opt/quest/vas/vasd(/.*)?  gen_context(system_u:object_r:var_auth_t,s0)
+/var/ace(/.*)?			gen_context(system_u:object_r:var_auth_t,s0)
 
 /var/cache/coolkey(/.*)?	gen_context(system_u:object_r:auth_cache_t,s0)
 
@@ -36,6 +35,7 @@ ifdef(`distro_gentoo', `
 /var/lib/abl(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
 /var/lib/pam_shield(/.*)?      gen_context(system_u:object_r:var_auth_t,s0)
 /var/lib/pam_ssh(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
+/var/lib/google-authenticator(/.*)?	gen_context(system_u:object_r:var_auth_t,s0)
 
 /var/log/btmp.*		--	gen_context(system_u:object_r:faillog_t,s0)
 /var/log/dmesg		--	gen_context(system_u:object_r:var_log_t,s0)
@@ -45,9 +45,14 @@ ifdef(`distro_gentoo', `
 /var/log/tallylog.*	--	gen_context(system_u:object_r:faillog_t,s0)
 /var/log/wtmp.*		--	gen_context(system_u:object_r:wtmp_t,s0)
 
+/var/lib/rsa(/.*)? 		gen_context(system_u:object_r:var_auth_t,s0)
+/var/rsa(/.*)?	 		gen_context(system_u:object_r:var_auth_t,s0)
+
 /var/run/console(/.*)?	 	gen_context(system_u:object_r:pam_var_console_t,s0)
 /var/run/faillock(/.*)?     gen_context(system_u:object_r:faillog_t,s0)
 /var/run/pam_mount(/.*)?	gen_context(system_u:object_r:pam_var_run_t,s0)
 /var/run/pam_ssh(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
 /var/run/sepermit(/.*)? 	gen_context(system_u:object_r:pam_var_run_t,s0)
 /var/run/sudo(/.*)?		gen_context(system_u:object_r:pam_var_run_t,s0)
+/var/(db|adm)/sudo(/.*)?	gen_context(system_u:object_r:pam_var_run_t,s0)
+/var/lib/sudo(/.*)?	gen_context(system_u:object_r:pam_var_run_t,s0)
diff --git a/policy/modules/system/authlogin.if b/policy/modules/system/authlogin.if
index f3abacd..8474663 100644
--- a/policy/modules/system/authlogin.if
+++ b/policy/modules/system/authlogin.if
@@ -106,10 +106,12 @@ interface(`auth_login_pgm_domain',`
 	gen_require(`
 		type var_auth_t, auth_cache_t;
 		attribute polydomain;
+        attribute login_pgm;
 	')
 
 	domain_type($1)
 	typeattribute $1 polydomain;
+    typeattribute $1 login_pgm;
 
 	domain_subj_id_change_exemption($1)
 	domain_role_change_exemption($1)
@@ -182,6 +184,10 @@ interface(`auth_login_pgm_domain',`
 	userdom_delete_user_tmp_files($1)
 	userdom_search_admin_dir($1)
 
+    tunable_policy(`authlogin_shadow',`
+        auth_tunable_read_shadow($1)
+    ')
+
 	 tunable_policy(`authlogin_radius',`
 		corenet_udp_bind_all_unreserved_ports($1)
 	')
@@ -620,6 +626,33 @@ interface(`auth_can_read_shadow_passwords',`
 
 ########################################
 ## <summary>
+##	Pass shadow assertion for reading.
+## </summary>
+## <desc>
+##	<p>
+##	Pass shadow assertion for reading.
+##	This should only be used with
+##	auth_tunable_read_shadow(), and
+##	only exists because typeattribute
+##	does not work in conditionals.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_can_write_shadow_passwords',`
+	gen_require(`
+		attribute can_write_shadow_passwords;
+	')
+
+	typeattribute $1 can_write_shadow_passwords;
+')
+
+########################################
+## <summary>
 ##	Read the shadow password file.
 ## </summary>
 ## <desc>
@@ -684,6 +717,24 @@ interface(`auth_rw_shadow',`
 	allow $1 shadow_t:file rw_file_perms;
 	typeattribute $1 can_read_shadow_passwords, can_write_shadow_passwords;
 ')
+########################################
+## <summary>
+##	Create, read, write, and delete the shadow
+##	password file.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_tunable_manage_shadow',`
+	gen_require(`
+		type shadow_t;
+	')
+
+	allow $1 shadow_t:file manage_file_perms;
+')
 
 ########################################
 ## <summary>
@@ -1679,3 +1730,21 @@ interface(`auth_unconfined',`
 	typeattribute $1 can_write_shadow_passwords;
 	typeattribute $1 can_relabelto_shadow_passwords;
 ')
+
+########################################
+## <summary>
+##	Send generic signals to chkpwd processes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_signal_chk_passwd',`
+	gen_require(`
+		type chkpwd_t;
+	')
+
+	allow $1 chkpwd_t:process signal;
+')
diff --git a/policy/modules/system/authlogin.te b/policy/modules/system/authlogin.te
index 4da6086..67da55d 100644
--- a/policy/modules/system/authlogin.te
+++ b/policy/modules/system/authlogin.te
@@ -12,11 +12,20 @@ policy_module(authlogin, 2.1.4)
 ## </p>
 ## </desc>
 gen_tunable(authlogin_radius, false)
+
+## <desc>
+## <p>
+## Allow users login programs to access /etc/shadow.
+## </p>
+## </desc>
+gen_tunable(authlogin_shadow, false)
  
+
 attribute can_read_shadow_passwords;
 attribute can_write_shadow_passwords;
 attribute can_relabelto_shadow_passwords;
 attribute polydomain;
+attribute login_pgm;
 
 type auth_cache_t;
 logging_log_file(auth_cache_t)
@@ -343,6 +352,7 @@ allow updpwd_t self:unix_dgram_socket create_socket_perms;
 kernel_read_system_state(updpwd_t)
 
 mls_file_write_all_levels(updpwd_t)
+mls_file_downgrade(updpwd_t)
 
 dev_read_urand(updpwd_t)
 
@@ -420,3 +430,11 @@ optional_policy(`
         namespace_init_domtrans(polydomain)
     ')
 ')
+
+#######################################
+#
+# Login Program local policy
+#
+
+
+
diff --git a/policy/modules/system/init.te b/policy/modules/system/init.te
index 81861d5..65400d7 100644
--- a/policy/modules/system/init.te
+++ b/policy/modules/system/init.te
@@ -1053,6 +1053,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+    prelink_transition_domain_attribute(initrc_t)
+')
+
+optional_policy(`
 	rpm_delete_db(initrc_t)
 ')
 
diff --git a/policy/modules/system/iscsi.te b/policy/modules/system/iscsi.te
index 1fb8ad9..2dc93a3 100644
--- a/policy/modules/system/iscsi.te
+++ b/policy/modules/system/iscsi.te
@@ -21,7 +21,7 @@ type iscsi_tmp_t;
 files_tmp_file(iscsi_tmp_t)
 
 type iscsi_var_lib_t;
-files_type(iscsi_var_lib_t)
+files_var_lib_file(iscsi_var_lib_t)
 
 type iscsi_var_run_t;
 files_pid_file(iscsi_var_run_t)
diff --git a/policy/modules/system/kdump.te b/policy/modules/system/kdump.te
index c3fd2b5..dfbce6b 100644
--- a/policy/modules/system/kdump.te
+++ b/policy/modules/system/kdump.te
@@ -39,3 +39,7 @@ dev_read_framebuffer(kdump_t)
 dev_read_sysfs(kdump_t)
 
 term_use_console(kdump_t)
+
+optional_policy(`
+    openshift_dontaudit_read_initrc(kdump_t)
+')
diff --git a/policy/modules/system/libraries.if b/policy/modules/system/libraries.if
index 34686fc..6aa6307 100644
--- a/policy/modules/system/libraries.if
+++ b/policy/modules/system/libraries.if
@@ -360,6 +360,26 @@ interface(`libs_relabelto_lib_files',`
 ## </param>
 #
 # cjp: added for prelink
+interface(`libs_dontaudit_relabel_lib_files',`
+	gen_require(`
+		type lib_t;
+	')
+
+    dontaudit $1 lib_t:file relabel_file_perms;
+')
+
+########################################
+## <summary>
+##	Relabel to and from the type used
+##	for generic lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+# cjp: added for prelink
 interface(`libs_relabel_lib_files',`
 	gen_require(`
 		type lib_t;
@@ -389,6 +409,25 @@ interface(`libs_delete_lib_symlinks',`
 
 ########################################
 ## <summary>
+##	Delete generic symlinks in library directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+# cjp: added for prelink
+interface(`libs_delete_lib_files',`
+	gen_require(`
+		type lib_t;
+	')
+
+	delete_files_pattern($1, lib_t, lib_t)
+')
+
+########################################
+## <summary>
 ##	Create, read, write, and delete shared libraries.
 ## </summary>
 ## <param name="domain">
diff --git a/policy/modules/system/locallogin.te b/policy/modules/system/locallogin.te
index fd2576e..7182c3e 100644
--- a/policy/modules/system/locallogin.te
+++ b/policy/modules/system/locallogin.te
@@ -134,6 +134,8 @@ term_relabel_all_ptys(local_login_t)
 term_setattr_generic_ptys(local_login_t)
 term_relabel_devpts(local_login_t)
 
+auth_can_read_shadow_passwords(local_login_t)
+auth_can_write_shadow_passwords(local_login_t)
 auth_rw_login_records(local_login_t)
 auth_rw_faillog(local_login_t)
 auth_manage_pam_pid(local_login_t)
@@ -158,6 +160,15 @@ ifdef(`distro_ubuntu',`
 	')
 ')
 
+tunable_policy(`authlogin_shadow',`
+    auth_tunable_manage_shadow(local_login_t)
+')
+
+tunable_policy(`authlogin_shadow',`
+    #allow to manage nopasswd
+    files_manage_etc_files(local_login_t)
+')
+
 tunable_policy(`use_nfs_home_dirs',`
 	fs_read_nfs_files(local_login_t)
 	fs_read_nfs_symlinks(local_login_t)
diff --git a/policy/modules/system/logging.fc b/policy/modules/system/logging.fc
index 0e77e1e..41cdedb 100644
--- a/policy/modules/system/logging.fc
+++ b/policy/modules/system/logging.fc
@@ -2,10 +2,12 @@
 
 /etc/rsyslog.conf		gen_context(system_u:object_r:syslog_conf_t,s0)
 /etc/syslog.conf		gen_context(system_u:object_r:syslog_conf_t,s0)
+/etc/rsyslog.d(/.*)?		gen_context(system_u:object_r:syslog_conf_t,s0)
 /etc/audit(/.*)?		gen_context(system_u:object_r:auditd_etc_t,mls_systemhigh)
 /etc/rc\.d/init\.d/auditd --	gen_context(system_u:object_r:auditd_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/rsyslog --	gen_context(system_u:object_r:syslogd_initrc_exec_t,s0)
 
+
 /sbin/audispd		--	gen_context(system_u:object_r:audisp_exec_t,s0)
 /sbin/audisp-remote	--	gen_context(system_u:object_r:audisp_remote_exec_t,s0)
 /sbin/auditctl		--	gen_context(system_u:object_r:auditctl_exec_t,s0)
@@ -18,18 +20,26 @@
 /sbin/syslog-ng		--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 
 /opt/zimbra/log(/.*)?		gen_context(system_u:object_r:var_log_t,s0)
+/opt/Symantec/scspagent/IDS/system(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+
 
-/usr/local/centreon/log(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+/usr/centreon/log(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
 
+/usr/sbin/audispd	--	gen_context(system_u:object_r:audisp_exec_t,s0)
+/usr/sbin/audisp-remote	--	gen_context(system_u:object_r:audisp_remote_exec_t,s0)
+/usr/sbin/auditctl	--	gen_context(system_u:object_r:auditctl_exec_t,s0)
+/usr/sbin/auditd	--	gen_context(system_u:object_r:auditd_exec_t,s0)
 /usr/sbin/klogd		--	gen_context(system_u:object_r:klogd_exec_t,s0)
 /usr/sbin/metalog	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
+/usr/sbin/minilogd	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 /usr/sbin/rklogd	--	gen_context(system_u:object_r:klogd_exec_t,s0)
 /usr/sbin/rsyslogd	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
-/usr/sbin/syslog-ng	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 /usr/sbin/syslogd	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
+/usr/sbin/syslog-ng	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 
-/var/lib/rsyslog(/.*)?    gen_context(system_u:object_r:syslogd_var_lib_t,s0)
+/var/lib/misc/syslog-ng.persist-? -- gen_context(system_u:object_r:syslogd_var_lib_t,s0)
 /var/lib/syslog-ng(/.*)? 	gen_context(system_u:object_r:syslogd_var_lib_t,s0)
+/var/lib/r?syslog(/.*)?		gen_context(system_u:object_r:syslogd_var_lib_t,s0)
 /var/lib/syslog-ng.persist --	gen_context(system_u:object_r:syslogd_var_lib_t,s0)
 
 ifdef(`distro_suse', `
@@ -38,18 +48,15 @@ ifdef(`distro_suse', `
 
 /var/axfrdns/log/main(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
 /var/dnscache/log/main(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
-#/var/cfengine/outputs(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
 
 /var/log		-d	gen_context(system_u:object_r:var_log_t,s0-mls_systemhigh)
 /var/log/.*			gen_context(system_u:object_r:var_log_t,s0)
-/var/log/boot\.log.*	            gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/messages[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/secure[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
-/var/log/cron[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/maillog[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/spooler[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/audit(/.*)?		gen_context(system_u:object_r:auditd_log_t,mls_systemhigh)
-#/var/log/syslog-ng(/.*)?       gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
+/var/run/log(/.*)?		gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
 
 ifndef(`distro_gentoo',`
 /var/log/audit\.log.*	--	gen_context(system_u:object_r:auditd_log_t,mls_systemhigh)
@@ -58,6 +65,7 @@ ifndef(`distro_gentoo',`
 ifdef(`distro_redhat',`
 /var/named/chroot/var/log -d	gen_context(system_u:object_r:var_log_t,s0)
 /var/named/chroot/dev/log -s	gen_context(system_u:object_r:devlog_t,s0)
+/var/spool/postfix/dev/log -s	gen_context(system_u:object_r:devlog_t,s0)
 ')
 
 /var/run/audit_events	-s	gen_context(system_u:object_r:auditd_var_run_t,mls_systemhigh)
@@ -67,18 +75,18 @@ ifdef(`distro_redhat',`
 /var/run/klogd\.pid	--	gen_context(system_u:object_r:klogd_var_run_t,s0)
 /var/run/log		-s	gen_context(system_u:object_r:devlog_t,s0)
 /var/run/metalog\.pid	--	gen_context(system_u:object_r:syslogd_var_run_t,s0)
-/var/run/syslogd\.pid  --      gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
+/var/run/syslogd\.pid	--	gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
 /var/run/syslog-ng.ctl	--	gen_context(system_u:object_r:syslogd_var_run_t,s0)
 /var/run/syslog-ng(/.*)?	gen_context(system_u:object_r:syslogd_var_run_t,s0)
 
+/var/spool/audit(/.*)?		gen_context(system_u:object_r:audit_spool_t,mls_systemhigh)
 /var/spool/bacula/log(/.*)? 	gen_context(system_u:object_r:var_log_t,s0)
 /var/spool/postfix/pid	-d	gen_context(system_u:object_r:var_run_t,s0)
-/var/spool/plymouth/boot\.log.*	 gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/spool/rsyslog(/.*)? 	gen_context(system_u:object_r:var_log_t,s0)
-/var/spool/audit(/.*)?         gen_context(system_u:object_r:audit_spool_t,mls_systemhigh)
 
-/var/stockmaniac/templates_cache(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+/var/stockmaniac/templates_cache(/.*)? gen_context(system_u:object_r:var_log_t,s0)
 
 /var/tinydns/log/main(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
 
 /var/webmin(/.*)?		gen_context(system_u:object_r:var_log_t,s0)
+
diff --git a/policy/modules/system/logging.if b/policy/modules/system/logging.if
index c4785ca..56c563b 100644
--- a/policy/modules/system/logging.if
+++ b/policy/modules/system/logging.if
@@ -752,7 +752,7 @@ interface(`logging_inherit_append_all_logs',`
 		attribute logfile;
 	')
 
-	allow $1 logfile:file { getattr append };
+	allow $1 logfile:file { getattr append ioctl lock };
 ')
 
 ########################################
@@ -795,6 +795,25 @@ interface(`logging_dontaudit_read_all_logs',`
 	dontaudit $1 logfile:file read_file_perms;
 ')
 
+#######################################
+## <summary>
+##  dontaudit Read all log files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`logging_dontaudit_rw_inherited_all_logs',`
+    gen_require(`
+        attribute logfile;
+    ')
+
+	dontaudit $1 logfile:file rw_inherited_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Execute all log files in the caller domain.
diff --git a/policy/modules/system/logging.te b/policy/modules/system/logging.te
index fdd88cb..58fd864 100644
--- a/policy/modules/system/logging.te
+++ b/policy/modules/system/logging.te
@@ -20,6 +20,13 @@ gen_tunable(logging_syslogd_can_sendmail, false)
 ## </desc>
 gen_tunable(logging_syslog_can_read_tmp, false)
 
+## <desc>
+## <p>
+## Allow syslogd the ability to read/write terminals
+## </p>
+## </desc>
+gen_tunable(logging_syslogd_use_tty, true)
+
 attribute logfile;
 
 type auditctl_t;
@@ -89,7 +96,7 @@ type syslogd_tmp_t;
 files_tmp_file(syslogd_tmp_t)
 
 type syslogd_var_lib_t;
-files_type(syslogd_var_lib_t)
+files_var_lib_file(syslogd_var_lib_t)
 
 type syslogd_var_run_t;
 files_pid_file(syslogd_var_run_t)
@@ -130,6 +137,8 @@ domain_use_interactive_fds(auditctl_t)
 
 mls_file_read_all_levels(auditctl_t)
 
+storage_getattr_removable_dev(auditctl_t)
+
 term_use_all_terms(auditctl_t)
 
 init_dontaudit_use_fds(auditctl_t)
@@ -394,7 +403,7 @@ optional_policy(`
 # chown fsetid for syslog-ng
 # sys_admin for the integrated klog of syslog-ng and metalog
 # cjp: why net_admin!
-allow syslogd_t self:capability { dac_override sys_resource sys_tty_config net_admin sys_admin sys_nice chown fsetid ipc_lock setuid setgid };
+allow syslogd_t self:capability { dac_override sys_resource sys_tty_config net_admin sys_admin sys_nice chown fsetid ipc_lock setuid setgid net_raw };
 dontaudit syslogd_t self:capability sys_tty_config;
 # setpgid for metalog
 allow syslogd_t self:process { getcap getsched setcap setsched setrlimit signal_perms setpgid };
@@ -405,17 +414,19 @@ allow syslogd_t self:unix_dgram_socket sendto;
 allow syslogd_t self:fifo_file rw_fifo_file_perms;
 allow syslogd_t self:udp_socket create_socket_perms;
 allow syslogd_t self:tcp_socket create_stream_socket_perms;
+allow syslogd_t self:rawip_socket create_socket_perms;
 
 allow syslogd_t syslog_conf_t:file read_file_perms;
+allow syslogd_t syslog_conf_t:dir list_dir_perms;
 
 # Create and bind to /dev/log or /var/run/log.
 allow syslogd_t devlog_t:sock_file manage_sock_file_perms;
 files_pid_filetrans(syslogd_t, devlog_t, sock_file)
-files_search_spool(syslogd_t)
 
 # create/append log files.
 manage_files_pattern(syslogd_t, var_log_t, var_log_t)
 rw_fifo_files_pattern(syslogd_t, var_log_t, var_log_t)
+files_search_spool(syslogd_t)
 
 # Allow access for syslog-ng
 allow syslogd_t var_log_t:dir { create setattr };
@@ -438,16 +449,20 @@ files_pid_filetrans(syslogd_t, syslogd_var_run_t, { dir file })
 manage_files_pattern(syslogd_t, syslogd_var_run_t, syslogd_var_run_t)
 files_pid_filetrans(syslogd_t, syslogd_var_run_t, file)
 
+kernel_rw_stream_socket_perms(syslogd_t)
 kernel_read_system_state(syslogd_t)
+kernel_read_network_state(syslogd_t)
 kernel_read_kernel_sysctls(syslogd_t)
 kernel_read_proc_symlinks(syslogd_t)
 # Allow access to /proc/kmsg for syslog-ng
 kernel_read_messages(syslogd_t)
+kernel_request_load_module(syslogd_t)
 kernel_clear_ring_buffer(syslogd_t)
 kernel_change_ring_buffer_level(syslogd_t)
+kernel_read_ring_buffer(syslogd_t)
 
-corecmd_exec_shell(syslogd_t)
 corecmd_exec_bin(syslogd_t)
+corecmd_exec_shell(syslogd_t)
 
 corenet_all_recvfrom_unlabeled(syslogd_t)
 corenet_all_recvfrom_netlabel(syslogd_t)
@@ -475,6 +490,11 @@ corenet_sendrecv_syslogd_server_packets(syslogd_t)
 corenet_sendrecv_postgresql_client_packets(syslogd_t)
 corenet_sendrecv_mysqld_client_packets(syslogd_t)
 
+tunable_policy(`logging_syslogd_use_tty',`
+    term_use_all_ttys(syslogd_t)
+    term_use_all_ptys(syslogd_t)
+')
+
 tunable_policy(`logging_syslogd_can_sendmail',`
 	# support for ommail module to send logs via mail
 	corenet_tcp_connect_smtp_port(syslogd_t)
@@ -484,7 +504,10 @@ tunable_policy(`logging_syslogd_can_sendmail',`
 dev_filetrans(syslogd_t, devlog_t, sock_file)
 dev_read_sysfs(syslogd_t)
 dev_read_rand(syslogd_t)
+dev_read_urand(syslogd_t)
 
+domain_read_all_domains_state(syslogd_t)
+domain_getattr_all_domains(syslogd_t)
 domain_use_interactive_fds(syslogd_t)
 
 files_read_etc_files(syslogd_t)
@@ -499,7 +522,10 @@ files_search_home(syslogd_t)
 fs_getattr_all_fs(syslogd_t)
 fs_search_auto_mountpoints(syslogd_t)
 fs_rw_anon_inodefs_files(syslogd_t)
+fs_list_inotifyfs(syslogd_t)
+fs_search_cgroup_dirs(syslogd_t)
 
+mls_socket_write_all_levels(syslogd_t) # Neet to be able to sendto dgram
 mls_file_write_all_levels(syslogd_t) # Need to be able to write to /var/run/ and /var/log directories
 
 # caused by openshift syslog plugin
@@ -510,6 +536,7 @@ domain_dontaudit_read_all_domains_state(syslogd_t)
 term_write_console(syslogd_t)
 # Allow syslog to a terminal
 term_write_unallocated_ttys(syslogd_t)
+term_use_generic_ptys(syslogd_t)
 
 # for sending messages to logged in users
 init_read_utmp(syslogd_t)
@@ -528,6 +555,7 @@ miscfiles_read_localization(syslogd_t)
 
 userdom_dontaudit_use_unpriv_user_fds(syslogd_t)
 userdom_search_user_home_dirs(syslogd_t)
+userdom_rw_inherited_user_tmpfs_files(syslogd_t)
 
 tunable_policy(`logging_syslog_can_read_tmp',`
 	userdom_read_user_tmp_files(syslogd_t)
@@ -566,6 +594,7 @@ optional_policy(`
 ')
 
 optional_policy(`
+    mysql_read_config(syslogd_t)
 	mysql_stream_connect(syslogd_t)
 ')
 
diff --git a/policy/modules/system/lvm.te b/policy/modules/system/lvm.te
index 1e85c83..2f1f905 100644
--- a/policy/modules/system/lvm.te
+++ b/policy/modules/system/lvm.te
@@ -37,7 +37,7 @@ type lvm_metadata_t;
 files_type(lvm_metadata_t)
 
 type lvm_var_lib_t;
-files_type(lvm_var_lib_t)
+files_var_lib_file(lvm_var_lib_t)
 
 type lvm_var_run_t;
 files_pid_file(lvm_var_run_t)
diff --git a/policy/modules/system/miscfiles.if b/policy/modules/system/miscfiles.if
index 811ccae..51aa437 100644
--- a/policy/modules/system/miscfiles.if
+++ b/policy/modules/system/miscfiles.if
@@ -67,6 +67,25 @@ interface(`miscfiles_read_certs',`
 
 ########################################
 ## <summary>
+##	Dontaudit read/writei certificates.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`miscfiles_dontaudit_rw_certs',`
+	gen_require(`
+		attribute cert_type;
+	')
+
+    dontaudit $1 cert_type:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	manange system SSL certificates.
 ## </summary>
 ## <param name="domain">
diff --git a/policy/modules/system/pcmcia.te b/policy/modules/system/pcmcia.te
index 546899e..d29103d 100644
--- a/policy/modules/system/pcmcia.te
+++ b/policy/modules/system/pcmcia.te
@@ -16,7 +16,7 @@ type cardmgr_lnk_t;
 files_type(cardmgr_lnk_t)
 
 type cardmgr_var_lib_t;
-files_type(cardmgr_var_lib_t)
+files_var_lib_file(cardmgr_var_lib_t)
 
 type cardmgr_var_run_t;
 files_pid_file(cardmgr_var_run_t)
diff --git a/policy/modules/system/selinuxutil.te b/policy/modules/system/selinuxutil.te
index 2447c6c..0f0d3ed 100644
--- a/policy/modules/system/selinuxutil.te
+++ b/policy/modules/system/selinuxutil.te
@@ -27,7 +27,7 @@ type selinux_login_config_t;
 files_type(selinux_login_config_t)
 
 type selinux_var_lib_t;
-files_type(selinux_var_lib_t)
+files_var_lib_file(selinux_var_lib_t)
 
 type checkpolicy_t, can_write_binary_policy;
 type checkpolicy_exec_t;
@@ -410,6 +410,7 @@ selinux_compute_user_contexts(run_init_t)
 auth_use_nsswitch(run_init_t)
 auth_domtrans_chk_passwd(run_init_t)
 auth_dontaudit_read_shadow(run_init_t)
+auth_read_lastlog(run_init_t)
 
 init_spec_domtrans_script(run_init_t)
 # for utmp
diff --git a/policy/modules/system/sosreport.te b/policy/modules/system/sosreport.te
index 2444cb1..5a9a833 100644
--- a/policy/modules/system/sosreport.te
+++ b/policy/modules/system/sosreport.te
@@ -145,6 +145,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+    prelink_transition_domain_attribute(sosreport_t)
+')
+
+optional_policy(`
     rpm_exec(sosreport_t)
     rpm_dontaudit_manage_db(sosreport_t)
     rpm_read_db(sosreport_t)
diff --git a/policy/modules/system/sysnetwork.te b/policy/modules/system/sysnetwork.te
index 2d60152..b2494d3 100644
--- a/policy/modules/system/sysnetwork.te
+++ b/policy/modules/system/sysnetwork.te
@@ -341,6 +341,7 @@ read_files_pattern(ifconfig_t, dhcpc_state_t, dhcpc_state_t)
 files_read_etc_files(ifconfig_t)
 files_read_etc_runtime_files(ifconfig_t)
 files_read_usr_files(ifconfig_t)
+files_dontaudit_rw_var_files(ifconfig_t)
 
 fs_getattr_xattr_fs(ifconfig_t)
 fs_search_auto_mountpoints(ifconfig_t)
diff --git a/policy/modules/system/udev.te b/policy/modules/system/udev.te
index 57a868e..b3a2756 100644
--- a/policy/modules/system/udev.te
+++ b/policy/modules/system/udev.te
@@ -290,6 +290,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	radvd_read_pid_files(udev_t)
+')
+
+optional_policy(`
 	usbmuxd_domtrans(udev_t)
 ')
 
diff --git a/policy/modules/system/userdomain.if b/policy/modules/system/userdomain.if
index ce0b0b2..1ab0b72 100644
--- a/policy/modules/system/userdomain.if
+++ b/policy/modules/system/userdomain.if
@@ -147,6 +147,10 @@ template(`userdom_base_user_template',`
 		fs_list_cgroup_dirs($1_usertype)
 	')
 
+    optional_policy(`
+        prelink_role_access_mask($1_r)
+    ')
+
 	optional_policy(`
 		ssh_rw_stream_sockets($1_usertype)
 		ssh_delete_tmp($1_t)
@@ -4744,3 +4748,21 @@ interface(`userdom_rw_inherited_user_tmp_files',`
 
     allow $1 user_tmp_t:file rw_inherited_file_perms;
 ')
+
+########################################
+## <summary>
+##	Read and write	userdomain stream.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_rw_stream',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	allow $1 userdomain:unix_stream_socket rw_socket_perms;
+')
diff --git a/policy/modules/system/userdomain.te b/policy/modules/system/userdomain.te
index 1fc0e19..879e8c5 100644
--- a/policy/modules/system/userdomain.te
+++ b/policy/modules/system/userdomain.te
@@ -151,6 +151,10 @@ tunable_policy(`use_samba_home_dirs',`
 allow userdomain userdomain:process signull;
 
 optional_policy(`
+	pcscd_stream_connect(userdomain)
+')
+
+optional_policy(`
 	ssh_rw_tcp_sockets(userdomain)
 ')
 
diff --git a/policy/modules/system/xen.te b/policy/modules/system/xen.te
index 8f2067a..5c35fe7 100644
--- a/policy/modules/system/xen.te
+++ b/policy/modules/system/xen.te
@@ -51,7 +51,7 @@ files_tmp_file(xend_tmp_t)
 
 # var/lib files
 type xend_var_lib_t;
-files_type(xend_var_lib_t)
+files_var_lib_file(xend_var_lib_t)
 # for mounting an NFS store
 files_mountpoint(xend_var_lib_t)
 
@@ -73,7 +73,7 @@ files_tmp_file(xenstored_tmp_t)
 
 # var/lib files
 type xenstored_var_lib_t;
-files_type(xenstored_var_lib_t)
+files_var_lib_file(xenstored_var_lib_t)
 
 # log files
 type xenstored_var_log_t;
@@ -428,6 +428,8 @@ init_stream_connect_script(xm_t)
 init_rw_script_stream_sockets(xm_t)
 init_use_fds(xm_t)
 
+logging_send_syslog_msg(xm_t)
+
 miscfiles_read_localization(xm_t)
 
 sysnet_dns_name_resolve(xm_t)
diff --git a/policy/support/obj_perm_sets.spt b/policy/support/obj_perm_sets.spt
index a0a6a0c..8839fad 100644
--- a/policy/support/obj_perm_sets.spt
+++ b/policy/support/obj_perm_sets.spt
@@ -208,6 +208,7 @@ define(`read_inherited_file_perms',`{ getattr read ioctl lock }')
 define(`read_file_perms',`{ open read_inherited_file_perms }')
 define(`mmap_file_perms',`{ getattr open read execute ioctl }')
 define(`exec_file_perms',`{ getattr open read execute ioctl execute_no_trans }')
+define(`append_inherited_file_perms',`{ getattr append }')
 define(`append_file_perms',`{ getattr open append lock ioctl }')
 define(`write_file_perms',`{ getattr open write append lock ioctl }')
 define(`rw_inherited_file_perms',`{ getattr read write append ioctl lock }')

diff --exclude-from=exclude -N -u -r nsaserefpolicy/config/appconfig-mcs/sepgsql_contexts serefpolicy-3.7.19/config/appconfig-mcs/sepgsql_contexts
--- nsaserefpolicy/config/appconfig-mcs/sepgsql_contexts	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/config/appconfig-mcs/sepgsql_contexts	2011-03-17 07:21:02.364851003 +0000
@@ -0,0 +1,40 @@
+#
+# Initial security label for SE-PostgreSQL (MCS)
+#
+
+# <databases>
+db_database	*			system_u:object_r:sepgsql_db_t:s0
+
+# <schemas>
+db_schema	*.*			system_u:object_r:sepgsql_schema_t:s0
+
+# <tables>
+db_table	*.pg_catalog.*		system_u:object_r:sepgsql_sysobj_t:s0
+db_table	*.*.*			system_u:object_r:sepgsql_table_t:s0
+
+# <column>
+db_column	*.pg_catalog.*.*	system_u:object_r:sepgsql_sysobj_t:s0
+db_column	*.*.*.*			system_u:object_r:sepgsql_table_t:s0
+
+# <sequences>
+db_sequence	*.*.*			system_u:object_r:sepgsql_seq_t:s0
+
+# <views>
+db_view		*.*.*			system_u:object_r:sepgsql_view_t:s0
+
+# <procedures>
+db_procedure	*.*.*			system_u:object_r:sepgsql_proc_exec_t:s0
+
+# <tuples>
+db_tuple	*.pg_catalog.*		system_u:object_r:sepgsql_sysobj_t:s0
+db_tuple	*.*.*			system_u:object_r:sepgsql_table_t:s0
+
+# <blobs>
+db_blobs	*.*			system_u:object_r:sepgsql_blob_t:s0
+
+# <language>
+db_language	*.sql			system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.plpgsql		system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.pltcl			system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.plperl		system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.*			system_u:object_r:sepgsql_lang_t:s0
diff --exclude-from=exclude -N -u -r nsaserefpolicy/config/appconfig-mcs/staff_u_default_contexts serefpolicy-3.7.19/config/appconfig-mcs/staff_u_default_contexts
--- nsaserefpolicy/config/appconfig-mcs/staff_u_default_contexts	2011-03-17 07:21:20.211851003 +0000
+++ serefpolicy-3.7.19/config/appconfig-mcs/staff_u_default_contexts	2011-11-15 16:31:45.761072001 +0000
@@ -1,7 +1,7 @@
 system_r:local_login_t:s0	staff_r:staff_t:s0 sysadm_r:sysadm_t:s0
 system_r:remote_login_t:s0	staff_r:staff_t:s0
 system_r:sshd_t:s0		staff_r:staff_t:s0 sysadm_r:sysadm_t:s0
-system_r:crond_t:s0		staff_r:cronjob_t:s0
+system_r:crond_t:s0		staff_r:staff_t:s0
 system_r:xdm_t:s0		staff_r:staff_t:s0
 staff_r:staff_su_t:s0		staff_r:staff_t:s0
 staff_r:staff_sudo_t:s0		staff_r:staff_t:s0
diff --exclude-from=exclude -N -u -r nsaserefpolicy/config/appconfig-mls/sepgsql_contexts serefpolicy-3.7.19/config/appconfig-mls/sepgsql_contexts
--- nsaserefpolicy/config/appconfig-mls/sepgsql_contexts	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/config/appconfig-mls/sepgsql_contexts	2011-03-17 07:21:02.231851001 +0000
@@ -0,0 +1,40 @@
+#
+# Initial security label for SE-PostgreSQL (MLS)
+#
+
+# <databases>
+db_database	*			system_u:object_r:sepgsql_db_t:s0
+
+# <schemas>
+db_schema	*.*			system_u:object_r:sepgsql_schema_t:s0
+
+# <tables>
+db_table	*.pg_catalog.*		system_u:object_r:sepgsql_sysobj_t:s0
+db_table	*.*.*			system_u:object_r:sepgsql_table_t:s0
+
+# <column>
+db_column	*.pg_catalog.*.*	system_u:object_r:sepgsql_sysobj_t:s0
+db_column	*.*.*.*			system_u:object_r:sepgsql_table_t:s0
+
+# <sequences>
+db_sequence	*.*.*			system_u:object_r:sepgsql_seq_t:s0
+
+# <views>
+db_view		*.*.*			system_u:object_r:sepgsql_view_t:s0
+
+# <procedures>
+db_procedure	*.*.*			system_u:object_r:sepgsql_proc_exec_t:s0
+
+# <tuples>
+db_tuple	*.pg_catalog.*		system_u:object_r:sepgsql_sysobj_t:s0
+db_tuple	*.*.*			system_u:object_r:sepgsql_table_t:s0
+
+# <blobs>
+db_blobs	*.*			system_u:object_r:sepgsql_blob_t:s0
+
+# <language>
+db_language	*.sql			system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.plpgsql		system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.pltcl			system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.plperl		system_u:object_r:sepgsql_safe_lang_t:s0
+db_language	*.*			system_u:object_r:sepgsql_lang_t:s0
diff --exclude-from=exclude -N -u -r nsaserefpolicy/config/appconfig-mls/staff_u_default_contexts serefpolicy-3.7.19/config/appconfig-mls/staff_u_default_contexts
--- nsaserefpolicy/config/appconfig-mls/staff_u_default_contexts	2011-03-17 07:21:20.084851001 +0000
+++ serefpolicy-3.7.19/config/appconfig-mls/staff_u_default_contexts	2011-11-15 16:31:15.121072001 +0000
@@ -1,7 +1,7 @@
 system_r:local_login_t:s0	staff_r:staff_t:s0 sysadm_r:sysadm_t:s0
 system_r:remote_login_t:s0	staff_r:staff_t:s0
 system_r:sshd_t:s0		staff_r:staff_t:s0 sysadm_r:sysadm_t:s0
-system_r:crond_t:s0		staff_r:cronjob_t:s0
+system_r:crond_t:s0		staff_r:staff_t:s0
 system_r:xdm_t:s0		staff_r:staff_t:s0
 staff_r:staff_su_t:s0		staff_r:staff_t:s0
 staff_r:staff_sudo_t:s0		staff_r:staff_t:s0
diff --exclude-from=exclude -N -u -r nsaserefpolicy/config/appconfig-standard/sepgsql_contexts serefpolicy-3.7.19/config/appconfig-standard/sepgsql_contexts
--- nsaserefpolicy/config/appconfig-standard/sepgsql_contexts	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/config/appconfig-standard/sepgsql_contexts	2011-03-17 07:21:02.304851002 +0000
@@ -0,0 +1,40 @@
+#
+# Initial security label for SE-PostgreSQL (none-MLS)
+#
+
+# <databases>
+db_database	*			system_u:object_r:sepgsql_db_t
+
+# <schemas>
+db_schema	*.*			system_u:object_r:sepgsql_schema_t
+
+# <tables>
+db_table	*.pg_catalog.*		system_u:object_r:sepgsql_sysobj_t
+db_table	*.*.*			system_u:object_r:sepgsql_table_t
+
+# <column>
+db_column	*.pg_catalog.*.*	system_u:object_r:sepgsql_sysobj_t
+db_column	*.*.*.*			system_u:object_r:sepgsql_table_t
+
+# <sequences>
+db_sequence	*.*.*			system_u:object_r:sepgsql_seq_t
+
+# <views>
+db_view		*.*.*			system_u:object_r:sepgsql_view_t
+
+# <procedures>
+db_procedure	*.*.*			system_u:object_r:sepgsql_proc_exec_t
+
+# <tuples>
+db_tuple	*.pg_catalog.*		system_u:object_r:sepgsql_sysobj_t
+db_tuple	*.*.*			system_u:object_r:sepgsql_table_t
+
+# <blobs>
+db_blobs	*.*			system_u:object_r:sepgsql_blob_t
+
+# <language>
+db_language	*.sql			system_u:object_r:sepgsql_safe_lang_t
+db_language	*.plpgsql		system_u:object_r:sepgsql_safe_lang_t
+db_language	*.pltcl			system_u:object_r:sepgsql_safe_lang_t
+db_language	*.plperl		system_u:object_r:sepgsql_safe_lang_t
+db_language	*.*			system_u:object_r:sepgsql_lang_t
diff --exclude-from=exclude -N -u -r nsaserefpolicy/Makefile serefpolicy-3.7.19/Makefile
--- nsaserefpolicy/Makefile	2011-03-17 07:21:06.751851003 +0000
+++ serefpolicy-3.7.19/Makefile	2011-03-17 07:20:50.845851003 +0000
@@ -244,7 +244,7 @@
 appdir := $(contextpath)
 user_default_contexts := $(wildcard config/appconfig-$(TYPE)/*_default_contexts)
 user_default_contexts_names := $(addprefix $(contextpath)/users/,$(subst _default_contexts,,$(notdir $(user_default_contexts))))
-appfiles := $(addprefix $(appdir)/,default_contexts default_type initrc_context failsafe_context userhelper_context removable_context dbus_contexts x_contexts customizable_types securetty_types) $(contextpath)/files/media $(user_default_contexts_names)
+appfiles := $(addprefix $(appdir)/,default_contexts default_type initrc_context failsafe_context userhelper_context removable_context dbus_contexts sepgsql_contexts x_contexts customizable_types securetty_types virtual_image_context virtual_domain_context) $(contextpath)/files/media $(user_default_contexts_names)
 net_contexts := $(builddir)net_contexts
 
 all_layers := $(shell find $(wildcard $(moddir)/*) -maxdepth 0 -type d)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/abrt_selinux.8 serefpolicy-3.7.19/man/man8/abrt_selinux.8
--- nsaserefpolicy/man/man8/abrt_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/abrt_selinux.8	2012-03-20 22:37:14.330458750 +0000
@@ -0,0 +1,242 @@
+.TH  "abrt_selinux"  "8"  "abrt" "dwalsh@redhat.com" "abrt SELinux Policy documentation"
+.SH "NAME"
+abrt_selinux \- Security Enhanced Linux Policy for the abrt processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B abrt
+(ABRT - automated bug-reporting tool)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  abrt policy is extremely flexible and has several booleans that allow you to manipulate the policy and run abrt with the tightest access possible.
+
+
+.PP
+If you want to allow ABRT to run in abrt_handle_event_t domain to handle ABRT event script, you must turn on the abrt_handle_event boolean.
+
+.EX
+.B setsebool -P abrt_handle_event 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow abrt servers to read the /var/abrt directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/abrt(/.*)?"
+.br
+.B restorecon -F -R -v /var/abrt
+.pp
+.TP
+Allow abrt servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_abrt_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/abrt/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/abrt/incoming
+
+
+.PP
+If you want to allow ABRT to modify public files used for public file transfer services., you must turn on the abrt_anon_write boolean.
+
+.EX
+.B setsebool -P abrt_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux abrt policy is very flexible allowing users to setup their abrt processes in as secure a method as possible.
+.PP 
+The following file types are defined for abrt:
+
+
+.EX
+.PP
+.B abrt_dump_oops_exec_t 
+.EE
+
+- Set files with the abrt_dump_oops_exec_t type, if you want to transition an executable to the abrt_dump_oops_t domain.
+
+
+.EX
+.PP
+.B abrt_etc_t 
+.EE
+
+- Set files with the abrt_etc_t type, if you want to store abrt files in the /etc directories.
+
+
+.EX
+.PP
+.B abrt_exec_t 
+.EE
+
+- Set files with the abrt_exec_t type, if you want to transition an executable to the abrt_t domain.
+
+
+.EX
+.PP
+.B abrt_handle_event_exec_t 
+.EE
+
+- Set files with the abrt_handle_event_exec_t type, if you want to transition an executable to the abrt_handle_event_t domain.
+
+
+.EX
+.PP
+.B abrt_helper_exec_t 
+.EE
+
+- Set files with the abrt_helper_exec_t type, if you want to transition an executable to the abrt_helper_t domain.
+
+
+.EX
+.PP
+.B abrt_initrc_exec_t 
+.EE
+
+- Set files with the abrt_initrc_exec_t type, if you want to transition an executable to the abrt_initrc_t domain.
+
+
+.EX
+.PP
+.B abrt_retrace_cache_t 
+.EE
+
+- Set files with the abrt_retrace_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/retrace-server(/.*)?, /var/cache/abrt-retrace(/.*)?
+
+.EX
+.PP
+.B abrt_retrace_coredump_exec_t 
+.EE
+
+- Set files with the abrt_retrace_coredump_exec_t type, if you want to transition an executable to the abrt_retrace_coredump_t domain.
+
+
+.EX
+.PP
+.B abrt_retrace_spool_t 
+.EE
+
+- Set files with the abrt_retrace_spool_t type, if you want to store the abrt retrace files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/retrace-server(/.*)?, /var/spool/abrt-retrace(/.*)?
+
+.EX
+.PP
+.B abrt_retrace_worker_exec_t 
+.EE
+
+- Set files with the abrt_retrace_worker_exec_t type, if you want to transition an executable to the abrt_retrace_worker_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/retrace-server-worker, /usr/bin/abrt-retrace-worker
+
+.EX
+.PP
+.B abrt_tmp_t 
+.EE
+
+- Set files with the abrt_tmp_t type, if you want to store abrt temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B abrt_var_cache_t 
+.EE
+
+- Set files with the abrt_var_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/abrt(/.*)?, /var/cache/abrt-di(/.*)?, /var/spool/abrt(/.*)?
+
+.EX
+.PP
+.B abrt_var_log_t 
+.EE
+
+- Set files with the abrt_var_log_t type, if you want to treat the data as abrt var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B abrt_var_run_t 
+.EE
+
+- Set files with the abrt_var_run_t type, if you want to store the abrt files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/abrtd?\.socket, /var/run/abrtd?\.lock, /var/run/abrt(/.*)?, /var/run/abrt\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux abrt policy is very flexible allowing users to setup their abrt processes in as secure a method as possible.
+.PP 
+The following process types are defined for abrt:
+
+.EX
+.B abrt_handle_event_t, abrt_helper_t, abrt_retrace_coredump_t, abrt_t, abrt_retrace_worker_t, abrt_dump_oops_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), abrt(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/accountsd_selinux.8 serefpolicy-3.7.19/man/man8/accountsd_selinux.8
--- nsaserefpolicy/man/man8/accountsd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/accountsd_selinux.8	2012-03-20 22:37:14.330458750 +0000
@@ -0,0 +1,85 @@
+.TH  "accountsd_selinux"  "8"  "accountsd" "dwalsh@redhat.com" "accountsd SELinux Policy documentation"
+.SH "NAME"
+accountsd_selinux \- Security Enhanced Linux Policy for the accountsd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B accountsd
+(policy for accountsd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux accountsd policy is very flexible allowing users to setup their accountsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for accountsd:
+
+
+.EX
+.PP
+.B accountsd_exec_t 
+.EE
+
+- Set files with the accountsd_exec_t type, if you want to transition an executable to the accountsd_t domain.
+
+
+.EX
+.PP
+.B accountsd_var_lib_t 
+.EE
+
+- Set files with the accountsd_var_lib_t type, if you want to store the accountsd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux accountsd policy is very flexible allowing users to setup their accountsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for accountsd:
+
+.EX
+.B accountsd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), accountsd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/acct_selinux.8 serefpolicy-3.7.19/man/man8/acct_selinux.8
--- nsaserefpolicy/man/man8/acct_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/acct_selinux.8	2012-03-20 22:37:14.330458750 +0000
@@ -0,0 +1,93 @@
+.TH  "acct_selinux"  "8"  "acct" "dwalsh@redhat.com" "acct SELinux Policy documentation"
+.SH "NAME"
+acct_selinux \- Security Enhanced Linux Policy for the acct processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B acct
+(Berkeley process accounting)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux acct policy is very flexible allowing users to setup their acct processes in as secure a method as possible.
+.PP 
+The following file types are defined for acct:
+
+
+.EX
+.PP
+.B acct_data_t 
+.EE
+
+- Set files with the acct_data_t type, if you want to treat the files as acct content.
+
+.br
+.TP 5
+Paths: 
+/var/log/account(/.*)?, /var/account(/.*)?
+
+.EX
+.PP
+.B acct_exec_t 
+.EE
+
+- Set files with the acct_exec_t type, if you want to transition an executable to the acct_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/accton, /sbin/accton, /etc/cron\.(daily|monthly)/acct
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux acct policy is very flexible allowing users to setup their acct processes in as secure a method as possible.
+.PP 
+The following process types are defined for acct:
+
+.EX
+.B acct_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), acct(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ada_selinux.8 serefpolicy-3.7.19/man/man8/ada_selinux.8
--- nsaserefpolicy/man/man8/ada_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ada_selinux.8	2012-03-20 22:37:14.331458727 +0000
@@ -0,0 +1,81 @@
+.TH  "ada_selinux"  "8"  "ada" "dwalsh@redhat.com" "ada SELinux Policy documentation"
+.SH "NAME"
+ada_selinux \- Security Enhanced Linux Policy for the ada processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ada
+(GNAT Ada95 compiler)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ada policy is very flexible allowing users to setup their ada processes in as secure a method as possible.
+.PP 
+The following file types are defined for ada:
+
+
+.EX
+.PP
+.B ada_exec_t 
+.EE
+
+- Set files with the ada_exec_t type, if you want to transition an executable to the ada_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/gnatls, /usr/bin/gnatbind, /usr/bin/gnatmake, /usr/libexec/gcc(/.*)?/gnat1
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ada policy is very flexible allowing users to setup their ada processes in as secure a method as possible.
+.PP 
+The following process types are defined for ada:
+
+.EX
+.B ada_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ada(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/afs_selinux.8 serefpolicy-3.7.19/man/man8/afs_selinux.8
--- nsaserefpolicy/man/man8/afs_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/afs_selinux.8	2012-03-20 22:37:14.331458727 +0000
@@ -0,0 +1,294 @@
+.TH  "afs_selinux"  "8"  "afs" "dwalsh@redhat.com" "afs SELinux Policy documentation"
+.SH "NAME"
+afs_selinux \- Security Enhanced Linux Policy for the afs processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B afs
+(Andrew Filesystem server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
+.PP 
+The following file types are defined for afs:
+
+
+.EX
+.PP
+.B afs_bosserver_exec_t 
+.EE
+
+- Set files with the afs_bosserver_exec_t type, if you want to transition an executable to the afs_bosserver_t domain.
+
+
+.EX
+.PP
+.B afs_cache_t 
+.EE
+
+- Set files with the afs_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/afs(/.*)?, /usr/vice/cache(/.*)?
+
+.EX
+.PP
+.B afs_config_t 
+.EE
+
+- Set files with the afs_config_t type, if you want to treat the files as afs configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/usr/afs/etc(/.*)?, /usr/afs/local(/.*)?
+
+.EX
+.PP
+.B afs_dbdir_t 
+.EE
+
+- Set files with the afs_dbdir_t type, if you want to treat the files as afs dbdir data.
+
+
+.EX
+.PP
+.B afs_exec_t 
+.EE
+
+- Set files with the afs_exec_t type, if you want to transition an executable to the afs_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/vice/etc/afsd, /usr/sbin/afsd
+
+.EX
+.PP
+.B afs_files_t 
+.EE
+
+- Set files with the afs_files_t type, if you want to treat the files as afs content.
+
+.br
+.TP 5
+Paths: 
+/vicepc, /vicepb, /vicepa
+
+.EX
+.PP
+.B afs_fsserver_exec_t 
+.EE
+
+- Set files with the afs_fsserver_exec_t type, if you want to transition an executable to the afs_fsserver_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/afs/bin/volserver, /usr/afs/bin/fileserver, /usr/afs/bin/salvager
+
+.EX
+.PP
+.B afs_initrc_exec_t 
+.EE
+
+- Set files with the afs_initrc_exec_t type, if you want to transition an executable to the afs_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/afs, /etc/rc\.d/init\.d/openafs-client
+
+.EX
+.PP
+.B afs_ka_db_t 
+.EE
+
+- Set files with the afs_ka_db_t type, if you want to treat the files as afs ka database content.
+
+
+.EX
+.PP
+.B afs_kaserver_exec_t 
+.EE
+
+- Set files with the afs_kaserver_exec_t type, if you want to transition an executable to the afs_kaserver_t domain.
+
+
+.EX
+.PP
+.B afs_logfile_t 
+.EE
+
+- Set files with the afs_logfile_t type, if you want to treat the files as afs logfile data.
+
+
+.EX
+.PP
+.B afs_pt_db_t 
+.EE
+
+- Set files with the afs_pt_db_t type, if you want to treat the files as afs pt database content.
+
+
+.EX
+.PP
+.B afs_ptserver_exec_t 
+.EE
+
+- Set files with the afs_ptserver_exec_t type, if you want to transition an executable to the afs_ptserver_t domain.
+
+
+.EX
+.PP
+.B afs_vl_db_t 
+.EE
+
+- Set files with the afs_vl_db_t type, if you want to treat the files as afs vl database content.
+
+
+.EX
+.PP
+.B afs_vlserver_exec_t 
+.EE
+
+- Set files with the afs_vlserver_exec_t type, if you want to transition an executable to the afs_vlserver_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
+.PP 
+The following port types are defined for afs:
+
+.EX
+.TP 5
+.B afs_bos_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_client_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_fs_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_ka_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_pt_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_vl_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
+.PP 
+The following process types are defined for afs:
+
+.EX
+.B afs_kaserver_t, afs_t, afs_fsserver_t, afs_bosserver_t, afs_vlserver_t, afs_ptserver_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), afs(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/aiccu_selinux.8 serefpolicy-3.7.19/man/man8/aiccu_selinux.8
--- nsaserefpolicy/man/man8/aiccu_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/aiccu_selinux.8	2012-03-20 22:37:14.331458727 +0000
@@ -0,0 +1,101 @@
+.TH  "aiccu_selinux"  "8"  "aiccu" "dwalsh@redhat.com" "aiccu SELinux Policy documentation"
+.SH "NAME"
+aiccu_selinux \- Security Enhanced Linux Policy for the aiccu processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B aiccu
+(Automatic IPv6 Connectivity Client Utility)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux aiccu policy is very flexible allowing users to setup their aiccu processes in as secure a method as possible.
+.PP 
+The following file types are defined for aiccu:
+
+
+.EX
+.PP
+.B aiccu_etc_t 
+.EE
+
+- Set files with the aiccu_etc_t type, if you want to store aiccu files in the /etc directories.
+
+
+.EX
+.PP
+.B aiccu_exec_t 
+.EE
+
+- Set files with the aiccu_exec_t type, if you want to transition an executable to the aiccu_t domain.
+
+
+.EX
+.PP
+.B aiccu_initrc_exec_t 
+.EE
+
+- Set files with the aiccu_initrc_exec_t type, if you want to transition an executable to the aiccu_initrc_t domain.
+
+
+.EX
+.PP
+.B aiccu_var_run_t 
+.EE
+
+- Set files with the aiccu_var_run_t type, if you want to store the aiccu files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux aiccu policy is very flexible allowing users to setup their aiccu processes in as secure a method as possible.
+.PP 
+The following process types are defined for aiccu:
+
+.EX
+.B aiccu_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), aiccu(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/aide_selinux.8 serefpolicy-3.7.19/man/man8/aide_selinux.8
--- nsaserefpolicy/man/man8/aide_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/aide_selinux.8	2012-03-20 22:37:14.331458727 +0000
@@ -0,0 +1,97 @@
+.TH  "aide_selinux"  "8"  "aide" "dwalsh@redhat.com" "aide SELinux Policy documentation"
+.SH "NAME"
+aide_selinux \- Security Enhanced Linux Policy for the aide processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B aide
+(Aide filesystem integrity checker)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux aide policy is very flexible allowing users to setup their aide processes in as secure a method as possible.
+.PP 
+The following file types are defined for aide:
+
+
+.EX
+.PP
+.B aide_db_t 
+.EE
+
+- Set files with the aide_db_t type, if you want to treat the files as aide database content.
+
+
+.EX
+.PP
+.B aide_exec_t 
+.EE
+
+- Set files with the aide_exec_t type, if you want to transition an executable to the aide_t domain.
+
+
+.EX
+.PP
+.B aide_log_t 
+.EE
+
+- Set files with the aide_log_t type, if you want to treat the data as aide log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/aide\.log, /var/log/aide(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux aide policy is very flexible allowing users to setup their aide processes in as secure a method as possible.
+.PP 
+The following process types are defined for aide:
+
+.EX
+.B aide_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), aide(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/aisexec_selinux.8 serefpolicy-3.7.19/man/man8/aisexec_selinux.8
--- nsaserefpolicy/man/man8/aisexec_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/aisexec_selinux.8	2012-03-20 22:37:14.331458727 +0000
@@ -0,0 +1,125 @@
+.TH  "aisexec_selinux"  "8"  "aisexec" "dwalsh@redhat.com" "aisexec SELinux Policy documentation"
+.SH "NAME"
+aisexec_selinux \- Security Enhanced Linux Policy for the aisexec processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B aisexec
+(SELinux policy for Aisexec Cluster Engine)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux aisexec policy is very flexible allowing users to setup their aisexec processes in as secure a method as possible.
+.PP 
+The following file types are defined for aisexec:
+
+
+.EX
+.PP
+.B aisexec_exec_t 
+.EE
+
+- Set files with the aisexec_exec_t type, if you want to transition an executable to the aisexec_t domain.
+
+
+.EX
+.PP
+.B aisexec_initrc_exec_t 
+.EE
+
+- Set files with the aisexec_initrc_exec_t type, if you want to transition an executable to the aisexec_initrc_t domain.
+
+
+.EX
+.PP
+.B aisexec_tmp_t 
+.EE
+
+- Set files with the aisexec_tmp_t type, if you want to store aisexec temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B aisexec_tmpfs_t 
+.EE
+
+- Set files with the aisexec_tmpfs_t type, if you want to store aisexec files on a tmpfs file system.
+
+
+.EX
+.PP
+.B aisexec_var_lib_t 
+.EE
+
+- Set files with the aisexec_var_lib_t type, if you want to store the aisexec files under the /var/lib directory.
+
+
+.EX
+.PP
+.B aisexec_var_log_t 
+.EE
+
+- Set files with the aisexec_var_log_t type, if you want to treat the data as aisexec var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B aisexec_var_run_t 
+.EE
+
+- Set files with the aisexec_var_run_t type, if you want to store the aisexec files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux aisexec policy is very flexible allowing users to setup their aisexec processes in as secure a method as possible.
+.PP 
+The following process types are defined for aisexec:
+
+.EX
+.B aisexec_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), aisexec(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/alsa_selinux.8 serefpolicy-3.7.19/man/man8/alsa_selinux.8
--- nsaserefpolicy/man/man8/alsa_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/alsa_selinux.8	2012-03-20 22:37:14.331458727 +0000
@@ -0,0 +1,101 @@
+.TH  "alsa_selinux"  "8"  "alsa" "dwalsh@redhat.com" "alsa SELinux Policy documentation"
+.SH "NAME"
+alsa_selinux \- Security Enhanced Linux Policy for the alsa processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B alsa
+(Ainit ALSA configuration tool)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux alsa policy is very flexible allowing users to setup their alsa processes in as secure a method as possible.
+.PP 
+The following file types are defined for alsa:
+
+
+.EX
+.PP
+.B alsa_etc_rw_t 
+.EE
+
+- Set files with the alsa_etc_rw_t type, if you want to treat the files as alsa etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/alsa/pcm(/.*)?, /etc/asound\.state, /etc/asound(/.*)?, /etc/alsa/asound\.state
+
+.EX
+.PP
+.B alsa_exec_t 
+.EE
+
+- Set files with the alsa_exec_t type, if you want to transition an executable to the alsa_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/ainit, /sbin/salsa, /sbin/alsactl, /bin/alsaunmute
+
+.EX
+.PP
+.B alsa_var_lib_t 
+.EE
+
+- Set files with the alsa_var_lib_t type, if you want to store the alsa files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux alsa policy is very flexible allowing users to setup their alsa processes in as secure a method as possible.
+.PP 
+The following process types are defined for alsa:
+
+.EX
+.B alsa_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), alsa(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/amanda_selinux.8 serefpolicy-3.7.19/man/man8/amanda_selinux.8
--- nsaserefpolicy/man/man8/amanda_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/amanda_selinux.8	2012-03-20 22:37:14.331458727 +0000
@@ -0,0 +1,219 @@
+.TH  "amanda_selinux"  "8"  "amanda" "dwalsh@redhat.com" "amanda SELinux Policy documentation"
+.SH "NAME"
+amanda_selinux \- Security Enhanced Linux Policy for the amanda processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B amanda
+(Automated backup program)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
+.PP 
+The following file types are defined for amanda:
+
+
+.EX
+.PP
+.B amanda_amandates_t 
+.EE
+
+- Set files with the amanda_amandates_t type, if you want to treat the files as amanda amandates data.
+
+
+.EX
+.PP
+.B amanda_config_t 
+.EE
+
+- Set files with the amanda_config_t type, if you want to treat the files as amanda configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/amanda(/.*)?, /var/lib/amanda/\.amandahosts
+
+.EX
+.PP
+.B amanda_data_t 
+.EE
+
+- Set files with the amanda_data_t type, if you want to treat the files as amanda content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/amanda/[^/]+(/.*)?, /etc/amanda/.*/tapelist(/.*)?, /etc/amanda/.*/index(/.*)?
+
+.EX
+.PP
+.B amanda_dumpdates_t 
+.EE
+
+- Set files with the amanda_dumpdates_t type, if you want to treat the files as amanda dumpdates data.
+
+
+.EX
+.PP
+.B amanda_exec_t 
+.EE
+
+- Set files with the amanda_exec_t type, if you want to transition an executable to the amanda_t domain.
+
+
+.EX
+.PP
+.B amanda_gnutarlists_t 
+.EE
+
+- Set files with the amanda_gnutarlists_t type, if you want to treat the files as amanda gnutarlists data.
+
+
+.EX
+.PP
+.B amanda_inetd_exec_t 
+.EE
+
+- Set files with the amanda_inetd_exec_t type, if you want to transition an executable to the amanda_inetd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/amanda/amidxtaped, /usr/lib(64)?/amanda/amandad, /usr/lib(64)?/amanda/amindexd
+
+.EX
+.PP
+.B amanda_log_t 
+.EE
+
+- Set files with the amanda_log_t type, if you want to treat the data as amanda log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/amanda(/.*)?, /var/lib/amanda/[^/]*/log(/.*)?
+
+.EX
+.PP
+.B amanda_recover_dir_t 
+.EE
+
+- Set files with the amanda_recover_dir_t type, if you want to treat the files as amanda recover dir data.
+
+
+.EX
+.PP
+.B amanda_recover_exec_t 
+.EE
+
+- Set files with the amanda_recover_exec_t type, if you want to transition an executable to the amanda_recover_t domain.
+
+
+.EX
+.PP
+.B amanda_tmp_t 
+.EE
+
+- Set files with the amanda_tmp_t type, if you want to store amanda temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B amanda_usr_lib_t 
+.EE
+
+- Set files with the amanda_usr_lib_t type, if you want to treat the files as amanda usr lib data.
+
+
+.EX
+.PP
+.B amanda_var_lib_t 
+.EE
+
+- Set files with the amanda_var_lib_t type, if you want to store the amanda files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/amanda, /var/lib/amanda/[^/]+/index(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
+.PP 
+The following port types are defined for amanda:
+
+.EX
+.TP 5
+.B amanda_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
+.PP 
+The following process types are defined for amanda:
+
+.EX
+.B amanda_t, amanda_recover_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), amanda(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/amavis_selinux.8 serefpolicy-3.7.19/man/man8/amavis_selinux.8
--- nsaserefpolicy/man/man8/amavis_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/amavis_selinux.8	2012-03-20 22:37:14.331458727 +0000
@@ -0,0 +1,193 @@
+.TH  "amavis_selinux"  "8"  "amavis" "dwalsh@redhat.com" "amavis SELinux Policy documentation"
+.SH "NAME"
+amavis_selinux \- Security Enhanced Linux Policy for the amavis processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B amavis
+(
+Daemon that interfaces mail transfer agents and content
+checkers, such as virus scanners.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
+.PP 
+The following file types are defined for amavis:
+
+
+.EX
+.PP
+.B amavis_etc_t 
+.EE
+
+- Set files with the amavis_etc_t type, if you want to store amavis files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/amavis\.conf, /etc/amavisd(/.*)?
+
+.EX
+.PP
+.B amavis_exec_t 
+.EE
+
+- Set files with the amavis_exec_t type, if you want to transition an executable to the amavis_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/AntiVir/antivir, /usr/sbin/amavisd.*
+
+.EX
+.PP
+.B amavis_initrc_exec_t 
+.EE
+
+- Set files with the amavis_initrc_exec_t type, if you want to transition an executable to the amavis_initrc_t domain.
+
+
+.EX
+.PP
+.B amavis_quarantine_t 
+.EE
+
+- Set files with the amavis_quarantine_t type, if you want to treat the files as amavis quarantine data.
+
+
+.EX
+.PP
+.B amavis_spool_t 
+.EE
+
+- Set files with the amavis_spool_t type, if you want to store the amavis files under the /var/spool directory.
+
+
+.EX
+.PP
+.B amavis_tmp_t 
+.EE
+
+- Set files with the amavis_tmp_t type, if you want to store amavis temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B amavis_var_lib_t 
+.EE
+
+- Set files with the amavis_var_lib_t type, if you want to store the amavis files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/amavis(/.*)?, /var/amavis(/.*)?
+
+.EX
+.PP
+.B amavis_var_log_t 
+.EE
+
+- Set files with the amavis_var_log_t type, if you want to treat the data as amavis var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B amavis_var_run_t 
+.EE
+
+- Set files with the amavis_var_run_t type, if you want to store the amavis files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
+.PP 
+The following port types are defined for amavis:
+
+.EX
+.TP 5
+.B amavisd_recv_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B amavisd_send_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
+.PP 
+The following process types are defined for amavis:
+
+.EX
+.B amavis_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), amavis(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/amtu_selinux.8 serefpolicy-3.7.19/man/man8/amtu_selinux.8
--- nsaserefpolicy/man/man8/amtu_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/amtu_selinux.8	2012-03-20 22:37:14.331458727 +0000
@@ -0,0 +1,77 @@
+.TH  "amtu_selinux"  "8"  "amtu" "dwalsh@redhat.com" "amtu SELinux Policy documentation"
+.SH "NAME"
+amtu_selinux \- Security Enhanced Linux Policy for the amtu processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B amtu
+(Abstract Machine Test Utility)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux amtu policy is very flexible allowing users to setup their amtu processes in as secure a method as possible.
+.PP 
+The following file types are defined for amtu:
+
+
+.EX
+.PP
+.B amtu_exec_t 
+.EE
+
+- Set files with the amtu_exec_t type, if you want to transition an executable to the amtu_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux amtu policy is very flexible allowing users to setup their amtu processes in as secure a method as possible.
+.PP 
+The following process types are defined for amtu:
+
+.EX
+.B amtu_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), amtu(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/apcupsd_selinux.8 serefpolicy-3.7.19/man/man8/apcupsd_selinux.8
--- nsaserefpolicy/man/man8/apcupsd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/apcupsd_selinux.8	2012-03-20 22:37:14.332458704 +0000
@@ -0,0 +1,151 @@
+.TH  "apcupsd_selinux"  "8"  "apcupsd" "dwalsh@redhat.com" "apcupsd SELinux Policy documentation"
+.SH "NAME"
+apcupsd_selinux \- Security Enhanced Linux Policy for the apcupsd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B apcupsd
+(APC UPS monitoring daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for apcupsd:
+
+
+.EX
+.PP
+.B apcupsd_exec_t 
+.EE
+
+- Set files with the apcupsd_exec_t type, if you want to transition an executable to the apcupsd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/apcupsd, /usr/sbin/apcupsd
+
+.EX
+.PP
+.B apcupsd_initrc_exec_t 
+.EE
+
+- Set files with the apcupsd_initrc_exec_t type, if you want to transition an executable to the apcupsd_initrc_t domain.
+
+
+.EX
+.PP
+.B apcupsd_lock_t 
+.EE
+
+- Set files with the apcupsd_lock_t type, if you want to treat the files as apcupsd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B apcupsd_log_t 
+.EE
+
+- Set files with the apcupsd_log_t type, if you want to treat the data as apcupsd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/apcupsd\.status.*, /var/log/apcupsd\.events.*
+
+.EX
+.PP
+.B apcupsd_tmp_t 
+.EE
+
+- Set files with the apcupsd_tmp_t type, if you want to store apcupsd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B apcupsd_var_run_t 
+.EE
+
+- Set files with the apcupsd_var_run_t type, if you want to store the apcupsd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
+.PP 
+The following port types are defined for apcupsd:
+
+.EX
+.TP 5
+.B apcupsd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for apcupsd:
+
+.EX
+.B apcupsd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), apcupsd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/apmd_selinux.8 serefpolicy-3.7.19/man/man8/apmd_selinux.8
--- nsaserefpolicy/man/man8/apmd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/apmd_selinux.8	2012-03-20 22:37:14.332458704 +0000
@@ -0,0 +1,119 @@
+.TH  "apmd_selinux"  "8"  "apmd" "dwalsh@redhat.com" "apmd SELinux Policy documentation"
+.SH "NAME"
+apmd_selinux \- Security Enhanced Linux Policy for the apmd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux apmd policy is very flexible allowing users to setup their apmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for apmd:
+
+
+.EX
+.PP
+.B apm_exec_t 
+.EE
+
+- Set files with the apm_exec_t type, if you want to transition an executable to the apm_t domain.
+
+
+.EX
+.PP
+.B apmd_exec_t 
+.EE
+
+- Set files with the apmd_exec_t type, if you want to transition an executable to the apmd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/powersaved, /usr/sbin/acpid, /usr/sbin/apmd
+
+.EX
+.PP
+.B apmd_lock_t 
+.EE
+
+- Set files with the apmd_lock_t type, if you want to treat the files as apmd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B apmd_log_t 
+.EE
+
+- Set files with the apmd_log_t type, if you want to treat the data as apmd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B apmd_tmp_t 
+.EE
+
+- Set files with the apmd_tmp_t type, if you want to store apmd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B apmd_var_run_t 
+.EE
+
+- Set files with the apmd_var_run_t type, if you want to store the apmd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/\.?acpid\.socket, /var/run/apmd\.pid, /var/run/powersaved\.pid, /var/run/powersave_socket
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux apmd policy is very flexible allowing users to setup their apmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for apmd:
+
+.EX
+.B apm_t, apmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), apmd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/apm_selinux.8 serefpolicy-3.7.19/man/man8/apm_selinux.8
--- nsaserefpolicy/man/man8/apm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/apm_selinux.8	2012-03-20 22:37:14.332458704 +0000
@@ -0,0 +1,125 @@
+.TH  "apm_selinux"  "8"  "apm" "dwalsh@redhat.com" "apm SELinux Policy documentation"
+.SH "NAME"
+apm_selinux \- Security Enhanced Linux Policy for the apm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B apm
+(Advanced power management daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux apm policy is very flexible allowing users to setup their apm processes in as secure a method as possible.
+.PP 
+The following file types are defined for apm:
+
+
+.EX
+.PP
+.B apm_exec_t 
+.EE
+
+- Set files with the apm_exec_t type, if you want to transition an executable to the apm_t domain.
+
+
+.EX
+.PP
+.B apmd_exec_t 
+.EE
+
+- Set files with the apmd_exec_t type, if you want to transition an executable to the apmd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/powersaved, /usr/sbin/acpid, /usr/sbin/apmd
+
+.EX
+.PP
+.B apmd_lock_t 
+.EE
+
+- Set files with the apmd_lock_t type, if you want to treat the files as apmd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B apmd_log_t 
+.EE
+
+- Set files with the apmd_log_t type, if you want to treat the data as apmd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B apmd_tmp_t 
+.EE
+
+- Set files with the apmd_tmp_t type, if you want to store apmd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B apmd_var_run_t 
+.EE
+
+- Set files with the apmd_var_run_t type, if you want to store the apmd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/\.?acpid\.socket, /var/run/apmd\.pid, /var/run/powersaved\.pid, /var/run/powersave_socket
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux apm policy is very flexible allowing users to setup their apm processes in as secure a method as possible.
+.PP 
+The following process types are defined for apm:
+
+.EX
+.B apm_t, apmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), apm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/arpwatch_selinux.8 serefpolicy-3.7.19/man/man8/arpwatch_selinux.8
--- nsaserefpolicy/man/man8/arpwatch_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/arpwatch_selinux.8	2012-03-20 22:37:14.332458704 +0000
@@ -0,0 +1,113 @@
+.TH  "arpwatch_selinux"  "8"  "arpwatch" "dwalsh@redhat.com" "arpwatch SELinux Policy documentation"
+.SH "NAME"
+arpwatch_selinux \- Security Enhanced Linux Policy for the arpwatch processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B arpwatch
+(Ethernet activity monitor)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux arpwatch policy is very flexible allowing users to setup their arpwatch processes in as secure a method as possible.
+.PP 
+The following file types are defined for arpwatch:
+
+
+.EX
+.PP
+.B arpwatch_data_t 
+.EE
+
+- Set files with the arpwatch_data_t type, if you want to treat the files as arpwatch content.
+
+.br
+.TP 5
+Paths: 
+/var/arpwatch(/.*)?, /var/lib/arpwatch(/.*)?
+
+.EX
+.PP
+.B arpwatch_exec_t 
+.EE
+
+- Set files with the arpwatch_exec_t type, if you want to transition an executable to the arpwatch_t domain.
+
+
+.EX
+.PP
+.B arpwatch_initrc_exec_t 
+.EE
+
+- Set files with the arpwatch_initrc_exec_t type, if you want to transition an executable to the arpwatch_initrc_t domain.
+
+
+.EX
+.PP
+.B arpwatch_tmp_t 
+.EE
+
+- Set files with the arpwatch_tmp_t type, if you want to store arpwatch temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B arpwatch_var_run_t 
+.EE
+
+- Set files with the arpwatch_var_run_t type, if you want to store the arpwatch files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux arpwatch policy is very flexible allowing users to setup their arpwatch processes in as secure a method as possible.
+.PP 
+The following process types are defined for arpwatch:
+
+.EX
+.B arpwatch_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), arpwatch(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/asterisk_selinux.8 serefpolicy-3.7.19/man/man8/asterisk_selinux.8
--- nsaserefpolicy/man/man8/asterisk_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/asterisk_selinux.8	2012-03-20 22:37:14.332458704 +0000
@@ -0,0 +1,167 @@
+.TH  "asterisk_selinux"  "8"  "asterisk" "dwalsh@redhat.com" "asterisk SELinux Policy documentation"
+.SH "NAME"
+asterisk_selinux \- Security Enhanced Linux Policy for the asterisk processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B asterisk
+(Asterisk IP telephony server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
+.PP 
+The following file types are defined for asterisk:
+
+
+.EX
+.PP
+.B asterisk_etc_t 
+.EE
+
+- Set files with the asterisk_etc_t type, if you want to store asterisk files in the /etc directories.
+
+
+.EX
+.PP
+.B asterisk_exec_t 
+.EE
+
+- Set files with the asterisk_exec_t type, if you want to transition an executable to the asterisk_t domain.
+
+
+.EX
+.PP
+.B asterisk_initrc_exec_t 
+.EE
+
+- Set files with the asterisk_initrc_exec_t type, if you want to transition an executable to the asterisk_initrc_t domain.
+
+
+.EX
+.PP
+.B asterisk_log_t 
+.EE
+
+- Set files with the asterisk_log_t type, if you want to treat the data as asterisk log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B asterisk_spool_t 
+.EE
+
+- Set files with the asterisk_spool_t type, if you want to store the asterisk files under the /var/spool directory.
+
+
+.EX
+.PP
+.B asterisk_tmp_t 
+.EE
+
+- Set files with the asterisk_tmp_t type, if you want to store asterisk temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B asterisk_tmpfs_t 
+.EE
+
+- Set files with the asterisk_tmpfs_t type, if you want to store asterisk files on a tmpfs file system.
+
+
+.EX
+.PP
+.B asterisk_var_lib_t 
+.EE
+
+- Set files with the asterisk_var_lib_t type, if you want to store the asterisk files under the /var/lib directory.
+
+
+.EX
+.PP
+.B asterisk_var_run_t 
+.EE
+
+- Set files with the asterisk_var_run_t type, if you want to store the asterisk files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
+.PP 
+The following port types are defined for asterisk:
+
+.EX
+.TP 5
+.B asterisk_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
+.PP 
+The following process types are defined for asterisk:
+
+.EX
+.B asterisk_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), asterisk(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/audisp_selinux.8 serefpolicy-3.7.19/man/man8/audisp_selinux.8
--- nsaserefpolicy/man/man8/audisp_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/audisp_selinux.8	2012-03-20 22:37:14.332458704 +0000
@@ -0,0 +1,87 @@
+.TH  "audisp_selinux"  "8"  "audisp" "dwalsh@redhat.com" "audisp SELinux Policy documentation"
+.SH "NAME"
+audisp_selinux \- Security Enhanced Linux Policy for the audisp processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux audisp policy is very flexible allowing users to setup their audisp processes in as secure a method as possible.
+.PP 
+The following file types are defined for audisp:
+
+
+.EX
+.PP
+.B audisp_exec_t 
+.EE
+
+- Set files with the audisp_exec_t type, if you want to transition an executable to the audisp_t domain.
+
+
+.EX
+.PP
+.B audisp_remote_exec_t 
+.EE
+
+- Set files with the audisp_remote_exec_t type, if you want to transition an executable to the audisp_remote_t domain.
+
+
+.EX
+.PP
+.B audisp_var_run_t 
+.EE
+
+- Set files with the audisp_var_run_t type, if you want to store the audisp files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux audisp policy is very flexible allowing users to setup their audisp processes in as secure a method as possible.
+.PP 
+The following process types are defined for audisp:
+
+.EX
+.B audisp_remote_t, audisp_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), audisp(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/auditctl_selinux.8 serefpolicy-3.7.19/man/man8/auditctl_selinux.8
--- nsaserefpolicy/man/man8/auditctl_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/auditctl_selinux.8	2012-03-20 22:37:14.332458704 +0000
@@ -0,0 +1,71 @@
+.TH  "auditctl_selinux"  "8"  "auditctl" "dwalsh@redhat.com" "auditctl SELinux Policy documentation"
+.SH "NAME"
+auditctl_selinux \- Security Enhanced Linux Policy for the auditctl processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux auditctl policy is very flexible allowing users to setup their auditctl processes in as secure a method as possible.
+.PP 
+The following file types are defined for auditctl:
+
+
+.EX
+.PP
+.B auditctl_exec_t 
+.EE
+
+- Set files with the auditctl_exec_t type, if you want to transition an executable to the auditctl_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux auditctl policy is very flexible allowing users to setup their auditctl processes in as secure a method as possible.
+.PP 
+The following process types are defined for auditctl:
+
+.EX
+.B auditctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), auditctl(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/auditd_selinux.8 serefpolicy-3.7.19/man/man8/auditd_selinux.8
--- nsaserefpolicy/man/man8/auditd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/auditd_selinux.8	2012-03-20 22:37:14.332458704 +0000
@@ -0,0 +1,145 @@
+.TH  "auditd_selinux"  "8"  "auditd" "dwalsh@redhat.com" "auditd SELinux Policy documentation"
+.SH "NAME"
+auditd_selinux \- Security Enhanced Linux Policy for the auditd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
+.PP 
+The following file types are defined for auditd:
+
+
+.EX
+.PP
+.B audit_spool_t 
+.EE
+
+- Set files with the audit_spool_t type, if you want to store the audit files under the /var/spool directory.
+
+
+.EX
+.PP
+.B auditd_etc_t 
+.EE
+
+- Set files with the auditd_etc_t type, if you want to store auditd files in the /etc directories.
+
+
+.EX
+.PP
+.B auditd_exec_t 
+.EE
+
+- Set files with the auditd_exec_t type, if you want to transition an executable to the auditd_t domain.
+
+
+.EX
+.PP
+.B auditd_initrc_exec_t 
+.EE
+
+- Set files with the auditd_initrc_exec_t type, if you want to transition an executable to the auditd_initrc_t domain.
+
+
+.EX
+.PP
+.B auditd_log_t 
+.EE
+
+- Set files with the auditd_log_t type, if you want to treat the data as auditd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/audit(/.*)?, /var/log/audit\.log
+
+.EX
+.PP
+.B auditd_var_run_t 
+.EE
+
+- Set files with the auditd_var_run_t type, if you want to store the auditd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/audit_events, /var/run/auditd_sock, /var/run/auditd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
+.PP 
+The following port types are defined for auditd:
+
+.EX
+.TP 5
+.B audit_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
+.PP 
+The following process types are defined for auditd:
+
+.EX
+.B auditd_t, auditctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), auditd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/automount_selinux.8 serefpolicy-3.7.19/man/man8/automount_selinux.8
--- nsaserefpolicy/man/man8/automount_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/automount_selinux.8	2012-03-20 22:37:14.333458681 +0000
@@ -0,0 +1,121 @@
+.TH  "automount_selinux"  "8"  "automount" "dwalsh@redhat.com" "automount SELinux Policy documentation"
+.SH "NAME"
+automount_selinux \- Security Enhanced Linux Policy for the automount processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B automount
+(Filesystem automounter service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux automount policy is very flexible allowing users to setup their automount processes in as secure a method as possible.
+.PP 
+The following file types are defined for automount:
+
+
+.EX
+.PP
+.B automount_exec_t 
+.EE
+
+- Set files with the automount_exec_t type, if you want to transition an executable to the automount_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/automount, /etc/apm/event\.d/autofs
+
+.EX
+.PP
+.B automount_initrc_exec_t 
+.EE
+
+- Set files with the automount_initrc_exec_t type, if you want to transition an executable to the automount_initrc_t domain.
+
+
+.EX
+.PP
+.B automount_keytab_t 
+.EE
+
+- Set files with the automount_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B automount_lock_t 
+.EE
+
+- Set files with the automount_lock_t type, if you want to treat the files as automount lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B automount_tmp_t 
+.EE
+
+- Set files with the automount_tmp_t type, if you want to store automount temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B automount_var_run_t 
+.EE
+
+- Set files with the automount_var_run_t type, if you want to store the automount files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux automount policy is very flexible allowing users to setup their automount processes in as secure a method as possible.
+.PP 
+The following process types are defined for automount:
+
+.EX
+.B automount_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), automount(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/avahi_selinux.8 serefpolicy-3.7.19/man/man8/avahi_selinux.8
--- nsaserefpolicy/man/man8/avahi_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/avahi_selinux.8	2012-03-20 22:37:14.333458681 +0000
@@ -0,0 +1,120 @@
+.TH  "avahi_selinux"  "8"  "avahi" "dwalsh@redhat.com" "avahi SELinux Policy documentation"
+.SH "NAME"
+avahi_selinux \- Security Enhanced Linux Policy for the avahi processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B avahi
+(mDNS/DNS-SD daemon implementing Apple ZeroConf architecture)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  avahi policy is extremely flexible and has several booleans that allow you to manipulate the policy and run avahi with the tightest access possible.
+
+
+.PP
+If you want to allow Apache to communicate with avahi service via dbu, you must turn on the httpd_dbus_avahi boolean.
+
+.EX
+.B setsebool -P httpd_dbus_avahi 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux avahi policy is very flexible allowing users to setup their avahi processes in as secure a method as possible.
+.PP 
+The following file types are defined for avahi:
+
+
+.EX
+.PP
+.B avahi_exec_t 
+.EE
+
+- Set files with the avahi_exec_t type, if you want to transition an executable to the avahi_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/avahi-dnsconfd, /usr/sbin/avahi-autoipd, /usr/sbin/avahi-daemon
+
+.EX
+.PP
+.B avahi_initrc_exec_t 
+.EE
+
+- Set files with the avahi_initrc_exec_t type, if you want to transition an executable to the avahi_initrc_t domain.
+
+
+.EX
+.PP
+.B avahi_var_lib_t 
+.EE
+
+- Set files with the avahi_var_lib_t type, if you want to store the avahi files under the /var/lib directory.
+
+
+.EX
+.PP
+.B avahi_var_run_t 
+.EE
+
+- Set files with the avahi_var_run_t type, if you want to store the avahi files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux avahi policy is very flexible allowing users to setup their avahi processes in as secure a method as possible.
+.PP 
+The following process types are defined for avahi:
+
+.EX
+.B avahi_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), avahi(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/awstats_selinux.8 serefpolicy-3.7.19/man/man8/awstats_selinux.8
--- nsaserefpolicy/man/man8/awstats_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/awstats_selinux.8	2012-03-20 22:37:14.333458681 +0000
@@ -0,0 +1,96 @@
+.TH  "awstats_selinux"  "8"  "awstats" "dwalsh@redhat.com" "awstats SELinux Policy documentation"
+.SH "NAME"
+awstats_selinux \- Security Enhanced Linux Policy for the awstats processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B awstats
+(
+AWStats is a free powerful and featureful tool that generates advanced
+web, streaming, ftp or mail server statistics, graphically.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux awstats policy is very flexible allowing users to setup their awstats processes in as secure a method as possible.
+.PP 
+The following file types are defined for awstats:
+
+
+.EX
+.PP
+.B awstats_exec_t 
+.EE
+
+- Set files with the awstats_exec_t type, if you want to transition an executable to the awstats_t domain.
+
+
+.EX
+.PP
+.B awstats_tmp_t 
+.EE
+
+- Set files with the awstats_tmp_t type, if you want to store awstats temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B awstats_var_lib_t 
+.EE
+
+- Set files with the awstats_var_lib_t type, if you want to store the awstats files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux awstats policy is very flexible allowing users to setup their awstats processes in as secure a method as possible.
+.PP 
+The following process types are defined for awstats:
+
+.EX
+.B awstats_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), awstats(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/bitlbee_selinux.8 serefpolicy-3.7.19/man/man8/bitlbee_selinux.8
--- nsaserefpolicy/man/man8/bitlbee_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/bitlbee_selinux.8	2012-03-20 22:37:14.333458681 +0000
@@ -0,0 +1,109 @@
+.TH  "bitlbee_selinux"  "8"  "bitlbee" "dwalsh@redhat.com" "bitlbee SELinux Policy documentation"
+.SH "NAME"
+bitlbee_selinux \- Security Enhanced Linux Policy for the bitlbee processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B bitlbee
+(Bitlbee service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux bitlbee policy is very flexible allowing users to setup their bitlbee processes in as secure a method as possible.
+.PP 
+The following file types are defined for bitlbee:
+
+
+.EX
+.PP
+.B bitlbee_conf_t 
+.EE
+
+- Set files with the bitlbee_conf_t type, if you want to treat the files as bitlbee configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B bitlbee_exec_t 
+.EE
+
+- Set files with the bitlbee_exec_t type, if you want to transition an executable to the bitlbee_t domain.
+
+
+.EX
+.PP
+.B bitlbee_initrc_exec_t 
+.EE
+
+- Set files with the bitlbee_initrc_exec_t type, if you want to transition an executable to the bitlbee_initrc_t domain.
+
+
+.EX
+.PP
+.B bitlbee_tmp_t 
+.EE
+
+- Set files with the bitlbee_tmp_t type, if you want to store bitlbee temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B bitlbee_var_t 
+.EE
+
+- Set files with the bitlbee_var_t type, if you want to store the bit files under the /var directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux bitlbee policy is very flexible allowing users to setup their bitlbee processes in as secure a method as possible.
+.PP 
+The following process types are defined for bitlbee:
+
+.EX
+.B bitlbee_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), bitlbee(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/bluetooth_selinux.8 serefpolicy-3.7.19/man/man8/bluetooth_selinux.8
--- nsaserefpolicy/man/man8/bluetooth_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/bluetooth_selinux.8	2012-03-20 22:37:14.333458681 +0000
@@ -0,0 +1,184 @@
+.TH  "bluetooth_selinux"  "8"  "bluetooth" "dwalsh@redhat.com" "bluetooth SELinux Policy documentation"
+.SH "NAME"
+bluetooth_selinux \- Security Enhanced Linux Policy for the bluetooth processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B bluetooth
+(Bluetooth tools and system services)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  bluetooth policy is extremely flexible and has several booleans that allow you to manipulate the policy and run bluetooth with the tightest access possible.
+
+
+.PP
+If you want to allow xguest to use blue tooth device, you must turn on the xguest_use_bluetooth boolean.
+
+.EX
+.B setsebool -P xguest_use_bluetooth 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux bluetooth policy is very flexible allowing users to setup their bluetooth processes in as secure a method as possible.
+.PP 
+The following file types are defined for bluetooth:
+
+
+.EX
+.PP
+.B bluetooth_conf_rw_t 
+.EE
+
+- Set files with the bluetooth_conf_rw_t type, if you want to treat the files as bluetooth conf read/write content.
+
+
+.EX
+.PP
+.B bluetooth_conf_t 
+.EE
+
+- Set files with the bluetooth_conf_t type, if you want to treat the files as bluetooth configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B bluetooth_exec_t 
+.EE
+
+- Set files with the bluetooth_exec_t type, if you want to transition an executable to the bluetooth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/hcid, /usr/sbin/sdpd, /usr/bin/hidd, /usr/sbin/bluetoothd, /usr/sbin/hid2hci, /usr/bin/dund, /usr/sbin/hciattach, /usr/bin/rfcomm
+
+.EX
+.PP
+.B bluetooth_helper_exec_t 
+.EE
+
+- Set files with the bluetooth_helper_exec_t type, if you want to transition an executable to the bluetooth_helper_t domain.
+
+
+.EX
+.PP
+.B bluetooth_helper_tmp_t 
+.EE
+
+- Set files with the bluetooth_helper_tmp_t type, if you want to store bluetooth helper temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B bluetooth_helper_tmpfs_t 
+.EE
+
+- Set files with the bluetooth_helper_tmpfs_t type, if you want to store bluetooth helper files on a tmpfs file system.
+
+
+.EX
+.PP
+.B bluetooth_initrc_exec_t 
+.EE
+
+- Set files with the bluetooth_initrc_exec_t type, if you want to transition an executable to the bluetooth_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/bluetooth, /etc/rc\.d/init\.d/dund, /etc/rc\.d/init\.d/pand
+
+.EX
+.PP
+.B bluetooth_lock_t 
+.EE
+
+- Set files with the bluetooth_lock_t type, if you want to treat the files as bluetooth lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B bluetooth_tmp_t 
+.EE
+
+- Set files with the bluetooth_tmp_t type, if you want to store bluetooth temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B bluetooth_var_lib_t 
+.EE
+
+- Set files with the bluetooth_var_lib_t type, if you want to store the bluetooth files under the /var/lib directory.
+
+
+.EX
+.PP
+.B bluetooth_var_run_t 
+.EE
+
+- Set files with the bluetooth_var_run_t type, if you want to store the bluetooth files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/bluetoothd_address, /var/run/sdp
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux bluetooth policy is very flexible allowing users to setup their bluetooth processes in as secure a method as possible.
+.PP 
+The following process types are defined for bluetooth:
+
+.EX
+.B bluetooth_helper_t, bluetooth_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), bluetooth(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/boinc_selinux.8 serefpolicy-3.7.19/man/man8/boinc_selinux.8
--- nsaserefpolicy/man/man8/boinc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/boinc_selinux.8	2012-03-20 22:37:14.333458681 +0000
@@ -0,0 +1,155 @@
+.TH  "boinc_selinux"  "8"  "boinc" "dwalsh@redhat.com" "boinc SELinux Policy documentation"
+.SH "NAME"
+boinc_selinux \- Security Enhanced Linux Policy for the boinc processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B boinc
+(policy for boinc)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
+.PP 
+The following file types are defined for boinc:
+
+
+.EX
+.PP
+.B boinc_exec_t 
+.EE
+
+- Set files with the boinc_exec_t type, if you want to transition an executable to the boinc_t domain.
+
+
+.EX
+.PP
+.B boinc_initrc_exec_t 
+.EE
+
+- Set files with the boinc_initrc_exec_t type, if you want to transition an executable to the boinc_initrc_t domain.
+
+
+.EX
+.PP
+.B boinc_project_tmp_t 
+.EE
+
+- Set files with the boinc_project_tmp_t type, if you want to store boinc project temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B boinc_project_var_lib_t 
+.EE
+
+- Set files with the boinc_project_var_lib_t type, if you want to store the boinc project files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/boinc/projects(/.*)?, /var/lib/boinc/slots(/.*)?
+
+.EX
+.PP
+.B boinc_tmp_t 
+.EE
+
+- Set files with the boinc_tmp_t type, if you want to store boinc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B boinc_tmpfs_t 
+.EE
+
+- Set files with the boinc_tmpfs_t type, if you want to store boinc files on a tmpfs file system.
+
+
+.EX
+.PP
+.B boinc_var_lib_t 
+.EE
+
+- Set files with the boinc_var_lib_t type, if you want to store the boinc files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
+.PP 
+The following port types are defined for boinc:
+
+.EX
+.TP 5
+.B boinc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
+.PP 
+The following process types are defined for boinc:
+
+.EX
+.B boinc_t, boinc_project_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), boinc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/bootloader_selinux.8 serefpolicy-3.7.19/man/man8/bootloader_selinux.8
--- nsaserefpolicy/man/man8/bootloader_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/bootloader_selinux.8	2012-03-20 22:37:14.333458681 +0000
@@ -0,0 +1,116 @@
+.TH  "bootloader_selinux"  "8"  "bootloader" "dwalsh@redhat.com" "bootloader SELinux Policy documentation"
+.SH "NAME"
+bootloader_selinux \- Security Enhanced Linux Policy for the bootloader processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B bootloader
+(Policy for the kernel modules, kernel image, and bootloader)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  bootloader policy is extremely flexible and has several booleans that allow you to manipulate the policy and run bootloader with the tightest access possible.
+
+
+.PP
+If you want to allows xdm to execute bootloade, you must turn on the xdm_exec_bootloader boolean.
+
+.EX
+.B setsebool -P xdm_exec_bootloader 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux bootloader policy is very flexible allowing users to setup their bootloader processes in as secure a method as possible.
+.PP 
+The following file types are defined for bootloader:
+
+
+.EX
+.PP
+.B bootloader_etc_t 
+.EE
+
+- Set files with the bootloader_etc_t type, if you want to store bootloader files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/yaboot\.conf.*, /etc/lilo\.conf.*
+
+.EX
+.PP
+.B bootloader_exec_t 
+.EE
+
+- Set files with the bootloader_exec_t type, if you want to transition an executable to the bootloader_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/lilo.*, /usr/sbin/grub, /sbin/ybin.*, /sbin/grub
+
+.EX
+.PP
+.B bootloader_tmp_t 
+.EE
+
+- Set files with the bootloader_tmp_t type, if you want to store bootloader temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux bootloader policy is very flexible allowing users to setup their bootloader processes in as secure a method as possible.
+.PP 
+The following process types are defined for bootloader:
+
+.EX
+.B bootloader_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), bootloader(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/brctl_selinux.8 serefpolicy-3.7.19/man/man8/brctl_selinux.8
--- nsaserefpolicy/man/man8/brctl_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/brctl_selinux.8	2012-03-20 22:37:14.333458681 +0000
@@ -0,0 +1,77 @@
+.TH  "brctl_selinux"  "8"  "brctl" "dwalsh@redhat.com" "brctl SELinux Policy documentation"
+.SH "NAME"
+brctl_selinux \- Security Enhanced Linux Policy for the brctl processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B brctl
+(Utilities for configuring the linux ethernet bridge)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux brctl policy is very flexible allowing users to setup their brctl processes in as secure a method as possible.
+.PP 
+The following file types are defined for brctl:
+
+
+.EX
+.PP
+.B brctl_exec_t 
+.EE
+
+- Set files with the brctl_exec_t type, if you want to transition an executable to the brctl_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux brctl policy is very flexible allowing users to setup their brctl processes in as secure a method as possible.
+.PP 
+The following process types are defined for brctl:
+
+.EX
+.B brctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), brctl(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cachefilesd_selinux.8 serefpolicy-3.7.19/man/man8/cachefilesd_selinux.8
--- nsaserefpolicy/man/man8/cachefilesd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cachefilesd_selinux.8	2012-03-20 22:37:14.333458681 +0000
@@ -0,0 +1,97 @@
+.TH  "cachefilesd_selinux"  "8"  "cachefilesd" "dwalsh@redhat.com" "cachefilesd SELinux Policy documentation"
+.SH "NAME"
+cachefilesd_selinux \- Security Enhanced Linux Policy for the cachefilesd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cachefilesd
+(policy for cachefilesd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cachefilesd policy is very flexible allowing users to setup their cachefilesd processes in as secure a method as possible.
+.PP 
+The following file types are defined for cachefilesd:
+
+
+.EX
+.PP
+.B cachefiles_var_t 
+.EE
+
+- Set files with the cachefiles_var_t type, if you want to store the cachef files under the /var directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/cachefilesd\.pid, /var/fscache(/.*)?, /var/cache/fscache(/.*)?
+
+.EX
+.PP
+.B cachefilesd_exec_t 
+.EE
+
+- Set files with the cachefilesd_exec_t type, if you want to transition an executable to the cachefilesd_t domain.
+
+
+.EX
+.PP
+.B cachefilesd_var_run_t 
+.EE
+
+- Set files with the cachefilesd_var_run_t type, if you want to store the cachefilesd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cachefilesd policy is very flexible allowing users to setup their cachefilesd processes in as secure a method as possible.
+.PP 
+The following process types are defined for cachefilesd:
+
+.EX
+.B cachefilesd_t, cachefiles_kernel_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cachefilesd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/calamaris_selinux.8 serefpolicy-3.7.19/man/man8/calamaris_selinux.8
--- nsaserefpolicy/man/man8/calamaris_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/calamaris_selinux.8	2012-03-20 22:37:14.334458657 +0000
@@ -0,0 +1,93 @@
+.TH  "calamaris_selinux"  "8"  "calamaris" "dwalsh@redhat.com" "calamaris SELinux Policy documentation"
+.SH "NAME"
+calamaris_selinux \- Security Enhanced Linux Policy for the calamaris processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B calamaris
+(Squid log analysis)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux calamaris policy is very flexible allowing users to setup their calamaris processes in as secure a method as possible.
+.PP 
+The following file types are defined for calamaris:
+
+
+.EX
+.PP
+.B calamaris_exec_t 
+.EE
+
+- Set files with the calamaris_exec_t type, if you want to transition an executable to the calamaris_t domain.
+
+
+.EX
+.PP
+.B calamaris_log_t 
+.EE
+
+- Set files with the calamaris_log_t type, if you want to treat the data as calamaris log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B calamaris_www_t 
+.EE
+
+- Set files with the calamaris_www_t type, if you want to treat the files as calamaris www data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux calamaris policy is very flexible allowing users to setup their calamaris processes in as secure a method as possible.
+.PP 
+The following process types are defined for calamaris:
+
+.EX
+.B calamaris_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), calamaris(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/canna_selinux.8 serefpolicy-3.7.19/man/man8/canna_selinux.8
--- nsaserefpolicy/man/man8/canna_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/canna_selinux.8	2012-03-20 22:37:14.334458657 +0000
@@ -0,0 +1,125 @@
+.TH  "canna_selinux"  "8"  "canna" "dwalsh@redhat.com" "canna SELinux Policy documentation"
+.SH "NAME"
+canna_selinux \- Security Enhanced Linux Policy for the canna processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B canna
+(Canna - kana-kanji conversion server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux canna policy is very flexible allowing users to setup their canna processes in as secure a method as possible.
+.PP 
+The following file types are defined for canna:
+
+
+.EX
+.PP
+.B canna_exec_t 
+.EE
+
+- Set files with the canna_exec_t type, if you want to transition an executable to the canna_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/catdic, /usr/bin/cannaping, /usr/sbin/jserver, /usr/sbin/cannaserver
+
+.EX
+.PP
+.B canna_initrc_exec_t 
+.EE
+
+- Set files with the canna_initrc_exec_t type, if you want to transition an executable to the canna_initrc_t domain.
+
+
+.EX
+.PP
+.B canna_log_t 
+.EE
+
+- Set files with the canna_log_t type, if you want to treat the data as canna log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/wnn(/.*)?, /var/log/canna(/.*)?
+
+.EX
+.PP
+.B canna_var_lib_t 
+.EE
+
+- Set files with the canna_var_lib_t type, if you want to store the canna files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/wnn/dic(/.*)?, /var/lib/canna/dic(/.*)?
+
+.EX
+.PP
+.B canna_var_run_t 
+.EE
+
+- Set files with the canna_var_run_t type, if you want to store the canna files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/\.iroha_unix/.*, /var/run/\.iroha_unix, /var/run/wnn-unix(/.*)
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux canna policy is very flexible allowing users to setup their canna processes in as secure a method as possible.
+.PP 
+The following process types are defined for canna:
+
+.EX
+.B canna_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), canna(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cardmgr_selinux.8 serefpolicy-3.7.19/man/man8/cardmgr_selinux.8
--- nsaserefpolicy/man/man8/cardmgr_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cardmgr_selinux.8	2012-03-20 22:37:14.334458657 +0000
@@ -0,0 +1,111 @@
+.TH  "cardmgr_selinux"  "8"  "cardmgr" "dwalsh@redhat.com" "cardmgr SELinux Policy documentation"
+.SH "NAME"
+cardmgr_selinux \- Security Enhanced Linux Policy for the cardmgr processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cardmgr policy is very flexible allowing users to setup their cardmgr processes in as secure a method as possible.
+.PP 
+The following file types are defined for cardmgr:
+
+
+.EX
+.PP
+.B cardmgr_dev_t 
+.EE
+
+- Set files with the cardmgr_dev_t type, if you want to treat the files as cardmgr dev data.
+
+
+.EX
+.PP
+.B cardmgr_exec_t 
+.EE
+
+- Set files with the cardmgr_exec_t type, if you want to transition an executable to the cardmgr_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/apm/event\.d/pcmcia, /sbin/cardmgr
+
+.EX
+.PP
+.B cardmgr_lnk_t 
+.EE
+
+- Set files with the cardmgr_lnk_t type, if you want to treat the files as cardmgr lnk data.
+
+
+.EX
+.PP
+.B cardmgr_var_lib_t 
+.EE
+
+- Set files with the cardmgr_var_lib_t type, if you want to store the cardmgr files under the /var/lib directory.
+
+
+.EX
+.PP
+.B cardmgr_var_run_t 
+.EE
+
+- Set files with the cardmgr_var_run_t type, if you want to store the cardmgr files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/cardmgr\.pid, /var/run/stab, /var/lib/pcmcia(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cardmgr policy is very flexible allowing users to setup their cardmgr processes in as secure a method as possible.
+.PP 
+The following process types are defined for cardmgr:
+
+.EX
+.B cardmgr_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cardmgr(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ccs_selinux.8 serefpolicy-3.7.19/man/man8/ccs_selinux.8
--- nsaserefpolicy/man/man8/ccs_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ccs_selinux.8	2012-03-20 22:37:14.334458657 +0000
@@ -0,0 +1,121 @@
+.TH  "ccs_selinux"  "8"  "ccs" "dwalsh@redhat.com" "ccs SELinux Policy documentation"
+.SH "NAME"
+ccs_selinux \- Security Enhanced Linux Policy for the ccs processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ccs
+(Cluster Configuration System)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ccs policy is very flexible allowing users to setup their ccs processes in as secure a method as possible.
+.PP 
+The following file types are defined for ccs:
+
+
+.EX
+.PP
+.B ccs_exec_t 
+.EE
+
+- Set files with the ccs_exec_t type, if you want to transition an executable to the ccs_t domain.
+
+
+.EX
+.PP
+.B ccs_tmp_t 
+.EE
+
+- Set files with the ccs_tmp_t type, if you want to store ccs temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ccs_tmpfs_t 
+.EE
+
+- Set files with the ccs_tmpfs_t type, if you want to store ccs files on a tmpfs file system.
+
+
+.EX
+.PP
+.B ccs_var_lib_t 
+.EE
+
+- Set files with the ccs_var_lib_t type, if you want to store the ccs files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ccs_var_log_t 
+.EE
+
+- Set files with the ccs_var_log_t type, if you want to treat the data as ccs var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ccs_var_run_t 
+.EE
+
+- Set files with the ccs_var_run_t type, if you want to store the ccs files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/cluster/ccsd\.pid, /var/run/cluster/ccsd\.sock
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ccs policy is very flexible allowing users to setup their ccs processes in as secure a method as possible.
+.PP 
+The following process types are defined for ccs:
+
+.EX
+.B ccs_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ccs(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cdcc_selinux.8 serefpolicy-3.7.19/man/man8/cdcc_selinux.8
--- nsaserefpolicy/man/man8/cdcc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cdcc_selinux.8	2012-03-20 22:37:14.334458657 +0000
@@ -0,0 +1,79 @@
+.TH  "cdcc_selinux"  "8"  "cdcc" "dwalsh@redhat.com" "cdcc SELinux Policy documentation"
+.SH "NAME"
+cdcc_selinux \- Security Enhanced Linux Policy for the cdcc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cdcc policy is very flexible allowing users to setup their cdcc processes in as secure a method as possible.
+.PP 
+The following file types are defined for cdcc:
+
+
+.EX
+.PP
+.B cdcc_exec_t 
+.EE
+
+- Set files with the cdcc_exec_t type, if you want to transition an executable to the cdcc_t domain.
+
+
+.EX
+.PP
+.B cdcc_tmp_t 
+.EE
+
+- Set files with the cdcc_tmp_t type, if you want to store cdcc temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cdcc policy is very flexible allowing users to setup their cdcc processes in as secure a method as possible.
+.PP 
+The following process types are defined for cdcc:
+
+.EX
+.B cdcc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cdcc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cdrecord_selinux.8 serefpolicy-3.7.19/man/man8/cdrecord_selinux.8
--- nsaserefpolicy/man/man8/cdrecord_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cdrecord_selinux.8	2012-03-20 22:37:14.334458657 +0000
@@ -0,0 +1,96 @@
+.TH  "cdrecord_selinux"  "8"  "cdrecord" "dwalsh@redhat.com" "cdrecord SELinux Policy documentation"
+.SH "NAME"
+cdrecord_selinux \- Security Enhanced Linux Policy for the cdrecord processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cdrecord
+(Policy for cdrecord)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  cdrecord policy is extremely flexible and has several booleans that allow you to manipulate the policy and run cdrecord with the tightest access possible.
+
+
+.PP
+If you want to allow cdrecord to read various content. nfs, samba, removable devices, user temp and untrusted content file, you must turn on the cdrecord_read_content boolean.
+
+.EX
+.B setsebool -P cdrecord_read_content 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cdrecord policy is very flexible allowing users to setup their cdrecord processes in as secure a method as possible.
+.PP 
+The following file types are defined for cdrecord:
+
+
+.EX
+.PP
+.B cdrecord_exec_t 
+.EE
+
+- Set files with the cdrecord_exec_t type, if you want to transition an executable to the cdrecord_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/cdrecord, /usr/bin/wodim, /usr/bin/growisofs
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cdrecord policy is very flexible allowing users to setup their cdrecord processes in as secure a method as possible.
+.PP 
+The following process types are defined for cdrecord:
+
+.EX
+.B cdrecord_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cdrecord(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/certmaster_selinux.8 serefpolicy-3.7.19/man/man8/certmaster_selinux.8
--- nsaserefpolicy/man/man8/certmaster_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/certmaster_selinux.8	2012-03-20 22:37:14.334458657 +0000
@@ -0,0 +1,143 @@
+.TH  "certmaster_selinux"  "8"  "certmaster" "dwalsh@redhat.com" "certmaster SELinux Policy documentation"
+.SH "NAME"
+certmaster_selinux \- Security Enhanced Linux Policy for the certmaster processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B certmaster
+(Certmaster SSL certificate distribution service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
+.PP 
+The following file types are defined for certmaster:
+
+
+.EX
+.PP
+.B certmaster_etc_rw_t 
+.EE
+
+- Set files with the certmaster_etc_rw_t type, if you want to treat the files as certmaster etc read/write content.
+
+
+.EX
+.PP
+.B certmaster_exec_t 
+.EE
+
+- Set files with the certmaster_exec_t type, if you want to transition an executable to the certmaster_t domain.
+
+
+.EX
+.PP
+.B certmaster_initrc_exec_t 
+.EE
+
+- Set files with the certmaster_initrc_exec_t type, if you want to transition an executable to the certmaster_initrc_t domain.
+
+
+.EX
+.PP
+.B certmaster_var_lib_t 
+.EE
+
+- Set files with the certmaster_var_lib_t type, if you want to store the certmaster files under the /var/lib directory.
+
+
+.EX
+.PP
+.B certmaster_var_log_t 
+.EE
+
+- Set files with the certmaster_var_log_t type, if you want to treat the data as certmaster var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B certmaster_var_run_t 
+.EE
+
+- Set files with the certmaster_var_run_t type, if you want to store the certmaster files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
+.PP 
+The following port types are defined for certmaster:
+
+.EX
+.TP 5
+.B certmaster_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
+.PP 
+The following process types are defined for certmaster:
+
+.EX
+.B certmaster_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), certmaster(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/certmonger_selinux.8 serefpolicy-3.7.19/man/man8/certmonger_selinux.8
--- nsaserefpolicy/man/man8/certmonger_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/certmonger_selinux.8	2012-03-20 22:37:14.334458657 +0000
@@ -0,0 +1,101 @@
+.TH  "certmonger_selinux"  "8"  "certmonger" "dwalsh@redhat.com" "certmonger SELinux Policy documentation"
+.SH "NAME"
+certmonger_selinux \- Security Enhanced Linux Policy for the certmonger processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B certmonger
+(Certificate status monitor and PKI enrollment client)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux certmonger policy is very flexible allowing users to setup their certmonger processes in as secure a method as possible.
+.PP 
+The following file types are defined for certmonger:
+
+
+.EX
+.PP
+.B certmonger_exec_t 
+.EE
+
+- Set files with the certmonger_exec_t type, if you want to transition an executable to the certmonger_t domain.
+
+
+.EX
+.PP
+.B certmonger_initrc_exec_t 
+.EE
+
+- Set files with the certmonger_initrc_exec_t type, if you want to transition an executable to the certmonger_initrc_t domain.
+
+
+.EX
+.PP
+.B certmonger_var_lib_t 
+.EE
+
+- Set files with the certmonger_var_lib_t type, if you want to store the certmonger files under the /var/lib directory.
+
+
+.EX
+.PP
+.B certmonger_var_run_t 
+.EE
+
+- Set files with the certmonger_var_run_t type, if you want to store the certmonger files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux certmonger policy is very flexible allowing users to setup their certmonger processes in as secure a method as possible.
+.PP 
+The following process types are defined for certmonger:
+
+.EX
+.B certmonger_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), certmonger(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/certwatch_selinux.8 serefpolicy-3.7.19/man/man8/certwatch_selinux.8
--- nsaserefpolicy/man/man8/certwatch_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/certwatch_selinux.8	2012-03-20 22:37:14.334458657 +0000
@@ -0,0 +1,77 @@
+.TH  "certwatch_selinux"  "8"  "certwatch" "dwalsh@redhat.com" "certwatch SELinux Policy documentation"
+.SH "NAME"
+certwatch_selinux \- Security Enhanced Linux Policy for the certwatch processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B certwatch
+(Digital Certificate Tracking)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux certwatch policy is very flexible allowing users to setup their certwatch processes in as secure a method as possible.
+.PP 
+The following file types are defined for certwatch:
+
+
+.EX
+.PP
+.B certwatch_exec_t 
+.EE
+
+- Set files with the certwatch_exec_t type, if you want to transition an executable to the certwatch_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux certwatch policy is very flexible allowing users to setup their certwatch processes in as secure a method as possible.
+.PP 
+The following process types are defined for certwatch:
+
+.EX
+.B certwatch_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), certwatch(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cfengine_selinux.8 serefpolicy-3.7.19/man/man8/cfengine_selinux.8
--- nsaserefpolicy/man/man8/cfengine_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cfengine_selinux.8	2012-03-20 22:37:14.335458633 +0000
@@ -0,0 +1,113 @@
+.TH  "cfengine_selinux"  "8"  "cfengine" "dwalsh@redhat.com" "cfengine SELinux Policy documentation"
+.SH "NAME"
+cfengine_selinux \- Security Enhanced Linux Policy for the cfengine processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cfengine
+(policy for cfengine)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cfengine policy is very flexible allowing users to setup their cfengine processes in as secure a method as possible.
+.PP 
+The following file types are defined for cfengine:
+
+
+.EX
+.PP
+.B cfengine_execd_exec_t 
+.EE
+
+- Set files with the cfengine_execd_exec_t type, if you want to transition an executable to the cfengine_execd_t domain.
+
+
+.EX
+.PP
+.B cfengine_initrc_exec_t 
+.EE
+
+- Set files with the cfengine_initrc_exec_t type, if you want to transition an executable to the cfengine_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/cf-serverd, /etc/rc\.d/init\.d/cf-execd, /etc/rc\.d/init\.d/cf-monitord
+
+.EX
+.PP
+.B cfengine_monitord_exec_t 
+.EE
+
+- Set files with the cfengine_monitord_exec_t type, if you want to transition an executable to the cfengine_monitord_t domain.
+
+
+.EX
+.PP
+.B cfengine_serverd_exec_t 
+.EE
+
+- Set files with the cfengine_serverd_exec_t type, if you want to transition an executable to the cfengine_serverd_t domain.
+
+
+.EX
+.PP
+.B cfengine_var_lib_t 
+.EE
+
+- Set files with the cfengine_var_lib_t type, if you want to store the cfengine files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cfengine policy is very flexible allowing users to setup their cfengine processes in as secure a method as possible.
+.PP 
+The following process types are defined for cfengine:
+
+.EX
+.B cfengine_execd_t, cfengine_monitord_t, cfengine_serverd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cfengine(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cgclear_selinux.8 serefpolicy-3.7.19/man/man8/cgclear_selinux.8
--- nsaserefpolicy/man/man8/cgclear_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cgclear_selinux.8	2012-03-20 22:37:14.335458633 +0000
@@ -0,0 +1,71 @@
+.TH  "cgclear_selinux"  "8"  "cgclear" "dwalsh@redhat.com" "cgclear SELinux Policy documentation"
+.SH "NAME"
+cgclear_selinux \- Security Enhanced Linux Policy for the cgclear processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cgclear policy is very flexible allowing users to setup their cgclear processes in as secure a method as possible.
+.PP 
+The following file types are defined for cgclear:
+
+
+.EX
+.PP
+.B cgclear_exec_t 
+.EE
+
+- Set files with the cgclear_exec_t type, if you want to transition an executable to the cgclear_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cgclear policy is very flexible allowing users to setup their cgclear processes in as secure a method as possible.
+.PP 
+The following process types are defined for cgclear:
+
+.EX
+.B cgclear_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cgclear(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cgconfig_selinux.8 serefpolicy-3.7.19/man/man8/cgconfig_selinux.8
--- nsaserefpolicy/man/man8/cgconfig_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cgconfig_selinux.8	2012-03-20 22:37:14.335458633 +0000
@@ -0,0 +1,91 @@
+.TH  "cgconfig_selinux"  "8"  "cgconfig" "dwalsh@redhat.com" "cgconfig SELinux Policy documentation"
+.SH "NAME"
+cgconfig_selinux \- Security Enhanced Linux Policy for the cgconfig processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cgconfig policy is very flexible allowing users to setup their cgconfig processes in as secure a method as possible.
+.PP 
+The following file types are defined for cgconfig:
+
+
+.EX
+.PP
+.B cgconfig_etc_t 
+.EE
+
+- Set files with the cgconfig_etc_t type, if you want to store cgconfig files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/sysconfig/cgconfig, /etc/cgconfig.conf
+
+.EX
+.PP
+.B cgconfig_exec_t 
+.EE
+
+- Set files with the cgconfig_exec_t type, if you want to transition an executable to the cgconfig_t domain.
+
+
+.EX
+.PP
+.B cgconfig_initrc_exec_t 
+.EE
+
+- Set files with the cgconfig_initrc_exec_t type, if you want to transition an executable to the cgconfig_initrc_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cgconfig policy is very flexible allowing users to setup their cgconfig processes in as secure a method as possible.
+.PP 
+The following process types are defined for cgconfig:
+
+.EX
+.B cgconfig_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cgconfig(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cgred_selinux.8 serefpolicy-3.7.19/man/man8/cgred_selinux.8
--- nsaserefpolicy/man/man8/cgred_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cgred_selinux.8	2012-03-20 22:37:14.335458633 +0000
@@ -0,0 +1,95 @@
+.TH  "cgred_selinux"  "8"  "cgred" "dwalsh@redhat.com" "cgred SELinux Policy documentation"
+.SH "NAME"
+cgred_selinux \- Security Enhanced Linux Policy for the cgred processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cgred policy is very flexible allowing users to setup their cgred processes in as secure a method as possible.
+.PP 
+The following file types are defined for cgred:
+
+
+.EX
+.PP
+.B cgred_exec_t 
+.EE
+
+- Set files with the cgred_exec_t type, if you want to transition an executable to the cgred_t domain.
+
+
+.EX
+.PP
+.B cgred_initrc_exec_t 
+.EE
+
+- Set files with the cgred_initrc_exec_t type, if you want to transition an executable to the cgred_initrc_t domain.
+
+
+.EX
+.PP
+.B cgred_log_t 
+.EE
+
+- Set files with the cgred_log_t type, if you want to treat the data as cgred log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B cgred_var_run_t 
+.EE
+
+- Set files with the cgred_var_run_t type, if you want to store the cgred files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cgred policy is very flexible allowing users to setup their cgred processes in as secure a method as possible.
+.PP 
+The following process types are defined for cgred:
+
+.EX
+.B cgred_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cgred(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/checkpc_selinux.8 serefpolicy-3.7.19/man/man8/checkpc_selinux.8
--- nsaserefpolicy/man/man8/checkpc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/checkpc_selinux.8	2012-03-20 22:37:14.335458633 +0000
@@ -0,0 +1,79 @@
+.TH  "checkpc_selinux"  "8"  "checkpc" "dwalsh@redhat.com" "checkpc SELinux Policy documentation"
+.SH "NAME"
+checkpc_selinux \- Security Enhanced Linux Policy for the checkpc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux checkpc policy is very flexible allowing users to setup their checkpc processes in as secure a method as possible.
+.PP 
+The following file types are defined for checkpc:
+
+
+.EX
+.PP
+.B checkpc_exec_t 
+.EE
+
+- Set files with the checkpc_exec_t type, if you want to transition an executable to the checkpc_t domain.
+
+
+.EX
+.PP
+.B checkpc_log_t 
+.EE
+
+- Set files with the checkpc_log_t type, if you want to treat the data as checkpc log data, usually stored under the /var/log directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux checkpc policy is very flexible allowing users to setup their checkpc processes in as secure a method as possible.
+.PP 
+The following process types are defined for checkpc:
+
+.EX
+.B checkpc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), checkpc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/checkpolicy_selinux.8 serefpolicy-3.7.19/man/man8/checkpolicy_selinux.8
--- nsaserefpolicy/man/man8/checkpolicy_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/checkpolicy_selinux.8	2012-03-20 22:37:14.335458633 +0000
@@ -0,0 +1,71 @@
+.TH  "checkpolicy_selinux"  "8"  "checkpolicy" "dwalsh@redhat.com" "checkpolicy SELinux Policy documentation"
+.SH "NAME"
+checkpolicy_selinux \- Security Enhanced Linux Policy for the checkpolicy processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux checkpolicy policy is very flexible allowing users to setup their checkpolicy processes in as secure a method as possible.
+.PP 
+The following file types are defined for checkpolicy:
+
+
+.EX
+.PP
+.B checkpolicy_exec_t 
+.EE
+
+- Set files with the checkpolicy_exec_t type, if you want to transition an executable to the checkpolicy_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux checkpolicy policy is very flexible allowing users to setup their checkpolicy processes in as secure a method as possible.
+.PP 
+The following process types are defined for checkpolicy:
+
+.EX
+.B checkpolicy_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), checkpolicy(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/chfn_selinux.8 serefpolicy-3.7.19/man/man8/chfn_selinux.8
--- nsaserefpolicy/man/man8/chfn_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/chfn_selinux.8	2012-03-20 22:37:14.335458633 +0000
@@ -0,0 +1,75 @@
+.TH  "chfn_selinux"  "8"  "chfn" "dwalsh@redhat.com" "chfn SELinux Policy documentation"
+.SH "NAME"
+chfn_selinux \- Security Enhanced Linux Policy for the chfn processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux chfn policy is very flexible allowing users to setup their chfn processes in as secure a method as possible.
+.PP 
+The following file types are defined for chfn:
+
+
+.EX
+.PP
+.B chfn_exec_t 
+.EE
+
+- Set files with the chfn_exec_t type, if you want to transition an executable to the chfn_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/chsh, /usr/bin/chfn
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux chfn policy is very flexible allowing users to setup their chfn processes in as secure a method as possible.
+.PP 
+The following process types are defined for chfn:
+
+.EX
+.B chfn_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), chfn(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/chkpwd_selinux.8 serefpolicy-3.7.19/man/man8/chkpwd_selinux.8
--- nsaserefpolicy/man/man8/chkpwd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/chkpwd_selinux.8	2012-03-20 22:37:14.335458633 +0000
@@ -0,0 +1,75 @@
+.TH  "chkpwd_selinux"  "8"  "chkpwd" "dwalsh@redhat.com" "chkpwd SELinux Policy documentation"
+.SH "NAME"
+chkpwd_selinux \- Security Enhanced Linux Policy for the chkpwd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux chkpwd policy is very flexible allowing users to setup their chkpwd processes in as secure a method as possible.
+.PP 
+The following file types are defined for chkpwd:
+
+
+.EX
+.PP
+.B chkpwd_exec_t 
+.EE
+
+- Set files with the chkpwd_exec_t type, if you want to transition an executable to the chkpwd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/unix_chkpwd, /usr/sbin/validate, /sbin/unix_verify
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux chkpwd policy is very flexible allowing users to setup their chkpwd processes in as secure a method as possible.
+.PP 
+The following process types are defined for chkpwd:
+
+.EX
+.B chkpwd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), chkpwd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/chrome_selinux.8 serefpolicy-3.7.19/man/man8/chrome_selinux.8
--- nsaserefpolicy/man/man8/chrome_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/chrome_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,109 @@
+.TH  "chrome_selinux"  "8"  "chrome" "dwalsh@redhat.com" "chrome SELinux Policy documentation"
+.SH "NAME"
+chrome_selinux \- Security Enhanced Linux Policy for the chrome processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B chrome
+(policy for chrome)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux chrome policy is very flexible allowing users to setup their chrome processes in as secure a method as possible.
+.PP 
+The following file types are defined for chrome:
+
+
+.EX
+.PP
+.B chrome_sandbox_exec_t 
+.EE
+
+- Set files with the chrome_sandbox_exec_t type, if you want to transition an executable to the chrome_sandbox_t domain.
+
+.br
+.TP 5
+Paths: 
+/opt/google/chrome/chrome-sandbox, /usr/lib(64)?/chromium-browser/chrome-sandbox
+
+.EX
+.PP
+.B chrome_sandbox_nacl_exec_t 
+.EE
+
+- Set files with the chrome_sandbox_nacl_exec_t type, if you want to transition an executable to the chrome_sandbox_nacl_t domain.
+
+.br
+.TP 5
+Paths: 
+/opt/google/chrome/nacl_helper_bootstrap, /usr/lib/chromium-browser/nacl_helper_bootstrap
+
+.EX
+.PP
+.B chrome_sandbox_tmp_t 
+.EE
+
+- Set files with the chrome_sandbox_tmp_t type, if you want to store chrome sandbox temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B chrome_sandbox_tmpfs_t 
+.EE
+
+- Set files with the chrome_sandbox_tmpfs_t type, if you want to store chrome sandbox files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux chrome policy is very flexible allowing users to setup their chrome processes in as secure a method as possible.
+.PP 
+The following process types are defined for chrome:
+
+.EX
+.B chrome_sandbox_t, chrome_sandbox_nacl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), chrome(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/chronyd_selinux.8 serefpolicy-3.7.19/man/man8/chronyd_selinux.8
--- nsaserefpolicy/man/man8/chronyd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/chronyd_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,151 @@
+.TH  "chronyd_selinux"  "8"  "chronyd" "dwalsh@redhat.com" "chronyd SELinux Policy documentation"
+.SH "NAME"
+chronyd_selinux \- Security Enhanced Linux Policy for the chronyd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B chronyd
+(Chrony NTP background daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
+.PP 
+The following file types are defined for chronyd:
+
+
+.EX
+.PP
+.B chronyd_exec_t 
+.EE
+
+- Set files with the chronyd_exec_t type, if you want to transition an executable to the chronyd_t domain.
+
+
+.EX
+.PP
+.B chronyd_initrc_exec_t 
+.EE
+
+- Set files with the chronyd_initrc_exec_t type, if you want to transition an executable to the chronyd_initrc_t domain.
+
+
+.EX
+.PP
+.B chronyd_keys_t 
+.EE
+
+- Set files with the chronyd_keys_t type, if you want to treat the files as chronyd keys data.
+
+
+.EX
+.PP
+.B chronyd_tmpfs_t 
+.EE
+
+- Set files with the chronyd_tmpfs_t type, if you want to store chronyd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B chronyd_var_lib_t 
+.EE
+
+- Set files with the chronyd_var_lib_t type, if you want to store the chronyd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B chronyd_var_log_t 
+.EE
+
+- Set files with the chronyd_var_log_t type, if you want to treat the data as chronyd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B chronyd_var_run_t 
+.EE
+
+- Set files with the chronyd_var_run_t type, if you want to store the chronyd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
+.PP 
+The following port types are defined for chronyd:
+
+.EX
+.TP 5
+.B chronyd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
+.PP 
+The following process types are defined for chronyd:
+
+.EX
+.B chronyd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), chronyd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ciped_selinux.8 serefpolicy-3.7.19/man/man8/ciped_selinux.8
--- nsaserefpolicy/man/man8/ciped_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ciped_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,71 @@
+.TH  "ciped_selinux"  "8"  "ciped" "dwalsh@redhat.com" "ciped SELinux Policy documentation"
+.SH "NAME"
+ciped_selinux \- Security Enhanced Linux Policy for the ciped processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ciped policy is very flexible allowing users to setup their ciped processes in as secure a method as possible.
+.PP 
+The following file types are defined for ciped:
+
+
+.EX
+.PP
+.B ciped_exec_t 
+.EE
+
+- Set files with the ciped_exec_t type, if you want to transition an executable to the ciped_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ciped policy is very flexible allowing users to setup their ciped processes in as secure a method as possible.
+.PP 
+The following process types are defined for ciped:
+
+.EX
+.B ciped_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ciped(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/clamd_selinux.8 serefpolicy-3.7.19/man/man8/clamd_selinux.8
--- nsaserefpolicy/man/man8/clamd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/clamd_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,176 @@
+.TH  "clamd_selinux"  "8"  "clamd" "dwalsh@redhat.com" "clamd SELinux Policy documentation"
+.SH "NAME"
+clamd_selinux \- Security Enhanced Linux Policy for the clamd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  clamd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run clamd with the tightest access possible.
+
+
+.PP
+If you want to allow clamd to use JIT compile, you must turn on the clamd_use_jit boolean.
+
+.EX
+.B setsebool -P clamd_use_jit 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
+.PP 
+The following file types are defined for clamd:
+
+
+.EX
+.PP
+.B clamd_etc_t 
+.EE
+
+- Set files with the clamd_etc_t type, if you want to store clamd files in the /etc directories.
+
+
+.EX
+.PP
+.B clamd_exec_t 
+.EE
+
+- Set files with the clamd_exec_t type, if you want to transition an executable to the clamd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/clamd, /usr/sbin/clamav-milter
+
+.EX
+.PP
+.B clamd_initrc_exec_t 
+.EE
+
+- Set files with the clamd_initrc_exec_t type, if you want to transition an executable to the clamd_initrc_t domain.
+
+
+.EX
+.PP
+.B clamd_tmp_t 
+.EE
+
+- Set files with the clamd_tmp_t type, if you want to store clamd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B clamd_var_lib_t 
+.EE
+
+- Set files with the clamd_var_lib_t type, if you want to store the clamd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/clamd.*, /var/clamav(/.*)?, /var/lib/clamav(/.*)?
+
+.EX
+.PP
+.B clamd_var_log_t 
+.EE
+
+- Set files with the clamd_var_log_t type, if you want to treat the data as clamd var log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/clamav.*, /var/log/clamd.*
+
+.EX
+.PP
+.B clamd_var_run_t 
+.EE
+
+- Set files with the clamd_var_run_t type, if you want to store the clamd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/clamd.*, /var/run/amavis(d)?/clamd\.pid, /var/spool/amavisd/clamd\.sock, /var/run/clamav.*, /var/spool/MailScanner(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
+.PP 
+The following port types are defined for clamd:
+
+.EX
+.TP 5
+.B clamd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
+.PP 
+The following process types are defined for clamd:
+
+.EX
+.B clamd_t, clamscan_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), clamd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/clamscan_selinux.8 serefpolicy-3.7.19/man/man8/clamscan_selinux.8
--- nsaserefpolicy/man/man8/clamscan_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/clamscan_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,83 @@
+.TH  "clamscan_selinux"  "8"  "clamscan" "dwalsh@redhat.com" "clamscan SELinux Policy documentation"
+.SH "NAME"
+clamscan_selinux \- Security Enhanced Linux Policy for the clamscan processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux clamscan policy is very flexible allowing users to setup their clamscan processes in as secure a method as possible.
+.PP 
+The following file types are defined for clamscan:
+
+
+.EX
+.PP
+.B clamscan_exec_t 
+.EE
+
+- Set files with the clamscan_exec_t type, if you want to transition an executable to the clamscan_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/clamdscan, /usr/bin/clamscan
+
+.EX
+.PP
+.B clamscan_tmp_t 
+.EE
+
+- Set files with the clamscan_tmp_t type, if you want to store clamscan temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux clamscan policy is very flexible allowing users to setup their clamscan processes in as secure a method as possible.
+.PP 
+The following process types are defined for clamscan:
+
+.EX
+.B clamscan_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), clamscan(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/clogd_selinux.8 serefpolicy-3.7.19/man/man8/clogd_selinux.8
--- nsaserefpolicy/man/man8/clogd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/clogd_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,93 @@
+.TH  "clogd_selinux"  "8"  "clogd" "dwalsh@redhat.com" "clogd SELinux Policy documentation"
+.SH "NAME"
+clogd_selinux \- Security Enhanced Linux Policy for the clogd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B clogd
+(clogd - clustered mirror log server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux clogd policy is very flexible allowing users to setup their clogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for clogd:
+
+
+.EX
+.PP
+.B clogd_exec_t 
+.EE
+
+- Set files with the clogd_exec_t type, if you want to transition an executable to the clogd_t domain.
+
+
+.EX
+.PP
+.B clogd_tmpfs_t 
+.EE
+
+- Set files with the clogd_tmpfs_t type, if you want to store clogd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B clogd_var_run_t 
+.EE
+
+- Set files with the clogd_var_run_t type, if you want to store the clogd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux clogd policy is very flexible allowing users to setup their clogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for clogd:
+
+.EX
+.B clogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), clogd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/clvmd_selinux.8 serefpolicy-3.7.19/man/man8/clvmd_selinux.8
--- nsaserefpolicy/man/man8/clvmd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/clvmd_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,95 @@
+.TH  "clvmd_selinux"  "8"  "clvmd" "dwalsh@redhat.com" "clvmd SELinux Policy documentation"
+.SH "NAME"
+clvmd_selinux \- Security Enhanced Linux Policy for the clvmd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux clvmd policy is very flexible allowing users to setup their clvmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for clvmd:
+
+
+.EX
+.PP
+.B clvmd_exec_t 
+.EE
+
+- Set files with the clvmd_exec_t type, if you want to transition an executable to the clvmd_t domain.
+
+
+.EX
+.PP
+.B clvmd_initrc_exec_t 
+.EE
+
+- Set files with the clvmd_initrc_exec_t type, if you want to transition an executable to the clvmd_initrc_t domain.
+
+
+.EX
+.PP
+.B clvmd_tmpfs_t 
+.EE
+
+- Set files with the clvmd_tmpfs_t type, if you want to store clvmd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B clvmd_var_run_t 
+.EE
+
+- Set files with the clvmd_var_run_t type, if you want to store the clvmd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux clvmd policy is very flexible allowing users to setup their clvmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for clvmd:
+
+.EX
+.B clvmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), clvmd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cmirrord_selinux.8 serefpolicy-3.7.19/man/man8/cmirrord_selinux.8
--- nsaserefpolicy/man/man8/cmirrord_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cmirrord_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,101 @@
+.TH  "cmirrord_selinux"  "8"  "cmirrord" "dwalsh@redhat.com" "cmirrord SELinux Policy documentation"
+.SH "NAME"
+cmirrord_selinux \- Security Enhanced Linux Policy for the cmirrord processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cmirrord
+(policy for cmirrord)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cmirrord policy is very flexible allowing users to setup their cmirrord processes in as secure a method as possible.
+.PP 
+The following file types are defined for cmirrord:
+
+
+.EX
+.PP
+.B cmirrord_exec_t 
+.EE
+
+- Set files with the cmirrord_exec_t type, if you want to transition an executable to the cmirrord_t domain.
+
+
+.EX
+.PP
+.B cmirrord_initrc_exec_t 
+.EE
+
+- Set files with the cmirrord_initrc_exec_t type, if you want to transition an executable to the cmirrord_initrc_t domain.
+
+
+.EX
+.PP
+.B cmirrord_tmpfs_t 
+.EE
+
+- Set files with the cmirrord_tmpfs_t type, if you want to store cmirrord files on a tmpfs file system.
+
+
+.EX
+.PP
+.B cmirrord_var_run_t 
+.EE
+
+- Set files with the cmirrord_var_run_t type, if you want to store the cmirrord files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cmirrord policy is very flexible allowing users to setup their cmirrord processes in as secure a method as possible.
+.PP 
+The following process types are defined for cmirrord:
+
+.EX
+.B cmirrord_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cmirrord(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cobblerd_selinux.8 serefpolicy-3.7.19/man/man8/cobblerd_selinux.8
--- nsaserefpolicy/man/man8/cobblerd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cobblerd_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,203 @@
+.TH  "cobblerd_selinux"  "8"  "cobblerd" "dwalsh@redhat.com" "cobblerd SELinux Policy documentation"
+.SH "NAME"
+cobblerd_selinux \- Security Enhanced Linux Policy for the cobblerd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  cobblerd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run cobblerd with the tightest access possible.
+
+
+.PP
+If you want to allow Cobbler to connect to the network using TCP, you must turn on the cobbler_can_network_connect boolean.
+
+.EX
+.B setsebool -P cobbler_can_network_connect 1
+.EE
+
+.PP
+If you want to allow Cobbler to access nfs file systems, you must turn on the cobbler_use_nfs boolean.
+
+.EX
+.B setsebool -P cobbler_use_nfs 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to cobbler over the network, you must turn on the httpd_can_network_connect_cobbler boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_cobbler 1
+.EE
+
+.PP
+If you want to allow Cobbler to access cifs file systems, you must turn on the cobbler_use_cifs boolean.
+
+.EX
+.B setsebool -P cobbler_use_cifs 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow cobblerd servers to read the /var/cobblerd directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/cobblerd(/.*)?"
+.br
+.B restorecon -F -R -v /var/cobblerd
+.pp
+.TP
+Allow cobblerd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_cobblerd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/cobblerd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/cobblerd/incoming
+
+
+.PP
+If you want to allow Cobbler to modify public files used for public file transfer services., you must turn on the cobbler_anon_write boolean.
+
+.EX
+.B setsebool -P cobbler_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
+.PP 
+The following file types are defined for cobblerd:
+
+
+.EX
+.PP
+.B cobbler_etc_t 
+.EE
+
+- Set files with the cobbler_etc_t type, if you want to store cobbler files in the /etc directories.
+
+
+.EX
+.PP
+.B cobbler_tmp_t 
+.EE
+
+- Set files with the cobbler_tmp_t type, if you want to store cobbler temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cobbler_var_lib_t 
+.EE
+
+- Set files with the cobbler_var_lib_t type, if you want to store the cobbler files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/cobbler(/.*)?, /var/www/cobbler/images(/.*)?, /var/www/cobbler/repo_mirror(/.*)?, /var/lib/tftpboot/pxelinux\.cfg(/.*)?, /var/lib/tftpboot/memdisk, /var/lib/tftpboot/s390x(/.*)?, /var/lib/tftpboot/images(/.*)?, /var/www/cobbler/links(/.*)?, /var/lib/tftpboot/menu\.c32, /var/lib/tftpboot/yaboot, /var/www/cobbler/localmirror(/.*)?, /var/www/cobbler/ks_mirror(/.*)?, /var/lib/tftpboot/grub(/.*)?, /var/www/cobbler/pub(/.*)?, /var/lib/tftpboot/ppc(/.*)?, /var/lib/tftpboot/pxelinux\.0, /var/lib/tftpboot/etc(/.*)?, /var/www/cobbler/rendered(/.*)?
+
+.EX
+.PP
+.B cobbler_var_log_t 
+.EE
+
+- Set files with the cobbler_var_log_t type, if you want to treat the data as cobbler var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B cobblerd_exec_t 
+.EE
+
+- Set files with the cobblerd_exec_t type, if you want to transition an executable to the cobblerd_t domain.
+
+
+.EX
+.PP
+.B cobblerd_initrc_exec_t 
+.EE
+
+- Set files with the cobblerd_initrc_exec_t type, if you want to transition an executable to the cobblerd_initrc_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
+.PP 
+The following port types are defined for cobblerd:
+
+.EX
+.TP 5
+.B cobbler_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
+.PP 
+The following process types are defined for cobblerd:
+
+.EX
+.B cobblerd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cobblerd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/comsat_selinux.8 serefpolicy-3.7.19/man/man8/comsat_selinux.8
--- nsaserefpolicy/man/man8/comsat_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/comsat_selinux.8	2012-03-20 22:37:14.336458609 +0000
@@ -0,0 +1,119 @@
+.TH  "comsat_selinux"  "8"  "comsat" "dwalsh@redhat.com" "comsat SELinux Policy documentation"
+.SH "NAME"
+comsat_selinux \- Security Enhanced Linux Policy for the comsat processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B comsat
+(Comsat, a biff server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
+.PP 
+The following file types are defined for comsat:
+
+
+.EX
+.PP
+.B comsat_exec_t 
+.EE
+
+- Set files with the comsat_exec_t type, if you want to transition an executable to the comsat_t domain.
+
+
+.EX
+.PP
+.B comsat_tmp_t 
+.EE
+
+- Set files with the comsat_tmp_t type, if you want to store comsat temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B comsat_var_run_t 
+.EE
+
+- Set files with the comsat_var_run_t type, if you want to store the comsat files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
+.PP 
+The following port types are defined for comsat:
+
+.EX
+.TP 5
+.B comsat_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
+.PP 
+The following process types are defined for comsat:
+
+.EX
+.B comsat_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), comsat(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/consolekit_selinux.8 serefpolicy-3.7.19/man/man8/consolekit_selinux.8
--- nsaserefpolicy/man/man8/consolekit_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/consolekit_selinux.8	2012-03-20 22:37:14.337458585 +0000
@@ -0,0 +1,105 @@
+.TH  "consolekit_selinux"  "8"  "consolekit" "dwalsh@redhat.com" "consolekit SELinux Policy documentation"
+.SH "NAME"
+consolekit_selinux \- Security Enhanced Linux Policy for the consolekit processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B consolekit
+(Framework for facilitating multiple user sessions on desktops)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux consolekit policy is very flexible allowing users to setup their consolekit processes in as secure a method as possible.
+.PP 
+The following file types are defined for consolekit:
+
+
+.EX
+.PP
+.B consolekit_exec_t 
+.EE
+
+- Set files with the consolekit_exec_t type, if you want to transition an executable to the consolekit_t domain.
+
+
+.EX
+.PP
+.B consolekit_log_t 
+.EE
+
+- Set files with the consolekit_log_t type, if you want to treat the data as consolekit log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B consolekit_tmpfs_t 
+.EE
+
+- Set files with the consolekit_tmpfs_t type, if you want to store consolekit files on a tmpfs file system.
+
+
+.EX
+.PP
+.B consolekit_var_run_t 
+.EE
+
+- Set files with the consolekit_var_run_t type, if you want to store the consolekit files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/console-kit-daemon\.pid, /var/run/ConsoleKit(/.*)?, /var/run/consolekit\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux consolekit policy is very flexible allowing users to setup their consolekit processes in as secure a method as possible.
+.PP 
+The following process types are defined for consolekit:
+
+.EX
+.B consolekit_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), consolekit(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/consoletype_selinux.8 serefpolicy-3.7.19/man/man8/consoletype_selinux.8
--- nsaserefpolicy/man/man8/consoletype_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/consoletype_selinux.8	2012-03-20 22:37:14.337458585 +0000
@@ -0,0 +1,79 @@
+.TH  "consoletype_selinux"  "8"  "consoletype" "dwalsh@redhat.com" "consoletype SELinux Policy documentation"
+.SH "NAME"
+consoletype_selinux \- Security Enhanced Linux Policy for the consoletype processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B consoletype
+(
+Determine of the console connected to the controlling terminal.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux consoletype policy is very flexible allowing users to setup their consoletype processes in as secure a method as possible.
+.PP 
+The following file types are defined for consoletype:
+
+
+.EX
+.PP
+.B consoletype_exec_t 
+.EE
+
+- Set files with the consoletype_exec_t type, if you want to transition an executable to the consoletype_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux consoletype policy is very flexible allowing users to setup their consoletype processes in as secure a method as possible.
+.PP 
+The following process types are defined for consoletype:
+
+.EX
+.B consoletype_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), consoletype(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/corosync_selinux.8 serefpolicy-3.7.19/man/man8/corosync_selinux.8
--- nsaserefpolicy/man/man8/corosync_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/corosync_selinux.8	2012-03-20 22:37:14.337458585 +0000
@@ -0,0 +1,141 @@
+.TH  "corosync_selinux"  "8"  "corosync" "dwalsh@redhat.com" "corosync SELinux Policy documentation"
+.SH "NAME"
+corosync_selinux \- Security Enhanced Linux Policy for the corosync processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B corosync
+(SELinux policy for Corosync Cluster Engine)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux corosync policy is very flexible allowing users to setup their corosync processes in as secure a method as possible.
+.PP 
+The following file types are defined for corosync:
+
+
+.EX
+.PP
+.B corosync_exec_t 
+.EE
+
+- Set files with the corosync_exec_t type, if you want to transition an executable to the corosync_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ccs_tool, /usr/sbin/corosync, /usr/sbin/corosync-notifyd, /usr/sbin/cman_tool, /usr/lib(64)?/heartbeat/heartbeat
+
+.EX
+.PP
+.B corosync_initrc_exec_t 
+.EE
+
+- Set files with the corosync_initrc_exec_t type, if you want to transition an executable to the corosync_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/heartbeat, /etc/rc\.d/init\.d/corosync
+
+.EX
+.PP
+.B corosync_tmp_t 
+.EE
+
+- Set files with the corosync_tmp_t type, if you want to store corosync temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B corosync_tmpfs_t 
+.EE
+
+- Set files with the corosync_tmpfs_t type, if you want to store corosync files on a tmpfs file system.
+
+
+.EX
+.PP
+.B corosync_var_lib_t 
+.EE
+
+- Set files with the corosync_var_lib_t type, if you want to store the corosync files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/corosync(/.*)?, /usr/lib(64)?/heartbeat(/.*)?
+
+.EX
+.PP
+.B corosync_var_log_t 
+.EE
+
+- Set files with the corosync_var_log_t type, if you want to treat the data as corosync var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B corosync_var_run_t 
+.EE
+
+- Set files with the corosync_var_run_t type, if you want to store the corosync files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/hearbeat(/.*)?, /var/run/corosync\.pid, /var/run/cman_.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux corosync policy is very flexible allowing users to setup their corosync processes in as secure a method as possible.
+.PP 
+The following process types are defined for corosync:
+
+.EX
+.B corosync_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), corosync(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/courier_selinux.8 serefpolicy-3.7.19/man/man8/courier_selinux.8
--- nsaserefpolicy/man/man8/courier_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/courier_selinux.8	2012-03-20 22:37:14.337458585 +0000
@@ -0,0 +1,169 @@
+.TH  "courier_selinux"  "8"  "courier" "dwalsh@redhat.com" "courier SELinux Policy documentation"
+.SH "NAME"
+courier_selinux \- Security Enhanced Linux Policy for the courier processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B courier
+(Courier IMAP and POP3 email servers)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux courier policy is very flexible allowing users to setup their courier processes in as secure a method as possible.
+.PP 
+The following file types are defined for courier:
+
+
+.EX
+.PP
+.B courier_authdaemon_exec_t 
+.EE
+
+- Set files with the courier_authdaemon_exec_t type, if you want to transition an executable to the courier_authdaemon_t domain.
+
+
+.EX
+.PP
+.B courier_etc_t 
+.EE
+
+- Set files with the courier_etc_t type, if you want to store courier files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/courier(/.*)?, /usr/lib(64)?/courier/rootcerts(/.*)?
+
+.EX
+.PP
+.B courier_exec_t 
+.EE
+
+- Set files with the courier_exec_t type, if you want to transition an executable to the courier_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/courier/courierlogger, /usr/sbin/courierlogger, /usr/sbin/courierldapaliasd, /usr/lib(64)?/courier/courier/.*, /usr/lib(64)?/courier/courierldapaliasd
+
+.EX
+.PP
+.B courier_pcp_exec_t 
+.EE
+
+- Set files with the courier_pcp_exec_t type, if you want to transition an executable to the courier_pcp_t domain.
+
+
+.EX
+.PP
+.B courier_pop_exec_t 
+.EE
+
+- Set files with the courier_pop_exec_t type, if you want to transition an executable to the courier_pop_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/courier/courier/courierpop.*, /usr/lib(64)?/courier/courier/imaplogin, /usr/lib(64)?/courier/pop3d, /usr/lib(64)?/courier/imapd, /usr/bin/imapd
+
+.EX
+.PP
+.B courier_spool_t 
+.EE
+
+- Set files with the courier_spool_t type, if you want to store the courier files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/courier(/.*)?, /var/spool/authdaemon(/.*)?
+
+.EX
+.PP
+.B courier_sqwebmail_exec_t 
+.EE
+
+- Set files with the courier_sqwebmail_exec_t type, if you want to transition an executable to the courier_sqwebmail_t domain.
+
+
+.EX
+.PP
+.B courier_tcpd_exec_t 
+.EE
+
+- Set files with the courier_tcpd_exec_t type, if you want to transition an executable to the courier_tcpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/courier/couriertcpd, /usr/sbin/couriertcpd
+
+.EX
+.PP
+.B courier_var_lib_t 
+.EE
+
+- Set files with the courier_var_lib_t type, if you want to store the courier files under the /var/lib directory.
+
+
+.EX
+.PP
+.B courier_var_run_t 
+.EE
+
+- Set files with the courier_var_run_t type, if you want to store the courier files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux courier policy is very flexible allowing users to setup their courier processes in as secure a method as possible.
+.PP 
+The following process types are defined for courier:
+
+.EX
+.B courier_sqwebmail_t, courier_tcpd_t, courier_authdaemon_t, courier_pcp_t, courier_pop_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), courier(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cpucontrol_selinux.8 serefpolicy-3.7.19/man/man8/cpucontrol_selinux.8
--- nsaserefpolicy/man/man8/cpucontrol_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cpucontrol_selinux.8	2012-03-20 22:37:14.337458585 +0000
@@ -0,0 +1,85 @@
+.TH  "cpucontrol_selinux"  "8"  "cpucontrol" "dwalsh@redhat.com" "cpucontrol SELinux Policy documentation"
+.SH "NAME"
+cpucontrol_selinux \- Security Enhanced Linux Policy for the cpucontrol processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cpucontrol
+(Services for loading CPU microcode and CPU frequency scaling)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cpucontrol policy is very flexible allowing users to setup their cpucontrol processes in as secure a method as possible.
+.PP 
+The following file types are defined for cpucontrol:
+
+
+.EX
+.PP
+.B cpucontrol_conf_t 
+.EE
+
+- Set files with the cpucontrol_conf_t type, if you want to treat the files as cpucontrol configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B cpucontrol_exec_t 
+.EE
+
+- Set files with the cpucontrol_exec_t type, if you want to transition an executable to the cpucontrol_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cpucontrol policy is very flexible allowing users to setup their cpucontrol processes in as secure a method as possible.
+.PP 
+The following process types are defined for cpucontrol:
+
+.EX
+.B cpucontrol_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cpucontrol(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cpufreqselector_selinux.8 serefpolicy-3.7.19/man/man8/cpufreqselector_selinux.8
--- nsaserefpolicy/man/man8/cpufreqselector_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cpufreqselector_selinux.8	2012-03-20 22:37:14.337458585 +0000
@@ -0,0 +1,77 @@
+.TH  "cpufreqselector_selinux"  "8"  "cpufreqselector" "dwalsh@redhat.com" "cpufreqselector SELinux Policy documentation"
+.SH "NAME"
+cpufreqselector_selinux \- Security Enhanced Linux Policy for the cpufreqselector processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cpufreqselector
+(Command-line CPU frequency settings)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cpufreqselector policy is very flexible allowing users to setup their cpufreqselector processes in as secure a method as possible.
+.PP 
+The following file types are defined for cpufreqselector:
+
+
+.EX
+.PP
+.B cpufreqselector_exec_t 
+.EE
+
+- Set files with the cpufreqselector_exec_t type, if you want to transition an executable to the cpufreqselector_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cpufreqselector policy is very flexible allowing users to setup their cpufreqselector processes in as secure a method as possible.
+.PP 
+The following process types are defined for cpufreqselector:
+
+.EX
+.B cpufreqselector_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cpufreqselector(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cpuspeed_selinux.8 serefpolicy-3.7.19/man/man8/cpuspeed_selinux.8
--- nsaserefpolicy/man/man8/cpuspeed_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cpuspeed_selinux.8	2012-03-20 22:37:14.337458585 +0000
@@ -0,0 +1,83 @@
+.TH  "cpuspeed_selinux"  "8"  "cpuspeed" "dwalsh@redhat.com" "cpuspeed SELinux Policy documentation"
+.SH "NAME"
+cpuspeed_selinux \- Security Enhanced Linux Policy for the cpuspeed processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cpuspeed policy is very flexible allowing users to setup their cpuspeed processes in as secure a method as possible.
+.PP 
+The following file types are defined for cpuspeed:
+
+
+.EX
+.PP
+.B cpuspeed_exec_t 
+.EE
+
+- Set files with the cpuspeed_exec_t type, if you want to transition an executable to the cpuspeed_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/cpuspeed, /usr/sbin/cpufreqd, /usr/sbin/powernowd
+
+.EX
+.PP
+.B cpuspeed_var_run_t 
+.EE
+
+- Set files with the cpuspeed_var_run_t type, if you want to store the cpuspeed files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cpuspeed policy is very flexible allowing users to setup their cpuspeed processes in as secure a method as possible.
+.PP 
+The following process types are defined for cpuspeed:
+
+.EX
+.B cpuspeed_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cpuspeed(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/crack_selinux.8 serefpolicy-3.7.19/man/man8/crack_selinux.8
--- nsaserefpolicy/man/man8/crack_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/crack_selinux.8	2012-03-20 22:37:14.337458585 +0000
@@ -0,0 +1,95 @@
+.TH  "crack_selinux"  "8"  "crack" "dwalsh@redhat.com" "crack SELinux Policy documentation"
+.SH "NAME"
+crack_selinux \- Security Enhanced Linux Policy for the crack processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux crack policy is very flexible allowing users to setup their crack processes in as secure a method as possible.
+.PP 
+The following file types are defined for crack:
+
+
+.EX
+.PP
+.B crack_db_t 
+.EE
+
+- Set files with the crack_db_t type, if you want to treat the files as crack database content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/cracklib_dict.*, /var/cache/cracklib(/.*)?, /usr/share/cracklib(/.*)?
+
+.EX
+.PP
+.B crack_exec_t 
+.EE
+
+- Set files with the crack_exec_t type, if you want to transition an executable to the crack_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/cracklib-[a-z]*, /usr/sbin/crack_[a-z]*
+
+.EX
+.PP
+.B crack_tmp_t 
+.EE
+
+- Set files with the crack_tmp_t type, if you want to store crack temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux crack policy is very flexible allowing users to setup their crack processes in as secure a method as possible.
+.PP 
+The following process types are defined for crack:
+
+.EX
+.B crack_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), crack(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/crond_selinux.8 serefpolicy-3.7.19/man/man8/crond_selinux.8
--- nsaserefpolicy/man/man8/crond_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/crond_selinux.8	2012-03-20 22:37:14.337458585 +0000
@@ -0,0 +1,161 @@
+.TH  "crond_selinux"  "8"  "crond" "dwalsh@redhat.com" "crond SELinux Policy documentation"
+.SH "NAME"
+crond_selinux \- Security Enhanced Linux Policy for the crond processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  crond policy is extremely flexible and has several booleans that allow you to manipulate the policy and run crond with the tightest access possible.
+
+
+.PP
+If you want to enable extra rules in the cron domain to support fcron, you must turn on the fcron_crond boolean.
+
+.EX
+.B setsebool -P fcron_crond 1
+.EE
+
+.PP
+If you want to allow system cron jobs to relabel filesystem for restoring file contexts, you must turn on the cron_can_relabel boolean.
+
+.EX
+.B setsebool -P cron_can_relabel 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux crond policy is very flexible allowing users to setup their crond processes in as secure a method as possible.
+.PP 
+The following file types are defined for crond:
+
+
+.EX
+.PP
+.B cron_log_t 
+.EE
+
+- Set files with the cron_log_t type, if you want to treat the data as cron log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B cron_spool_t 
+.EE
+
+- Set files with the cron_spool_t type, if you want to store the cron files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/fcron, /var/spool/cron/crontabs
+
+.EX
+.PP
+.B cron_var_lib_t 
+.EE
+
+- Set files with the cron_var_lib_t type, if you want to store the cron files under the /var/lib directory.
+
+
+.EX
+.PP
+.B cron_var_run_t 
+.EE
+
+- Set files with the cron_var_run_t type, if you want to store the cron files under the /run directory.
+
+
+.EX
+.PP
+.B crond_exec_t 
+.EE
+
+- Set files with the crond_exec_t type, if you want to transition an executable to the crond_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/atd, /usr/sbin/fcron, /usr/sbin/cron(d)?
+
+.EX
+.PP
+.B crond_initrc_exec_t 
+.EE
+
+- Set files with the crond_initrc_exec_t type, if you want to transition an executable to the crond_initrc_t domain.
+
+
+.EX
+.PP
+.B crond_tmp_t 
+.EE
+
+- Set files with the crond_tmp_t type, if you want to store crond temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B crond_var_run_t 
+.EE
+
+- Set files with the crond_var_run_t type, if you want to store the crond files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/crond?\.pid, /var/run/crond?\.reboot, /var/run/fcron\.pid, /var/run/fcron\.fifo, /var/run/atd\.pid, /var/run/anacron\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux crond policy is very flexible allowing users to setup their crond processes in as secure a method as possible.
+.PP 
+The following process types are defined for crond:
+
+.EX
+.B crond_t, cronjob_t, crontab_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), crond(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/crontab_selinux.8 serefpolicy-3.7.19/man/man8/crontab_selinux.8
--- nsaserefpolicy/man/man8/crontab_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/crontab_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,83 @@
+.TH  "crontab_selinux"  "8"  "crontab" "dwalsh@redhat.com" "crontab SELinux Policy documentation"
+.SH "NAME"
+crontab_selinux \- Security Enhanced Linux Policy for the crontab processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux crontab policy is very flexible allowing users to setup their crontab processes in as secure a method as possible.
+.PP 
+The following file types are defined for crontab:
+
+
+.EX
+.PP
+.B crontab_exec_t 
+.EE
+
+- Set files with the crontab_exec_t type, if you want to transition an executable to the crontab_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/(f)?crontab, /usr/bin/at
+
+.EX
+.PP
+.B crontab_tmp_t 
+.EE
+
+- Set files with the crontab_tmp_t type, if you want to store crontab temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux crontab policy is very flexible allowing users to setup their crontab processes in as secure a method as possible.
+.PP 
+The following process types are defined for crontab:
+
+.EX
+.B crontab_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), crontab(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ctdbd_selinux.8 serefpolicy-3.7.19/man/man8/ctdbd_selinux.8
--- nsaserefpolicy/man/man8/ctdbd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ctdbd_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,155 @@
+.TH  "ctdbd_selinux"  "8"  "ctdbd" "dwalsh@redhat.com" "ctdbd SELinux Policy documentation"
+.SH "NAME"
+ctdbd_selinux \- Security Enhanced Linux Policy for the ctdbd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ctdbd
+(policy for ctdbd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ctdbd:
+
+
+.EX
+.PP
+.B ctdbd_exec_t 
+.EE
+
+- Set files with the ctdbd_exec_t type, if you want to transition an executable to the ctdbd_t domain.
+
+
+.EX
+.PP
+.B ctdbd_initrc_exec_t 
+.EE
+
+- Set files with the ctdbd_initrc_exec_t type, if you want to transition an executable to the ctdbd_initrc_t domain.
+
+
+.EX
+.PP
+.B ctdbd_log_t 
+.EE
+
+- Set files with the ctdbd_log_t type, if you want to treat the data as ctdbd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ctdbd_spool_t 
+.EE
+
+- Set files with the ctdbd_spool_t type, if you want to store the ctdbd files under the /var/spool directory.
+
+
+.EX
+.PP
+.B ctdbd_tmp_t 
+.EE
+
+- Set files with the ctdbd_tmp_t type, if you want to store ctdbd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ctdbd_var_lib_t 
+.EE
+
+- Set files with the ctdbd_var_lib_t type, if you want to store the ctdbd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/ctdb(/.*)?, /etc/ctdb(/.*)?, /var/lib/ctdbd(/.*)?, /var/ctdbd(/.*)?
+
+.EX
+.PP
+.B ctdbd_var_run_t 
+.EE
+
+- Set files with the ctdbd_var_run_t type, if you want to store the ctdbd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
+.PP 
+The following port types are defined for ctdbd:
+
+.EX
+.TP 5
+.B ctdb_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ctdbd:
+
+.EX
+.B ctdbd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ctdbd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cupsd_selinux.8 serefpolicy-3.7.19/man/man8/cupsd_selinux.8
--- nsaserefpolicy/man/man8/cupsd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cupsd_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,219 @@
+.TH  "cupsd_selinux"  "8"  "cupsd" "dwalsh@redhat.com" "cupsd SELinux Policy documentation"
+.SH "NAME"
+cupsd_selinux \- Security Enhanced Linux Policy for the cupsd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cupsd policy is very flexible allowing users to setup their cupsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for cupsd:
+
+
+.EX
+.PP
+.B cups_pdf_exec_t 
+.EE
+
+- Set files with the cups_pdf_exec_t type, if you want to transition an executable to the cups_pdf_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/cups/backend/cups-pdf, /usr/lib64/cups/backend/cups-pdf
+
+.EX
+.PP
+.B cups_pdf_tmp_t 
+.EE
+
+- Set files with the cups_pdf_tmp_t type, if you want to store cups pdf temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_config_exec_t 
+.EE
+
+- Set files with the cupsd_config_exec_t type, if you want to transition an executable to the cupsd_config_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/printconf-backend, /usr/sbin/hal_lpadmin, /usr/libexec/cups-pk-helper-mechanism, /usr/libexec/hal_lpadmin, /lib/udev/udev-configure-printer, /usr/bin/cups-config-daemon
+
+.EX
+.PP
+.B cupsd_config_var_run_t 
+.EE
+
+- Set files with the cupsd_config_var_run_t type, if you want to store the cupsd config files under the /run directory.
+
+
+.EX
+.PP
+.B cupsd_etc_t 
+.EE
+
+- Set files with the cupsd_etc_t type, if you want to store cupsd files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/usr/share/cups(/.*)?, /etc/cups(/.*)?
+
+.EX
+.PP
+.B cupsd_exec_t 
+.EE
+
+- Set files with the cupsd_exec_t type, if you want to transition an executable to the cupsd_t domain.
+
+
+.EX
+.PP
+.B cupsd_initrc_exec_t 
+.EE
+
+- Set files with the cupsd_initrc_exec_t type, if you want to transition an executable to the cupsd_initrc_t domain.
+
+
+.EX
+.PP
+.B cupsd_interface_t 
+.EE
+
+- Set files with the cupsd_interface_t type, if you want to treat the files as cupsd interface data.
+
+
+.EX
+.PP
+.B cupsd_lock_t 
+.EE
+
+- Set files with the cupsd_lock_t type, if you want to treat the files as cupsd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B cupsd_log_t 
+.EE
+
+- Set files with the cupsd_log_t type, if you want to treat the data as cupsd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/cups(/.*)?, /usr/local/Brother/fax/.*\.log, /var/log/turboprint.*
+
+.EX
+.PP
+.B cupsd_lpd_exec_t 
+.EE
+
+- Set files with the cupsd_lpd_exec_t type, if you want to transition an executable to the cupsd_lpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/cups/daemon/cups-lpd, /usr/lib64/cups/daemon/cups-lpd
+
+.EX
+.PP
+.B cupsd_lpd_tmp_t 
+.EE
+
+- Set files with the cupsd_lpd_tmp_t type, if you want to store cupsd lpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_lpd_var_run_t 
+.EE
+
+- Set files with the cupsd_lpd_var_run_t type, if you want to store the cupsd lpd files under the /run directory.
+
+
+.EX
+.PP
+.B cupsd_rw_etc_t 
+.EE
+
+- Set files with the cupsd_rw_etc_t type, if you want to store cupsd rw files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/cups/lpoptions.*, /etc/cups/subscriptions.*, /usr/local/Brother/(.*/)?inf(/.*)?, /etc/cups/ppd(/.*)?, /opt/gutenprint/ppds(/.*)?, /etc/printcap.*, /etc/alchemist/namespace/printconf(/.*)?, /usr/local/Printer/(.*/)?inf(/.*)?, /var/lib/cups/certs, /usr/local/linuxprinter/ppd(/.*)?, /etc/cups/ppds\.dat, /etc/cups/certs, /etc/cups/certs/.*, /etc/cups/printers\.conf.*, /var/lib/cups/certs/.*, /var/cache/foomatic(/.*)?, /etc/cups/classes\.conf.*, /var/cache/alchemist/printconf.*, /etc/cups/cupsd\.conf.*, /var/cache/cups(/.*)?, /usr/share/foomatic/db/oldprinterids
+
+.EX
+.PP
+.B cupsd_tmp_t 
+.EE
+
+- Set files with the cupsd_tmp_t type, if you want to store cupsd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_var_run_t 
+.EE
+
+- Set files with the cupsd_var_run_t type, if you want to store the cupsd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/ccpd(/.*)?, /var/ekpd(/.*)?, /var/turboprint(/.*)?, /var/run/cups(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cupsd policy is very flexible allowing users to setup their cupsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for cupsd:
+
+.EX
+.B cupsd_t, cupsd_config_t, cupsd_lpd_t, cups_pdf_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cupsd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cups_selinux.8 serefpolicy-3.7.19/man/man8/cups_selinux.8
--- nsaserefpolicy/man/man8/cups_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cups_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,225 @@
+.TH  "cups_selinux"  "8"  "cups" "dwalsh@redhat.com" "cups SELinux Policy documentation"
+.SH "NAME"
+cups_selinux \- Security Enhanced Linux Policy for the cups processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cups
+(Common UNIX printing system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cups policy is very flexible allowing users to setup their cups processes in as secure a method as possible.
+.PP 
+The following file types are defined for cups:
+
+
+.EX
+.PP
+.B cups_pdf_exec_t 
+.EE
+
+- Set files with the cups_pdf_exec_t type, if you want to transition an executable to the cups_pdf_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/cups/backend/cups-pdf, /usr/lib64/cups/backend/cups-pdf
+
+.EX
+.PP
+.B cups_pdf_tmp_t 
+.EE
+
+- Set files with the cups_pdf_tmp_t type, if you want to store cups pdf temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_config_exec_t 
+.EE
+
+- Set files with the cupsd_config_exec_t type, if you want to transition an executable to the cupsd_config_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/printconf-backend, /usr/sbin/hal_lpadmin, /usr/libexec/cups-pk-helper-mechanism, /usr/libexec/hal_lpadmin, /lib/udev/udev-configure-printer, /usr/bin/cups-config-daemon
+
+.EX
+.PP
+.B cupsd_config_var_run_t 
+.EE
+
+- Set files with the cupsd_config_var_run_t type, if you want to store the cupsd config files under the /run directory.
+
+
+.EX
+.PP
+.B cupsd_etc_t 
+.EE
+
+- Set files with the cupsd_etc_t type, if you want to store cupsd files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/usr/share/cups(/.*)?, /etc/cups(/.*)?
+
+.EX
+.PP
+.B cupsd_exec_t 
+.EE
+
+- Set files with the cupsd_exec_t type, if you want to transition an executable to the cupsd_t domain.
+
+
+.EX
+.PP
+.B cupsd_initrc_exec_t 
+.EE
+
+- Set files with the cupsd_initrc_exec_t type, if you want to transition an executable to the cupsd_initrc_t domain.
+
+
+.EX
+.PP
+.B cupsd_interface_t 
+.EE
+
+- Set files with the cupsd_interface_t type, if you want to treat the files as cupsd interface data.
+
+
+.EX
+.PP
+.B cupsd_lock_t 
+.EE
+
+- Set files with the cupsd_lock_t type, if you want to treat the files as cupsd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B cupsd_log_t 
+.EE
+
+- Set files with the cupsd_log_t type, if you want to treat the data as cupsd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/cups(/.*)?, /usr/local/Brother/fax/.*\.log, /var/log/turboprint.*
+
+.EX
+.PP
+.B cupsd_lpd_exec_t 
+.EE
+
+- Set files with the cupsd_lpd_exec_t type, if you want to transition an executable to the cupsd_lpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/cups/daemon/cups-lpd, /usr/lib64/cups/daemon/cups-lpd
+
+.EX
+.PP
+.B cupsd_lpd_tmp_t 
+.EE
+
+- Set files with the cupsd_lpd_tmp_t type, if you want to store cupsd lpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_lpd_var_run_t 
+.EE
+
+- Set files with the cupsd_lpd_var_run_t type, if you want to store the cupsd lpd files under the /run directory.
+
+
+.EX
+.PP
+.B cupsd_rw_etc_t 
+.EE
+
+- Set files with the cupsd_rw_etc_t type, if you want to store cupsd rw files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/cups/lpoptions.*, /etc/cups/subscriptions.*, /usr/local/Brother/(.*/)?inf(/.*)?, /etc/cups/ppd(/.*)?, /opt/gutenprint/ppds(/.*)?, /etc/printcap.*, /etc/alchemist/namespace/printconf(/.*)?, /usr/local/Printer/(.*/)?inf(/.*)?, /var/lib/cups/certs, /usr/local/linuxprinter/ppd(/.*)?, /etc/cups/ppds\.dat, /etc/cups/certs, /etc/cups/certs/.*, /etc/cups/printers\.conf.*, /var/lib/cups/certs/.*, /var/cache/foomatic(/.*)?, /etc/cups/classes\.conf.*, /var/cache/alchemist/printconf.*, /etc/cups/cupsd\.conf.*, /var/cache/cups(/.*)?, /usr/share/foomatic/db/oldprinterids
+
+.EX
+.PP
+.B cupsd_tmp_t 
+.EE
+
+- Set files with the cupsd_tmp_t type, if you want to store cupsd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_var_run_t 
+.EE
+
+- Set files with the cupsd_var_run_t type, if you want to store the cupsd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/ccpd(/.*)?, /var/ekpd(/.*)?, /var/turboprint(/.*)?, /var/run/cups(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cups policy is very flexible allowing users to setup their cups processes in as secure a method as possible.
+.PP 
+The following process types are defined for cups:
+
+.EX
+.B cupsd_t, cupsd_config_t, cupsd_lpd_t, cups_pdf_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cups(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cvs_selinux.8 serefpolicy-3.7.19/man/man8/cvs_selinux.8
--- nsaserefpolicy/man/man8/cvs_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cvs_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,162 @@
+.TH  "cvs_selinux"  "8"  "cvs" "dwalsh@redhat.com" "cvs SELinux Policy documentation"
+.SH "NAME"
+cvs_selinux \- Security Enhanced Linux Policy for the cvs processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cvs
+(Concurrent versions system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  cvs policy is extremely flexible and has several booleans that allow you to manipulate the policy and run cvs with the tightest access possible.
+
+
+.PP
+If you want to allow cvs daemon to read shado, you must turn on the allow_cvs_read_shadow boolean.
+
+.EX
+.B setsebool -P allow_cvs_read_shadow 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
+.PP 
+The following file types are defined for cvs:
+
+
+.EX
+.PP
+.B cvs_data_t 
+.EE
+
+- Set files with the cvs_data_t type, if you want to treat the files as cvs content.
+
+.br
+.TP 5
+Paths: 
+/opt/cvs(/.*)?, /var/cvs(/.*)?
+
+.EX
+.PP
+.B cvs_exec_t 
+.EE
+
+- Set files with the cvs_exec_t type, if you want to transition an executable to the cvs_t domain.
+
+
+.EX
+.PP
+.B cvs_initrc_exec_t 
+.EE
+
+- Set files with the cvs_initrc_exec_t type, if you want to transition an executable to the cvs_initrc_t domain.
+
+
+.EX
+.PP
+.B cvs_keytab_t 
+.EE
+
+- Set files with the cvs_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B cvs_tmp_t 
+.EE
+
+- Set files with the cvs_tmp_t type, if you want to store cvs temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cvs_var_run_t 
+.EE
+
+- Set files with the cvs_var_run_t type, if you want to store the cvs files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
+.PP 
+The following port types are defined for cvs:
+
+.EX
+.TP 5
+.B cvs_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
+.PP 
+The following process types are defined for cvs:
+
+.EX
+.B cvs_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cvs(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cyphesis_selinux.8 serefpolicy-3.7.19/man/man8/cyphesis_selinux.8
--- nsaserefpolicy/man/man8/cyphesis_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cyphesis_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,127 @@
+.TH  "cyphesis_selinux"  "8"  "cyphesis" "dwalsh@redhat.com" "cyphesis SELinux Policy documentation"
+.SH "NAME"
+cyphesis_selinux \- Security Enhanced Linux Policy for the cyphesis processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cyphesis
+(Cyphesis WorldForge game server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
+.PP 
+The following file types are defined for cyphesis:
+
+
+.EX
+.PP
+.B cyphesis_exec_t 
+.EE
+
+- Set files with the cyphesis_exec_t type, if you want to transition an executable to the cyphesis_t domain.
+
+
+.EX
+.PP
+.B cyphesis_log_t 
+.EE
+
+- Set files with the cyphesis_log_t type, if you want to treat the data as cyphesis log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B cyphesis_tmp_t 
+.EE
+
+- Set files with the cyphesis_tmp_t type, if you want to store cyphesis temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cyphesis_var_run_t 
+.EE
+
+- Set files with the cyphesis_var_run_t type, if you want to store the cyphesis files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
+.PP 
+The following port types are defined for cyphesis:
+
+.EX
+.TP 5
+.B cyphesis_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
+.PP 
+The following process types are defined for cyphesis:
+
+.EX
+.B cyphesis_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cyphesis(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/cyrus_selinux.8 serefpolicy-3.7.19/man/man8/cyrus_selinux.8
--- nsaserefpolicy/man/man8/cyrus_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/cyrus_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,117 @@
+.TH  "cyrus_selinux"  "8"  "cyrus" "dwalsh@redhat.com" "cyrus SELinux Policy documentation"
+.SH "NAME"
+cyrus_selinux \- Security Enhanced Linux Policy for the cyrus processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cyrus
+(Cyrus is an IMAP service intended to be run on sealed servers)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cyrus policy is very flexible allowing users to setup their cyrus processes in as secure a method as possible.
+.PP 
+The following file types are defined for cyrus:
+
+
+.EX
+.PP
+.B cyrus_exec_t 
+.EE
+
+- Set files with the cyrus_exec_t type, if you want to transition an executable to the cyrus_t domain.
+
+
+.EX
+.PP
+.B cyrus_initrc_exec_t 
+.EE
+
+- Set files with the cyrus_initrc_exec_t type, if you want to transition an executable to the cyrus_initrc_t domain.
+
+
+.EX
+.PP
+.B cyrus_keytab_t 
+.EE
+
+- Set files with the cyrus_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B cyrus_tmp_t 
+.EE
+
+- Set files with the cyrus_tmp_t type, if you want to store cyrus temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cyrus_var_lib_t 
+.EE
+
+- Set files with the cyrus_var_lib_t type, if you want to store the cyrus files under the /var/lib directory.
+
+
+.EX
+.PP
+.B cyrus_var_run_t 
+.EE
+
+- Set files with the cyrus_var_run_t type, if you want to store the cyrus files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cyrus policy is very flexible allowing users to setup their cyrus processes in as secure a method as possible.
+.PP 
+The following process types are defined for cyrus:
+
+.EX
+.B cyrus_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cyrus(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dbskkd_selinux.8 serefpolicy-3.7.19/man/man8/dbskkd_selinux.8
--- nsaserefpolicy/man/man8/dbskkd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dbskkd_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,113 @@
+.TH  "dbskkd_selinux"  "8"  "dbskkd" "dwalsh@redhat.com" "dbskkd SELinux Policy documentation"
+.SH "NAME"
+dbskkd_selinux \- Security Enhanced Linux Policy for the dbskkd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dbskkd:
+
+
+.EX
+.PP
+.B dbskkd_exec_t 
+.EE
+
+- Set files with the dbskkd_exec_t type, if you want to transition an executable to the dbskkd_t domain.
+
+
+.EX
+.PP
+.B dbskkd_tmp_t 
+.EE
+
+- Set files with the dbskkd_tmp_t type, if you want to store dbskkd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dbskkd_var_run_t 
+.EE
+
+- Set files with the dbskkd_var_run_t type, if you want to store the dbskkd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
+.PP 
+The following port types are defined for dbskkd:
+
+.EX
+.TP 5
+.B dbskkd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dbskkd:
+
+.EX
+.B dbskkd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dbskkd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dccd_selinux.8 serefpolicy-3.7.19/man/man8/dccd_selinux.8
--- nsaserefpolicy/man/man8/dccd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dccd_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,188 @@
+.TH  "dccd_selinux"  "8"  "dccd" "dwalsh@redhat.com" "dccd SELinux Policy documentation"
+.SH "NAME"
+dccd_selinux \- Security Enhanced Linux Policy for the dccd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dccd:
+
+
+.EX
+.PP
+.B dcc_client_exec_t 
+.EE
+
+- Set files with the dcc_client_exec_t type, if you want to transition an executable to the dcc_client_t domain.
+
+
+.EX
+.PP
+.B dcc_client_map_t 
+.EE
+
+- Set files with the dcc_client_map_t type, if you want to treat the files as dcc client map data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dcc/map, /etc/dcc/map, /var/dcc/map, /var/run/dcc/map
+
+.EX
+.PP
+.B dcc_client_tmp_t 
+.EE
+
+- Set files with the dcc_client_tmp_t type, if you want to store dcc client temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dcc_dbclean_exec_t 
+.EE
+
+- Set files with the dcc_dbclean_exec_t type, if you want to transition an executable to the dcc_dbclean_t domain.
+
+
+.EX
+.PP
+.B dcc_dbclean_tmp_t 
+.EE
+
+- Set files with the dcc_dbclean_tmp_t type, if you want to store dcc dbclean temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dcc_var_run_t 
+.EE
+
+- Set files with the dcc_var_run_t type, if you want to store the dcc files under the /run directory.
+
+
+.EX
+.PP
+.B dcc_var_t 
+.EE
+
+- Set files with the dcc_var_t type, if you want to store the  files under the /var directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dcc(/.*)?, /var/dcc(/.*)?, /var/lib/dcc(/.*)?
+
+.EX
+.PP
+.B dccd_exec_t 
+.EE
+
+- Set files with the dccd_exec_t type, if you want to transition an executable to the dccd_t domain.
+
+
+.EX
+.PP
+.B dccd_tmp_t 
+.EE
+
+- Set files with the dccd_tmp_t type, if you want to store dccd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccd_var_run_t 
+.EE
+
+- Set files with the dccd_var_run_t type, if you want to store the dccd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
+.PP 
+The following port types are defined for dccd:
+
+.EX
+.TP 5
+.B dcc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B dccm_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dccd:
+
+.EX
+.B dccm_t, dcc_client_t, dcc_dbclean_t, dccifd_t, dccd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dccd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dccifd_selinux.8 serefpolicy-3.7.19/man/man8/dccifd_selinux.8
--- nsaserefpolicy/man/man8/dccifd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dccifd_selinux.8	2012-03-20 22:37:14.338458562 +0000
@@ -0,0 +1,91 @@
+.TH  "dccifd_selinux"  "8"  "dccifd" "dwalsh@redhat.com" "dccifd SELinux Policy documentation"
+.SH "NAME"
+dccifd_selinux \- Security Enhanced Linux Policy for the dccifd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dccifd policy is very flexible allowing users to setup their dccifd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dccifd:
+
+
+.EX
+.PP
+.B dccifd_exec_t 
+.EE
+
+- Set files with the dccifd_exec_t type, if you want to transition an executable to the dccifd_t domain.
+
+
+.EX
+.PP
+.B dccifd_tmp_t 
+.EE
+
+- Set files with the dccifd_tmp_t type, if you want to store dccifd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccifd_var_run_t 
+.EE
+
+- Set files with the dccifd_var_run_t type, if you want to store the dccifd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dcc/dccifd, /var/run/dcc/dccifd
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dccifd policy is very flexible allowing users to setup their dccifd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dccifd:
+
+.EX
+.B dccifd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dccifd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dccm_selinux.8 serefpolicy-3.7.19/man/man8/dccm_selinux.8
--- nsaserefpolicy/man/man8/dccm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dccm_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,113 @@
+.TH  "dccm_selinux"  "8"  "dccm" "dwalsh@redhat.com" "dccm SELinux Policy documentation"
+.SH "NAME"
+dccm_selinux \- Security Enhanced Linux Policy for the dccm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
+.PP 
+The following file types are defined for dccm:
+
+
+.EX
+.PP
+.B dccm_exec_t 
+.EE
+
+- Set files with the dccm_exec_t type, if you want to transition an executable to the dccm_t domain.
+
+
+.EX
+.PP
+.B dccm_tmp_t 
+.EE
+
+- Set files with the dccm_tmp_t type, if you want to store dccm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccm_var_run_t 
+.EE
+
+- Set files with the dccm_var_run_t type, if you want to store the dccm files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
+.PP 
+The following port types are defined for dccm:
+
+.EX
+.TP 5
+.B dccm_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
+.PP 
+The following process types are defined for dccm:
+
+.EX
+.B dccm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dccm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dcc_selinux.8 serefpolicy-3.7.19/man/man8/dcc_selinux.8
--- nsaserefpolicy/man/man8/dcc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dcc_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,246 @@
+.TH  "dcc_selinux"  "8"  "dcc" "dwalsh@redhat.com" "dcc SELinux Policy documentation"
+.SH "NAME"
+dcc_selinux \- Security Enhanced Linux Policy for the dcc processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dcc
+(Distributed checksum clearinghouse spam filtering)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dcc policy is very flexible allowing users to setup their dcc processes in as secure a method as possible.
+.PP 
+The following file types are defined for dcc:
+
+
+.EX
+.PP
+.B dcc_client_exec_t 
+.EE
+
+- Set files with the dcc_client_exec_t type, if you want to transition an executable to the dcc_client_t domain.
+
+
+.EX
+.PP
+.B dcc_client_map_t 
+.EE
+
+- Set files with the dcc_client_map_t type, if you want to treat the files as dcc client map data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dcc/map, /etc/dcc/map, /var/dcc/map, /var/run/dcc/map
+
+.EX
+.PP
+.B dcc_client_tmp_t 
+.EE
+
+- Set files with the dcc_client_tmp_t type, if you want to store dcc client temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dcc_dbclean_exec_t 
+.EE
+
+- Set files with the dcc_dbclean_exec_t type, if you want to transition an executable to the dcc_dbclean_t domain.
+
+
+.EX
+.PP
+.B dcc_dbclean_tmp_t 
+.EE
+
+- Set files with the dcc_dbclean_tmp_t type, if you want to store dcc dbclean temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dcc_var_run_t 
+.EE
+
+- Set files with the dcc_var_run_t type, if you want to store the dcc files under the /run directory.
+
+
+.EX
+.PP
+.B dcc_var_t 
+.EE
+
+- Set files with the dcc_var_t type, if you want to store the  files under the /var directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dcc(/.*)?, /var/dcc(/.*)?, /var/lib/dcc(/.*)?
+
+.EX
+.PP
+.B dccd_exec_t 
+.EE
+
+- Set files with the dccd_exec_t type, if you want to transition an executable to the dccd_t domain.
+
+
+.EX
+.PP
+.B dccd_tmp_t 
+.EE
+
+- Set files with the dccd_tmp_t type, if you want to store dccd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccd_var_run_t 
+.EE
+
+- Set files with the dccd_var_run_t type, if you want to store the dccd files under the /run directory.
+
+
+.EX
+.PP
+.B dccifd_exec_t 
+.EE
+
+- Set files with the dccifd_exec_t type, if you want to transition an executable to the dccifd_t domain.
+
+
+.EX
+.PP
+.B dccifd_tmp_t 
+.EE
+
+- Set files with the dccifd_tmp_t type, if you want to store dccifd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccifd_var_run_t 
+.EE
+
+- Set files with the dccifd_var_run_t type, if you want to store the dccifd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dcc/dccifd, /var/run/dcc/dccifd
+
+.EX
+.PP
+.B dccm_exec_t 
+.EE
+
+- Set files with the dccm_exec_t type, if you want to transition an executable to the dccm_t domain.
+
+
+.EX
+.PP
+.B dccm_tmp_t 
+.EE
+
+- Set files with the dccm_tmp_t type, if you want to store dccm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccm_var_run_t 
+.EE
+
+- Set files with the dccm_var_run_t type, if you want to store the dccm files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dcc policy is very flexible allowing users to setup their dcc processes in as secure a method as possible.
+.PP 
+The following port types are defined for dcc:
+
+.EX
+.TP 5
+.B dcc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B dccm_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dcc policy is very flexible allowing users to setup their dcc processes in as secure a method as possible.
+.PP 
+The following process types are defined for dcc:
+
+.EX
+.B dccm_t, dcc_client_t, dcc_dbclean_t, dccifd_t, dccd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dcc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dcerpcd_selinux.8 serefpolicy-3.7.19/man/man8/dcerpcd_selinux.8
--- nsaserefpolicy/man/man8/dcerpcd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dcerpcd_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,95 @@
+.TH  "dcerpcd_selinux"  "8"  "dcerpcd" "dwalsh@redhat.com" "dcerpcd SELinux Policy documentation"
+.SH "NAME"
+dcerpcd_selinux \- Security Enhanced Linux Policy for the dcerpcd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dcerpcd policy is very flexible allowing users to setup their dcerpcd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dcerpcd:
+
+
+.EX
+.PP
+.B dcerpcd_exec_t 
+.EE
+
+- Set files with the dcerpcd_exec_t type, if you want to transition an executable to the dcerpcd_t domain.
+
+
+.EX
+.PP
+.B dcerpcd_var_lib_t 
+.EE
+
+- Set files with the dcerpcd_var_lib_t type, if you want to store the dcerpcd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B dcerpcd_var_run_t 
+.EE
+
+- Set files with the dcerpcd_var_run_t type, if you want to store the dcerpcd files under the /run directory.
+
+
+.EX
+.PP
+.B dcerpcd_var_socket_t 
+.EE
+
+- Set files with the dcerpcd_var_socket_t type, if you want to treat the files as dcerpcd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dcerpcd policy is very flexible allowing users to setup their dcerpcd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dcerpcd:
+
+.EX
+.B dcerpcd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dcerpcd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/deltacloudd_selinux.8 serefpolicy-3.7.19/man/man8/deltacloudd_selinux.8
--- nsaserefpolicy/man/man8/deltacloudd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/deltacloudd_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,87 @@
+.TH  "deltacloudd_selinux"  "8"  "deltacloudd" "dwalsh@redhat.com" "deltacloudd SELinux Policy documentation"
+.SH "NAME"
+deltacloudd_selinux \- Security Enhanced Linux Policy for the deltacloudd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux deltacloudd policy is very flexible allowing users to setup their deltacloudd processes in as secure a method as possible.
+.PP 
+The following file types are defined for deltacloudd:
+
+
+.EX
+.PP
+.B deltacloudd_exec_t 
+.EE
+
+- Set files with the deltacloudd_exec_t type, if you want to transition an executable to the deltacloudd_t domain.
+
+
+.EX
+.PP
+.B deltacloudd_log_t 
+.EE
+
+- Set files with the deltacloudd_log_t type, if you want to treat the data as deltacloudd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B deltacloudd_tmp_t 
+.EE
+
+- Set files with the deltacloudd_tmp_t type, if you want to store deltacloudd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux deltacloudd policy is very flexible allowing users to setup their deltacloudd processes in as secure a method as possible.
+.PP 
+The following process types are defined for deltacloudd:
+
+.EX
+.B deltacloudd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), deltacloudd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/denyhosts_selinux.8 serefpolicy-3.7.19/man/man8/denyhosts_selinux.8
--- nsaserefpolicy/man/man8/denyhosts_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/denyhosts_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,109 @@
+.TH  "denyhosts_selinux"  "8"  "denyhosts" "dwalsh@redhat.com" "denyhosts SELinux Policy documentation"
+.SH "NAME"
+denyhosts_selinux \- Security Enhanced Linux Policy for the denyhosts processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B denyhosts
+(Deny Hosts)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux denyhosts policy is very flexible allowing users to setup their denyhosts processes in as secure a method as possible.
+.PP 
+The following file types are defined for denyhosts:
+
+
+.EX
+.PP
+.B denyhosts_exec_t 
+.EE
+
+- Set files with the denyhosts_exec_t type, if you want to transition an executable to the denyhosts_t domain.
+
+
+.EX
+.PP
+.B denyhosts_initrc_exec_t 
+.EE
+
+- Set files with the denyhosts_initrc_exec_t type, if you want to transition an executable to the denyhosts_initrc_t domain.
+
+
+.EX
+.PP
+.B denyhosts_var_lib_t 
+.EE
+
+- Set files with the denyhosts_var_lib_t type, if you want to store the denyhosts files under the /var/lib directory.
+
+
+.EX
+.PP
+.B denyhosts_var_lock_t 
+.EE
+
+- Set files with the denyhosts_var_lock_t type, if you want to treat the files as denyhosts var lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B denyhosts_var_log_t 
+.EE
+
+- Set files with the denyhosts_var_log_t type, if you want to treat the data as denyhosts var log data, usually stored under the /var/log directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux denyhosts policy is very flexible allowing users to setup their denyhosts processes in as secure a method as possible.
+.PP 
+The following process types are defined for denyhosts:
+
+.EX
+.B denyhosts_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), denyhosts(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/depmod_selinux.8 serefpolicy-3.7.19/man/man8/depmod_selinux.8
--- nsaserefpolicy/man/man8/depmod_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/depmod_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,71 @@
+.TH  "depmod_selinux"  "8"  "depmod" "dwalsh@redhat.com" "depmod SELinux Policy documentation"
+.SH "NAME"
+depmod_selinux \- Security Enhanced Linux Policy for the depmod processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux depmod policy is very flexible allowing users to setup their depmod processes in as secure a method as possible.
+.PP 
+The following file types are defined for depmod:
+
+
+.EX
+.PP
+.B depmod_exec_t 
+.EE
+
+- Set files with the depmod_exec_t type, if you want to transition an executable to the depmod_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux depmod policy is very flexible allowing users to setup their depmod processes in as secure a method as possible.
+.PP 
+The following process types are defined for depmod:
+
+.EX
+.B depmod_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), depmod(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/devicekit_selinux.8 serefpolicy-3.7.19/man/man8/devicekit_selinux.8
--- nsaserefpolicy/man/man8/devicekit_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/devicekit_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,133 @@
+.TH  "devicekit_selinux"  "8"  "devicekit" "dwalsh@redhat.com" "devicekit SELinux Policy documentation"
+.SH "NAME"
+devicekit_selinux \- Security Enhanced Linux Policy for the devicekit processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B devicekit
+(Devicekit modular hardware abstraction layer)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux devicekit policy is very flexible allowing users to setup their devicekit processes in as secure a method as possible.
+.PP 
+The following file types are defined for devicekit:
+
+
+.EX
+.PP
+.B devicekit_disk_exec_t 
+.EE
+
+- Set files with the devicekit_disk_exec_t type, if you want to transition an executable to the devicekit_disk_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/udisks-daemon, /usr/libexec/devkit-disks-daemon
+
+.EX
+.PP
+.B devicekit_exec_t 
+.EE
+
+- Set files with the devicekit_exec_t type, if you want to transition an executable to the devicekit_t domain.
+
+
+.EX
+.PP
+.B devicekit_power_exec_t 
+.EE
+
+- Set files with the devicekit_power_exec_t type, if you want to transition an executable to the devicekit_power_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/devkit-power-daemon, /usr/libexec/upowerd
+
+.EX
+.PP
+.B devicekit_tmp_t 
+.EE
+
+- Set files with the devicekit_tmp_t type, if you want to store devicekit temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B devicekit_var_lib_t 
+.EE
+
+- Set files with the devicekit_var_lib_t type, if you want to store the devicekit files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/udisks(/.*)?, /var/lib/DeviceKit-.*, /var/lib/upower(/.*)?
+
+.EX
+.PP
+.B devicekit_var_run_t 
+.EE
+
+- Set files with the devicekit_var_run_t type, if you want to store the devicekit files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/upower(/.*)?, /var/run/devkit(/.*)?, /var/run/DeviceKit-disks(/.*)?, /var/run/udisks(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux devicekit policy is very flexible allowing users to setup their devicekit processes in as secure a method as possible.
+.PP 
+The following process types are defined for devicekit:
+
+.EX
+.B devicekit_power_t, devicekit_disk_t, devicekit_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), devicekit(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dhcpc_selinux.8 serefpolicy-3.7.19/man/man8/dhcpc_selinux.8
--- nsaserefpolicy/man/man8/dhcpc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dhcpc_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,152 @@
+.TH  "dhcpc_selinux"  "8"  "dhcpc" "dwalsh@redhat.com" "dhcpc SELinux Policy documentation"
+.SH "NAME"
+dhcpc_selinux \- Security Enhanced Linux Policy for the dhcpc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  dhcpc policy is extremely flexible and has several booleans that allow you to manipulate the policy and run dhcpc with the tightest access possible.
+
+
+.PP
+If you want to allow dhcpc client applications to execute iptables command, you must turn on the dhcpc_exec_iptables boolean.
+
+.EX
+.B setsebool -P dhcpc_exec_iptables 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
+.PP 
+The following file types are defined for dhcpc:
+
+
+.EX
+.PP
+.B dhcpc_exec_t 
+.EE
+
+- Set files with the dhcpc_exec_t type, if you want to transition an executable to the dhcpc_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/dhcpcd, /sbin/dhclient.*, /sbin/pump, /sbin/dhcdbd
+
+.EX
+.PP
+.B dhcpc_helper_exec_t 
+.EE
+
+- Set files with the dhcpc_helper_exec_t type, if you want to transition an executable to the dhcpc_helper_t domain.
+
+
+.EX
+.PP
+.B dhcpc_state_t 
+.EE
+
+- Set files with the dhcpc_state_t type, if you want to treat the files as dhcpc state data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dhclient(/.*)?, /var/lib/dhcp3?/dhclient.*, /var/lib/wifiroamd(/.*)?, /var/lib/dhcpcd(/.*)?
+
+.EX
+.PP
+.B dhcpc_tmp_t 
+.EE
+
+- Set files with the dhcpc_tmp_t type, if you want to store dhcpc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dhcpc_var_run_t 
+.EE
+
+- Set files with the dhcpc_var_run_t type, if you want to store the dhcpc files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
+.PP 
+The following port types are defined for dhcpc:
+
+.EX
+.TP 5
+.B dhcpc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
+.PP 
+The following process types are defined for dhcpc:
+
+.EX
+.B dhcpc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dhcpc(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dhcpd_selinux.8 serefpolicy-3.7.19/man/man8/dhcpd_selinux.8
--- nsaserefpolicy/man/man8/dhcpd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dhcpd_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,179 @@
+.TH  "dhcpd_selinux"  "8"  "dhcpd" "dwalsh@redhat.com" "dhcpd SELinux Policy documentation"
+.SH "NAME"
+dhcpd_selinux \- Security Enhanced Linux Policy for the dhcpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  dhcpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run dhcpd with the tightest access possible.
+
+
+.PP
+If you want to allow dhcpc client applications to execute iptables command, you must turn on the dhcpc_exec_iptables boolean.
+
+.EX
+.B setsebool -P dhcpc_exec_iptables 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dhcpd:
+
+
+.EX
+.PP
+.B dhcp_etc_t 
+.EE
+
+- Set files with the dhcp_etc_t type, if you want to store dhcp files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/dhcp3(/.*)?, /etc/dhcp3?/dhclient.*, /etc/dhcpd(6)?\.conf, /etc/dhcpc.*, /etc/dhclient-script, /etc/dhclient.*conf, /etc/dhcp/dhcpd(6)?\.conf
+
+.EX
+.PP
+.B dhcp_state_t 
+.EE
+
+- Set files with the dhcp_state_t type, if you want to treat the files as dhcp state data.
+
+
+.EX
+.PP
+.B dhcpd_exec_t 
+.EE
+
+- Set files with the dhcpd_exec_t type, if you want to transition an executable to the dhcpd_t domain.
+
+
+.EX
+.PP
+.B dhcpd_initrc_exec_t 
+.EE
+
+- Set files with the dhcpd_initrc_exec_t type, if you want to transition an executable to the dhcpd_initrc_t domain.
+
+
+.EX
+.PP
+.B dhcpd_state_t 
+.EE
+
+- Set files with the dhcpd_state_t type, if you want to treat the files as dhcpd state data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dhcp(3)?/dhcpd\.leases.*, /var/lib/dhcpd(/.*)?
+
+.EX
+.PP
+.B dhcpd_tmp_t 
+.EE
+
+- Set files with the dhcpd_tmp_t type, if you want to store dhcpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dhcpd_var_run_t 
+.EE
+
+- Set files with the dhcpd_var_run_t type, if you want to store the dhcpd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for dhcpd:
+
+.EX
+.TP 5
+.B dhcpc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B dhcpd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dhcpd:
+
+.EX
+.B dhcpc_t, dhcpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dhcpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dictd_selinux.8 serefpolicy-3.7.19/man/man8/dictd_selinux.8
--- nsaserefpolicy/man/man8/dictd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dictd_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,135 @@
+.TH  "dictd_selinux"  "8"  "dictd" "dwalsh@redhat.com" "dictd SELinux Policy documentation"
+.SH "NAME"
+dictd_selinux \- Security Enhanced Linux Policy for the dictd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dictd
+(Dictionary daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dictd:
+
+
+.EX
+.PP
+.B dictd_etc_t 
+.EE
+
+- Set files with the dictd_etc_t type, if you want to store dictd files in the /etc directories.
+
+
+.EX
+.PP
+.B dictd_exec_t 
+.EE
+
+- Set files with the dictd_exec_t type, if you want to transition an executable to the dictd_t domain.
+
+
+.EX
+.PP
+.B dictd_initrc_exec_t 
+.EE
+
+- Set files with the dictd_initrc_exec_t type, if you want to transition an executable to the dictd_initrc_t domain.
+
+
+.EX
+.PP
+.B dictd_var_lib_t 
+.EE
+
+- Set files with the dictd_var_lib_t type, if you want to store the dictd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B dictd_var_run_t 
+.EE
+
+- Set files with the dictd_var_run_t type, if you want to store the dictd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
+.PP 
+The following port types are defined for dictd:
+
+.EX
+.TP 5
+.B dict_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dictd:
+
+.EX
+.B dictd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dictd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dirsrvadmin_selinux.8 serefpolicy-3.7.19/man/man8/dirsrvadmin_selinux.8
--- nsaserefpolicy/man/man8/dirsrvadmin_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dirsrvadmin_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,107 @@
+.TH  "dirsrvadmin_selinux"  "8"  "dirsrvadmin" "dwalsh@redhat.com" "dirsrvadmin SELinux Policy documentation"
+.SH "NAME"
+dirsrvadmin_selinux \- Security Enhanced Linux Policy for the dirsrvadmin processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dirsrvadmin policy is very flexible allowing users to setup their dirsrvadmin processes in as secure a method as possible.
+.PP 
+The following file types are defined for dirsrvadmin:
+
+
+.EX
+.PP
+.B dirsrvadmin_config_t 
+.EE
+
+- Set files with the dirsrvadmin_config_t type, if you want to treat the files as dirsrvadmin configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dirsrv/admin-serv(/.*)?, /etc/dirsrv/dsgw(/.*)?
+
+.EX
+.PP
+.B dirsrvadmin_exec_t 
+.EE
+
+- Set files with the dirsrvadmin_exec_t type, if you want to transition an executable to the dirsrvadmin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/start-ds-admin, /usr/sbin/stop-ds-admin, /usr/sbin/restart-ds-admin
+
+.EX
+.PP
+.B dirsrvadmin_tmp_t 
+.EE
+
+- Set files with the dirsrvadmin_tmp_t type, if you want to store dirsrvadmin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dirsrvadmin_unconfined_script_exec_t 
+.EE
+
+- Set files with the dirsrvadmin_unconfined_script_exec_t type, if you want to transition an executable to the dirsrvadmin_unconfined_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/dirsrv/cgi-bin/ds_remove, /usr/lib(64)?/dirsrv/cgi-bin/ds_create
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dirsrvadmin policy is very flexible allowing users to setup their dirsrvadmin processes in as secure a method as possible.
+.PP 
+The following process types are defined for dirsrvadmin:
+
+.EX
+.B dirsrvadmin_unconfined_script_t, dirsrvadmin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dirsrvadmin(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dirsrv_selinux.8 serefpolicy-3.7.19/man/man8/dirsrv_selinux.8
--- nsaserefpolicy/man/man8/dirsrv_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dirsrv_selinux.8	2012-03-20 22:37:14.339458539 +0000
@@ -0,0 +1,213 @@
+.TH  "dirsrv_selinux"  "8"  "dirsrv" "dwalsh@redhat.com" "dirsrv SELinux Policy documentation"
+.SH "NAME"
+dirsrv_selinux \- Security Enhanced Linux Policy for the dirsrv processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dirsrv
+(policy for dirsrv)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dirsrv policy is very flexible allowing users to setup their dirsrv processes in as secure a method as possible.
+.PP 
+The following file types are defined for dirsrv:
+
+
+.EX
+.PP
+.B dirsrv_config_t 
+.EE
+
+- Set files with the dirsrv_config_t type, if you want to treat the files as dirsrv configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B dirsrv_exec_t 
+.EE
+
+- Set files with the dirsrv_exec_t type, if you want to transition an executable to the dirsrv_t domain.
+
+
+.EX
+.PP
+.B dirsrv_share_t 
+.EE
+
+- Set files with the dirsrv_share_t type, if you want to treat the files as dirsrv share data.
+
+
+.EX
+.PP
+.B dirsrv_snmp_exec_t 
+.EE
+
+- Set files with the dirsrv_snmp_exec_t type, if you want to transition an executable to the dirsrv_snmp_t domain.
+
+
+.EX
+.PP
+.B dirsrv_snmp_var_log_t 
+.EE
+
+- Set files with the dirsrv_snmp_var_log_t type, if you want to treat the data as dirsrv snmp var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dirsrv_snmp_var_run_t 
+.EE
+
+- Set files with the dirsrv_snmp_var_run_t type, if you want to store the dirsrv snmp files under the /run directory.
+
+
+.EX
+.PP
+.B dirsrv_tmp_t 
+.EE
+
+- Set files with the dirsrv_tmp_t type, if you want to store dirsrv temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dirsrv_tmpfs_t 
+.EE
+
+- Set files with the dirsrv_tmpfs_t type, if you want to store dirsrv files on a tmpfs file system.
+
+
+.EX
+.PP
+.B dirsrv_var_lib_t 
+.EE
+
+- Set files with the dirsrv_var_lib_t type, if you want to store the dirsrv files under the /var/lib directory.
+
+
+.EX
+.PP
+.B dirsrv_var_lock_t 
+.EE
+
+- Set files with the dirsrv_var_lock_t type, if you want to treat the files as dirsrv var lock data, stored under the /var/lock directory
+
+.br
+.TP 5
+Paths: 
+/var/lock/subsys/dirsrv, /var/lock/dirsrv(/.*)?
+
+.EX
+.PP
+.B dirsrv_var_log_t 
+.EE
+
+- Set files with the dirsrv_var_log_t type, if you want to treat the data as dirsrv var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dirsrv_var_run_t 
+.EE
+
+- Set files with the dirsrv_var_run_t type, if you want to store the dirsrv files under the /run directory.
+
+
+.EX
+.PP
+.B dirsrvadmin_config_t 
+.EE
+
+- Set files with the dirsrvadmin_config_t type, if you want to treat the files as dirsrvadmin configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dirsrv/admin-serv(/.*)?, /etc/dirsrv/dsgw(/.*)?
+
+.EX
+.PP
+.B dirsrvadmin_exec_t 
+.EE
+
+- Set files with the dirsrvadmin_exec_t type, if you want to transition an executable to the dirsrvadmin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/start-ds-admin, /usr/sbin/stop-ds-admin, /usr/sbin/restart-ds-admin
+
+.EX
+.PP
+.B dirsrvadmin_tmp_t 
+.EE
+
+- Set files with the dirsrvadmin_tmp_t type, if you want to store dirsrvadmin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dirsrvadmin_unconfined_script_exec_t 
+.EE
+
+- Set files with the dirsrvadmin_unconfined_script_exec_t type, if you want to transition an executable to the dirsrvadmin_unconfined_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/dirsrv/cgi-bin/ds_remove, /usr/lib(64)?/dirsrv/cgi-bin/ds_create
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dirsrv policy is very flexible allowing users to setup their dirsrv processes in as secure a method as possible.
+.PP 
+The following process types are defined for dirsrv:
+
+.EX
+.B dirsrvadmin_unconfined_script_t, dirsrv_snmp_t, dirsrvadmin_t, dirsrv_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dirsrv(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dkim_selinux.8 serefpolicy-3.7.19/man/man8/dkim_selinux.8
--- nsaserefpolicy/man/man8/dkim_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dkim_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,97 @@
+.TH  "dkim_selinux"  "8"  "dkim" "dwalsh@redhat.com" "dkim SELinux Policy documentation"
+.SH "NAME"
+dkim_selinux \- Security Enhanced Linux Policy for the dkim processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dkim
+(DomainKeys Identified Mail milter)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dkim policy is very flexible allowing users to setup their dkim processes in as secure a method as possible.
+.PP 
+The following file types are defined for dkim:
+
+
+.EX
+.PP
+.B dkim_milter_data_t 
+.EE
+
+- Set files with the dkim_milter_data_t type, if you want to treat the files as dkim milter content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dkim-milter(/.*)?, /var/run/dkim-milter(/.*)?
+
+.EX
+.PP
+.B dkim_milter_exec_t 
+.EE
+
+- Set files with the dkim_milter_exec_t type, if you want to transition an executable to the dkim_milter_t domain.
+
+
+.EX
+.PP
+.B dkim_milter_private_key_t 
+.EE
+
+- Set files with the dkim_milter_private_key_t type, if you want to treat the files as dkim milter private key data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dkim policy is very flexible allowing users to setup their dkim processes in as secure a method as possible.
+.PP 
+The following process types are defined for dkim:
+
+.EX
+.B dkim_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dkim(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dlm_selinux.8 serefpolicy-3.7.19/man/man8/dlm_selinux.8
--- nsaserefpolicy/man/man8/dlm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dlm_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,95 @@
+.TH  "dlm_selinux"  "8"  "dlm" "dwalsh@redhat.com" "dlm SELinux Policy documentation"
+.SH "NAME"
+dlm_selinux \- Security Enhanced Linux Policy for the dlm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dlm policy is very flexible allowing users to setup their dlm processes in as secure a method as possible.
+.PP 
+The following file types are defined for dlm:
+
+
+.EX
+.PP
+.B dlm_controld_exec_t 
+.EE
+
+- Set files with the dlm_controld_exec_t type, if you want to transition an executable to the dlm_controld_t domain.
+
+
+.EX
+.PP
+.B dlm_controld_tmpfs_t 
+.EE
+
+- Set files with the dlm_controld_tmpfs_t type, if you want to store dlm controld files on a tmpfs file system.
+
+
+.EX
+.PP
+.B dlm_controld_var_log_t 
+.EE
+
+- Set files with the dlm_controld_var_log_t type, if you want to treat the data as dlm controld var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dlm_controld_var_run_t 
+.EE
+
+- Set files with the dlm_controld_var_run_t type, if you want to store the dlm controld files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dlm policy is very flexible allowing users to setup their dlm processes in as secure a method as possible.
+.PP 
+The following process types are defined for dlm:
+
+.EX
+.B dlm_controld_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dlm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dmesg_selinux.8 serefpolicy-3.7.19/man/man8/dmesg_selinux.8
--- nsaserefpolicy/man/man8/dmesg_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dmesg_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,77 @@
+.TH  "dmesg_selinux"  "8"  "dmesg" "dwalsh@redhat.com" "dmesg SELinux Policy documentation"
+.SH "NAME"
+dmesg_selinux \- Security Enhanced Linux Policy for the dmesg processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dmesg
+(Policy for dmesg)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dmesg policy is very flexible allowing users to setup their dmesg processes in as secure a method as possible.
+.PP 
+The following file types are defined for dmesg:
+
+
+.EX
+.PP
+.B dmesg_exec_t 
+.EE
+
+- Set files with the dmesg_exec_t type, if you want to transition an executable to the dmesg_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dmesg policy is very flexible allowing users to setup their dmesg processes in as secure a method as possible.
+.PP 
+The following process types are defined for dmesg:
+
+.EX
+.B dmesg_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dmesg(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dmidecode_selinux.8 serefpolicy-3.7.19/man/man8/dmidecode_selinux.8
--- nsaserefpolicy/man/man8/dmidecode_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dmidecode_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,81 @@
+.TH  "dmidecode_selinux"  "8"  "dmidecode" "dwalsh@redhat.com" "dmidecode SELinux Policy documentation"
+.SH "NAME"
+dmidecode_selinux \- Security Enhanced Linux Policy for the dmidecode processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dmidecode
+(Decode DMI data for x86/ia64 bioses)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dmidecode policy is very flexible allowing users to setup their dmidecode processes in as secure a method as possible.
+.PP 
+The following file types are defined for dmidecode:
+
+
+.EX
+.PP
+.B dmidecode_exec_t 
+.EE
+
+- Set files with the dmidecode_exec_t type, if you want to transition an executable to the dmidecode_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/dmidecode, /usr/sbin/ownership, /usr/sbin/vpddecode
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dmidecode policy is very flexible allowing users to setup their dmidecode processes in as secure a method as possible.
+.PP 
+The following process types are defined for dmidecode:
+
+.EX
+.B dmidecode_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dmidecode(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dnsmasq_selinux.8 serefpolicy-3.7.19/man/man8/dnsmasq_selinux.8
--- nsaserefpolicy/man/man8/dnsmasq_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dnsmasq_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,125 @@
+.TH  "dnsmasq_selinux"  "8"  "dnsmasq" "dwalsh@redhat.com" "dnsmasq SELinux Policy documentation"
+.SH "NAME"
+dnsmasq_selinux \- Security Enhanced Linux Policy for the dnsmasq processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dnsmasq
+(dnsmasq DNS forwarder and DHCP server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dnsmasq policy is very flexible allowing users to setup their dnsmasq processes in as secure a method as possible.
+.PP 
+The following file types are defined for dnsmasq:
+
+
+.EX
+.PP
+.B dnsmasq_etc_t 
+.EE
+
+- Set files with the dnsmasq_etc_t type, if you want to store dnsmasq files in the /etc directories.
+
+
+.EX
+.PP
+.B dnsmasq_exec_t 
+.EE
+
+- Set files with the dnsmasq_exec_t type, if you want to transition an executable to the dnsmasq_t domain.
+
+
+.EX
+.PP
+.B dnsmasq_initrc_exec_t 
+.EE
+
+- Set files with the dnsmasq_initrc_exec_t type, if you want to transition an executable to the dnsmasq_initrc_t domain.
+
+
+.EX
+.PP
+.B dnsmasq_lease_t 
+.EE
+
+- Set files with the dnsmasq_lease_t type, if you want to treat the files as dnsmasq lease data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dnsmasq(/.*)?, /var/lib/misc/dnsmasq\.leases
+
+.EX
+.PP
+.B dnsmasq_var_log_t 
+.EE
+
+- Set files with the dnsmasq_var_log_t type, if you want to treat the data as dnsmasq var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dnsmasq_var_run_t 
+.EE
+
+- Set files with the dnsmasq_var_run_t type, if you want to store the dnsmasq files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/dnsmasq\.pid, /var/run/libvirt/network(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dnsmasq policy is very flexible allowing users to setup their dnsmasq processes in as secure a method as possible.
+.PP 
+The following process types are defined for dnsmasq:
+
+.EX
+.B dnsmasq_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dnsmasq(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/dovecot_selinux.8 serefpolicy-3.7.19/man/man8/dovecot_selinux.8
--- nsaserefpolicy/man/man8/dovecot_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/dovecot_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,213 @@
+.TH  "dovecot_selinux"  "8"  "dovecot" "dwalsh@redhat.com" "dovecot SELinux Policy documentation"
+.SH "NAME"
+dovecot_selinux \- Security Enhanced Linux Policy for the dovecot processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dovecot
+(Dovecot POP and IMAP mail server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dovecot policy is very flexible allowing users to setup their dovecot processes in as secure a method as possible.
+.PP 
+The following file types are defined for dovecot:
+
+
+.EX
+.PP
+.B dovecot_auth_exec_t 
+.EE
+
+- Set files with the dovecot_auth_exec_t type, if you want to transition an executable to the dovecot_auth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/dovecot/auth, /usr/libexec/dovecot/dovecot-auth
+
+.EX
+.PP
+.B dovecot_auth_tmp_t 
+.EE
+
+- Set files with the dovecot_auth_tmp_t type, if you want to store dovecot auth temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dovecot_cert_t 
+.EE
+
+- Set files with the dovecot_cert_t type, if you want to treat the files as dovecot certificate data.
+
+.br
+.TP 5
+Paths: 
+/usr/share/ssl/private/dovecot\.pem, /etc/pki/dovecot(/.*)?, /usr/share/ssl/certs/dovecot\.pem
+
+.EX
+.PP
+.B dovecot_deliver_exec_t 
+.EE
+
+- Set files with the dovecot_deliver_exec_t type, if you want to transition an executable to the dovecot_deliver_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/dovecot/dovecot-lda, /usr/libexec/dovecot/deliver
+
+.EX
+.PP
+.B dovecot_deliver_tmp_t 
+.EE
+
+- Set files with the dovecot_deliver_tmp_t type, if you want to store dovecot deliver temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dovecot_etc_t 
+.EE
+
+- Set files with the dovecot_etc_t type, if you want to store dovecot files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/dovecot\.conf.*, /etc/dovecot(/.*)?
+
+.EX
+.PP
+.B dovecot_exec_t 
+.EE
+
+- Set files with the dovecot_exec_t type, if you want to transition an executable to the dovecot_t domain.
+
+
+.EX
+.PP
+.B dovecot_initrc_exec_t 
+.EE
+
+- Set files with the dovecot_initrc_exec_t type, if you want to transition an executable to the dovecot_initrc_t domain.
+
+
+.EX
+.PP
+.B dovecot_keytab_t 
+.EE
+
+- Set files with the dovecot_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B dovecot_passwd_t 
+.EE
+
+- Set files with the dovecot_passwd_t type, if you want to treat the files as dovecot passwd data.
+
+
+.EX
+.PP
+.B dovecot_spool_t 
+.EE
+
+- Set files with the dovecot_spool_t type, if you want to store the dovecot files under the /var/spool directory.
+
+
+.EX
+.PP
+.B dovecot_tmp_t 
+.EE
+
+- Set files with the dovecot_tmp_t type, if you want to store dovecot temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dovecot_var_lib_t 
+.EE
+
+- Set files with the dovecot_var_lib_t type, if you want to store the dovecot files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/dovecot/login/ssl-parameters.dat, /var/lib/dovecot(/.*)?
+
+.EX
+.PP
+.B dovecot_var_log_t 
+.EE
+
+- Set files with the dovecot_var_log_t type, if you want to treat the data as dovecot var log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/dovecot\.log.*, /var/log/dovecot(/.*)?
+
+.EX
+.PP
+.B dovecot_var_run_t 
+.EE
+
+- Set files with the dovecot_var_run_t type, if you want to store the dovecot files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dovecot policy is very flexible allowing users to setup their dovecot processes in as secure a method as possible.
+.PP 
+The following process types are defined for dovecot:
+
+.EX
+.B dovecot_deliver_t, dovecot_auth_t, dovecot_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dovecot(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/drbd_selinux.8 serefpolicy-3.7.19/man/man8/drbd_selinux.8
--- nsaserefpolicy/man/man8/drbd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/drbd_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,97 @@
+.TH  "drbd_selinux"  "8"  "drbd" "dwalsh@redhat.com" "drbd SELinux Policy documentation"
+.SH "NAME"
+drbd_selinux \- Security Enhanced Linux Policy for the drbd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B drbd
+(policy for drbd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux drbd policy is very flexible allowing users to setup their drbd processes in as secure a method as possible.
+.PP 
+The following file types are defined for drbd:
+
+
+.EX
+.PP
+.B drbd_exec_t 
+.EE
+
+- Set files with the drbd_exec_t type, if you want to transition an executable to the drbd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/drbdadm, /usr/lib/ocf/resource.\d/linbit/drbd, /sbin/drbdsetup
+
+.EX
+.PP
+.B drbd_lock_t 
+.EE
+
+- Set files with the drbd_lock_t type, if you want to treat the files as drbd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B drbd_var_lib_t 
+.EE
+
+- Set files with the drbd_var_lib_t type, if you want to store the drbd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux drbd policy is very flexible allowing users to setup their drbd processes in as secure a method as possible.
+.PP 
+The following process types are defined for drbd:
+
+.EX
+.B drbd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), drbd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/entropyd_selinux.8 serefpolicy-3.7.19/man/man8/entropyd_selinux.8
--- nsaserefpolicy/man/man8/entropyd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/entropyd_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,79 @@
+.TH  "entropyd_selinux"  "8"  "entropyd" "dwalsh@redhat.com" "entropyd SELinux Policy documentation"
+.SH "NAME"
+entropyd_selinux \- Security Enhanced Linux Policy for the entropyd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux entropyd policy is very flexible allowing users to setup their entropyd processes in as secure a method as possible.
+.PP 
+The following file types are defined for entropyd:
+
+
+.EX
+.PP
+.B entropyd_exec_t 
+.EE
+
+- Set files with the entropyd_exec_t type, if you want to transition an executable to the entropyd_t domain.
+
+
+.EX
+.PP
+.B entropyd_var_run_t 
+.EE
+
+- Set files with the entropyd_var_run_t type, if you want to store the entropyd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux entropyd policy is very flexible allowing users to setup their entropyd processes in as secure a method as possible.
+.PP 
+The following process types are defined for entropyd:
+
+.EX
+.B entropyd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), entropyd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ethereal_selinux.8 serefpolicy-3.7.19/man/man8/ethereal_selinux.8
--- nsaserefpolicy/man/man8/ethereal_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ethereal_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,101 @@
+.TH  "ethereal_selinux"  "8"  "ethereal" "dwalsh@redhat.com" "ethereal SELinux Policy documentation"
+.SH "NAME"
+ethereal_selinux \- Security Enhanced Linux Policy for the ethereal processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ethereal
+(Ethereal packet capture tool)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ethereal policy is very flexible allowing users to setup their ethereal processes in as secure a method as possible.
+.PP 
+The following file types are defined for ethereal:
+
+
+.EX
+.PP
+.B ethereal_exec_t 
+.EE
+
+- Set files with the ethereal_exec_t type, if you want to transition an executable to the ethereal_t domain.
+
+
+.EX
+.PP
+.B ethereal_home_t 
+.EE
+
+- Set files with the ethereal_home_t type, if you want to store ethereal files in the users home directory.
+
+
+.EX
+.PP
+.B ethereal_tmp_t 
+.EE
+
+- Set files with the ethereal_tmp_t type, if you want to store ethereal temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ethereal_tmpfs_t 
+.EE
+
+- Set files with the ethereal_tmpfs_t type, if you want to store ethereal files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ethereal policy is very flexible allowing users to setup their ethereal processes in as secure a method as possible.
+.PP 
+The following process types are defined for ethereal:
+
+.EX
+.B ethereal_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ethereal(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/eventlogd_selinux.8 serefpolicy-3.7.19/man/man8/eventlogd_selinux.8
--- nsaserefpolicy/man/man8/eventlogd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/eventlogd_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,95 @@
+.TH  "eventlogd_selinux"  "8"  "eventlogd" "dwalsh@redhat.com" "eventlogd SELinux Policy documentation"
+.SH "NAME"
+eventlogd_selinux \- Security Enhanced Linux Policy for the eventlogd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux eventlogd policy is very flexible allowing users to setup their eventlogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for eventlogd:
+
+
+.EX
+.PP
+.B eventlogd_exec_t 
+.EE
+
+- Set files with the eventlogd_exec_t type, if you want to transition an executable to the eventlogd_t domain.
+
+
+.EX
+.PP
+.B eventlogd_var_lib_t 
+.EE
+
+- Set files with the eventlogd_var_lib_t type, if you want to store the eventlogd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B eventlogd_var_run_t 
+.EE
+
+- Set files with the eventlogd_var_run_t type, if you want to store the eventlogd files under the /run directory.
+
+
+.EX
+.PP
+.B eventlogd_var_socket_t 
+.EE
+
+- Set files with the eventlogd_var_socket_t type, if you want to treat the files as eventlogd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux eventlogd policy is very flexible allowing users to setup their eventlogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for eventlogd:
+
+.EX
+.B eventlogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), eventlogd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/evtchnd_selinux.8 serefpolicy-3.7.19/man/man8/evtchnd_selinux.8
--- nsaserefpolicy/man/man8/evtchnd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/evtchnd_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,91 @@
+.TH  "evtchnd_selinux"  "8"  "evtchnd" "dwalsh@redhat.com" "evtchnd SELinux Policy documentation"
+.SH "NAME"
+evtchnd_selinux \- Security Enhanced Linux Policy for the evtchnd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux evtchnd policy is very flexible allowing users to setup their evtchnd processes in as secure a method as possible.
+.PP 
+The following file types are defined for evtchnd:
+
+
+.EX
+.PP
+.B evtchnd_exec_t 
+.EE
+
+- Set files with the evtchnd_exec_t type, if you want to transition an executable to the evtchnd_t domain.
+
+
+.EX
+.PP
+.B evtchnd_var_log_t 
+.EE
+
+- Set files with the evtchnd_var_log_t type, if you want to treat the data as evtchnd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B evtchnd_var_run_t 
+.EE
+
+- Set files with the evtchnd_var_run_t type, if you want to store the evtchnd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/evtchnd\.pid, /var/run/evtchnd
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux evtchnd policy is very flexible allowing users to setup their evtchnd processes in as secure a method as possible.
+.PP 
+The following process types are defined for evtchnd:
+
+.EX
+.B evtchnd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), evtchnd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/exim_selinux.8 serefpolicy-3.7.19/man/man8/exim_selinux.8
--- nsaserefpolicy/man/man8/exim_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/exim_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,154 @@
+.TH  "exim_selinux"  "8"  "exim" "dwalsh@redhat.com" "exim SELinux Policy documentation"
+.SH "NAME"
+exim_selinux \- Security Enhanced Linux Policy for the exim processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B exim
+(Exim mail transfer agent)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  exim policy is extremely flexible and has several booleans that allow you to manipulate the policy and run exim with the tightest access possible.
+
+
+.PP
+If you want to allow exim to read unprivileged user files, you must turn on the exim_read_user_files boolean.
+
+.EX
+.B setsebool -P exim_read_user_files 1
+.EE
+
+.PP
+If you want to allow exim to connect to databases (postgres, mysql, you must turn on the exim_can_connect_db boolean.
+
+.EX
+.B setsebool -P exim_can_connect_db 1
+.EE
+
+.PP
+If you want to allow exim to create, read, write, and delete unprivileged user files, you must turn on the exim_manage_user_files boolean.
+
+.EX
+.B setsebool -P exim_manage_user_files 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux exim policy is very flexible allowing users to setup their exim processes in as secure a method as possible.
+.PP 
+The following file types are defined for exim:
+
+
+.EX
+.PP
+.B exim_exec_t 
+.EE
+
+- Set files with the exim_exec_t type, if you want to transition an executable to the exim_t domain.
+
+
+.EX
+.PP
+.B exim_initrc_exec_t 
+.EE
+
+- Set files with the exim_initrc_exec_t type, if you want to transition an executable to the exim_initrc_t domain.
+
+
+.EX
+.PP
+.B exim_keytab_t 
+.EE
+
+- Set files with the exim_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B exim_log_t 
+.EE
+
+- Set files with the exim_log_t type, if you want to treat the data as exim log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B exim_spool_t 
+.EE
+
+- Set files with the exim_spool_t type, if you want to store the exim files under the /var/spool directory.
+
+
+.EX
+.PP
+.B exim_tmp_t 
+.EE
+
+- Set files with the exim_tmp_t type, if you want to store exim temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B exim_var_run_t 
+.EE
+
+- Set files with the exim_var_run_t type, if you want to store the exim files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux exim policy is very flexible allowing users to setup their exim processes in as secure a method as possible.
+.PP 
+The following process types are defined for exim:
+
+.EX
+.B exim_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), exim(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/fail2ban_selinux.8 serefpolicy-3.7.19/man/man8/fail2ban_selinux.8
--- nsaserefpolicy/man/man8/fail2ban_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/fail2ban_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,121 @@
+.TH  "fail2ban_selinux"  "8"  "fail2ban" "dwalsh@redhat.com" "fail2ban SELinux Policy documentation"
+.SH "NAME"
+fail2ban_selinux \- Security Enhanced Linux Policy for the fail2ban processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B fail2ban
+(Update firewall filtering to ban IP addresses with too many password failures)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fail2ban policy is very flexible allowing users to setup their fail2ban processes in as secure a method as possible.
+.PP 
+The following file types are defined for fail2ban:
+
+
+.EX
+.PP
+.B fail2ban_exec_t 
+.EE
+
+- Set files with the fail2ban_exec_t type, if you want to transition an executable to the fail2ban_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/fail2ban-server, /usr/bin/fail2ban
+
+.EX
+.PP
+.B fail2ban_initrc_exec_t 
+.EE
+
+- Set files with the fail2ban_initrc_exec_t type, if you want to transition an executable to the fail2ban_initrc_t domain.
+
+
+.EX
+.PP
+.B fail2ban_log_t 
+.EE
+
+- Set files with the fail2ban_log_t type, if you want to treat the data as fail2ban log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B fail2ban_tmp_t 
+.EE
+
+- Set files with the fail2ban_tmp_t type, if you want to store fail2ban temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B fail2ban_var_lib_t 
+.EE
+
+- Set files with the fail2ban_var_lib_t type, if you want to store the fail2ban files under the /var/lib directory.
+
+
+.EX
+.PP
+.B fail2ban_var_run_t 
+.EE
+
+- Set files with the fail2ban_var_run_t type, if you want to store the fail2ban files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fail2ban policy is very flexible allowing users to setup their fail2ban processes in as secure a method as possible.
+.PP 
+The following process types are defined for fail2ban:
+
+.EX
+.B fail2ban_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fail2ban(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/fcoemon_selinux.8 serefpolicy-3.7.19/man/man8/fcoemon_selinux.8
--- nsaserefpolicy/man/man8/fcoemon_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/fcoemon_selinux.8	2012-03-20 22:37:14.340458516 +0000
@@ -0,0 +1,89 @@
+.TH  "fcoemon_selinux"  "8"  "fcoemon" "dwalsh@redhat.com" "fcoemon SELinux Policy documentation"
+.SH "NAME"
+fcoemon_selinux \- Security Enhanced Linux Policy for the fcoemon processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B fcoemon
+(policy for fcoemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fcoemon policy is very flexible allowing users to setup their fcoemon processes in as secure a method as possible.
+.PP 
+The following file types are defined for fcoemon:
+
+
+.EX
+.PP
+.B fcoemon_exec_t 
+.EE
+
+- Set files with the fcoemon_exec_t type, if you want to transition an executable to the fcoemon_t domain.
+
+
+.EX
+.PP
+.B fcoemon_var_run_t 
+.EE
+
+- Set files with the fcoemon_var_run_t type, if you want to store the fcoemon files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/fcm(/.*)?, /var/run/fcoemon\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fcoemon policy is very flexible allowing users to setup their fcoemon processes in as secure a method as possible.
+.PP 
+The following process types are defined for fcoemon:
+
+.EX
+.B fcoemon_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fcoemon(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/fenced_selinux.8 serefpolicy-3.7.19/man/man8/fenced_selinux.8
--- nsaserefpolicy/man/man8/fenced_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/fenced_selinux.8	2012-03-20 22:37:14.341458492 +0000
@@ -0,0 +1,141 @@
+.TH  "fenced_selinux"  "8"  "fenced" "dwalsh@redhat.com" "fenced SELinux Policy documentation"
+.SH "NAME"
+fenced_selinux \- Security Enhanced Linux Policy for the fenced processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  fenced policy is extremely flexible and has several booleans that allow you to manipulate the policy and run fenced with the tightest access possible.
+
+
+.PP
+If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
+
+.EX
+.B setsebool -P fenced_can_ssh 1
+.EE
+
+.PP
+If you want to allow fenced domain to connect to the network using TCP, you must turn on the fenced_can_network_connect boolean.
+
+.EX
+.B setsebool -P fenced_can_network_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fenced policy is very flexible allowing users to setup their fenced processes in as secure a method as possible.
+.PP 
+The following file types are defined for fenced:
+
+
+.EX
+.PP
+.B fenced_exec_t 
+.EE
+
+- Set files with the fenced_exec_t type, if you want to transition an executable to the fenced_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/fence_node, /usr/sbin/fence_tool, /usr/sbin/fenced
+
+.EX
+.PP
+.B fenced_lock_t 
+.EE
+
+- Set files with the fenced_lock_t type, if you want to treat the files as fenced lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B fenced_tmp_t 
+.EE
+
+- Set files with the fenced_tmp_t type, if you want to store fenced temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B fenced_tmpfs_t 
+.EE
+
+- Set files with the fenced_tmpfs_t type, if you want to store fenced files on a tmpfs file system.
+
+
+.EX
+.PP
+.B fenced_var_log_t 
+.EE
+
+- Set files with the fenced_var_log_t type, if you want to treat the data as fenced var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B fenced_var_run_t 
+.EE
+
+- Set files with the fenced_var_run_t type, if you want to store the fenced files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/cluster/fenced_override, /var/run/cluster/fence_scsi.*, /var/run/fenced\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fenced policy is very flexible allowing users to setup their fenced processes in as secure a method as possible.
+.PP 
+The following process types are defined for fenced:
+
+.EX
+.B fenced_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fenced(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/fetchmail_selinux.8 serefpolicy-3.7.19/man/man8/fetchmail_selinux.8
--- nsaserefpolicy/man/man8/fetchmail_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/fetchmail_selinux.8	2012-03-20 22:37:14.341458492 +0000
@@ -0,0 +1,101 @@
+.TH  "fetchmail_selinux"  "8"  "fetchmail" "dwalsh@redhat.com" "fetchmail SELinux Policy documentation"
+.SH "NAME"
+fetchmail_selinux \- Security Enhanced Linux Policy for the fetchmail processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B fetchmail
+(Remote-mail retrieval and forwarding utility)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fetchmail policy is very flexible allowing users to setup their fetchmail processes in as secure a method as possible.
+.PP 
+The following file types are defined for fetchmail:
+
+
+.EX
+.PP
+.B fetchmail_etc_t 
+.EE
+
+- Set files with the fetchmail_etc_t type, if you want to store fetchmail files in the /etc directories.
+
+
+.EX
+.PP
+.B fetchmail_exec_t 
+.EE
+
+- Set files with the fetchmail_exec_t type, if you want to transition an executable to the fetchmail_t domain.
+
+
+.EX
+.PP
+.B fetchmail_uidl_cache_t 
+.EE
+
+- Set files with the fetchmail_uidl_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B fetchmail_var_run_t 
+.EE
+
+- Set files with the fetchmail_var_run_t type, if you want to store the fetchmail files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fetchmail policy is very flexible allowing users to setup their fetchmail processes in as secure a method as possible.
+.PP 
+The following process types are defined for fetchmail:
+
+.EX
+.B fetchmail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fetchmail(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/fingerd_selinux.8 serefpolicy-3.7.19/man/man8/fingerd_selinux.8
--- nsaserefpolicy/man/man8/fingerd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/fingerd_selinux.8	2012-03-20 22:37:14.341458492 +0000
@@ -0,0 +1,125 @@
+.TH  "fingerd_selinux"  "8"  "fingerd" "dwalsh@redhat.com" "fingerd SELinux Policy documentation"
+.SH "NAME"
+fingerd_selinux \- Security Enhanced Linux Policy for the fingerd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
+.PP 
+The following file types are defined for fingerd:
+
+
+.EX
+.PP
+.B fingerd_etc_t 
+.EE
+
+- Set files with the fingerd_etc_t type, if you want to store fingerd files in the /etc directories.
+
+
+.EX
+.PP
+.B fingerd_exec_t 
+.EE
+
+- Set files with the fingerd_exec_t type, if you want to transition an executable to the fingerd_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/cron\.weekly/(c)?fingerd, /usr/sbin/[cef]fingerd, /usr/sbin/in\.fingerd
+
+.EX
+.PP
+.B fingerd_log_t 
+.EE
+
+- Set files with the fingerd_log_t type, if you want to treat the data as fingerd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B fingerd_var_run_t 
+.EE
+
+- Set files with the fingerd_var_run_t type, if you want to store the fingerd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
+.PP 
+The following port types are defined for fingerd:
+
+.EX
+.TP 5
+.B fingerd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
+.PP 
+The following process types are defined for fingerd:
+
+.EX
+.B fingerd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fingerd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/firewallgui_selinux.8 serefpolicy-3.7.19/man/man8/firewallgui_selinux.8
--- nsaserefpolicy/man/man8/firewallgui_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/firewallgui_selinux.8	2012-03-20 22:37:14.341458492 +0000
@@ -0,0 +1,85 @@
+.TH  "firewallgui_selinux"  "8"  "firewallgui" "dwalsh@redhat.com" "firewallgui SELinux Policy documentation"
+.SH "NAME"
+firewallgui_selinux \- Security Enhanced Linux Policy for the firewallgui processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B firewallgui
+(policy for firewallgui)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux firewallgui policy is very flexible allowing users to setup their firewallgui processes in as secure a method as possible.
+.PP 
+The following file types are defined for firewallgui:
+
+
+.EX
+.PP
+.B firewallgui_exec_t 
+.EE
+
+- Set files with the firewallgui_exec_t type, if you want to transition an executable to the firewallgui_t domain.
+
+
+.EX
+.PP
+.B firewallgui_tmp_t 
+.EE
+
+- Set files with the firewallgui_tmp_t type, if you want to store firewallgui temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux firewallgui policy is very flexible allowing users to setup their firewallgui processes in as secure a method as possible.
+.PP 
+The following process types are defined for firewallgui:
+
+.EX
+.B firewallgui_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), firewallgui(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/firstboot_selinux.8 serefpolicy-3.7.19/man/man8/firstboot_selinux.8
--- nsaserefpolicy/man/man8/firstboot_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/firstboot_selinux.8	2012-03-20 22:37:14.341458492 +0000
@@ -0,0 +1,92 @@
+.TH  "firstboot_selinux"  "8"  "firstboot" "dwalsh@redhat.com" "firstboot SELinux Policy documentation"
+.SH "NAME"
+firstboot_selinux \- Security Enhanced Linux Policy for the firstboot processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B firstboot
+(
+Final system configuration run during the first boot
+after installation of Red Hat/Fedora systems.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux firstboot policy is very flexible allowing users to setup their firstboot processes in as secure a method as possible.
+.PP 
+The following file types are defined for firstboot:
+
+
+.EX
+.PP
+.B firstboot_etc_t 
+.EE
+
+- Set files with the firstboot_etc_t type, if you want to store firstboot files in the /etc directories.
+
+
+.EX
+.PP
+.B firstboot_exec_t 
+.EE
+
+- Set files with the firstboot_exec_t type, if you want to transition an executable to the firstboot_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/firstboot/firstboot\.py, /usr/sbin/firstboot
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux firstboot policy is very flexible allowing users to setup their firstboot processes in as secure a method as possible.
+.PP 
+The following process types are defined for firstboot:
+
+.EX
+.B firstboot_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), firstboot(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/foghorn_selinux.8 serefpolicy-3.7.19/man/man8/foghorn_selinux.8
--- nsaserefpolicy/man/man8/foghorn_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/foghorn_selinux.8	2012-03-20 22:37:14.341458492 +0000
@@ -0,0 +1,95 @@
+.TH  "foghorn_selinux"  "8"  "foghorn" "dwalsh@redhat.com" "foghorn SELinux Policy documentation"
+.SH "NAME"
+foghorn_selinux \- Security Enhanced Linux Policy for the foghorn processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux foghorn policy is very flexible allowing users to setup their foghorn processes in as secure a method as possible.
+.PP 
+The following file types are defined for foghorn:
+
+
+.EX
+.PP
+.B foghorn_exec_t 
+.EE
+
+- Set files with the foghorn_exec_t type, if you want to transition an executable to the foghorn_t domain.
+
+
+.EX
+.PP
+.B foghorn_tmpfs_t 
+.EE
+
+- Set files with the foghorn_tmpfs_t type, if you want to store foghorn files on a tmpfs file system.
+
+
+.EX
+.PP
+.B foghorn_var_log_t 
+.EE
+
+- Set files with the foghorn_var_log_t type, if you want to treat the data as foghorn var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B foghorn_var_run_t 
+.EE
+
+- Set files with the foghorn_var_run_t type, if you want to store the foghorn files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux foghorn policy is very flexible allowing users to setup their foghorn processes in as secure a method as possible.
+.PP 
+The following process types are defined for foghorn:
+
+.EX
+.B foghorn_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), foghorn(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/fprintd_selinux.8 serefpolicy-3.7.19/man/man8/fprintd_selinux.8
--- nsaserefpolicy/man/man8/fprintd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/fprintd_selinux.8	2012-03-20 22:37:14.341458492 +0000
@@ -0,0 +1,85 @@
+.TH  "fprintd_selinux"  "8"  "fprintd" "dwalsh@redhat.com" "fprintd SELinux Policy documentation"
+.SH "NAME"
+fprintd_selinux \- Security Enhanced Linux Policy for the fprintd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B fprintd
+(DBus fingerprint reader service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fprintd policy is very flexible allowing users to setup their fprintd processes in as secure a method as possible.
+.PP 
+The following file types are defined for fprintd:
+
+
+.EX
+.PP
+.B fprintd_exec_t 
+.EE
+
+- Set files with the fprintd_exec_t type, if you want to transition an executable to the fprintd_t domain.
+
+
+.EX
+.PP
+.B fprintd_var_lib_t 
+.EE
+
+- Set files with the fprintd_var_lib_t type, if you want to store the fprintd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fprintd policy is very flexible allowing users to setup their fprintd processes in as secure a method as possible.
+.PP 
+The following process types are defined for fprintd:
+
+.EX
+.B fprintd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fprintd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/freshclam_selinux.8 serefpolicy-3.7.19/man/man8/freshclam_selinux.8
--- nsaserefpolicy/man/man8/freshclam_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/freshclam_selinux.8	2012-03-20 22:37:14.341458492 +0000
@@ -0,0 +1,79 @@
+.TH  "freshclam_selinux"  "8"  "freshclam" "dwalsh@redhat.com" "freshclam SELinux Policy documentation"
+.SH "NAME"
+freshclam_selinux \- Security Enhanced Linux Policy for the freshclam processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux freshclam policy is very flexible allowing users to setup their freshclam processes in as secure a method as possible.
+.PP 
+The following file types are defined for freshclam:
+
+
+.EX
+.PP
+.B freshclam_exec_t 
+.EE
+
+- Set files with the freshclam_exec_t type, if you want to transition an executable to the freshclam_t domain.
+
+
+.EX
+.PP
+.B freshclam_var_log_t 
+.EE
+
+- Set files with the freshclam_var_log_t type, if you want to treat the data as freshclam var log data, usually stored under the /var/log directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux freshclam policy is very flexible allowing users to setup their freshclam processes in as secure a method as possible.
+.PP 
+The following process types are defined for freshclam:
+
+.EX
+.B freshclam_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), freshclam(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/fsadm_selinux.8 serefpolicy-3.7.19/man/man8/fsadm_selinux.8
--- nsaserefpolicy/man/man8/fsadm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/fsadm_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,91 @@
+.TH  "fsadm_selinux"  "8"  "fsadm" "dwalsh@redhat.com" "fsadm SELinux Policy documentation"
+.SH "NAME"
+fsadm_selinux \- Security Enhanced Linux Policy for the fsadm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fsadm policy is very flexible allowing users to setup their fsadm processes in as secure a method as possible.
+.PP 
+The following file types are defined for fsadm:
+
+
+.EX
+.PP
+.B fsadm_exec_t 
+.EE
+
+- Set files with the fsadm_exec_t type, if you want to transition an executable to the fsadm_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/partx, /sbin/blockdev, /sbin/mkfs.*, /sbin/dumpe2fs, /sbin/mkdosfs, /sbin/e4fsck, /sbin/blkid, /usr/bin/partition_uuid, /sbin/raidautorun, /sbin/mke2fs, /sbin/mkreiserfs, /sbin/sfdisk, /sbin/tune2fs, /sbin/make_reiser4, /sbin/partprobe, /sbin/dump, /sbin/swapon.*, /usr/bin/scsi_unique_id, /sbin/findfs, /sbin/install-mbr, /usr/sbin/smartctl, /usr/bin/syslinux, /usr/sbin/clubufflush, /sbin/losetup.*, /sbin/resize.*fs, /sbin/parted, /sbin/dosfsck, /sbin/e2label, /sbin/mkraid, /sbin/scsi_info, /sbin/e2fsck, /sbin/fsck.*, /sbin/jfs_.*, /sbin/raidstart, /sbin/lsraid, /sbin/reiserfs(ck|tune), /sbin/fdisk, /usr/bin/raw, /sbin/mke4fs, /sbin/cfdisk, /sbin/hdparm
+
+.EX
+.PP
+.B fsadm_log_t 
+.EE
+
+- Set files with the fsadm_log_t type, if you want to treat the data as fsadm log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B fsadm_tmp_t 
+.EE
+
+- Set files with the fsadm_tmp_t type, if you want to store fsadm temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fsadm policy is very flexible allowing users to setup their fsadm processes in as secure a method as possible.
+.PP 
+The following process types are defined for fsadm:
+
+.EX
+.B fsadm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fsadm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/fsdaemon_selinux.8 serefpolicy-3.7.19/man/man8/fsdaemon_selinux.8
--- nsaserefpolicy/man/man8/fsdaemon_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/fsdaemon_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,95 @@
+.TH  "fsdaemon_selinux"  "8"  "fsdaemon" "dwalsh@redhat.com" "fsdaemon SELinux Policy documentation"
+.SH "NAME"
+fsdaemon_selinux \- Security Enhanced Linux Policy for the fsdaemon processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fsdaemon policy is very flexible allowing users to setup their fsdaemon processes in as secure a method as possible.
+.PP 
+The following file types are defined for fsdaemon:
+
+
+.EX
+.PP
+.B fsdaemon_exec_t 
+.EE
+
+- Set files with the fsdaemon_exec_t type, if you want to transition an executable to the fsdaemon_t domain.
+
+
+.EX
+.PP
+.B fsdaemon_initrc_exec_t 
+.EE
+
+- Set files with the fsdaemon_initrc_exec_t type, if you want to transition an executable to the fsdaemon_initrc_t domain.
+
+
+.EX
+.PP
+.B fsdaemon_tmp_t 
+.EE
+
+- Set files with the fsdaemon_tmp_t type, if you want to store fsdaemon temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B fsdaemon_var_run_t 
+.EE
+
+- Set files with the fsdaemon_var_run_t type, if you want to store the fsdaemon files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fsdaemon policy is very flexible allowing users to setup their fsdaemon processes in as secure a method as possible.
+.PP 
+The following process types are defined for fsdaemon:
+
+.EX
+.B fsdaemon_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fsdaemon(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ftpdctl_selinux.8 serefpolicy-3.7.19/man/man8/ftpdctl_selinux.8
--- nsaserefpolicy/man/man8/ftpdctl_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ftpdctl_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,79 @@
+.TH  "ftpdctl_selinux"  "8"  "ftpdctl" "dwalsh@redhat.com" "ftpdctl SELinux Policy documentation"
+.SH "NAME"
+ftpdctl_selinux \- Security Enhanced Linux Policy for the ftpdctl processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ftpdctl policy is very flexible allowing users to setup their ftpdctl processes in as secure a method as possible.
+.PP 
+The following file types are defined for ftpdctl:
+
+
+.EX
+.PP
+.B ftpdctl_exec_t 
+.EE
+
+- Set files with the ftpdctl_exec_t type, if you want to transition an executable to the ftpdctl_t domain.
+
+
+.EX
+.PP
+.B ftpdctl_tmp_t 
+.EE
+
+- Set files with the ftpdctl_tmp_t type, if you want to store ftpdctl temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ftpdctl policy is very flexible allowing users to setup their ftpdctl processes in as secure a method as possible.
+.PP 
+The following process types are defined for ftpdctl:
+
+.EX
+.B ftpdctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ftpdctl(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ftpd_selinux.8 serefpolicy-3.7.19/man/man8/ftpd_selinux.8
--- nsaserefpolicy/man/man8/ftpd_selinux.8	2011-03-17 07:21:23.214851002 +0000
+++ serefpolicy-3.7.19/man/man8/ftpd_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -1,65 +1,271 @@
-.TH  "ftpd_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "ftpd SELinux policy documentation"
+.TH  "ftpd_selinux"  "8"  "ftpd" "dwalsh@redhat.com" "ftpd SELinux Policy documentation"
 .SH "NAME"
-.PP
-ftpd_selinux \- Security-Enhanced Linux policy for ftp daemons.
+ftpd_selinux \- Security Enhanced Linux Policy for the ftpd processes
 .SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  ftpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ftpd with the tightest access possible.
+
+
 .PP
-Security-Enhanced Linux provides security for ftp daemons via flexible mandatory access control.
-.SH FILE_CONTEXTS
+If you want to allow ftp to read and write files in the user home directorie, you must turn on the ftp_home_dir boolean.
+
+.EX
+.B setsebool -P ftp_home_dir 1
+.EE
+
 .PP
-SELinux requires files to have a file type. File types may be specified with semanage and are restored with restorecon.  Policy governs the access that daemons have to files.
-.TP
-Allow ftp servers to read the /var/ftp directory by adding the public_content_t file type to the directory and by restoring the file type.
+If you want to allow ftp servers to login to local users and read/write all files on the system, governed by DAC, you must turn on the allow_ftpd_full_access boolean.
+
+.EX
+.B setsebool -P allow_ftpd_full_access 1
+.EE
+
 .PP
-.B
-semanage fcontext -a -t public_content_t "/var/ftp(/.*)?"
-.TP
-.B
-restorecon -R -v /var/ftp
-.TP
-Allow ftp servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_ftpd_anon_write boolean to be set.
+If you want to allow ftp servers to use connect to mysql databas, you must turn on the ftpd_connect_db boolean.
+
+.EX
+.B setsebool -P ftpd_connect_db 1
+.EE
+
 .PP
-.B
-semanage fcontext -a -t public_content_rw_t "/var/ftp/incoming(/.*)?"
-.TP
-.B
-restorecon -R -v /var/ftp/incoming
+If you want to allow ftp servers to use cifs used for public file transfer services, you must turn on the allow_ftpd_use_cifs boolean.
+
+.EX
+.B setsebool -P allow_ftpd_use_cifs 1
+.EE
 
-.SH BOOLEANS
 .PP
-SELinux policy is based on least privilege required and may also be customizable by setting a boolean with setsebool.
-.TP
-Allow ftp servers to read and write files with the public_content_rw_t file type.
+If you want to allow ftp servers to use nfs used for public file transfer services, you must turn on the allow_ftpd_use_nfs boolean.
+
+.EX
+.B setsebool -P allow_ftpd_use_nfs 1
+.EE
+
 .PP
-.B
-setsebool -P allow_ftpd_anon_write on
+If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+
+.EX
+.B setsebool -P httpd_enable_ftp_server 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
 .TP
-Allow ftp servers to read or write files in the user home directories.
+Allow ftpd servers to read the /var/ftpd directory by adding the public_content_t file type to the directory and by restoring the file type.
 .PP
 .B
-setsebool -P ftp_home_dir on
+semanage fcontext -a -t public_content_t "/var/ftpd(/.*)?"
+.br
+.B restorecon -F -R -v /var/ftpd
+.pp
 .TP
-Allow ftp servers to read or write all files on the system.
+Allow ftpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_ftpd_anon_write boolean to be set.
 .PP
 .B
-setsebool -P allow_ftpd_full_access on
-.TP
-Allow ftp servers to use cifs for public file transfer services.
+semanage fcontext -a -t public_content_rw_t "/var/ftpd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/ftpd/incoming
+
+
 .PP
-.B
-setsebool -P allow_ftpd_use_cifs on
-.TP
-Allow ftp servers to use nfs for public file transfer services.
+If you want to allow tftp to modify public files used for public file transfer services., you must turn on the tftp_anon_write boolean.
+
+.EX
+.B setsebool -P tftp_anon_write 1
+.EE
+
 .PP
-.B
-setsebool -P allow_ftpd_use_nfs on
-.TP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
-.SH AUTHOR	
+If you want to allow ftp servers to upload files,  used for public file transfer services. Directories must be labeled public_content_rw_t., you must turn on the allow_ftpd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_ftpd_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
 .PP
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+Policy governs the access confined processes have to these files. 
+SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ftpd:
 
-.SH "SEE ALSO"
+
+.EX
 .PP
+.B ftpd_etc_t 
+.EE
+
+- Set files with the ftpd_etc_t type, if you want to store ftpd files in the /etc directories.
+
+
+.EX
+.PP
+.B ftpd_exec_t 
+.EE
+
+- Set files with the ftpd_exec_t type, if you want to transition an executable to the ftpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/vsftpd, /usr/sbin/ftpwho, /etc/cron\.monthly/proftpd, /usr/sbin/muddleftpd, /usr/sbin/in\.ftpd, /usr/sbin/proftpd, /usr/kerberos/sbin/ftpd
+
+.EX
+.PP
+.B ftpd_initrc_exec_t 
+.EE
+
+- Set files with the ftpd_initrc_exec_t type, if you want to transition an executable to the ftpd_initrc_t domain.
 
-selinux(8), ftpd(8), setsebool(8), semanage(8), restorecon(8)
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/proftpd, /etc/rc\.d/init\.d/vsftpd
+
+.EX
+.PP
+.B ftpd_keytab_t 
+.EE
+
+- Set files with the ftpd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B ftpd_lock_t 
+.EE
+
+- Set files with the ftpd_lock_t type, if you want to treat the files as ftpd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B ftpd_tmp_t 
+.EE
+
+- Set files with the ftpd_tmp_t type, if you want to store ftpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ftpd_tmpfs_t 
+.EE
+
+- Set files with the ftpd_tmpfs_t type, if you want to store ftpd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B ftpd_var_run_t 
+.EE
+
+- Set files with the ftpd_var_run_t type, if you want to store the ftpd files under the /run directory.
+
+
+.EX
+.PP
+.B ftpdctl_exec_t 
+.EE
+
+- Set files with the ftpdctl_exec_t type, if you want to transition an executable to the ftpdctl_t domain.
+
+
+.EX
+.PP
+.B ftpdctl_tmp_t 
+.EE
+
+- Set files with the ftpdctl_tmp_t type, if you want to store ftpdctl temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for ftpd:
+
+.EX
+.TP 5
+.B ftp_data_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B ftp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ftpd:
+
+.EX
+.B ftpd_t, ftpdctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ftpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/games_selinux.8 serefpolicy-3.7.19/man/man8/games_selinux.8
--- nsaserefpolicy/man/man8/games_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/games_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,117 @@
+.TH  "games_selinux"  "8"  "games" "dwalsh@redhat.com" "games SELinux Policy documentation"
+.SH "NAME"
+games_selinux \- Security Enhanced Linux Policy for the games processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B games
+(Games)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux games policy is very flexible allowing users to setup their games processes in as secure a method as possible.
+.PP 
+The following file types are defined for games:
+
+
+.EX
+.PP
+.B games_data_t 
+.EE
+
+- Set files with the games_data_t type, if you want to treat the files as games content.
+
+.br
+.TP 5
+Paths: 
+/var/games(/.*)?, /var/lib/games(/.*)?
+
+.EX
+.PP
+.B games_exec_t 
+.EE
+
+- Set files with the games_exec_t type, if you want to transition an executable to the games_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/sol, /usr/bin/blackjack, /usr/bin/micq, /usr/bin/kshisen, /usr/bin/klickety, /usr/bin/lskat, /usr/bin/atlantik, /usr/bin/ksame, /usr/bin/kgoldrunner, /usr/bin/lskatproc, /usr/bin/gataxx, /usr/bin/katomic, /usr/bin/Maelstrom, /usr/bin/ksmiletris, /usr/bin/gnect, /usr/bin/gnotravex, /usr/bin/gnomine, /usr/bin/ksirtet, /usr/bin/kbattleship, /usr/bin/ktuberling, /usr/bin/klines, /usr/bin/kenolaba, /usr/bin/kmahjongg, /usr/bin/ksnake, /usr/bin/kbackgammon, /usr/games/.*, /usr/bin/civserver.*, /usr/bin/civclient.*, /usr/bin/kwin4, /usr/bin/ktron, /usr/bin/gnibbles, /usr/bin/mahjongg, /usr/bin/kblackbox, /usr/bin/kjumpingcube, /usr/bin/gnotski, /usr/bin/same-gnome, /usr/bin/kasteroids, /usr/bin/kolf, /usr/bin/konquest, /usr/bin/kreversi, /usr/bin/ksokoban, /usr/lib/games(/.*)?, /usr/bin/glines, /usr/bin/gnobots2, /usr/bin/kpoker, /usr/bin/kfouleggs, /usr/bin/kspaceduel, /usr/bin/kpat, /usr/bin/kbounce, /usr/bin/iagno, /usr/bin/gtali, /usr/bin/kwin4proc, /usr/bin/kmines, /usr/bin/gnome-stones
+
+.EX
+.PP
+.B games_srv_var_run_t 
+.EE
+
+- Set files with the games_srv_var_run_t type, if you want to store the games srv files under the /run directory.
+
+
+.EX
+.PP
+.B games_tmp_t 
+.EE
+
+- Set files with the games_tmp_t type, if you want to store games temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B games_tmpfs_t 
+.EE
+
+- Set files with the games_tmpfs_t type, if you want to store games files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux games policy is very flexible allowing users to setup their games processes in as secure a method as possible.
+.PP 
+The following process types are defined for games:
+
+.EX
+.B games_t, games_srv_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), games(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gconfdefaultsm_selinux.8 serefpolicy-3.7.19/man/man8/gconfdefaultsm_selinux.8
--- nsaserefpolicy/man/man8/gconfdefaultsm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gconfdefaultsm_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,71 @@
+.TH  "gconfdefaultsm_selinux"  "8"  "gconfdefaultsm" "dwalsh@redhat.com" "gconfdefaultsm SELinux Policy documentation"
+.SH "NAME"
+gconfdefaultsm_selinux \- Security Enhanced Linux Policy for the gconfdefaultsm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gconfdefaultsm policy is very flexible allowing users to setup their gconfdefaultsm processes in as secure a method as possible.
+.PP 
+The following file types are defined for gconfdefaultsm:
+
+
+.EX
+.PP
+.B gconfdefaultsm_exec_t 
+.EE
+
+- Set files with the gconfdefaultsm_exec_t type, if you want to transition an executable to the gconfdefaultsm_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gconfdefaultsm policy is very flexible allowing users to setup their gconfdefaultsm processes in as secure a method as possible.
+.PP 
+The following process types are defined for gconfdefaultsm:
+
+.EX
+.B gconfdefaultsm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gconfdefaultsm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gconfd_selinux.8 serefpolicy-3.7.19/man/man8/gconfd_selinux.8
--- nsaserefpolicy/man/man8/gconfd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gconfd_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,107 @@
+.TH  "gconfd_selinux"  "8"  "gconfd" "dwalsh@redhat.com" "gconfd SELinux Policy documentation"
+.SH "NAME"
+gconfd_selinux \- Security Enhanced Linux Policy for the gconfd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gconfd policy is very flexible allowing users to setup their gconfd processes in as secure a method as possible.
+.PP 
+The following file types are defined for gconfd:
+
+
+.EX
+.PP
+.B gconf_etc_t 
+.EE
+
+- Set files with the gconf_etc_t type, if you want to store gconf files in the /etc directories.
+
+
+.EX
+.PP
+.B gconf_home_t 
+.EE
+
+- Set files with the gconf_home_t type, if you want to store gconf files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.gconf(d)?(/.*)?, /root/\.local.*
+
+.EX
+.PP
+.B gconf_tmp_t 
+.EE
+
+- Set files with the gconf_tmp_t type, if you want to store gconf temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B gconfd_exec_t 
+.EE
+
+- Set files with the gconfd_exec_t type, if you want to transition an executable to the gconfd_t domain.
+
+
+.EX
+.PP
+.B gconfdefaultsm_exec_t 
+.EE
+
+- Set files with the gconfdefaultsm_exec_t type, if you want to transition an executable to the gconfdefaultsm_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gconfd policy is very flexible allowing users to setup their gconfd processes in as secure a method as possible.
+.PP 
+The following process types are defined for gconfd:
+
+.EX
+.B gconfdefaultsm_t, gconfd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gconfd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/getty_selinux.8 serefpolicy-3.7.19/man/man8/getty_selinux.8
--- nsaserefpolicy/man/man8/getty_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/getty_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,125 @@
+.TH  "getty_selinux"  "8"  "getty" "dwalsh@redhat.com" "getty SELinux Policy documentation"
+.SH "NAME"
+getty_selinux \- Security Enhanced Linux Policy for the getty processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B getty
+(Policy for getty)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux getty policy is very flexible allowing users to setup their getty processes in as secure a method as possible.
+.PP 
+The following file types are defined for getty:
+
+
+.EX
+.PP
+.B getty_etc_t 
+.EE
+
+- Set files with the getty_etc_t type, if you want to store getty files in the /etc directories.
+
+
+.EX
+.PP
+.B getty_exec_t 
+.EE
+
+- Set files with the getty_exec_t type, if you want to transition an executable to the getty_t domain.
+
+
+.EX
+.PP
+.B getty_lock_t 
+.EE
+
+- Set files with the getty_lock_t type, if you want to treat the files as getty lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B getty_log_t 
+.EE
+
+- Set files with the getty_log_t type, if you want to treat the data as getty log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/mgetty\.log.*, /var/log/vgetty\.log\..*
+
+.EX
+.PP
+.B getty_tmp_t 
+.EE
+
+- Set files with the getty_tmp_t type, if you want to store getty temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B getty_var_run_t 
+.EE
+
+- Set files with the getty_var_run_t type, if you want to store the getty files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/voice(/.*)?, /var/spool/fax(/.*)?, /var/run/mgetty\.pid.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux getty policy is very flexible allowing users to setup their getty processes in as secure a method as possible.
+.PP 
+The following process types are defined for getty:
+
+.EX
+.B getty_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), getty(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gfs_selinux.8 serefpolicy-3.7.19/man/man8/gfs_selinux.8
--- nsaserefpolicy/man/man8/gfs_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gfs_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,95 @@
+.TH  "gfs_selinux"  "8"  "gfs" "dwalsh@redhat.com" "gfs SELinux Policy documentation"
+.SH "NAME"
+gfs_selinux \- Security Enhanced Linux Policy for the gfs processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gfs policy is very flexible allowing users to setup their gfs processes in as secure a method as possible.
+.PP 
+The following file types are defined for gfs:
+
+
+.EX
+.PP
+.B gfs_controld_exec_t 
+.EE
+
+- Set files with the gfs_controld_exec_t type, if you want to transition an executable to the gfs_controld_t domain.
+
+
+.EX
+.PP
+.B gfs_controld_tmpfs_t 
+.EE
+
+- Set files with the gfs_controld_tmpfs_t type, if you want to store gfs controld files on a tmpfs file system.
+
+
+.EX
+.PP
+.B gfs_controld_var_log_t 
+.EE
+
+- Set files with the gfs_controld_var_log_t type, if you want to treat the data as gfs controld var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B gfs_controld_var_run_t 
+.EE
+
+- Set files with the gfs_controld_var_run_t type, if you want to store the gfs controld files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gfs policy is very flexible allowing users to setup their gfs processes in as secure a method as possible.
+.PP 
+The following process types are defined for gfs:
+
+.EX
+.B gfs_controld_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gfs(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gitosis_selinux.8 serefpolicy-3.7.19/man/man8/gitosis_selinux.8
--- nsaserefpolicy/man/man8/gitosis_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gitosis_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,108 @@
+.TH  "gitosis_selinux"  "8"  "gitosis" "dwalsh@redhat.com" "gitosis SELinux Policy documentation"
+.SH "NAME"
+gitosis_selinux \- Security Enhanced Linux Policy for the gitosis processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gitosis
+(Tools for managing and hosting git repositories)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  gitosis policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gitosis with the tightest access possible.
+
+
+.PP
+If you want to allow cgit to access gitosis files, you must turn on the git_cgit_read_gitosis_content boolean.
+
+.EX
+.B setsebool -P git_cgit_read_gitosis_content 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gitosis policy is very flexible allowing users to setup their gitosis processes in as secure a method as possible.
+.PP 
+The following file types are defined for gitosis:
+
+
+.EX
+.PP
+.B gitosis_exec_t 
+.EE
+
+- Set files with the gitosis_exec_t type, if you want to transition an executable to the gitosis_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/gitosis-serve, /usr/bin/gl-auth-command
+
+.EX
+.PP
+.B gitosis_var_lib_t 
+.EE
+
+- Set files with the gitosis_var_lib_t type, if you want to store the gitosis files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/gitolite(/.*)?, /var/lib/gitosis(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gitosis policy is very flexible allowing users to setup their gitosis processes in as secure a method as possible.
+.PP 
+The following process types are defined for gitosis:
+
+.EX
+.B gitosis_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gitosis(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/git_shell_selinux.8 serefpolicy-3.7.19/man/man8/git_shell_selinux.8
--- nsaserefpolicy/man/man8/git_shell_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/git_shell_selinux.8	2012-04-24 11:06:45.875312401 +0000
@@ -0,0 +1,183 @@
+.TH  "git_shell_selinux"  "8"  "git_shell" "mgrepl@redhat.com" "git_shell SELinux Policy documentation"
+.SH "NAME"
+git_shell_u \- \fBgit_shell user role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBgit_shell_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBgit_shell_r\fP.  The
+default role has a default type, \fBgit_shell_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B git_shell_u:git_shell_r:git_shell_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the git_shell_u user, you would execute:
+
+.B semanage login -m -s git_shell_u __default__
+
+
+.SH USER DESCRIPTION
+
+The SELinux user git_shell_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux type git_shell_t is not allowed to execute sudo. 
+
+.SH X WINDOWS LOGIN
+
+The SELinux user git_shell_u is not able to X Windows login.
+
+.SH TERMINAL LOGIN
+
+The SELinux user git_shell_u is not able to terminal login.
+
+.SH NETWORK
+
+.TP
+The SELinux user git_shell_u is able to connect to the following tcp ports.
+
+.B dns_port_t: 53
+
+.B ocsp_port_t: 9080
+
+.B kerberos_port_t: 88,750,4444
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  git_shell_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run git_shell_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to the local mysql server, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow user music sharing, you must turn on the user_share_music boolean.
+
+.EX
+.B setsebool -P user_share_music 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow users to read system messages, you must turn on the user_dmesg boolean.
+
+.EX
+.B setsebool -P user_dmesg 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user git_shell_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when git_shell_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny git_shell_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow git_shell_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user git_shell_t can execute without transitioning:
+
+.B sesearch -A -s git_shell_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow git_shell_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user git_shell_t can execute and transition:
+
+.B $ sesearch -A -s git_shell_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gnomeclock_selinux.8 serefpolicy-3.7.19/man/man8/gnomeclock_selinux.8
--- nsaserefpolicy/man/man8/gnomeclock_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gnomeclock_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,77 @@
+.TH  "gnomeclock_selinux"  "8"  "gnomeclock" "dwalsh@redhat.com" "gnomeclock SELinux Policy documentation"
+.SH "NAME"
+gnomeclock_selinux \- Security Enhanced Linux Policy for the gnomeclock processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gnomeclock
+(Gnome clock handler for setting the time)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gnomeclock policy is very flexible allowing users to setup their gnomeclock processes in as secure a method as possible.
+.PP 
+The following file types are defined for gnomeclock:
+
+
+.EX
+.PP
+.B gnomeclock_exec_t 
+.EE
+
+- Set files with the gnomeclock_exec_t type, if you want to transition an executable to the gnomeclock_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gnomeclock policy is very flexible allowing users to setup their gnomeclock processes in as secure a method as possible.
+.PP 
+The following process types are defined for gnomeclock:
+
+.EX
+.B gnomeclock_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gnomeclock(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gnomesystemmm_selinux.8 serefpolicy-3.7.19/man/man8/gnomesystemmm_selinux.8
--- nsaserefpolicy/man/man8/gnomesystemmm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gnomesystemmm_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,71 @@
+.TH  "gnomesystemmm_selinux"  "8"  "gnomesystemmm" "dwalsh@redhat.com" "gnomesystemmm SELinux Policy documentation"
+.SH "NAME"
+gnomesystemmm_selinux \- Security Enhanced Linux Policy for the gnomesystemmm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gnomesystemmm policy is very flexible allowing users to setup their gnomesystemmm processes in as secure a method as possible.
+.PP 
+The following file types are defined for gnomesystemmm:
+
+
+.EX
+.PP
+.B gnomesystemmm_exec_t 
+.EE
+
+- Set files with the gnomesystemmm_exec_t type, if you want to transition an executable to the gnomesystemmm_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gnomesystemmm policy is very flexible allowing users to setup their gnomesystemmm processes in as secure a method as possible.
+.PP 
+The following process types are defined for gnomesystemmm:
+
+.EX
+.B gnomesystemmm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gnomesystemmm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gpg_selinux.8 serefpolicy-3.7.19/man/man8/gpg_selinux.8
--- nsaserefpolicy/man/man8/gpg_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gpg_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,177 @@
+.TH  "gpg_selinux"  "8"  "gpg" "dwalsh@redhat.com" "gpg SELinux Policy documentation"
+.SH "NAME"
+gpg_selinux \- Security Enhanced Linux Policy for the gpg processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gpg
+(Policy for GNU Privacy Guard and related programs)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  gpg policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gpg with the tightest access possible.
+
+
+.PP
+If you want to allow usage of the gpg-agent --write-env-file option. This also allows gpg-agent to manage user files, you must turn on the gpg_agent_env_file boolean.
+
+.EX
+.B setsebool -P gpg_agent_env_file 1
+.EE
+
+.PP
+If you want to allow httpd to run gpg in gpg-web domai, you must turn on the httpd_use_gpg boolean.
+
+.EX
+.B setsebool -P httpd_use_gpg 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow gpg servers to read the /var/gpg directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/gpg(/.*)?"
+.br
+.B restorecon -F -R -v /var/gpg
+.pp
+.TP
+Allow gpg servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_gpg_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/gpg/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/gpg/incoming
+
+
+.PP
+If you want to allow gpg web domain to modify public files used for public file transfer services., you must turn on the gpg_web_anon_write boolean.
+
+.EX
+.B setsebool -P gpg_web_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gpg policy is very flexible allowing users to setup their gpg processes in as secure a method as possible.
+.PP 
+The following file types are defined for gpg:
+
+
+.EX
+.PP
+.B gpg_agent_exec_t 
+.EE
+
+- Set files with the gpg_agent_exec_t type, if you want to transition an executable to the gpg_agent_t domain.
+
+
+.EX
+.PP
+.B gpg_agent_tmp_t 
+.EE
+
+- Set files with the gpg_agent_tmp_t type, if you want to store gpg agent temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B gpg_exec_t 
+.EE
+
+- Set files with the gpg_exec_t type, if you want to transition an executable to the gpg_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/gnupg/.*, /usr/bin/gpg(2)?, /usr/bin/kgpg
+
+.EX
+.PP
+.B gpg_helper_exec_t 
+.EE
+
+- Set files with the gpg_helper_exec_t type, if you want to transition an executable to the gpg_helper_t domain.
+
+
+.EX
+.PP
+.B gpg_pinentry_tmp_t 
+.EE
+
+- Set files with the gpg_pinentry_tmp_t type, if you want to store gpg pinentry temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B gpg_pinentry_tmpfs_t 
+.EE
+
+- Set files with the gpg_pinentry_tmpfs_t type, if you want to store gpg pinentry files on a tmpfs file system.
+
+
+.EX
+.PP
+.B gpg_secret_t 
+.EE
+
+- Set files with the gpg_secret_t type, if you want to treat the files as gpg se secret data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gpg policy is very flexible allowing users to setup their gpg processes in as secure a method as possible.
+.PP 
+The following process types are defined for gpg:
+
+.EX
+.B gpg_t, gpg_pinentry_t, gpg_helper_t, gpg_web_t, gpg_agent_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gpg(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gpm_selinux.8 serefpolicy-3.7.19/man/man8/gpm_selinux.8
--- nsaserefpolicy/man/man8/gpm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gpm_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,113 @@
+.TH  "gpm_selinux"  "8"  "gpm" "dwalsh@redhat.com" "gpm SELinux Policy documentation"
+.SH "NAME"
+gpm_selinux \- Security Enhanced Linux Policy for the gpm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gpm
+(General Purpose Mouse driver)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gpm policy is very flexible allowing users to setup their gpm processes in as secure a method as possible.
+.PP 
+The following file types are defined for gpm:
+
+
+.EX
+.PP
+.B gpm_conf_t 
+.EE
+
+- Set files with the gpm_conf_t type, if you want to treat the files as gpm configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B gpm_exec_t 
+.EE
+
+- Set files with the gpm_exec_t type, if you want to transition an executable to the gpm_t domain.
+
+
+.EX
+.PP
+.B gpm_tmp_t 
+.EE
+
+- Set files with the gpm_tmp_t type, if you want to store gpm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B gpm_var_run_t 
+.EE
+
+- Set files with the gpm_var_run_t type, if you want to store the gpm files under the /run directory.
+
+
+.EX
+.PP
+.B gpmctl_t 
+.EE
+
+- Set files with the gpmctl_t type, if you want to treat the files as gpmctl data.
+
+.br
+.TP 5
+Paths: 
+/dev/gpmctl, /dev/gpmdata
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gpm policy is very flexible allowing users to setup their gpm processes in as secure a method as possible.
+.PP 
+The following process types are defined for gpm:
+
+.EX
+.B gpm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gpm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gpsd_selinux.8 serefpolicy-3.7.19/man/man8/gpsd_selinux.8
--- nsaserefpolicy/man/man8/gpsd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gpsd_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,131 @@
+.TH  "gpsd_selinux"  "8"  "gpsd" "dwalsh@redhat.com" "gpsd SELinux Policy documentation"
+.SH "NAME"
+gpsd_selinux \- Security Enhanced Linux Policy for the gpsd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gpsd
+(gpsd monitor daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for gpsd:
+
+
+.EX
+.PP
+.B gpsd_exec_t 
+.EE
+
+- Set files with the gpsd_exec_t type, if you want to transition an executable to the gpsd_t domain.
+
+
+.EX
+.PP
+.B gpsd_initrc_exec_t 
+.EE
+
+- Set files with the gpsd_initrc_exec_t type, if you want to transition an executable to the gpsd_initrc_t domain.
+
+
+.EX
+.PP
+.B gpsd_tmpfs_t 
+.EE
+
+- Set files with the gpsd_tmpfs_t type, if you want to store gpsd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B gpsd_var_run_t 
+.EE
+
+- Set files with the gpsd_var_run_t type, if you want to store the gpsd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/gpsd\.sock, /var/run/gpsd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
+.PP 
+The following port types are defined for gpsd:
+
+.EX
+.TP 5
+.B gpsd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for gpsd:
+
+.EX
+.B gpsd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gpsd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/greylist_selinux.8 serefpolicy-3.7.19/man/man8/greylist_selinux.8
--- nsaserefpolicy/man/man8/greylist_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/greylist_selinux.8	2012-03-20 22:37:14.342458468 +0000
@@ -0,0 +1,83 @@
+.TH  "greylist_selinux"  "8"  "greylist" "dwalsh@redhat.com" "greylist SELinux Policy documentation"
+.SH "NAME"
+greylist_selinux \- Security Enhanced Linux Policy for the greylist processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux greylist policy is very flexible allowing users to setup their greylist processes in as secure a method as possible.
+.PP 
+The following file types are defined for greylist:
+
+
+.EX
+.PP
+.B greylist_milter_data_t 
+.EE
+
+- Set files with the greylist_milter_data_t type, if you want to treat the files as greylist milter content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/milter-greylist(/.*)?, /var/run/milter-greylist\.pid, /var/run/milter-greylist(/.*)?
+
+.EX
+.PP
+.B greylist_milter_exec_t 
+.EE
+
+- Set files with the greylist_milter_exec_t type, if you want to transition an executable to the greylist_milter_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux greylist policy is very flexible allowing users to setup their greylist processes in as secure a method as possible.
+.PP 
+The following process types are defined for greylist:
+
+.EX
+.B greylist_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), greylist(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/groupadd_selinux.8 serefpolicy-3.7.19/man/man8/groupadd_selinux.8
--- nsaserefpolicy/man/man8/groupadd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/groupadd_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,75 @@
+.TH  "groupadd_selinux"  "8"  "groupadd" "dwalsh@redhat.com" "groupadd SELinux Policy documentation"
+.SH "NAME"
+groupadd_selinux \- Security Enhanced Linux Policy for the groupadd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux groupadd policy is very flexible allowing users to setup their groupadd processes in as secure a method as possible.
+.PP 
+The following file types are defined for groupadd:
+
+
+.EX
+.PP
+.B groupadd_exec_t 
+.EE
+
+- Set files with the groupadd_exec_t type, if you want to transition an executable to the groupadd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/gpasswd, /usr/bin/gpasswd, /usr/sbin/groupdel, /usr/sbin/groupadd, /usr/sbin/groupmod
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux groupadd policy is very flexible allowing users to setup their groupadd processes in as secure a method as possible.
+.PP 
+The following process types are defined for groupadd:
+
+.EX
+.B groupadd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), groupadd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/groupd_selinux.8 serefpolicy-3.7.19/man/man8/groupd_selinux.8
--- nsaserefpolicy/man/man8/groupd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/groupd_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,95 @@
+.TH  "groupd_selinux"  "8"  "groupd" "dwalsh@redhat.com" "groupd SELinux Policy documentation"
+.SH "NAME"
+groupd_selinux \- Security Enhanced Linux Policy for the groupd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux groupd policy is very flexible allowing users to setup their groupd processes in as secure a method as possible.
+.PP 
+The following file types are defined for groupd:
+
+
+.EX
+.PP
+.B groupd_exec_t 
+.EE
+
+- Set files with the groupd_exec_t type, if you want to transition an executable to the groupd_t domain.
+
+
+.EX
+.PP
+.B groupd_tmpfs_t 
+.EE
+
+- Set files with the groupd_tmpfs_t type, if you want to store groupd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B groupd_var_log_t 
+.EE
+
+- Set files with the groupd_var_log_t type, if you want to treat the data as groupd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B groupd_var_run_t 
+.EE
+
+- Set files with the groupd_var_run_t type, if you want to store the groupd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux groupd policy is very flexible allowing users to setup their groupd processes in as secure a method as possible.
+.PP 
+The following process types are defined for groupd:
+
+.EX
+.B groupadd_t, groupd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), groupd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/gssd_selinux.8 serefpolicy-3.7.19/man/man8/gssd_selinux.8
--- nsaserefpolicy/man/man8/gssd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/gssd_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,106 @@
+.TH  "gssd_selinux"  "8"  "gssd" "dwalsh@redhat.com" "gssd SELinux Policy documentation"
+.SH "NAME"
+gssd_selinux \- Security Enhanced Linux Policy for the gssd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  gssd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gssd with the tightest access possible.
+
+
+.PP
+If you want to allow gssd to read temp directory.  For access to kerberos tgt, you must turn on the allow_gssd_read_tmp boolean.
+
+.EX
+.B setsebool -P allow_gssd_read_tmp 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gssd policy is very flexible allowing users to setup their gssd processes in as secure a method as possible.
+.PP 
+The following file types are defined for gssd:
+
+
+.EX
+.PP
+.B gssd_exec_t 
+.EE
+
+- Set files with the gssd_exec_t type, if you want to transition an executable to the gssd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/rpc\.gssd, /usr/sbin/rpc\.svcgssd
+
+.EX
+.PP
+.B gssd_keytab_t 
+.EE
+
+- Set files with the gssd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B gssd_tmp_t 
+.EE
+
+- Set files with the gssd_tmp_t type, if you want to store gssd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gssd policy is very flexible allowing users to setup their gssd processes in as secure a method as possible.
+.PP 
+The following process types are defined for gssd:
+
+.EX
+.B gssd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gssd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/guest_selinux.8 serefpolicy-3.7.19/man/man8/guest_selinux.8
--- nsaserefpolicy/man/man8/guest_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/guest_selinux.8	2012-04-24 11:06:45.875312401 +0000
@@ -0,0 +1,167 @@
+.TH  "guest_selinux"  "8"  "guest" "mgrepl@redhat.com" "guest SELinux Policy documentation"
+.SH "NAME"
+guest_u \- \fBLeast privledge terminal user\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBguest_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBguest_r\fP.  The
+default role has a default type, \fBguest_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B guest_u:guest_r:guest_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the guest_u user, you would execute:
+
+.B semanage login -m -s guest_u __default__
+
+
+.SH USER DESCRIPTION
+
+The SELinux user guest_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux type guest_t is not allowed to execute sudo. 
+
+.SH X WINDOWS LOGIN
+
+The SELinux user guest_u is not able to X Windows login.
+
+.SH NETWORK
+
+.TP
+The SELinux user guest_u is able to connect to the following tcp ports.
+
+.B dns_port_t: 53
+
+.B ldap_port_t: 389,636,3268
+
+.B kerberos_port_t: 88,750
+
+.B ocsp_port_t: 9080
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  guest_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run guest_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user guest_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when guest_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny guest_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow guest_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user guest_t can execute without transitioning:
+
+.B sesearch -A -s guest_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow guest_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user guest_t can execute and transition:
+
+.B $ sesearch -A -s guest_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/hald_selinux.8 serefpolicy-3.7.19/man/man8/hald_selinux.8
--- nsaserefpolicy/man/man8/hald_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/hald_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,167 @@
+.TH  "hald_selinux"  "8"  "hald" "dwalsh@redhat.com" "hald SELinux Policy documentation"
+.SH "NAME"
+hald_selinux \- Security Enhanced Linux Policy for the hald processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hald policy is very flexible allowing users to setup their hald processes in as secure a method as possible.
+.PP 
+The following file types are defined for hald:
+
+
+.EX
+.PP
+.B hald_acl_exec_t 
+.EE
+
+- Set files with the hald_acl_exec_t type, if you want to transition an executable to the hald_acl_t domain.
+
+
+.EX
+.PP
+.B hald_cache_t 
+.EE
+
+- Set files with the hald_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B hald_dccm_exec_t 
+.EE
+
+- Set files with the hald_dccm_exec_t type, if you want to transition an executable to the hald_dccm_t domain.
+
+
+.EX
+.PP
+.B hald_exec_t 
+.EE
+
+- Set files with the hald_exec_t type, if you want to transition an executable to the hald_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/hal/device\.d/printer_remove\.hal, /usr/libexec/hal-hotplug-map, /etc/hal/capability\.d/printer_update\.hal, /usr/sbin/hald
+
+.EX
+.PP
+.B hald_keymap_exec_t 
+.EE
+
+- Set files with the hald_keymap_exec_t type, if you want to transition an executable to the hald_keymap_t domain.
+
+
+.EX
+.PP
+.B hald_log_t 
+.EE
+
+- Set files with the hald_log_t type, if you want to treat the data as hald log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/pm(/.*)?, /var/log/pm-.*\.log
+
+.EX
+.PP
+.B hald_mac_exec_t 
+.EE
+
+- Set files with the hald_mac_exec_t type, if you want to transition an executable to the hald_mac_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/radeontool, /usr/libexec/hald-addon-macbook-backlight, /usr/libexec/hald-addon-macbookpro-backlight
+
+.EX
+.PP
+.B hald_sonypic_exec_t 
+.EE
+
+- Set files with the hald_sonypic_exec_t type, if you want to transition an executable to the hald_sonypic_t domain.
+
+
+.EX
+.PP
+.B hald_tmp_t 
+.EE
+
+- Set files with the hald_tmp_t type, if you want to store hald temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B hald_var_lib_t 
+.EE
+
+- Set files with the hald_var_lib_t type, if you want to store the hald files under the /var/lib directory.
+
+
+.EX
+.PP
+.B hald_var_run_t 
+.EE
+
+- Set files with the hald_var_run_t type, if you want to store the hald files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/haldaemon\.pid, /var/run/hald(/.*)?, /var/run/synce.*, /var/run/vbe.*, /var/run/pm-utils(/.*)?, /var/run/pm(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hald policy is very flexible allowing users to setup their hald processes in as secure a method as possible.
+.PP 
+The following process types are defined for hald:
+
+.EX
+.B hald_mac_t, hald_dccm_t, hald_sonypic_t, hald_acl_t, hald_t, hald_keymap_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hald(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/hddtemp_selinux.8 serefpolicy-3.7.19/man/man8/hddtemp_selinux.8
--- nsaserefpolicy/man/man8/hddtemp_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/hddtemp_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,111 @@
+.TH  "hddtemp_selinux"  "8"  "hddtemp" "dwalsh@redhat.com" "hddtemp SELinux Policy documentation"
+.SH "NAME"
+hddtemp_selinux \- Security Enhanced Linux Policy for the hddtemp processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B hddtemp
+(hddtemp hard disk temperature tool running as a daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
+.PP 
+The following file types are defined for hddtemp:
+
+
+.EX
+.PP
+.B hddtemp_exec_t 
+.EE
+
+- Set files with the hddtemp_exec_t type, if you want to transition an executable to the hddtemp_t domain.
+
+
+.EX
+.PP
+.B hddtemp_initrc_exec_t 
+.EE
+
+- Set files with the hddtemp_initrc_exec_t type, if you want to transition an executable to the hddtemp_initrc_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
+.PP 
+The following port types are defined for hddtemp:
+
+.EX
+.TP 5
+.B hddtemp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
+.PP 
+The following process types are defined for hddtemp:
+
+.EX
+.B hddtemp_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hddtemp(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/hostname_selinux.8 serefpolicy-3.7.19/man/man8/hostname_selinux.8
--- nsaserefpolicy/man/man8/hostname_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/hostname_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,77 @@
+.TH  "hostname_selinux"  "8"  "hostname" "dwalsh@redhat.com" "hostname SELinux Policy documentation"
+.SH "NAME"
+hostname_selinux \- Security Enhanced Linux Policy for the hostname processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B hostname
+(Policy for changing the system host name)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hostname policy is very flexible allowing users to setup their hostname processes in as secure a method as possible.
+.PP 
+The following file types are defined for hostname:
+
+
+.EX
+.PP
+.B hostname_exec_t 
+.EE
+
+- Set files with the hostname_exec_t type, if you want to transition an executable to the hostname_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hostname policy is very flexible allowing users to setup their hostname processes in as secure a method as possible.
+.PP 
+The following process types are defined for hostname:
+
+.EX
+.B hostname_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hostname(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/hotplug_selinux.8 serefpolicy-3.7.19/man/man8/hotplug_selinux.8
--- nsaserefpolicy/man/man8/hotplug_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/hotplug_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,104 @@
+.TH  "hotplug_selinux"  "8"  "hotplug" "dwalsh@redhat.com" "hotplug SELinux Policy documentation"
+.SH "NAME"
+hotplug_selinux \- Security Enhanced Linux Policy for the hotplug processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B hotplug
+(
+Policy for hotplug system, for supporting the
+connection and disconnection of devices at runtime.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hotplug policy is very flexible allowing users to setup their hotplug processes in as secure a method as possible.
+.PP 
+The following file types are defined for hotplug:
+
+
+.EX
+.PP
+.B hotplug_etc_t 
+.EE
+
+- Set files with the hotplug_etc_t type, if you want to store hotplug files in the /etc directories.
+
+
+.EX
+.PP
+.B hotplug_exec_t 
+.EE
+
+- Set files with the hotplug_exec_t type, if you want to transition an executable to the hotplug_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/hotplug, /etc/hotplug/firmware\.agent, /etc/hotplug\.d/.*, /sbin/netplugd
+
+.EX
+.PP
+.B hotplug_var_run_t 
+.EE
+
+- Set files with the hotplug_var_run_t type, if you want to store the hotplug files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/hotplug(/.*)?, /var/run/usb(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hotplug policy is very flexible allowing users to setup their hotplug processes in as secure a method as possible.
+.PP 
+The following process types are defined for hotplug:
+
+.EX
+.B hotplug_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hotplug(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/howl_selinux.8 serefpolicy-3.7.19/man/man8/howl_selinux.8
--- nsaserefpolicy/man/man8/howl_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/howl_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,115 @@
+.TH  "howl_selinux"  "8"  "howl" "dwalsh@redhat.com" "howl SELinux Policy documentation"
+.SH "NAME"
+howl_selinux \- Security Enhanced Linux Policy for the howl processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B howl
+(Port of Apple Rendezvous multicast DNS)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux howl policy is very flexible allowing users to setup their howl processes in as secure a method as possible.
+.PP 
+The following file types are defined for howl:
+
+
+.EX
+.PP
+.B howl_exec_t 
+.EE
+
+- Set files with the howl_exec_t type, if you want to transition an executable to the howl_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/mDNSResponder, /usr/bin/nifd
+
+.EX
+.PP
+.B howl_var_run_t 
+.EE
+
+- Set files with the howl_var_run_t type, if you want to store the howl files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux howl policy is very flexible allowing users to setup their howl processes in as secure a method as possible.
+.PP 
+The following port types are defined for howl:
+
+.EX
+.TP 5
+.B howl_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux howl policy is very flexible allowing users to setup their howl processes in as secure a method as possible.
+.PP 
+The following process types are defined for howl:
+
+.EX
+.B howl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), howl(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/hplip_selinux.8 serefpolicy-3.7.19/man/man8/hplip_selinux.8
--- nsaserefpolicy/man/man8/hplip_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/hplip_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,137 @@
+.TH  "hplip_selinux"  "8"  "hplip" "dwalsh@redhat.com" "hplip SELinux Policy documentation"
+.SH "NAME"
+hplip_selinux \- Security Enhanced Linux Policy for the hplip processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
+.PP 
+The following file types are defined for hplip:
+
+
+.EX
+.PP
+.B hplip_etc_t 
+.EE
+
+- Set files with the hplip_etc_t type, if you want to store hplip files in the /etc directories.
+
+
+.EX
+.PP
+.B hplip_exec_t 
+.EE
+
+- Set files with the hplip_exec_t type, if you want to transition an executable to the hplip_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib64/cups/backend/hp.*, /usr/bin/hpijs, /usr/share/hplip/.*\.py, /usr/sbin/hp-[^/]+, /usr/lib/cups/backend/hp.*, /usr/sbin/hpiod
+
+.EX
+.PP
+.B hplip_tmp_t 
+.EE
+
+- Set files with the hplip_tmp_t type, if you want to store hplip temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B hplip_var_lib_t 
+.EE
+
+- Set files with the hplip_var_lib_t type, if you want to store the hplip files under the /var/lib directory.
+
+
+.EX
+.PP
+.B hplip_var_run_t 
+.EE
+
+- Set files with the hplip_var_run_t type, if you want to store the hplip files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/hp.*\.pid, /var/run/hp.*\.port
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
+.PP 
+The following port types are defined for hplip:
+
+.EX
+.TP 5
+.B hplip_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
+.PP 
+The following process types are defined for hplip:
+
+.EX
+.B hplip_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hplip(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/httpd_selinux.8 serefpolicy-3.7.19/man/man8/httpd_selinux.8
--- nsaserefpolicy/man/man8/httpd_selinux.8	2011-03-17 07:21:23.220851002 +0000
+++ serefpolicy-3.7.19/man/man8/httpd_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -1,120 +1,1274 @@
-.TH  "httpd_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "httpd Selinux Policy documentation"
-.de EX
-.nf
-.ft CW
-..
-.de EE
-.ft R
-.fi
-..
+.TH  "httpd_selinux"  "8"  "httpd" "dwalsh@redhat.com" "httpd SELinux Policy documentation"
 .SH "NAME"
-httpd_selinux \- Security Enhanced Linux Policy for the httpd daemon
+httpd_selinux \- Security Enhanced Linux Policy for the httpd processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the httpd server via flexible mandatory access
+
+SELinux Linux secures
+.B httpd
+(Apache web server)
+processes via flexible mandatory access
 control.  
-.SH FILE_CONTEXTS
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  httpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run httpd with the tightest access possible.
+
+
+.PP
+If you want to allow httpd to act as a rela, you must turn on the httpd_can_network_relay boolean.
+
+.EX
+.B setsebool -P httpd_can_network_relay 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to databases over the network, you must turn on the httpd_can_network_connect_db boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_db 1
+.EE
+
+.PP
+If you want to allow httpd to run gpg in gpg-web domai, you must turn on the httpd_use_gpg boolean.
+
+.EX
+.B setsebool -P httpd_use_gpg 1
+.EE
+
+.PP
+If you want to allow httpd cgi suppor, you must turn on the httpd_enable_cgi boolean.
+
+.EX
+.B setsebool -P httpd_enable_cgi 1
+.EE
+
+.PP
+If you want to allow httpd to access cifs file system, you must turn on the httpd_use_cifs boolean.
+
+.EX
+.B setsebool -P httpd_use_cifs 1
+.EE
+
+.PP
+If you want to allow Apache to use mod_auth_pa, you must turn on the allow_httpd_mod_auth_pam boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_pam 1
+.EE
+
+.PP
+If you want to allow httpd to read home directorie, you must turn on the httpd_enable_homedirs boolean.
+
+.EX
+.B setsebool -P httpd_enable_homedirs 1
+.EE
+
+.PP
+If you want to allow Apache to communicate with avahi service via dbu, you must turn on the httpd_dbus_avahi boolean.
+
+.EX
+.B setsebool -P httpd_dbus_avahi 1
+.EE
+
+.PP
+If you want to unify HTTPD handling of all content files, you must turn on the httpd_unified boolean.
+
+.EX
+.B setsebool -P httpd_unified 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to the network using TCP, you must turn on the httpd_can_network_connect boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect 1
+.EE
+
+.PP
+If you want to allow httpd scripts and modules execmem/execstac, you must turn on the httpd_execmem boolean.
+
+.EX
+.B setsebool -P httpd_execmem 1
+.EE
+
+.PP
+If you want to allow Apache to use mod_auth_ntlm_winbin, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_ntlm_winbind 1
+.EE
+
+.PP
+If you want to unify HTTPD to communicate with the terminal. Needed for entering the passphrase for certificates at the terminal, you must turn on the httpd_tty_comm boolean.
+
+.EX
+.B setsebool -P httpd_tty_comm 1
+.EE
+
+.PP
+If you want to allow httpd to read user conten, you must turn on the httpd_read_user_content boolean.
+
+.EX
+.B setsebool -P httpd_read_user_content 1
+.EE
+
+.PP
+If you want to allow httpd to access nfs file system, you must turn on the httpd_use_nfs boolean.
+
+.EX
+.B setsebool -P httpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow Apache to execute tmp content, you must turn on the httpd_tmp_exec boolean.
+
+.EX
+.B setsebool -P httpd_tmp_exec 1
+.EE
+
+.PP
+If you want to allow httpd processes to manage IPA conten, you must turn on the httpd_manage_ipa boolean.
+
+.EX
+.B setsebool -P httpd_manage_ipa 1
+.EE
+
+.PP
+If you want to allow http daemon to send mai, you must turn on the httpd_can_sendmail boolean.
+
+.EX
+.B setsebool -P httpd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow httpd to use built in scripting (usually php, you must turn on the httpd_builtin_scripting boolean.
+
+.EX
+.B setsebool -P httpd_builtin_scripting 1
+.EE
+
+.PP
+If you want to allow http daemon to check spa, you must turn on the httpd_can_check_spam boolean.
+
+.EX
+.B setsebool -P httpd_can_check_spam 1
+.EE
+
+.PP
+If you want to allow httpd to connect to memcache serve, you must turn on the httpd_can_network_memcache boolean.
+
+.EX
+.B setsebool -P httpd_can_network_memcache 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to cobbler over the network, you must turn on the httpd_can_network_connect_cobbler boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_cobbler 1
+.EE
+
+.PP
+If you want to allow HTTPD to run SSI executables in the same domain as system CGI scripts, you must turn on the httpd_ssi_exec boolean.
+
+.EX
+.B setsebool -P httpd_ssi_exec 1
+.EE
+
+.PP
+If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+
+.EX
+.B setsebool -P httpd_enable_ftp_server 1
+.EE
+
+.PP
+If you want to allow httpd daemon to change system limit, you must turn on the httpd_setrlimit boolean.
+
+.EX
+.B setsebool -P httpd_setrlimit 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow httpd servers to read the /var/httpd directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/httpd(/.*)?"
+.br
+.B restorecon -F -R -v /var/httpd
+.pp
+.TP
+Allow httpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_httpd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/httpd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/httpd/incoming
+
+
+.PP
+If you want to allow apache scripts to write to public content.  Directories/Files must be labeled public_rw_content_t., you must turn on the allow_httpd_sys_script_anon_write boolean.
+
+.EX
+.B setsebool -P allow_httpd_sys_script_anon_write 1
+.EE
+
+.PP
+If you want to allow Apache to modify public files used for public file transfer services. Directories/Files must be labeled public_rw_content_t., you must turn on the allow_httpd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_httpd_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
 SELinux requires files to have an extended attribute to define the file type. 
-Policy governs the access daemons have to these files. 
-SELinux httpd policy is very flexible allowing users to setup their web services in as secure a method as possible.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
 .PP 
-The following file contexts types are defined for httpd:
+The following file types are defined for httpd:
+
+
+.EX
+.PP
+.B httpd_apcupsd_cgi_content_t 
+.EE
+
+- Set files with the httpd_apcupsd_cgi_content_t type, if you want to treat the files as httpd apcupsd cgi content.
+
+
+.EX
+.PP
+.B httpd_apcupsd_cgi_htaccess_t 
+.EE
+
+- Set files with the httpd_apcupsd_cgi_htaccess_t type, if you want to treat the file as a httpd apcupsd cgi access file.
+
+
 .EX
-httpd_sys_content_t 
-.EE 
-- Set files with httpd_sys_content_t if you want httpd_sys_script_exec_t scripts and the daemon to read the file, and disallow other non sys scripts from access.
+.PP
+.B httpd_apcupsd_cgi_ra_content_t 
+.EE
+
+- Set files with the httpd_apcupsd_cgi_ra_content_t type, if you want to treat the files as httpd apcupsd cgi read/append content.
+
+
 .EX
-httpd_sys_script_exec_t  
-.EE 
-- Set cgi scripts with httpd_sys_script_exec_t to allow them to run with access to all sys types.
+.PP
+.B httpd_apcupsd_cgi_rw_content_t 
+.EE
+
+- Set files with the httpd_apcupsd_cgi_rw_content_t type, if you want to treat the files as httpd apcupsd cgi read/write content.
+
+
 .EX
-httpd_sys_content_rw_t 
+.PP
+.B httpd_apcupsd_cgi_script_exec_t 
 .EE
-- Set files with httpd_sys_content_rw_t if you want httpd_sys_script_exec_t scripts and the daemon to read/write the data, and disallow other non sys scripts from access.
+
+- Set files with the httpd_apcupsd_cgi_script_exec_t type, if you want to transition an executable to the httpd_apcupsd_cgi_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/var/www/apcupsd/upsfstats\.cgi, /var/www/apcupsd/upsimage\.cgi, /var/www/apcupsd/multimon\.cgi, /var/www/cgi-bin/apcgui(/.*)?, /var/www/apcupsd/upsstats\.cgi
+
 .EX
-httpd_sys_content_ra_t 
+.PP
+.B httpd_awstats_content_t 
 .EE
-- Set files with httpd_sys_content_ra_t if you want httpd_sys_script_exec_t scripts and the daemon to read/append to the file, and disallow other non sys scripts from access.
+
+- Set files with the httpd_awstats_content_t type, if you want to treat the files as httpd awstats content.
+
+
 .EX
-httpd_unconfined_script_exec_t  
-.EE 
-- Set cgi scripts with httpd_unconfined_script_exec_t to allow them to run without any SELinux protection. This should only be used for a very complex httpd scripts, after exhausting all other options.  It is better to use this script rather than turning off SELinux protection for httpd.
+.PP
+.B httpd_awstats_htaccess_t 
+.EE
 
-.SH NOTE
-With certain policies you can define additional file contexts based on roles like user or staff.  httpd_user_script_exec_t can be defined where it would only have access to "user" contexts.
+- Set files with the httpd_awstats_htaccess_t type, if you want to treat the file as a httpd awstats access file.
 
-.SH SHARING FILES
-If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.  allow_DOMAIN_anon_write.  So for httpd you would execute:
 
 .EX
-setsebool -P allow_httpd_anon_write=1
+.PP
+.B httpd_awstats_ra_content_t 
 .EE
 
-or 
+- Set files with the httpd_awstats_ra_content_t type, if you want to treat the files as httpd awstats read/append content.
+
 
 .EX
-setsebool -P allow_httpd_sys_script_anon_write=1
+.PP
+.B httpd_awstats_rw_content_t 
 .EE
 
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  SElinux can be setup to prevent certain http scripts from working.  httpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run httpd with the tightest access possible.
+- Set files with the httpd_awstats_rw_content_t type, if you want to treat the files as httpd awstats read/write content.
+
+
+.EX
+.PP
+.B httpd_awstats_script_exec_t 
+.EE
+
+- Set files with the httpd_awstats_script_exec_t type, if you want to transition an executable to the httpd_awstats_script_t domain.
+
+
+.EX
+.PP
+.B httpd_bugzilla_content_t 
+.EE
+
+- Set files with the httpd_bugzilla_content_t type, if you want to treat the files as httpd bugzilla content.
+
+
+.EX
 .PP
-httpd can be setup to allow cgi scripts to be executed, set httpd_enable_cgi to allow this
+.B httpd_bugzilla_htaccess_t 
+.EE
+
+- Set files with the httpd_bugzilla_htaccess_t type, if you want to treat the file as a httpd bugzilla access file.
+
 
 .EX
-setsebool -P httpd_enable_cgi 1
+.PP
+.B httpd_bugzilla_ra_content_t 
 .EE
 
+- Set files with the httpd_bugzilla_ra_content_t type, if you want to treat the files as httpd bugzilla read/append content.
+
+
+.EX
 .PP
-SELinux policy for httpd can be setup to not allowed to access users home directories.  If you want to allow access to users home directories you need to set the httpd_enable_homedirs boolean and change the context of the files that you want people to access off the home dir.
+.B httpd_bugzilla_rw_content_t 
+.EE
+
+- Set files with the httpd_bugzilla_rw_content_t type, if you want to treat the files as httpd bugzilla read/write content.
+
 
 .EX
-setsebool -P httpd_enable_homedirs 1
-chcon -R -t httpd_sys_content_t ~user/public_html
+.PP
+.B httpd_bugzilla_script_exec_t 
 .EE
 
+- Set files with the httpd_bugzilla_script_exec_t type, if you want to transition an executable to the httpd_bugzilla_script_t domain.
+
+
+.EX
 .PP
-SELinux policy for httpd can be setup to not allow access to the controlling terminal.  In most cases this is preferred, because an intruder might be able to use the access to the terminal to gain privileges. But in certain situations httpd needs to prompt for a password to open a certificate file, in these cases, terminal access is required.  Set the httpd_tty_comm boolean to allow terminal access.
+.B httpd_bugzilla_tmp_t 
+.EE
+
+- Set files with the httpd_bugzilla_tmp_t type, if you want to store httpd bugzilla temporary files in the /tmp directories.
+
 
 .EX
-setsebool -P httpd_tty_comm 1
+.PP
+.B httpd_cache_t 
 .EE
 
+- Set files with the httpd_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/php-.*, /var/cache/mediawiki(/.*)?, /var/cache/lighttpd(/.*)?, /var/cache/mod_gnutls(/.*)?, /var/cache/mod_ssl(/.*)?, /var/cache/mod_.*, /var/cache/ssl.*\.sem, /var/cache/php-mmcache(/.*)?, /var/cache/httpd(/.*)?, /var/cache/rt3(/.*)?, /var/cache/php-eaccelerator(/.*)?, /var/cache/mason(/.*)?, /var/cache/mod_proxy(/.*)?
+
+.EX
 .PP
-httpd can be configured to not differentiate file controls based on context, i.e. all files labeled as httpd context can be read/write/execute.  Setting this boolean to false allows you to setup the security policy such that one httpd service can not interfere with another.
+.B httpd_cobbler_content_t 
+.EE
+
+- Set files with the httpd_cobbler_content_t type, if you want to treat the files as httpd cobbler content.
+
 
 .EX
-setsebool -P httpd_unified 0
+.PP
+.B httpd_cobbler_htaccess_t 
 .EE
 
+- Set files with the httpd_cobbler_htaccess_t type, if you want to treat the file as a httpd cobbler access file.
+
+
+.EX
 .PP
-SELinu policy for httpd can be configured to turn on sending email. This is a security feature, since it would prevent a vulnerabiltiy in http from causing a spam attack.  I certain situations, you may want http modules to send mail.  You can turn on the httpd_send_mail boolean.
+.B httpd_cobbler_ra_content_t 
+.EE
+
+- Set files with the httpd_cobbler_ra_content_t type, if you want to treat the files as httpd cobbler read/append content.
+
 
 .EX
-setsebool -P httpd_can_sendmail 1
 .PP
-httpd can be configured to turn off internal scripting (PHP).  PHP and other
-loadable modules run under the same context as httpd. Therefore several policy rules allow httpd greater access to the system then is needed if you only use external cgi scripts.
+.B httpd_cobbler_rw_content_t 
+.EE
+
+- Set files with the httpd_cobbler_rw_content_t type, if you want to treat the files as httpd cobbler read/write content.
+
 
 .EX
-setsebool -P httpd_builtin_scripting 0
+.PP
+.B httpd_cobbler_script_exec_t 
 .EE
 
+- Set files with the httpd_cobbler_script_exec_t type, if you want to transition an executable to the httpd_cobbler_script_t domain.
+
+
+.EX
 .PP
-SELinux policy can be setup such that httpd scripts are not allowed to connect out to the network.
-This would prevent a hacker from breaking into you httpd server and attacking 
-other machines.  If you need scripts to be able to connect you can set the httpd_can_network_connect boolean on.
+.B httpd_config_t 
+.EE
+
+- Set files with the httpd_config_t type, if you want to treat the files as httpd configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/vhosts, /etc/httpd(/.*)?, /etc/apache(2)?(/.*)?, /etc/apache-ssl(2)?(/.*)?, /etc/lighttpd(/.*)?
 
 .EX
-setsebool -P httpd_can_network_connect 1
+.PP
+.B httpd_cvs_content_t 
 .EE
 
+- Set files with the httpd_cvs_content_t type, if you want to treat the files as httpd cvs content.
+
+
+.EX
 .PP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
-.SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+.B httpd_cvs_htaccess_t 
+.EE
 
-.SH "SEE ALSO"
-selinux(8), httpd(8), chcon(1), setsebool(8)
+- Set files with the httpd_cvs_htaccess_t type, if you want to treat the file as a httpd cvs access file.
+
+
+.EX
+.PP
+.B httpd_cvs_ra_content_t 
+.EE
 
+- Set files with the httpd_cvs_ra_content_t type, if you want to treat the files as httpd cvs read/append content.
 
+
+.EX
+.PP
+.B httpd_cvs_rw_content_t 
+.EE
+
+- Set files with the httpd_cvs_rw_content_t type, if you want to treat the files as httpd cvs read/write content.
+
+
+.EX
+.PP
+.B httpd_cvs_script_exec_t 
+.EE
+
+- Set files with the httpd_cvs_script_exec_t type, if you want to transition an executable to the httpd_cvs_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/cvsweb/cvsweb\.cgi, /var/www/cgi-bin/cvsweb\.cgi
+
+.EX
+.PP
+.B httpd_dirsrvadmin_content_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_content_t type, if you want to treat the files as httpd dirsrvadmin content.
+
+
+.EX
+.PP
+.B httpd_dirsrvadmin_htaccess_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_htaccess_t type, if you want to treat the file as a httpd dirsrvadmin access file.
+
+
+.EX
+.PP
+.B httpd_dirsrvadmin_ra_content_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_ra_content_t type, if you want to treat the files as httpd dirsrvadmin read/append content.
+
+
+.EX
+.PP
+.B httpd_dirsrvadmin_rw_content_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_rw_content_t type, if you want to treat the files as httpd dirsrvadmin read/write content.
+
+
+.EX
+.PP
+.B httpd_dirsrvadmin_script_exec_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_script_exec_t type, if you want to transition an executable to the httpd_dirsrvadmin_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/dirsrv/cgi-bin(/.*)?, /usr/lib(64)?/dirsrv/dsgw-cgi-bin(/.*)?
+
+.EX
+.PP
+.B httpd_exec_t 
+.EE
+
+- Set files with the httpd_exec_t type, if you want to transition an executable to the httpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/apache(2)?, /usr/bin/mongrel_rails, /usr/sbin/lighttpd, /usr/lib/apache-ssl/.+, /usr/sbin/httpd(\.worker)?, /usr/sbin/apache-ssl(2)?
+
+.EX
+.PP
+.B httpd_git_content_t 
+.EE
+
+- Set files with the httpd_git_content_t type, if you want to treat the files as httpd git content.
+
+
+.EX
+.PP
+.B httpd_git_htaccess_t 
+.EE
+
+- Set files with the httpd_git_htaccess_t type, if you want to treat the file as a httpd git access file.
+
+
+.EX
+.PP
+.B httpd_git_ra_content_t 
+.EE
+
+- Set files with the httpd_git_ra_content_t type, if you want to treat the files as httpd git read/append content.
+
+
+.EX
+.PP
+.B httpd_git_rw_content_t 
+.EE
+
+- Set files with the httpd_git_rw_content_t type, if you want to treat the files as httpd git read/write content.
+
+
+.EX
+.PP
+.B httpd_git_script_exec_t 
+.EE
+
+- Set files with the httpd_git_script_exec_t type, if you want to transition an executable to the httpd_git_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/var/www/cgi-bin/cgit, /var/www/git/gitweb.cgi
+
+.EX
+.PP
+.B httpd_helper_exec_t 
+.EE
+
+- Set files with the httpd_helper_exec_t type, if you want to transition an executable to the httpd_helper_t domain.
+
+
+.EX
+.PP
+.B httpd_initrc_exec_t 
+.EE
+
+- Set files with the httpd_initrc_exec_t type, if you want to transition an executable to the httpd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/httpd, /etc/rc\.d/init\.d/lighttpd
+
+.EX
+.PP
+.B httpd_keytab_t 
+.EE
+
+- Set files with the httpd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B httpd_lock_t 
+.EE
+
+- Set files with the httpd_lock_t type, if you want to treat the files as httpd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B httpd_log_t 
+.EE
+
+- Set files with the httpd_log_t type, if you want to treat the data as httpd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/apache-ssl(2)?(/.*)?, /var/log/httpd(/.*)?, /var/log/cgiwrap\.log.*, /var/log/lighttpd(/.*)?, /etc/httpd/logs, /var/log/apache(2)?(/.*)?, /var/log/cacti(/.*)?
+
+.EX
+.PP
+.B httpd_mediawiki_content_t 
+.EE
+
+- Set files with the httpd_mediawiki_content_t type, if you want to treat the files as httpd mediawiki content.
+
+.br
+.TP 5
+Paths: 
+/var/www/wiki/.*\.php, /usr/share/mediawiki(/.*)?
+
+.EX
+.PP
+.B httpd_mediawiki_htaccess_t 
+.EE
+
+- Set files with the httpd_mediawiki_htaccess_t type, if you want to treat the file as a httpd mediawiki access file.
+
+
+.EX
+.PP
+.B httpd_mediawiki_ra_content_t 
+.EE
+
+- Set files with the httpd_mediawiki_ra_content_t type, if you want to treat the files as httpd mediawiki read/append content.
+
+
+.EX
+.PP
+.B httpd_mediawiki_rw_content_t 
+.EE
+
+- Set files with the httpd_mediawiki_rw_content_t type, if you want to treat the files as httpd mediawiki read/write content.
+
+
+.EX
+.PP
+.B httpd_mediawiki_script_exec_t 
+.EE
+
+- Set files with the httpd_mediawiki_script_exec_t type, if you want to transition an executable to the httpd_mediawiki_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/mediawiki/math/texvc, /usr/lib(64)?/mediawiki/math/texvc_tex, /usr/lib(64)?/mediawiki/math/texvc_tes
+
+.EX
+.PP
+.B httpd_mediawiki_tmp_t 
+.EE
+
+- Set files with the httpd_mediawiki_tmp_t type, if you want to store httpd mediawiki temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_modules_t 
+.EE
+
+- Set files with the httpd_modules_t type, if you want to treat the files as httpd modules.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/lighttpd(/.*)?, /usr/lib(64)?/apache2/modules(/.*)?, /usr/lib(64)?/apache(/.*)?, /etc/httpd/modules, /usr/lib(64)?/httpd(/.*)?
+
+.EX
+.PP
+.B httpd_munin_content_t 
+.EE
+
+- Set files with the httpd_munin_content_t type, if you want to treat the files as httpd munin content.
+
+
+.EX
+.PP
+.B httpd_munin_htaccess_t 
+.EE
+
+- Set files with the httpd_munin_htaccess_t type, if you want to treat the file as a httpd munin access file.
+
+
+.EX
+.PP
+.B httpd_munin_ra_content_t 
+.EE
+
+- Set files with the httpd_munin_ra_content_t type, if you want to treat the files as httpd munin read/append content.
+
+
+.EX
+.PP
+.B httpd_munin_rw_content_t 
+.EE
+
+- Set files with the httpd_munin_rw_content_t type, if you want to treat the files as httpd munin read/write content.
+
+
+.EX
+.PP
+.B httpd_munin_script_exec_t 
+.EE
+
+- Set files with the httpd_munin_script_exec_t type, if you want to transition an executable to the httpd_munin_script_t domain.
+
+
+.EX
+.PP
+.B httpd_nagios_content_t 
+.EE
+
+- Set files with the httpd_nagios_content_t type, if you want to treat the files as httpd nagios content.
+
+
+.EX
+.PP
+.B httpd_nagios_htaccess_t 
+.EE
+
+- Set files with the httpd_nagios_htaccess_t type, if you want to treat the file as a httpd nagios access file.
+
+
+.EX
+.PP
+.B httpd_nagios_ra_content_t 
+.EE
+
+- Set files with the httpd_nagios_ra_content_t type, if you want to treat the files as httpd nagios read/append content.
+
+
+.EX
+.PP
+.B httpd_nagios_rw_content_t 
+.EE
+
+- Set files with the httpd_nagios_rw_content_t type, if you want to treat the files as httpd nagios read/write content.
+
+
+.EX
+.PP
+.B httpd_nagios_script_exec_t 
+.EE
+
+- Set files with the httpd_nagios_script_exec_t type, if you want to transition an executable to the httpd_nagios_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/nagios/cgi(/.*)?, /usr/lib(64)?/cgi-bin/nagios(/.+)?, /usr/lib(64)?/cgi-bin/netsaint(/.*)?, /usr/lib(64)?/nagios/cgi-bin(/.*)?
+
+.EX
+.PP
+.B httpd_nutups_cgi_content_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_content_t type, if you want to treat the files as httpd nutups cgi content.
+
+
+.EX
+.PP
+.B httpd_nutups_cgi_htaccess_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_htaccess_t type, if you want to treat the file as a httpd nutups cgi access file.
+
+
+.EX
+.PP
+.B httpd_nutups_cgi_ra_content_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_ra_content_t type, if you want to treat the files as httpd nutups cgi read/append content.
+
+
+.EX
+.PP
+.B httpd_nutups_cgi_rw_content_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_rw_content_t type, if you want to treat the files as httpd nutups cgi read/write content.
+
+
+.EX
+.PP
+.B httpd_nutups_cgi_script_exec_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_script_exec_t type, if you want to transition an executable to the httpd_nutups_cgi_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/var/www/nut-cgi-bin/upsstats\.cgi, /var/www/nut-cgi-bin/upsimage\.cgi, /var/www/nut-cgi-bin/upsset\.cgi
+
+.EX
+.PP
+.B httpd_php_exec_t 
+.EE
+
+- Set files with the httpd_php_exec_t type, if you want to transition an executable to the httpd_php_t domain.
+
+
+.EX
+.PP
+.B httpd_php_tmp_t 
+.EE
+
+- Set files with the httpd_php_tmp_t type, if you want to store httpd php temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_prewikka_content_t 
+.EE
+
+- Set files with the httpd_prewikka_content_t type, if you want to treat the files as httpd prewikka content.
+
+
+.EX
+.PP
+.B httpd_prewikka_htaccess_t 
+.EE
+
+- Set files with the httpd_prewikka_htaccess_t type, if you want to treat the file as a httpd prewikka access file.
+
+
+.EX
+.PP
+.B httpd_prewikka_ra_content_t 
+.EE
+
+- Set files with the httpd_prewikka_ra_content_t type, if you want to treat the files as httpd prewikka read/append content.
+
+
+.EX
+.PP
+.B httpd_prewikka_rw_content_t 
+.EE
+
+- Set files with the httpd_prewikka_rw_content_t type, if you want to treat the files as httpd prewikka read/write content.
+
+
+.EX
+.PP
+.B httpd_prewikka_script_exec_t 
+.EE
+
+- Set files with the httpd_prewikka_script_exec_t type, if you want to transition an executable to the httpd_prewikka_script_t domain.
+
+
+.EX
+.PP
+.B httpd_rotatelogs_exec_t 
+.EE
+
+- Set files with the httpd_rotatelogs_exec_t type, if you want to transition an executable to the httpd_rotatelogs_t domain.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_content_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_content_t type, if you want to treat the files as httpd smokeping cgi content.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_htaccess_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_htaccess_t type, if you want to treat the file as a httpd smokeping cgi access file.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_ra_content_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_ra_content_t type, if you want to treat the files as httpd smokeping cgi read/append content.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_rw_content_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_rw_content_t type, if you want to treat the files as httpd smokeping cgi read/write content.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_script_exec_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_script_exec_t type, if you want to transition an executable to the httpd_smokeping_cgi_script_t domain.
+
+
+.EX
+.PP
+.B httpd_squid_content_t 
+.EE
+
+- Set files with the httpd_squid_content_t type, if you want to treat the files as httpd squid content.
+
+
+.EX
+.PP
+.B httpd_squid_htaccess_t 
+.EE
+
+- Set files with the httpd_squid_htaccess_t type, if you want to treat the file as a httpd squid access file.
+
+
+.EX
+.PP
+.B httpd_squid_ra_content_t 
+.EE
+
+- Set files with the httpd_squid_ra_content_t type, if you want to treat the files as httpd squid read/append content.
+
+
+.EX
+.PP
+.B httpd_squid_rw_content_t 
+.EE
+
+- Set files with the httpd_squid_rw_content_t type, if you want to treat the files as httpd squid read/write content.
+
+
+.EX
+.PP
+.B httpd_squid_script_exec_t 
+.EE
+
+- Set files with the httpd_squid_script_exec_t type, if you want to transition an executable to the httpd_squid_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib64/squid/cachemgr\.cgi, /usr/lib/squid/cachemgr\.cgi
+
+.EX
+.PP
+.B httpd_squirrelmail_t 
+.EE
+
+- Set files with the httpd_squirrelmail_t type, if you want to treat the files as httpd squirrelmail data.
+
+
+.EX
+.PP
+.B httpd_suexec_exec_t 
+.EE
+
+- Set files with the httpd_suexec_exec_t type, if you want to transition an executable to the httpd_suexec_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/apache(2)?/suexec(2)?, /usr/lib(64)?/cgi-bin/(nph-)?cgiwrap(d)?, /usr/sbin/suexec
+
+.EX
+.PP
+.B httpd_suexec_tmp_t 
+.EE
+
+- Set files with the httpd_suexec_tmp_t type, if you want to store httpd suexec temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_sys_content_t 
+.EE
+
+- Set files with the httpd_sys_content_t type, if you want to treat the files as httpd sys content.
+
+.br
+.TP 5
+Paths: 
+/usr/share/icecast(/.*)?, /usr/share/htdig(/.*)?, /etc/htdig(/.*)?, /var/www/svn/conf(/.*)?, /usr/share/mythtv/data(/.*)?, /var/lib/htdig(/.*)?, /srv/gallery2(/.*)?, /srv/([^/]*/)?www(/.*)?, /usr/share/ntop/html(/.*)?, /usr/share/mythweb(/.*)?, /var/lib/cacti/rra(/.*)?, /usr/share/openca/htdocs(/.*)?, /usr/share/selinux-policy[^/]*/html(/.*)?, /usr/share/drupal.*, /var/lib/trac(/.*)?, /var/www(/.*)?, /var/www/icons(/.*)?
+
+.EX
+.PP
+.B httpd_sys_htaccess_t 
+.EE
+
+- Set files with the httpd_sys_htaccess_t type, if you want to treat the file as a httpd sys access file.
+
+
+.EX
+.PP
+.B httpd_sys_ra_content_t 
+.EE
+
+- Set files with the httpd_sys_ra_content_t type, if you want to treat the files as httpd sys read/append content.
+
+
+.EX
+.PP
+.B httpd_sys_rw_content_t 
+.EE
+
+- Set files with the httpd_sys_rw_content_t type, if you want to treat the files as httpd sys read/write content.
+
+.br
+.TP 5
+Paths: 
+/var/spool/viewvc(/.*)?, /etc/mock/koji(/.*)?, /var/lib/svn(/.*)?, /var/spool/gosa(/.*)?, /etc/zabbix/web(/.*)?, /etc/drupal.*, /var/www/gallery/albums(/.*)?, /var/lib/koji(/.*)?, /var/www/html/configuration\.php, /usr/share/wordpress/wp-content/upgrade(/.*)?, /etc/dokuwiki(/.*)?, /var/lib/drupal.*, /usr/share/wordpress-mu/wp-content(/.*)?, /var/www/moodledata(/.*)?, /usr/share/wordpress/wp-content/uploads(/.*)?, /var/www/svn(/.*)?
+
+.EX
+.PP
+.B httpd_sys_script_exec_t 
+.EE
+
+- Set files with the httpd_sys_script_exec_t type, if you want to transition an executable to the httpd_sys_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/var/www/svn/hooks(/.*)?, /usr/share/mythweb/mythweb\.pl, /usr/share/wordpress/.*\.php, /usr/lib/cgi-bin(/.*)?, /var/www/perl(/.*)?, /usr/share/mythtv/mythweather/scripts(/.*)?, /usr/share/wordpress-mu/wp-config\.php, /var/www/html/[^/]*/cgi-bin(/.*)?, /var/www/[^/]*/cgi-bin(/.*)?, /var/www/cgi-bin(/.*)?
+
+.EX
+.PP
+.B httpd_tmp_t 
+.EE
+
+- Set files with the httpd_tmp_t type, if you want to store httpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_tmpfs_t 
+.EE
+
+- Set files with the httpd_tmpfs_t type, if you want to store httpd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B httpd_unconfined_script_exec_t 
+.EE
+
+- Set files with the httpd_unconfined_script_exec_t type, if you want to transition an executable to the httpd_unconfined_script_t domain.
+
+
+.EX
+.PP
+.B httpd_user_content_t 
+.EE
+
+- Set files with the httpd_user_content_t type, if you want to treat the files as httpd user content.
+
+
+.EX
+.PP
+.B httpd_user_htaccess_t 
+.EE
+
+- Set files with the httpd_user_htaccess_t type, if you want to treat the file as a httpd user access file.
+
+
+.EX
+.PP
+.B httpd_user_ra_content_t 
+.EE
+
+- Set files with the httpd_user_ra_content_t type, if you want to treat the files as httpd user read/append content.
+
+
+.EX
+.PP
+.B httpd_user_rw_content_t 
+.EE
+
+- Set files with the httpd_user_rw_content_t type, if you want to treat the files as httpd user read/write content.
+
+
+.EX
+.PP
+.B httpd_user_script_exec_t 
+.EE
+
+- Set files with the httpd_user_script_exec_t type, if you want to transition an executable to the httpd_user_script_t domain.
+
+
+.EX
+.PP
+.B httpd_var_lib_t 
+.EE
+
+- Set files with the httpd_var_lib_t type, if you want to store the httpd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/rt3/data/RT-Shredder(/.*)?, /var/lib/httpd(/.*)?, /var/lib/dav(/.*)?
+
+.EX
+.PP
+.B httpd_var_run_t 
+.EE
+
+- Set files with the httpd_var_run_t type, if you want to store the httpd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/mod_.*, /var/run/apache.*, /var/run/lighttpd(/.*)?, /var/run/gcache_port, /var/run/httpd.*, /var/run/wsgi.*, /var/lib/php/session(/.*)?
+
+.EX
+.PP
+.B httpd_w3c_validator_content_t 
+.EE
+
+- Set files with the httpd_w3c_validator_content_t type, if you want to treat the files as httpd w3c validator content.
+
+
+.EX
+.PP
+.B httpd_w3c_validator_htaccess_t 
+.EE
+
+- Set files with the httpd_w3c_validator_htaccess_t type, if you want to treat the file as a httpd w3c validator access file.
+
+
+.EX
+.PP
+.B httpd_w3c_validator_ra_content_t 
+.EE
+
+- Set files with the httpd_w3c_validator_ra_content_t type, if you want to treat the files as httpd w3c validator read/append content.
+
+
+.EX
+.PP
+.B httpd_w3c_validator_rw_content_t 
+.EE
+
+- Set files with the httpd_w3c_validator_rw_content_t type, if you want to treat the files as httpd w3c validator read/write content.
+
+
+.EX
+.PP
+.B httpd_w3c_validator_script_exec_t 
+.EE
+
+- Set files with the httpd_w3c_validator_script_exec_t type, if you want to transition an executable to the httpd_w3c_validator_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/w3c-markup-validator/cgi-bin(/.*)?, /usr/lib/cgi-bin/check
+
+.EX
+.PP
+.B httpd_w3c_validator_tmp_t 
+.EE
+
+- Set files with the httpd_w3c_validator_tmp_t type, if you want to store httpd w3c validator temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for httpd:
+
+.EX
+.TP 5
+.B http_cache_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B http_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for httpd:
+
+.EX
+.B httpd_cvs_script_t, httpd_rotatelogs_t, httpd_bugzilla_script_t, httpd_smokeping_cgi_script_t, httpd_nagios_script_t, httpd_dirsrvadmin_script_t, httpd_suexec_t, httpd_php_t, httpd_w3c_validator_script_t, httpd_user_script_t, httpd_awstats_script_t, httpd_apcupsd_cgi_script_t, httpd_nutups_cgi_script_t, httpd_munin_script_t, httpd_sys_script_t, httpd_prewikka_script_t, httpd_git_script_t, httpd_unconfined_script_t, httpd_t, httpd_helper_t, httpd_squid_script_t, httpd_cobbler_script_t, httpd_mediawiki_script_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), httpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/hwclock_selinux.8 serefpolicy-3.7.19/man/man8/hwclock_selinux.8
--- nsaserefpolicy/man/man8/hwclock_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/hwclock_selinux.8	2012-03-20 22:37:14.343458444 +0000
@@ -0,0 +1,71 @@
+.TH  "hwclock_selinux"  "8"  "hwclock" "dwalsh@redhat.com" "hwclock SELinux Policy documentation"
+.SH "NAME"
+hwclock_selinux \- Security Enhanced Linux Policy for the hwclock processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hwclock policy is very flexible allowing users to setup their hwclock processes in as secure a method as possible.
+.PP 
+The following file types are defined for hwclock:
+
+
+.EX
+.PP
+.B hwclock_exec_t 
+.EE
+
+- Set files with the hwclock_exec_t type, if you want to transition an executable to the hwclock_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hwclock policy is very flexible allowing users to setup their hwclock processes in as secure a method as possible.
+.PP 
+The following process types are defined for hwclock:
+
+.EX
+.B hwclock_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hwclock(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/iceauth_selinux.8 serefpolicy-3.7.19/man/man8/iceauth_selinux.8
--- nsaserefpolicy/man/man8/iceauth_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/iceauth_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,83 @@
+.TH  "iceauth_selinux"  "8"  "iceauth" "dwalsh@redhat.com" "iceauth SELinux Policy documentation"
+.SH "NAME"
+iceauth_selinux \- Security Enhanced Linux Policy for the iceauth processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux iceauth policy is very flexible allowing users to setup their iceauth processes in as secure a method as possible.
+.PP 
+The following file types are defined for iceauth:
+
+
+.EX
+.PP
+.B iceauth_exec_t 
+.EE
+
+- Set files with the iceauth_exec_t type, if you want to transition an executable to the iceauth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/iceauth, /usr/X11R6/bin/iceauth
+
+.EX
+.PP
+.B iceauth_home_t 
+.EE
+
+- Set files with the iceauth_home_t type, if you want to store iceauth files in the users home directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux iceauth policy is very flexible allowing users to setup their iceauth processes in as secure a method as possible.
+.PP 
+The following process types are defined for iceauth:
+
+.EX
+.B iceauth_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), iceauth(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/icecast_selinux.8 serefpolicy-3.7.19/man/man8/icecast_selinux.8
--- nsaserefpolicy/man/man8/icecast_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/icecast_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,116 @@
+.TH  "icecast_selinux"  "8"  "icecast" "dwalsh@redhat.com" "icecast SELinux Policy documentation"
+.SH "NAME"
+icecast_selinux \- Security Enhanced Linux Policy for the icecast processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B icecast
+( ShoutCast compatible streaming media server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  icecast policy is extremely flexible and has several booleans that allow you to manipulate the policy and run icecast with the tightest access possible.
+
+
+.PP
+If you want to allow icecast to connect to all ports, not just sound ports, you must turn on the icecast_connect_any boolean.
+
+.EX
+.B setsebool -P icecast_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux icecast policy is very flexible allowing users to setup their icecast processes in as secure a method as possible.
+.PP 
+The following file types are defined for icecast:
+
+
+.EX
+.PP
+.B icecast_exec_t 
+.EE
+
+- Set files with the icecast_exec_t type, if you want to transition an executable to the icecast_t domain.
+
+
+.EX
+.PP
+.B icecast_initrc_exec_t 
+.EE
+
+- Set files with the icecast_initrc_exec_t type, if you want to transition an executable to the icecast_initrc_t domain.
+
+
+.EX
+.PP
+.B icecast_log_t 
+.EE
+
+- Set files with the icecast_log_t type, if you want to treat the data as icecast log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B icecast_var_run_t 
+.EE
+
+- Set files with the icecast_var_run_t type, if you want to store the icecast files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux icecast policy is very flexible allowing users to setup their icecast processes in as secure a method as possible.
+.PP 
+The following process types are defined for icecast:
+
+.EX
+.B icecast_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), icecast(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ifconfig_selinux.8 serefpolicy-3.7.19/man/man8/ifconfig_selinux.8
--- nsaserefpolicy/man/man8/ifconfig_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ifconfig_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,75 @@
+.TH  "ifconfig_selinux"  "8"  "ifconfig" "dwalsh@redhat.com" "ifconfig SELinux Policy documentation"
+.SH "NAME"
+ifconfig_selinux \- Security Enhanced Linux Policy for the ifconfig processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ifconfig policy is very flexible allowing users to setup their ifconfig processes in as secure a method as possible.
+.PP 
+The following file types are defined for ifconfig:
+
+
+.EX
+.PP
+.B ifconfig_exec_t 
+.EE
+
+- Set files with the ifconfig_exec_t type, if you want to transition an executable to the ifconfig_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/tc, /sbin/ipx_configure, /sbin/ipx_interface, /usr/sbin/tc, /sbin/ipx_internal_net, /bin/ip, /sbin/iwconfig, /sbin/ifconfig, /sbin/mii-tool, /sbin/ethtool, /sbin/ip
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ifconfig policy is very flexible allowing users to setup their ifconfig processes in as secure a method as possible.
+.PP 
+The following process types are defined for ifconfig:
+
+.EX
+.B ifconfig_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ifconfig(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/inetd_selinux.8 serefpolicy-3.7.19/man/man8/inetd_selinux.8
--- nsaserefpolicy/man/man8/inetd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/inetd_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,159 @@
+.TH  "inetd_selinux"  "8"  "inetd" "dwalsh@redhat.com" "inetd SELinux Policy documentation"
+.SH "NAME"
+inetd_selinux \- Security Enhanced Linux Policy for the inetd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B inetd
+(Internet services daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
+.PP 
+The following file types are defined for inetd:
+
+
+.EX
+.PP
+.B inetd_child_exec_t 
+.EE
+
+- Set files with the inetd_child_exec_t type, if you want to transition an executable to the inetd_child_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/identd, /usr/local/lib/pysieved/pysieved.*\.py, /usr/sbin/in\..*d
+
+.EX
+.PP
+.B inetd_child_tmp_t 
+.EE
+
+- Set files with the inetd_child_tmp_t type, if you want to store inetd child temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B inetd_child_var_run_t 
+.EE
+
+- Set files with the inetd_child_var_run_t type, if you want to store the inetd child files under the /run directory.
+
+
+.EX
+.PP
+.B inetd_exec_t 
+.EE
+
+- Set files with the inetd_exec_t type, if you want to transition an executable to the inetd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/inetd, /usr/sbin/xinetd, /usr/sbin/rlinetd
+
+.EX
+.PP
+.B inetd_log_t 
+.EE
+
+- Set files with the inetd_log_t type, if you want to treat the data as inetd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B inetd_tmp_t 
+.EE
+
+- Set files with the inetd_tmp_t type, if you want to store inetd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B inetd_var_run_t 
+.EE
+
+- Set files with the inetd_var_run_t type, if you want to store the inetd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
+.PP 
+The following port types are defined for inetd:
+
+.EX
+.TP 5
+.B inetd_child_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
+.PP 
+The following process types are defined for inetd:
+
+.EX
+.B inetd_t, inetd_child_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), inetd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/initrc_selinux.8 serefpolicy-3.7.19/man/man8/initrc_selinux.8
--- nsaserefpolicy/man/man8/initrc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/initrc_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,111 @@
+.TH  "initrc_selinux"  "8"  "initrc" "dwalsh@redhat.com" "initrc SELinux Policy documentation"
+.SH "NAME"
+initrc_selinux \- Security Enhanced Linux Policy for the initrc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux initrc policy is very flexible allowing users to setup their initrc processes in as secure a method as possible.
+.PP 
+The following file types are defined for initrc:
+
+
+.EX
+.PP
+.B initrc_devpts_t 
+.EE
+
+- Set files with the initrc_devpts_t type, if you want to treat the files as initrc devpts data.
+
+
+.EX
+.PP
+.B initrc_exec_t 
+.EE
+
+- Set files with the initrc_exec_t type, if you want to transition an executable to the initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/startx, /etc/rc\.d/rc, /usr/libexec/dcc/stop-.*, /etc/sysconfig/network-scripts/ifup-ipsec, /usr/sbin/start-dirsrv, /usr/sbin/open_init_pty, /usr/sbin/ldap-agent, /usr/share/system-config-services/system-config-services-mechanism\.py, /etc/rc\.d/rc\.[^/]+, /etc/rc\.d/init\.d/.*, /usr/libexec/dcc/start-.*, /usr/sbin/restart-dirsrv, /etc/X11/prefdm, /usr/sbin/apachectl, /etc/init\.d/.*, /usr/bin/sepg_ctl
+
+.EX
+.PP
+.B initrc_state_t 
+.EE
+
+- Set files with the initrc_state_t type, if you want to treat the files as initrc state data.
+
+
+.EX
+.PP
+.B initrc_tmp_t 
+.EE
+
+- Set files with the initrc_tmp_t type, if you want to store initrc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B initrc_var_run_t 
+.EE
+
+- Set files with the initrc_var_run_t type, if you want to store the initrc files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/setmixer_flag, /var/run/runlevel\.dir, /var/run/random-seed, /var/run/utmp
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux initrc policy is very flexible allowing users to setup their initrc processes in as secure a method as possible.
+.PP 
+The following process types are defined for initrc:
+
+.EX
+.B initrc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), initrc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/init_selinux.8 serefpolicy-3.7.19/man/man8/init_selinux.8
--- nsaserefpolicy/man/man8/init_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/init_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,156 @@
+.TH  "init_selinux"  "8"  "init" "dwalsh@redhat.com" "init SELinux Policy documentation"
+.SH "NAME"
+init_selinux \- Security Enhanced Linux Policy for the init processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B init
+(System initialization programs (init and init scripts))
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  init policy is extremely flexible and has several booleans that allow you to manipulate the policy and run init with the tightest access possible.
+
+
+.PP
+If you want to enable support for upstart as the init program, you must turn on the init_upstart boolean.
+
+.EX
+.B setsebool -P init_upstart 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux init policy is very flexible allowing users to setup their init processes in as secure a method as possible.
+.PP 
+The following file types are defined for init:
+
+
+.EX
+.PP
+.B init_exec_t 
+.EE
+
+- Set files with the init_exec_t type, if you want to transition an executable to the init_t domain.
+
+
+.EX
+.PP
+.B init_var_run_t 
+.EE
+
+- Set files with the init_var_run_t type, if you want to store the init files under the /run directory.
+
+
+.EX
+.PP
+.B initctl_t 
+.EE
+
+- Set files with the initctl_t type, if you want to treat the files as initctl data.
+
+
+.EX
+.PP
+.B initrc_devpts_t 
+.EE
+
+- Set files with the initrc_devpts_t type, if you want to treat the files as initrc devpts data.
+
+
+.EX
+.PP
+.B initrc_exec_t 
+.EE
+
+- Set files with the initrc_exec_t type, if you want to transition an executable to the initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/startx, /etc/rc\.d/rc, /usr/libexec/dcc/stop-.*, /etc/sysconfig/network-scripts/ifup-ipsec, /usr/sbin/start-dirsrv, /usr/sbin/open_init_pty, /usr/sbin/ldap-agent, /usr/share/system-config-services/system-config-services-mechanism\.py, /etc/rc\.d/rc\.[^/]+, /etc/rc\.d/init\.d/.*, /usr/libexec/dcc/start-.*, /usr/sbin/restart-dirsrv, /etc/X11/prefdm, /usr/sbin/apachectl, /etc/init\.d/.*, /usr/bin/sepg_ctl
+
+.EX
+.PP
+.B initrc_state_t 
+.EE
+
+- Set files with the initrc_state_t type, if you want to treat the files as initrc state data.
+
+
+.EX
+.PP
+.B initrc_tmp_t 
+.EE
+
+- Set files with the initrc_tmp_t type, if you want to store initrc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B initrc_var_run_t 
+.EE
+
+- Set files with the initrc_var_run_t type, if you want to store the initrc files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/setmixer_flag, /var/run/runlevel\.dir, /var/run/random-seed, /var/run/utmp
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux init policy is very flexible allowing users to setup their init processes in as secure a method as possible.
+.PP 
+The following process types are defined for init:
+
+.EX
+.B initrc_t, init_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), init(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/innd_selinux.8 serefpolicy-3.7.19/man/man8/innd_selinux.8
--- nsaserefpolicy/man/man8/innd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/innd_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,145 @@
+.TH  "innd_selinux"  "8"  "innd" "dwalsh@redhat.com" "innd SELinux Policy documentation"
+.SH "NAME"
+innd_selinux \- Security Enhanced Linux Policy for the innd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
+.PP 
+The following file types are defined for innd:
+
+
+.EX
+.PP
+.B innd_etc_t 
+.EE
+
+- Set files with the innd_etc_t type, if you want to store innd files in the /etc directories.
+
+
+.EX
+.PP
+.B innd_exec_t 
+.EE
+
+- Set files with the innd_exec_t type, if you want to transition an executable to the innd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/news/bin/startinnfeed, /usr/bin/suck, /usr/lib(64)?/news/bin/expireover, /usr/lib(64)?/news/bin/nntpget, /usr/sbin/in\.nnrpd, /usr/lib(64)?/news/bin/batcher, /usr/lib64/news/bin/innd, /usr/lib/news/bin/innd, /usr/lib(64)?/news/bin/overchan, /usr/lib(64)?/news/bin/newsrequeue, /usr/lib(64)?/news/bin/innxmit, /usr/lib(64)?/news/bin/archive, /usr/lib(64)?/news/bin/getlist, /usr/lib(64)?/news/bin/buffchan, /usr/bin/inews, /usr/sbin/innd.*, /usr/lib(64)?/news/bin/inndstart, /usr/lib(64)?/news/bin/inndf, /usr/lib(64)?/news/bin/shlock, /usr/bin/rpost, /etc/news/boot, /usr/lib(64)?/news/bin/makedbz, /usr/lib(64)?/news/bin/innfeed, /usr/lib64/news/bin/sm, /usr/lib(64)?/news/bin/convdate, /usr/bin/rnews, /usr/lib(64)?/news/bin/expire, /usr/lib(64)?/news/bin/actsync, /usr/lib(64)?/news/bin/ctlinnd, /usr/lib(64)?/news/bin/inews, /usr/lib(64)?/news/bin/filechan, /usr/lib(64)?/news/bin/grephistory, /usr/lib/news/bin/sm, /usr/lib(64)?/news/bin/ovdb_recover, /usr/lib(64)?/news/bin/cvtbatch, /usr/lib(64)?/news/bin/prunehistory, /usr/lib(64)?/news/bin/innxbatch, /usr/lib(64)?/news/bin/nnrpd, /usr/lib(64)?/news/bin/innconfval, /usr/lib(64)?/news/bin/makehistory, /usr/lib(64)?/news/bin/fastrm, /usr/lib(64)?/news/bin/rnews, /usr/lib(64)?/news/bin/shrinkfile
+
+.EX
+.PP
+.B innd_initrc_exec_t 
+.EE
+
+- Set files with the innd_initrc_exec_t type, if you want to transition an executable to the innd_initrc_t domain.
+
+
+.EX
+.PP
+.B innd_log_t 
+.EE
+
+- Set files with the innd_log_t type, if you want to treat the data as innd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B innd_var_lib_t 
+.EE
+
+- Set files with the innd_var_lib_t type, if you want to store the innd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B innd_var_run_t 
+.EE
+
+- Set files with the innd_var_run_t type, if you want to store the innd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/innd(/.*)?, /var/run/news(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
+.PP 
+The following port types are defined for innd:
+
+.EX
+.TP 5
+.B innd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
+.PP 
+The following process types are defined for innd:
+
+.EX
+.B innd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), innd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/insmod_selinux.8 serefpolicy-3.7.19/man/man8/insmod_selinux.8
--- nsaserefpolicy/man/man8/insmod_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/insmod_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,105 @@
+.TH  "insmod_selinux"  "8"  "insmod" "dwalsh@redhat.com" "insmod SELinux Policy documentation"
+.SH "NAME"
+insmod_selinux \- Security Enhanced Linux Policy for the insmod processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  insmod policy is extremely flexible and has several booleans that allow you to manipulate the policy and run insmod with the tightest access possible.
+
+
+.PP
+If you want to disable transitions to insmod, you must turn on the secure_mode_insmod boolean.
+
+.EX
+.B setsebool -P secure_mode_insmod 1
+.EE
+
+.PP
+If you want to allow pppd to load kernel modules for certain modem, you must turn on the pppd_can_insmod boolean.
+
+.EX
+.B setsebool -P pppd_can_insmod 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux insmod policy is very flexible allowing users to setup their insmod processes in as secure a method as possible.
+.PP 
+The following file types are defined for insmod:
+
+
+.EX
+.PP
+.B insmod_exec_t 
+.EE
+
+- Set files with the insmod_exec_t type, if you want to transition an executable to the insmod_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/modprobe.*, /sbin/rmmod.*, /sbin/insmod.*
+
+.EX
+.PP
+.B insmod_tmpfs_t 
+.EE
+
+- Set files with the insmod_tmpfs_t type, if you want to store insmod files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux insmod policy is very flexible allowing users to setup their insmod processes in as secure a method as possible.
+.PP 
+The following process types are defined for insmod:
+
+.EX
+.B insmod_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), insmod(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ipsec_selinux.8 serefpolicy-3.7.19/man/man8/ipsec_selinux.8
--- nsaserefpolicy/man/man8/ipsec_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ipsec_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,199 @@
+.TH  "ipsec_selinux"  "8"  "ipsec" "dwalsh@redhat.com" "ipsec SELinux Policy documentation"
+.SH "NAME"
+ipsec_selinux \- Security Enhanced Linux Policy for the ipsec processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ipsec
+(TCP/IP encryption)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
+.PP 
+The following file types are defined for ipsec:
+
+
+.EX
+.PP
+.B ipsec_conf_file_t 
+.EE
+
+- Set files with the ipsec_conf_file_t type, if you want to treat the files as ipsec conf content.
+
+.br
+.TP 5
+Paths: 
+/etc/ipsec\.conf, /etc/racoon(/.*)?
+
+.EX
+.PP
+.B ipsec_exec_t 
+.EE
+
+- Set files with the ipsec_exec_t type, if you want to transition an executable to the ipsec_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/ipsec/eroute, /usr/lib(64)?/ipsec/pluto, /usr/lib(64)?/ipsec/spi, /usr/local/lib(64)?/ipsec/eroute, /usr/libexec/ipsec/eroute, /usr/libexec/ipsec/pluto, /usr/local/lib(64)?/ipsec/klipsdebug, /usr/local/lib(64)?/ipsec/spi, /usr/local/lib(64)?/ipsec/pluto, /usr/libexec/ipsec/spi, /usr/lib(64)?/ipsec/klipsdebug, /usr/libexec/ipsec/klipsdebug
+
+.EX
+.PP
+.B ipsec_initrc_exec_t 
+.EE
+
+- Set files with the ipsec_initrc_exec_t type, if you want to transition an executable to the ipsec_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/racoon, /etc/rc\.d/init\.d/ipsec
+
+.EX
+.PP
+.B ipsec_key_file_t 
+.EE
+
+- Set files with the ipsec_key_file_t type, if you want to treat the files as ipsec key content.
+
+.br
+.TP 5
+Paths: 
+/etc/ipsec\.secrets, /etc/racoon/certs(/.*)?, /etc/racoon/psk\.txt, /etc/ipsec\.d(/.*)?
+
+.EX
+.PP
+.B ipsec_log_t 
+.EE
+
+- Set files with the ipsec_log_t type, if you want to treat the data as ipsec log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ipsec_mgmt_exec_t 
+.EE
+
+- Set files with the ipsec_mgmt_exec_t type, if you want to transition an executable to the ipsec_mgmt_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/ipsec/_plutoload, /usr/libexec/nm-openswan-service, /usr/lib(64)?/ipsec/_plutoload, /usr/sbin/ipsec, /usr/libexec/ipsec/_plutorun, /usr/lib(64)?/ipsec/_plutorun
+
+.EX
+.PP
+.B ipsec_mgmt_lock_t 
+.EE
+
+- Set files with the ipsec_mgmt_lock_t type, if you want to treat the files as ipsec mgmt lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B ipsec_mgmt_var_run_t 
+.EE
+
+- Set files with the ipsec_mgmt_var_run_t type, if you want to store the ipsec mgmt files under the /run directory.
+
+
+.EX
+.PP
+.B ipsec_tmp_t 
+.EE
+
+- Set files with the ipsec_tmp_t type, if you want to store ipsec temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ipsec_var_run_t 
+.EE
+
+- Set files with the ipsec_var_run_t type, if you want to store the ipsec files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/racoon\.pid, /var/run/pluto(/.*)?, /var/racoon(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
+.PP 
+The following port types are defined for ipsec:
+
+.EX
+.TP 5
+.B ipsecnat_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
+.PP 
+The following process types are defined for ipsec:
+
+.EX
+.B ipsec_t, ipsec_mgmt_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ipsec(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/iptables_selinux.8 serefpolicy-3.7.19/man/man8/iptables_selinux.8
--- nsaserefpolicy/man/man8/iptables_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/iptables_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,120 @@
+.TH  "iptables_selinux"  "8"  "iptables" "dwalsh@redhat.com" "iptables SELinux Policy documentation"
+.SH "NAME"
+iptables_selinux \- Security Enhanced Linux Policy for the iptables processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B iptables
+(Policy for iptables)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  iptables policy is extremely flexible and has several booleans that allow you to manipulate the policy and run iptables with the tightest access possible.
+
+
+.PP
+If you want to allow dhcpc client applications to execute iptables command, you must turn on the dhcpc_exec_iptables boolean.
+
+.EX
+.B setsebool -P dhcpc_exec_iptables 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux iptables policy is very flexible allowing users to setup their iptables processes in as secure a method as possible.
+.PP 
+The following file types are defined for iptables:
+
+
+.EX
+.PP
+.B iptables_exec_t 
+.EE
+
+- Set files with the iptables_exec_t type, if you want to transition an executable to the iptables_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/ebtables-restore, /usr/sbin/ipchains.*, /usr/sbin/iptables-restore, /sbin/ipvsadm-save, /sbin/ipchains.*, /sbin/ip6?tables, /usr/sbin/iptables, /sbin/ipvsadm, /usr/sbin/iptables-multi, /sbin/ipvsadm-restore, /sbin/ebtables, /sbin/ip6?tables-multi, /sbin/ip6?tables-restore
+
+.EX
+.PP
+.B iptables_initrc_exec_t 
+.EE
+
+- Set files with the iptables_initrc_exec_t type, if you want to transition an executable to the iptables_initrc_t domain.
+
+
+.EX
+.PP
+.B iptables_tmp_t 
+.EE
+
+- Set files with the iptables_tmp_t type, if you want to store iptables temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B iptables_var_run_t 
+.EE
+
+- Set files with the iptables_var_run_t type, if you want to store the iptables files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux iptables policy is very flexible allowing users to setup their iptables processes in as secure a method as possible.
+.PP 
+The following process types are defined for iptables:
+
+.EX
+.B iptables_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), iptables(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/irc_selinux.8 serefpolicy-3.7.19/man/man8/irc_selinux.8
--- nsaserefpolicy/man/man8/irc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/irc_selinux.8	2012-03-20 22:37:14.344458421 +0000
@@ -0,0 +1,123 @@
+.TH  "irc_selinux"  "8"  "irc" "dwalsh@redhat.com" "irc SELinux Policy documentation"
+.SH "NAME"
+irc_selinux \- Security Enhanced Linux Policy for the irc processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B irc
+(IRC client policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
+.PP 
+The following file types are defined for irc:
+
+
+.EX
+.PP
+.B irc_exec_t 
+.EE
+
+- Set files with the irc_exec_t type, if you want to transition an executable to the irc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/ircII, /usr/bin/tinyirc, /usr/bin/[st]irc
+
+.EX
+.PP
+.B irc_home_t 
+.EE
+
+- Set files with the irc_home_t type, if you want to store irc files in the users home directory.
+
+
+.EX
+.PP
+.B irc_tmp_t 
+.EE
+
+- Set files with the irc_tmp_t type, if you want to store irc temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
+.PP 
+The following port types are defined for irc:
+
+.EX
+.TP 5
+.B ircd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
+.PP 
+The following process types are defined for irc:
+
+.EX
+.B irc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), irc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/irqbalance_selinux.8 serefpolicy-3.7.19/man/man8/irqbalance_selinux.8
--- nsaserefpolicy/man/man8/irqbalance_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/irqbalance_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,85 @@
+.TH  "irqbalance_selinux"  "8"  "irqbalance" "dwalsh@redhat.com" "irqbalance SELinux Policy documentation"
+.SH "NAME"
+irqbalance_selinux \- Security Enhanced Linux Policy for the irqbalance processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B irqbalance
+(IRQ balancing daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux irqbalance policy is very flexible allowing users to setup their irqbalance processes in as secure a method as possible.
+.PP 
+The following file types are defined for irqbalance:
+
+
+.EX
+.PP
+.B irqbalance_exec_t 
+.EE
+
+- Set files with the irqbalance_exec_t type, if you want to transition an executable to the irqbalance_t domain.
+
+
+.EX
+.PP
+.B irqbalance_var_run_t 
+.EE
+
+- Set files with the irqbalance_var_run_t type, if you want to store the irqbalance files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux irqbalance policy is very flexible allowing users to setup their irqbalance processes in as secure a method as possible.
+.PP 
+The following process types are defined for irqbalance:
+
+.EX
+.B irqbalance_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), irqbalance(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/irssi_selinux.8 serefpolicy-3.7.19/man/man8/irssi_selinux.8
--- nsaserefpolicy/man/man8/irssi_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/irssi_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,102 @@
+.TH  "irssi_selinux"  "8"  "irssi" "dwalsh@redhat.com" "irssi SELinux Policy documentation"
+.SH "NAME"
+irssi_selinux \- Security Enhanced Linux Policy for the irssi processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  irssi policy is extremely flexible and has several booleans that allow you to manipulate the policy and run irssi with the tightest access possible.
+
+
+.PP
+If you want to allow the Irssi IRC Client to connect to any port, and to bind to any unreserved port, you must turn on the irssi_use_full_network boolean.
+
+.EX
+.B setsebool -P irssi_use_full_network 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux irssi policy is very flexible allowing users to setup their irssi processes in as secure a method as possible.
+.PP 
+The following file types are defined for irssi:
+
+
+.EX
+.PP
+.B irssi_etc_t 
+.EE
+
+- Set files with the irssi_etc_t type, if you want to store irssi files in the /etc directories.
+
+
+.EX
+.PP
+.B irssi_exec_t 
+.EE
+
+- Set files with the irssi_exec_t type, if you want to transition an executable to the irssi_t domain.
+
+
+.EX
+.PP
+.B irssi_home_t 
+.EE
+
+- Set files with the irssi_home_t type, if you want to store irssi files in the users home directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux irssi policy is very flexible allowing users to setup their irssi processes in as secure a method as possible.
+.PP 
+The following process types are defined for irssi:
+
+.EX
+.B irssi_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), irssi(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/iscsid_selinux.8 serefpolicy-3.7.19/man/man8/iscsid_selinux.8
--- nsaserefpolicy/man/man8/iscsid_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/iscsid_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,141 @@
+.TH  "iscsid_selinux"  "8"  "iscsid" "dwalsh@redhat.com" "iscsid SELinux Policy documentation"
+.SH "NAME"
+iscsid_selinux \- Security Enhanced Linux Policy for the iscsid processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
+.PP 
+The following file types are defined for iscsid:
+
+
+.EX
+.PP
+.B iscsi_lock_t 
+.EE
+
+- Set files with the iscsi_lock_t type, if you want to treat the files as iscsi lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B iscsi_log_t 
+.EE
+
+- Set files with the iscsi_log_t type, if you want to treat the data as iscsi log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B iscsi_tmp_t 
+.EE
+
+- Set files with the iscsi_tmp_t type, if you want to store iscsi temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B iscsi_var_lib_t 
+.EE
+
+- Set files with the iscsi_var_lib_t type, if you want to store the iscsi files under the /var/lib directory.
+
+
+.EX
+.PP
+.B iscsi_var_run_t 
+.EE
+
+- Set files with the iscsi_var_run_t type, if you want to store the iscsi files under the /run directory.
+
+
+.EX
+.PP
+.B iscsid_exec_t 
+.EE
+
+- Set files with the iscsid_exec_t type, if you want to transition an executable to the iscsid_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/iscsid, /sbin/brcm_iscsiuio, /sbin/iscsiuio
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
+.PP 
+The following port types are defined for iscsid:
+
+.EX
+.TP 5
+.B iscsi_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
+.PP 
+The following process types are defined for iscsid:
+
+.EX
+.B iscsid_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), iscsid(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/iwhd_selinux.8 serefpolicy-3.7.19/man/man8/iwhd_selinux.8
--- nsaserefpolicy/man/man8/iwhd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/iwhd_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,103 @@
+.TH  "iwhd_selinux"  "8"  "iwhd" "dwalsh@redhat.com" "iwhd SELinux Policy documentation"
+.SH "NAME"
+iwhd_selinux \- Security Enhanced Linux Policy for the iwhd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux iwhd policy is very flexible allowing users to setup their iwhd processes in as secure a method as possible.
+.PP 
+The following file types are defined for iwhd:
+
+
+.EX
+.PP
+.B iwhd_exec_t 
+.EE
+
+- Set files with the iwhd_exec_t type, if you want to transition an executable to the iwhd_t domain.
+
+
+.EX
+.PP
+.B iwhd_initrc_exec_t 
+.EE
+
+- Set files with the iwhd_initrc_exec_t type, if you want to transition an executable to the iwhd_initrc_t domain.
+
+
+.EX
+.PP
+.B iwhd_log_t 
+.EE
+
+- Set files with the iwhd_log_t type, if you want to treat the data as iwhd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B iwhd_var_lib_t 
+.EE
+
+- Set files with the iwhd_var_lib_t type, if you want to store the iwhd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B iwhd_var_run_t 
+.EE
+
+- Set files with the iwhd_var_run_t type, if you want to store the iwhd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux iwhd policy is very flexible allowing users to setup their iwhd processes in as secure a method as possible.
+.PP 
+The following process types are defined for iwhd:
+
+.EX
+.B iwhd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), iwhd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/jabberd_selinux.8 serefpolicy-3.7.19/man/man8/jabberd_selinux.8
--- nsaserefpolicy/man/man8/jabberd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/jabberd_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,171 @@
+.TH  "jabberd_selinux"  "8"  "jabberd" "dwalsh@redhat.com" "jabberd SELinux Policy documentation"
+.SH "NAME"
+jabberd_selinux \- Security Enhanced Linux Policy for the jabberd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
+.PP 
+The following file types are defined for jabberd:
+
+
+.EX
+.PP
+.B jabberd_exec_t 
+.EE
+
+- Set files with the jabberd_exec_t type, if you want to transition an executable to the jabberd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/jabberd, /usr/bin/s2s, /usr/bin/sm
+
+.EX
+.PP
+.B jabberd_initrc_exec_t 
+.EE
+
+- Set files with the jabberd_initrc_exec_t type, if you want to transition an executable to the jabberd_initrc_t domain.
+
+
+.EX
+.PP
+.B jabberd_log_t 
+.EE
+
+- Set files with the jabberd_log_t type, if you want to treat the data as jabberd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B jabberd_router_exec_t 
+.EE
+
+- Set files with the jabberd_router_exec_t type, if you want to transition an executable to the jabberd_router_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/c2s, /usr/bin/router
+
+.EX
+.PP
+.B jabberd_var_lib_t 
+.EE
+
+- Set files with the jabberd_var_lib_t type, if you want to store the jabberd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/jabberd(/.*)?, /var/lib/jabber(/.*)?
+
+.EX
+.PP
+.B jabberd_var_run_t 
+.EE
+
+- Set files with the jabberd_var_run_t type, if you want to store the jabberd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
+.PP 
+The following port types are defined for jabberd:
+
+.EX
+.TP 5
+.B jabber_client_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B jabber_interserver_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B jabber_router_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
+.PP 
+The following process types are defined for jabberd:
+
+.EX
+.B jabberd_router_t, jabberd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), jabberd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/java_selinux.8 serefpolicy-3.7.19/man/man8/java_selinux.8
--- nsaserefpolicy/man/man8/java_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/java_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,112 @@
+.TH  "java_selinux"  "8"  "java" "dwalsh@redhat.com" "java SELinux Policy documentation"
+.SH "NAME"
+java_selinux \- Security Enhanced Linux Policy for the java processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B java
+(Java virtual machine)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  java policy is extremely flexible and has several booleans that allow you to manipulate the policy and run java with the tightest access possible.
+
+
+.PP
+If you want to allow java executable stac, you must turn on the allow_java_execstack boolean.
+
+.EX
+.B setsebool -P allow_java_execstack 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux java policy is very flexible allowing users to setup their java processes in as secure a method as possible.
+.PP 
+The following file types are defined for java:
+
+
+.EX
+.PP
+.B java_exec_t 
+.EE
+
+- Set files with the java_exec_t type, if you want to transition an executable to the java_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/gcj-dbtool, /usr/bin/fastjar, /usr/bin/gij, /usr/(.*/)?bin/java.*, /usr/lib/jvm/java(.*/)bin(/.*)?, /usr/bin/jv-convert, /usr/bin/gkeytool, /usr/lib/opera(/.*)?/opera, /opt/local/matlab.*/bin.*/MATLAB.*, /usr/matlab.*/bin.*/MATLAB.*, /usr/bin/gjarsigner, /usr/java/eclipse[^/]*/eclipse, /usr/lib/opera(/.*)?/works, /opt/(.*/)?bin/java[^/]*, /usr/lib64/jvm/java(.*/)bin(/.*)?, /opt/ibm/lotus/Symphony/framework/rcp/eclipse/plugins(/.*)?, /usr/bin/octave-[^/]*, /usr/bin/grmic, /usr/local/matlab.*/bin.*/MATLAB.*, /usr/Aptana[^/]*/AptanaStudio, /opt/ibm/java.*/(bin|javaws)(/.*)?, /usr/bin/grmiregistry, /usr/bin/gappletviewer, /opt/matlab.*/bin.*/MATLAB.*, /usr/lib/eclipse/eclipse, /usr/bin/frysk, /usr/lib(.*/)?bin/java[^/]*
+
+.EX
+.PP
+.B java_tmp_t 
+.EE
+
+- Set files with the java_tmp_t type, if you want to store java temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B java_tmpfs_t 
+.EE
+
+- Set files with the java_tmpfs_t type, if you want to store java files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux java policy is very flexible allowing users to setup their java processes in as secure a method as possible.
+.PP 
+The following process types are defined for java:
+
+.EX
+.B java_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), java(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/kadmind_selinux.8 serefpolicy-3.7.19/man/man8/kadmind_selinux.8
--- nsaserefpolicy/man/man8/kadmind_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/kadmind_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,99 @@
+.TH  "kadmind_selinux"  "8"  "kadmind" "dwalsh@redhat.com" "kadmind SELinux Policy documentation"
+.SH "NAME"
+kadmind_selinux \- Security Enhanced Linux Policy for the kadmind processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kadmind policy is very flexible allowing users to setup their kadmind processes in as secure a method as possible.
+.PP 
+The following file types are defined for kadmind:
+
+
+.EX
+.PP
+.B kadmind_exec_t 
+.EE
+
+- Set files with the kadmind_exec_t type, if you want to transition an executable to the kadmind_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/(local/)?(kerberos/)?sbin/kadmind, /usr/kerberos/sbin/kadmin\.local
+
+.EX
+.PP
+.B kadmind_log_t 
+.EE
+
+- Set files with the kadmind_log_t type, if you want to treat the data as kadmind log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B kadmind_tmp_t 
+.EE
+
+- Set files with the kadmind_tmp_t type, if you want to store kadmind temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B kadmind_var_run_t 
+.EE
+
+- Set files with the kadmind_var_run_t type, if you want to store the kadmind files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kadmind policy is very flexible allowing users to setup their kadmind processes in as secure a method as possible.
+.PP 
+The following process types are defined for kadmind:
+
+.EX
+.B kadmind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kadmind(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/kdumpgui_selinux.8 serefpolicy-3.7.19/man/man8/kdumpgui_selinux.8
--- nsaserefpolicy/man/man8/kdumpgui_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/kdumpgui_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,85 @@
+.TH  "kdumpgui_selinux"  "8"  "kdumpgui" "dwalsh@redhat.com" "kdumpgui SELinux Policy documentation"
+.SH "NAME"
+kdumpgui_selinux \- Security Enhanced Linux Policy for the kdumpgui processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B kdumpgui
+(system-config-kdump policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kdumpgui policy is very flexible allowing users to setup their kdumpgui processes in as secure a method as possible.
+.PP 
+The following file types are defined for kdumpgui:
+
+
+.EX
+.PP
+.B kdumpgui_exec_t 
+.EE
+
+- Set files with the kdumpgui_exec_t type, if you want to transition an executable to the kdumpgui_t domain.
+
+
+.EX
+.PP
+.B kdumpgui_tmp_t 
+.EE
+
+- Set files with the kdumpgui_tmp_t type, if you want to store kdumpgui temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kdumpgui policy is very flexible allowing users to setup their kdumpgui processes in as secure a method as possible.
+.PP 
+The following process types are defined for kdumpgui:
+
+.EX
+.B kdumpgui_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kdumpgui(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/kdump_selinux.8 serefpolicy-3.7.19/man/man8/kdump_selinux.8
--- nsaserefpolicy/man/man8/kdump_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/kdump_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,113 @@
+.TH  "kdump_selinux"  "8"  "kdump" "dwalsh@redhat.com" "kdump SELinux Policy documentation"
+.SH "NAME"
+kdump_selinux \- Security Enhanced Linux Policy for the kdump processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B kdump
+(Kernel crash dumping mechanism)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kdump policy is very flexible allowing users to setup their kdump processes in as secure a method as possible.
+.PP 
+The following file types are defined for kdump:
+
+
+.EX
+.PP
+.B kdump_etc_t 
+.EE
+
+- Set files with the kdump_etc_t type, if you want to store kdump files in the /etc directories.
+
+
+.EX
+.PP
+.B kdump_exec_t 
+.EE
+
+- Set files with the kdump_exec_t type, if you want to transition an executable to the kdump_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/kdump, /sbin/kexec
+
+.EX
+.PP
+.B kdump_initrc_exec_t 
+.EE
+
+- Set files with the kdump_initrc_exec_t type, if you want to transition an executable to the kdump_initrc_t domain.
+
+
+.EX
+.PP
+.B kdumpgui_exec_t 
+.EE
+
+- Set files with the kdumpgui_exec_t type, if you want to transition an executable to the kdumpgui_t domain.
+
+
+.EX
+.PP
+.B kdumpgui_tmp_t 
+.EE
+
+- Set files with the kdumpgui_tmp_t type, if you want to store kdumpgui temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kdump policy is very flexible allowing users to setup their kdump processes in as secure a method as possible.
+.PP 
+The following process types are defined for kdump:
+
+.EX
+.B kdumpgui_t, kdump_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kdump(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/kerberos_selinux.8 serefpolicy-3.7.19/man/man8/kerberos_selinux.8
--- nsaserefpolicy/man/man8/kerberos_selinux.8	2011-03-17 07:21:23.227851002 +0000
+++ serefpolicy-3.7.19/man/man8/kerberos_selinux.8	1970-01-01 00:00:00.000000000 +0000
@@ -1,28 +0,0 @@
-.TH  "kerberos_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "kerberos Selinux Policy documentation"
-.de EX
-.nf
-.ft CW
-..
-.de EE
-.ft R
-.fi
-..
-.SH "NAME"
-kerberos_selinux \- Security Enhanced Linux Policy for Kerberos.
-.SH "DESCRIPTION"
-
-Security-Enhanced Linux secures the system via flexible mandatory access
-control. SELinux policy can be configured to deny Kerberos access to confined applications, since it requires daemons to be allowed greater access to certain secure files and additional access to the network.  
-.SH BOOLEANS
-.PP
-You must set the allow_kerberos boolean to allow your system to work properly in a Kerberos environment.
-.EX
-setsebool -P allow_kerberos 1
-.EE
-.PP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
-.SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
-
-.SH "SEE ALSO"
-selinux(8), kerberos(1), chcon(1), setsebool(8)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/kerneloops_selinux.8 serefpolicy-3.7.19/man/man8/kerneloops_selinux.8
--- nsaserefpolicy/man/man8/kerneloops_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/kerneloops_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,93 @@
+.TH  "kerneloops_selinux"  "8"  "kerneloops" "dwalsh@redhat.com" "kerneloops SELinux Policy documentation"
+.SH "NAME"
+kerneloops_selinux \- Security Enhanced Linux Policy for the kerneloops processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B kerneloops
+(Service for reporting kernel oopses to kerneloops.org)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kerneloops policy is very flexible allowing users to setup their kerneloops processes in as secure a method as possible.
+.PP 
+The following file types are defined for kerneloops:
+
+
+.EX
+.PP
+.B kerneloops_exec_t 
+.EE
+
+- Set files with the kerneloops_exec_t type, if you want to transition an executable to the kerneloops_t domain.
+
+
+.EX
+.PP
+.B kerneloops_initrc_exec_t 
+.EE
+
+- Set files with the kerneloops_initrc_exec_t type, if you want to transition an executable to the kerneloops_initrc_t domain.
+
+
+.EX
+.PP
+.B kerneloops_tmp_t 
+.EE
+
+- Set files with the kerneloops_tmp_t type, if you want to store kerneloops temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kerneloops policy is very flexible allowing users to setup their kerneloops processes in as secure a method as possible.
+.PP 
+The following process types are defined for kerneloops:
+
+.EX
+.B kerneloops_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kerneloops(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/kismet_selinux.8 serefpolicy-3.7.19/man/man8/kismet_selinux.8
--- nsaserefpolicy/man/man8/kismet_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/kismet_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,151 @@
+.TH  "kismet_selinux"  "8"  "kismet" "dwalsh@redhat.com" "kismet SELinux Policy documentation"
+.SH "NAME"
+kismet_selinux \- Security Enhanced Linux Policy for the kismet processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B kismet
+(Kismet is an 802.11 layer2 wireless network detector, sniffer, and intrusion detection system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
+.PP 
+The following file types are defined for kismet:
+
+
+.EX
+.PP
+.B kismet_exec_t 
+.EE
+
+- Set files with the kismet_exec_t type, if you want to transition an executable to the kismet_t domain.
+
+
+.EX
+.PP
+.B kismet_home_t 
+.EE
+
+- Set files with the kismet_home_t type, if you want to store kismet files in the users home directory.
+
+
+.EX
+.PP
+.B kismet_log_t 
+.EE
+
+- Set files with the kismet_log_t type, if you want to treat the data as kismet log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B kismet_tmp_t 
+.EE
+
+- Set files with the kismet_tmp_t type, if you want to store kismet temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B kismet_tmpfs_t 
+.EE
+
+- Set files with the kismet_tmpfs_t type, if you want to store kismet files on a tmpfs file system.
+
+
+.EX
+.PP
+.B kismet_var_lib_t 
+.EE
+
+- Set files with the kismet_var_lib_t type, if you want to store the kismet files under the /var/lib directory.
+
+
+.EX
+.PP
+.B kismet_var_run_t 
+.EE
+
+- Set files with the kismet_var_run_t type, if you want to store the kismet files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
+.PP 
+The following port types are defined for kismet:
+
+.EX
+.TP 5
+.B kismet_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
+.PP 
+The following process types are defined for kismet:
+
+.EX
+.B kismet_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kismet(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/klogd_selinux.8 serefpolicy-3.7.19/man/man8/klogd_selinux.8
--- nsaserefpolicy/man/man8/klogd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/klogd_selinux.8	2012-03-20 22:37:14.345458398 +0000
@@ -0,0 +1,91 @@
+.TH  "klogd_selinux"  "8"  "klogd" "dwalsh@redhat.com" "klogd SELinux Policy documentation"
+.SH "NAME"
+klogd_selinux \- Security Enhanced Linux Policy for the klogd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux klogd policy is very flexible allowing users to setup their klogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for klogd:
+
+
+.EX
+.PP
+.B klogd_exec_t 
+.EE
+
+- Set files with the klogd_exec_t type, if you want to transition an executable to the klogd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/rklogd, /sbin/klogd, /sbin/rklogd, /usr/sbin/klogd
+
+.EX
+.PP
+.B klogd_tmp_t 
+.EE
+
+- Set files with the klogd_tmp_t type, if you want to store klogd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B klogd_var_run_t 
+.EE
+
+- Set files with the klogd_var_run_t type, if you want to store the klogd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux klogd policy is very flexible allowing users to setup their klogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for klogd:
+
+.EX
+.B klogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), klogd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/kpropd_selinux.8 serefpolicy-3.7.19/man/man8/kpropd_selinux.8
--- nsaserefpolicy/man/man8/kpropd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/kpropd_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,97 @@
+.TH  "kpropd_selinux"  "8"  "kpropd" "dwalsh@redhat.com" "kpropd SELinux Policy documentation"
+.SH "NAME"
+kpropd_selinux \- Security Enhanced Linux Policy for the kpropd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
+.PP 
+The following file types are defined for kpropd:
+
+
+.EX
+.PP
+.B kpropd_exec_t 
+.EE
+
+- Set files with the kpropd_exec_t type, if you want to transition an executable to the kpropd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
+.PP 
+The following port types are defined for kpropd:
+
+.EX
+.TP 5
+.B kprop_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
+.PP 
+The following process types are defined for kpropd:
+
+.EX
+.B kpropd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kpropd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/krb5kdc_selinux.8 serefpolicy-3.7.19/man/man8/krb5kdc_selinux.8
--- nsaserefpolicy/man/man8/krb5kdc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/krb5kdc_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,131 @@
+.TH  "krb5kdc_selinux"  "8"  "krb5kdc" "dwalsh@redhat.com" "krb5kdc SELinux Policy documentation"
+.SH "NAME"
+krb5kdc_selinux \- Security Enhanced Linux Policy for the krb5kdc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux krb5kdc policy is very flexible allowing users to setup their krb5kdc processes in as secure a method as possible.
+.PP 
+The following file types are defined for krb5kdc:
+
+
+.EX
+.PP
+.B krb5kdc_conf_t 
+.EE
+
+- Set files with the krb5kdc_conf_t type, if you want to treat the files as krb5kdc configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/var/kerberos/krb5kdc(/.*)?, /etc/krb5kdc(/.*)?, /usr/local/var/krb5kdc(/.*)?
+
+.EX
+.PP
+.B krb5kdc_exec_t 
+.EE
+
+- Set files with the krb5kdc_exec_t type, if you want to transition an executable to the krb5kdc_t domain.
+
+
+.EX
+.PP
+.B krb5kdc_lock_t 
+.EE
+
+- Set files with the krb5kdc_lock_t type, if you want to treat the files as krb5kdc lock data, stored under the /var/lock directory
+
+.br
+.TP 5
+Paths: 
+/var/kerberos/krb5kdc/principal.*\.ok, /var/kerberos/krb5kdc/from_master.*
+
+.EX
+.PP
+.B krb5kdc_log_t 
+.EE
+
+- Set files with the krb5kdc_log_t type, if you want to treat the data as krb5kdc log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B krb5kdc_principal_t 
+.EE
+
+- Set files with the krb5kdc_principal_t type, if you want to treat the files as krb5kdc principal data.
+
+.br
+.TP 5
+Paths: 
+/etc/krb5kdc/principal.*, /var/kerberos/krb5kdc/principal.*, /usr/local/var/krb5kdc/principal.*
+
+.EX
+.PP
+.B krb5kdc_tmp_t 
+.EE
+
+- Set files with the krb5kdc_tmp_t type, if you want to store krb5kdc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B krb5kdc_var_run_t 
+.EE
+
+- Set files with the krb5kdc_var_run_t type, if you want to store the krb5kdc files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux krb5kdc policy is very flexible allowing users to setup their krb5kdc processes in as secure a method as possible.
+.PP 
+The following process types are defined for krb5kdc:
+
+.EX
+.B krb5kdc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), krb5kdc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ksmtuned_selinux.8 serefpolicy-3.7.19/man/man8/ksmtuned_selinux.8
--- nsaserefpolicy/man/man8/ksmtuned_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ksmtuned_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,101 @@
+.TH  "ksmtuned_selinux"  "8"  "ksmtuned" "dwalsh@redhat.com" "ksmtuned SELinux Policy documentation"
+.SH "NAME"
+ksmtuned_selinux \- Security Enhanced Linux Policy for the ksmtuned processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ksmtuned
+(Kernel Samepage Merging (KSM) Tuning Daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ksmtuned policy is very flexible allowing users to setup their ksmtuned processes in as secure a method as possible.
+.PP 
+The following file types are defined for ksmtuned:
+
+
+.EX
+.PP
+.B ksmtuned_exec_t 
+.EE
+
+- Set files with the ksmtuned_exec_t type, if you want to transition an executable to the ksmtuned_t domain.
+
+
+.EX
+.PP
+.B ksmtuned_initrc_exec_t 
+.EE
+
+- Set files with the ksmtuned_initrc_exec_t type, if you want to transition an executable to the ksmtuned_initrc_t domain.
+
+
+.EX
+.PP
+.B ksmtuned_log_t 
+.EE
+
+- Set files with the ksmtuned_log_t type, if you want to treat the data as ksmtuned log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ksmtuned_var_run_t 
+.EE
+
+- Set files with the ksmtuned_var_run_t type, if you want to store the ksmtuned files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ksmtuned policy is very flexible allowing users to setup their ksmtuned processes in as secure a method as possible.
+.PP 
+The following process types are defined for ksmtuned:
+
+.EX
+.B ksmtuned_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ksmtuned(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ktalkd_selinux.8 serefpolicy-3.7.19/man/man8/ktalkd_selinux.8
--- nsaserefpolicy/man/man8/ktalkd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ktalkd_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,125 @@
+.TH  "ktalkd_selinux"  "8"  "ktalkd" "dwalsh@redhat.com" "ktalkd SELinux Policy documentation"
+.SH "NAME"
+ktalkd_selinux \- Security Enhanced Linux Policy for the ktalkd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ktalkd:
+
+
+.EX
+.PP
+.B ktalkd_exec_t 
+.EE
+
+- Set files with the ktalkd_exec_t type, if you want to transition an executable to the ktalkd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/in\.talkd, /usr/bin/ktalkd, /usr/sbin/in\.ntalkd
+
+.EX
+.PP
+.B ktalkd_log_t 
+.EE
+
+- Set files with the ktalkd_log_t type, if you want to treat the data as ktalkd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ktalkd_tmp_t 
+.EE
+
+- Set files with the ktalkd_tmp_t type, if you want to store ktalkd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ktalkd_var_run_t 
+.EE
+
+- Set files with the ktalkd_var_run_t type, if you want to store the ktalkd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
+.PP 
+The following port types are defined for ktalkd:
+
+.EX
+.TP 5
+.B ktalkd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ktalkd:
+
+.EX
+.B ktalkd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ktalkd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/kudzu_selinux.8 serefpolicy-3.7.19/man/man8/kudzu_selinux.8
--- nsaserefpolicy/man/man8/kudzu_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/kudzu_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,97 @@
+.TH  "kudzu_selinux"  "8"  "kudzu" "dwalsh@redhat.com" "kudzu SELinux Policy documentation"
+.SH "NAME"
+kudzu_selinux \- Security Enhanced Linux Policy for the kudzu processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B kudzu
+(Hardware detection and configuration tools)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kudzu policy is very flexible allowing users to setup their kudzu processes in as secure a method as possible.
+.PP 
+The following file types are defined for kudzu:
+
+
+.EX
+.PP
+.B kudzu_exec_t 
+.EE
+
+- Set files with the kudzu_exec_t type, if you want to transition an executable to the kudzu_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/kudzu, /sbin/kudzu, /sbin/kmodule
+
+.EX
+.PP
+.B kudzu_tmp_t 
+.EE
+
+- Set files with the kudzu_tmp_t type, if you want to store kudzu temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B kudzu_var_run_t 
+.EE
+
+- Set files with the kudzu_var_run_t type, if you want to store the kudzu files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kudzu policy is very flexible allowing users to setup their kudzu processes in as secure a method as possible.
+.PP 
+The following process types are defined for kudzu:
+
+.EX
+.B kudzu_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kudzu(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ldconfig_selinux.8 serefpolicy-3.7.19/man/man8/ldconfig_selinux.8
--- nsaserefpolicy/man/man8/ldconfig_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ldconfig_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,87 @@
+.TH  "ldconfig_selinux"  "8"  "ldconfig" "dwalsh@redhat.com" "ldconfig SELinux Policy documentation"
+.SH "NAME"
+ldconfig_selinux \- Security Enhanced Linux Policy for the ldconfig processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ldconfig policy is very flexible allowing users to setup their ldconfig processes in as secure a method as possible.
+.PP 
+The following file types are defined for ldconfig:
+
+
+.EX
+.PP
+.B ldconfig_cache_t 
+.EE
+
+- Set files with the ldconfig_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B ldconfig_exec_t 
+.EE
+
+- Set files with the ldconfig_exec_t type, if you want to transition an executable to the ldconfig_t domain.
+
+
+.EX
+.PP
+.B ldconfig_tmp_t 
+.EE
+
+- Set files with the ldconfig_tmp_t type, if you want to store ldconfig temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ldconfig policy is very flexible allowing users to setup their ldconfig processes in as secure a method as possible.
+.PP 
+The following process types are defined for ldconfig:
+
+.EX
+.B ldconfig_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ldconfig(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lircd_selinux.8 serefpolicy-3.7.19/man/man8/lircd_selinux.8
--- nsaserefpolicy/man/man8/lircd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lircd_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,131 @@
+.TH  "lircd_selinux"  "8"  "lircd" "dwalsh@redhat.com" "lircd SELinux Policy documentation"
+.SH "NAME"
+lircd_selinux \- Security Enhanced Linux Policy for the lircd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lircd
+(Linux infared remote control daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lircd:
+
+
+.EX
+.PP
+.B lircd_etc_t 
+.EE
+
+- Set files with the lircd_etc_t type, if you want to store lircd files in the /etc directories.
+
+
+.EX
+.PP
+.B lircd_exec_t 
+.EE
+
+- Set files with the lircd_exec_t type, if you want to transition an executable to the lircd_t domain.
+
+
+.EX
+.PP
+.B lircd_initrc_exec_t 
+.EE
+
+- Set files with the lircd_initrc_exec_t type, if you want to transition an executable to the lircd_initrc_t domain.
+
+
+.EX
+.PP
+.B lircd_var_run_t 
+.EE
+
+- Set files with the lircd_var_run_t type, if you want to store the lircd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/lirc(/.*)?, /var/run/lircd(/.*)?, /var/run/lircd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
+.PP 
+The following port types are defined for lircd:
+
+.EX
+.TP 5
+.B lirc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lircd:
+
+.EX
+.B lircd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lircd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/livecd_selinux.8 serefpolicy-3.7.19/man/man8/livecd_selinux.8
--- nsaserefpolicy/man/man8/livecd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/livecd_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,85 @@
+.TH  "livecd_selinux"  "8"  "livecd" "dwalsh@redhat.com" "livecd SELinux Policy documentation"
+.SH "NAME"
+livecd_selinux \- Security Enhanced Linux Policy for the livecd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B livecd
+(policy for livecd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux livecd policy is very flexible allowing users to setup their livecd processes in as secure a method as possible.
+.PP 
+The following file types are defined for livecd:
+
+
+.EX
+.PP
+.B livecd_exec_t 
+.EE
+
+- Set files with the livecd_exec_t type, if you want to transition an executable to the livecd_t domain.
+
+
+.EX
+.PP
+.B livecd_tmp_t 
+.EE
+
+- Set files with the livecd_tmp_t type, if you want to store livecd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux livecd policy is very flexible allowing users to setup their livecd processes in as secure a method as possible.
+.PP 
+The following process types are defined for livecd:
+
+.EX
+.B livecd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), livecd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lldpad_selinux.8 serefpolicy-3.7.19/man/man8/lldpad_selinux.8
--- nsaserefpolicy/man/man8/lldpad_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lldpad_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,109 @@
+.TH  "lldpad_selinux"  "8"  "lldpad" "dwalsh@redhat.com" "lldpad SELinux Policy documentation"
+.SH "NAME"
+lldpad_selinux \- Security Enhanced Linux Policy for the lldpad processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lldpad
+(policy for lldpad)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lldpad policy is very flexible allowing users to setup their lldpad processes in as secure a method as possible.
+.PP 
+The following file types are defined for lldpad:
+
+
+.EX
+.PP
+.B lldpad_exec_t 
+.EE
+
+- Set files with the lldpad_exec_t type, if you want to transition an executable to the lldpad_t domain.
+
+
+.EX
+.PP
+.B lldpad_initrc_exec_t 
+.EE
+
+- Set files with the lldpad_initrc_exec_t type, if you want to transition an executable to the lldpad_initrc_t domain.
+
+
+.EX
+.PP
+.B lldpad_tmpfs_t 
+.EE
+
+- Set files with the lldpad_tmpfs_t type, if you want to store lldpad files on a tmpfs file system.
+
+
+.EX
+.PP
+.B lldpad_var_lib_t 
+.EE
+
+- Set files with the lldpad_var_lib_t type, if you want to store the lldpad files under the /var/lib directory.
+
+
+.EX
+.PP
+.B lldpad_var_run_t 
+.EE
+
+- Set files with the lldpad_var_run_t type, if you want to store the lldpad files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lldpad policy is very flexible allowing users to setup their lldpad processes in as secure a method as possible.
+.PP 
+The following process types are defined for lldpad:
+
+.EX
+.B lldpad_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lldpad(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/loadkeys_selinux.8 serefpolicy-3.7.19/man/man8/loadkeys_selinux.8
--- nsaserefpolicy/man/man8/loadkeys_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/loadkeys_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,81 @@
+.TH  "loadkeys_selinux"  "8"  "loadkeys" "dwalsh@redhat.com" "loadkeys SELinux Policy documentation"
+.SH "NAME"
+loadkeys_selinux \- Security Enhanced Linux Policy for the loadkeys processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B loadkeys
+(Load keyboard mappings)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux loadkeys policy is very flexible allowing users to setup their loadkeys processes in as secure a method as possible.
+.PP 
+The following file types are defined for loadkeys:
+
+
+.EX
+.PP
+.B loadkeys_exec_t 
+.EE
+
+- Set files with the loadkeys_exec_t type, if you want to transition an executable to the loadkeys_t domain.
+
+.br
+.TP 5
+Paths: 
+/bin/unikeys, /bin/loadkeys
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux loadkeys policy is very flexible allowing users to setup their loadkeys processes in as secure a method as possible.
+.PP 
+The following process types are defined for loadkeys:
+
+.EX
+.B loadkeys_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), loadkeys(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/load_selinux.8 serefpolicy-3.7.19/man/man8/load_selinux.8
--- nsaserefpolicy/man/man8/load_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/load_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,116 @@
+.TH  "load_selinux"  "8"  "load" "dwalsh@redhat.com" "load SELinux Policy documentation"
+.SH "NAME"
+load_selinux \- Security Enhanced Linux Policy for the load processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  load policy is extremely flexible and has several booleans that allow you to manipulate the policy and run load with the tightest access possible.
+
+
+.PP
+If you want to boolean to determine whether the system permits loading policy, setting enforcing mode, and changing boolean values.  Set this to true and you have to reboot to set it bac, you must turn on the secure_mode_policyload boolean.
+
+.EX
+.B setsebool -P secure_mode_policyload 1
+.EE
+
+.PP
+If you want to allows xdm to execute bootloade, you must turn on the xdm_exec_bootloader boolean.
+
+.EX
+.B setsebool -P xdm_exec_bootloader 1
+.EE
+
+.PP
+If you want to allow all domains to have the kernel load module, you must turn on the domain_kernel_load_modules boolean.
+
+.EX
+.B setsebool -P domain_kernel_load_modules 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux load policy is very flexible allowing users to setup their load processes in as secure a method as possible.
+.PP 
+The following file types are defined for load:
+
+
+.EX
+.PP
+.B load_policy_exec_t 
+.EE
+
+- Set files with the load_policy_exec_t type, if you want to transition an executable to the load_policy_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/load_policy, /sbin/load_policy
+
+.EX
+.PP
+.B loadkeys_exec_t 
+.EE
+
+- Set files with the loadkeys_exec_t type, if you want to transition an executable to the loadkeys_t domain.
+
+.br
+.TP 5
+Paths: 
+/bin/unikeys, /bin/loadkeys
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux load policy is very flexible allowing users to setup their load processes in as secure a method as possible.
+.PP 
+The following process types are defined for load:
+
+.EX
+.B loadkeys_t, load_policy_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), load(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/locate_selinux.8 serefpolicy-3.7.19/man/man8/locate_selinux.8
--- nsaserefpolicy/man/man8/locate_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/locate_selinux.8	2012-03-20 22:37:14.346458375 +0000
@@ -0,0 +1,87 @@
+.TH  "locate_selinux"  "8"  "locate" "dwalsh@redhat.com" "locate SELinux Policy documentation"
+.SH "NAME"
+locate_selinux \- Security Enhanced Linux Policy for the locate processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux locate policy is very flexible allowing users to setup their locate processes in as secure a method as possible.
+.PP 
+The following file types are defined for locate:
+
+
+.EX
+.PP
+.B locate_exec_t 
+.EE
+
+- Set files with the locate_exec_t type, if you want to transition an executable to the locate_t domain.
+
+
+.EX
+.PP
+.B locate_log_t 
+.EE
+
+- Set files with the locate_log_t type, if you want to treat the data as locate log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B locate_var_lib_t 
+.EE
+
+- Set files with the locate_var_lib_t type, if you want to store the locate files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux locate policy is very flexible allowing users to setup their locate processes in as secure a method as possible.
+.PP 
+The following process types are defined for locate:
+
+.EX
+.B locate_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), locate(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lockdev_selinux.8 serefpolicy-3.7.19/man/man8/lockdev_selinux.8
--- nsaserefpolicy/man/man8/lockdev_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lockdev_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,85 @@
+.TH  "lockdev_selinux"  "8"  "lockdev" "dwalsh@redhat.com" "lockdev SELinux Policy documentation"
+.SH "NAME"
+lockdev_selinux \- Security Enhanced Linux Policy for the lockdev processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lockdev
+(device locking policy for lockdev)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lockdev policy is very flexible allowing users to setup their lockdev processes in as secure a method as possible.
+.PP 
+The following file types are defined for lockdev:
+
+
+.EX
+.PP
+.B lockdev_exec_t 
+.EE
+
+- Set files with the lockdev_exec_t type, if you want to transition an executable to the lockdev_t domain.
+
+
+.EX
+.PP
+.B lockdev_lock_t 
+.EE
+
+- Set files with the lockdev_lock_t type, if you want to treat the files as lockdev lock data, stored under the /var/lock directory
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lockdev policy is very flexible allowing users to setup their lockdev processes in as secure a method as possible.
+.PP 
+The following process types are defined for lockdev:
+
+.EX
+.B lockdev_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lockdev(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/logadm_selinux.8 serefpolicy-3.7.19/man/man8/logadm_selinux.8
--- nsaserefpolicy/man/man8/logadm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/logadm_selinux.8	2012-04-24 11:06:45.876312378 +0000
@@ -0,0 +1,65 @@
+.TH  "logadm_selinux"  "8"  "logadm" "mgrepl@redhat.com" "logadm SELinux Policy documentation"
+.SH "NAME"
+logadm_r \- \fBLog administrator role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the logadm_r role is logadm_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r logadm_r -t logadm_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=logadm_r TYPE=logadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:logadm_r:logadm_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add logadm_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r logadm_r' staff_u 
+
+
+
+SELinux policy also controls which roles can transition to a different role.  
+You can list these rules using the following command.
+
+.B sesearch --role_allow
+
+SELinux policy allows the staff_r role can transition to the logadm_r role.
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/logrotate_selinux.8 serefpolicy-3.7.19/man/man8/logrotate_selinux.8
--- nsaserefpolicy/man/man8/logrotate_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/logrotate_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,113 @@
+.TH  "logrotate_selinux"  "8"  "logrotate" "dwalsh@redhat.com" "logrotate SELinux Policy documentation"
+.SH "NAME"
+logrotate_selinux \- Security Enhanced Linux Policy for the logrotate processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B logrotate
+(Rotate and archive system logs)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux logrotate policy is very flexible allowing users to setup their logrotate processes in as secure a method as possible.
+.PP 
+The following file types are defined for logrotate:
+
+
+.EX
+.PP
+.B logrotate_exec_t 
+.EE
+
+- Set files with the logrotate_exec_t type, if you want to transition an executable to the logrotate_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/cron\.(daily|weekly)/sysklogd, /usr/sbin/logrotate
+
+.EX
+.PP
+.B logrotate_lock_t 
+.EE
+
+- Set files with the logrotate_lock_t type, if you want to treat the files as logrotate lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B logrotate_mail_tmp_t 
+.EE
+
+- Set files with the logrotate_mail_tmp_t type, if you want to store logrotate mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B logrotate_tmp_t 
+.EE
+
+- Set files with the logrotate_tmp_t type, if you want to store logrotate temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B logrotate_var_lib_t 
+.EE
+
+- Set files with the logrotate_var_lib_t type, if you want to store the logrotate files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux logrotate policy is very flexible allowing users to setup their logrotate processes in as secure a method as possible.
+.PP 
+The following process types are defined for logrotate:
+
+.EX
+.B logrotate_t, logrotate_mail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), logrotate(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/logwatch_selinux.8 serefpolicy-3.7.19/man/man8/logwatch_selinux.8
--- nsaserefpolicy/man/man8/logwatch_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/logwatch_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,125 @@
+.TH  "logwatch_selinux"  "8"  "logwatch" "dwalsh@redhat.com" "logwatch SELinux Policy documentation"
+.SH "NAME"
+logwatch_selinux \- Security Enhanced Linux Policy for the logwatch processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B logwatch
+(System log analyzer and reporter)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux logwatch policy is very flexible allowing users to setup their logwatch processes in as secure a method as possible.
+.PP 
+The following file types are defined for logwatch:
+
+
+.EX
+.PP
+.B logwatch_cache_t 
+.EE
+
+- Set files with the logwatch_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/epylog(/.*)?, /var/cache/logwatch(/.*)?, /var/lib/logcheck(/.*)?
+
+.EX
+.PP
+.B logwatch_exec_t 
+.EE
+
+- Set files with the logwatch_exec_t type, if you want to transition an executable to the logwatch_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/logcheck, /usr/sbin/epylog, /usr/share/logwatch/scripts/logwatch\.pl
+
+.EX
+.PP
+.B logwatch_lock_t 
+.EE
+
+- Set files with the logwatch_lock_t type, if you want to treat the files as logwatch lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B logwatch_mail_tmp_t 
+.EE
+
+- Set files with the logwatch_mail_tmp_t type, if you want to store logwatch mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B logwatch_tmp_t 
+.EE
+
+- Set files with the logwatch_tmp_t type, if you want to store logwatch temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B logwatch_var_run_t 
+.EE
+
+- Set files with the logwatch_var_run_t type, if you want to store the logwatch files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux logwatch policy is very flexible allowing users to setup their logwatch processes in as secure a method as possible.
+.PP 
+The following process types are defined for logwatch:
+
+.EX
+.B logwatch_t, logwatch_mail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), logwatch(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lpd_selinux.8 serefpolicy-3.7.19/man/man8/lpd_selinux.8
--- nsaserefpolicy/man/man8/lpd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lpd_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,108 @@
+.TH  "lpd_selinux"  "8"  "lpd" "dwalsh@redhat.com" "lpd SELinux Policy documentation"
+.SH "NAME"
+lpd_selinux \- Security Enhanced Linux Policy for the lpd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lpd
+(Line printer daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  lpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run lpd with the tightest access possible.
+
+
+.PP
+If you want to use lpd server instead of cup, you must turn on the use_lpd_server boolean.
+
+.EX
+.B setsebool -P use_lpd_server 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lpd policy is very flexible allowing users to setup their lpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lpd:
+
+
+.EX
+.PP
+.B lpd_exec_t 
+.EE
+
+- Set files with the lpd_exec_t type, if you want to transition an executable to the lpd_t domain.
+
+
+.EX
+.PP
+.B lpd_tmp_t 
+.EE
+
+- Set files with the lpd_tmp_t type, if you want to store lpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B lpd_var_run_t 
+.EE
+
+- Set files with the lpd_var_run_t type, if you want to store the lpd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lpd policy is very flexible allowing users to setup their lpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lpd:
+
+.EX
+.B lpd_t, lpr_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lpr_selinux.8 serefpolicy-3.7.19/man/man8/lpr_selinux.8
--- nsaserefpolicy/man/man8/lpr_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lpr_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,83 @@
+.TH  "lpr_selinux"  "8"  "lpr" "dwalsh@redhat.com" "lpr SELinux Policy documentation"
+.SH "NAME"
+lpr_selinux \- Security Enhanced Linux Policy for the lpr processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lpr policy is very flexible allowing users to setup their lpr processes in as secure a method as possible.
+.PP 
+The following file types are defined for lpr:
+
+
+.EX
+.PP
+.B lpr_exec_t 
+.EE
+
+- Set files with the lpr_exec_t type, if you want to transition an executable to the lpr_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/lpinfo, /usr/sbin/accept, /usr/bin/cancel(\.cups)?, /usr/bin/lp(\.cups)?, /usr/bin/lpstat(\.cups)?, /usr/sbin/lpc(\.cups)?, /usr/local/linuxprinter/bin/l?lpr, /usr/bin/lpoptions, /usr/bin/lpq(\.cups)?, /usr/sbin/lpadmin, /opt/gutenprint/s?bin(/.*)?, /usr/bin/lpr(\.cups)?, /usr/sbin/lpmove, /usr/bin/lprm(\.cups)?
+
+.EX
+.PP
+.B lpr_tmp_t 
+.EE
+
+- Set files with the lpr_tmp_t type, if you want to store lpr temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lpr policy is very flexible allowing users to setup their lpr processes in as secure a method as possible.
+.PP 
+The following process types are defined for lpr:
+
+.EX
+.B lpr_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lpr(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lsassd_selinux.8 serefpolicy-3.7.19/man/man8/lsassd_selinux.8
--- nsaserefpolicy/man/man8/lsassd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lsassd_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,111 @@
+.TH  "lsassd_selinux"  "8"  "lsassd" "dwalsh@redhat.com" "lsassd SELinux Policy documentation"
+.SH "NAME"
+lsassd_selinux \- Security Enhanced Linux Policy for the lsassd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lsassd policy is very flexible allowing users to setup their lsassd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lsassd:
+
+
+.EX
+.PP
+.B lsassd_exec_t 
+.EE
+
+- Set files with the lsassd_exec_t type, if you want to transition an executable to the lsassd_t domain.
+
+
+.EX
+.PP
+.B lsassd_tmp_t 
+.EE
+
+- Set files with the lsassd_tmp_t type, if you want to store lsassd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B lsassd_var_lib_t 
+.EE
+
+- Set files with the lsassd_var_lib_t type, if you want to store the lsassd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/likewise-open/lsasd\.err, /var/lib/likewise-open/krb5ccr_lsass, /var/lib/likewise-open/db/lsass-adstate\.filedb, /var/lib/likewise-open/db/lsass-adcache\.db, /var/lib/likewise-open/db/sam\.db
+
+.EX
+.PP
+.B lsassd_var_run_t 
+.EE
+
+- Set files with the lsassd_var_run_t type, if you want to store the lsassd files under the /run directory.
+
+
+.EX
+.PP
+.B lsassd_var_socket_t 
+.EE
+
+- Set files with the lsassd_var_socket_t type, if you want to treat the files as lsassd var socket data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/likewise-open/rpc/lsass, /var/lib/likewise-open/\.lsassd, /var/lib/likewise-open/\.ntlmd
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lsassd policy is very flexible allowing users to setup their lsassd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lsassd:
+
+.EX
+.B lsassd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lsassd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lvm_selinux.8 serefpolicy-3.7.19/man/man8/lvm_selinux.8
--- nsaserefpolicy/man/man8/lvm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lvm_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,141 @@
+.TH  "lvm_selinux"  "8"  "lvm" "dwalsh@redhat.com" "lvm SELinux Policy documentation"
+.SH "NAME"
+lvm_selinux \- Security Enhanced Linux Policy for the lvm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lvm
+(Policy for logical volume management programs)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lvm policy is very flexible allowing users to setup their lvm processes in as secure a method as possible.
+.PP 
+The following file types are defined for lvm:
+
+
+.EX
+.PP
+.B lvm_etc_t 
+.EE
+
+- Set files with the lvm_etc_t type, if you want to store lvm files in the /etc directories.
+
+
+.EX
+.PP
+.B lvm_exec_t 
+.EE
+
+- Set files with the lvm_exec_t type, if you want to transition an executable to the lvm_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/dmraid, /sbin/pvremove, /sbin/vgextend, /lib/lvm-200/.*, /sbin/vgmerge, /sbin/vgrename, /sbin/lvdisplay, /sbin/pvs, /sbin/lvmdiskscan, /sbin/lvresize, /sbin/vgmknodes, /sbin/pvmove, /sbin/multipath\.static, /sbin/vgck, /sbin/pvscan, /sbin/pvcreate, /sbin/lvreduce, /sbin/vgscan, /sbin/lvremove, /sbin/dmsetup, /usr/sbin/lvm, /sbin/vgchange, /sbin/lvm\.static, /sbin/vgcfgbackup, /sbin/e2fsadm, /sbin/lvm, /sbin/pvdata, /sbin/lvextend, /sbin/vgcfgrestore, /sbin/vgs, /sbin/lvmchange, /sbin/vgimport, /sbin/vgremove, /sbin/dmsetup\.static, /sbin/lvmsar, /sbin/lvmsadc, /sbin/lvmiopversion, /sbin/pvchange, /sbin/pvdisplay, /sbin/vgsplit, /sbin/multipathd, /sbin/cryptsetup, /sbin/vgwrapper, /sbin/lvchange, /sbin/mount\.crypt, /sbin/vgcreate, /sbin/vgreduce, /sbin/lvrename, /sbin/vgscan\.static, /sbin/vgexport, /sbin/lvs, /sbin/vgchange\.static, /sbin/kpartx, /lib/lvm-10/.*, /sbin/lvscan, /sbin/lvcreate, /sbin/vgdisplay, /lib/udev/udisks-lvm-pv-export
+
+.EX
+.PP
+.B lvm_lock_t 
+.EE
+
+- Set files with the lvm_lock_t type, if you want to treat the files as lvm lock data, stored under the /var/lock directory
+
+.br
+.TP 5
+Paths: 
+/var/lock/lvm(/.*)?, /etc/lvm/lock(/.*)?
+
+.EX
+.PP
+.B lvm_metadata_t 
+.EE
+
+- Set files with the lvm_metadata_t type, if you want to treat the files as lvm metadata data.
+
+.br
+.TP 5
+Paths: 
+/etc/lvm/backup(/.*)?, /var/cache/multipathd(/.*)?, /etc/lvmtab\.d(/.*)?, /etc/lvmtab(/.*)?, /etc/lvm/\.cache, /etc/lvm/archive(/.*)?, /etc/lvm/cache(/.*)?
+
+.EX
+.PP
+.B lvm_tmp_t 
+.EE
+
+- Set files with the lvm_tmp_t type, if you want to store lvm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B lvm_var_lib_t 
+.EE
+
+- Set files with the lvm_var_lib_t type, if you want to store the lvm files under the /var/lib directory.
+
+
+.EX
+.PP
+.B lvm_var_run_t 
+.EE
+
+- Set files with the lvm_var_run_t type, if you want to store the lvm files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/multipathd\.sock, /var/run/dmevent.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lvm policy is very flexible allowing users to setup their lvm processes in as secure a method as possible.
+.PP 
+The following process types are defined for lvm:
+
+.EX
+.B lvm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lvm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lwiod_selinux.8 serefpolicy-3.7.19/man/man8/lwiod_selinux.8
--- nsaserefpolicy/man/man8/lwiod_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lwiod_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,95 @@
+.TH  "lwiod_selinux"  "8"  "lwiod" "dwalsh@redhat.com" "lwiod SELinux Policy documentation"
+.SH "NAME"
+lwiod_selinux \- Security Enhanced Linux Policy for the lwiod processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lwiod policy is very flexible allowing users to setup their lwiod processes in as secure a method as possible.
+.PP 
+The following file types are defined for lwiod:
+
+
+.EX
+.PP
+.B lwiod_exec_t 
+.EE
+
+- Set files with the lwiod_exec_t type, if you want to transition an executable to the lwiod_t domain.
+
+
+.EX
+.PP
+.B lwiod_var_lib_t 
+.EE
+
+- Set files with the lwiod_var_lib_t type, if you want to store the lwiod files under the /var/lib directory.
+
+
+.EX
+.PP
+.B lwiod_var_run_t 
+.EE
+
+- Set files with the lwiod_var_run_t type, if you want to store the lwiod files under the /run directory.
+
+
+.EX
+.PP
+.B lwiod_var_socket_t 
+.EE
+
+- Set files with the lwiod_var_socket_t type, if you want to treat the files as lwiod var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lwiod policy is very flexible allowing users to setup their lwiod processes in as secure a method as possible.
+.PP 
+The following process types are defined for lwiod:
+
+.EX
+.B lwiod_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lwiod(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lwregd_selinux.8 serefpolicy-3.7.19/man/man8/lwregd_selinux.8
--- nsaserefpolicy/man/man8/lwregd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lwregd_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,99 @@
+.TH  "lwregd_selinux"  "8"  "lwregd" "dwalsh@redhat.com" "lwregd SELinux Policy documentation"
+.SH "NAME"
+lwregd_selinux \- Security Enhanced Linux Policy for the lwregd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lwregd policy is very flexible allowing users to setup their lwregd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lwregd:
+
+
+.EX
+.PP
+.B lwregd_exec_t 
+.EE
+
+- Set files with the lwregd_exec_t type, if you want to transition an executable to the lwregd_t domain.
+
+
+.EX
+.PP
+.B lwregd_var_lib_t 
+.EE
+
+- Set files with the lwregd_var_lib_t type, if you want to store the lwregd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/likewise-open/db/registry\.db, /var/lib/likewise-open/regsd\.err
+
+.EX
+.PP
+.B lwregd_var_run_t 
+.EE
+
+- Set files with the lwregd_var_run_t type, if you want to store the lwregd files under the /run directory.
+
+
+.EX
+.PP
+.B lwregd_var_socket_t 
+.EE
+
+- Set files with the lwregd_var_socket_t type, if you want to treat the files as lwregd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lwregd policy is very flexible allowing users to setup their lwregd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lwregd:
+
+.EX
+.B lwregd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lwregd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/lwsmd_selinux.8 serefpolicy-3.7.19/man/man8/lwsmd_selinux.8
--- nsaserefpolicy/man/man8/lwsmd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/lwsmd_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,95 @@
+.TH  "lwsmd_selinux"  "8"  "lwsmd" "dwalsh@redhat.com" "lwsmd SELinux Policy documentation"
+.SH "NAME"
+lwsmd_selinux \- Security Enhanced Linux Policy for the lwsmd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lwsmd policy is very flexible allowing users to setup their lwsmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lwsmd:
+
+
+.EX
+.PP
+.B lwsmd_exec_t 
+.EE
+
+- Set files with the lwsmd_exec_t type, if you want to transition an executable to the lwsmd_t domain.
+
+
+.EX
+.PP
+.B lwsmd_var_lib_t 
+.EE
+
+- Set files with the lwsmd_var_lib_t type, if you want to store the lwsmd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B lwsmd_var_run_t 
+.EE
+
+- Set files with the lwsmd_var_run_t type, if you want to store the lwsmd files under the /run directory.
+
+
+.EX
+.PP
+.B lwsmd_var_socket_t 
+.EE
+
+- Set files with the lwsmd_var_socket_t type, if you want to treat the files as lwsmd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lwsmd policy is very flexible allowing users to setup their lwsmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lwsmd:
+
+.EX
+.B lwsmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lwsmd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mailman_selinux.8 serefpolicy-3.7.19/man/man8/mailman_selinux.8
--- nsaserefpolicy/man/man8/mailman_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mailman_selinux.8	2012-03-20 22:37:14.347458351 +0000
@@ -0,0 +1,165 @@
+.TH  "mailman_selinux"  "8"  "mailman" "dwalsh@redhat.com" "mailman SELinux Policy documentation"
+.SH "NAME"
+mailman_selinux \- Security Enhanced Linux Policy for the mailman processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mailman
+(Mailman is for managing electronic mail discussion and e-newsletter lists)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mailman policy is very flexible allowing users to setup their mailman processes in as secure a method as possible.
+.PP 
+The following file types are defined for mailman:
+
+
+.EX
+.PP
+.B mailman_archive_t 
+.EE
+
+- Set files with the mailman_archive_t type, if you want to treat the files as mailman archive data.
+
+
+.EX
+.PP
+.B mailman_cgi_exec_t 
+.EE
+
+- Set files with the mailman_cgi_exec_t type, if you want to transition an executable to the mailman_cgi_t domain.
+
+
+.EX
+.PP
+.B mailman_cgi_tmp_t 
+.EE
+
+- Set files with the mailman_cgi_tmp_t type, if you want to store mailman cgi temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mailman_data_t 
+.EE
+
+- Set files with the mailman_data_t type, if you want to treat the files as mailman content.
+
+.br
+.TP 5
+Paths: 
+/etc/mailman(/.*)?, /var/spool/mailman(/.*)?, /var/lib/mailman(/.*)?
+
+.EX
+.PP
+.B mailman_lock_t 
+.EE
+
+- Set files with the mailman_lock_t type, if you want to treat the files as mailman lock data, stored under the /var/lock directory
+
+.br
+.TP 5
+Paths: 
+/var/lock/mailman(/.*)?, /var/run/mailman(/.*)?
+
+.EX
+.PP
+.B mailman_log_t 
+.EE
+
+- Set files with the mailman_log_t type, if you want to treat the data as mailman log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mailman_mail_exec_t 
+.EE
+
+- Set files with the mailman_mail_exec_t type, if you want to transition an executable to the mailman_mail_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/mailman/mail/mailman, /usr/lib(64)?/mailman/bin/mailmanctl, /usr/lib(64)?/mailman/scripts/mailman
+
+.EX
+.PP
+.B mailman_mail_tmp_t 
+.EE
+
+- Set files with the mailman_mail_tmp_t type, if you want to store mailman mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mailman_queue_exec_t 
+.EE
+
+- Set files with the mailman_queue_exec_t type, if you want to transition an executable to the mailman_queue_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/mailman/bin/qrunner, /usr/lib/mailman/cron/.*
+
+.EX
+.PP
+.B mailman_queue_tmp_t 
+.EE
+
+- Set files with the mailman_queue_tmp_t type, if you want to store mailman queue temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mailman policy is very flexible allowing users to setup their mailman processes in as secure a method as possible.
+.PP 
+The following process types are defined for mailman:
+
+.EX
+.B mailman_cgi_t, mailman_mail_t, mailman_queue_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mailman(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/matahari_selinux.8 serefpolicy-3.7.19/man/man8/matahari_selinux.8
--- nsaserefpolicy/man/man8/matahari_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/matahari_selinux.8	2012-03-20 22:37:14.348458327 +0000
@@ -0,0 +1,175 @@
+.TH  "matahari_selinux"  "8"  "matahari" "dwalsh@redhat.com" "matahari SELinux Policy documentation"
+.SH "NAME"
+matahari_selinux \- Security Enhanced Linux Policy for the matahari processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B matahari
+(policy for matahari)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux matahari policy is very flexible allowing users to setup their matahari processes in as secure a method as possible.
+.PP 
+The following file types are defined for matahari:
+
+
+.EX
+.PP
+.B matahari_hostd_exec_t 
+.EE
+
+- Set files with the matahari_hostd_exec_t type, if you want to transition an executable to the matahari_hostd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/matahari-qmf-hostd, /usr/sbin/matahari-hostd, /usr/sbin/matahari-dbus-hostd
+
+.EX
+.PP
+.B matahari_initrc_exec_t 
+.EE
+
+- Set files with the matahari_initrc_exec_t type, if you want to transition an executable to the matahari_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/matahari-sysconfig, /etc/rc\.d/init\.d/matahari-host, /etc/rc\.d/init\.d/matahari-service, /etc/init.d/matahari-sysconfig-console, /etc/rc\.d/init\.d/matahari-net
+
+.EX
+.PP
+.B matahari_netd_exec_t 
+.EE
+
+- Set files with the matahari_netd_exec_t type, if you want to transition an executable to the matahari_netd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/matahari-qmf-networkd, /usr/sbin/matahari-dbus-networkd, /usr/sbin/matahari-netd
+
+.EX
+.PP
+.B matahari_serviced_exec_t 
+.EE
+
+- Set files with the matahari_serviced_exec_t type, if you want to transition an executable to the matahari_serviced_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/matahari-serviced, /usr/sbin/matahari-dbus-serviced, /usr/sbin/matahari-qmf-serviced
+
+.EX
+.PP
+.B matahari_sysconfigd_exec_t 
+.EE
+
+- Set files with the matahari_sysconfigd_exec_t type, if you want to transition an executable to the matahari_sysconfigd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/matahari-qmf-sysconfigd, /usr/sbin/matahari-qmf-sysconfig-consoled
+
+.EX
+.PP
+.B matahari_var_lib_t 
+.EE
+
+- Set files with the matahari_var_lib_t type, if you want to store the matahari files under the /var/lib directory.
+
+
+.EX
+.PP
+.B matahari_var_run_t 
+.EE
+
+- Set files with the matahari_var_run_t type, if you want to store the matahari files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/matahari(/.*)?, /var/run/matahari\.pid, /var/run/matahari-broker\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux matahari policy is very flexible allowing users to setup their matahari processes in as secure a method as possible.
+.PP 
+The following port types are defined for matahari:
+
+.EX
+.TP 5
+.B matahari_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux matahari policy is very flexible allowing users to setup their matahari processes in as secure a method as possible.
+.PP 
+The following process types are defined for matahari:
+
+.EX
+.B matahari_serviced_t, matahari_sysconfigd_t, matahari_hostd_t, matahari_netd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), matahari(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mcelog_selinux.8 serefpolicy-3.7.19/man/man8/mcelog_selinux.8
--- nsaserefpolicy/man/man8/mcelog_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mcelog_selinux.8	2012-03-20 22:37:14.348458327 +0000
@@ -0,0 +1,93 @@
+.TH  "mcelog_selinux"  "8"  "mcelog" "dwalsh@redhat.com" "mcelog SELinux Policy documentation"
+.SH "NAME"
+mcelog_selinux \- Security Enhanced Linux Policy for the mcelog processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mcelog
+(policy for mcelog)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mcelog policy is very flexible allowing users to setup their mcelog processes in as secure a method as possible.
+.PP 
+The following file types are defined for mcelog:
+
+
+.EX
+.PP
+.B mcelog_exec_t 
+.EE
+
+- Set files with the mcelog_exec_t type, if you want to transition an executable to the mcelog_t domain.
+
+
+.EX
+.PP
+.B mcelog_log_t 
+.EE
+
+- Set files with the mcelog_log_t type, if you want to treat the data as mcelog log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mcelog_var_run_t 
+.EE
+
+- Set files with the mcelog_var_run_t type, if you want to store the mcelog files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mcelog policy is very flexible allowing users to setup their mcelog processes in as secure a method as possible.
+.PP 
+The following process types are defined for mcelog:
+
+.EX
+.B mcelog_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mcelog(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mdadm_selinux.8 serefpolicy-3.7.19/man/man8/mdadm_selinux.8
--- nsaserefpolicy/man/man8/mdadm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mdadm_selinux.8	2012-03-20 22:37:14.348458327 +0000
@@ -0,0 +1,91 @@
+.TH  "mdadm_selinux"  "8"  "mdadm" "dwalsh@redhat.com" "mdadm SELinux Policy documentation"
+.SH "NAME"
+mdadm_selinux \- Security Enhanced Linux Policy for the mdadm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mdadm policy is very flexible allowing users to setup their mdadm processes in as secure a method as possible.
+.PP 
+The following file types are defined for mdadm:
+
+
+.EX
+.PP
+.B mdadm_exec_t 
+.EE
+
+- Set files with the mdadm_exec_t type, if you want to transition an executable to the mdadm_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/mdmpd, /usr/sbin/iprinit, /usr/sbin/iprupdate, /usr/sbin/iprdump, /sbin/mdadm
+
+.EX
+.PP
+.B mdadm_map_t 
+.EE
+
+- Set files with the mdadm_map_t type, if you want to treat the files as mdadm map data.
+
+
+.EX
+.PP
+.B mdadm_var_run_t 
+.EE
+
+- Set files with the mdadm_var_run_t type, if you want to store the mdadm files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mdadm policy is very flexible allowing users to setup their mdadm processes in as secure a method as possible.
+.PP 
+The following process types are defined for mdadm:
+
+.EX
+.B mdadm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mdadm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/memcached_selinux.8 serefpolicy-3.7.19/man/man8/memcached_selinux.8
--- nsaserefpolicy/man/man8/memcached_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/memcached_selinux.8	2012-03-20 22:37:14.348458327 +0000
@@ -0,0 +1,138 @@
+.TH  "memcached_selinux"  "8"  "memcached" "dwalsh@redhat.com" "memcached SELinux Policy documentation"
+.SH "NAME"
+memcached_selinux \- Security Enhanced Linux Policy for the memcached processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B memcached
+(high-performance memory object caching system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  memcached policy is extremely flexible and has several booleans that allow you to manipulate the policy and run memcached with the tightest access possible.
+
+
+.PP
+If you want to allow httpd to connect to memcache serve, you must turn on the httpd_can_network_memcache boolean.
+
+.EX
+.B setsebool -P httpd_can_network_memcache 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
+.PP 
+The following file types are defined for memcached:
+
+
+.EX
+.PP
+.B memcached_exec_t 
+.EE
+
+- Set files with the memcached_exec_t type, if you want to transition an executable to the memcached_t domain.
+
+
+.EX
+.PP
+.B memcached_initrc_exec_t 
+.EE
+
+- Set files with the memcached_initrc_exec_t type, if you want to transition an executable to the memcached_initrc_t domain.
+
+
+.EX
+.PP
+.B memcached_var_run_t 
+.EE
+
+- Set files with the memcached_var_run_t type, if you want to store the memcached files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/ipa_memcached(/.*)?, /var/run/memcached(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
+.PP 
+The following port types are defined for memcached:
+
+.EX
+.TP 5
+.B memcache_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
+.PP 
+The following process types are defined for memcached:
+
+.EX
+.B memcached_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), memcached(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mencoder_selinux.8 serefpolicy-3.7.19/man/man8/mencoder_selinux.8
--- nsaserefpolicy/man/man8/mencoder_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mencoder_selinux.8	2012-03-20 22:37:14.348458327 +0000
@@ -0,0 +1,71 @@
+.TH  "mencoder_selinux"  "8"  "mencoder" "dwalsh@redhat.com" "mencoder SELinux Policy documentation"
+.SH "NAME"
+mencoder_selinux \- Security Enhanced Linux Policy for the mencoder processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mencoder policy is very flexible allowing users to setup their mencoder processes in as secure a method as possible.
+.PP 
+The following file types are defined for mencoder:
+
+
+.EX
+.PP
+.B mencoder_exec_t 
+.EE
+
+- Set files with the mencoder_exec_t type, if you want to transition an executable to the mencoder_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mencoder policy is very flexible allowing users to setup their mencoder processes in as secure a method as possible.
+.PP 
+The following process types are defined for mencoder:
+
+.EX
+.B mencoder_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mencoder(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/modemmanager_selinux.8 serefpolicy-3.7.19/man/man8/modemmanager_selinux.8
--- nsaserefpolicy/man/man8/modemmanager_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/modemmanager_selinux.8	2012-03-20 22:37:14.348458327 +0000
@@ -0,0 +1,77 @@
+.TH  "modemmanager_selinux"  "8"  "modemmanager" "dwalsh@redhat.com" "modemmanager SELinux Policy documentation"
+.SH "NAME"
+modemmanager_selinux \- Security Enhanced Linux Policy for the modemmanager processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B modemmanager
+(Provides a DBus interface to communicate with mobile broadband (GSM, CDMA, UMTS, ...) cards)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux modemmanager policy is very flexible allowing users to setup their modemmanager processes in as secure a method as possible.
+.PP 
+The following file types are defined for modemmanager:
+
+
+.EX
+.PP
+.B modemmanager_exec_t 
+.EE
+
+- Set files with the modemmanager_exec_t type, if you want to transition an executable to the modemmanager_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux modemmanager policy is very flexible allowing users to setup their modemmanager processes in as secure a method as possible.
+.PP 
+The following process types are defined for modemmanager:
+
+.EX
+.B modemmanager_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), modemmanager(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mongod_selinux.8 serefpolicy-3.7.19/man/man8/mongod_selinux.8
--- nsaserefpolicy/man/man8/mongod_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mongod_selinux.8	2012-03-20 22:37:14.348458327 +0000
@@ -0,0 +1,145 @@
+.TH  "mongod_selinux"  "8"  "mongod" "dwalsh@redhat.com" "mongod SELinux Policy documentation"
+.SH "NAME"
+mongod_selinux \- Security Enhanced Linux Policy for the mongod processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
+.PP 
+The following file types are defined for mongod:
+
+
+.EX
+.PP
+.B mongod_exec_t 
+.EE
+
+- Set files with the mongod_exec_t type, if you want to transition an executable to the mongod_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/mongod, /usr/share/aeolus-conductor/dbomatic/dbomatic
+
+.EX
+.PP
+.B mongod_initrc_exec_t 
+.EE
+
+- Set files with the mongod_initrc_exec_t type, if you want to transition an executable to the mongod_initrc_t domain.
+
+
+.EX
+.PP
+.B mongod_log_t 
+.EE
+
+- Set files with the mongod_log_t type, if you want to treat the data as mongod log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mongod_tmp_t 
+.EE
+
+- Set files with the mongod_tmp_t type, if you want to store mongod temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mongod_var_lib_t 
+.EE
+
+- Set files with the mongod_var_lib_t type, if you want to store the mongod files under the /var/lib directory.
+
+
+.EX
+.PP
+.B mongod_var_run_t 
+.EE
+
+- Set files with the mongod_var_run_t type, if you want to store the mongod files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/mongodb(/.*)?, /var/run/aeolus/dbomatic\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
+.PP 
+The following port types are defined for mongod:
+
+.EX
+.TP 5
+.B mongod_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
+.PP 
+The following process types are defined for mongod:
+
+.EX
+.B mongod_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mongod(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mono_selinux.8 serefpolicy-3.7.19/man/man8/mono_selinux.8
--- nsaserefpolicy/man/man8/mono_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mono_selinux.8	2012-03-20 22:37:14.348458327 +0000
@@ -0,0 +1,103 @@
+.TH  "mono_selinux"  "8"  "mono" "dwalsh@redhat.com" "mono SELinux Policy documentation"
+.SH "NAME"
+mono_selinux \- Security Enhanced Linux Policy for the mono processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mono
+(Run .NET server and client applications on Linux)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mono policy is very flexible allowing users to setup their mono processes in as secure a method as possible.
+.PP 
+The following file types are defined for mono:
+
+
+.EX
+.PP
+.B mono_exec_t 
+.EE
+
+- Set files with the mono_exec_t type, if you want to transition an executable to the mono_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mono policy is very flexible allowing users to setup their mono processes in as secure a method as possible.
+.PP 
+The following port types are defined for mono:
+
+.EX
+.TP 5
+.B monopd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mono policy is very flexible allowing users to setup their mono processes in as secure a method as possible.
+.PP 
+The following process types are defined for mono:
+
+.EX
+.B mono_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mono(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mount_selinux.8 serefpolicy-3.7.19/man/man8/mount_selinux.8
--- nsaserefpolicy/man/man8/mount_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mount_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,131 @@
+.TH  "mount_selinux"  "8"  "mount" "dwalsh@redhat.com" "mount SELinux Policy documentation"
+.SH "NAME"
+mount_selinux \- Security Enhanced Linux Policy for the mount processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mount
+(Policy for mount)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mount policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mount with the tightest access possible.
+
+
+.PP
+If you want to allow the mount command to mount any directory or file, you must turn on the allow_mount_anyfile boolean.
+
+.EX
+.B setsebool -P allow_mount_anyfile 1
+.EE
+
+.PP
+If you want to allow xguest users to mount removable medi, you must turn on the xguest_mount_media boolean.
+
+.EX
+.B setsebool -P xguest_mount_media 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mount policy is very flexible allowing users to setup their mount processes in as secure a method as possible.
+.PP 
+The following file types are defined for mount:
+
+
+.EX
+.PP
+.B mount_exec_t 
+.EE
+
+- Set files with the mount_exec_t type, if you want to transition an executable to the mount_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/mount.*, /sbin/umount.*, /bin/umount.*, /bin/mount.*
+
+.EX
+.PP
+.B mount_loopback_t 
+.EE
+
+- Set files with the mount_loopback_t type, if you want to treat the files as mount loopback data.
+
+
+.EX
+.PP
+.B mount_tmp_t 
+.EE
+
+- Set files with the mount_tmp_t type, if you want to store mount temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mount_var_run_t 
+.EE
+
+- Set files with the mount_var_run_t type, if you want to store the mount files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/davfs2(/.*)?, /var/cache/davfs2(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mount policy is very flexible allowing users to setup their mount processes in as secure a method as possible.
+.PP 
+The following process types are defined for mount:
+
+.EX
+.B mount_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mount(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mozilla_selinux.8 serefpolicy-3.7.19/man/man8/mozilla_selinux.8
--- nsaserefpolicy/man/man8/mozilla_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mozilla_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,167 @@
+.TH  "mozilla_selinux"  "8"  "mozilla" "dwalsh@redhat.com" "mozilla SELinux Policy documentation"
+.SH "NAME"
+mozilla_selinux \- Security Enhanced Linux Policy for the mozilla processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mozilla
+(Policy for Mozilla and related web browsers)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mozilla policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mozilla with the tightest access possible.
+
+
+.PP
+If you want to control mozilla content acces, you must turn on the mozilla_read_content boolean.
+
+.EX
+.B setsebool -P mozilla_read_content 1
+.EE
+
+.PP
+If you want to allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container, you must turn on the unconfined_mozilla_plugin_transition boolean.
+
+.EX
+.B setsebool -P unconfined_mozilla_plugin_transition 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mozilla policy is very flexible allowing users to setup their mozilla processes in as secure a method as possible.
+.PP 
+The following file types are defined for mozilla:
+
+
+.EX
+.PP
+.B mozilla_conf_t 
+.EE
+
+- Set files with the mozilla_conf_t type, if you want to treat the files as mozilla configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B mozilla_exec_t 
+.EE
+
+- Set files with the mozilla_exec_t type, if you want to transition an executable to the mozilla_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/mozilla[^/]*/mozilla-.*, /usr/lib(64)?/netscape/.+/communicator/communicator-smotif\.real, /usr/lib(64)?/galeon/galeon, /usr/lib(64)?/firefox[^/]*/mozilla-.*, /usr/lib/[^/]*firefox[^/]*/firefox, /usr/lib(64)?/mozilla[^/]*/reg.+, /usr/bin/netscape, /usr/bin/mozilla-bin-[0-9].*, /usr/bin/epiphany-bin, /usr/bin/mozilla-snapshot, /usr/lib(64)?/netscape/base-4/wrapper, /usr/lib64/[^/]*firefox[^/]*/firefox, /usr/bin/mozilla-[0-9].*, /usr/lib(64)?/[^/]*firefox[^/]*/firefox-bin, /usr/bin/mozilla, /usr/bin/epiphany
+
+.EX
+.PP
+.B mozilla_home_t 
+.EE
+
+- Set files with the mozilla_home_t type, if you want to store mozilla files in the users home directory.
+
+
+.EX
+.PP
+.B mozilla_plugin_config_exec_t 
+.EE
+
+- Set files with the mozilla_plugin_config_exec_t type, if you want to transition an executable to the mozilla_plugin_config_t domain.
+
+
+.EX
+.PP
+.B mozilla_plugin_exec_t 
+.EE
+
+- Set files with the mozilla_plugin_exec_t type, if you want to transition an executable to the mozilla_plugin_t domain.
+
+
+.EX
+.PP
+.B mozilla_plugin_rw_t 
+.EE
+
+- Set files with the mozilla_plugin_rw_t type, if you want to treat the files as mozilla plugin read/write content.
+
+
+.EX
+.PP
+.B mozilla_plugin_tmp_t 
+.EE
+
+- Set files with the mozilla_plugin_tmp_t type, if you want to store mozilla plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mozilla_plugin_tmpfs_t 
+.EE
+
+- Set files with the mozilla_plugin_tmpfs_t type, if you want to store mozilla plugin files on a tmpfs file system.
+
+
+.EX
+.PP
+.B mozilla_tmpfs_t 
+.EE
+
+- Set files with the mozilla_tmpfs_t type, if you want to store mozilla files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mozilla policy is very flexible allowing users to setup their mozilla processes in as secure a method as possible.
+.PP 
+The following process types are defined for mozilla:
+
+.EX
+.B mozilla_t, mozilla_plugin_config_t, mozilla_plugin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mozilla(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mpd_selinux.8 serefpolicy-3.7.19/man/man8/mpd_selinux.8
--- nsaserefpolicy/man/man8/mpd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mpd_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,199 @@
+.TH  "mpd_selinux"  "8"  "mpd" "dwalsh@redhat.com" "mpd SELinux Policy documentation"
+.SH "NAME"
+mpd_selinux \- Security Enhanced Linux Policy for the mpd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mpd
+(policy for daemon for playing music)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mpd with the tightest access possible.
+
+
+.PP
+If you want to allow mplayer executable stac, you must turn on the allow_mplayer_execstack boolean.
+
+.EX
+.B setsebool -P allow_mplayer_execstack 1
+.EE
+
+.PP
+If you want to allow all daemons to write corefiles to , you must turn on the allow_daemons_dump_core boolean.
+
+.EX
+.B setsebool -P allow_daemons_dump_core 1
+.EE
+
+.PP
+If you want to allow Apache to execute tmp content, you must turn on the httpd_tmp_exec boolean.
+
+.EX
+.B setsebool -P httpd_tmp_exec 1
+.EE
+
+.PP
+If you want to allow gssd to read temp directory.  For access to kerberos tgt, you must turn on the allow_gssd_read_tmp boolean.
+
+.EX
+.B setsebool -P allow_gssd_read_tmp 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for mpd:
+
+
+.EX
+.PP
+.B mpd_data_t 
+.EE
+
+- Set files with the mpd_data_t type, if you want to treat the files as mpd content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/mpd/playlists(/.*)?, /var/lib/mpd/music(/.*)?
+
+.EX
+.PP
+.B mpd_etc_t 
+.EE
+
+- Set files with the mpd_etc_t type, if you want to store mpd files in the /etc directories.
+
+
+.EX
+.PP
+.B mpd_exec_t 
+.EE
+
+- Set files with the mpd_exec_t type, if you want to transition an executable to the mpd_t domain.
+
+
+.EX
+.PP
+.B mpd_initrc_exec_t 
+.EE
+
+- Set files with the mpd_initrc_exec_t type, if you want to transition an executable to the mpd_initrc_t domain.
+
+
+.EX
+.PP
+.B mpd_log_t 
+.EE
+
+- Set files with the mpd_log_t type, if you want to treat the data as mpd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mpd_tmp_t 
+.EE
+
+- Set files with the mpd_tmp_t type, if you want to store mpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mpd_tmpfs_t 
+.EE
+
+- Set files with the mpd_tmpfs_t type, if you want to store mpd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B mpd_var_lib_t 
+.EE
+
+- Set files with the mpd_var_lib_t type, if you want to store the mpd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for mpd:
+
+.EX
+.TP 5
+.B mpd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for mpd:
+
+.EX
+.B mpd_t, mplayer_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mplayer_selinux.8 serefpolicy-3.7.19/man/man8/mplayer_selinux.8
--- nsaserefpolicy/man/man8/mplayer_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mplayer_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,120 @@
+.TH  "mplayer_selinux"  "8"  "mplayer" "dwalsh@redhat.com" "mplayer SELinux Policy documentation"
+.SH "NAME"
+mplayer_selinux \- Security Enhanced Linux Policy for the mplayer processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mplayer
+(Mplayer media player and encoder)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mplayer policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mplayer with the tightest access possible.
+
+
+.PP
+If you want to allow mplayer executable stac, you must turn on the allow_mplayer_execstack boolean.
+
+.EX
+.B setsebool -P allow_mplayer_execstack 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mplayer policy is very flexible allowing users to setup their mplayer processes in as secure a method as possible.
+.PP 
+The following file types are defined for mplayer:
+
+
+.EX
+.PP
+.B mplayer_etc_t 
+.EE
+
+- Set files with the mplayer_etc_t type, if you want to store mplayer files in the /etc directories.
+
+
+.EX
+.PP
+.B mplayer_exec_t 
+.EE
+
+- Set files with the mplayer_exec_t type, if you want to transition an executable to the mplayer_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/vlc, /usr/bin/mplayer, /usr/bin/xine
+
+.EX
+.PP
+.B mplayer_home_t 
+.EE
+
+- Set files with the mplayer_home_t type, if you want to store mplayer files in the users home directory.
+
+
+.EX
+.PP
+.B mplayer_tmpfs_t 
+.EE
+
+- Set files with the mplayer_tmpfs_t type, if you want to store mplayer files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mplayer policy is very flexible allowing users to setup their mplayer processes in as secure a method as possible.
+.PP 
+The following process types are defined for mplayer:
+
+.EX
+.B mplayer_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mplayer(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mrtg_selinux.8 serefpolicy-3.7.19/man/man8/mrtg_selinux.8
--- nsaserefpolicy/man/man8/mrtg_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mrtg_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,121 @@
+.TH  "mrtg_selinux"  "8"  "mrtg" "dwalsh@redhat.com" "mrtg SELinux Policy documentation"
+.SH "NAME"
+mrtg_selinux \- Security Enhanced Linux Policy for the mrtg processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mrtg
+(Network traffic graphing)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mrtg policy is very flexible allowing users to setup their mrtg processes in as secure a method as possible.
+.PP 
+The following file types are defined for mrtg:
+
+
+.EX
+.PP
+.B mrtg_etc_t 
+.EE
+
+- Set files with the mrtg_etc_t type, if you want to store mrtg files in the /etc directories.
+
+
+.EX
+.PP
+.B mrtg_exec_t 
+.EE
+
+- Set files with the mrtg_exec_t type, if you want to transition an executable to the mrtg_t domain.
+
+
+.EX
+.PP
+.B mrtg_lock_t 
+.EE
+
+- Set files with the mrtg_lock_t type, if you want to treat the files as mrtg lock data, stored under the /var/lock directory
+
+.br
+.TP 5
+Paths: 
+/var/lock/mrtg(/.*)?, /etc/mrtg/mrtg\.ok
+
+.EX
+.PP
+.B mrtg_log_t 
+.EE
+
+- Set files with the mrtg_log_t type, if you want to treat the data as mrtg log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mrtg_var_lib_t 
+.EE
+
+- Set files with the mrtg_var_lib_t type, if you want to store the mrtg files under the /var/lib directory.
+
+
+.EX
+.PP
+.B mrtg_var_run_t 
+.EE
+
+- Set files with the mrtg_var_run_t type, if you want to store the mrtg files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mrtg policy is very flexible allowing users to setup their mrtg processes in as secure a method as possible.
+.PP 
+The following process types are defined for mrtg:
+
+.EX
+.B mrtg_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mrtg(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/munin_selinux.8 serefpolicy-3.7.19/man/man8/munin_selinux.8
--- nsaserefpolicy/man/man8/munin_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/munin_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,259 @@
+.TH  "munin_selinux"  "8"  "munin" "dwalsh@redhat.com" "munin SELinux Policy documentation"
+.SH "NAME"
+munin_selinux \- Security Enhanced Linux Policy for the munin processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B munin
+(Munin network-wide load graphing (formerly LRRD))
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
+.PP 
+The following file types are defined for munin:
+
+
+.EX
+.PP
+.B munin_disk_plugin_exec_t 
+.EE
+
+- Set files with the munin_disk_plugin_exec_t type, if you want to transition an executable to the munin_disk_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/munin/plugins/smart_.*, /usr/share/munin/plugins/diskstat.*, /usr/share/munin/plugins/hddtemp.*, /usr/share/munin/plugins/df.*
+
+.EX
+.PP
+.B munin_disk_plugin_tmp_t 
+.EE
+
+- Set files with the munin_disk_plugin_tmp_t type, if you want to store munin disk plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B munin_etc_t 
+.EE
+
+- Set files with the munin_etc_t type, if you want to store munin files in the /etc directories.
+
+
+.EX
+.PP
+.B munin_exec_t 
+.EE
+
+- Set files with the munin_exec_t type, if you want to transition an executable to the munin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/munin-.*, /usr/share/munin/munin-.*, /usr/share/munin/plugins/.*, /usr/bin/munin-.*
+
+.EX
+.PP
+.B munin_initrc_exec_t 
+.EE
+
+- Set files with the munin_initrc_exec_t type, if you want to transition an executable to the munin_initrc_t domain.
+
+
+.EX
+.PP
+.B munin_log_t 
+.EE
+
+- Set files with the munin_log_t type, if you want to treat the data as munin log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B munin_mail_plugin_exec_t 
+.EE
+
+- Set files with the munin_mail_plugin_exec_t type, if you want to transition an executable to the munin_mail_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/munin/plugins/postfix_mail.*, /usr/share/munin/plugins/mailman, /usr/share/munin/plugins/mailscanner, /usr/share/munin/plugins/courier_mta_.*, /usr/share/munin/plugins/exim_mail.*, /usr/share/munin/plugins/qmail.*, /usr/share/munin/plugins/sendmail_.*
+
+.EX
+.PP
+.B munin_mail_plugin_tmp_t 
+.EE
+
+- Set files with the munin_mail_plugin_tmp_t type, if you want to store munin mail plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B munin_plugin_state_t 
+.EE
+
+- Set files with the munin_plugin_state_t type, if you want to treat the files as munin plugin state data.
+
+
+.EX
+.PP
+.B munin_selinux_plugin_exec_t 
+.EE
+
+- Set files with the munin_selinux_plugin_exec_t type, if you want to transition an executable to the munin_selinux_plugin_t domain.
+
+
+.EX
+.PP
+.B munin_selinux_plugin_tmp_t 
+.EE
+
+- Set files with the munin_selinux_plugin_tmp_t type, if you want to store munin selinux plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B munin_services_plugin_exec_t 
+.EE
+
+- Set files with the munin_services_plugin_exec_t type, if you want to transition an executable to the munin_services_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/munin/plugins/samba, /usr/share/munin/plugins/ping_, /usr/share/munin/plugins/snmp_.*, /usr/share/munin/plugins/named, /usr/share/munin/plugins/varnish_.*, /usr/share/munin/plugins/tomcat_.*, /usr/share/munin/plugins/postgres_.*, /usr/share/munin/plugins/asterisk_.*, /usr/share/munin/plugins/lpstat, /usr/share/munin/plugins/mysql_.*, /usr/share/munin/plugins/slapd_.*, /usr/share/munin/plugins/nut.*, /usr/share/munin/plugins/apache_.*, /usr/share/munin/plugins/squid_.*, /usr/share/munin/plugins/fail2ban, /usr/share/munin/plugins/openvpn, /usr/share/munin/plugins/http_loadtime, /usr/share/munin/plugins/ntp_.*
+
+.EX
+.PP
+.B munin_services_plugin_tmp_t 
+.EE
+
+- Set files with the munin_services_plugin_tmp_t type, if you want to store munin services plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B munin_system_plugin_exec_t 
+.EE
+
+- Set files with the munin_system_plugin_exec_t type, if you want to transition an executable to the munin_system_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/munin/plugins/proc_pri, /usr/share/munin/plugins/swap, /usr/share/munin/plugins/interrupts, /usr/share/munin/plugins/cpu.*, /usr/share/munin/plugins/load, /usr/share/munin/plugins/processes, /usr/share/munin/plugins/iostat.*, /usr/share/munin/plugins/nfs.*, /usr/share/munin/plugins/yum, /usr/share/munin/plugins/munin_*, /usr/share/munin/plugins/irqstats, /usr/share/munin/plugins/threads, /usr/share/munin/plugins/netstat, /usr/share/munin/plugins/acpi, /usr/share/munin/plugins/forks, /usr/share/munin/plugins/uptime, /usr/share/munin/plugins/users, /usr/share/munin/plugins/memory, /usr/share/munin/plugins/if_.*, /usr/share/munin/plugins/open_files
+
+.EX
+.PP
+.B munin_system_plugin_tmp_t 
+.EE
+
+- Set files with the munin_system_plugin_tmp_t type, if you want to store munin system plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B munin_tmp_t 
+.EE
+
+- Set files with the munin_tmp_t type, if you want to store munin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B munin_var_lib_t 
+.EE
+
+- Set files with the munin_var_lib_t type, if you want to store the munin files under the /var/lib directory.
+
+
+.EX
+.PP
+.B munin_var_run_t 
+.EE
+
+- Set files with the munin_var_run_t type, if you want to store the munin files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
+.PP 
+The following port types are defined for munin:
+
+.EX
+.TP 5
+.B munin_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
+.PP 
+The following process types are defined for munin:
+
+.EX
+.B munin_mail_plugin_t, munin_disk_plugin_t, munin_services_plugin_t, munin_selinux_plugin_t, munin_system_plugin_t, munin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), munin(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mysqld_selinux.8 serefpolicy-3.7.19/man/man8/mysqld_selinux.8
--- nsaserefpolicy/man/man8/mysqld_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mysqld_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,202 @@
+.TH  "mysqld_selinux"  "8"  "mysqld" "dwalsh@redhat.com" "mysqld SELinux Policy documentation"
+.SH "NAME"
+mysqld_selinux \- Security Enhanced Linux Policy for the mysqld processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mysqld policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mysqld with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to mysq, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to allow mysqld to connect to all port, you must turn on the mysql_connect_any boolean.
+
+.EX
+.B setsebool -P mysql_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
+.PP 
+The following file types are defined for mysqld:
+
+
+.EX
+.PP
+.B mysqld_db_t 
+.EE
+
+- Set files with the mysqld_db_t type, if you want to treat the files as mysqld database content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/squeezeboxserver(/.*)?, /var/lib/mysql(/.*)?
+
+.EX
+.PP
+.B mysqld_etc_t 
+.EE
+
+- Set files with the mysqld_etc_t type, if you want to store mysqld files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/my\.cnf, /etc/mysql(/.*)?
+
+.EX
+.PP
+.B mysqld_exec_t 
+.EE
+
+- Set files with the mysqld_exec_t type, if you want to transition an executable to the mysqld_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/mysqld, /usr/sbin/mysqld(-max)?
+
+.EX
+.PP
+.B mysqld_initrc_exec_t 
+.EE
+
+- Set files with the mysqld_initrc_exec_t type, if you want to transition an executable to the mysqld_initrc_t domain.
+
+
+.EX
+.PP
+.B mysqld_log_t 
+.EE
+
+- Set files with the mysqld_log_t type, if you want to treat the data as mysqld log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mysqld_safe_exec_t 
+.EE
+
+- Set files with the mysqld_safe_exec_t type, if you want to transition an executable to the mysqld_safe_t domain.
+
+
+.EX
+.PP
+.B mysqld_tmp_t 
+.EE
+
+- Set files with the mysqld_tmp_t type, if you want to store mysqld temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mysqld_var_run_t 
+.EE
+
+- Set files with the mysqld_var_run_t type, if you want to store the mysqld files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/mysqld(/.*)?, /var/lib/mysql/mysql\.sock
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
+.PP 
+The following port types are defined for mysqld:
+
+.EX
+.TP 5
+.B mysqld_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B mysqlmanagerd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
+.PP 
+The following process types are defined for mysqld:
+
+.EX
+.B mysqld_safe_t, mysqlmanagerd_t, mysqld_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mysqld(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/mysqlmanagerd_selinux.8 serefpolicy-3.7.19/man/man8/mysqlmanagerd_selinux.8
--- nsaserefpolicy/man/man8/mysqlmanagerd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/mysqlmanagerd_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,113 @@
+.TH  "mysqlmanagerd_selinux"  "8"  "mysqlmanagerd" "dwalsh@redhat.com" "mysqlmanagerd SELinux Policy documentation"
+.SH "NAME"
+mysqlmanagerd_selinux \- Security Enhanced Linux Policy for the mysqlmanagerd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
+.PP 
+The following file types are defined for mysqlmanagerd:
+
+
+.EX
+.PP
+.B mysqlmanagerd_exec_t 
+.EE
+
+- Set files with the mysqlmanagerd_exec_t type, if you want to transition an executable to the mysqlmanagerd_t domain.
+
+
+.EX
+.PP
+.B mysqlmanagerd_initrc_exec_t 
+.EE
+
+- Set files with the mysqlmanagerd_initrc_exec_t type, if you want to transition an executable to the mysqlmanagerd_initrc_t domain.
+
+
+.EX
+.PP
+.B mysqlmanagerd_var_run_t 
+.EE
+
+- Set files with the mysqlmanagerd_var_run_t type, if you want to store the mysqlmanagerd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
+.PP 
+The following port types are defined for mysqlmanagerd:
+
+.EX
+.TP 5
+.B mysqlmanagerd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
+.PP 
+The following process types are defined for mysqlmanagerd:
+
+.EX
+.B mysqlmanagerd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mysqlmanagerd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nagios_selinux.8 serefpolicy-3.7.19/man/man8/nagios_selinux.8
--- nsaserefpolicy/man/man8/nagios_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nagios_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,209 @@
+.TH  "nagios_selinux"  "8"  "nagios" "dwalsh@redhat.com" "nagios SELinux Policy documentation"
+.SH "NAME"
+nagios_selinux \- Security Enhanced Linux Policy for the nagios processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nagios
+(Net Saint / NAGIOS - network monitoring server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nagios policy is very flexible allowing users to setup their nagios processes in as secure a method as possible.
+.PP 
+The following file types are defined for nagios:
+
+
+.EX
+.PP
+.B nagios_admin_plugin_exec_t 
+.EE
+
+- Set files with the nagios_admin_plugin_exec_t type, if you want to transition an executable to the nagios_admin_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_checkdisk_plugin_exec_t 
+.EE
+
+- Set files with the nagios_checkdisk_plugin_exec_t type, if you want to transition an executable to the nagios_checkdisk_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/nagios/plugins/check_disk, /usr/lib(64)?/nagios/plugins/check_ide_smart, /usr/lib(64)?/nagios/plugins/check_disk_smb, /usr/lib(64)?/nagios/plugins/check_linux_raid
+
+.EX
+.PP
+.B nagios_etc_t 
+.EE
+
+- Set files with the nagios_etc_t type, if you want to store nagios files in the /etc directories.
+
+
+.EX
+.PP
+.B nagios_eventhandler_plugin_exec_t 
+.EE
+
+- Set files with the nagios_eventhandler_plugin_exec_t type, if you want to transition an executable to the nagios_eventhandler_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_exec_t 
+.EE
+
+- Set files with the nagios_exec_t type, if you want to transition an executable to the nagios_t domain.
+
+
+.EX
+.PP
+.B nagios_initrc_exec_t 
+.EE
+
+- Set files with the nagios_initrc_exec_t type, if you want to transition an executable to the nagios_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/nagios, /etc/rc\.d/init\.d/nrpe
+
+.EX
+.PP
+.B nagios_log_t 
+.EE
+
+- Set files with the nagios_log_t type, if you want to treat the data as nagios log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/netsaint(/.*)?, /var/log/nagios(/.*)?
+
+.EX
+.PP
+.B nagios_mail_plugin_exec_t 
+.EE
+
+- Set files with the nagios_mail_plugin_exec_t type, if you want to transition an executable to the nagios_mail_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_services_plugin_exec_t 
+.EE
+
+- Set files with the nagios_services_plugin_exec_t type, if you want to transition an executable to the nagios_services_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/nagios/plugins/check_smtp, /usr/lib(64)?/nagios/plugins/check_breeze, /usr/lib(64)?/nagios/plugins/check_ups, /usr/lib(64)?/nagios/plugins/check_pgsql, /usr/lib(64)?/nagios/plugins/check_ntp.*, /usr/lib(64)?/nagios/plugins/check_ssh, /usr/lib(64)?/nagios/plugins/check_mysql_query, /usr/lib(64)?/nagios/plugins/check_nrpe, /usr/lib(64)?/nagios/plugins/check_ping, /usr/lib(64)?/nagios/plugins/check_ircd, /usr/lib(64)?/nagios/plugins/check_cluster, /usr/lib(64)?/nagios/plugins/check_tcp, /usr/lib(64)?/nagios/plugins/check_real, /usr/lib(64)?/nagios/plugins/check_dhcp, /usr/lib(64)?/nagios/plugins/check_ldap, /usr/lib(64)?/nagios/plugins/check_sip, /usr/lib(64)?/nagios/plugins/check_mysql, /usr/lib(64)?/nagios/plugins/check_rpc, /usr/lib(64)?/nagios/plugins/check_fping, /usr/lib(64)?/nagios/plugins/check_http, /usr/lib(64)?/nagios/plugins/check_dig, /usr/lib(64)?/nagios/plugins/check_game, /usr/lib(64)?/nagios/plugins/check_time, /usr/lib(64)?/nagios/plugins/check_radius, /usr/lib(64)?/nagios/plugins/check_hpjd, /usr/lib(64)?/nagios/plugins/check_dns, /usr/lib(64)?/nagios/plugins/check_icmp, /usr/lib(64)?/nagios/plugins/check_snmp.*, /usr/lib(64)?/nagios/plugins/check_nt, /usr/lib(64)?/nagios/plugins/check_dummy, /usr/lib(64)?/nagios/plugins/check_oracle
+
+.EX
+.PP
+.B nagios_spool_t 
+.EE
+
+- Set files with the nagios_spool_t type, if you want to store the nagios files under the /var/spool directory.
+
+
+.EX
+.PP
+.B nagios_system_plugin_exec_t 
+.EE
+
+- Set files with the nagios_system_plugin_exec_t type, if you want to transition an executable to the nagios_system_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/nagios/plugins/check_flexlm, /usr/lib(64)?/nagios/plugins/check_wave, /usr/lib(64)?/nagios/plugins/check_nagios, /usr/lib(64)?/nagios/plugins/check_mrtgtraf, /usr/lib(64)?/nagios/plugins/check_overcr, /usr/lib(64)?/nagios/plugins/check_procs, /usr/lib(64)?/nagios/plugins/check_log, /usr/lib(64)?/nagios/plugins/check_users, /usr/lib(64)?/nagios/plugins/check_nwstat, /usr/lib(64)?/nagios/plugins/check_load, /usr/lib(64)?/nagios/plugins/check_ifoperstatus, /usr/lib(64)?/nagios/plugins/check_mrtg, /usr/lib(64)?/nagios/plugins/check_swap, /usr/lib(64)?/nagios/plugins/check_sensors, /usr/lib(64)?/nagios/plugins/check_ifstatus
+
+.EX
+.PP
+.B nagios_system_plugin_tmp_t 
+.EE
+
+- Set files with the nagios_system_plugin_tmp_t type, if you want to store nagios system plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nagios_tmp_t 
+.EE
+
+- Set files with the nagios_tmp_t type, if you want to store nagios temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nagios_unconfined_plugin_exec_t 
+.EE
+
+- Set files with the nagios_unconfined_plugin_exec_t type, if you want to transition an executable to the nagios_unconfined_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_var_run_t 
+.EE
+
+- Set files with the nagios_var_run_t type, if you want to store the nagios files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nagios policy is very flexible allowing users to setup their nagios processes in as secure a method as possible.
+.PP 
+The following process types are defined for nagios:
+
+.EX
+.B nagios_t, nagios_mail_plugin_t, nagios_checkdisk_plugin_t, nagios_services_plugin_t, nagios_eventhandler_plugin_t, nagios_system_plugin_t, nagios_unconfined_plugin_t, nagios_admin_plugin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nagios(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/named_selinux.8 serefpolicy-3.7.19/man/man8/named_selinux.8
--- nsaserefpolicy/man/man8/named_selinux.8	2011-03-17 07:21:23.198851003 +0000
+++ serefpolicy-3.7.19/man/man8/named_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -1,30 +1,192 @@
-.TH  "named_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "named Selinux Policy documentation"
-.de EX
-.nf
-.ft CW
-..
-.de EE
-.ft R
-.fi
-..
+.TH  "named_selinux"  "8"  "named" "dwalsh@redhat.com" "named SELinux Policy documentation"
 .SH "NAME"
-named_selinux \- Security Enhanced Linux Policy for the Internet Name server (named) daemon
+named_selinux \- Security Enhanced Linux Policy for the named processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the named server via flexible mandatory access
+
+SELinux Linux secures
+.B named
+(Berkeley internet name domain DNS server)
+processes via flexible mandatory access
 control.  
+
+
+
 .SH BOOLEANS
-SELinux policy is customizable based on least access required.  So by 
-default SElinux policy does not allow named to write master zone files.  If you want to have named update the master zone files you need to set the named_write_master_zones boolean.
+SELinux policy is customizable based on least access required.  named policy is extremely flexible and has several booleans that allow you to manipulate the policy and run named with the tightest access possible.
+
+
+.PP
+If you want to allow BIND to write the master zone files. Generally this is used for dynamic DNS or zone transfers, you must turn on the named_write_master_zones boolean.
+
 .EX
-setsebool -P named_write_master_zones 1
+.B setsebool -P named_write_master_zones 1
 .EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
 .PP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
-.SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux named policy is very flexible allowing users to setup their named processes in as secure a method as possible.
+.PP 
+The following file types are defined for named:
 
-.SH "SEE ALSO"
-selinux(8), named(8), chcon(1), setsebool(8)
 
+.EX
+.PP
+.B named_cache_t 
+.EE
+
+- Set files with the named_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/named/slaves(/.*)?, /var/named/chroot/var/named/data(/.*)?, /var/named/chroot/var/tmp(/.*)?, /var/named/data(/.*)?, /var/named/chroot/var/named/slaves(/.*)?, /var/named/dynamic(/.*)?, /var/named/chroot/var/named/dynamic(/.*)?
+
+.EX
+.PP
+.B named_checkconf_exec_t 
+.EE
+
+- Set files with the named_checkconf_exec_t type, if you want to transition an executable to the named_checkconf_t domain.
+
+
+.EX
+.PP
+.B named_conf_t 
+.EE
+
+- Set files with the named_conf_t type, if you want to treat the files as named configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/var/named/chroot/etc/named\.root\.hints, /var/named/chroot(/.*)?, /var/named/named\.ca, /etc/unbound(/.*)?, /var/named/chroot/etc/named\.caching-nameserver\.conf, /etc/named\.root\.hints, /var/named/chroot/etc/named\.rfc1912.zones, /etc/named\.rfc1912.zones, /etc/named\.caching-nameserver\.conf, /etc/named\.conf, /var/named/chroot/var/named/named\.ca, /var/named/chroot/etc/named\.conf, /etc/rndc.*
+
+.EX
+.PP
+.B named_exec_t 
+.EE
+
+- Set files with the named_exec_t type, if you want to transition an executable to the named_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/unbound, /usr/sbin/named, /usr/sbin/lwresd
+
+.EX
+.PP
+.B named_initrc_exec_t 
+.EE
+
+- Set files with the named_initrc_exec_t type, if you want to transition an executable to the named_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/named, /etc/rc\.d/init\.d/unbound
+
+.EX
+.PP
+.B named_keytab_t 
+.EE
 
+- Set files with the named_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B named_log_t 
+.EE
+
+- Set files with the named_log_t type, if you want to treat the data as named log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/named.*, /var/named/chroot/var/log/named.*
+
+.EX
+.PP
+.B named_tmp_t 
+.EE
+
+- Set files with the named_tmp_t type, if you want to store named temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B named_var_run_t 
+.EE
+
+- Set files with the named_var_run_t type, if you want to store the named files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/named/chroot/var/run/named.*, /var/run/ndc, /var/run/bind(/.*)?, /var/run/named(/.*)?, /var/run/unbound(/.*)?
+
+.EX
+.PP
+.B named_zone_t 
+.EE
+
+- Set files with the named_zone_t type, if you want to treat the files as named zone data.
+
+.br
+.TP 5
+Paths: 
+/var/named/chroot/var/named(/.*)?, /var/named(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux named policy is very flexible allowing users to setup their named processes in as secure a method as possible.
+.PP 
+The following process types are defined for named:
+
+.EX
+.B named_t, namespace_init_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), named(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/namespace_selinux.8 serefpolicy-3.7.19/man/man8/namespace_selinux.8
--- nsaserefpolicy/man/man8/namespace_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/namespace_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,77 @@
+.TH  "namespace_selinux"  "8"  "namespace" "dwalsh@redhat.com" "namespace SELinux Policy documentation"
+.SH "NAME"
+namespace_selinux \- Security Enhanced Linux Policy for the namespace processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B namespace
+(policy for namespace)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux namespace policy is very flexible allowing users to setup their namespace processes in as secure a method as possible.
+.PP 
+The following file types are defined for namespace:
+
+
+.EX
+.PP
+.B namespace_init_exec_t 
+.EE
+
+- Set files with the namespace_init_exec_t type, if you want to transition an executable to the namespace_init_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux namespace policy is very flexible allowing users to setup their namespace processes in as secure a method as possible.
+.PP 
+The following process types are defined for namespace:
+
+.EX
+.B namespace_init_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), namespace(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ncftool_selinux.8 serefpolicy-3.7.19/man/man8/ncftool_selinux.8
--- nsaserefpolicy/man/man8/ncftool_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ncftool_selinux.8	2012-03-20 22:37:14.349458303 +0000
@@ -0,0 +1,92 @@
+.TH  "ncftool_selinux"  "8"  "ncftool" "dwalsh@redhat.com" "ncftool SELinux Policy documentation"
+.SH "NAME"
+ncftool_selinux \- Security Enhanced Linux Policy for the ncftool processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ncftool
+(policy for ncftool)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  ncftool policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ncftool with the tightest access possible.
+
+
+.PP
+If you want to allow ncftool to read user content, you must turn on the ncftool_read_user_content boolean.
+
+.EX
+.B setsebool -P ncftool_read_user_content 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ncftool policy is very flexible allowing users to setup their ncftool processes in as secure a method as possible.
+.PP 
+The following file types are defined for ncftool:
+
+
+.EX
+.PP
+.B ncftool_exec_t 
+.EE
+
+- Set files with the ncftool_exec_t type, if you want to transition an executable to the ncftool_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ncftool policy is very flexible allowing users to setup their ncftool processes in as secure a method as possible.
+.PP 
+The following process types are defined for ncftool:
+
+.EX
+.B ncftool_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ncftool(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ndc_selinux.8 serefpolicy-3.7.19/man/man8/ndc_selinux.8
--- nsaserefpolicy/man/man8/ndc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ndc_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,71 @@
+.TH  "ndc_selinux"  "8"  "ndc" "dwalsh@redhat.com" "ndc SELinux Policy documentation"
+.SH "NAME"
+ndc_selinux \- Security Enhanced Linux Policy for the ndc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ndc policy is very flexible allowing users to setup their ndc processes in as secure a method as possible.
+.PP 
+The following file types are defined for ndc:
+
+
+.EX
+.PP
+.B ndc_exec_t 
+.EE
+
+- Set files with the ndc_exec_t type, if you want to transition an executable to the ndc_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ndc policy is very flexible allowing users to setup their ndc processes in as secure a method as possible.
+.PP 
+The following process types are defined for ndc:
+
+.EX
+.B ndc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ndc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/netlabel_selinux.8 serefpolicy-3.7.19/man/man8/netlabel_selinux.8
--- nsaserefpolicy/man/man8/netlabel_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/netlabel_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,77 @@
+.TH  "netlabel_selinux"  "8"  "netlabel" "dwalsh@redhat.com" "netlabel SELinux Policy documentation"
+.SH "NAME"
+netlabel_selinux \- Security Enhanced Linux Policy for the netlabel processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B netlabel
+(NetLabel/CIPSO labeled networking management)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux netlabel policy is very flexible allowing users to setup their netlabel processes in as secure a method as possible.
+.PP 
+The following file types are defined for netlabel:
+
+
+.EX
+.PP
+.B netlabel_mgmt_exec_t 
+.EE
+
+- Set files with the netlabel_mgmt_exec_t type, if you want to transition an executable to the netlabel_mgmt_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux netlabel policy is very flexible allowing users to setup their netlabel processes in as secure a method as possible.
+.PP 
+The following process types are defined for netlabel:
+
+.EX
+.B netlabel_mgmt_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), netlabel(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/netlogond_selinux.8 serefpolicy-3.7.19/man/man8/netlogond_selinux.8
--- nsaserefpolicy/man/man8/netlogond_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/netlogond_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,99 @@
+.TH  "netlogond_selinux"  "8"  "netlogond" "dwalsh@redhat.com" "netlogond SELinux Policy documentation"
+.SH "NAME"
+netlogond_selinux \- Security Enhanced Linux Policy for the netlogond processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux netlogond policy is very flexible allowing users to setup their netlogond processes in as secure a method as possible.
+.PP 
+The following file types are defined for netlogond:
+
+
+.EX
+.PP
+.B netlogond_exec_t 
+.EE
+
+- Set files with the netlogond_exec_t type, if you want to transition an executable to the netlogond_t domain.
+
+
+.EX
+.PP
+.B netlogond_var_lib_t 
+.EE
+
+- Set files with the netlogond_var_lib_t type, if you want to store the netlogond files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/likewise-open/krb5-affinity.conf, /var/lib/likewise-open/LWNetsd\.err
+
+.EX
+.PP
+.B netlogond_var_run_t 
+.EE
+
+- Set files with the netlogond_var_run_t type, if you want to store the netlogond files under the /run directory.
+
+
+.EX
+.PP
+.B netlogond_var_socket_t 
+.EE
+
+- Set files with the netlogond_var_socket_t type, if you want to treat the files as netlogond var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux netlogond policy is very flexible allowing users to setup their netlogond processes in as secure a method as possible.
+.PP 
+The following process types are defined for netlogond:
+
+.EX
+.B netlogond_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), netlogond(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/netutils_selinux.8 serefpolicy-3.7.19/man/man8/netutils_selinux.8
--- nsaserefpolicy/man/man8/netutils_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/netutils_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,89 @@
+.TH  "netutils_selinux"  "8"  "netutils" "dwalsh@redhat.com" "netutils SELinux Policy documentation"
+.SH "NAME"
+netutils_selinux \- Security Enhanced Linux Policy for the netutils processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B netutils
+(Network analysis utilities)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux netutils policy is very flexible allowing users to setup their netutils processes in as secure a method as possible.
+.PP 
+The following file types are defined for netutils:
+
+
+.EX
+.PP
+.B netutils_exec_t 
+.EE
+
+- Set files with the netutils_exec_t type, if you want to transition an executable to the netutils_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/arping, /usr/sbin/tcpdump
+
+.EX
+.PP
+.B netutils_tmp_t 
+.EE
+
+- Set files with the netutils_tmp_t type, if you want to store netutils temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux netutils policy is very flexible allowing users to setup their netutils processes in as secure a method as possible.
+.PP 
+The following process types are defined for netutils:
+
+.EX
+.B netutils_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), netutils(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/NetworkManager_selinux.8 serefpolicy-3.7.19/man/man8/NetworkManager_selinux.8
--- nsaserefpolicy/man/man8/NetworkManager_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/NetworkManager_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,137 @@
+.TH  "NetworkManager_selinux"  "8"  "NetworkManager" "dwalsh@redhat.com" "NetworkManager SELinux Policy documentation"
+.SH "NAME"
+NetworkManager_selinux \- Security Enhanced Linux Policy for the NetworkManager processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B NetworkManager
+(Manager for dynamically switching between networks)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux NetworkManager policy is very flexible allowing users to setup their NetworkManager processes in as secure a method as possible.
+.PP 
+The following file types are defined for NetworkManager:
+
+
+.EX
+.PP
+.B NetworkManager_exec_t 
+.EE
+
+- Set files with the NetworkManager_exec_t type, if you want to transition an executable to the NetworkManager_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/s?bin/wpa_supplicant, /sbin/wpa_supplicant, /usr/sbin/nm-system-settings, /usr/sbin/wicd, /usr/s?bin/NetworkManager, /usr/sbin/NetworkManagerDispatcher
+
+.EX
+.PP
+.B NetworkManager_initrc_exec_t 
+.EE
+
+- Set files with the NetworkManager_initrc_exec_t type, if you want to transition an executable to the NetworkManager_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/wicd, /usr/libexec/nm-dispatcher.action, /etc/NetworkManager/dispatcher\.d(/.*)
+
+.EX
+.PP
+.B NetworkManager_log_t 
+.EE
+
+- Set files with the NetworkManager_log_t type, if you want to treat the data as NetworkManager log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/wicd\.log, /var/log/wpa_supplicant.*, /var/log/wicd(/.*)?
+
+.EX
+.PP
+.B NetworkManager_tmp_t 
+.EE
+
+- Set files with the NetworkManager_tmp_t type, if you want to store NetworkManager temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B NetworkManager_var_lib_t 
+.EE
+
+- Set files with the NetworkManager_var_lib_t type, if you want to store the NetworkManager files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/etc/wicd/wired-settings.conf, /etc/NetworkManager/system-connections(/.*)?, /var/lib/wicd(/.*)?, /etc/NetworkManager(/.*)?, /etc/wicd/manager-settings.conf, /etc/wicd/wireless-settings.conf, /var/lib/NetworkManager(/.*)?
+
+.EX
+.PP
+.B NetworkManager_var_run_t 
+.EE
+
+- Set files with the NetworkManager_var_run_t type, if you want to store the NetworkManager files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/wpa_supplicant-global, /var/run/nm-dhclient.*, /var/run/wpa_supplicant(/.*)?, /var/run/NetworkManager\.pid, /var/run/NetworkManager(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux NetworkManager policy is very flexible allowing users to setup their NetworkManager processes in as secure a method as possible.
+.PP 
+The following process types are defined for NetworkManager:
+
+.EX
+.B NetworkManager_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), NetworkManager(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/newrole_selinux.8 serefpolicy-3.7.19/man/man8/newrole_selinux.8
--- nsaserefpolicy/man/man8/newrole_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/newrole_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,71 @@
+.TH  "newrole_selinux"  "8"  "newrole" "dwalsh@redhat.com" "newrole SELinux Policy documentation"
+.SH "NAME"
+newrole_selinux \- Security Enhanced Linux Policy for the newrole processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux newrole policy is very flexible allowing users to setup their newrole processes in as secure a method as possible.
+.PP 
+The following file types are defined for newrole:
+
+
+.EX
+.PP
+.B newrole_exec_t 
+.EE
+
+- Set files with the newrole_exec_t type, if you want to transition an executable to the newrole_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux newrole policy is very flexible allowing users to setup their newrole processes in as secure a method as possible.
+.PP 
+The following process types are defined for newrole:
+
+.EX
+.B newrole_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), newrole(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nfsd_selinux.8 serefpolicy-3.7.19/man/man8/nfsd_selinux.8
--- nsaserefpolicy/man/man8/nfsd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nfsd_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,199 @@
+.TH  "nfsd_selinux"  "8"  "nfsd" "dwalsh@redhat.com" "nfsd SELinux Policy documentation"
+.SH "NAME"
+nfsd_selinux \- Security Enhanced Linux Policy for the nfsd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  nfsd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run nfsd with the tightest access possible.
+
+
+.PP
+If you want to allow virt to manage nfs file, you must turn on the virt_use_nfs boolean.
+
+.EX
+.B setsebool -P virt_use_nfs 1
+.EE
+
+.PP
+If you want to support NFS home directorie, you must turn on the use_nfs_home_dirs boolean.
+
+.EX
+.B setsebool -P use_nfs_home_dirs 1
+.EE
+
+.PP
+If you want to allow xen to manage nfs file, you must turn on the xen_use_nfs boolean.
+
+.EX
+.B setsebool -P xen_use_nfs 1
+.EE
+
+.PP
+If you want to allow ftp servers to use nfs used for public file transfer services, you must turn on the allow_ftpd_use_nfs boolean.
+
+.EX
+.B setsebool -P allow_ftpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow Git daemon system to access nfs file systems, you must turn on the git_system_use_nfs boolean.
+
+.EX
+.B setsebool -P git_system_use_nfs 1
+.EE
+
+.PP
+If you want to allow qemu to use nfs file system, you must turn on the qemu_use_nfs boolean.
+
+.EX
+.B setsebool -P qemu_use_nfs 1
+.EE
+
+.PP
+If you want to allow rsync servers to share nfs files system, you must turn on the rsync_use_nfs boolean.
+
+.EX
+.B setsebool -P rsync_use_nfs 1
+.EE
+
+.PP
+If you want to allow Cobbler to access nfs file systems, you must turn on the cobbler_use_nfs boolean.
+
+.EX
+.B setsebool -P cobbler_use_nfs 1
+.EE
+
+.PP
+If you want to allow httpd to access nfs file system, you must turn on the httpd_use_nfs boolean.
+
+.EX
+.B setsebool -P httpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow sge to access nfs file systems, you must turn on the sge_use_nfs boolean.
+
+.EX
+.B setsebool -P sge_use_nfs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage nfs file, you must turn on the sanlock_use_nfs boolean.
+
+.EX
+.B setsebool -P sanlock_use_nfs 1
+.EE
+
+.PP
+If you want to allow samba to export NFS volumes, you must turn on the samba_share_nfs boolean.
+
+.EX
+.B setsebool -P samba_share_nfs 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nfsd policy is very flexible allowing users to setup their nfsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for nfsd:
+
+
+.EX
+.PP
+.B nfs_t 
+.EE
+
+- Set files with the nfs_t type, if you want to treat the files as nfs data.
+
+
+.EX
+.PP
+.B nfsd_exec_t 
+.EE
+
+- Set files with the nfsd_exec_t type, if you want to transition an executable to the nfsd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/rpc\.mountd, /usr/sbin/rpc\.nfsd
+
+.EX
+.PP
+.B nfsd_initrc_exec_t 
+.EE
+
+- Set files with the nfsd_initrc_exec_t type, if you want to transition an executable to the nfsd_initrc_t domain.
+
+
+.EX
+.PP
+.B nfsd_ro_t 
+.EE
+
+- Set files with the nfsd_ro_t type, if you want to treat the files as nfsd read/only content.
+
+
+.EX
+.PP
+.B nfsd_rw_t 
+.EE
+
+- Set files with the nfsd_rw_t type, if you want to treat the files as nfsd read/write content.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nfsd policy is very flexible allowing users to setup their nfsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for nfsd:
+
+.EX
+.B nfsd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nfsd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nfs_selinux.8 serefpolicy-3.7.19/man/man8/nfs_selinux.8
--- nsaserefpolicy/man/man8/nfs_selinux.8	2011-03-17 07:21:23.230851002 +0000
+++ serefpolicy-3.7.19/man/man8/nfs_selinux.8	1970-01-01 00:00:00.000000000 +0000
@@ -1,31 +0,0 @@
-.TH  "nfs_selinux"  "8"  "9 Feb 2009" "dwalsh@redhat.com" "NFS SELinux Policy documentation"
-.SH "NAME"
-nfs_selinux \- Security Enhanced Linux Policy for NFS
-.SH "DESCRIPTION"
-
-Security Enhanced Linux secures the NFS server via flexible mandatory access
-control.  
-.SH BOOLEANS
-SELinux policy is customizable based on the least level of access required. SELinux can be configured to not allow NFS to share files. If you want to share NFS partitions, and only allow read-only access to those NFS partitions, turn the nfs_export_all_ro boolean on:
-
-.TP
-setsebool -P nfs_export_all_ro 1
-.TP
-If you want to share files read/write you must set the nfs_export_all_rw boolean.
-.TP
-setsebool -P nfs_export_all_rw 1
-
-.TP
-These booleans are not required when files to be shared are labeled with the public_content_t or public_content_rw_t types. NFS can share files labeled with the public_content_t or public_content_rw_t types even if the nfs_export_all_ro and nfs_export_all_rw booleans are off.
-
-.TP
-If you want to use a remote NFS server for the home directories on this machine, you must set the use_nfs_home_dirs boolean:
-.TP
-setsebool -P use_nfs_home_dirs 1
-.TP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
-.SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
-
-.SH "SEE ALSO"
-selinux(8), chcon(1), setsebool(8)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nis_selinux.8 serefpolicy-3.7.19/man/man8/nis_selinux.8
--- nsaserefpolicy/man/man8/nis_selinux.8	2011-03-17 07:21:23.220851002 +0000
+++ serefpolicy-3.7.19/man/man8/nis_selinux.8	1970-01-01 00:00:00.000000000 +0000
@@ -1 +0,0 @@
-.so man8/ypbind_selinux.8
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nmbd_selinux.8 serefpolicy-3.7.19/man/man8/nmbd_selinux.8
--- nsaserefpolicy/man/man8/nmbd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nmbd_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,109 @@
+.TH  "nmbd_selinux"  "8"  "nmbd" "dwalsh@redhat.com" "nmbd SELinux Policy documentation"
+.SH "NAME"
+nmbd_selinux \- Security Enhanced Linux Policy for the nmbd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
+.PP 
+The following file types are defined for nmbd:
+
+
+.EX
+.PP
+.B nmbd_exec_t 
+.EE
+
+- Set files with the nmbd_exec_t type, if you want to transition an executable to the nmbd_t domain.
+
+
+.EX
+.PP
+.B nmbd_var_run_t 
+.EE
+
+- Set files with the nmbd_var_run_t type, if you want to store the nmbd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/samba/messages\.tdb, /var/run/samba/namelist\.debug, /var/run/nmbd\.pid, /var/run/samba/unexpected\.tdb, /var/run/samba/nmbd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
+.PP 
+The following port types are defined for nmbd:
+
+.EX
+.TP 5
+.B nmbd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
+.PP 
+The following process types are defined for nmbd:
+
+.EX
+.B nmbd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nmbd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nrpe_selinux.8 serefpolicy-3.7.19/man/man8/nrpe_selinux.8
--- nsaserefpolicy/man/man8/nrpe_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nrpe_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,87 @@
+.TH  "nrpe_selinux"  "8"  "nrpe" "dwalsh@redhat.com" "nrpe SELinux Policy documentation"
+.SH "NAME"
+nrpe_selinux \- Security Enhanced Linux Policy for the nrpe processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nrpe policy is very flexible allowing users to setup their nrpe processes in as secure a method as possible.
+.PP 
+The following file types are defined for nrpe:
+
+
+.EX
+.PP
+.B nrpe_etc_t 
+.EE
+
+- Set files with the nrpe_etc_t type, if you want to store nrpe files in the /etc directories.
+
+
+.EX
+.PP
+.B nrpe_exec_t 
+.EE
+
+- Set files with the nrpe_exec_t type, if you want to transition an executable to the nrpe_t domain.
+
+
+.EX
+.PP
+.B nrpe_var_run_t 
+.EE
+
+- Set files with the nrpe_var_run_t type, if you want to store the nrpe files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nrpe policy is very flexible allowing users to setup their nrpe processes in as secure a method as possible.
+.PP 
+The following process types are defined for nrpe:
+
+.EX
+.B nrpe_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nrpe(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nscd_selinux.8 serefpolicy-3.7.19/man/man8/nscd_selinux.8
--- nsaserefpolicy/man/man8/nscd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nscd_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,120 @@
+.TH  "nscd_selinux"  "8"  "nscd" "dwalsh@redhat.com" "nscd SELinux Policy documentation"
+.SH "NAME"
+nscd_selinux \- Security Enhanced Linux Policy for the nscd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nscd
+(Name service cache daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  nscd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run nscd with the tightest access possible.
+
+
+.PP
+If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean.
+
+.EX
+.B setsebool -P nscd_use_shm 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nscd policy is very flexible allowing users to setup their nscd processes in as secure a method as possible.
+.PP 
+The following file types are defined for nscd:
+
+
+.EX
+.PP
+.B nscd_exec_t 
+.EE
+
+- Set files with the nscd_exec_t type, if you want to transition an executable to the nscd_t domain.
+
+
+.EX
+.PP
+.B nscd_initrc_exec_t 
+.EE
+
+- Set files with the nscd_initrc_exec_t type, if you want to transition an executable to the nscd_initrc_t domain.
+
+
+.EX
+.PP
+.B nscd_log_t 
+.EE
+
+- Set files with the nscd_log_t type, if you want to treat the data as nscd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B nscd_var_run_t 
+.EE
+
+- Set files with the nscd_var_run_t type, if you want to store the nscd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/nscd\.pid, /var/run/nscd(/.*)?, /var/db/nscd(/.*)?, /var/run/\.nscd_socket, /var/cache/nscd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nscd policy is very flexible allowing users to setup their nscd processes in as secure a method as possible.
+.PP 
+The following process types are defined for nscd:
+
+.EX
+.B nscd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nscd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nslcd_selinux.8 serefpolicy-3.7.19/man/man8/nslcd_selinux.8
--- nsaserefpolicy/man/man8/nslcd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nslcd_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,101 @@
+.TH  "nslcd_selinux"  "8"  "nslcd" "dwalsh@redhat.com" "nslcd SELinux Policy documentation"
+.SH "NAME"
+nslcd_selinux \- Security Enhanced Linux Policy for the nslcd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nslcd
+(nslcd - local LDAP name service daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nslcd policy is very flexible allowing users to setup their nslcd processes in as secure a method as possible.
+.PP 
+The following file types are defined for nslcd:
+
+
+.EX
+.PP
+.B nslcd_conf_t 
+.EE
+
+- Set files with the nslcd_conf_t type, if you want to treat the files as nslcd configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B nslcd_exec_t 
+.EE
+
+- Set files with the nslcd_exec_t type, if you want to transition an executable to the nslcd_t domain.
+
+
+.EX
+.PP
+.B nslcd_initrc_exec_t 
+.EE
+
+- Set files with the nslcd_initrc_exec_t type, if you want to transition an executable to the nslcd_initrc_t domain.
+
+
+.EX
+.PP
+.B nslcd_var_run_t 
+.EE
+
+- Set files with the nslcd_var_run_t type, if you want to store the nslcd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nslcd policy is very flexible allowing users to setup their nslcd processes in as secure a method as possible.
+.PP 
+The following process types are defined for nslcd:
+
+.EX
+.B nslcd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nslcd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nsplugin_selinux.8 serefpolicy-3.7.19/man/man8/nsplugin_selinux.8
--- nsaserefpolicy/man/man8/nsplugin_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nsplugin_selinux.8	2012-03-20 22:37:14.350458279 +0000
@@ -0,0 +1,142 @@
+.TH  "nsplugin_selinux"  "8"  "nsplugin" "dwalsh@redhat.com" "nsplugin SELinux Policy documentation"
+.SH "NAME"
+nsplugin_selinux \- Security Enhanced Linux Policy for the nsplugin processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nsplugin
+(policy for nsplugin)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  nsplugin policy is extremely flexible and has several booleans that allow you to manipulate the policy and run nsplugin with the tightest access possible.
+
+
+.PP
+If you want to transition to confined nsplugin domains from unconfined use, you must turn on the allow_unconfined_nsplugin_transition boolean.
+
+.EX
+.B setsebool -P allow_unconfined_nsplugin_transition 1
+.EE
+
+.PP
+If you want to allow nsplugin code to connect to unreserved port, you must turn on the nsplugin_can_network boolean.
+
+.EX
+.B setsebool -P nsplugin_can_network 1
+.EE
+
+.PP
+If you want to allow nsplugin code to execmem/execstac, you must turn on the allow_nsplugin_execmem boolean.
+
+.EX
+.B setsebool -P allow_nsplugin_execmem 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nsplugin policy is very flexible allowing users to setup their nsplugin processes in as secure a method as possible.
+.PP 
+The following file types are defined for nsplugin:
+
+
+.EX
+.PP
+.B nsplugin_config_exec_t 
+.EE
+
+- Set files with the nsplugin_config_exec_t type, if you want to transition an executable to the nsplugin_config_t domain.
+
+
+.EX
+.PP
+.B nsplugin_exec_t 
+.EE
+
+- Set files with the nsplugin_exec_t type, if you want to transition an executable to the nsplugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/nspluginscan, /usr/lib(64)?/nspluginwrapper/npviewer.bin, /usr/bin/nspluginviewer
+
+.EX
+.PP
+.B nsplugin_home_t 
+.EE
+
+- Set files with the nsplugin_home_t type, if you want to store nsplugin files in the users home directory.
+
+
+.EX
+.PP
+.B nsplugin_rw_t 
+.EE
+
+- Set files with the nsplugin_rw_t type, if you want to treat the files as nsplugin read/write content.
+
+
+.EX
+.PP
+.B nsplugin_tmp_t 
+.EE
+
+- Set files with the nsplugin_tmp_t type, if you want to store nsplugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nsplugin policy is very flexible allowing users to setup their nsplugin processes in as secure a method as possible.
+.PP 
+The following process types are defined for nsplugin:
+
+.EX
+.B nsplugin_t, nsplugin_config_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nsplugin(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ntop_selinux.8 serefpolicy-3.7.19/man/man8/ntop_selinux.8
--- nsaserefpolicy/man/man8/ntop_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ntop_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,143 @@
+.TH  "ntop_selinux"  "8"  "ntop" "dwalsh@redhat.com" "ntop SELinux Policy documentation"
+.SH "NAME"
+ntop_selinux \- Security Enhanced Linux Policy for the ntop processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ntop
+(Network Top)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
+.PP 
+The following file types are defined for ntop:
+
+
+.EX
+.PP
+.B ntop_etc_t 
+.EE
+
+- Set files with the ntop_etc_t type, if you want to store ntop files in the /etc directories.
+
+
+.EX
+.PP
+.B ntop_exec_t 
+.EE
+
+- Set files with the ntop_exec_t type, if you want to transition an executable to the ntop_t domain.
+
+
+.EX
+.PP
+.B ntop_initrc_exec_t 
+.EE
+
+- Set files with the ntop_initrc_exec_t type, if you want to transition an executable to the ntop_initrc_t domain.
+
+
+.EX
+.PP
+.B ntop_tmp_t 
+.EE
+
+- Set files with the ntop_tmp_t type, if you want to store ntop temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ntop_var_lib_t 
+.EE
+
+- Set files with the ntop_var_lib_t type, if you want to store the ntop files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ntop_var_run_t 
+.EE
+
+- Set files with the ntop_var_run_t type, if you want to store the ntop files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
+.PP 
+The following port types are defined for ntop:
+
+.EX
+.TP 5
+.B ntop_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
+.PP 
+The following process types are defined for ntop:
+
+.EX
+.B ntop_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ntop(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ntpd_selinux.8 serefpolicy-3.7.19/man/man8/ntpd_selinux.8
--- nsaserefpolicy/man/man8/ntpd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ntpd_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,177 @@
+.TH  "ntpd_selinux"  "8"  "ntpd" "dwalsh@redhat.com" "ntpd SELinux Policy documentation"
+.SH "NAME"
+ntpd_selinux \- Security Enhanced Linux Policy for the ntpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ntpd:
+
+
+.EX
+.PP
+.B ntp_drift_t 
+.EE
+
+- Set files with the ntp_drift_t type, if you want to treat the files as ntp drift data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/ntp(/.*)?, /etc/ntp/data(/.*)?
+
+.EX
+.PP
+.B ntpd_exec_t 
+.EE
+
+- Set files with the ntpd_exec_t type, if you want to transition an executable to the ntpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ntpd, /etc/cron\.(daily|weekly)/ntp-server, /etc/cron\.(daily|weekly)/ntp-simple
+
+.EX
+.PP
+.B ntpd_initrc_exec_t 
+.EE
+
+- Set files with the ntpd_initrc_exec_t type, if you want to transition an executable to the ntpd_initrc_t domain.
+
+
+.EX
+.PP
+.B ntpd_key_t 
+.EE
+
+- Set files with the ntpd_key_t type, if you want to treat the files as ntpd key data.
+
+.br
+.TP 5
+Paths: 
+/etc/ntp/crypto(/.*)?, /etc/ntp/keys
+
+.EX
+.PP
+.B ntpd_log_t 
+.EE
+
+- Set files with the ntpd_log_t type, if you want to treat the data as ntpd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/ntpstats(/.*)?, /var/log/xntpd.*, /var/log/ntp.*
+
+.EX
+.PP
+.B ntpd_tmp_t 
+.EE
+
+- Set files with the ntpd_tmp_t type, if you want to store ntpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ntpd_tmpfs_t 
+.EE
+
+- Set files with the ntpd_tmpfs_t type, if you want to store ntpd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B ntpd_var_run_t 
+.EE
+
+- Set files with the ntpd_var_run_t type, if you want to store the ntpd files under the /run directory.
+
+
+.EX
+.PP
+.B ntpdate_exec_t 
+.EE
+
+- Set files with the ntpdate_exec_t type, if you want to transition an executable to the ntpdate_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for ntpd:
+
+.EX
+.TP 5
+.B ntp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ntpd:
+
+.EX
+.B ntpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ntpd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nut_selinux.8 serefpolicy-3.7.19/man/man8/nut_selinux.8
--- nsaserefpolicy/man/man8/nut_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nut_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,109 @@
+.TH  "nut_selinux"  "8"  "nut" "dwalsh@redhat.com" "nut SELinux Policy documentation"
+.SH "NAME"
+nut_selinux \- Security Enhanced Linux Policy for the nut processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nut
+(nut - Network UPS Tools )
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nut policy is very flexible allowing users to setup their nut processes in as secure a method as possible.
+.PP 
+The following file types are defined for nut:
+
+
+.EX
+.PP
+.B nut_conf_t 
+.EE
+
+- Set files with the nut_conf_t type, if you want to treat the files as nut configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B nut_upsd_exec_t 
+.EE
+
+- Set files with the nut_upsd_exec_t type, if you want to transition an executable to the nut_upsd_t domain.
+
+
+.EX
+.PP
+.B nut_upsdrvctl_exec_t 
+.EE
+
+- Set files with the nut_upsdrvctl_exec_t type, if you want to transition an executable to the nut_upsdrvctl_t domain.
+
+
+.EX
+.PP
+.B nut_upsmon_exec_t 
+.EE
+
+- Set files with the nut_upsmon_exec_t type, if you want to transition an executable to the nut_upsmon_t domain.
+
+
+.EX
+.PP
+.B nut_var_run_t 
+.EE
+
+- Set files with the nut_var_run_t type, if you want to store the nut files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nut policy is very flexible allowing users to setup their nut processes in as secure a method as possible.
+.PP 
+The following process types are defined for nut:
+
+.EX
+.B nut_upsd_t, nut_upsmon_t, nut_upsdrvctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nut(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nx_selinux.8 serefpolicy-3.7.19/man/man8/nx_selinux.8
--- nsaserefpolicy/man/man8/nx_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nx_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,121 @@
+.TH  "nx_selinux"  "8"  "nx" "dwalsh@redhat.com" "nx SELinux Policy documentation"
+.SH "NAME"
+nx_selinux \- Security Enhanced Linux Policy for the nx processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nx
+(NX remote desktop)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nx policy is very flexible allowing users to setup their nx processes in as secure a method as possible.
+.PP 
+The following file types are defined for nx:
+
+
+.EX
+.PP
+.B nx_server_exec_t 
+.EE
+
+- Set files with the nx_server_exec_t type, if you want to transition an executable to the nx_server_t domain.
+
+.br
+.TP 5
+Paths: 
+/opt/NX/bin/nxserver, /usr/NX/bin/nxserver, /usr/libexec/nx/nxserver
+
+.EX
+.PP
+.B nx_server_home_ssh_t 
+.EE
+
+- Set files with the nx_server_home_ssh_t type, if you want to treat the files as nx server home ssh data.
+
+.br
+.TP 5
+Paths: 
+/opt/NX/home/nx/\.ssh(/.*)?, /usr/NX/home/nx/\.ssh(/.*)?, /var/lib/nxserver/home/.ssh(/.*)?
+
+.EX
+.PP
+.B nx_server_tmp_t 
+.EE
+
+- Set files with the nx_server_tmp_t type, if you want to store nx server temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nx_server_var_lib_t 
+.EE
+
+- Set files with the nx_server_var_lib_t type, if you want to store the nx server files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/opt/NX/home(/.*)?, /usr/NX/home(/.*)?, /var/lib/nxserver(/.*)?
+
+.EX
+.PP
+.B nx_server_var_run_t 
+.EE
+
+- Set files with the nx_server_var_run_t type, if you want to store the nx server files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nx policy is very flexible allowing users to setup their nx processes in as secure a method as possible.
+.PP 
+The following process types are defined for nx:
+
+.EX
+.B nx_server_t, nx_server_ssh_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nx(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/nx_server_selinux.8 serefpolicy-3.7.19/man/man8/nx_server_selinux.8
--- nsaserefpolicy/man/man8/nx_server_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/nx_server_selinux.8	2012-04-24 11:06:45.876312378 +0000
@@ -0,0 +1,56 @@
+.TH  "nx_server_selinux"  "8"  "nx_server" "mgrepl@redhat.com" "nx_server SELinux Policy documentation"
+.SH "NAME"
+nx_server_r \- \fBnx_server user role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the nx_server_r role is nx_server_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r nx_server_r -t nx_server_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=nx_server_r TYPE=nx_server_t COMMAND
+.br
+sudo will run COMMAND as staff_u:nx_server_r:nx_server_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add nx_server_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r nx_server_r' staff_u 
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/oddjob_selinux.8 serefpolicy-3.7.19/man/man8/oddjob_selinux.8
--- nsaserefpolicy/man/man8/oddjob_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/oddjob_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,101 @@
+.TH  "oddjob_selinux"  "8"  "oddjob" "dwalsh@redhat.com" "oddjob SELinux Policy documentation"
+.SH "NAME"
+oddjob_selinux \- Security Enhanced Linux Policy for the oddjob processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B oddjob
+(
+Oddjob provides a mechanism by which unprivileged applications can
+request that specified privileged operations be performed on their
+behalf.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux oddjob policy is very flexible allowing users to setup their oddjob processes in as secure a method as possible.
+.PP 
+The following file types are defined for oddjob:
+
+
+.EX
+.PP
+.B oddjob_exec_t 
+.EE
+
+- Set files with the oddjob_exec_t type, if you want to transition an executable to the oddjob_t domain.
+
+
+.EX
+.PP
+.B oddjob_mkhomedir_exec_t 
+.EE
+
+- Set files with the oddjob_mkhomedir_exec_t type, if you want to transition an executable to the oddjob_mkhomedir_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/oddjob/mkhomedir, /usr/libexec/oddjob/mkhomedir
+
+.EX
+.PP
+.B oddjob_var_run_t 
+.EE
+
+- Set files with the oddjob_var_run_t type, if you want to store the oddjob files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux oddjob policy is very flexible allowing users to setup their oddjob processes in as secure a method as possible.
+.PP 
+The following process types are defined for oddjob:
+
+.EX
+.B oddjob_mkhomedir_t, oddjob_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), oddjob(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/openct_selinux.8 serefpolicy-3.7.19/man/man8/openct_selinux.8
--- nsaserefpolicy/man/man8/openct_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/openct_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,89 @@
+.TH  "openct_selinux"  "8"  "openct" "dwalsh@redhat.com" "openct SELinux Policy documentation"
+.SH "NAME"
+openct_selinux \- Security Enhanced Linux Policy for the openct processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B openct
+(Service for handling smart card readers)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux openct policy is very flexible allowing users to setup their openct processes in as secure a method as possible.
+.PP 
+The following file types are defined for openct:
+
+
+.EX
+.PP
+.B openct_exec_t 
+.EE
+
+- Set files with the openct_exec_t type, if you want to transition an executable to the openct_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ifdhandler, /usr/sbin/openct-control
+
+.EX
+.PP
+.B openct_var_run_t 
+.EE
+
+- Set files with the openct_var_run_t type, if you want to store the openct files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux openct policy is very flexible allowing users to setup their openct processes in as secure a method as possible.
+.PP 
+The following process types are defined for openct:
+
+.EX
+.B openct_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), openct(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/openoffice_selinux.8 serefpolicy-3.7.19/man/man8/openoffice_selinux.8
--- nsaserefpolicy/man/man8/openoffice_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/openoffice_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,81 @@
+.TH  "openoffice_selinux"  "8"  "openoffice" "dwalsh@redhat.com" "openoffice SELinux Policy documentation"
+.SH "NAME"
+openoffice_selinux \- Security Enhanced Linux Policy for the openoffice processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B openoffice
+(Openoffice)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux openoffice policy is very flexible allowing users to setup their openoffice processes in as secure a method as possible.
+.PP 
+The following file types are defined for openoffice:
+
+
+.EX
+.PP
+.B openoffice_exec_t 
+.EE
+
+- Set files with the openoffice_exec_t type, if you want to transition an executable to the openoffice_t domain.
+
+.br
+.TP 5
+Paths: 
+/opt/openoffice\.org.*/program/.+\.bin, /usr/lib64/openoffice\.org.*/program/.+\.bin, /usr/lib/openoffice\.org.*/program/.+\.bin
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux openoffice policy is very flexible allowing users to setup their openoffice processes in as secure a method as possible.
+.PP 
+The following process types are defined for openoffice:
+
+.EX
+.B openoffice_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), openoffice(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/openvpn_selinux.8 serefpolicy-3.7.19/man/man8/openvpn_selinux.8
--- nsaserefpolicy/man/man8/openvpn_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/openvpn_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,166 @@
+.TH  "openvpn_selinux"  "8"  "openvpn" "dwalsh@redhat.com" "openvpn SELinux Policy documentation"
+.SH "NAME"
+openvpn_selinux \- Security Enhanced Linux Policy for the openvpn processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B openvpn
+(full-featured SSL VPN solution)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  openvpn policy is extremely flexible and has several booleans that allow you to manipulate the policy and run openvpn with the tightest access possible.
+
+
+.PP
+If you want to allow openvpn to read home directorie, you must turn on the openvpn_enable_homedirs boolean.
+
+.EX
+.B setsebool -P openvpn_enable_homedirs 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
+.PP 
+The following file types are defined for openvpn:
+
+
+.EX
+.PP
+.B openvpn_etc_rw_t 
+.EE
+
+- Set files with the openvpn_etc_rw_t type, if you want to treat the files as openvpn etc read/write content.
+
+
+.EX
+.PP
+.B openvpn_etc_t 
+.EE
+
+- Set files with the openvpn_etc_t type, if you want to store openvpn files in the /etc directories.
+
+
+.EX
+.PP
+.B openvpn_exec_t 
+.EE
+
+- Set files with the openvpn_exec_t type, if you want to transition an executable to the openvpn_t domain.
+
+
+.EX
+.PP
+.B openvpn_initrc_exec_t 
+.EE
+
+- Set files with the openvpn_initrc_exec_t type, if you want to transition an executable to the openvpn_initrc_t domain.
+
+
+.EX
+.PP
+.B openvpn_tmp_t 
+.EE
+
+- Set files with the openvpn_tmp_t type, if you want to store openvpn temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B openvpn_var_log_t 
+.EE
+
+- Set files with the openvpn_var_log_t type, if you want to treat the data as openvpn var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B openvpn_var_run_t 
+.EE
+
+- Set files with the openvpn_var_run_t type, if you want to store the openvpn files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
+.PP 
+The following port types are defined for openvpn:
+
+.EX
+.TP 5
+.B openvpn_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
+.PP 
+The following process types are defined for openvpn:
+
+.EX
+.B openvpn_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), openvpn(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/pads_selinux.8 serefpolicy-3.7.19/man/man8/pads_selinux.8
--- nsaserefpolicy/man/man8/pads_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/pads_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,105 @@
+.TH  "pads_selinux"  "8"  "pads" "dwalsh@redhat.com" "pads SELinux Policy documentation"
+.SH "NAME"
+pads_selinux \- Security Enhanced Linux Policy for the pads processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pads
+(Passive Asset Detection System)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pads policy is very flexible allowing users to setup their pads processes in as secure a method as possible.
+.PP 
+The following file types are defined for pads:
+
+
+.EX
+.PP
+.B pads_config_t 
+.EE
+
+- Set files with the pads_config_t type, if you want to treat the files as pads configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/pads-assets.csv, /etc/pads-ether-codes, /etc/pads.conf, /etc/pads-signature-list
+
+.EX
+.PP
+.B pads_exec_t 
+.EE
+
+- Set files with the pads_exec_t type, if you want to transition an executable to the pads_t domain.
+
+
+.EX
+.PP
+.B pads_initrc_exec_t 
+.EE
+
+- Set files with the pads_initrc_exec_t type, if you want to transition an executable to the pads_initrc_t domain.
+
+
+.EX
+.PP
+.B pads_var_run_t 
+.EE
+
+- Set files with the pads_var_run_t type, if you want to store the pads files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pads policy is very flexible allowing users to setup their pads processes in as secure a method as possible.
+.PP 
+The following process types are defined for pads:
+
+.EX
+.B pads_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pads(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/passenger_selinux.8 serefpolicy-3.7.19/man/man8/passenger_selinux.8
--- nsaserefpolicy/man/man8/passenger_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/passenger_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,117 @@
+.TH  "passenger_selinux"  "8"  "passenger" "dwalsh@redhat.com" "passenger SELinux Policy documentation"
+.SH "NAME"
+passenger_selinux \- Security Enhanced Linux Policy for the passenger processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B passenger
+(Passenger policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux passenger policy is very flexible allowing users to setup their passenger processes in as secure a method as possible.
+.PP 
+The following file types are defined for passenger:
+
+
+.EX
+.PP
+.B passenger_exec_t 
+.EE
+
+- Set files with the passenger_exec_t type, if you want to transition an executable to the passenger_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerLoggingAgent, /usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerWatchdog, /usr/lib/ruby/gems/.*/passenger-.*/agents/apache2/PassengerHelperAgent, /usr/lib/ruby/gems/.*/passenger-.*/ext/apache2/ApplicationPoolServerExecutable
+
+.EX
+.PP
+.B passenger_log_t 
+.EE
+
+- Set files with the passenger_log_t type, if you want to treat the data as passenger log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/passenger.*, /var/log/passenger(/.*)?
+
+.EX
+.PP
+.B passenger_tmp_t 
+.EE
+
+- Set files with the passenger_tmp_t type, if you want to store passenger temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B passenger_var_lib_t 
+.EE
+
+- Set files with the passenger_var_lib_t type, if you want to store the passenger files under the /var/lib directory.
+
+
+.EX
+.PP
+.B passenger_var_run_t 
+.EE
+
+- Set files with the passenger_var_run_t type, if you want to store the passenger files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux passenger policy is very flexible allowing users to setup their passenger processes in as secure a method as possible.
+.PP 
+The following process types are defined for passenger:
+
+.EX
+.B passenger_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), passenger(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/passwd_selinux.8 serefpolicy-3.7.19/man/man8/passwd_selinux.8
--- nsaserefpolicy/man/man8/passwd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/passwd_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,75 @@
+.TH  "passwd_selinux"  "8"  "passwd" "dwalsh@redhat.com" "passwd SELinux Policy documentation"
+.SH "NAME"
+passwd_selinux \- Security Enhanced Linux Policy for the passwd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux passwd policy is very flexible allowing users to setup their passwd processes in as secure a method as possible.
+.PP 
+The following file types are defined for passwd:
+
+
+.EX
+.PP
+.B passwd_exec_t 
+.EE
+
+- Set files with the passwd_exec_t type, if you want to transition an executable to the passwd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/passwd, /usr/bin/chage
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux passwd policy is very flexible allowing users to setup their passwd processes in as secure a method as possible.
+.PP 
+The following process types are defined for passwd:
+
+.EX
+.B passwd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), passwd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/pcscd_selinux.8 serefpolicy-3.7.19/man/man8/pcscd_selinux.8
--- nsaserefpolicy/man/man8/pcscd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/pcscd_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,89 @@
+.TH  "pcscd_selinux"  "8"  "pcscd" "dwalsh@redhat.com" "pcscd SELinux Policy documentation"
+.SH "NAME"
+pcscd_selinux \- Security Enhanced Linux Policy for the pcscd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pcscd
+(PCSC smart card service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pcscd policy is very flexible allowing users to setup their pcscd processes in as secure a method as possible.
+.PP 
+The following file types are defined for pcscd:
+
+
+.EX
+.PP
+.B pcscd_exec_t 
+.EE
+
+- Set files with the pcscd_exec_t type, if you want to transition an executable to the pcscd_t domain.
+
+
+.EX
+.PP
+.B pcscd_var_run_t 
+.EE
+
+- Set files with the pcscd_var_run_t type, if you want to store the pcscd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/pcscd\.pid, /var/run/pcscd\.comm, /var/run/pcscd\.pub, /var/run/pcscd\.events(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pcscd policy is very flexible allowing users to setup their pcscd processes in as secure a method as possible.
+.PP 
+The following process types are defined for pcscd:
+
+.EX
+.B pcscd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pcscd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/pegasus_selinux.8 serefpolicy-3.7.19/man/man8/pegasus_selinux.8
--- nsaserefpolicy/man/man8/pegasus_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/pegasus_selinux.8	2012-03-20 22:37:14.351458256 +0000
@@ -0,0 +1,162 @@
+.TH  "pegasus_selinux"  "8"  "pegasus" "dwalsh@redhat.com" "pegasus SELinux Policy documentation"
+.SH "NAME"
+pegasus_selinux \- Security Enhanced Linux Policy for the pegasus processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pegasus
+(The Open Group Pegasus CIM/WBEM Server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
+.PP 
+The following file types are defined for pegasus:
+
+
+.EX
+.PP
+.B pegasus_conf_t 
+.EE
+
+- Set files with the pegasus_conf_t type, if you want to treat the files as pegasus configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B pegasus_data_t 
+.EE
+
+- Set files with the pegasus_data_t type, if you want to treat the files as pegasus content.
+
+.br
+.TP 5
+Paths: 
+/etc/Pegasus/pegasus_current\.conf, /var/lib/Pegasus(/.*)?
+
+.EX
+.PP
+.B pegasus_exec_t 
+.EE
+
+- Set files with the pegasus_exec_t type, if you want to transition an executable to the pegasus_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/init_repository, /usr/sbin/cimserver
+
+.EX
+.PP
+.B pegasus_mof_t 
+.EE
+
+- Set files with the pegasus_mof_t type, if you want to treat the files as pegasus mof data.
+
+
+.EX
+.PP
+.B pegasus_tmp_t 
+.EE
+
+- Set files with the pegasus_tmp_t type, if you want to store pegasus temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B pegasus_var_run_t 
+.EE
+
+- Set files with the pegasus_var_run_t type, if you want to store the pegasus files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
+.PP 
+The following port types are defined for pegasus:
+
+.EX
+.TP 5
+.B pegasus_http_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B pegasus_https_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
+.PP 
+The following process types are defined for pegasus:
+
+.EX
+.B pegasus_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pegasus(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/pingd_selinux.8 serefpolicy-3.7.19/man/man8/pingd_selinux.8
--- nsaserefpolicy/man/man8/pingd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/pingd_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,154 @@
+.TH  "pingd_selinux"  "8"  "pingd" "dwalsh@redhat.com" "pingd SELinux Policy documentation"
+.SH "NAME"
+pingd_selinux \- Security Enhanced Linux Policy for the pingd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pingd
+(Pingd of the Whatsup cluster node up/down detection utility)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  pingd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run pingd with the tightest access possible.
+
+
+.PP
+If you want to control users use of ping and tracerout, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
+.PP 
+The following file types are defined for pingd:
+
+
+.EX
+.PP
+.B ping_exec_t 
+.EE
+
+- Set files with the ping_exec_t type, if you want to transition an executable to the ping_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/hping2, /usr/sbin/fping.*, /bin/ping.*, /usr/sbin/send_arp
+
+.EX
+.PP
+.B pingd_etc_t 
+.EE
+
+- Set files with the pingd_etc_t type, if you want to store pingd files in the /etc directories.
+
+
+.EX
+.PP
+.B pingd_exec_t 
+.EE
+
+- Set files with the pingd_exec_t type, if you want to transition an executable to the pingd_t domain.
+
+
+.EX
+.PP
+.B pingd_initrc_exec_t 
+.EE
+
+- Set files with the pingd_initrc_exec_t type, if you want to transition an executable to the pingd_initrc_t domain.
+
+
+.EX
+.PP
+.B pingd_modules_t 
+.EE
+
+- Set files with the pingd_modules_t type, if you want to treat the files as pingd modules.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
+.PP 
+The following port types are defined for pingd:
+
+.EX
+.TP 5
+.B pingd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
+.PP 
+The following process types are defined for pingd:
+
+.EX
+.B ping_t, pingd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pingd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ping_selinux.8 serefpolicy-3.7.19/man/man8/ping_selinux.8
--- nsaserefpolicy/man/man8/ping_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ping_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,148 @@
+.TH  "ping_selinux"  "8"  "ping" "dwalsh@redhat.com" "ping SELinux Policy documentation"
+.SH "NAME"
+ping_selinux \- Security Enhanced Linux Policy for the ping processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  ping policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ping with the tightest access possible.
+
+
+.PP
+If you want to control users use of ping and tracerout, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
+.PP 
+The following file types are defined for ping:
+
+
+.EX
+.PP
+.B ping_exec_t 
+.EE
+
+- Set files with the ping_exec_t type, if you want to transition an executable to the ping_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/hping2, /usr/sbin/fping.*, /bin/ping.*, /usr/sbin/send_arp
+
+.EX
+.PP
+.B pingd_etc_t 
+.EE
+
+- Set files with the pingd_etc_t type, if you want to store pingd files in the /etc directories.
+
+
+.EX
+.PP
+.B pingd_exec_t 
+.EE
+
+- Set files with the pingd_exec_t type, if you want to transition an executable to the pingd_t domain.
+
+
+.EX
+.PP
+.B pingd_initrc_exec_t 
+.EE
+
+- Set files with the pingd_initrc_exec_t type, if you want to transition an executable to the pingd_initrc_t domain.
+
+
+.EX
+.PP
+.B pingd_modules_t 
+.EE
+
+- Set files with the pingd_modules_t type, if you want to treat the files as pingd modules.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
+.PP 
+The following port types are defined for ping:
+
+.EX
+.TP 5
+.B pingd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
+.PP 
+The following process types are defined for ping:
+
+.EX
+.B ping_t, pingd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ping(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/piranha_selinux.8 serefpolicy-3.7.19/man/man8/piranha_selinux.8
--- nsaserefpolicy/man/man8/piranha_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/piranha_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,246 @@
+.TH  "piranha_selinux"  "8"  "piranha" "dwalsh@redhat.com" "piranha SELinux Policy documentation"
+.SH "NAME"
+piranha_selinux \- Security Enhanced Linux Policy for the piranha processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B piranha
+(policy for piranha)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  piranha policy is extremely flexible and has several booleans that allow you to manipulate the policy and run piranha with the tightest access possible.
+
+
+.PP
+If you want to allow piranha-lvs domain to connect to the network using TCP, you must turn on the piranha_lvs_can_network_connect boolean.
+
+.EX
+.B setsebool -P piranha_lvs_can_network_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux piranha policy is very flexible allowing users to setup their piranha processes in as secure a method as possible.
+.PP 
+The following file types are defined for piranha:
+
+
+.EX
+.PP
+.B piranha_etc_rw_t 
+.EE
+
+- Set files with the piranha_etc_rw_t type, if you want to treat the files as piranha etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/piranha/lvs\.cf, /etc/sysconfig/ha/lvs\.cf
+
+.EX
+.PP
+.B piranha_fos_exec_t 
+.EE
+
+- Set files with the piranha_fos_exec_t type, if you want to transition an executable to the piranha_fos_t domain.
+
+
+.EX
+.PP
+.B piranha_fos_var_run_t 
+.EE
+
+- Set files with the piranha_fos_var_run_t type, if you want to store the piranha fos files under the /run directory.
+
+
+.EX
+.PP
+.B piranha_log_t 
+.EE
+
+- Set files with the piranha_log_t type, if you want to treat the data as piranha log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B piranha_lvs_exec_t 
+.EE
+
+- Set files with the piranha_lvs_exec_t type, if you want to transition an executable to the piranha_lvs_t domain.
+
+
+.EX
+.PP
+.B piranha_lvs_var_run_t 
+.EE
+
+- Set files with the piranha_lvs_var_run_t type, if you want to store the piranha lvs files under the /run directory.
+
+
+.EX
+.PP
+.B piranha_pulse_exec_t 
+.EE
+
+- Set files with the piranha_pulse_exec_t type, if you want to transition an executable to the piranha_pulse_t domain.
+
+
+.EX
+.PP
+.B piranha_pulse_initrc_exec_t 
+.EE
+
+- Set files with the piranha_pulse_initrc_exec_t type, if you want to transition an executable to the piranha_pulse_initrc_t domain.
+
+
+.EX
+.PP
+.B piranha_pulse_var_run_t 
+.EE
+
+- Set files with the piranha_pulse_var_run_t type, if you want to store the piranha pulse files under the /run directory.
+
+
+.EX
+.PP
+.B piranha_web_conf_t 
+.EE
+
+- Set files with the piranha_web_conf_t type, if you want to treat the files as piranha web configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/luci/etc(/.*)?, /var/lib/luci/cert(/.*)?
+
+.EX
+.PP
+.B piranha_web_data_t 
+.EE
+
+- Set files with the piranha_web_data_t type, if you want to treat the files as piranha web content.
+
+
+.EX
+.PP
+.B piranha_web_exec_t 
+.EE
+
+- Set files with the piranha_web_exec_t type, if you want to transition an executable to the piranha_web_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/piranha_gui, /usr/bin/paster
+
+.EX
+.PP
+.B piranha_web_tmp_t 
+.EE
+
+- Set files with the piranha_web_tmp_t type, if you want to store piranha web temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B piranha_web_tmpfs_t 
+.EE
+
+- Set files with the piranha_web_tmpfs_t type, if you want to store piranha web files on a tmpfs file system.
+
+
+.EX
+.PP
+.B piranha_web_var_run_t 
+.EE
+
+- Set files with the piranha_web_var_run_t type, if you want to store the piranha web files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/luci(/.*)?, /var/run/piranha-httpd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux piranha policy is very flexible allowing users to setup their piranha processes in as secure a method as possible.
+.PP 
+The following port types are defined for piranha:
+
+.EX
+.TP 5
+.B piranha_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux piranha policy is very flexible allowing users to setup their piranha processes in as secure a method as possible.
+.PP 
+The following process types are defined for piranha:
+
+.EX
+.B piranha_pulse_t, piranha_fos_t, piranha_lvs_t, piranha_web_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), piranha(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/plymouthd_selinux.8 serefpolicy-3.7.19/man/man8/plymouthd_selinux.8
--- nsaserefpolicy/man/man8/plymouthd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/plymouthd_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,109 @@
+.TH  "plymouthd_selinux"  "8"  "plymouthd" "dwalsh@redhat.com" "plymouthd SELinux Policy documentation"
+.SH "NAME"
+plymouthd_selinux \- Security Enhanced Linux Policy for the plymouthd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B plymouthd
+(policy for plymouthd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux plymouthd policy is very flexible allowing users to setup their plymouthd processes in as secure a method as possible.
+.PP 
+The following file types are defined for plymouthd:
+
+
+.EX
+.PP
+.B plymouth_exec_t 
+.EE
+
+- Set files with the plymouth_exec_t type, if you want to transition an executable to the plymouth_t domain.
+
+
+.EX
+.PP
+.B plymouthd_exec_t 
+.EE
+
+- Set files with the plymouthd_exec_t type, if you want to transition an executable to the plymouthd_t domain.
+
+
+.EX
+.PP
+.B plymouthd_spool_t 
+.EE
+
+- Set files with the plymouthd_spool_t type, if you want to store the plymouthd files under the /var/spool directory.
+
+
+.EX
+.PP
+.B plymouthd_var_lib_t 
+.EE
+
+- Set files with the plymouthd_var_lib_t type, if you want to store the plymouthd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B plymouthd_var_run_t 
+.EE
+
+- Set files with the plymouthd_var_run_t type, if you want to store the plymouthd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux plymouthd policy is very flexible allowing users to setup their plymouthd processes in as secure a method as possible.
+.PP 
+The following process types are defined for plymouthd:
+
+.EX
+.B plymouth_t, plymouthd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), plymouthd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/plymouth_selinux.8 serefpolicy-3.7.19/man/man8/plymouth_selinux.8
--- nsaserefpolicy/man/man8/plymouth_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/plymouth_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,103 @@
+.TH  "plymouth_selinux"  "8"  "plymouth" "dwalsh@redhat.com" "plymouth SELinux Policy documentation"
+.SH "NAME"
+plymouth_selinux \- Security Enhanced Linux Policy for the plymouth processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux plymouth policy is very flexible allowing users to setup their plymouth processes in as secure a method as possible.
+.PP 
+The following file types are defined for plymouth:
+
+
+.EX
+.PP
+.B plymouth_exec_t 
+.EE
+
+- Set files with the plymouth_exec_t type, if you want to transition an executable to the plymouth_t domain.
+
+
+.EX
+.PP
+.B plymouthd_exec_t 
+.EE
+
+- Set files with the plymouthd_exec_t type, if you want to transition an executable to the plymouthd_t domain.
+
+
+.EX
+.PP
+.B plymouthd_spool_t 
+.EE
+
+- Set files with the plymouthd_spool_t type, if you want to store the plymouthd files under the /var/spool directory.
+
+
+.EX
+.PP
+.B plymouthd_var_lib_t 
+.EE
+
+- Set files with the plymouthd_var_lib_t type, if you want to store the plymouthd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B plymouthd_var_run_t 
+.EE
+
+- Set files with the plymouthd_var_run_t type, if you want to store the plymouthd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux plymouth policy is very flexible allowing users to setup their plymouth processes in as secure a method as possible.
+.PP 
+The following process types are defined for plymouth:
+
+.EX
+.B plymouth_t, plymouthd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), plymouth(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/podsleuth_selinux.8 serefpolicy-3.7.19/man/man8/podsleuth_selinux.8
--- nsaserefpolicy/man/man8/podsleuth_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/podsleuth_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,105 @@
+.TH  "podsleuth_selinux"  "8"  "podsleuth" "dwalsh@redhat.com" "podsleuth SELinux Policy documentation"
+.SH "NAME"
+podsleuth_selinux \- Security Enhanced Linux Policy for the podsleuth processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B podsleuth
+(Podsleuth is a tool to get information about an Apple (TM) iPod (TM))
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux podsleuth policy is very flexible allowing users to setup their podsleuth processes in as secure a method as possible.
+.PP 
+The following file types are defined for podsleuth:
+
+
+.EX
+.PP
+.B podsleuth_cache_t 
+.EE
+
+- Set files with the podsleuth_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B podsleuth_exec_t 
+.EE
+
+- Set files with the podsleuth_exec_t type, if you want to transition an executable to the podsleuth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/podsleuth, /usr/libexec/hal-podsleuth
+
+.EX
+.PP
+.B podsleuth_tmp_t 
+.EE
+
+- Set files with the podsleuth_tmp_t type, if you want to store podsleuth temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B podsleuth_tmpfs_t 
+.EE
+
+- Set files with the podsleuth_tmpfs_t type, if you want to store podsleuth files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux podsleuth policy is very flexible allowing users to setup their podsleuth processes in as secure a method as possible.
+.PP 
+The following process types are defined for podsleuth:
+
+.EX
+.B podsleuth_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), podsleuth(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/policykit_selinux.8 serefpolicy-3.7.19/man/man8/policykit_selinux.8
--- nsaserefpolicy/man/man8/policykit_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/policykit_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,153 @@
+.TH  "policykit_selinux"  "8"  "policykit" "dwalsh@redhat.com" "policykit SELinux Policy documentation"
+.SH "NAME"
+policykit_selinux \- Security Enhanced Linux Policy for the policykit processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B policykit
+(Policy framework for controlling privileges for system-wide services)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux policykit policy is very flexible allowing users to setup their policykit processes in as secure a method as possible.
+.PP 
+The following file types are defined for policykit:
+
+
+.EX
+.PP
+.B policykit_auth_exec_t 
+.EE
+
+- Set files with the policykit_auth_exec_t type, if you want to transition an executable to the policykit_auth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/polkit-read-auth-helper, /usr/lib/policykit/polkit-read-auth-helper, /usr/libexec/polkit-1/polkit-agent-helper-1
+
+.EX
+.PP
+.B policykit_exec_t 
+.EE
+
+- Set files with the policykit_exec_t type, if you want to transition an executable to the policykit_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/polkitd.*, /usr/libexec/polkit-1/polkitd.*, /usr/lib/policykit/polkitd
+
+.EX
+.PP
+.B policykit_grant_exec_t 
+.EE
+
+- Set files with the policykit_grant_exec_t type, if you want to transition an executable to the policykit_grant_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/polkit-grant-helper.*, /usr/lib/policykit/polkit-grant-helper.*
+
+.EX
+.PP
+.B policykit_reload_t 
+.EE
+
+- Set files with the policykit_reload_t type, if you want to treat the files as policykit reload data.
+
+
+.EX
+.PP
+.B policykit_resolve_exec_t 
+.EE
+
+- Set files with the policykit_resolve_exec_t type, if you want to transition an executable to the policykit_resolve_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/policykit/polkit-resolve-exe-helper.*, /usr/libexec/polkit-resolve-exe-helper.*
+
+.EX
+.PP
+.B policykit_tmp_t 
+.EE
+
+- Set files with the policykit_tmp_t type, if you want to store policykit temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B policykit_var_lib_t 
+.EE
+
+- Set files with the policykit_var_lib_t type, if you want to store the policykit files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/PolicyKit-public(/.*)?, /var/lib/PolicyKit(/.*)?, /var/lib/polkit-1(/.*)?
+
+.EX
+.PP
+.B policykit_var_run_t 
+.EE
+
+- Set files with the policykit_var_run_t type, if you want to store the policykit files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux policykit policy is very flexible allowing users to setup their policykit processes in as secure a method as possible.
+.PP 
+The following process types are defined for policykit:
+
+.EX
+.B policykit_grant_t, policykit_auth_t, policykit_t, policykit_resolve_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), policykit(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/portmap_selinux.8 serefpolicy-3.7.19/man/man8/portmap_selinux.8
--- nsaserefpolicy/man/man8/portmap_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/portmap_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,131 @@
+.TH  "portmap_selinux"  "8"  "portmap" "dwalsh@redhat.com" "portmap SELinux Policy documentation"
+.SH "NAME"
+portmap_selinux \- Security Enhanced Linux Policy for the portmap processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B portmap
+(RPC port mapping service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
+.PP 
+The following file types are defined for portmap:
+
+
+.EX
+.PP
+.B portmap_exec_t 
+.EE
+
+- Set files with the portmap_exec_t type, if you want to transition an executable to the portmap_t domain.
+
+
+.EX
+.PP
+.B portmap_helper_exec_t 
+.EE
+
+- Set files with the portmap_helper_exec_t type, if you want to transition an executable to the portmap_helper_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/pmap_set, /usr/sbin/pmap_dump
+
+.EX
+.PP
+.B portmap_tmp_t 
+.EE
+
+- Set files with the portmap_tmp_t type, if you want to store portmap temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B portmap_var_run_t 
+.EE
+
+- Set files with the portmap_var_run_t type, if you want to store the portmap files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
+.PP 
+The following port types are defined for portmap:
+
+.EX
+.TP 5
+.B portmap_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
+.PP 
+The following process types are defined for portmap:
+
+.EX
+.B portmap_helper_t, portmap_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), portmap(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/portreserve_selinux.8 serefpolicy-3.7.19/man/man8/portreserve_selinux.8
--- nsaserefpolicy/man/man8/portreserve_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/portreserve_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,101 @@
+.TH  "portreserve_selinux"  "8"  "portreserve" "dwalsh@redhat.com" "portreserve SELinux Policy documentation"
+.SH "NAME"
+portreserve_selinux \- Security Enhanced Linux Policy for the portreserve processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B portreserve
+(Reserve well-known ports in the RPC port range)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux portreserve policy is very flexible allowing users to setup their portreserve processes in as secure a method as possible.
+.PP 
+The following file types are defined for portreserve:
+
+
+.EX
+.PP
+.B portreserve_etc_t 
+.EE
+
+- Set files with the portreserve_etc_t type, if you want to store portreserve files in the /etc directories.
+
+
+.EX
+.PP
+.B portreserve_exec_t 
+.EE
+
+- Set files with the portreserve_exec_t type, if you want to transition an executable to the portreserve_t domain.
+
+
+.EX
+.PP
+.B portreserve_initrc_exec_t 
+.EE
+
+- Set files with the portreserve_initrc_exec_t type, if you want to transition an executable to the portreserve_initrc_t domain.
+
+
+.EX
+.PP
+.B portreserve_var_run_t 
+.EE
+
+- Set files with the portreserve_var_run_t type, if you want to store the portreserve files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux portreserve policy is very flexible allowing users to setup their portreserve processes in as secure a method as possible.
+.PP 
+The following process types are defined for portreserve:
+
+.EX
+.B portreserve_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), portreserve(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/postfix_selinux.8 serefpolicy-3.7.19/man/man8/postfix_selinux.8
--- nsaserefpolicy/man/man8/postfix_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/postfix_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,422 @@
+.TH  "postfix_selinux"  "8"  "postfix" "dwalsh@redhat.com" "postfix SELinux Policy documentation"
+.SH "NAME"
+postfix_selinux \- Security Enhanced Linux Policy for the postfix processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B postfix
+(Postfix email server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  postfix policy is extremely flexible and has several booleans that allow you to manipulate the policy and run postfix with the tightest access possible.
+
+
+.PP
+If you want to allow postfix_local domain full write access to mail_spool directorie, you must turn on the allow_postfix_local_write_mail_spool boolean.
+
+.EX
+.B setsebool -P allow_postfix_local_write_mail_spool 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux postfix policy is very flexible allowing users to setup their postfix processes in as secure a method as possible.
+.PP 
+The following file types are defined for postfix:
+
+
+.EX
+.PP
+.B postfix_bounce_exec_t 
+.EE
+
+- Set files with the postfix_bounce_exec_t type, if you want to transition an executable to the postfix_bounce_t domain.
+
+
+.EX
+.PP
+.B postfix_bounce_tmp_t 
+.EE
+
+- Set files with the postfix_bounce_tmp_t type, if you want to store postfix bounce temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_cleanup_exec_t 
+.EE
+
+- Set files with the postfix_cleanup_exec_t type, if you want to transition an executable to the postfix_cleanup_t domain.
+
+
+.EX
+.PP
+.B postfix_cleanup_tmp_t 
+.EE
+
+- Set files with the postfix_cleanup_tmp_t type, if you want to store postfix cleanup temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_data_t 
+.EE
+
+- Set files with the postfix_data_t type, if you want to treat the files as postfix content.
+
+
+.EX
+.PP
+.B postfix_etc_t 
+.EE
+
+- Set files with the postfix_etc_t type, if you want to store postfix files in the /etc directories.
+
+
+.EX
+.PP
+.B postfix_exec_t 
+.EE
+
+- Set files with the postfix_exec_t type, if you want to transition an executable to the postfix_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/postfix/postfix-script.*, /usr/libexec/postfix/.*
+
+.EX
+.PP
+.B postfix_initrc_exec_t 
+.EE
+
+- Set files with the postfix_initrc_exec_t type, if you want to transition an executable to the postfix_initrc_t domain.
+
+
+.EX
+.PP
+.B postfix_keytab_t 
+.EE
+
+- Set files with the postfix_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B postfix_local_exec_t 
+.EE
+
+- Set files with the postfix_local_exec_t type, if you want to transition an executable to the postfix_local_t domain.
+
+
+.EX
+.PP
+.B postfix_local_tmp_t 
+.EE
+
+- Set files with the postfix_local_tmp_t type, if you want to store postfix local temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_map_exec_t 
+.EE
+
+- Set files with the postfix_map_exec_t type, if you want to transition an executable to the postfix_map_t domain.
+
+
+.EX
+.PP
+.B postfix_map_tmp_t 
+.EE
+
+- Set files with the postfix_map_tmp_t type, if you want to store postfix map temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_master_exec_t 
+.EE
+
+- Set files with the postfix_master_exec_t type, if you want to transition an executable to the postfix_master_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/postcat, /usr/sbin/postfix, /usr/libexec/postfix/master, /usr/sbin/postkick, /usr/sbin/postsuper, /usr/sbin/postalias, /usr/sbin/postlock, /usr/sbin/postlog
+
+.EX
+.PP
+.B postfix_pickup_exec_t 
+.EE
+
+- Set files with the postfix_pickup_exec_t type, if you want to transition an executable to the postfix_pickup_t domain.
+
+
+.EX
+.PP
+.B postfix_pickup_tmp_t 
+.EE
+
+- Set files with the postfix_pickup_tmp_t type, if you want to store postfix pickup temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_pipe_exec_t 
+.EE
+
+- Set files with the postfix_pipe_exec_t type, if you want to transition an executable to the postfix_pipe_t domain.
+
+
+.EX
+.PP
+.B postfix_pipe_tmp_t 
+.EE
+
+- Set files with the postfix_pipe_tmp_t type, if you want to store postfix pipe temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_postdrop_exec_t 
+.EE
+
+- Set files with the postfix_postdrop_exec_t type, if you want to transition an executable to the postfix_postdrop_t domain.
+
+
+.EX
+.PP
+.B postfix_postqueue_exec_t 
+.EE
+
+- Set files with the postfix_postqueue_exec_t type, if you want to transition an executable to the postfix_postqueue_t domain.
+
+
+.EX
+.PP
+.B postfix_private_t 
+.EE
+
+- Set files with the postfix_private_t type, if you want to treat the files as postfix private data.
+
+
+.EX
+.PP
+.B postfix_prng_t 
+.EE
+
+- Set files with the postfix_prng_t type, if you want to treat the files as postfix prng data.
+
+
+.EX
+.PP
+.B postfix_public_t 
+.EE
+
+- Set files with the postfix_public_t type, if you want to treat the files as postfix public data.
+
+
+.EX
+.PP
+.B postfix_qmgr_exec_t 
+.EE
+
+- Set files with the postfix_qmgr_exec_t type, if you want to transition an executable to the postfix_qmgr_t domain.
+
+
+.EX
+.PP
+.B postfix_qmgr_tmp_t 
+.EE
+
+- Set files with the postfix_qmgr_tmp_t type, if you want to store postfix qmgr temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_showq_exec_t 
+.EE
+
+- Set files with the postfix_showq_exec_t type, if you want to transition an executable to the postfix_showq_t domain.
+
+
+.EX
+.PP
+.B postfix_smtp_exec_t 
+.EE
+
+- Set files with the postfix_smtp_exec_t type, if you want to transition an executable to the postfix_smtp_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/postfix/smtp, /usr/libexec/postfix/scache, /usr/libexec/postfix/lmtp
+
+.EX
+.PP
+.B postfix_smtp_tmp_t 
+.EE
+
+- Set files with the postfix_smtp_tmp_t type, if you want to store postfix smtp temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_smtpd_exec_t 
+.EE
+
+- Set files with the postfix_smtpd_exec_t type, if you want to transition an executable to the postfix_smtpd_t domain.
+
+
+.EX
+.PP
+.B postfix_smtpd_tmp_t 
+.EE
+
+- Set files with the postfix_smtpd_tmp_t type, if you want to store postfix smtpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_spool_bounce_t 
+.EE
+
+- Set files with the postfix_spool_bounce_t type, if you want to treat the files as postfix spool bounce data.
+
+
+.EX
+.PP
+.B postfix_spool_flush_t 
+.EE
+
+- Set files with the postfix_spool_flush_t type, if you want to treat the files as postfix spool flush data.
+
+
+.EX
+.PP
+.B postfix_spool_maildrop_t 
+.EE
+
+- Set files with the postfix_spool_maildrop_t type, if you want to treat the files as postfix spool maildrop data.
+
+.br
+.TP 5
+Paths: 
+/var/spool/postfix/defer(/.*)?, /var/spool/postfix/deferred(/.*)?, /var/spool/postfix/maildrop(/.*)?
+
+.EX
+.PP
+.B postfix_spool_t 
+.EE
+
+- Set files with the postfix_spool_t type, if you want to store the postfix files under the /var/spool directory.
+
+
+.EX
+.PP
+.B postfix_var_run_t 
+.EE
+
+- Set files with the postfix_var_run_t type, if you want to store the postfix files under the /run directory.
+
+
+.EX
+.PP
+.B postfix_virtual_exec_t 
+.EE
+
+- Set files with the postfix_virtual_exec_t type, if you want to transition an executable to the postfix_virtual_t domain.
+
+
+.EX
+.PP
+.B postfix_virtual_tmp_t 
+.EE
+
+- Set files with the postfix_virtual_tmp_t type, if you want to store postfix virtual temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux postfix policy is very flexible allowing users to setup their postfix processes in as secure a method as possible.
+.PP 
+The following port types are defined for postfix:
+
+.EX
+.TP 5
+.B postfix_policyd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux postfix policy is very flexible allowing users to setup their postfix processes in as secure a method as possible.
+.PP 
+The following process types are defined for postfix:
+
+.EX
+.B postfix_bounce_t, postfix_cleanup_t, postfix_showq_t, postfix_virtual_t, postfix_postdrop_t, postfix_postqueue_t, postfix_pipe_t, postfix_master_t, postfix_pickup_t, postfix_local_t, postfix_smtpd_t, postfix_qmgr_t, postfix_smtp_t, postfix_map_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), postfix(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/postgresql_selinux.8 serefpolicy-3.7.19/man/man8/postgresql_selinux.8
--- nsaserefpolicy/man/man8/postgresql_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/postgresql_selinux.8	2012-03-20 22:37:14.352458233 +0000
@@ -0,0 +1,194 @@
+.TH  "postgresql_selinux"  "8"  "postgresql" "dwalsh@redhat.com" "postgresql SELinux Policy documentation"
+.SH "NAME"
+postgresql_selinux \- Security Enhanced Linux Policy for the postgresql processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B postgresql
+(PostgreSQL relational database)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  postgresql policy is extremely flexible and has several booleans that allow you to manipulate the policy and run postgresql with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to PostgreSQ, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
+.PP 
+The following file types are defined for postgresql:
+
+
+.EX
+.PP
+.B postgresql_db_t 
+.EE
+
+- Set files with the postgresql_db_t type, if you want to treat the files as postgresql database content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/pgsql/data(/.*)?, /var/lib/sepgsql(/.*)?, /usr/lib(64)?/pgsql/test/regress(/.*)?, /usr/share/jonas/pgsql(/.*)?, /var/lib/postgres(ql)?(/.*)?
+
+.EX
+.PP
+.B postgresql_etc_t 
+.EE
+
+- Set files with the postgresql_etc_t type, if you want to store postgresql files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/sysconfig/pgsql(/.*)?, /etc/postgresql(/.*)?
+
+.EX
+.PP
+.B postgresql_exec_t 
+.EE
+
+- Set files with the postgresql_exec_t type, if you want to transition an executable to the postgresql_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/(se)?postgres, /usr/lib(64)?/pgsql/test/regress/pg_regress, /usr/lib(64)?/postgresql/bin/.*, /usr/bin/initdb(\.sepgsql)?
+
+.EX
+.PP
+.B postgresql_initrc_exec_t 
+.EE
+
+- Set files with the postgresql_initrc_exec_t type, if you want to transition an executable to the postgresql_initrc_t domain.
+
+
+.EX
+.PP
+.B postgresql_lock_t 
+.EE
+
+- Set files with the postgresql_lock_t type, if you want to treat the files as postgresql lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B postgresql_log_t 
+.EE
+
+- Set files with the postgresql_log_t type, if you want to treat the data as postgresql log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/sepgsql/pgstartup\.log, /var/lib/pgsql/pgstartup\.log, /var/log/postgresql(/.*)?, /var/log/postgres\.log.*, /var/log/rhdb/rhdb(/.*)?, /var/lib/pgsql/logfile(/.*)?, /var/log/sepostgresql\.log.*
+
+.EX
+.PP
+.B postgresql_tmp_t 
+.EE
+
+- Set files with the postgresql_tmp_t type, if you want to store postgresql temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postgresql_var_run_t 
+.EE
+
+- Set files with the postgresql_var_run_t type, if you want to store the postgresql files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/postmaster.*, /var/run/postgresql(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
+.PP 
+The following port types are defined for postgresql:
+
+.EX
+.TP 5
+.B postgresql_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
+.PP 
+The following process types are defined for postgresql:
+
+.EX
+.B postgresql_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), postgresql(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/postgrey_selinux.8 serefpolicy-3.7.19/man/man8/postgrey_selinux.8
--- nsaserefpolicy/man/man8/postgrey_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/postgrey_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,147 @@
+.TH  "postgrey_selinux"  "8"  "postgrey" "dwalsh@redhat.com" "postgrey SELinux Policy documentation"
+.SH "NAME"
+postgrey_selinux \- Security Enhanced Linux Policy for the postgrey processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B postgrey
+(Postfix grey-listing server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
+.PP 
+The following file types are defined for postgrey:
+
+
+.EX
+.PP
+.B postgrey_etc_t 
+.EE
+
+- Set files with the postgrey_etc_t type, if you want to store postgrey files in the /etc directories.
+
+
+.EX
+.PP
+.B postgrey_exec_t 
+.EE
+
+- Set files with the postgrey_exec_t type, if you want to transition an executable to the postgrey_t domain.
+
+
+.EX
+.PP
+.B postgrey_initrc_exec_t 
+.EE
+
+- Set files with the postgrey_initrc_exec_t type, if you want to transition an executable to the postgrey_initrc_t domain.
+
+
+.EX
+.PP
+.B postgrey_spool_t 
+.EE
+
+- Set files with the postgrey_spool_t type, if you want to store the postgrey files under the /var/spool directory.
+
+
+.EX
+.PP
+.B postgrey_var_lib_t 
+.EE
+
+- Set files with the postgrey_var_lib_t type, if you want to store the postgrey files under the /var/lib directory.
+
+
+.EX
+.PP
+.B postgrey_var_run_t 
+.EE
+
+- Set files with the postgrey_var_run_t type, if you want to store the postgrey files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/postgrey\.pid, /var/run/postgrey(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
+.PP 
+The following port types are defined for postgrey:
+
+.EX
+.TP 5
+.B postgrey_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
+.PP 
+The following process types are defined for postgrey:
+
+.EX
+.B postgrey_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), postgrey(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/pppd_selinux.8 serefpolicy-3.7.19/man/man8/pppd_selinux.8
--- nsaserefpolicy/man/man8/pppd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/pppd_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,181 @@
+.TH  "pppd_selinux"  "8"  "pppd" "dwalsh@redhat.com" "pppd SELinux Policy documentation"
+.SH "NAME"
+pppd_selinux \- Security Enhanced Linux Policy for the pppd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  pppd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run pppd with the tightest access possible.
+
+
+.PP
+If you want to allow pppd to be run for a regular use, you must turn on the pppd_for_user boolean.
+
+.EX
+.B setsebool -P pppd_for_user 1
+.EE
+
+.PP
+If you want to allow pppd to load kernel modules for certain modem, you must turn on the pppd_can_insmod boolean.
+
+.EX
+.B setsebool -P pppd_can_insmod 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pppd policy is very flexible allowing users to setup their pppd processes in as secure a method as possible.
+.PP 
+The following file types are defined for pppd:
+
+
+.EX
+.PP
+.B pppd_etc_rw_t 
+.EE
+
+- Set files with the pppd_etc_rw_t type, if you want to treat the files as pppd etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/ppp(/.*)?, /etc/ppp/resolv\.conf, /etc/ppp/peers(/.*)?
+
+.EX
+.PP
+.B pppd_etc_t 
+.EE
+
+- Set files with the pppd_etc_t type, if you want to store pppd files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/root/.ppprc, /etc/ppp
+
+.EX
+.PP
+.B pppd_exec_t 
+.EE
+
+- Set files with the pppd_exec_t type, if you want to transition an executable to the pppd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/pppd, /usr/sbin/ipppd, /sbin/ppp-watch, /sbin/pppoe-server
+
+.EX
+.PP
+.B pppd_initrc_exec_t 
+.EE
+
+- Set files with the pppd_initrc_exec_t type, if you want to transition an executable to the pppd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/ppp/(auth|ip(v6|x)?)-(up|down), /etc/rc\.d/init\.d/ppp
+
+.EX
+.PP
+.B pppd_lock_t 
+.EE
+
+- Set files with the pppd_lock_t type, if you want to treat the files as pppd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B pppd_log_t 
+.EE
+
+- Set files with the pppd_log_t type, if you want to treat the data as pppd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/ppp/.*, /var/log/ppp-connect-errors.*
+
+.EX
+.PP
+.B pppd_secret_t 
+.EE
+
+- Set files with the pppd_secret_t type, if you want to treat the files as pppd se secret data.
+
+
+.EX
+.PP
+.B pppd_tmp_t 
+.EE
+
+- Set files with the pppd_tmp_t type, if you want to store pppd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B pppd_var_run_t 
+.EE
+
+- Set files with the pppd_var_run_t type, if you want to store the pppd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/pppd[0-9]*\.tdb, /var/run/ppp(/.*)?, /var/run/(i)?ppp.*pid[^/]*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pppd policy is very flexible allowing users to setup their pppd processes in as secure a method as possible.
+.PP 
+The following process types are defined for pppd:
+
+.EX
+.B pppd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pppd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/pptp_selinux.8 serefpolicy-3.7.19/man/man8/pptp_selinux.8
--- nsaserefpolicy/man/man8/pptp_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/pptp_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,87 @@
+.TH  "pptp_selinux"  "8"  "pptp" "dwalsh@redhat.com" "pptp SELinux Policy documentation"
+.SH "NAME"
+pptp_selinux \- Security Enhanced Linux Policy for the pptp processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pptp policy is very flexible allowing users to setup their pptp processes in as secure a method as possible.
+.PP 
+The following file types are defined for pptp:
+
+
+.EX
+.PP
+.B pptp_exec_t 
+.EE
+
+- Set files with the pptp_exec_t type, if you want to transition an executable to the pptp_t domain.
+
+
+.EX
+.PP
+.B pptp_log_t 
+.EE
+
+- Set files with the pptp_log_t type, if you want to treat the data as pptp log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B pptp_var_run_t 
+.EE
+
+- Set files with the pptp_var_run_t type, if you want to store the pptp files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pptp policy is very flexible allowing users to setup their pptp processes in as secure a method as possible.
+.PP 
+The following process types are defined for pptp:
+
+.EX
+.B pptp_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pptp(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/prelink_selinux.8 serefpolicy-3.7.19/man/man8/prelink_selinux.8
--- nsaserefpolicy/man/man8/prelink_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/prelink_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,133 @@
+.TH  "prelink_selinux"  "8"  "prelink" "dwalsh@redhat.com" "prelink SELinux Policy documentation"
+.SH "NAME"
+prelink_selinux \- Security Enhanced Linux Policy for the prelink processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B prelink
+(Prelink ELF shared library mappings)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux prelink policy is very flexible allowing users to setup their prelink processes in as secure a method as possible.
+.PP 
+The following file types are defined for prelink:
+
+
+.EX
+.PP
+.B prelink_cache_t 
+.EE
+
+- Set files with the prelink_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B prelink_cron_system_exec_t 
+.EE
+
+- Set files with the prelink_cron_system_exec_t type, if you want to transition an executable to the prelink_cron_system_t domain.
+
+
+.EX
+.PP
+.B prelink_exec_t 
+.EE
+
+- Set files with the prelink_exec_t type, if you want to transition an executable to the prelink_t domain.
+
+
+.EX
+.PP
+.B prelink_log_t 
+.EE
+
+- Set files with the prelink_log_t type, if you want to treat the data as prelink log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/prelink(/.*)?, /var/log/prelink\.log
+
+.EX
+.PP
+.B prelink_tmp_t 
+.EE
+
+- Set files with the prelink_tmp_t type, if you want to store prelink temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B prelink_tmpfs_t 
+.EE
+
+- Set files with the prelink_tmpfs_t type, if you want to store prelink files on a tmpfs file system.
+
+
+.EX
+.PP
+.B prelink_var_lib_t 
+.EE
+
+- Set files with the prelink_var_lib_t type, if you want to store the prelink files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/prelink(/.*)?, /var/lib/misc/prelink.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux prelink policy is very flexible allowing users to setup their prelink processes in as secure a method as possible.
+.PP 
+The following process types are defined for prelink:
+
+.EX
+.B prelink_cron_system_t, prelink_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), prelink(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/prelude_selinux.8 serefpolicy-3.7.19/man/man8/prelude_selinux.8
--- nsaserefpolicy/man/man8/prelude_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/prelude_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,207 @@
+.TH  "prelude_selinux"  "8"  "prelude" "dwalsh@redhat.com" "prelude SELinux Policy documentation"
+.SH "NAME"
+prelude_selinux \- Security Enhanced Linux Policy for the prelude processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B prelude
+(Prelude hybrid intrusion detection system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
+.PP 
+The following file types are defined for prelude:
+
+
+.EX
+.PP
+.B prelude_audisp_exec_t 
+.EE
+
+- Set files with the prelude_audisp_exec_t type, if you want to transition an executable to the prelude_audisp_t domain.
+
+
+.EX
+.PP
+.B prelude_audisp_var_run_t 
+.EE
+
+- Set files with the prelude_audisp_var_run_t type, if you want to store the prelude audisp files under the /run directory.
+
+
+.EX
+.PP
+.B prelude_correlator_config_t 
+.EE
+
+- Set files with the prelude_correlator_config_t type, if you want to treat the files as prelude correlator configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B prelude_correlator_exec_t 
+.EE
+
+- Set files with the prelude_correlator_exec_t type, if you want to transition an executable to the prelude_correlator_t domain.
+
+
+.EX
+.PP
+.B prelude_exec_t 
+.EE
+
+- Set files with the prelude_exec_t type, if you want to transition an executable to the prelude_t domain.
+
+
+.EX
+.PP
+.B prelude_initrc_exec_t 
+.EE
+
+- Set files with the prelude_initrc_exec_t type, if you want to transition an executable to the prelude_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/prelude-correlator, /etc/rc\.d/init\.d/prelude-lml, /etc/rc\.d/init\.d/prelude-manager
+
+.EX
+.PP
+.B prelude_lml_exec_t 
+.EE
+
+- Set files with the prelude_lml_exec_t type, if you want to transition an executable to the prelude_lml_t domain.
+
+
+.EX
+.PP
+.B prelude_lml_tmp_t 
+.EE
+
+- Set files with the prelude_lml_tmp_t type, if you want to store prelude lml temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B prelude_lml_var_run_t 
+.EE
+
+- Set files with the prelude_lml_var_run_t type, if you want to store the prelude lml files under the /run directory.
+
+
+.EX
+.PP
+.B prelude_log_t 
+.EE
+
+- Set files with the prelude_log_t type, if you want to treat the data as prelude log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B prelude_spool_t 
+.EE
+
+- Set files with the prelude_spool_t type, if you want to store the prelude files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/prelude(/.*)?, /var/spool/prelude-manager(/.*)?
+
+.EX
+.PP
+.B prelude_var_lib_t 
+.EE
+
+- Set files with the prelude_var_lib_t type, if you want to store the prelude files under the /var/lib directory.
+
+
+.EX
+.PP
+.B prelude_var_run_t 
+.EE
+
+- Set files with the prelude_var_run_t type, if you want to store the prelude files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
+.PP 
+The following port types are defined for prelude:
+
+.EX
+.TP 5
+.B prelude_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
+.PP 
+The following process types are defined for prelude:
+
+.EX
+.B prelude_lml_t, prelude_t, prelude_audisp_t, prelude_correlator_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), prelude(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/privoxy_selinux.8 serefpolicy-3.7.19/man/man8/privoxy_selinux.8
--- nsaserefpolicy/man/man8/privoxy_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/privoxy_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,124 @@
+.TH  "privoxy_selinux"  "8"  "privoxy" "dwalsh@redhat.com" "privoxy SELinux Policy documentation"
+.SH "NAME"
+privoxy_selinux \- Security Enhanced Linux Policy for the privoxy processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B privoxy
+(Privacy enhancing web proxy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  privoxy policy is extremely flexible and has several booleans that allow you to manipulate the policy and run privoxy with the tightest access possible.
+
+
+.PP
+If you want to allow privoxy to connect to all ports, not just HTTP, FTP, and Gopher ports, you must turn on the privoxy_connect_any boolean.
+
+.EX
+.B setsebool -P privoxy_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux privoxy policy is very flexible allowing users to setup their privoxy processes in as secure a method as possible.
+.PP 
+The following file types are defined for privoxy:
+
+
+.EX
+.PP
+.B privoxy_etc_rw_t 
+.EE
+
+- Set files with the privoxy_etc_rw_t type, if you want to treat the files as privoxy etc read/write content.
+
+
+.EX
+.PP
+.B privoxy_exec_t 
+.EE
+
+- Set files with the privoxy_exec_t type, if you want to transition an executable to the privoxy_t domain.
+
+
+.EX
+.PP
+.B privoxy_initrc_exec_t 
+.EE
+
+- Set files with the privoxy_initrc_exec_t type, if you want to transition an executable to the privoxy_initrc_t domain.
+
+
+.EX
+.PP
+.B privoxy_log_t 
+.EE
+
+- Set files with the privoxy_log_t type, if you want to treat the data as privoxy log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B privoxy_var_run_t 
+.EE
+
+- Set files with the privoxy_var_run_t type, if you want to store the privoxy files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux privoxy policy is very flexible allowing users to setup their privoxy processes in as secure a method as possible.
+.PP 
+The following process types are defined for privoxy:
+
+.EX
+.B privoxy_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), privoxy(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/procmail_selinux.8 serefpolicy-3.7.19/man/man8/procmail_selinux.8
--- nsaserefpolicy/man/man8/procmail_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/procmail_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,105 @@
+.TH  "procmail_selinux"  "8"  "procmail" "dwalsh@redhat.com" "procmail SELinux Policy documentation"
+.SH "NAME"
+procmail_selinux \- Security Enhanced Linux Policy for the procmail processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B procmail
+(Procmail mail delivery agent)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux procmail policy is very flexible allowing users to setup their procmail processes in as secure a method as possible.
+.PP 
+The following file types are defined for procmail:
+
+
+.EX
+.PP
+.B procmail_exec_t 
+.EE
+
+- Set files with the procmail_exec_t type, if you want to transition an executable to the procmail_t domain.
+
+
+.EX
+.PP
+.B procmail_home_t 
+.EE
+
+- Set files with the procmail_home_t type, if you want to store procmail files in the users home directory.
+
+
+.EX
+.PP
+.B procmail_log_t 
+.EE
+
+- Set files with the procmail_log_t type, if you want to treat the data as procmail log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/procmail\.log.*, /var/log/procmail(/.*)?
+
+.EX
+.PP
+.B procmail_tmp_t 
+.EE
+
+- Set files with the procmail_tmp_t type, if you want to store procmail temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux procmail policy is very flexible allowing users to setup their procmail processes in as secure a method as possible.
+.PP 
+The following process types are defined for procmail:
+
+.EX
+.B procmail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), procmail(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/psad_selinux.8 serefpolicy-3.7.19/man/man8/psad_selinux.8
--- nsaserefpolicy/man/man8/psad_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/psad_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,125 @@
+.TH  "psad_selinux"  "8"  "psad" "dwalsh@redhat.com" "psad SELinux Policy documentation"
+.SH "NAME"
+psad_selinux \- Security Enhanced Linux Policy for the psad processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B psad
+(Intrusion Detection and Log Analysis with iptables)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux psad policy is very flexible allowing users to setup their psad processes in as secure a method as possible.
+.PP 
+The following file types are defined for psad:
+
+
+.EX
+.PP
+.B psad_etc_t 
+.EE
+
+- Set files with the psad_etc_t type, if you want to store psad files in the /etc directories.
+
+
+.EX
+.PP
+.B psad_exec_t 
+.EE
+
+- Set files with the psad_exec_t type, if you want to transition an executable to the psad_t domain.
+
+
+.EX
+.PP
+.B psad_initrc_exec_t 
+.EE
+
+- Set files with the psad_initrc_exec_t type, if you want to transition an executable to the psad_initrc_t domain.
+
+
+.EX
+.PP
+.B psad_tmp_t 
+.EE
+
+- Set files with the psad_tmp_t type, if you want to store psad temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B psad_var_lib_t 
+.EE
+
+- Set files with the psad_var_lib_t type, if you want to store the psad files under the /var/lib directory.
+
+
+.EX
+.PP
+.B psad_var_log_t 
+.EE
+
+- Set files with the psad_var_log_t type, if you want to treat the data as psad var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B psad_var_run_t 
+.EE
+
+- Set files with the psad_var_run_t type, if you want to store the psad files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux psad policy is very flexible allowing users to setup their psad processes in as secure a method as possible.
+.PP 
+The following process types are defined for psad:
+
+.EX
+.B psad_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), psad(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ptal_selinux.8 serefpolicy-3.7.19/man/man8/ptal_selinux.8
--- nsaserefpolicy/man/man8/ptal_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ptal_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,121 @@
+.TH  "ptal_selinux"  "8"  "ptal" "dwalsh@redhat.com" "ptal SELinux Policy documentation"
+.SH "NAME"
+ptal_selinux \- Security Enhanced Linux Policy for the ptal processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
+.PP 
+The following file types are defined for ptal:
+
+
+.EX
+.PP
+.B ptal_etc_t 
+.EE
+
+- Set files with the ptal_etc_t type, if you want to store ptal files in the /etc directories.
+
+
+.EX
+.PP
+.B ptal_exec_t 
+.EE
+
+- Set files with the ptal_exec_t type, if you want to transition an executable to the ptal_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ptal-photod, /usr/sbin/ptal-mlcd, /usr/sbin/ptal-printd
+
+.EX
+.PP
+.B ptal_var_run_t 
+.EE
+
+- Set files with the ptal_var_run_t type, if you want to store the ptal files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/ptal-mlcd(/.*)?, /var/run/ptal-printd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
+.PP 
+The following port types are defined for ptal:
+
+.EX
+.TP 5
+.B ptal_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
+.PP 
+The following process types are defined for ptal:
+
+.EX
+.B ptal_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ptal(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ptchown_selinux.8 serefpolicy-3.7.19/man/man8/ptchown_selinux.8
--- nsaserefpolicy/man/man8/ptchown_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ptchown_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,77 @@
+.TH  "ptchown_selinux"  "8"  "ptchown" "dwalsh@redhat.com" "ptchown SELinux Policy documentation"
+.SH "NAME"
+ptchown_selinux \- Security Enhanced Linux Policy for the ptchown processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ptchown
+(helper function for grantpt(3), changes ownship and permissions of pseudotty)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ptchown policy is very flexible allowing users to setup their ptchown processes in as secure a method as possible.
+.PP 
+The following file types are defined for ptchown:
+
+
+.EX
+.PP
+.B ptchown_exec_t 
+.EE
+
+- Set files with the ptchown_exec_t type, if you want to transition an executable to the ptchown_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ptchown policy is very flexible allowing users to setup their ptchown processes in as secure a method as possible.
+.PP 
+The following process types are defined for ptchown:
+
+.EX
+.B ptchown_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ptchown(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/publicfile_selinux.8 serefpolicy-3.7.19/man/man8/publicfile_selinux.8
--- nsaserefpolicy/man/man8/publicfile_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/publicfile_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,89 @@
+.TH  "publicfile_selinux"  "8"  "publicfile" "dwalsh@redhat.com" "publicfile SELinux Policy documentation"
+.SH "NAME"
+publicfile_selinux \- Security Enhanced Linux Policy for the publicfile processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B publicfile
+(publicfile supplies files to the public through HTTP and FTP)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux publicfile policy is very flexible allowing users to setup their publicfile processes in as secure a method as possible.
+.PP 
+The following file types are defined for publicfile:
+
+
+.EX
+.PP
+.B publicfile_content_t 
+.EE
+
+- Set files with the publicfile_content_t type, if you want to treat the files as publicfile content.
+
+
+.EX
+.PP
+.B publicfile_exec_t 
+.EE
+
+- Set files with the publicfile_exec_t type, if you want to transition an executable to the publicfile_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/httpd, /usr/bin/ftpd
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux publicfile policy is very flexible allowing users to setup their publicfile processes in as secure a method as possible.
+.PP 
+The following process types are defined for publicfile:
+
+.EX
+.B publicfile_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), publicfile(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/pulseaudio_selinux.8 serefpolicy-3.7.19/man/man8/pulseaudio_selinux.8
--- nsaserefpolicy/man/man8/pulseaudio_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/pulseaudio_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,135 @@
+.TH  "pulseaudio_selinux"  "8"  "pulseaudio" "dwalsh@redhat.com" "pulseaudio SELinux Policy documentation"
+.SH "NAME"
+pulseaudio_selinux \- Security Enhanced Linux Policy for the pulseaudio processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pulseaudio
+(Pulseaudio network sound server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
+.PP 
+The following file types are defined for pulseaudio:
+
+
+.EX
+.PP
+.B pulseaudio_exec_t 
+.EE
+
+- Set files with the pulseaudio_exec_t type, if you want to transition an executable to the pulseaudio_t domain.
+
+
+.EX
+.PP
+.B pulseaudio_home_t 
+.EE
+
+- Set files with the pulseaudio_home_t type, if you want to store pulseaudio files in the users home directory.
+
+
+.EX
+.PP
+.B pulseaudio_tmpfs_t 
+.EE
+
+- Set files with the pulseaudio_tmpfs_t type, if you want to store pulseaudio files on a tmpfs file system.
+
+
+.EX
+.PP
+.B pulseaudio_var_lib_t 
+.EE
+
+- Set files with the pulseaudio_var_lib_t type, if you want to store the pulseaudio files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pulseaudio_var_run_t 
+.EE
+
+- Set files with the pulseaudio_var_run_t type, if you want to store the pulseaudio files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
+.PP 
+The following port types are defined for pulseaudio:
+
+.EX
+.TP 5
+.B pulseaudio_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
+.PP 
+The following process types are defined for pulseaudio:
+
+.EX
+.B pulseaudio_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pulseaudio(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/puppetmaster_selinux.8 serefpolicy-3.7.19/man/man8/puppetmaster_selinux.8
--- nsaserefpolicy/man/man8/puppetmaster_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/puppetmaster_selinux.8	2012-03-20 22:37:14.353458210 +0000
@@ -0,0 +1,102 @@
+.TH  "puppetmaster_selinux"  "8"  "puppetmaster" "dwalsh@redhat.com" "puppetmaster SELinux Policy documentation"
+.SH "NAME"
+puppetmaster_selinux \- Security Enhanced Linux Policy for the puppetmaster processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  puppetmaster policy is extremely flexible and has several booleans that allow you to manipulate the policy and run puppetmaster with the tightest access possible.
+
+
+.PP
+If you want to allow Puppet master to use connect to mysql and postgresql databas, you must turn on the puppetmaster_use_db boolean.
+
+.EX
+.B setsebool -P puppetmaster_use_db 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux puppetmaster policy is very flexible allowing users to setup their puppetmaster processes in as secure a method as possible.
+.PP 
+The following file types are defined for puppetmaster:
+
+
+.EX
+.PP
+.B puppetmaster_exec_t 
+.EE
+
+- Set files with the puppetmaster_exec_t type, if you want to transition an executable to the puppetmaster_t domain.
+
+
+.EX
+.PP
+.B puppetmaster_initrc_exec_t 
+.EE
+
+- Set files with the puppetmaster_initrc_exec_t type, if you want to transition an executable to the puppetmaster_initrc_t domain.
+
+
+.EX
+.PP
+.B puppetmaster_tmp_t 
+.EE
+
+- Set files with the puppetmaster_tmp_t type, if you want to store puppetmaster temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux puppetmaster policy is very flexible allowing users to setup their puppetmaster processes in as secure a method as possible.
+.PP 
+The following process types are defined for puppetmaster:
+
+.EX
+.B puppetmaster_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), puppetmaster(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/puppet_selinux.8 serefpolicy-3.7.19/man/man8/puppet_selinux.8
--- nsaserefpolicy/man/man8/puppet_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/puppet_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,197 @@
+.TH  "puppet_selinux"  "8"  "puppet" "dwalsh@redhat.com" "puppet SELinux Policy documentation"
+.SH "NAME"
+puppet_selinux \- Security Enhanced Linux Policy for the puppet processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B puppet
+(Puppet client daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  puppet policy is extremely flexible and has several booleans that allow you to manipulate the policy and run puppet with the tightest access possible.
+
+
+.PP
+If you want to allow Puppet client to manage all file types, you must turn on the puppet_manage_all_files boolean.
+
+.EX
+.B setsebool -P puppet_manage_all_files 1
+.EE
+
+.PP
+If you want to allow Puppet master to use connect to mysql and postgresql databas, you must turn on the puppetmaster_use_db boolean.
+
+.EX
+.B setsebool -P puppetmaster_use_db 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
+.PP 
+The following file types are defined for puppet:
+
+
+.EX
+.PP
+.B puppet_etc_t 
+.EE
+
+- Set files with the puppet_etc_t type, if you want to store puppet files in the /etc directories.
+
+
+.EX
+.PP
+.B puppet_exec_t 
+.EE
+
+- Set files with the puppet_exec_t type, if you want to transition an executable to the puppet_t domain.
+
+
+.EX
+.PP
+.B puppet_initrc_exec_t 
+.EE
+
+- Set files with the puppet_initrc_exec_t type, if you want to transition an executable to the puppet_initrc_t domain.
+
+
+.EX
+.PP
+.B puppet_log_t 
+.EE
+
+- Set files with the puppet_log_t type, if you want to treat the data as puppet log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B puppet_tmp_t 
+.EE
+
+- Set files with the puppet_tmp_t type, if you want to store puppet temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B puppet_var_lib_t 
+.EE
+
+- Set files with the puppet_var_lib_t type, if you want to store the puppet files under the /var/lib directory.
+
+
+.EX
+.PP
+.B puppet_var_run_t 
+.EE
+
+- Set files with the puppet_var_run_t type, if you want to store the puppet files under the /run directory.
+
+
+.EX
+.PP
+.B puppetmaster_exec_t 
+.EE
+
+- Set files with the puppetmaster_exec_t type, if you want to transition an executable to the puppetmaster_t domain.
+
+
+.EX
+.PP
+.B puppetmaster_initrc_exec_t 
+.EE
+
+- Set files with the puppetmaster_initrc_exec_t type, if you want to transition an executable to the puppetmaster_initrc_t domain.
+
+
+.EX
+.PP
+.B puppetmaster_tmp_t 
+.EE
+
+- Set files with the puppetmaster_tmp_t type, if you want to store puppetmaster temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
+.PP 
+The following port types are defined for puppet:
+
+.EX
+.TP 5
+.B puppet_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
+.PP 
+The following process types are defined for puppet:
+
+.EX
+.B puppet_t, puppetmaster_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), puppet(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/qdiskd_selinux.8 serefpolicy-3.7.19/man/man8/qdiskd_selinux.8
--- nsaserefpolicy/man/man8/qdiskd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/qdiskd_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,103 @@
+.TH  "qdiskd_selinux"  "8"  "qdiskd" "dwalsh@redhat.com" "qdiskd SELinux Policy documentation"
+.SH "NAME"
+qdiskd_selinux \- Security Enhanced Linux Policy for the qdiskd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux qdiskd policy is very flexible allowing users to setup their qdiskd processes in as secure a method as possible.
+.PP 
+The following file types are defined for qdiskd:
+
+
+.EX
+.PP
+.B qdiskd_exec_t 
+.EE
+
+- Set files with the qdiskd_exec_t type, if you want to transition an executable to the qdiskd_t domain.
+
+
+.EX
+.PP
+.B qdiskd_tmpfs_t 
+.EE
+
+- Set files with the qdiskd_tmpfs_t type, if you want to store qdiskd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B qdiskd_var_lib_t 
+.EE
+
+- Set files with the qdiskd_var_lib_t type, if you want to store the qdiskd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B qdiskd_var_log_t 
+.EE
+
+- Set files with the qdiskd_var_log_t type, if you want to treat the data as qdiskd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B qdiskd_var_run_t 
+.EE
+
+- Set files with the qdiskd_var_run_t type, if you want to store the qdiskd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux qdiskd policy is very flexible allowing users to setup their qdiskd processes in as secure a method as possible.
+.PP 
+The following process types are defined for qdiskd:
+
+.EX
+.B qdiskd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), qdiskd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/qemu_selinux.8 serefpolicy-3.7.19/man/man8/qemu_selinux.8
--- nsaserefpolicy/man/man8/qemu_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/qemu_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,160 @@
+.TH  "qemu_selinux"  "8"  "qemu" "dwalsh@redhat.com" "qemu SELinux Policy documentation"
+.SH "NAME"
+qemu_selinux \- Security Enhanced Linux Policy for the qemu processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B qemu
+(QEMU machine emulator and virtualizer)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  qemu policy is extremely flexible and has several booleans that allow you to manipulate the policy and run qemu with the tightest access possible.
+
+
+.PP
+If you want to allow qemu to use cifs/Samba file system, you must turn on the qemu_use_cifs boolean.
+
+.EX
+.B setsebool -P qemu_use_cifs 1
+.EE
+
+.PP
+If you want to allow qemu to user serial/parallel communication port, you must turn on the qemu_use_comm boolean.
+
+.EX
+.B setsebool -P qemu_use_comm 1
+.EE
+
+.PP
+If you want to allow qemu to use nfs file system, you must turn on the qemu_use_nfs boolean.
+
+.EX
+.B setsebool -P qemu_use_nfs 1
+.EE
+
+.PP
+If you want to allow qemu to use usb device, you must turn on the qemu_use_usb boolean.
+
+.EX
+.B setsebool -P qemu_use_usb 1
+.EE
+
+.PP
+If you want to allow qemu to connect fully to the networ, you must turn on the qemu_full_network boolean.
+
+.EX
+.B setsebool -P qemu_full_network 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux qemu policy is very flexible allowing users to setup their qemu processes in as secure a method as possible.
+.PP 
+The following file types are defined for qemu:
+
+
+.EX
+.PP
+.B qemu_exec_t 
+.EE
+
+- Set files with the qemu_exec_t type, if you want to transition an executable to the qemu_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/qemu-system-.*, /usr/libexec/qemu.*, /usr/bin/qemu, /usr/bin/qemu-kvm
+
+.EX
+.PP
+.B qemu_image_t 
+.EE
+
+- Set files with the qemu_image_t type, if you want to treat the files as qemu image data.
+
+
+.EX
+.PP
+.B qemu_tmp_t 
+.EE
+
+- Set files with the qemu_tmp_t type, if you want to store qemu temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B qemu_tmpfs_t 
+.EE
+
+- Set files with the qemu_tmpfs_t type, if you want to store qemu files on a tmpfs file system.
+
+
+.EX
+.PP
+.B qemu_var_run_t 
+.EE
+
+- Set files with the qemu_var_run_t type, if you want to store the qemu files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/libvirt/qemu(/.*)?, /var/run/libvirt/qemu(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux qemu policy is very flexible allowing users to setup their qemu processes in as secure a method as possible.
+.PP 
+The following process types are defined for qemu:
+
+.EX
+.B qemu_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), qemu(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/qmail_selinux.8 serefpolicy-3.7.19/man/man8/qmail_selinux.8
--- nsaserefpolicy/man/man8/qmail_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/qmail_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,213 @@
+.TH  "qmail_selinux"  "8"  "qmail" "dwalsh@redhat.com" "qmail SELinux Policy documentation"
+.SH "NAME"
+qmail_selinux \- Security Enhanced Linux Policy for the qmail processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B qmail
+(Qmail Mail Server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux qmail policy is very flexible allowing users to setup their qmail processes in as secure a method as possible.
+.PP 
+The following file types are defined for qmail:
+
+
+.EX
+.PP
+.B qmail_alias_home_t 
+.EE
+
+- Set files with the qmail_alias_home_t type, if you want to store qmail alias files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/var/qmail/alias, /var/qmail/alias(/.*)?
+
+.EX
+.PP
+.B qmail_clean_exec_t 
+.EE
+
+- Set files with the qmail_clean_exec_t type, if you want to transition an executable to the qmail_clean_t domain.
+
+
+.EX
+.PP
+.B qmail_etc_t 
+.EE
+
+- Set files with the qmail_etc_t type, if you want to store qmail files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/var/qmail/owners(/.*)?, /var/qmail/control(/.*)?
+
+.EX
+.PP
+.B qmail_exec_t 
+.EE
+
+- Set files with the qmail_exec_t type, if you want to transition an executable to the qmail_t domain.
+
+
+.EX
+.PP
+.B qmail_inject_exec_t 
+.EE
+
+- Set files with the qmail_inject_exec_t type, if you want to transition an executable to the qmail_inject_t domain.
+
+
+.EX
+.PP
+.B qmail_keytab_t 
+.EE
+
+- Set files with the qmail_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B qmail_local_exec_t 
+.EE
+
+- Set files with the qmail_local_exec_t type, if you want to transition an executable to the qmail_local_t domain.
+
+
+.EX
+.PP
+.B qmail_lspawn_exec_t 
+.EE
+
+- Set files with the qmail_lspawn_exec_t type, if you want to transition an executable to the qmail_lspawn_t domain.
+
+
+.EX
+.PP
+.B qmail_queue_exec_t 
+.EE
+
+- Set files with the qmail_queue_exec_t type, if you want to transition an executable to the qmail_queue_t domain.
+
+
+.EX
+.PP
+.B qmail_remote_exec_t 
+.EE
+
+- Set files with the qmail_remote_exec_t type, if you want to transition an executable to the qmail_remote_t domain.
+
+
+.EX
+.PP
+.B qmail_rspawn_exec_t 
+.EE
+
+- Set files with the qmail_rspawn_exec_t type, if you want to transition an executable to the qmail_rspawn_t domain.
+
+
+.EX
+.PP
+.B qmail_send_exec_t 
+.EE
+
+- Set files with the qmail_send_exec_t type, if you want to transition an executable to the qmail_send_t domain.
+
+
+.EX
+.PP
+.B qmail_smtpd_exec_t 
+.EE
+
+- Set files with the qmail_smtpd_exec_t type, if you want to transition an executable to the qmail_smtpd_t domain.
+
+
+.EX
+.PP
+.B qmail_splogger_exec_t 
+.EE
+
+- Set files with the qmail_splogger_exec_t type, if you want to transition an executable to the qmail_splogger_t domain.
+
+
+.EX
+.PP
+.B qmail_spool_t 
+.EE
+
+- Set files with the qmail_spool_t type, if you want to store the qmail files under the /var/spool directory.
+
+
+.EX
+.PP
+.B qmail_start_exec_t 
+.EE
+
+- Set files with the qmail_start_exec_t type, if you want to transition an executable to the qmail_start_t domain.
+
+
+.EX
+.PP
+.B qmail_tcp_env_exec_t 
+.EE
+
+- Set files with the qmail_tcp_env_exec_t type, if you want to transition an executable to the qmail_tcp_env_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux qmail policy is very flexible allowing users to setup their qmail processes in as secure a method as possible.
+.PP 
+The following process types are defined for qmail:
+
+.EX
+.B qmail_tcp_env_t, qmail_rspawn_t, qmail_inject_t, qmail_lspawn_t, qmail_clean_t, qmail_local_t, qmail_smtpd_t, qmail_start_t, qmail_send_t, qmail_remote_t, qmail_queue_t, qmail_splogger_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), qmail(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/qpidd_selinux.8 serefpolicy-3.7.19/man/man8/qpidd_selinux.8
--- nsaserefpolicy/man/man8/qpidd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/qpidd_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,113 @@
+.TH  "qpidd_selinux"  "8"  "qpidd" "dwalsh@redhat.com" "qpidd SELinux Policy documentation"
+.SH "NAME"
+qpidd_selinux \- Security Enhanced Linux Policy for the qpidd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B qpidd
+(policy for qpidd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux qpidd policy is very flexible allowing users to setup their qpidd processes in as secure a method as possible.
+.PP 
+The following file types are defined for qpidd:
+
+
+.EX
+.PP
+.B qpidd_exec_t 
+.EE
+
+- Set files with the qpidd_exec_t type, if you want to transition an executable to the qpidd_t domain.
+
+
+.EX
+.PP
+.B qpidd_initrc_exec_t 
+.EE
+
+- Set files with the qpidd_initrc_exec_t type, if you want to transition an executable to the qpidd_initrc_t domain.
+
+
+.EX
+.PP
+.B qpidd_tmpfs_t 
+.EE
+
+- Set files with the qpidd_tmpfs_t type, if you want to store qpidd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B qpidd_var_lib_t 
+.EE
+
+- Set files with the qpidd_var_lib_t type, if you want to store the qpidd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B qpidd_var_run_t 
+.EE
+
+- Set files with the qpidd_var_run_t type, if you want to store the qpidd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/qpidd(/.*)?, /var/run/qpidd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux qpidd policy is very flexible allowing users to setup their qpidd processes in as secure a method as possible.
+.PP 
+The following process types are defined for qpidd:
+
+.EX
+.B qpidd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), qpidd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/quota_selinux.8 serefpolicy-3.7.19/man/man8/quota_selinux.8
--- nsaserefpolicy/man/man8/quota_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/quota_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,117 @@
+.TH  "quota_selinux"  "8"  "quota" "dwalsh@redhat.com" "quota SELinux Policy documentation"
+.SH "NAME"
+quota_selinux \- Security Enhanced Linux Policy for the quota processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B quota
+(File system quota management)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux quota policy is very flexible allowing users to setup their quota processes in as secure a method as possible.
+.PP 
+The following file types are defined for quota:
+
+
+.EX
+.PP
+.B quota_db_t 
+.EE
+
+- Set files with the quota_db_t type, if you want to treat the files as quota database content.
+
+.br
+.TP 5
+Paths: 
+/boot/a?quota\.(user|group), /etc/a?quota\.(user|group), /a?quota\.(user|group), /var/a?quota\.(user|group), /var/spool/(.*/)?a?quota\.(user|group)
+
+.EX
+.PP
+.B quota_exec_t 
+.EE
+
+- Set files with the quota_exec_t type, if you want to transition an executable to the quota_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/convertquota, /sbin/quota(check|on)
+
+.EX
+.PP
+.B quota_flag_t 
+.EE
+
+- Set files with the quota_flag_t type, if you want to treat the files as quota flag data.
+
+
+.EX
+.PP
+.B quota_nld_exec_t 
+.EE
+
+- Set files with the quota_nld_exec_t type, if you want to transition an executable to the quota_nld_t domain.
+
+
+.EX
+.PP
+.B quota_nld_var_run_t 
+.EE
+
+- Set files with the quota_nld_var_run_t type, if you want to store the quota nld files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux quota policy is very flexible allowing users to setup their quota processes in as secure a method as possible.
+.PP 
+The following process types are defined for quota:
+
+.EX
+.B quota_t, quota_nld_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), quota(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/racoon_selinux.8 serefpolicy-3.7.19/man/man8/racoon_selinux.8
--- nsaserefpolicy/man/man8/racoon_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/racoon_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,94 @@
+.TH  "racoon_selinux"  "8"  "racoon" "dwalsh@redhat.com" "racoon SELinux Policy documentation"
+.SH "NAME"
+racoon_selinux \- Security Enhanced Linux Policy for the racoon processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  racoon policy is extremely flexible and has several booleans that allow you to manipulate the policy and run racoon with the tightest access possible.
+
+
+.PP
+If you want to allow racoon to read shado, you must turn on the racoon_read_shadow boolean.
+
+.EX
+.B setsebool -P racoon_read_shadow 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux racoon policy is very flexible allowing users to setup their racoon processes in as secure a method as possible.
+.PP 
+The following file types are defined for racoon:
+
+
+.EX
+.PP
+.B racoon_exec_t 
+.EE
+
+- Set files with the racoon_exec_t type, if you want to transition an executable to the racoon_t domain.
+
+
+.EX
+.PP
+.B racoon_tmp_t 
+.EE
+
+- Set files with the racoon_tmp_t type, if you want to store racoon temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux racoon policy is very flexible allowing users to setup their racoon processes in as secure a method as possible.
+.PP 
+The following process types are defined for racoon:
+
+.EX
+.B racoon_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), racoon(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/radiusd_selinux.8 serefpolicy-3.7.19/man/man8/radiusd_selinux.8
--- nsaserefpolicy/man/man8/radiusd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/radiusd_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,172 @@
+.TH  "radiusd_selinux"  "8"  "radiusd" "dwalsh@redhat.com" "radiusd SELinux Policy documentation"
+.SH "NAME"
+radiusd_selinux \- Security Enhanced Linux Policy for the radiusd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  radiusd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run radiusd with the tightest access possible.
+
+
+.PP
+If you want to allow users to login using a radius serve, you must turn on the authlogin_radius boolean.
+
+.EX
+.B setsebool -P authlogin_radius 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
+.PP 
+The following file types are defined for radiusd:
+
+
+.EX
+.PP
+.B radiusd_etc_rw_t 
+.EE
+
+- Set files with the radiusd_etc_rw_t type, if you want to treat the files as radiusd etc read/write content.
+
+
+.EX
+.PP
+.B radiusd_etc_t 
+.EE
+
+- Set files with the radiusd_etc_t type, if you want to store radiusd files in the /etc directories.
+
+
+.EX
+.PP
+.B radiusd_exec_t 
+.EE
+
+- Set files with the radiusd_exec_t type, if you want to transition an executable to the radiusd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/freeradius, /etc/cron\.(daily|monthly)/radiusd, /usr/sbin/radiusd, /etc/cron\.(daily|weekly|monthly)/freeradius
+
+.EX
+.PP
+.B radiusd_initrc_exec_t 
+.EE
+
+- Set files with the radiusd_initrc_exec_t type, if you want to transition an executable to the radiusd_initrc_t domain.
+
+
+.EX
+.PP
+.B radiusd_log_t 
+.EE
+
+- Set files with the radiusd_log_t type, if you want to treat the data as radiusd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/radacct(/.*)?, /var/log/radiusd-freeradius(/.*)?, /var/log/radius\.log.*, /var/log/freeradius(/.*)?, /var/log/radwtmp.*, /var/log/radius(/.*)?, /var/log/radutmp
+
+.EX
+.PP
+.B radiusd_var_lib_t 
+.EE
+
+- Set files with the radiusd_var_lib_t type, if you want to store the radiusd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B radiusd_var_run_t 
+.EE
+
+- Set files with the radiusd_var_run_t type, if you want to store the radiusd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/radiusd\.pid, /var/run/radiusd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
+.PP 
+The following port types are defined for radiusd:
+
+.EX
+.TP 5
+.B radius_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
+.PP 
+The following process types are defined for radiusd:
+
+.EX
+.B radiusd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), radiusd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/radvd_selinux.8 serefpolicy-3.7.19/man/man8/radvd_selinux.8
--- nsaserefpolicy/man/man8/radvd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/radvd_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,105 @@
+.TH  "radvd_selinux"  "8"  "radvd" "dwalsh@redhat.com" "radvd SELinux Policy documentation"
+.SH "NAME"
+radvd_selinux \- Security Enhanced Linux Policy for the radvd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B radvd
+(IPv6 router advertisement daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux radvd policy is very flexible allowing users to setup their radvd processes in as secure a method as possible.
+.PP 
+The following file types are defined for radvd:
+
+
+.EX
+.PP
+.B radvd_etc_t 
+.EE
+
+- Set files with the radvd_etc_t type, if you want to store radvd files in the /etc directories.
+
+
+.EX
+.PP
+.B radvd_exec_t 
+.EE
+
+- Set files with the radvd_exec_t type, if you want to transition an executable to the radvd_t domain.
+
+
+.EX
+.PP
+.B radvd_initrc_exec_t 
+.EE
+
+- Set files with the radvd_initrc_exec_t type, if you want to transition an executable to the radvd_initrc_t domain.
+
+
+.EX
+.PP
+.B radvd_var_run_t 
+.EE
+
+- Set files with the radvd_var_run_t type, if you want to store the radvd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/radvd(/.*)?, /var/run/radvd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux radvd policy is very flexible allowing users to setup their radvd processes in as secure a method as possible.
+.PP 
+The following process types are defined for radvd:
+
+.EX
+.B radvd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), radvd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rdisc_selinux.8 serefpolicy-3.7.19/man/man8/rdisc_selinux.8
--- nsaserefpolicy/man/man8/rdisc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rdisc_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,77 @@
+.TH  "rdisc_selinux"  "8"  "rdisc" "dwalsh@redhat.com" "rdisc SELinux Policy documentation"
+.SH "NAME"
+rdisc_selinux \- Security Enhanced Linux Policy for the rdisc processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rdisc
+(Network router discovery daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rdisc policy is very flexible allowing users to setup their rdisc processes in as secure a method as possible.
+.PP 
+The following file types are defined for rdisc:
+
+
+.EX
+.PP
+.B rdisc_exec_t 
+.EE
+
+- Set files with the rdisc_exec_t type, if you want to transition an executable to the rdisc_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rdisc policy is very flexible allowing users to setup their rdisc processes in as secure a method as possible.
+.PP 
+The following process types are defined for rdisc:
+
+.EX
+.B rdisc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rdisc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/readahead_selinux.8 serefpolicy-3.7.19/man/man8/readahead_selinux.8
--- nsaserefpolicy/man/man8/readahead_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/readahead_selinux.8	2012-03-20 22:37:14.354458187 +0000
@@ -0,0 +1,97 @@
+.TH  "readahead_selinux"  "8"  "readahead" "dwalsh@redhat.com" "readahead SELinux Policy documentation"
+.SH "NAME"
+readahead_selinux \- Security Enhanced Linux Policy for the readahead processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B readahead
+(Readahead, read files into page cache for improved performance)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux readahead policy is very flexible allowing users to setup their readahead processes in as secure a method as possible.
+.PP 
+The following file types are defined for readahead:
+
+
+.EX
+.PP
+.B readahead_exec_t 
+.EE
+
+- Set files with the readahead_exec_t type, if you want to transition an executable to the readahead_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/readahead.*, /usr/sbin/readahead.*
+
+.EX
+.PP
+.B readahead_var_lib_t 
+.EE
+
+- Set files with the readahead_var_lib_t type, if you want to store the readahead files under the /var/lib directory.
+
+
+.EX
+.PP
+.B readahead_var_run_t 
+.EE
+
+- Set files with the readahead_var_run_t type, if you want to store the readahead files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux readahead policy is very flexible allowing users to setup their readahead processes in as secure a method as possible.
+.PP 
+The following process types are defined for readahead:
+
+.EX
+.B readahead_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), readahead(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/regex_selinux.8 serefpolicy-3.7.19/man/man8/regex_selinux.8
--- nsaserefpolicy/man/man8/regex_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/regex_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,79 @@
+.TH  "regex_selinux"  "8"  "regex" "dwalsh@redhat.com" "regex SELinux Policy documentation"
+.SH "NAME"
+regex_selinux \- Security Enhanced Linux Policy for the regex processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux regex policy is very flexible allowing users to setup their regex processes in as secure a method as possible.
+.PP 
+The following file types are defined for regex:
+
+
+.EX
+.PP
+.B regex_milter_data_t 
+.EE
+
+- Set files with the regex_milter_data_t type, if you want to treat the files as regex milter content.
+
+
+.EX
+.PP
+.B regex_milter_exec_t 
+.EE
+
+- Set files with the regex_milter_exec_t type, if you want to transition an executable to the regex_milter_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux regex policy is very flexible allowing users to setup their regex processes in as secure a method as possible.
+.PP 
+The following process types are defined for regex:
+
+.EX
+.B regex_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), regex(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/restorecond_selinux.8 serefpolicy-3.7.19/man/man8/restorecond_selinux.8
--- nsaserefpolicy/man/man8/restorecond_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/restorecond_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,79 @@
+.TH  "restorecond_selinux"  "8"  "restorecond" "dwalsh@redhat.com" "restorecond SELinux Policy documentation"
+.SH "NAME"
+restorecond_selinux \- Security Enhanced Linux Policy for the restorecond processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux restorecond policy is very flexible allowing users to setup their restorecond processes in as secure a method as possible.
+.PP 
+The following file types are defined for restorecond:
+
+
+.EX
+.PP
+.B restorecond_exec_t 
+.EE
+
+- Set files with the restorecond_exec_t type, if you want to transition an executable to the restorecond_t domain.
+
+
+.EX
+.PP
+.B restorecond_var_run_t 
+.EE
+
+- Set files with the restorecond_var_run_t type, if you want to store the restorecond files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux restorecond policy is very flexible allowing users to setup their restorecond processes in as secure a method as possible.
+.PP 
+The following process types are defined for restorecond:
+
+.EX
+.B restorecond_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), restorecond(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rgmanager_selinux.8 serefpolicy-3.7.19/man/man8/rgmanager_selinux.8
--- nsaserefpolicy/man/man8/rgmanager_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rgmanager_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,136 @@
+.TH  "rgmanager_selinux"  "8"  "rgmanager" "dwalsh@redhat.com" "rgmanager SELinux Policy documentation"
+.SH "NAME"
+rgmanager_selinux \- Security Enhanced Linux Policy for the rgmanager processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rgmanager
+(SELinux policy for rgmanager)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  rgmanager policy is extremely flexible and has several booleans that allow you to manipulate the policy and run rgmanager with the tightest access possible.
+
+
+.PP
+If you want to allow rgmanager domain to connect to the network using TCP, you must turn on the rgmanager_can_network_connect boolean.
+
+.EX
+.B setsebool -P rgmanager_can_network_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rgmanager policy is very flexible allowing users to setup their rgmanager processes in as secure a method as possible.
+.PP 
+The following file types are defined for rgmanager:
+
+
+.EX
+.PP
+.B rgmanager_exec_t 
+.EE
+
+- Set files with the rgmanager_exec_t type, if you want to transition an executable to the rgmanager_t domain.
+
+
+.EX
+.PP
+.B rgmanager_initrc_exec_t 
+.EE
+
+- Set files with the rgmanager_initrc_exec_t type, if you want to transition an executable to the rgmanager_initrc_t domain.
+
+
+.EX
+.PP
+.B rgmanager_tmp_t 
+.EE
+
+- Set files with the rgmanager_tmp_t type, if you want to store rgmanager temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rgmanager_tmpfs_t 
+.EE
+
+- Set files with the rgmanager_tmpfs_t type, if you want to store rgmanager files on a tmpfs file system.
+
+
+.EX
+.PP
+.B rgmanager_var_log_t 
+.EE
+
+- Set files with the rgmanager_var_log_t type, if you want to treat the data as rgmanager var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rgmanager_var_run_t 
+.EE
+
+- Set files with the rgmanager_var_run_t type, if you want to store the rgmanager files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/rgmanager\.pid, /var/run/cluster/rgmanager\.sk
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rgmanager policy is very flexible allowing users to setup their rgmanager processes in as secure a method as possible.
+.PP 
+The following process types are defined for rgmanager:
+
+.EX
+.B rgmanager_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rgmanager(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rhev_selinux.8 serefpolicy-3.7.19/man/man8/rhev_selinux.8
--- nsaserefpolicy/man/man8/rhev_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rhev_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,105 @@
+.TH  "rhev_selinux"  "8"  "rhev" "dwalsh@redhat.com" "rhev SELinux Policy documentation"
+.SH "NAME"
+rhev_selinux \- Security Enhanced Linux Policy for the rhev processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rhev
+(rhev polic module contains policies for rhev apps)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rhev policy is very flexible allowing users to setup their rhev processes in as secure a method as possible.
+.PP 
+The following file types are defined for rhev:
+
+
+.EX
+.PP
+.B rhev_agentd_exec_t 
+.EE
+
+- Set files with the rhev_agentd_exec_t type, if you want to transition an executable to the rhev_agentd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/rhev-agent/rhev-agentd\.py, /usr/share/rhev-agent/LockActiveSession\.py
+
+.EX
+.PP
+.B rhev_agentd_log_t 
+.EE
+
+- Set files with the rhev_agentd_log_t type, if you want to treat the data as rhev agentd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rhev_agentd_tmp_t 
+.EE
+
+- Set files with the rhev_agentd_tmp_t type, if you want to store rhev agentd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rhev_agentd_var_run_t 
+.EE
+
+- Set files with the rhev_agentd_var_run_t type, if you want to store the rhev agentd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rhev policy is very flexible allowing users to setup their rhev processes in as secure a method as possible.
+.PP 
+The following process types are defined for rhev:
+
+.EX
+.B rhev_agentd_t, rhev_agentd_consolehelper_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rhev(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rhgb_selinux.8 serefpolicy-3.7.19/man/man8/rhgb_selinux.8
--- nsaserefpolicy/man/man8/rhgb_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rhgb_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,85 @@
+.TH  "rhgb_selinux"  "8"  "rhgb" "dwalsh@redhat.com" "rhgb SELinux Policy documentation"
+.SH "NAME"
+rhgb_selinux \- Security Enhanced Linux Policy for the rhgb processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rhgb
+( Red Hat Graphical Boot )
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rhgb policy is very flexible allowing users to setup their rhgb processes in as secure a method as possible.
+.PP 
+The following file types are defined for rhgb:
+
+
+.EX
+.PP
+.B rhgb_exec_t 
+.EE
+
+- Set files with the rhgb_exec_t type, if you want to transition an executable to the rhgb_t domain.
+
+
+.EX
+.PP
+.B rhgb_tmpfs_t 
+.EE
+
+- Set files with the rhgb_tmpfs_t type, if you want to store rhgb files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rhgb policy is very flexible allowing users to setup their rhgb processes in as secure a method as possible.
+.PP 
+The following process types are defined for rhgb:
+
+.EX
+.B rhgb_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rhgb(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rhsmcertd_selinux.8 serefpolicy-3.7.19/man/man8/rhsmcertd_selinux.8
--- nsaserefpolicy/man/man8/rhsmcertd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rhsmcertd_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,117 @@
+.TH  "rhsmcertd_selinux"  "8"  "rhsmcertd" "dwalsh@redhat.com" "rhsmcertd SELinux Policy documentation"
+.SH "NAME"
+rhsmcertd_selinux \- Security Enhanced Linux Policy for the rhsmcertd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rhsmcertd
+(Subscription Management Certificate Daemon policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rhsmcertd policy is very flexible allowing users to setup their rhsmcertd processes in as secure a method as possible.
+.PP 
+The following file types are defined for rhsmcertd:
+
+
+.EX
+.PP
+.B rhsmcertd_exec_t 
+.EE
+
+- Set files with the rhsmcertd_exec_t type, if you want to transition an executable to the rhsmcertd_t domain.
+
+
+.EX
+.PP
+.B rhsmcertd_initrc_exec_t 
+.EE
+
+- Set files with the rhsmcertd_initrc_exec_t type, if you want to transition an executable to the rhsmcertd_initrc_t domain.
+
+
+.EX
+.PP
+.B rhsmcertd_lock_t 
+.EE
+
+- Set files with the rhsmcertd_lock_t type, if you want to treat the files as rhsmcertd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B rhsmcertd_log_t 
+.EE
+
+- Set files with the rhsmcertd_log_t type, if you want to treat the data as rhsmcertd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rhsmcertd_var_lib_t 
+.EE
+
+- Set files with the rhsmcertd_var_lib_t type, if you want to store the rhsmcertd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B rhsmcertd_var_run_t 
+.EE
+
+- Set files with the rhsmcertd_var_run_t type, if you want to store the rhsmcertd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rhsmcertd policy is very flexible allowing users to setup their rhsmcertd processes in as secure a method as possible.
+.PP 
+The following process types are defined for rhsmcertd:
+
+.EX
+.B rhsmcertd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rhsmcertd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ricci_selinux.8 serefpolicy-3.7.19/man/man8/ricci_selinux.8
--- nsaserefpolicy/man/man8/ricci_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ricci_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,246 @@
+.TH  "ricci_selinux"  "8"  "ricci" "dwalsh@redhat.com" "ricci SELinux Policy documentation"
+.SH "NAME"
+ricci_selinux \- Security Enhanced Linux Policy for the ricci processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ricci
+(Ricci cluster management agent)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
+.PP 
+The following file types are defined for ricci:
+
+
+.EX
+.PP
+.B ricci_exec_t 
+.EE
+
+- Set files with the ricci_exec_t type, if you want to transition an executable to the ricci_t domain.
+
+
+.EX
+.PP
+.B ricci_initrc_exec_t 
+.EE
+
+- Set files with the ricci_initrc_exec_t type, if you want to transition an executable to the ricci_initrc_t domain.
+
+
+.EX
+.PP
+.B ricci_modcluster_exec_t 
+.EE
+
+- Set files with the ricci_modcluster_exec_t type, if you want to transition an executable to the ricci_modcluster_t domain.
+
+
+.EX
+.PP
+.B ricci_modcluster_var_lib_t 
+.EE
+
+- Set files with the ricci_modcluster_var_lib_t type, if you want to store the ricci modcluster files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ricci_modcluster_var_log_t 
+.EE
+
+- Set files with the ricci_modcluster_var_log_t type, if you want to treat the data as ricci modcluster var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ricci_modcluster_var_run_t 
+.EE
+
+- Set files with the ricci_modcluster_var_run_t type, if you want to store the ricci modcluster files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/modclusterd\.pid, /var/run/clumond\.sock
+
+.EX
+.PP
+.B ricci_modclusterd_exec_t 
+.EE
+
+- Set files with the ricci_modclusterd_exec_t type, if you want to transition an executable to the ricci_modclusterd_t domain.
+
+
+.EX
+.PP
+.B ricci_modclusterd_tmpfs_t 
+.EE
+
+- Set files with the ricci_modclusterd_tmpfs_t type, if you want to store ricci modclusterd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B ricci_modlog_exec_t 
+.EE
+
+- Set files with the ricci_modlog_exec_t type, if you want to transition an executable to the ricci_modlog_t domain.
+
+
+.EX
+.PP
+.B ricci_modrpm_exec_t 
+.EE
+
+- Set files with the ricci_modrpm_exec_t type, if you want to transition an executable to the ricci_modrpm_t domain.
+
+
+.EX
+.PP
+.B ricci_modservice_exec_t 
+.EE
+
+- Set files with the ricci_modservice_exec_t type, if you want to transition an executable to the ricci_modservice_t domain.
+
+
+.EX
+.PP
+.B ricci_modstorage_exec_t 
+.EE
+
+- Set files with the ricci_modstorage_exec_t type, if you want to transition an executable to the ricci_modstorage_t domain.
+
+
+.EX
+.PP
+.B ricci_modstorage_lock_t 
+.EE
+
+- Set files with the ricci_modstorage_lock_t type, if you want to treat the files as ricci modstorage lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B ricci_tmp_t 
+.EE
+
+- Set files with the ricci_tmp_t type, if you want to store ricci temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ricci_var_lib_t 
+.EE
+
+- Set files with the ricci_var_lib_t type, if you want to store the ricci files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ricci_var_log_t 
+.EE
+
+- Set files with the ricci_var_log_t type, if you want to treat the data as ricci var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ricci_var_run_t 
+.EE
+
+- Set files with the ricci_var_run_t type, if you want to store the ricci files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
+.PP 
+The following port types are defined for ricci:
+
+.EX
+.TP 5
+.B ricci_modcluster_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B ricci_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
+.PP 
+The following process types are defined for ricci:
+
+.EX
+.B ricci_t, ricci_modservice_t, ricci_modstorage_t, ricci_modclusterd_t, ricci_modlog_t, ricci_modrpm_t, ricci_modcluster_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ricci(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rlogind_selinux.8 serefpolicy-3.7.19/man/man8/rlogind_selinux.8
--- nsaserefpolicy/man/man8/rlogind_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rlogind_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,137 @@
+.TH  "rlogind_selinux"  "8"  "rlogind" "dwalsh@redhat.com" "rlogind SELinux Policy documentation"
+.SH "NAME"
+rlogind_selinux \- Security Enhanced Linux Policy for the rlogind processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
+.PP 
+The following file types are defined for rlogind:
+
+
+.EX
+.PP
+.B rlogind_exec_t 
+.EE
+
+- Set files with the rlogind_exec_t type, if you want to transition an executable to the rlogind_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/kerberos/sbin/klogind, /usr/sbin/in\.rlogind, /usr/lib(64)?/telnetlogin
+
+.EX
+.PP
+.B rlogind_home_t 
+.EE
+
+- Set files with the rlogind_home_t type, if you want to store rlogind files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.rlogin, /root/\.rhosts
+
+.EX
+.PP
+.B rlogind_keytab_t 
+.EE
+
+- Set files with the rlogind_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B rlogind_tmp_t 
+.EE
+
+- Set files with the rlogind_tmp_t type, if you want to store rlogind temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rlogind_var_run_t 
+.EE
+
+- Set files with the rlogind_var_run_t type, if you want to store the rlogind files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
+.PP 
+The following port types are defined for rlogind:
+
+.EX
+.TP 5
+.B rlogind_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
+.PP 
+The following process types are defined for rlogind:
+
+.EX
+.B rlogind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rlogind(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/roundup_selinux.8 serefpolicy-3.7.19/man/man8/roundup_selinux.8
--- nsaserefpolicy/man/man8/roundup_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/roundup_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,101 @@
+.TH  "roundup_selinux"  "8"  "roundup" "dwalsh@redhat.com" "roundup SELinux Policy documentation"
+.SH "NAME"
+roundup_selinux \- Security Enhanced Linux Policy for the roundup processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B roundup
+(Roundup Issue Tracking System policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux roundup policy is very flexible allowing users to setup their roundup processes in as secure a method as possible.
+.PP 
+The following file types are defined for roundup:
+
+
+.EX
+.PP
+.B roundup_exec_t 
+.EE
+
+- Set files with the roundup_exec_t type, if you want to transition an executable to the roundup_t domain.
+
+
+.EX
+.PP
+.B roundup_initrc_exec_t 
+.EE
+
+- Set files with the roundup_initrc_exec_t type, if you want to transition an executable to the roundup_initrc_t domain.
+
+
+.EX
+.PP
+.B roundup_var_lib_t 
+.EE
+
+- Set files with the roundup_var_lib_t type, if you want to store the roundup files under the /var/lib directory.
+
+
+.EX
+.PP
+.B roundup_var_run_t 
+.EE
+
+- Set files with the roundup_var_run_t type, if you want to store the roundup files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux roundup policy is very flexible allowing users to setup their roundup processes in as secure a method as possible.
+.PP 
+The following process types are defined for roundup:
+
+.EX
+.B roundup_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), roundup(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rpcbind_selinux.8 serefpolicy-3.7.19/man/man8/rpcbind_selinux.8
--- nsaserefpolicy/man/man8/rpcbind_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rpcbind_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,109 @@
+.TH  "rpcbind_selinux"  "8"  "rpcbind" "dwalsh@redhat.com" "rpcbind SELinux Policy documentation"
+.SH "NAME"
+rpcbind_selinux \- Security Enhanced Linux Policy for the rpcbind processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rpcbind
+(Universal Addresses to RPC Program Number Mapper)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rpcbind policy is very flexible allowing users to setup their rpcbind processes in as secure a method as possible.
+.PP 
+The following file types are defined for rpcbind:
+
+
+.EX
+.PP
+.B rpcbind_exec_t 
+.EE
+
+- Set files with the rpcbind_exec_t type, if you want to transition an executable to the rpcbind_t domain.
+
+
+.EX
+.PP
+.B rpcbind_initrc_exec_t 
+.EE
+
+- Set files with the rpcbind_initrc_exec_t type, if you want to transition an executable to the rpcbind_initrc_t domain.
+
+
+.EX
+.PP
+.B rpcbind_var_lib_t 
+.EE
+
+- Set files with the rpcbind_var_lib_t type, if you want to store the rpcbind files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/rpcbind(/.*)?, /var/lib/rpcbind(/.*)?
+
+.EX
+.PP
+.B rpcbind_var_run_t 
+.EE
+
+- Set files with the rpcbind_var_run_t type, if you want to store the rpcbind files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/rpcbind\.sock, /var/run/rpcbind\.lock, /var/run/rpc.statd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rpcbind policy is very flexible allowing users to setup their rpcbind processes in as secure a method as possible.
+.PP 
+The following process types are defined for rpcbind:
+
+.EX
+.B rpcbind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rpcbind(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rpcd_selinux.8 serefpolicy-3.7.19/man/man8/rpcd_selinux.8
--- nsaserefpolicy/man/man8/rpcd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rpcd_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,107 @@
+.TH  "rpcd_selinux"  "8"  "rpcd" "dwalsh@redhat.com" "rpcd SELinux Policy documentation"
+.SH "NAME"
+rpcd_selinux \- Security Enhanced Linux Policy for the rpcd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rpcd policy is very flexible allowing users to setup their rpcd processes in as secure a method as possible.
+.PP 
+The following file types are defined for rpcd:
+
+
+.EX
+.PP
+.B rpc_pipefs_t 
+.EE
+
+- Set files with the rpc_pipefs_t type, if you want to treat the files as rpc pipefs data.
+
+
+.EX
+.PP
+.B rpcd_exec_t 
+.EE
+
+- Set files with the rpcd_exec_t type, if you want to transition an executable to the rpcd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/sm-notify, /usr/sbin/rpc\.idmapd, /usr/sbin/rpc\.rquotad, /sbin/rpc\..*
+
+.EX
+.PP
+.B rpcd_initrc_exec_t 
+.EE
+
+- Set files with the rpcd_initrc_exec_t type, if you want to transition an executable to the rpcd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/nfslock, /etc/rc\.d/init\.d/rpcidmapd
+
+.EX
+.PP
+.B rpcd_var_run_t 
+.EE
+
+- Set files with the rpcd_var_run_t type, if you want to store the rpcd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/rpc\.statd(/.*)?, /var/run/rpc\.statd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rpcd policy is very flexible allowing users to setup their rpcd processes in as secure a method as possible.
+.PP 
+The following process types are defined for rpcd:
+
+.EX
+.B rpcd_t, rpcbind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rpcd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rpm_selinux.8 serefpolicy-3.7.19/man/man8/rpm_selinux.8
--- nsaserefpolicy/man/man8/rpm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rpm_selinux.8	2012-03-20 22:37:14.355458164 +0000
@@ -0,0 +1,177 @@
+.TH  "rpm_selinux"  "8"  "rpm" "dwalsh@redhat.com" "rpm SELinux Policy documentation"
+.SH "NAME"
+rpm_selinux \- Security Enhanced Linux Policy for the rpm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rpm
+(Policy for the RPM package manager)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rpm policy is very flexible allowing users to setup their rpm processes in as secure a method as possible.
+.PP 
+The following file types are defined for rpm:
+
+
+.EX
+.PP
+.B rpm_exec_t 
+.EE
+
+- Set files with the rpm_exec_t type, if you want to transition an executable to the rpm_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/yum-updatesd, /usr/bin/apt-get, /usr/libexec/yumDBUSBackend.py, /usr/libexec/packagekitd, /usr/sbin/rhn_check, /usr/bin/rpmdev-rmdevelrpms, /usr/sbin/synaptic, /usr/share/yumex/yumex-yum-backend, /usr/sbin/pirut, /usr/sbin/pup, /usr/bin/apt-shell, /usr/sbin/up2date, /usr/bin/fedora-rmdevelrpms, /bin/rpm, /usr/sbin/packagekitd, /usr/bin/yum, /usr/sbin/system-install-packages, /usr/bin/rpm, /usr/sbin/yum-complete-transaction, /usr/bin/smart, /usr/sbin/rhnreg_ks, /usr/share/yumex/yum_childtask\.py
+
+.EX
+.PP
+.B rpm_file_t 
+.EE
+
+- Set files with the rpm_file_t type, if you want to treat the files as rpm content.
+
+
+.EX
+.PP
+.B rpm_log_t 
+.EE
+
+- Set files with the rpm_log_t type, if you want to treat the data as rpm log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/yum\.log.*, /var/log/rpmpkgs.*
+
+.EX
+.PP
+.B rpm_script_exec_t 
+.EE
+
+- Set files with the rpm_script_exec_t type, if you want to transition an executable to the rpm_script_t domain.
+
+
+.EX
+.PP
+.B rpm_script_tmp_t 
+.EE
+
+- Set files with the rpm_script_tmp_t type, if you want to store rpm script temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rpm_script_tmpfs_t 
+.EE
+
+- Set files with the rpm_script_tmpfs_t type, if you want to store rpm script files on a tmpfs file system.
+
+
+.EX
+.PP
+.B rpm_tmp_t 
+.EE
+
+- Set files with the rpm_tmp_t type, if you want to store rpm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rpm_tmpfs_t 
+.EE
+
+- Set files with the rpm_tmpfs_t type, if you want to store rpm files on a tmpfs file system.
+
+
+.EX
+.PP
+.B rpm_var_cache_t 
+.EE
+
+- Set files with the rpm_var_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/yum(/.*)?, /var/spool/up2date(/.*)?
+
+.EX
+.PP
+.B rpm_var_lib_t 
+.EE
+
+- Set files with the rpm_var_lib_t type, if you want to store the rpm files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/yum(/.*)?, /var/lib/rpm(/.*)?, /var/lib/alternatives(/.*)?
+
+.EX
+.PP
+.B rpm_var_run_t 
+.EE
+
+- Set files with the rpm_var_run_t type, if you want to store the rpm files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/PackageKit(/.*)?, /var/run/yum.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rpm policy is very flexible allowing users to setup their rpm processes in as secure a method as possible.
+.PP 
+The following process types are defined for rpm:
+
+.EX
+.B rpm_t, rpm_script_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rpm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rshd_selinux.8 serefpolicy-3.7.19/man/man8/rshd_selinux.8
--- nsaserefpolicy/man/man8/rshd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rshd_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -0,0 +1,115 @@
+.TH  "rshd_selinux"  "8"  "rshd" "dwalsh@redhat.com" "rshd SELinux Policy documentation"
+.SH "NAME"
+rshd_selinux \- Security Enhanced Linux Policy for the rshd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rshd
+(Remote shell service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
+.PP 
+The following file types are defined for rshd:
+
+
+.EX
+.PP
+.B rshd_exec_t 
+.EE
+
+- Set files with the rshd_exec_t type, if you want to transition an executable to the rshd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/in\.rshd, /usr/kerberos/sbin/kshd, /usr/sbin/in\.rexecd
+
+.EX
+.PP
+.B rshd_keytab_t 
+.EE
+
+- Set files with the rshd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
+.PP 
+The following port types are defined for rshd:
+
+.EX
+.TP 5
+.B rsh_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
+.PP 
+The following process types are defined for rshd:
+
+.EX
+.B rshd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rshd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rssh_selinux.8 serefpolicy-3.7.19/man/man8/rssh_selinux.8
--- nsaserefpolicy/man/man8/rssh_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rssh_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -0,0 +1,93 @@
+.TH  "rssh_selinux"  "8"  "rssh" "dwalsh@redhat.com" "rssh SELinux Policy documentation"
+.SH "NAME"
+rssh_selinux \- Security Enhanced Linux Policy for the rssh processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rssh
+(Restricted (scp/sftp) only shell)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rssh policy is very flexible allowing users to setup their rssh processes in as secure a method as possible.
+.PP 
+The following file types are defined for rssh:
+
+
+.EX
+.PP
+.B rssh_exec_t 
+.EE
+
+- Set files with the rssh_exec_t type, if you want to transition an executable to the rssh_t domain.
+
+
+.EX
+.PP
+.B rssh_ro_t 
+.EE
+
+- Set files with the rssh_ro_t type, if you want to treat the files as rssh read/only content.
+
+
+.EX
+.PP
+.B rssh_rw_t 
+.EE
+
+- Set files with the rssh_rw_t type, if you want to treat the files as rssh read/write content.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rssh policy is very flexible allowing users to setup their rssh processes in as secure a method as possible.
+.PP 
+The following process types are defined for rssh:
+
+.EX
+.B rssh_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rssh(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rsync_selinux.8 serefpolicy-3.7.19/man/man8/rsync_selinux.8
--- nsaserefpolicy/man/man8/rsync_selinux.8	2011-03-17 07:21:23.181851003 +0000
+++ serefpolicy-3.7.19/man/man8/rsync_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -1,52 +1,205 @@
-.TH  "rsync_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "rsync Selinux Policy documentation"
-.de EX
-.nf
-.ft CW
-..
-.de EE
-.ft R
-.fi
-..
+.TH  "rsync_selinux"  "8"  "rsync" "dwalsh@redhat.com" "rsync SELinux Policy documentation"
 .SH "NAME"
-rsync_selinux \- Security Enhanced Linux Policy for the rsync daemon
+rsync_selinux \- Security Enhanced Linux Policy for the rsync processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the rsync server via flexible mandatory access
+
+SELinux Linux secures
+.B rsync
+(Fast incremental file transfer for synchronization)
+processes via flexible mandatory access
 control.  
-.SH FILE_CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-Policy governs the access daemons have to these files. 
-If you want to share files using the rsync daemon, you must label the files and directories public_content_t.  So if you created a special directory /var/rsync, you 
-would need to label the directory with the chcon tool.
-.TP
-chcon -t public_content_t /var/rsync
-.TP
-.TP
-To make this change permanent (survive a relabel), use the semanage command to add the change to file context configuration:
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  rsync policy is extremely flexible and has several booleans that allow you to manipulate the policy and run rsync with the tightest access possible.
+
+
+.PP
+If you want to allow rsync to run as a clien, you must turn on the rsync_client boolean.
+
+.EX
+.B setsebool -P rsync_client 1
+.EE
+
+.PP
+If you want to allow rsync to export any files/directories read only, you must turn on the rsync_export_all_ro boolean.
+
+.EX
+.B setsebool -P rsync_export_all_ro 1
+.EE
+
+.PP
+If you want to allow rsync servers to share nfs files system, you must turn on the rsync_use_nfs boolean.
+
+.EX
+.B setsebool -P rsync_use_nfs 1
+.EE
+
+.PP
+If you want to allow rsync servers to share cifs files system, you must turn on the rsync_use_cifs boolean.
+
+.EX
+.B setsebool -P rsync_use_cifs 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
 .TP
+Allow rsync servers to read the /var/rsync directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
 semanage fcontext -a -t public_content_t "/var/rsync(/.*)?"
-.TP
-This command adds the following entry to /etc/selinux/POLICYTYPE/contexts/files/file_contexts.local:
-.TP
-/var/rsync(/.*)? system_u:object_r:publix_content_t:s0
-.TP
-Run the restorecon command to apply the changes:
-.TP
-restorecon -R -v /var/rsync/
+.br
+.B restorecon -F -R -v /var/rsync
+.pp
+.TP
+Allow rsync servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_rsync_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/rsync/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/rsync/incoming
+
+
+.PP
+If you want to allow rsync to modify public files used for public file transfer services.  Files/Directories must be labeled public_content_rw_t., you must turn on the allow_rsync_anon_write boolean.
+
+.EX
+.B setsebool -P allow_rsync_anon_write 1
 .EE
 
-.SH SHARING FILES
-If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.  allow_DOMAIN_anon_write.  So for rsync you would execute:
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
+.PP 
+The following file types are defined for rsync:
+
 
 .EX
-setsebool -P allow_rsync_anon_write=1
+.PP
+.B rsync_data_t 
 .EE
 
-.SH BOOLEANS
-.TP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
+- Set files with the rsync_data_t type, if you want to treat the files as rsync content.
+
+
+.EX
+.PP
+.B rsync_etc_t 
+.EE
+
+- Set files with the rsync_etc_t type, if you want to store rsync files in the /etc directories.
+
+
+.EX
+.PP
+.B rsync_exec_t 
+.EE
+
+- Set files with the rsync_exec_t type, if you want to transition an executable to the rsync_t domain.
+
+
+.EX
+.PP
+.B rsync_log_t 
+.EE
+
+- Set files with the rsync_log_t type, if you want to treat the data as rsync log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rsync_tmp_t 
+.EE
+
+- Set files with the rsync_tmp_t type, if you want to store rsync temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rsync_var_run_t 
+.EE
+
+- Set files with the rsync_var_run_t type, if you want to store the rsync files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
+.PP 
+The following port types are defined for rsync:
+
+.EX
+.TP 5
+.B rsync_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
+.PP 
+The following process types are defined for rsync:
+
+.EX
+.B rsync_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
 .SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+This manual page was autogenerated by genman.py.
 
 .SH "SEE ALSO"
-selinux(8), rsync(1), chcon(1), setsebool(8), semanage(8)
+selinux(8), rsync(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rtkit_selinux.8 serefpolicy-3.7.19/man/man8/rtkit_selinux.8
--- nsaserefpolicy/man/man8/rtkit_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rtkit_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -0,0 +1,77 @@
+.TH  "rtkit_selinux"  "8"  "rtkit" "dwalsh@redhat.com" "rtkit SELinux Policy documentation"
+.SH "NAME"
+rtkit_selinux \- Security Enhanced Linux Policy for the rtkit processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rtkit
+(Realtime scheduling for user processes)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rtkit policy is very flexible allowing users to setup their rtkit processes in as secure a method as possible.
+.PP 
+The following file types are defined for rtkit:
+
+
+.EX
+.PP
+.B rtkit_daemon_exec_t 
+.EE
+
+- Set files with the rtkit_daemon_exec_t type, if you want to transition an executable to the rtkit_daemon_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rtkit policy is very flexible allowing users to setup their rtkit processes in as secure a method as possible.
+.PP 
+The following process types are defined for rtkit:
+
+.EX
+.B rtkit_daemon_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rtkit(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/run_selinux.8 serefpolicy-3.7.19/man/man8/run_selinux.8
--- nsaserefpolicy/man/man8/run_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/run_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -0,0 +1,86 @@
+.TH  "run_selinux"  "8"  "run" "dwalsh@redhat.com" "run SELinux Policy documentation"
+.SH "NAME"
+run_selinux \- Security Enhanced Linux Policy for the run processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  run policy is extremely flexible and has several booleans that allow you to manipulate the policy and run run with the tightest access possible.
+
+
+.PP
+If you want to allow samba to run unconfined script, you must turn on the samba_run_unconfined boolean.
+
+.EX
+.B setsebool -P samba_run_unconfined 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux run policy is very flexible allowing users to setup their run processes in as secure a method as possible.
+.PP 
+The following file types are defined for run:
+
+
+.EX
+.PP
+.B run_init_exec_t 
+.EE
+
+- Set files with the run_init_exec_t type, if you want to transition an executable to the run_init_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux run policy is very flexible allowing users to setup their run processes in as secure a method as possible.
+.PP 
+The following process types are defined for run:
+
+.EX
+.B run_init_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), run(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/rwho_selinux.8 serefpolicy-3.7.19/man/man8/rwho_selinux.8
--- nsaserefpolicy/man/man8/rwho_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/rwho_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -0,0 +1,127 @@
+.TH  "rwho_selinux"  "8"  "rwho" "dwalsh@redhat.com" "rwho SELinux Policy documentation"
+.SH "NAME"
+rwho_selinux \- Security Enhanced Linux Policy for the rwho processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rwho
+(Who is logged in on other machines?)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
+.PP 
+The following file types are defined for rwho:
+
+
+.EX
+.PP
+.B rwho_exec_t 
+.EE
+
+- Set files with the rwho_exec_t type, if you want to transition an executable to the rwho_t domain.
+
+
+.EX
+.PP
+.B rwho_initrc_exec_t 
+.EE
+
+- Set files with the rwho_initrc_exec_t type, if you want to transition an executable to the rwho_initrc_t domain.
+
+
+.EX
+.PP
+.B rwho_log_t 
+.EE
+
+- Set files with the rwho_log_t type, if you want to treat the data as rwho log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rwho_spool_t 
+.EE
+
+- Set files with the rwho_spool_t type, if you want to store the rwho files under the /var/spool directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
+.PP 
+The following port types are defined for rwho:
+
+.EX
+.TP 5
+.B rwho_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
+.PP 
+The following process types are defined for rwho:
+
+.EX
+.B rwho_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rwho(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sambagui_selinux.8 serefpolicy-3.7.19/man/man8/sambagui_selinux.8
--- nsaserefpolicy/man/man8/sambagui_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sambagui_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -0,0 +1,77 @@
+.TH  "sambagui_selinux"  "8"  "sambagui" "dwalsh@redhat.com" "sambagui SELinux Policy documentation"
+.SH "NAME"
+sambagui_selinux \- Security Enhanced Linux Policy for the sambagui processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sambagui
+(system-config-samba policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sambagui policy is very flexible allowing users to setup their sambagui processes in as secure a method as possible.
+.PP 
+The following file types are defined for sambagui:
+
+
+.EX
+.PP
+.B sambagui_exec_t 
+.EE
+
+- Set files with the sambagui_exec_t type, if you want to transition an executable to the sambagui_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sambagui policy is very flexible allowing users to setup their sambagui processes in as secure a method as possible.
+.PP 
+The following process types are defined for sambagui:
+
+.EX
+.B sambagui_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sambagui(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/samba_selinux.8 serefpolicy-3.7.19/man/man8/samba_selinux.8
--- nsaserefpolicy/man/man8/samba_selinux.8	2011-03-17 07:21:23.223851003 +0000
+++ serefpolicy-3.7.19/man/man8/samba_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -1,56 +1,250 @@
-.TH  "samba_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "Samba Selinux Policy documentation"
+.TH  "samba_selinux"  "8"  "samba" "dwalsh@redhat.com" "samba SELinux Policy documentation"
 .SH "NAME"
-samba_selinux \- Security Enhanced Linux Policy for Samba
+samba_selinux \- Security Enhanced Linux Policy for the samba processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the Samba server via flexible mandatory access
+
+SELinux Linux secures
+.B samba
+(
+SMB and CIFS client/server programs for UNIX and
+name  Service  Switch  daemon for resolving names
+from Windows NT servers.
+)
+processes via flexible mandatory access
 control.  
-.SH FILE_CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-Policy governs the access daemons have to these files. 
-If you want to share files other than home directories, those files must be 
-labeled samba_share_t.  So if you created a special directory /var/eng, you 
-would need to label the directory with the chcon tool.
-.TP
-chcon -t samba_share_t /var/eng
-.TP
-To make this change permanent (survive a relabel), use the semanage command to add the change to file context configuration:
-.TP
-semanage fcontext -a -t samba_share_t "/var/eng(/.*)?"
-.TP
-This command adds the following entry to /etc/selinux/POLICYTYPE/contexts/files/file_contexts.local:
-.TP
-/var/eng(/.*)? system_u:object_r:samba_share_t:s0
-.TP
-Run the restorecon command to apply the changes:
-.TP
-restorecon -R -v /var/eng/
 
-.SH SHARING FILES
-If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.  allow_DOMAIN_anon_write.  So for samba you would execute:
 
-setsebool -P allow_smbd_anon_write=1
 
 .SH BOOLEANS
-.br 
-SELinux policy is customizable based on least access required.  So by 
-default SElinux policy turns off SELinux sharing of home directories and 
-the use of Samba shares from a remote machine as a home directory.
-.TP
-If you are setting up this machine as a Samba server and wish to share the home directories, you need to set the samba_enable_home_dirs boolean. 
+SELinux policy is customizable based on least access required.  samba policy is extremely flexible and has several booleans that allow you to manipulate the policy and run samba with the tightest access possible.
+
+
+.PP
+If you want to allow samba to act as the domain controller, add users, groups and change passwords, you must turn on the samba_domain_controller boolean.
+
+.EX
+.B setsebool -P samba_domain_controller 1
+.EE
+
+.PP
+If you want to allow samba to share any file/directory read only, you must turn on the samba_export_all_ro boolean.
+
+.EX
+.B setsebool -P samba_export_all_ro 1
+.EE
+
+.PP
+If you want to support SAMBA home directorie, you must turn on the use_samba_home_dirs boolean.
+
+.EX
+.B setsebool -P use_samba_home_dirs 1
+.EE
+
+.PP
+If you want to allow samba to create new home directories (e.g. via PAM, you must turn on the samba_create_home_dirs boolean.
+
+.EX
+.B setsebool -P samba_create_home_dirs 1
+.EE
+
+.PP
+If you want to allow samba to share users home directories, you must turn on the samba_enable_home_dirs boolean.
+
+.EX
+.B setsebool -P samba_enable_home_dirs 1
+.EE
+
+.PP
+If you want to allow samba to export ntfs/fusefs volumes, you must turn on the samba_share_fusefs boolean.
+
+.EX
+.B setsebool -P samba_share_fusefs 1
+.EE
+
+.PP
+If you want to allow samba to export NFS volumes, you must turn on the samba_share_nfs boolean.
+
+.EX
+.B setsebool -P samba_share_nfs 1
+.EE
+
+.PP
+If you want to allow samba to run unconfined script, you must turn on the samba_run_unconfined boolean.
+
+.EX
+.B setsebool -P samba_run_unconfined 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage cifs file, you must turn on the sanlock_use_samba boolean.
+
+.EX
+.B setsebool -P sanlock_use_samba 1
+.EE
+
+.PP
+If you want to allow samba to share any file/directory read/write, you must turn on the samba_export_all_rw boolean.
+
+.EX
+.B setsebool -P samba_export_all_rw 1
+.EE
+
+.PP
+If you want to allow virt to manage cifs file, you must turn on the virt_use_samba boolean.
+
+.EX
+.B setsebool -P virt_use_samba 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux samba policy is very flexible allowing users to setup their samba processes in as secure a method as possible.
+.PP 
+The following file types are defined for samba:
+
+
+.EX
+.PP
+.B samba_etc_t 
+.EE
+
+- Set files with the samba_etc_t type, if you want to store samba files in the /etc directories.
+
+
+.EX
+.PP
+.B samba_initrc_exec_t 
+.EE
+
+- Set files with the samba_initrc_exec_t type, if you want to transition an executable to the samba_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/smb, /etc/rc\.d/init\.d/nmb, /etc/rc\.d/init\.d/winbind
+
+.EX
+.PP
+.B samba_log_t 
+.EE
+
+- Set files with the samba_log_t type, if you want to treat the data as samba log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B samba_net_exec_t 
+.EE
+
+- Set files with the samba_net_exec_t type, if you want to transition an executable to the samba_net_t domain.
+
+
+.EX
+.PP
+.B samba_net_tmp_t 
+.EE
+
+- Set files with the samba_net_tmp_t type, if you want to store samba net temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B samba_secrets_t 
+.EE
+
+- Set files with the samba_secrets_t type, if you want to treat the files as samba secrets data.
+
 .br
+.TP 5
+Paths: 
+/etc/samba/secrets\.tdb, /etc/samba/passdb\.tdb, /etc/samba/MACHINE\.SID, /etc/samba/smbpasswd
+
+.EX
+.PP
+.B samba_share_t 
+.EE
+
+- Set files with the samba_share_t type, if you want to treat the files as samba share data.
 
-setsebool -P samba_enable_home_dirs 1
-.TP
-If you want to use a remote Samba server for the home directories on this machine, you must set the use_samba_home_dirs boolean.
-.br 
-
-setsebool -P use_samba_home_dirs 1
-.TP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
+
+.EX
+.PP
+.B samba_unconfined_script_exec_t 
+.EE
+
+- Set files with the samba_unconfined_script_exec_t type, if you want to transition an executable to the samba_unconfined_script_t domain.
+
+
+.EX
+.PP
+.B samba_var_t 
+.EE
+
+- Set files with the samba_var_t type, if you want to store the s files under the /var directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/samba(/.*)?, /var/lib/samba(/.*)?, /var/spool/samba(/.*)?
+
+.EX
+.PP
+.B sambagui_exec_t 
+.EE
+
+- Set files with the sambagui_exec_t type, if you want to transition an executable to the sambagui_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux samba policy is very flexible allowing users to setup their samba processes in as secure a method as possible.
+.PP 
+The following process types are defined for samba:
+
+.EX
+.B samba_net_t, samba_unconfined_net_t, samba_unconfined_script_t, sambagui_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
 
 .SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+This manual page was autogenerated by genman.py.
 
 .SH "SEE ALSO"
-selinux(8), samba(7), chcon(1), setsebool(8), semanage(8)
+selinux(8), samba(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sandbox_selinux.8 serefpolicy-3.7.19/man/man8/sandbox_selinux.8
--- nsaserefpolicy/man/man8/sandbox_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sandbox_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -0,0 +1,133 @@
+.TH  "sandbox_selinux"  "8"  "sandbox" "dwalsh@redhat.com" "sandbox SELinux Policy documentation"
+.SH "NAME"
+sandbox_selinux \- Security Enhanced Linux Policy for the sandbox processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sandbox
+(policy for sandbox)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sandbox policy is very flexible allowing users to setup their sandbox processes in as secure a method as possible.
+.PP 
+The following file types are defined for sandbox:
+
+
+.EX
+.PP
+.B sandbox_devpts_t 
+.EE
+
+- Set files with the sandbox_devpts_t type, if you want to treat the files as sandbox devpts data.
+
+
+.EX
+.PP
+.B sandbox_exec_t 
+.EE
+
+- Set files with the sandbox_exec_t type, if you want to transition an executable to the sandbox_t domain.
+
+
+.EX
+.PP
+.B sandbox_file_t 
+.EE
+
+- Set files with the sandbox_file_t type, if you want to treat the files as sandbox content.
+
+
+.EX
+.PP
+.B sandbox_min_client_tmpfs_t 
+.EE
+
+- Set files with the sandbox_min_client_tmpfs_t type, if you want to store sandbox min client files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sandbox_net_client_tmpfs_t 
+.EE
+
+- Set files with the sandbox_net_client_tmpfs_t type, if you want to store sandbox net client files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sandbox_web_client_tmpfs_t 
+.EE
+
+- Set files with the sandbox_web_client_tmpfs_t type, if you want to store sandbox web client files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sandbox_x_client_tmpfs_t 
+.EE
+
+- Set files with the sandbox_x_client_tmpfs_t type, if you want to store sandbox x client files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sandbox_xserver_tmpfs_t 
+.EE
+
+- Set files with the sandbox_xserver_tmpfs_t type, if you want to store sandbox xserver files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sandbox policy is very flexible allowing users to setup their sandbox processes in as secure a method as possible.
+.PP 
+The following process types are defined for sandbox:
+
+.EX
+.B sandbox_x_client_t, sandbox_net_client_t, sandbox_xserver_t, sandbox_x_t, sandbox_web_client_t, sandbox_min_t, sandbox_net_t, sandbox_web_t, sandbox_min_client_t, sandbox_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sandbox(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sanlock_selinux.8 serefpolicy-3.7.19/man/man8/sanlock_selinux.8
--- nsaserefpolicy/man/man8/sanlock_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sanlock_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -0,0 +1,130 @@
+.TH  "sanlock_selinux"  "8"  "sanlock" "dwalsh@redhat.com" "sanlock SELinux Policy documentation"
+.SH "NAME"
+sanlock_selinux \- Security Enhanced Linux Policy for the sanlock processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sanlock
+(policy for sanlock)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sanlock policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sanlock with the tightest access possible.
+
+
+.PP
+If you want to allow confined virtual guests to interact with the sanloc, you must turn on the virt_use_sanlock boolean.
+
+.EX
+.B setsebool -P virt_use_sanlock 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage nfs file, you must turn on the sanlock_use_nfs boolean.
+
+.EX
+.B setsebool -P sanlock_use_nfs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage cifs file, you must turn on the sanlock_use_samba boolean.
+
+.EX
+.B setsebool -P sanlock_use_samba 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sanlock policy is very flexible allowing users to setup their sanlock processes in as secure a method as possible.
+.PP 
+The following file types are defined for sanlock:
+
+
+.EX
+.PP
+.B sanlock_exec_t 
+.EE
+
+- Set files with the sanlock_exec_t type, if you want to transition an executable to the sanlock_t domain.
+
+
+.EX
+.PP
+.B sanlock_initrc_exec_t 
+.EE
+
+- Set files with the sanlock_initrc_exec_t type, if you want to transition an executable to the sanlock_initrc_t domain.
+
+
+.EX
+.PP
+.B sanlock_log_t 
+.EE
+
+- Set files with the sanlock_log_t type, if you want to treat the data as sanlock log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B sanlock_var_run_t 
+.EE
+
+- Set files with the sanlock_var_run_t type, if you want to store the sanlock files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sanlock policy is very flexible allowing users to setup their sanlock processes in as secure a method as possible.
+.PP 
+The following process types are defined for sanlock:
+
+.EX
+.B sanlock_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sanlock(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/saslauthd_selinux.8 serefpolicy-3.7.19/man/man8/saslauthd_selinux.8
--- nsaserefpolicy/man/man8/saslauthd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/saslauthd_selinux.8	2012-03-20 22:37:14.356458140 +0000
@@ -0,0 +1,110 @@
+.TH  "saslauthd_selinux"  "8"  "saslauthd" "dwalsh@redhat.com" "saslauthd SELinux Policy documentation"
+.SH "NAME"
+saslauthd_selinux \- Security Enhanced Linux Policy for the saslauthd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  saslauthd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run saslauthd with the tightest access possible.
+
+
+.PP
+If you want to allow sasl to read shado, you must turn on the allow_saslauthd_read_shadow boolean.
+
+.EX
+.B setsebool -P allow_saslauthd_read_shadow 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux saslauthd policy is very flexible allowing users to setup their saslauthd processes in as secure a method as possible.
+.PP 
+The following file types are defined for saslauthd:
+
+
+.EX
+.PP
+.B saslauthd_exec_t 
+.EE
+
+- Set files with the saslauthd_exec_t type, if you want to transition an executable to the saslauthd_t domain.
+
+
+.EX
+.PP
+.B saslauthd_initrc_exec_t 
+.EE
+
+- Set files with the saslauthd_initrc_exec_t type, if you want to transition an executable to the saslauthd_initrc_t domain.
+
+
+.EX
+.PP
+.B saslauthd_keytab_t 
+.EE
+
+- Set files with the saslauthd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B saslauthd_var_run_t 
+.EE
+
+- Set files with the saslauthd_var_run_t type, if you want to store the saslauthd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux saslauthd policy is very flexible allowing users to setup their saslauthd processes in as secure a method as possible.
+.PP 
+The following process types are defined for saslauthd:
+
+.EX
+.B saslauthd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), saslauthd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sblim_selinux.8 serefpolicy-3.7.19/man/man8/sblim_selinux.8
--- nsaserefpolicy/man/man8/sblim_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sblim_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,93 @@
+.TH  "sblim_selinux"  "8"  "sblim" "dwalsh@redhat.com" "sblim SELinux Policy documentation"
+.SH "NAME"
+sblim_selinux \- Security Enhanced Linux Policy for the sblim processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sblim
+( policy for SBLIM Gatherer )
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sblim policy is very flexible allowing users to setup their sblim processes in as secure a method as possible.
+.PP 
+The following file types are defined for sblim:
+
+
+.EX
+.PP
+.B sblim_gatherd_exec_t 
+.EE
+
+- Set files with the sblim_gatherd_exec_t type, if you want to transition an executable to the sblim_gatherd_t domain.
+
+
+.EX
+.PP
+.B sblim_reposd_exec_t 
+.EE
+
+- Set files with the sblim_reposd_exec_t type, if you want to transition an executable to the sblim_reposd_t domain.
+
+
+.EX
+.PP
+.B sblim_var_run_t 
+.EE
+
+- Set files with the sblim_var_run_t type, if you want to store the sblim files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sblim policy is very flexible allowing users to setup their sblim processes in as secure a method as possible.
+.PP 
+The following process types are defined for sblim:
+
+.EX
+.B sblim_reposd_t, sblim_gatherd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sblim(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sectoolm_selinux.8 serefpolicy-3.7.19/man/man8/sectoolm_selinux.8
--- nsaserefpolicy/man/man8/sectoolm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sectoolm_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,77 @@
+.TH  "sectoolm_selinux"  "8"  "sectoolm" "dwalsh@redhat.com" "sectoolm SELinux Policy documentation"
+.SH "NAME"
+sectoolm_selinux \- Security Enhanced Linux Policy for the sectoolm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sectoolm
+(Sectool security audit tool)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sectoolm policy is very flexible allowing users to setup their sectoolm processes in as secure a method as possible.
+.PP 
+The following file types are defined for sectoolm:
+
+
+.EX
+.PP
+.B sectoolm_exec_t 
+.EE
+
+- Set files with the sectoolm_exec_t type, if you want to transition an executable to the sectoolm_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sectoolm policy is very flexible allowing users to setup their sectoolm processes in as secure a method as possible.
+.PP 
+The following process types are defined for sectoolm:
+
+.EX
+.B sectoolm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sectoolm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/semanage_selinux.8 serefpolicy-3.7.19/man/man8/semanage_selinux.8
--- nsaserefpolicy/man/man8/semanage_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/semanage_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,111 @@
+.TH  "semanage_selinux"  "8"  "semanage" "dwalsh@redhat.com" "semanage SELinux Policy documentation"
+.SH "NAME"
+semanage_selinux \- Security Enhanced Linux Policy for the semanage processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux semanage policy is very flexible allowing users to setup their semanage processes in as secure a method as possible.
+.PP 
+The following file types are defined for semanage:
+
+
+.EX
+.PP
+.B semanage_exec_t 
+.EE
+
+- Set files with the semanage_exec_t type, if you want to transition an executable to the semanage_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/system-config-selinux/system-config-selinux-dbus\.py, /usr/sbin/semanage, /usr/sbin/semodule
+
+.EX
+.PP
+.B semanage_read_lock_t 
+.EE
+
+- Set files with the semanage_read_lock_t type, if you want to treat the files as semanage read lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B semanage_store_t 
+.EE
+
+- Set files with the semanage_store_t type, if you want to treat the files as semanage store data.
+
+.br
+.TP 5
+Paths: 
+/etc/selinux/([^/]*/)?modules/(active|tmp|previous)(/.*)?, /etc/selinux/([^/]*/)?policy(/.*)?, /etc/share/selinux/mls(/.*)?, /etc/share/selinux/targeted(/.*)?
+
+.EX
+.PP
+.B semanage_tmp_t 
+.EE
+
+- Set files with the semanage_tmp_t type, if you want to store semanage temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B semanage_trans_lock_t 
+.EE
+
+- Set files with the semanage_trans_lock_t type, if you want to treat the files as semanage trans lock data, stored under the /var/lock directory
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux semanage policy is very flexible allowing users to setup their semanage processes in as secure a method as possible.
+.PP 
+The following process types are defined for semanage:
+
+.EX
+.B semanage_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sendmail_selinux.8 serefpolicy-3.7.19/man/man8/sendmail_selinux.8
--- nsaserefpolicy/man/man8/sendmail_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sendmail_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,151 @@
+.TH  "sendmail_selinux"  "8"  "sendmail" "dwalsh@redhat.com" "sendmail SELinux Policy documentation"
+.SH "NAME"
+sendmail_selinux \- Security Enhanced Linux Policy for the sendmail processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sendmail
+(Policy for sendmail)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sendmail policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sendmail with the tightest access possible.
+
+
+.PP
+If you want to allow http daemon to send mai, you must turn on the httpd_can_sendmail boolean.
+
+.EX
+.B setsebool -P httpd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow syslogd daemon to send mai, you must turn on the logging_syslogd_can_sendmail boolean.
+
+.EX
+.B setsebool -P logging_syslogd_can_sendmail 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sendmail policy is very flexible allowing users to setup their sendmail processes in as secure a method as possible.
+.PP 
+The following file types are defined for sendmail:
+
+
+.EX
+.PP
+.B sendmail_exec_t 
+.EE
+
+- Set files with the sendmail_exec_t type, if you want to transition an executable to the sendmail_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ssmtp, /usr/lib(64)?/sendmail, /usr/sbin/rmail, /usr/bin/esmtp, /var/qmail/bin/sendmail, /usr/sbin/sendmail\.postfix, /usr/lib/courier/bin/sendmail, /bin/mail(x)?, /usr/sbin/sendmail(\.sendmail)?
+
+.EX
+.PP
+.B sendmail_initrc_exec_t 
+.EE
+
+- Set files with the sendmail_initrc_exec_t type, if you want to transition an executable to the sendmail_initrc_t domain.
+
+
+.EX
+.PP
+.B sendmail_keytab_t 
+.EE
+
+- Set files with the sendmail_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B sendmail_log_t 
+.EE
+
+- Set files with the sendmail_log_t type, if you want to treat the data as sendmail log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/sendmail\.st, /var/log/mail(/.*)?
+
+.EX
+.PP
+.B sendmail_tmp_t 
+.EE
+
+- Set files with the sendmail_tmp_t type, if you want to store sendmail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B sendmail_var_run_t 
+.EE
+
+- Set files with the sendmail_var_run_t type, if you want to store the sendmail files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/sendmail\.pid, /var/run/sm-client\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sendmail policy is very flexible allowing users to setup their sendmail processes in as secure a method as possible.
+.PP 
+The following process types are defined for sendmail:
+
+.EX
+.B sendmail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sendmail(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/setfiles_selinux.8 serefpolicy-3.7.19/man/man8/setfiles_selinux.8
--- nsaserefpolicy/man/man8/setfiles_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/setfiles_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,75 @@
+.TH  "setfiles_selinux"  "8"  "setfiles" "dwalsh@redhat.com" "setfiles SELinux Policy documentation"
+.SH "NAME"
+setfiles_selinux \- Security Enhanced Linux Policy for the setfiles processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setfiles policy is very flexible allowing users to setup their setfiles processes in as secure a method as possible.
+.PP 
+The following file types are defined for setfiles:
+
+
+.EX
+.PP
+.B setfiles_exec_t 
+.EE
+
+- Set files with the setfiles_exec_t type, if you want to transition an executable to the setfiles_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/setfiles.*, /sbin/restorecon, /usr/sbin/setfiles.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setfiles policy is very flexible allowing users to setup their setfiles processes in as secure a method as possible.
+.PP 
+The following process types are defined for setfiles:
+
+.EX
+.B setfiles_mac_t, setfiles_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setfiles(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/setkey_selinux.8 serefpolicy-3.7.19/man/man8/setkey_selinux.8
--- nsaserefpolicy/man/man8/setkey_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/setkey_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,75 @@
+.TH  "setkey_selinux"  "8"  "setkey" "dwalsh@redhat.com" "setkey SELinux Policy documentation"
+.SH "NAME"
+setkey_selinux \- Security Enhanced Linux Policy for the setkey processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setkey policy is very flexible allowing users to setup their setkey processes in as secure a method as possible.
+.PP 
+The following file types are defined for setkey:
+
+
+.EX
+.PP
+.B setkey_exec_t 
+.EE
+
+- Set files with the setkey_exec_t type, if you want to transition an executable to the setkey_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/setkey, /sbin/setkey
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setkey policy is very flexible allowing users to setup their setkey processes in as secure a method as possible.
+.PP 
+The following process types are defined for setkey:
+
+.EX
+.B setkey_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setkey(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/setrans_selinux.8 serefpolicy-3.7.19/man/man8/setrans_selinux.8
--- nsaserefpolicy/man/man8/setrans_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/setrans_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,93 @@
+.TH  "setrans_selinux"  "8"  "setrans" "dwalsh@redhat.com" "setrans SELinux Policy documentation"
+.SH "NAME"
+setrans_selinux \- Security Enhanced Linux Policy for the setrans processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B setrans
+(SELinux MLS/MCS label translation service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setrans policy is very flexible allowing users to setup their setrans processes in as secure a method as possible.
+.PP 
+The following file types are defined for setrans:
+
+
+.EX
+.PP
+.B setrans_exec_t 
+.EE
+
+- Set files with the setrans_exec_t type, if you want to transition an executable to the setrans_t domain.
+
+
+.EX
+.PP
+.B setrans_initrc_exec_t 
+.EE
+
+- Set files with the setrans_initrc_exec_t type, if you want to transition an executable to the setrans_initrc_t domain.
+
+
+.EX
+.PP
+.B setrans_var_run_t 
+.EE
+
+- Set files with the setrans_var_run_t type, if you want to store the setrans files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setrans policy is very flexible allowing users to setup their setrans processes in as secure a method as possible.
+.PP 
+The following process types are defined for setrans:
+
+.EX
+.B setrans_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setrans(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/setroubleshootd_selinux.8 serefpolicy-3.7.19/man/man8/setroubleshootd_selinux.8
--- nsaserefpolicy/man/man8/setroubleshootd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/setroubleshootd_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,103 @@
+.TH  "setroubleshootd_selinux"  "8"  "setroubleshootd" "dwalsh@redhat.com" "setroubleshootd SELinux Policy documentation"
+.SH "NAME"
+setroubleshootd_selinux \- Security Enhanced Linux Policy for the setroubleshootd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setroubleshootd policy is very flexible allowing users to setup their setroubleshootd processes in as secure a method as possible.
+.PP 
+The following file types are defined for setroubleshootd:
+
+
+.EX
+.PP
+.B setroubleshoot_fixit_exec_t 
+.EE
+
+- Set files with the setroubleshoot_fixit_exec_t type, if you want to transition an executable to the setroubleshoot_fixit_t domain.
+
+
+.EX
+.PP
+.B setroubleshoot_var_lib_t 
+.EE
+
+- Set files with the setroubleshoot_var_lib_t type, if you want to store the setroubleshoot files under the /var/lib directory.
+
+
+.EX
+.PP
+.B setroubleshoot_var_log_t 
+.EE
+
+- Set files with the setroubleshoot_var_log_t type, if you want to treat the data as setroubleshoot var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B setroubleshoot_var_run_t 
+.EE
+
+- Set files with the setroubleshoot_var_run_t type, if you want to store the setroubleshoot files under the /run directory.
+
+
+.EX
+.PP
+.B setroubleshootd_exec_t 
+.EE
+
+- Set files with the setroubleshootd_exec_t type, if you want to transition an executable to the setroubleshootd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setroubleshootd policy is very flexible allowing users to setup their setroubleshootd processes in as secure a method as possible.
+.PP 
+The following process types are defined for setroubleshootd:
+
+.EX
+.B setroubleshoot_fixit_t, setroubleshootd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setroubleshootd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/setroubleshoot_selinux.8 serefpolicy-3.7.19/man/man8/setroubleshoot_selinux.8
--- nsaserefpolicy/man/man8/setroubleshoot_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/setroubleshoot_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,109 @@
+.TH  "setroubleshoot_selinux"  "8"  "setroubleshoot" "dwalsh@redhat.com" "setroubleshoot SELinux Policy documentation"
+.SH "NAME"
+setroubleshoot_selinux \- Security Enhanced Linux Policy for the setroubleshoot processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B setroubleshoot
+(SELinux troubleshooting service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setroubleshoot policy is very flexible allowing users to setup their setroubleshoot processes in as secure a method as possible.
+.PP 
+The following file types are defined for setroubleshoot:
+
+
+.EX
+.PP
+.B setroubleshoot_fixit_exec_t 
+.EE
+
+- Set files with the setroubleshoot_fixit_exec_t type, if you want to transition an executable to the setroubleshoot_fixit_t domain.
+
+
+.EX
+.PP
+.B setroubleshoot_var_lib_t 
+.EE
+
+- Set files with the setroubleshoot_var_lib_t type, if you want to store the setroubleshoot files under the /var/lib directory.
+
+
+.EX
+.PP
+.B setroubleshoot_var_log_t 
+.EE
+
+- Set files with the setroubleshoot_var_log_t type, if you want to treat the data as setroubleshoot var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B setroubleshoot_var_run_t 
+.EE
+
+- Set files with the setroubleshoot_var_run_t type, if you want to store the setroubleshoot files under the /run directory.
+
+
+.EX
+.PP
+.B setroubleshootd_exec_t 
+.EE
+
+- Set files with the setroubleshootd_exec_t type, if you want to transition an executable to the setroubleshootd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setroubleshoot policy is very flexible allowing users to setup their setroubleshoot processes in as secure a method as possible.
+.PP 
+The following process types are defined for setroubleshoot:
+
+.EX
+.B setroubleshoot_fixit_t, setroubleshootd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setroubleshoot(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/setsebool_selinux.8 serefpolicy-3.7.19/man/man8/setsebool_selinux.8
--- nsaserefpolicy/man/man8/setsebool_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/setsebool_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,71 @@
+.TH  "setsebool_selinux"  "8"  "setsebool" "dwalsh@redhat.com" "setsebool SELinux Policy documentation"
+.SH "NAME"
+setsebool_selinux \- Security Enhanced Linux Policy for the setsebool processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setsebool policy is very flexible allowing users to setup their setsebool processes in as secure a method as possible.
+.PP 
+The following file types are defined for setsebool:
+
+
+.EX
+.PP
+.B setsebool_exec_t 
+.EE
+
+- Set files with the setsebool_exec_t type, if you want to transition an executable to the setsebool_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setsebool policy is very flexible allowing users to setup their setsebool processes in as secure a method as possible.
+.PP 
+The following process types are defined for setsebool:
+
+.EX
+.B setsebool_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setsebool(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sge_selinux.8 serefpolicy-3.7.19/man/man8/sge_selinux.8
--- nsaserefpolicy/man/man8/sge_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sge_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,124 @@
+.TH  "sge_selinux"  "8"  "sge" "dwalsh@redhat.com" "sge SELinux Policy documentation"
+.SH "NAME"
+sge_selinux \- Security Enhanced Linux Policy for the sge processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sge
+(Policy for gridengine MPI jobs)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sge policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sge with the tightest access possible.
+
+
+.PP
+If you want to allow sge to access nfs file systems, you must turn on the sge_use_nfs boolean.
+
+.EX
+.B setsebool -P sge_use_nfs 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sge policy is very flexible allowing users to setup their sge processes in as secure a method as possible.
+.PP 
+The following file types are defined for sge:
+
+
+.EX
+.PP
+.B sge_execd_exec_t 
+.EE
+
+- Set files with the sge_execd_exec_t type, if you want to transition an executable to the sge_execd_t domain.
+
+
+.EX
+.PP
+.B sge_job_exec_t 
+.EE
+
+- Set files with the sge_job_exec_t type, if you want to transition an executable to the sge_job_t domain.
+
+
+.EX
+.PP
+.B sge_shepherd_exec_t 
+.EE
+
+- Set files with the sge_shepherd_exec_t type, if you want to transition an executable to the sge_shepherd_t domain.
+
+
+.EX
+.PP
+.B sge_spool_t 
+.EE
+
+- Set files with the sge_spool_t type, if you want to store the sge files under the /var/spool directory.
+
+
+.EX
+.PP
+.B sge_tmp_t 
+.EE
+
+- Set files with the sge_tmp_t type, if you want to store sge temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sge policy is very flexible allowing users to setup their sge processes in as secure a method as possible.
+.PP 
+The following process types are defined for sge:
+
+.EX
+.B sge_execd_t, sge_job_ssh_t, sge_shepherd_t, sge_job_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sge(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/shorewall_selinux.8 serefpolicy-3.7.19/man/man8/shorewall_selinux.8
--- nsaserefpolicy/man/man8/shorewall_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/shorewall_selinux.8	2012-03-20 22:37:14.357458116 +0000
@@ -0,0 +1,141 @@
+.TH  "shorewall_selinux"  "8"  "shorewall" "dwalsh@redhat.com" "shorewall SELinux Policy documentation"
+.SH "NAME"
+shorewall_selinux \- Security Enhanced Linux Policy for the shorewall processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B shorewall
+(Shoreline Firewall high-level tool for configuring netfilter)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux shorewall policy is very flexible allowing users to setup their shorewall processes in as secure a method as possible.
+.PP 
+The following file types are defined for shorewall:
+
+
+.EX
+.PP
+.B shorewall_etc_t 
+.EE
+
+- Set files with the shorewall_etc_t type, if you want to store shorewall files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/shorewall-lite(/.*)?, /etc/shorewall(/.*)?
+
+.EX
+.PP
+.B shorewall_exec_t 
+.EE
+
+- Set files with the shorewall_exec_t type, if you want to transition an executable to the shorewall_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/shorewall6?, /sbin/shorewall-lite
+
+.EX
+.PP
+.B shorewall_initrc_exec_t 
+.EE
+
+- Set files with the shorewall_initrc_exec_t type, if you want to transition an executable to the shorewall_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/shorewall, /etc/rc\.d/init\.d/shorewall-lite
+
+.EX
+.PP
+.B shorewall_lock_t 
+.EE
+
+- Set files with the shorewall_lock_t type, if you want to treat the files as shorewall lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B shorewall_log_t 
+.EE
+
+- Set files with the shorewall_log_t type, if you want to treat the data as shorewall log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B shorewall_tmp_t 
+.EE
+
+- Set files with the shorewall_tmp_t type, if you want to store shorewall temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B shorewall_var_lib_t 
+.EE
+
+- Set files with the shorewall_var_lib_t type, if you want to store the shorewall files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/shorewall-lite(/.*)?, /var/lib/shorewall(/.*)?, /var/lib/shorewall6(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux shorewall policy is very flexible allowing users to setup their shorewall processes in as secure a method as possible.
+.PP 
+The following process types are defined for shorewall:
+
+.EX
+.B shorewall_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), shorewall(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/showmount_selinux.8 serefpolicy-3.7.19/man/man8/showmount_selinux.8
--- nsaserefpolicy/man/man8/showmount_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/showmount_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,71 @@
+.TH  "showmount_selinux"  "8"  "showmount" "dwalsh@redhat.com" "showmount SELinux Policy documentation"
+.SH "NAME"
+showmount_selinux \- Security Enhanced Linux Policy for the showmount processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux showmount policy is very flexible allowing users to setup their showmount processes in as secure a method as possible.
+.PP 
+The following file types are defined for showmount:
+
+
+.EX
+.PP
+.B showmount_exec_t 
+.EE
+
+- Set files with the showmount_exec_t type, if you want to transition an executable to the showmount_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux showmount policy is very flexible allowing users to setup their showmount processes in as secure a method as possible.
+.PP 
+The following process types are defined for showmount:
+
+.EX
+.B showmount_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), showmount(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/shutdown_selinux.8 serefpolicy-3.7.19/man/man8/shutdown_selinux.8
--- nsaserefpolicy/man/man8/shutdown_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/shutdown_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,93 @@
+.TH  "shutdown_selinux"  "8"  "shutdown" "dwalsh@redhat.com" "shutdown SELinux Policy documentation"
+.SH "NAME"
+shutdown_selinux \- Security Enhanced Linux Policy for the shutdown processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B shutdown
+(policy for shutdown)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux shutdown policy is very flexible allowing users to setup their shutdown processes in as secure a method as possible.
+.PP 
+The following file types are defined for shutdown:
+
+
+.EX
+.PP
+.B shutdown_etc_t 
+.EE
+
+- Set files with the shutdown_etc_t type, if you want to store shutdown files in the /etc directories.
+
+
+.EX
+.PP
+.B shutdown_exec_t 
+.EE
+
+- Set files with the shutdown_exec_t type, if you want to transition an executable to the shutdown_t domain.
+
+
+.EX
+.PP
+.B shutdown_var_run_t 
+.EE
+
+- Set files with the shutdown_var_run_t type, if you want to store the shutdown files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux shutdown policy is very flexible allowing users to setup their shutdown processes in as secure a method as possible.
+.PP 
+The following process types are defined for shutdown:
+
+.EX
+.B shutdown_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), shutdown(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/slapd_selinux.8 serefpolicy-3.7.19/man/man8/slapd_selinux.8
--- nsaserefpolicy/man/man8/slapd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/slapd_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,167 @@
+.TH  "slapd_selinux"  "8"  "slapd" "dwalsh@redhat.com" "slapd SELinux Policy documentation"
+.SH "NAME"
+slapd_selinux \- Security Enhanced Linux Policy for the slapd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux slapd policy is very flexible allowing users to setup their slapd processes in as secure a method as possible.
+.PP 
+The following file types are defined for slapd:
+
+
+.EX
+.PP
+.B slapd_cert_t 
+.EE
+
+- Set files with the slapd_cert_t type, if you want to treat the files as slapd certificate data.
+
+
+.EX
+.PP
+.B slapd_db_t 
+.EE
+
+- Set files with the slapd_db_t type, if you want to treat the files as slapd database content.
+
+.br
+.TP 5
+Paths: 
+/etc/openldap/slapd\.d(/.*)?, /var/lib/ldap(/.*)?
+
+.EX
+.PP
+.B slapd_etc_t 
+.EE
+
+- Set files with the slapd_etc_t type, if you want to store slapd files in the /etc directories.
+
+
+.EX
+.PP
+.B slapd_exec_t 
+.EE
+
+- Set files with the slapd_exec_t type, if you want to transition an executable to the slapd_t domain.
+
+
+.EX
+.PP
+.B slapd_initrc_exec_t 
+.EE
+
+- Set files with the slapd_initrc_exec_t type, if you want to transition an executable to the slapd_initrc_t domain.
+
+
+.EX
+.PP
+.B slapd_keytab_t 
+.EE
+
+- Set files with the slapd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B slapd_lock_t 
+.EE
+
+- Set files with the slapd_lock_t type, if you want to treat the files as slapd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B slapd_log_t 
+.EE
+
+- Set files with the slapd_log_t type, if you want to treat the data as slapd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B slapd_replog_t 
+.EE
+
+- Set files with the slapd_replog_t type, if you want to treat the files as slapd replog data.
+
+
+.EX
+.PP
+.B slapd_tmp_t 
+.EE
+
+- Set files with the slapd_tmp_t type, if you want to store slapd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B slapd_tmpfs_t 
+.EE
+
+- Set files with the slapd_tmpfs_t type, if you want to store slapd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B slapd_var_run_t 
+.EE
+
+- Set files with the slapd_var_run_t type, if you want to store the slapd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/slapd\.args, /var/run/openldap(/.*)?, /var/run/slapd\.pid, /var/run/ldapi
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux slapd policy is very flexible allowing users to setup their slapd processes in as secure a method as possible.
+.PP 
+The following process types are defined for slapd:
+
+.EX
+.B slapd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), slapd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/smbcontrol_selinux.8 serefpolicy-3.7.19/man/man8/smbcontrol_selinux.8
--- nsaserefpolicy/man/man8/smbcontrol_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/smbcontrol_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,71 @@
+.TH  "smbcontrol_selinux"  "8"  "smbcontrol" "dwalsh@redhat.com" "smbcontrol SELinux Policy documentation"
+.SH "NAME"
+smbcontrol_selinux \- Security Enhanced Linux Policy for the smbcontrol processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smbcontrol policy is very flexible allowing users to setup their smbcontrol processes in as secure a method as possible.
+.PP 
+The following file types are defined for smbcontrol:
+
+
+.EX
+.PP
+.B smbcontrol_exec_t 
+.EE
+
+- Set files with the smbcontrol_exec_t type, if you want to transition an executable to the smbcontrol_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smbcontrol policy is very flexible allowing users to setup their smbcontrol processes in as secure a method as possible.
+.PP 
+The following process types are defined for smbcontrol:
+
+.EX
+.B smbcontrol_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smbcontrol(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/smbd_selinux.8 serefpolicy-3.7.19/man/man8/smbd_selinux.8
--- nsaserefpolicy/man/man8/smbd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/smbd_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,151 @@
+.TH  "smbd_selinux"  "8"  "smbd" "dwalsh@redhat.com" "smbd SELinux Policy documentation"
+.SH "NAME"
+smbd_selinux \- Security Enhanced Linux Policy for the smbd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow smbd servers to read the /var/smbd directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/smbd(/.*)?"
+.br
+.B restorecon -F -R -v /var/smbd
+.pp
+.TP
+Allow smbd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_smbd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/smbd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/smbd/incoming
+
+
+.PP
+If you want to allow samba to modify public files used for public file transfer services.  Files/Directories must be labeled public_content_rw_t., you must turn on the allow_smbd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_smbd_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
+.PP 
+The following file types are defined for smbd:
+
+
+.EX
+.PP
+.B smbd_exec_t 
+.EE
+
+- Set files with the smbd_exec_t type, if you want to transition an executable to the smbd_t domain.
+
+
+.EX
+.PP
+.B smbd_keytab_t 
+.EE
+
+- Set files with the smbd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B smbd_tmp_t 
+.EE
+
+- Set files with the smbd_tmp_t type, if you want to store smbd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B smbd_var_run_t 
+.EE
+
+- Set files with the smbd_var_run_t type, if you want to store the smbd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/samba/smbd\.pid, /var/run/smbd\.pid, /var/run/samba/locking\.tdb, /var/run/samba/share_info\.tdb, /var/run/samba/connections\.tdb, /var/run/samba/gencache\.tdb, /var/run/samba/sessionid\.tdb, /var/run/samba/brlock\.tdb
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
+.PP 
+The following port types are defined for smbd:
+
+.EX
+.TP 5
+.B smbd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
+.PP 
+The following process types are defined for smbd:
+
+.EX
+.B smbcontrol_t, smbmount_t, smbd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smbd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/smbmount_selinux.8 serefpolicy-3.7.19/man/man8/smbmount_selinux.8
--- nsaserefpolicy/man/man8/smbmount_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/smbmount_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,75 @@
+.TH  "smbmount_selinux"  "8"  "smbmount" "dwalsh@redhat.com" "smbmount SELinux Policy documentation"
+.SH "NAME"
+smbmount_selinux \- Security Enhanced Linux Policy for the smbmount processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smbmount policy is very flexible allowing users to setup their smbmount processes in as secure a method as possible.
+.PP 
+The following file types are defined for smbmount:
+
+
+.EX
+.PP
+.B smbmount_exec_t 
+.EE
+
+- Set files with the smbmount_exec_t type, if you want to transition an executable to the smbmount_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/smbmnt, /usr/bin/smbmount
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smbmount policy is very flexible allowing users to setup their smbmount processes in as secure a method as possible.
+.PP 
+The following process types are defined for smbmount:
+
+.EX
+.B smbmount_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smbmount(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/smokeping_selinux.8 serefpolicy-3.7.19/man/man8/smokeping_selinux.8
--- nsaserefpolicy/man/man8/smokeping_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/smokeping_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,101 @@
+.TH  "smokeping_selinux"  "8"  "smokeping" "dwalsh@redhat.com" "smokeping SELinux Policy documentation"
+.SH "NAME"
+smokeping_selinux \- Security Enhanced Linux Policy for the smokeping processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B smokeping
+(Smokeping network latency measurement)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smokeping policy is very flexible allowing users to setup their smokeping processes in as secure a method as possible.
+.PP 
+The following file types are defined for smokeping:
+
+
+.EX
+.PP
+.B smokeping_exec_t 
+.EE
+
+- Set files with the smokeping_exec_t type, if you want to transition an executable to the smokeping_t domain.
+
+
+.EX
+.PP
+.B smokeping_initrc_exec_t 
+.EE
+
+- Set files with the smokeping_initrc_exec_t type, if you want to transition an executable to the smokeping_initrc_t domain.
+
+
+.EX
+.PP
+.B smokeping_var_lib_t 
+.EE
+
+- Set files with the smokeping_var_lib_t type, if you want to store the smokeping files under the /var/lib directory.
+
+
+.EX
+.PP
+.B smokeping_var_run_t 
+.EE
+
+- Set files with the smokeping_var_run_t type, if you want to store the smokeping files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smokeping policy is very flexible allowing users to setup their smokeping processes in as secure a method as possible.
+.PP 
+The following process types are defined for smokeping:
+
+.EX
+.B smokeping_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smokeping(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/smoltclient_selinux.8 serefpolicy-3.7.19/man/man8/smoltclient_selinux.8
--- nsaserefpolicy/man/man8/smoltclient_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/smoltclient_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,85 @@
+.TH  "smoltclient_selinux"  "8"  "smoltclient" "dwalsh@redhat.com" "smoltclient SELinux Policy documentation"
+.SH "NAME"
+smoltclient_selinux \- Security Enhanced Linux Policy for the smoltclient processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B smoltclient
+(The Fedora hardware profiler client)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smoltclient policy is very flexible allowing users to setup their smoltclient processes in as secure a method as possible.
+.PP 
+The following file types are defined for smoltclient:
+
+
+.EX
+.PP
+.B smoltclient_exec_t 
+.EE
+
+- Set files with the smoltclient_exec_t type, if you want to transition an executable to the smoltclient_t domain.
+
+
+.EX
+.PP
+.B smoltclient_tmp_t 
+.EE
+
+- Set files with the smoltclient_tmp_t type, if you want to store smoltclient temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smoltclient policy is very flexible allowing users to setup their smoltclient processes in as secure a method as possible.
+.PP 
+The following process types are defined for smoltclient:
+
+.EX
+.B smoltclient_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smoltclient(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/snmpd_selinux.8 serefpolicy-3.7.19/man/man8/snmpd_selinux.8
--- nsaserefpolicy/man/man8/snmpd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/snmpd_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,141 @@
+.TH  "snmpd_selinux"  "8"  "snmpd" "dwalsh@redhat.com" "snmpd SELinux Policy documentation"
+.SH "NAME"
+snmpd_selinux \- Security Enhanced Linux Policy for the snmpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for snmpd:
+
+
+.EX
+.PP
+.B snmpd_exec_t 
+.EE
+
+- Set files with the snmpd_exec_t type, if you want to transition an executable to the snmpd_t domain.
+
+
+.EX
+.PP
+.B snmpd_initrc_exec_t 
+.EE
+
+- Set files with the snmpd_initrc_exec_t type, if you want to transition an executable to the snmpd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/snmpd, /etc/rc\.d/init\.d/snmptrapd
+
+.EX
+.PP
+.B snmpd_log_t 
+.EE
+
+- Set files with the snmpd_log_t type, if you want to treat the data as snmpd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B snmpd_var_lib_t 
+.EE
+
+- Set files with the snmpd_var_lib_t type, if you want to store the snmpd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/agentx(/.*)?, /usr/share/snmp/mibs/\.index, /var/net-snmp(/.*), /var/lib/net-snmp(/.*)?, /var/lib/snmp(/.*)?
+
+.EX
+.PP
+.B snmpd_var_run_t 
+.EE
+
+- Set files with the snmpd_var_run_t type, if you want to store the snmpd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/snmpd\.pid, /var/run/snmpd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for snmpd:
+
+.EX
+.TP 5
+.B snmp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for snmpd:
+
+.EX
+.B snmpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), snmpd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/snort_selinux.8 serefpolicy-3.7.19/man/man8/snort_selinux.8
--- nsaserefpolicy/man/man8/snort_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/snort_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,121 @@
+.TH  "snort_selinux"  "8"  "snort" "dwalsh@redhat.com" "snort SELinux Policy documentation"
+.SH "NAME"
+snort_selinux \- Security Enhanced Linux Policy for the snort processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B snort
+(Snort network intrusion detection system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux snort policy is very flexible allowing users to setup their snort processes in as secure a method as possible.
+.PP 
+The following file types are defined for snort:
+
+
+.EX
+.PP
+.B snort_etc_t 
+.EE
+
+- Set files with the snort_etc_t type, if you want to store snort files in the /etc directories.
+
+
+.EX
+.PP
+.B snort_exec_t 
+.EE
+
+- Set files with the snort_exec_t type, if you want to transition an executable to the snort_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/snort-plain, /usr/s?bin/snort
+
+.EX
+.PP
+.B snort_initrc_exec_t 
+.EE
+
+- Set files with the snort_initrc_exec_t type, if you want to transition an executable to the snort_initrc_t domain.
+
+
+.EX
+.PP
+.B snort_log_t 
+.EE
+
+- Set files with the snort_log_t type, if you want to treat the data as snort log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B snort_tmp_t 
+.EE
+
+- Set files with the snort_tmp_t type, if you want to store snort temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B snort_var_run_t 
+.EE
+
+- Set files with the snort_var_run_t type, if you want to store the snort files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux snort policy is very flexible allowing users to setup their snort processes in as secure a method as possible.
+.PP 
+The following process types are defined for snort:
+
+.EX
+.B snort_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), snort(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sosreport_selinux.8 serefpolicy-3.7.19/man/man8/sosreport_selinux.8
--- nsaserefpolicy/man/man8/sosreport_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sosreport_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,93 @@
+.TH  "sosreport_selinux"  "8"  "sosreport" "dwalsh@redhat.com" "sosreport SELinux Policy documentation"
+.SH "NAME"
+sosreport_selinux \- Security Enhanced Linux Policy for the sosreport processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sosreport
+(policy for sosreport)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sosreport policy is very flexible allowing users to setup their sosreport processes in as secure a method as possible.
+.PP 
+The following file types are defined for sosreport:
+
+
+.EX
+.PP
+.B sosreport_exec_t 
+.EE
+
+- Set files with the sosreport_exec_t type, if you want to transition an executable to the sosreport_t domain.
+
+
+.EX
+.PP
+.B sosreport_tmp_t 
+.EE
+
+- Set files with the sosreport_tmp_t type, if you want to store sosreport temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B sosreport_tmpfs_t 
+.EE
+
+- Set files with the sosreport_tmpfs_t type, if you want to store sosreport files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sosreport policy is very flexible allowing users to setup their sosreport processes in as secure a method as possible.
+.PP 
+The following process types are defined for sosreport:
+
+.EX
+.B sosreport_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sosreport(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/soundd_selinux.8 serefpolicy-3.7.19/man/man8/soundd_selinux.8
--- nsaserefpolicy/man/man8/soundd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/soundd_selinux.8	2012-03-20 22:37:14.358458092 +0000
@@ -0,0 +1,157 @@
+.TH  "soundd_selinux"  "8"  "soundd" "dwalsh@redhat.com" "soundd SELinux Policy documentation"
+.SH "NAME"
+soundd_selinux \- Security Enhanced Linux Policy for the soundd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
+.PP 
+The following file types are defined for soundd:
+
+
+.EX
+.PP
+.B soundd_etc_t 
+.EE
+
+- Set files with the soundd_etc_t type, if you want to store soundd files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/yiff(/.*)?, /etc/nas(/.*)?
+
+.EX
+.PP
+.B soundd_exec_t 
+.EE
+
+- Set files with the soundd_exec_t type, if you want to transition an executable to the soundd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/gpe-soundserver, /usr/sbin/yiff, /usr/bin/nasd
+
+.EX
+.PP
+.B soundd_initrc_exec_t 
+.EE
+
+- Set files with the soundd_initrc_exec_t type, if you want to transition an executable to the soundd_initrc_t domain.
+
+
+.EX
+.PP
+.B soundd_state_t 
+.EE
+
+- Set files with the soundd_state_t type, if you want to treat the files as soundd state data.
+
+
+.EX
+.PP
+.B soundd_tmp_t 
+.EE
+
+- Set files with the soundd_tmp_t type, if you want to store soundd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B soundd_tmpfs_t 
+.EE
+
+- Set files with the soundd_tmpfs_t type, if you want to store soundd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B soundd_var_run_t 
+.EE
+
+- Set files with the soundd_var_run_t type, if you want to store the soundd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/nasd(/.*)?, /var/run/yiff-[0-9]+\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
+.PP 
+The following port types are defined for soundd:
+
+.EX
+.TP 5
+.B soundd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
+.PP 
+The following process types are defined for soundd:
+
+.EX
+.B soundd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), soundd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/spamass_selinux.8 serefpolicy-3.7.19/man/man8/spamass_selinux.8
--- nsaserefpolicy/man/man8/spamass_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/spamass_selinux.8	2012-03-20 22:37:14.359458068 +0000
@@ -0,0 +1,106 @@
+.TH  "spamass_selinux"  "8"  "spamass" "dwalsh@redhat.com" "spamass SELinux Policy documentation"
+.SH "NAME"
+spamass_selinux \- Security Enhanced Linux Policy for the spamass processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  spamass policy is extremely flexible and has several booleans that allow you to manipulate the policy and run spamass with the tightest access possible.
+
+
+.PP
+If you want to allow user spamassassin clients to use the network, you must turn on the spamassassin_can_network boolean.
+
+.EX
+.B setsebool -P spamassassin_can_network 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux spamass policy is very flexible allowing users to setup their spamass processes in as secure a method as possible.
+.PP 
+The following file types are defined for spamass:
+
+
+.EX
+.PP
+.B spamass_milter_data_t 
+.EE
+
+- Set files with the spamass_milter_data_t type, if you want to treat the files as spamass milter content.
+
+.br
+.TP 5
+Paths: 
+/var/run/spamass-milter(/.*)?, /var/run/spamass-milter\.pid
+
+.EX
+.PP
+.B spamass_milter_exec_t 
+.EE
+
+- Set files with the spamass_milter_exec_t type, if you want to transition an executable to the spamass_milter_t domain.
+
+
+.EX
+.PP
+.B spamass_milter_state_t 
+.EE
+
+- Set files with the spamass_milter_state_t type, if you want to treat the files as spamass milter state data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux spamass policy is very flexible allowing users to setup their spamass processes in as secure a method as possible.
+.PP 
+The following process types are defined for spamass:
+
+.EX
+.B spamass_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), spamass(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/spamc_selinux.8 serefpolicy-3.7.19/man/man8/spamc_selinux.8
--- nsaserefpolicy/man/man8/spamc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/spamc_selinux.8	2012-03-20 22:37:14.359458068 +0000
@@ -0,0 +1,95 @@
+.TH  "spamc_selinux"  "8"  "spamc" "dwalsh@redhat.com" "spamc SELinux Policy documentation"
+.SH "NAME"
+spamc_selinux \- Security Enhanced Linux Policy for the spamc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux spamc policy is very flexible allowing users to setup their spamc processes in as secure a method as possible.
+.PP 
+The following file types are defined for spamc:
+
+
+.EX
+.PP
+.B spamc_exec_t 
+.EE
+
+- Set files with the spamc_exec_t type, if you want to transition an executable to the spamc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/spamc, /usr/bin/razor.*, /usr/bin/sa-learn, /usr/bin/spamassassin
+
+.EX
+.PP
+.B spamc_home_t 
+.EE
+
+- Set files with the spamc_home_t type, if you want to store spamc files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.razor(/.*)?, /root/\.spamassassin(/.*)?
+
+.EX
+.PP
+.B spamc_tmp_t 
+.EE
+
+- Set files with the spamc_tmp_t type, if you want to store spamc temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux spamc policy is very flexible allowing users to setup their spamc processes in as secure a method as possible.
+.PP 
+The following process types are defined for spamc:
+
+.EX
+.B spamc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), spamc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/spamd_selinux.8 serefpolicy-3.7.19/man/man8/spamd_selinux.8
--- nsaserefpolicy/man/man8/spamd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/spamd_selinux.8	2012-03-20 22:37:14.359458068 +0000
@@ -0,0 +1,214 @@
+.TH  "spamd_selinux"  "8"  "spamd" "dwalsh@redhat.com" "spamd SELinux Policy documentation"
+.SH "NAME"
+spamd_selinux \- Security Enhanced Linux Policy for the spamd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  spamd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run spamd with the tightest access possible.
+
+
+.PP
+If you want to allow user spamassassin clients to use the network, you must turn on the spamassassin_can_network boolean.
+
+.EX
+.B setsebool -P spamassassin_can_network 1
+.EE
+
+.PP
+If you want to allow spamd to read/write user home directories, you must turn on the spamd_enable_home_dirs boolean.
+
+.EX
+.B setsebool -P spamd_enable_home_dirs 1
+.EE
+
+.PP
+If you want to allow http daemon to check spa, you must turn on the httpd_can_check_spam boolean.
+
+.EX
+.B setsebool -P httpd_can_check_spam 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
+.PP 
+The following file types are defined for spamd:
+
+
+.EX
+.PP
+.B spamd_compiled_t 
+.EE
+
+- Set files with the spamd_compiled_t type, if you want to treat the files as spamd compiled data.
+
+
+.EX
+.PP
+.B spamd_etc_t 
+.EE
+
+- Set files with the spamd_etc_t type, if you want to store spamd files in the /etc directories.
+
+
+.EX
+.PP
+.B spamd_exec_t 
+.EE
+
+- Set files with the spamd_exec_t type, if you want to transition an executable to the spamd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/spamd, /usr/bin/mimedefang-multiplexor, /usr/bin/spamd, /usr/bin/mimedefang
+
+.EX
+.PP
+.B spamd_initrc_exec_t 
+.EE
+
+- Set files with the spamd_initrc_exec_t type, if you want to transition an executable to the spamd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/spamassassin, /etc/rc\.d/init\.d/spamd, /etc/rc\.d/init\.d/mimedefang.*
+
+.EX
+.PP
+.B spamd_log_t 
+.EE
+
+- Set files with the spamd_log_t type, if you want to treat the data as spamd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/razor-agent\.log, /var/log/spamd\.log, /var/log/mimedefang
+
+.EX
+.PP
+.B spamd_spool_t 
+.EE
+
+- Set files with the spamd_spool_t type, if you want to store the spamd files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/spamd(/.*)?, /var/spool/spamassassin(/.*)?
+
+.EX
+.PP
+.B spamd_tmp_t 
+.EE
+
+- Set files with the spamd_tmp_t type, if you want to store spamd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B spamd_var_lib_t 
+.EE
+
+- Set files with the spamd_var_lib_t type, if you want to store the spamd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/spamassassin(/.*)?, /var/lib/razor(/.*)?
+
+.EX
+.PP
+.B spamd_var_run_t 
+.EE
+
+- Set files with the spamd_var_run_t type, if you want to store the spamd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/spamassassin(/.*)?, /var/spool/MIMEDefang(/.*)?, /var/spool/MD-Quarantine(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
+.PP 
+The following port types are defined for spamd:
+
+.EX
+.TP 5
+.B spamd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
+.PP 
+The following process types are defined for spamd:
+
+.EX
+.B spamc_t, spamd_t, spamass_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), spamd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/squid_selinux.8 serefpolicy-3.7.19/man/man8/squid_selinux.8
--- nsaserefpolicy/man/man8/squid_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/squid_selinux.8	2012-03-20 22:37:14.359458068 +0000
@@ -0,0 +1,177 @@
+.TH  "squid_selinux"  "8"  "squid" "dwalsh@redhat.com" "squid SELinux Policy documentation"
+.SH "NAME"
+squid_selinux \- Security Enhanced Linux Policy for the squid processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B squid
+(Squid caching http proxy server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  squid policy is extremely flexible and has several booleans that allow you to manipulate the policy and run squid with the tightest access possible.
+
+
+.PP
+If you want to allow squid to run as a transparent proxy (TPROXY, you must turn on the squid_use_tproxy boolean.
+
+.EX
+.B setsebool -P squid_use_tproxy 1
+.EE
+
+.PP
+If you want to allow squid to connect to all ports, not just HTTP, FTP, and Gopher ports, you must turn on the squid_connect_any boolean.
+
+.EX
+.B setsebool -P squid_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
+.PP 
+The following file types are defined for squid:
+
+
+.EX
+.PP
+.B squid_cache_t 
+.EE
+
+- Set files with the squid_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/squid(/.*)?, /var/spool/squid(/.*)?, /var/squidGuard(/.*)?
+
+.EX
+.PP
+.B squid_conf_t 
+.EE
+
+- Set files with the squid_conf_t type, if you want to treat the files as squid configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/squid(/.*)?, /usr/share/squid(/.*)?
+
+.EX
+.PP
+.B squid_exec_t 
+.EE
+
+- Set files with the squid_exec_t type, if you want to transition an executable to the squid_t domain.
+
+
+.EX
+.PP
+.B squid_initrc_exec_t 
+.EE
+
+- Set files with the squid_initrc_exec_t type, if you want to transition an executable to the squid_initrc_t domain.
+
+
+.EX
+.PP
+.B squid_log_t 
+.EE
+
+- Set files with the squid_log_t type, if you want to treat the data as squid log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/squid(/.*)?, /var/log/squidGuard(/.*)?
+
+.EX
+.PP
+.B squid_var_run_t 
+.EE
+
+- Set files with the squid_var_run_t type, if you want to store the squid files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
+.PP 
+The following port types are defined for squid:
+
+.EX
+.TP 5
+.B squid_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
+.PP 
+The following process types are defined for squid:
+
+.EX
+.B squid_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), squid(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/srvsvcd_selinux.8 serefpolicy-3.7.19/man/man8/srvsvcd_selinux.8
--- nsaserefpolicy/man/man8/srvsvcd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/srvsvcd_selinux.8	2012-03-20 22:37:14.359458068 +0000
@@ -0,0 +1,95 @@
+.TH  "srvsvcd_selinux"  "8"  "srvsvcd" "dwalsh@redhat.com" "srvsvcd SELinux Policy documentation"
+.SH "NAME"
+srvsvcd_selinux \- Security Enhanced Linux Policy for the srvsvcd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux srvsvcd policy is very flexible allowing users to setup their srvsvcd processes in as secure a method as possible.
+.PP 
+The following file types are defined for srvsvcd:
+
+
+.EX
+.PP
+.B srvsvcd_exec_t 
+.EE
+
+- Set files with the srvsvcd_exec_t type, if you want to transition an executable to the srvsvcd_t domain.
+
+
+.EX
+.PP
+.B srvsvcd_var_lib_t 
+.EE
+
+- Set files with the srvsvcd_var_lib_t type, if you want to store the srvsvcd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B srvsvcd_var_run_t 
+.EE
+
+- Set files with the srvsvcd_var_run_t type, if you want to store the srvsvcd files under the /run directory.
+
+
+.EX
+.PP
+.B srvsvcd_var_socket_t 
+.EE
+
+- Set files with the srvsvcd_var_socket_t type, if you want to treat the files as srvsvcd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux srvsvcd policy is very flexible allowing users to setup their srvsvcd processes in as secure a method as possible.
+.PP 
+The following process types are defined for srvsvcd:
+
+.EX
+.B srvsvcd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), srvsvcd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sshd_selinux.8 serefpolicy-3.7.19/man/man8/sshd_selinux.8
--- nsaserefpolicy/man/man8/sshd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sshd_selinux.8	2012-03-20 22:37:14.359458068 +0000
@@ -0,0 +1,237 @@
+.TH  "sshd_selinux"  "8"  "sshd" "dwalsh@redhat.com" "sshd SELinux Policy documentation"
+.SH "NAME"
+sshd_selinux \- Security Enhanced Linux Policy for the sshd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sshd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sshd with the tightest access possible.
+
+
+.PP
+If you want to allow ssh with chroot env to read and write files in the user home directorie, you must turn on the ssh_chroot_rw_homedirs boolean.
+
+.EX
+.B setsebool -P ssh_chroot_rw_homedirs 1
+.EE
+
+.PP
+If you want to allow ssh logins as sysadm_r:sysadm_, you must turn on the ssh_sysadm_login boolean.
+
+.EX
+.B setsebool -P ssh_sysadm_login 1
+.EE
+
+.PP
+If you want to allow host key based authenticatio, you must turn on the allow_ssh_keysign boolean.
+
+.EX
+.B setsebool -P allow_ssh_keysign 1
+.EE
+
+.PP
+If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
+
+.EX
+.B setsebool -P fenced_can_ssh 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
+.PP 
+The following file types are defined for sshd:
+
+
+.EX
+.PP
+.B ssh_agent_exec_t 
+.EE
+
+- Set files with the ssh_agent_exec_t type, if you want to transition an executable to the ssh_agent_t domain.
+
+
+.EX
+.PP
+.B ssh_agent_tmp_t 
+.EE
+
+- Set files with the ssh_agent_tmp_t type, if you want to store ssh agent temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ssh_exec_t 
+.EE
+
+- Set files with the ssh_exec_t type, if you want to transition an executable to the ssh_t domain.
+
+
+.EX
+.PP
+.B ssh_home_t 
+.EE
+
+- Set files with the ssh_home_t type, if you want to store ssh files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/gitolite/\.ssh(/.*)?, /root/\.shosts, /var/lib/amanda/\.ssh(/.*)?, /root/\.ssh(/.*)?
+
+.EX
+.PP
+.B ssh_keygen_exec_t 
+.EE
+
+- Set files with the ssh_keygen_exec_t type, if you want to transition an executable to the ssh_keygen_t domain.
+
+
+.EX
+.PP
+.B ssh_keysign_exec_t 
+.EE
+
+- Set files with the ssh_keysign_exec_t type, if you want to transition an executable to the ssh_keysign_t domain.
+
+
+.EX
+.PP
+.B ssh_tmpfs_t 
+.EE
+
+- Set files with the ssh_tmpfs_t type, if you want to store ssh files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sshd_exec_t 
+.EE
+
+- Set files with the sshd_exec_t type, if you want to transition an executable to the sshd_t domain.
+
+
+.EX
+.PP
+.B sshd_initrc_exec_t 
+.EE
+
+- Set files with the sshd_initrc_exec_t type, if you want to transition an executable to the sshd_initrc_t domain.
+
+
+.EX
+.PP
+.B sshd_key_t 
+.EE
+
+- Set files with the sshd_key_t type, if you want to treat the files as sshd key data.
+
+.br
+.TP 5
+Paths: 
+/etc/ssh/ssh_host_rsa_key, /etc/ssh/ssh_host_rsa_key.pub, /etc/ssh/ssh_host_dsa_key.pub, /etc/ssh/ssh_host_key, /etc/ssh/ssh_host_dsa_key, /etc/ssh/ssh_host_key.pub, /etc/ssh/primes
+
+.EX
+.PP
+.B sshd_keytab_t 
+.EE
+
+- Set files with the sshd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B sshd_tmpfs_t 
+.EE
+
+- Set files with the sshd_tmpfs_t type, if you want to store sshd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sshd_var_run_t 
+.EE
+
+- Set files with the sshd_var_run_t type, if you want to store the sshd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
+.PP 
+The following port types are defined for sshd:
+
+.EX
+.TP 5
+.B ssh_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
+.PP 
+The following process types are defined for sshd:
+
+.EX
+.B ssh_keysign_t, ssh_keygen_t, ssh_t, sshd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sshd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ssh_selinux.8 serefpolicy-3.7.19/man/man8/ssh_selinux.8
--- nsaserefpolicy/man/man8/ssh_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ssh_selinux.8	2012-03-20 22:37:14.359458068 +0000
@@ -0,0 +1,243 @@
+.TH  "ssh_selinux"  "8"  "ssh" "dwalsh@redhat.com" "ssh SELinux Policy documentation"
+.SH "NAME"
+ssh_selinux \- Security Enhanced Linux Policy for the ssh processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ssh
+(Secure shell client and server policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  ssh policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ssh with the tightest access possible.
+
+
+.PP
+If you want to allow ssh with chroot env to read and write files in the user home directorie, you must turn on the ssh_chroot_rw_homedirs boolean.
+
+.EX
+.B setsebool -P ssh_chroot_rw_homedirs 1
+.EE
+
+.PP
+If you want to allow ssh logins as sysadm_r:sysadm_, you must turn on the ssh_sysadm_login boolean.
+
+.EX
+.B setsebool -P ssh_sysadm_login 1
+.EE
+
+.PP
+If you want to allow host key based authenticatio, you must turn on the allow_ssh_keysign boolean.
+
+.EX
+.B setsebool -P allow_ssh_keysign 1
+.EE
+
+.PP
+If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
+
+.EX
+.B setsebool -P fenced_can_ssh 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
+.PP 
+The following file types are defined for ssh:
+
+
+.EX
+.PP
+.B ssh_agent_exec_t 
+.EE
+
+- Set files with the ssh_agent_exec_t type, if you want to transition an executable to the ssh_agent_t domain.
+
+
+.EX
+.PP
+.B ssh_agent_tmp_t 
+.EE
+
+- Set files with the ssh_agent_tmp_t type, if you want to store ssh agent temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ssh_exec_t 
+.EE
+
+- Set files with the ssh_exec_t type, if you want to transition an executable to the ssh_t domain.
+
+
+.EX
+.PP
+.B ssh_home_t 
+.EE
+
+- Set files with the ssh_home_t type, if you want to store ssh files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/gitolite/\.ssh(/.*)?, /root/\.shosts, /var/lib/amanda/\.ssh(/.*)?, /root/\.ssh(/.*)?
+
+.EX
+.PP
+.B ssh_keygen_exec_t 
+.EE
+
+- Set files with the ssh_keygen_exec_t type, if you want to transition an executable to the ssh_keygen_t domain.
+
+
+.EX
+.PP
+.B ssh_keysign_exec_t 
+.EE
+
+- Set files with the ssh_keysign_exec_t type, if you want to transition an executable to the ssh_keysign_t domain.
+
+
+.EX
+.PP
+.B ssh_tmpfs_t 
+.EE
+
+- Set files with the ssh_tmpfs_t type, if you want to store ssh files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sshd_exec_t 
+.EE
+
+- Set files with the sshd_exec_t type, if you want to transition an executable to the sshd_t domain.
+
+
+.EX
+.PP
+.B sshd_initrc_exec_t 
+.EE
+
+- Set files with the sshd_initrc_exec_t type, if you want to transition an executable to the sshd_initrc_t domain.
+
+
+.EX
+.PP
+.B sshd_key_t 
+.EE
+
+- Set files with the sshd_key_t type, if you want to treat the files as sshd key data.
+
+.br
+.TP 5
+Paths: 
+/etc/ssh/ssh_host_rsa_key, /etc/ssh/ssh_host_rsa_key.pub, /etc/ssh/ssh_host_dsa_key.pub, /etc/ssh/ssh_host_key, /etc/ssh/ssh_host_dsa_key, /etc/ssh/ssh_host_key.pub, /etc/ssh/primes
+
+.EX
+.PP
+.B sshd_keytab_t 
+.EE
+
+- Set files with the sshd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B sshd_tmpfs_t 
+.EE
+
+- Set files with the sshd_tmpfs_t type, if you want to store sshd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sshd_var_run_t 
+.EE
+
+- Set files with the sshd_var_run_t type, if you want to store the sshd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
+.PP 
+The following port types are defined for ssh:
+
+.EX
+.TP 5
+.B ssh_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
+.PP 
+The following process types are defined for ssh:
+
+.EX
+.B ssh_keysign_t, ssh_keygen_t, ssh_t, sshd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ssh(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sssd_selinux.8 serefpolicy-3.7.19/man/man8/sssd_selinux.8
--- nsaserefpolicy/man/man8/sssd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sssd_selinux.8	2012-03-20 22:37:14.359458068 +0000
@@ -0,0 +1,117 @@
+.TH  "sssd_selinux"  "8"  "sssd" "dwalsh@redhat.com" "sssd SELinux Policy documentation"
+.SH "NAME"
+sssd_selinux \- Security Enhanced Linux Policy for the sssd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sssd
+(System Security Services Daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sssd policy is very flexible allowing users to setup their sssd processes in as secure a method as possible.
+.PP 
+The following file types are defined for sssd:
+
+
+.EX
+.PP
+.B sssd_exec_t 
+.EE
+
+- Set files with the sssd_exec_t type, if you want to transition an executable to the sssd_t domain.
+
+
+.EX
+.PP
+.B sssd_initrc_exec_t 
+.EE
+
+- Set files with the sssd_initrc_exec_t type, if you want to transition an executable to the sssd_initrc_t domain.
+
+
+.EX
+.PP
+.B sssd_public_t 
+.EE
+
+- Set files with the sssd_public_t type, if you want to treat the files as sssd public data.
+
+
+.EX
+.PP
+.B sssd_var_lib_t 
+.EE
+
+- Set files with the sssd_var_lib_t type, if you want to store the sssd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B sssd_var_log_t 
+.EE
+
+- Set files with the sssd_var_log_t type, if you want to treat the data as sssd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B sssd_var_run_t 
+.EE
+
+- Set files with the sssd_var_run_t type, if you want to store the sssd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sssd policy is very flexible allowing users to setup their sssd processes in as secure a method as possible.
+.PP 
+The following process types are defined for sssd:
+
+.EX
+.B sssd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sssd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/staff_selinux.8 serefpolicy-3.7.19/man/man8/staff_selinux.8
--- nsaserefpolicy/man/man8/staff_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/staff_selinux.8	2012-04-24 11:06:45.876312378 +0000
@@ -0,0 +1,205 @@
+.TH  "staff_selinux"  "8"  "staff" "mgrepl@redhat.com" "staff SELinux Policy documentation"
+.SH "NAME"
+staff_u \- \fBAdministrator's unprivileged user\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBstaff_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBstaff_r\fP.  The
+default role has a default type, \fBstaff_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B staff_u:staff_r:staff_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the staff_u user, you would execute:
+
+.B semanage login -m -s staff_u __default__
+
+
+.SH USER DESCRIPTION
+
+The SELinux user staff_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux user staff can execute sudo. 
+
+You can set up sudo to allow staff to transition to an administrative domain:
+
+Add one or more of the following record to sudoers using visudo.
+
+
+USERNAME ALL=(ALL) ROLE=logadm_r TYPE=logadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:logadm_r:logadm_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=sysadm_r TYPE=sysadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:sysadm_r:sysadm_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=unconfined_r TYPE=unconfined_t COMMAND
+.br
+sudo will run COMMAND as staff_u:unconfined_r:unconfined_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=webadm_r TYPE=webadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:webadm_r:webadm_t:LEVEL
+
+You might also need to add one or more of these new roles to your SELinux user record.
+
+List the SELinux roles your SELinux user can reach by executing:
+
+.B $ semanage user -l |grep selinux_name
+
+Modify the roles list and add staff_r to this list.
+
+.B $ semanage user -m -R 'staff_r logadm_r sysadm_r unconfined_r webadm_r' staff_u 
+
+For more details you can see semanage man page.
+
+
+.SH X WINDOWS LOGIN
+
+The SELinux user staff_u is able to X Windows login.
+
+.SH NETWORK
+
+.TP
+The SELinux user staff_u is able to listen on the following tcp ports.
+
+.B xserver_port_t: 6000-6150
+
+.TP
+The SELinux user staff_u is able to listen on the following udp ports.
+
+.B all ports with out defined types
+
+.TP
+The SELinux user staff_u is able to connect to the following tcp ports.
+
+.B all ports
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  staff_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run staff_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user staff_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when staff_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny staff_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow staff_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user staff_t can execute without transitioning:
+
+.B sesearch -A -s staff_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow staff_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user staff_t can execute and transition:
+
+.B $ sesearch -A -s staff_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/stunnel_selinux.8 serefpolicy-3.7.19/man/man8/stunnel_selinux.8
--- nsaserefpolicy/man/man8/stunnel_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/stunnel_selinux.8	2012-03-20 22:37:14.359458068 +0000
@@ -0,0 +1,131 @@
+.TH  "stunnel_selinux"  "8"  "stunnel" "dwalsh@redhat.com" "stunnel SELinux Policy documentation"
+.SH "NAME"
+stunnel_selinux \- Security Enhanced Linux Policy for the stunnel processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B stunnel
+(SSL Tunneling Proxy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
+.PP 
+The following file types are defined for stunnel:
+
+
+.EX
+.PP
+.B stunnel_etc_t 
+.EE
+
+- Set files with the stunnel_etc_t type, if you want to store stunnel files in the /etc directories.
+
+
+.EX
+.PP
+.B stunnel_exec_t 
+.EE
+
+- Set files with the stunnel_exec_t type, if you want to transition an executable to the stunnel_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/stunnel, /usr/bin/stunnel
+
+.EX
+.PP
+.B stunnel_tmp_t 
+.EE
+
+- Set files with the stunnel_tmp_t type, if you want to store stunnel temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B stunnel_var_run_t 
+.EE
+
+- Set files with the stunnel_var_run_t type, if you want to store the stunnel files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
+.PP 
+The following port types are defined for stunnel:
+
+.EX
+.TP 5
+.B stunnel_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
+.PP 
+The following process types are defined for stunnel:
+
+.EX
+.B stunnel_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), stunnel(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sulogin_selinux.8 serefpolicy-3.7.19/man/man8/sulogin_selinux.8
--- nsaserefpolicy/man/man8/sulogin_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sulogin_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,75 @@
+.TH  "sulogin_selinux"  "8"  "sulogin" "dwalsh@redhat.com" "sulogin SELinux Policy documentation"
+.SH "NAME"
+sulogin_selinux \- Security Enhanced Linux Policy for the sulogin processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sulogin policy is very flexible allowing users to setup their sulogin processes in as secure a method as possible.
+.PP 
+The following file types are defined for sulogin:
+
+
+.EX
+.PP
+.B sulogin_exec_t 
+.EE
+
+- Set files with the sulogin_exec_t type, if you want to transition an executable to the sulogin_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/sulogin, /sbin/sushell
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sulogin policy is very flexible allowing users to setup their sulogin processes in as secure a method as possible.
+.PP 
+The following process types are defined for sulogin:
+
+.EX
+.B sulogin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sulogin(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/svc_selinux.8 serefpolicy-3.7.19/man/man8/svc_selinux.8
--- nsaserefpolicy/man/man8/svc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/svc_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,127 @@
+.TH  "svc_selinux"  "8"  "svc" "dwalsh@redhat.com" "svc SELinux Policy documentation"
+.SH "NAME"
+svc_selinux \- Security Enhanced Linux Policy for the svc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux svc policy is very flexible allowing users to setup their svc processes in as secure a method as possible.
+.PP 
+The following file types are defined for svc:
+
+
+.EX
+.PP
+.B svc_conf_t 
+.EE
+
+- Set files with the svc_conf_t type, if you want to treat the files as svc configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/var/dnscache/env(/.*)?, /var/tinydns/env(/.*)?, /var/axfrdns/env(/.*)?, /var/service/.*/env(/.*)?
+
+.EX
+.PP
+.B svc_log_t 
+.EE
+
+- Set files with the svc_log_t type, if you want to treat the data as svc log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B svc_multilog_exec_t 
+.EE
+
+- Set files with the svc_multilog_exec_t type, if you want to transition an executable to the svc_multilog_t domain.
+
+
+.EX
+.PP
+.B svc_run_exec_t 
+.EE
+
+- Set files with the svc_run_exec_t type, if you want to transition an executable to the svc_run_t domain.
+
+.br
+.TP 5
+Paths: 
+/var/tinydns/run, /var/qmail/supervise/.*/run, /usr/bin/fghack, /var/axfrdns/log/run, /var/tinydns/log/run, /var/service/.*/log/run, /var/axfrdns/run, /usr/bin/setuidgid, /var/qmail/supervise/.*/log/run, /usr/bin/envuidgid, /usr/bin/envdir, /var/dnscache/run, /usr/bin/softlimit, /var/service/.*/run.*, /usr/bin/pgrphack, /var/dnscache/log/run, /usr/bin/setlock
+
+.EX
+.PP
+.B svc_start_exec_t 
+.EE
+
+- Set files with the svc_start_exec_t type, if you want to transition an executable to the svc_start_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/svok, /usr/bin/svscan, /usr/bin/svc, /usr/bin/svscanboot, /usr/bin/supervise
+
+.EX
+.PP
+.B svc_svc_t 
+.EE
+
+- Set files with the svc_svc_t type, if you want to treat the files as svc svc data.
+
+.br
+.TP 5
+Paths: 
+/service, /var/tinydns(/.*)?, /var/qmail/supervise(/.*)?, /service/.*, /var/service/.*, /var/dnscache(/.*)?, /var/axfrdns(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux svc policy is very flexible allowing users to setup their svc processes in as secure a method as possible.
+.PP 
+The following process types are defined for svc:
+
+.EX
+.B svc_multilog_t, svc_start_t, svc_run_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), svc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/swat_selinux.8 serefpolicy-3.7.19/man/man8/swat_selinux.8
--- nsaserefpolicy/man/man8/swat_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/swat_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,113 @@
+.TH  "swat_selinux"  "8"  "swat" "dwalsh@redhat.com" "swat SELinux Policy documentation"
+.SH "NAME"
+swat_selinux \- Security Enhanced Linux Policy for the swat processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
+.PP 
+The following file types are defined for swat:
+
+
+.EX
+.PP
+.B swat_exec_t 
+.EE
+
+- Set files with the swat_exec_t type, if you want to transition an executable to the swat_t domain.
+
+
+.EX
+.PP
+.B swat_tmp_t 
+.EE
+
+- Set files with the swat_tmp_t type, if you want to store swat temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B swat_var_run_t 
+.EE
+
+- Set files with the swat_var_run_t type, if you want to store the swat files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
+.PP 
+The following port types are defined for swat:
+
+.EX
+.TP 5
+.B swat_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
+.PP 
+The following process types are defined for swat:
+
+.EX
+.B swat_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), swat(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sysadm_selinux.8 serefpolicy-3.7.19/man/man8/sysadm_selinux.8
--- nsaserefpolicy/man/man8/sysadm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sysadm_selinux.8	2012-04-24 11:06:45.876312378 +0000
@@ -0,0 +1,199 @@
+.TH  "sysadm_selinux"  "8"  "sysadm" "mgrepl@redhat.com" "sysadm SELinux Policy documentation"
+.SH "NAME"
+sysadm_u \- \fBGeneral system administration role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBsysadm_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBsysadm_r\fP.  The
+default role has a default type, \fBsysadm_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B sysadm_u:sysadm_r:sysadm_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the sysadm_u user, you would execute:
+
+.B semanage login -m -s sysadm_u __default__
+
+
+.SH USER DESCRIPTION
+
+The SELinux user sysadm_u is an admin user. It means that a mapped Linux user to this SELinux user is intended for administrative actions. Usually this is assigned to a root Linux user.  
+
+.SH SUDO
+
+The SELinux user sysadm can execute sudo. 
+
+You can set up sudo to allow sysadm to transition to an administrative domain:
+
+Add one or more of the following record to sudoers using visudo.
+
+
+USERNAME ALL=(ALL) ROLE=staff_r TYPE=staff_t COMMAND
+.br
+sudo will run COMMAND as sysadm_u:staff_r:staff_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=user_r TYPE=user_t COMMAND
+.br
+sudo will run COMMAND as sysadm_u:user_r:user_t:LEVEL
+
+You might also need to add one or more of these new roles to your SELinux user record.
+
+List the SELinux roles your SELinux user can reach by executing:
+
+.B $ semanage user -l |grep selinux_name
+
+Modify the roles list and add sysadm_r to this list.
+
+.B $ semanage user -m -R 'sysadm_r staff_r user_r' sysadm_u 
+
+For more details you can see semanage man page.
+
+
+.SH X WINDOWS LOGIN
+
+The SELinux user sysadm_u is able to X Windows login.
+
+.SH NETWORK
+
+.TP
+The SELinux user sysadm_u is able to listen on the following tcp ports.
+
+.B all ports with out defined types
+
+.TP
+The SELinux user sysadm_u is able to listen on the following udp ports.
+
+.B ntp_port_t: 123
+
+.B all ports with out defined types
+
+.TP
+The SELinux user sysadm_u is able to connect to the following tcp ports.
+
+.B all ports
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sysadm_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sysadm_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user sysadm_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when sysadm_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny sysadm_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow sysadm_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user sysadm_t can execute without transitioning:
+
+.B sesearch -A -s sysadm_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow sysadm_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user sysadm_t can execute and transition:
+
+.B $ sesearch -A -s sysadm_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/syslogd_selinux.8 serefpolicy-3.7.19/man/man8/syslogd_selinux.8
--- nsaserefpolicy/man/man8/syslogd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/syslogd_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,168 @@
+.TH  "syslogd_selinux"  "8"  "syslogd" "dwalsh@redhat.com" "syslogd SELinux Policy documentation"
+.SH "NAME"
+syslogd_selinux \- Security Enhanced Linux Policy for the syslogd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  syslogd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run syslogd with the tightest access possible.
+
+
+.PP
+If you want to allow syslogd daemon to send mai, you must turn on the logging_syslogd_can_sendmail boolean.
+
+.EX
+.B setsebool -P logging_syslogd_can_sendmail 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for syslogd:
+
+
+.EX
+.PP
+.B syslog_conf_t 
+.EE
+
+- Set files with the syslog_conf_t type, if you want to treat the files as syslog configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/rsyslog.conf, /etc/syslog.conf
+
+.EX
+.PP
+.B syslogd_exec_t 
+.EE
+
+- Set files with the syslogd_exec_t type, if you want to transition an executable to the syslogd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/rsyslogd, /usr/sbin/metalog, /usr/sbin/syslogd, /sbin/rsyslogd, /sbin/syslogd, /sbin/syslog-ng, /usr/sbin/syslog-ng, /sbin/minilogd
+
+.EX
+.PP
+.B syslogd_initrc_exec_t 
+.EE
+
+- Set files with the syslogd_initrc_exec_t type, if you want to transition an executable to the syslogd_initrc_t domain.
+
+
+.EX
+.PP
+.B syslogd_tmp_t 
+.EE
+
+- Set files with the syslogd_tmp_t type, if you want to store syslogd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B syslogd_var_lib_t 
+.EE
+
+- Set files with the syslogd_var_lib_t type, if you want to store the syslogd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/syslog-ng.persist, /var/lib/syslog-ng(/.*)?
+
+.EX
+.PP
+.B syslogd_var_run_t 
+.EE
+
+- Set files with the syslogd_var_run_t type, if you want to store the syslogd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/syslog-ng(/.*)?, /var/run/syslog-ng(/.*)?, /var/run/metalog\.pid, /var/run/syslogd\.pid, /var/run/syslog-ng.ctl
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
+.PP 
+The following port types are defined for syslogd:
+
+.EX
+.TP 5
+.B syslogd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for syslogd:
+
+.EX
+.B syslogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), syslogd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/sysstat_selinux.8 serefpolicy-3.7.19/man/man8/sysstat_selinux.8
--- nsaserefpolicy/man/man8/sysstat_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/sysstat_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,93 @@
+.TH  "sysstat_selinux"  "8"  "sysstat" "dwalsh@redhat.com" "sysstat SELinux Policy documentation"
+.SH "NAME"
+sysstat_selinux \- Security Enhanced Linux Policy for the sysstat processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sysstat
+(Policy for sysstat. Reports on various system states)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sysstat policy is very flexible allowing users to setup their sysstat processes in as secure a method as possible.
+.PP 
+The following file types are defined for sysstat:
+
+
+.EX
+.PP
+.B sysstat_exec_t 
+.EE
+
+- Set files with the sysstat_exec_t type, if you want to transition an executable to the sysstat_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib(64)?/sa/sa.*, /usr/lib(64)?/sysstat/sa.*, /usr/lib(64)?/atsar/atsa.*
+
+.EX
+.PP
+.B sysstat_log_t 
+.EE
+
+- Set files with the sysstat_log_t type, if you want to treat the data as sysstat log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/sysstat(/.*)?, /var/log/sa(/.*)?, /var/log/atsar(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sysstat policy is very flexible allowing users to setup their sysstat processes in as secure a method as possible.
+.PP 
+The following process types are defined for sysstat:
+
+.EX
+.B sysstat_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sysstat(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/tcpd_selinux.8 serefpolicy-3.7.19/man/man8/tcpd_selinux.8
--- nsaserefpolicy/man/man8/tcpd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/tcpd_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,114 @@
+.TH  "tcpd_selinux"  "8"  "tcpd" "dwalsh@redhat.com" "tcpd SELinux Policy documentation"
+.SH "NAME"
+tcpd_selinux \- Security Enhanced Linux Policy for the tcpd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tcpd
+(Policy for TCP daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  tcpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run tcpd with the tightest access possible.
+
+
+.PP
+If you want to allow the Telepathy connection managers to connect to any generic TCP port, you must turn on the telepathy_tcp_connect_generic_network_ports boolean.
+
+.EX
+.B setsebool -P telepathy_tcp_connect_generic_network_ports 1
+.EE
+
+.PP
+If you want to allow all daemons to use tcp wrappers, you must turn on the allow_daemons_use_tcp_wrapper boolean.
+
+.EX
+.B setsebool -P allow_daemons_use_tcp_wrapper 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tcpd policy is very flexible allowing users to setup their tcpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for tcpd:
+
+
+.EX
+.PP
+.B tcpd_exec_t 
+.EE
+
+- Set files with the tcpd_exec_t type, if you want to transition an executable to the tcpd_t domain.
+
+
+.EX
+.PP
+.B tcpd_tmp_t 
+.EE
+
+- Set files with the tcpd_tmp_t type, if you want to store tcpd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tcpd policy is very flexible allowing users to setup their tcpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for tcpd:
+
+.EX
+.B tcpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tcpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/telepathy_selinux.8 serefpolicy-3.7.19/man/man8/telepathy_selinux.8
--- nsaserefpolicy/man/man8/telepathy_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/telepathy_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,236 @@
+.TH  "telepathy_selinux"  "8"  "telepathy" "dwalsh@redhat.com" "telepathy SELinux Policy documentation"
+.SH "NAME"
+telepathy_selinux \- Security Enhanced Linux Policy for the telepathy processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B telepathy
+(Telepathy framework)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  telepathy policy is extremely flexible and has several booleans that allow you to manipulate the policy and run telepathy with the tightest access possible.
+
+
+.PP
+If you want to allow the Telepathy connection managers to connect to any generic TCP port, you must turn on the telepathy_tcp_connect_generic_network_ports boolean.
+
+.EX
+.B setsebool -P telepathy_tcp_connect_generic_network_ports 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux telepathy policy is very flexible allowing users to setup their telepathy processes in as secure a method as possible.
+.PP 
+The following file types are defined for telepathy:
+
+
+.EX
+.PP
+.B telepathy_gabble_cache_home_t 
+.EE
+
+- Set files with the telepathy_gabble_cache_home_t type, if you want to store telepathy gabble cache files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_gabble_exec_t 
+.EE
+
+- Set files with the telepathy_gabble_exec_t type, if you want to transition an executable to the telepathy_gabble_t domain.
+
+
+.EX
+.PP
+.B telepathy_gabble_tmp_t 
+.EE
+
+- Set files with the telepathy_gabble_tmp_t type, if you want to store telepathy gabble temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_idle_exec_t 
+.EE
+
+- Set files with the telepathy_idle_exec_t type, if you want to transition an executable to the telepathy_idle_t domain.
+
+
+.EX
+.PP
+.B telepathy_idle_tmp_t 
+.EE
+
+- Set files with the telepathy_idle_tmp_t type, if you want to store telepathy idle temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_mission_control_cache_home_t 
+.EE
+
+- Set files with the telepathy_mission_control_cache_home_t type, if you want to store telepathy mission control cache files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_mission_control_exec_t 
+.EE
+
+- Set files with the telepathy_mission_control_exec_t type, if you want to transition an executable to the telepathy_mission_control_t domain.
+
+
+.EX
+.PP
+.B telepathy_mission_control_home_t 
+.EE
+
+- Set files with the telepathy_mission_control_home_t type, if you want to store telepathy mission control files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_mission_control_tmp_t 
+.EE
+
+- Set files with the telepathy_mission_control_tmp_t type, if you want to store telepathy mission control temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_msn_exec_t 
+.EE
+
+- Set files with the telepathy_msn_exec_t type, if you want to transition an executable to the telepathy_msn_t domain.
+
+
+.EX
+.PP
+.B telepathy_msn_tmp_t 
+.EE
+
+- Set files with the telepathy_msn_tmp_t type, if you want to store telepathy msn temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_salut_exec_t 
+.EE
+
+- Set files with the telepathy_salut_exec_t type, if you want to transition an executable to the telepathy_salut_t domain.
+
+
+.EX
+.PP
+.B telepathy_salut_tmp_t 
+.EE
+
+- Set files with the telepathy_salut_tmp_t type, if you want to store telepathy salut temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_sofiasip_exec_t 
+.EE
+
+- Set files with the telepathy_sofiasip_exec_t type, if you want to transition an executable to the telepathy_sofiasip_t domain.
+
+
+.EX
+.PP
+.B telepathy_sofiasip_tmp_t 
+.EE
+
+- Set files with the telepathy_sofiasip_tmp_t type, if you want to store telepathy sofiasip temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_stream_engine_exec_t 
+.EE
+
+- Set files with the telepathy_stream_engine_exec_t type, if you want to transition an executable to the telepathy_stream_engine_t domain.
+
+
+.EX
+.PP
+.B telepathy_stream_engine_tmp_t 
+.EE
+
+- Set files with the telepathy_stream_engine_tmp_t type, if you want to store telepathy stream engine temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_sunshine_exec_t 
+.EE
+
+- Set files with the telepathy_sunshine_exec_t type, if you want to transition an executable to the telepathy_sunshine_t domain.
+
+
+.EX
+.PP
+.B telepathy_sunshine_tmp_t 
+.EE
+
+- Set files with the telepathy_sunshine_tmp_t type, if you want to store telepathy sunshine temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux telepathy policy is very flexible allowing users to setup their telepathy processes in as secure a method as possible.
+.PP 
+The following process types are defined for telepathy:
+
+.EX
+.B telepathy_gabble_t, telepathy_sofiasip_t, telepathy_idle_t, telepathy_mission_control_t, telepathy_salut_t, telepathy_sunshine_t, telepathy_stream_engine_t, telepathy_msn_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), telepathy(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/telnetd_selinux.8 serefpolicy-3.7.19/man/man8/telnetd_selinux.8
--- nsaserefpolicy/man/man8/telnetd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/telnetd_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,125 @@
+.TH  "telnetd_selinux"  "8"  "telnetd" "dwalsh@redhat.com" "telnetd SELinux Policy documentation"
+.SH "NAME"
+telnetd_selinux \- Security Enhanced Linux Policy for the telnetd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
+.PP 
+The following file types are defined for telnetd:
+
+
+.EX
+.PP
+.B telnetd_exec_t 
+.EE
+
+- Set files with the telnetd_exec_t type, if you want to transition an executable to the telnetd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/kerberos/sbin/telnetd, /usr/sbin/in\.telnetd
+
+.EX
+.PP
+.B telnetd_keytab_t 
+.EE
+
+- Set files with the telnetd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B telnetd_tmp_t 
+.EE
+
+- Set files with the telnetd_tmp_t type, if you want to store telnetd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telnetd_var_run_t 
+.EE
+
+- Set files with the telnetd_var_run_t type, if you want to store the telnetd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
+.PP 
+The following port types are defined for telnetd:
+
+.EX
+.TP 5
+.B telnetd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
+.PP 
+The following process types are defined for telnetd:
+
+.EX
+.B telnetd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), telnetd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/testapp_selinux.8 serefpolicy-3.7.19/man/man8/testapp_selinux.8
--- nsaserefpolicy/man/man8/testapp_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/testapp_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,79 @@
+.TH  "testapp_selinux"  "8"  "testapp" "dwalsh@redhat.com" "testapp SELinux Policy documentation"
+.SH "NAME"
+testapp_selinux \- Security Enhanced Linux Policy for the testapp processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux testapp policy is very flexible allowing users to setup their testapp processes in as secure a method as possible.
+.PP 
+The following file types are defined for testapp:
+
+
+.EX
+.PP
+.B testapp_exec_t 
+.EE
+
+- Set files with the testapp_exec_t type, if you want to transition an executable to the testapp_t domain.
+
+
+.EX
+.PP
+.B testapp_tmp_t 
+.EE
+
+- Set files with the testapp_tmp_t type, if you want to store testapp temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux testapp policy is very flexible allowing users to setup their testapp processes in as secure a method as possible.
+.PP 
+The following process types are defined for testapp:
+
+.EX
+.B testapp_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), testapp(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/tethereal_selinux.8 serefpolicy-3.7.19/man/man8/tethereal_selinux.8
--- nsaserefpolicy/man/man8/tethereal_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/tethereal_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,79 @@
+.TH  "tethereal_selinux"  "8"  "tethereal" "dwalsh@redhat.com" "tethereal SELinux Policy documentation"
+.SH "NAME"
+tethereal_selinux \- Security Enhanced Linux Policy for the tethereal processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tethereal policy is very flexible allowing users to setup their tethereal processes in as secure a method as possible.
+.PP 
+The following file types are defined for tethereal:
+
+
+.EX
+.PP
+.B tethereal_exec_t 
+.EE
+
+- Set files with the tethereal_exec_t type, if you want to transition an executable to the tethereal_t domain.
+
+
+.EX
+.PP
+.B tethereal_tmp_t 
+.EE
+
+- Set files with the tethereal_tmp_t type, if you want to store tethereal temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tethereal policy is very flexible allowing users to setup their tethereal processes in as secure a method as possible.
+.PP 
+The following process types are defined for tethereal:
+
+.EX
+.B tethereal_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tethereal(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/tftpd_selinux.8 serefpolicy-3.7.19/man/man8/tftpd_selinux.8
--- nsaserefpolicy/man/man8/tftpd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/tftpd_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,155 @@
+.TH  "tftpd_selinux"  "8"  "tftpd" "dwalsh@redhat.com" "tftpd SELinux Policy documentation"
+.SH "NAME"
+tftpd_selinux \- Security Enhanced Linux Policy for the tftpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow tftpd servers to read the /var/tftpd directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/tftpd(/.*)?"
+.br
+.B restorecon -F -R -v /var/tftpd
+.pp
+.TP
+Allow tftpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_tftpd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/tftpd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/tftpd/incoming
+
+
+.PP
+If you want to allow tftp to modify public files used for public file transfer services., you must turn on the tftp_anon_write boolean.
+
+.EX
+.B setsebool -P tftp_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for tftpd:
+
+
+.EX
+.PP
+.B tftpd_exec_t 
+.EE
+
+- Set files with the tftpd_exec_t type, if you want to transition an executable to the tftpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/in\.tftpd, /usr/sbin/atftpd
+
+.EX
+.PP
+.B tftpd_var_run_t 
+.EE
+
+- Set files with the tftpd_var_run_t type, if you want to store the tftpd files under the /run directory.
+
+
+.EX
+.PP
+.B tftpdir_rw_t 
+.EE
+
+- Set files with the tftpdir_rw_t type, if you want to treat the files as tftpdir read/write content.
+
+
+.EX
+.PP
+.B tftpdir_t 
+.EE
+
+- Set files with the tftpdir_t type, if you want to treat the files as tftpdir data.
+
+.br
+.TP 5
+Paths: 
+/tftpboot/.*, /tftpboot
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for tftpd:
+
+.EX
+.TP 5
+.B tftp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for tftpd:
+
+.EX
+.B tftpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tftpd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/tgtd_selinux.8 serefpolicy-3.7.19/man/man8/tgtd_selinux.8
--- nsaserefpolicy/man/man8/tgtd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/tgtd_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,117 @@
+.TH  "tgtd_selinux"  "8"  "tgtd" "dwalsh@redhat.com" "tgtd SELinux Policy documentation"
+.SH "NAME"
+tgtd_selinux \- Security Enhanced Linux Policy for the tgtd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tgtd
+(Linux Target Framework Daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tgtd policy is very flexible allowing users to setup their tgtd processes in as secure a method as possible.
+.PP 
+The following file types are defined for tgtd:
+
+
+.EX
+.PP
+.B tgtd_exec_t 
+.EE
+
+- Set files with the tgtd_exec_t type, if you want to transition an executable to the tgtd_t domain.
+
+
+.EX
+.PP
+.B tgtd_initrc_exec_t 
+.EE
+
+- Set files with the tgtd_initrc_exec_t type, if you want to transition an executable to the tgtd_initrc_t domain.
+
+
+.EX
+.PP
+.B tgtd_tmp_t 
+.EE
+
+- Set files with the tgtd_tmp_t type, if you want to store tgtd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B tgtd_tmpfs_t 
+.EE
+
+- Set files with the tgtd_tmpfs_t type, if you want to store tgtd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B tgtd_var_lib_t 
+.EE
+
+- Set files with the tgtd_var_lib_t type, if you want to store the tgtd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B tgtd_var_run_t 
+.EE
+
+- Set files with the tgtd_var_run_t type, if you want to store the tgtd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tgtd policy is very flexible allowing users to setup their tgtd processes in as secure a method as possible.
+.PP 
+The following process types are defined for tgtd:
+
+.EX
+.B tgtd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tgtd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/thin_selinux.8 serefpolicy-3.7.19/man/man8/thin_selinux.8
--- nsaserefpolicy/man/man8/thin_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/thin_selinux.8	2012-03-20 22:37:14.360458044 +0000
@@ -0,0 +1,79 @@
+.TH  "thin_selinux"  "8"  "thin" "dwalsh@redhat.com" "thin SELinux Policy documentation"
+.SH "NAME"
+thin_selinux \- Security Enhanced Linux Policy for the thin processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux thin policy is very flexible allowing users to setup their thin processes in as secure a method as possible.
+.PP 
+The following file types are defined for thin:
+
+
+.EX
+.PP
+.B thin_exec_t 
+.EE
+
+- Set files with the thin_exec_t type, if you want to transition an executable to the thin_t domain.
+
+
+.EX
+.PP
+.B thin_var_run_t 
+.EE
+
+- Set files with the thin_var_run_t type, if you want to store the thin files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux thin policy is very flexible allowing users to setup their thin processes in as secure a method as possible.
+.PP 
+The following process types are defined for thin:
+
+.EX
+.B thin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), thin(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/tmpreaper_selinux.8 serefpolicy-3.7.19/man/man8/tmpreaper_selinux.8
--- nsaserefpolicy/man/man8/tmpreaper_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/tmpreaper_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,81 @@
+.TH  "tmpreaper_selinux"  "8"  "tmpreaper" "dwalsh@redhat.com" "tmpreaper SELinux Policy documentation"
+.SH "NAME"
+tmpreaper_selinux \- Security Enhanced Linux Policy for the tmpreaper processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tmpreaper
+(Manage temporary directory sizes and file ages)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tmpreaper policy is very flexible allowing users to setup their tmpreaper processes in as secure a method as possible.
+.PP 
+The following file types are defined for tmpreaper:
+
+
+.EX
+.PP
+.B tmpreaper_exec_t 
+.EE
+
+- Set files with the tmpreaper_exec_t type, if you want to transition an executable to the tmpreaper_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/tmpreaper, /usr/sbin/tmpwatch
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tmpreaper policy is very flexible allowing users to setup their tmpreaper processes in as secure a method as possible.
+.PP 
+The following process types are defined for tmpreaper:
+
+.EX
+.B tmpreaper_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tmpreaper(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/tor_selinux.8 serefpolicy-3.7.19/man/man8/tor_selinux.8
--- nsaserefpolicy/man/man8/tor_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/tor_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,177 @@
+.TH  "tor_selinux"  "8"  "tor" "dwalsh@redhat.com" "tor SELinux Policy documentation"
+.SH "NAME"
+tor_selinux \- Security Enhanced Linux Policy for the tor processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tor
+(TOR, the onion router)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  tor policy is extremely flexible and has several booleans that allow you to manipulate the policy and run tor with the tightest access possible.
+
+
+.PP
+If you want to allow tor daemon to bind tcp sockets to all unreserved ports, you must turn on the tor_bind_all_unreserved_ports boolean.
+
+.EX
+.B setsebool -P tor_bind_all_unreserved_ports 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
+.PP 
+The following file types are defined for tor:
+
+
+.EX
+.PP
+.B tor_etc_t 
+.EE
+
+- Set files with the tor_etc_t type, if you want to store tor files in the /etc directories.
+
+
+.EX
+.PP
+.B tor_exec_t 
+.EE
+
+- Set files with the tor_exec_t type, if you want to transition an executable to the tor_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/tor, /usr/bin/tor
+
+.EX
+.PP
+.B tor_initrc_exec_t 
+.EE
+
+- Set files with the tor_initrc_exec_t type, if you want to transition an executable to the tor_initrc_t domain.
+
+
+.EX
+.PP
+.B tor_var_lib_t 
+.EE
+
+- Set files with the tor_var_lib_t type, if you want to store the tor files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/tor(/.*)?, /var/lib/tor-data(/.*)?
+
+.EX
+.PP
+.B tor_var_log_t 
+.EE
+
+- Set files with the tor_var_log_t type, if you want to treat the data as tor var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B tor_var_run_t 
+.EE
+
+- Set files with the tor_var_run_t type, if you want to store the tor files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
+.PP 
+The following port types are defined for tor:
+
+.EX
+.TP 5
+.B tor_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B tor_socks_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
+.PP 
+The following process types are defined for tor:
+
+.EX
+.B tor_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tor(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/traceroute_selinux.8 serefpolicy-3.7.19/man/man8/traceroute_selinux.8
--- nsaserefpolicy/man/man8/traceroute_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/traceroute_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,101 @@
+.TH  "traceroute_selinux"  "8"  "traceroute" "dwalsh@redhat.com" "traceroute SELinux Policy documentation"
+.SH "NAME"
+traceroute_selinux \- Security Enhanced Linux Policy for the traceroute processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
+.PP 
+The following file types are defined for traceroute:
+
+
+.EX
+.PP
+.B traceroute_exec_t 
+.EE
+
+- Set files with the traceroute_exec_t type, if you want to transition an executable to the traceroute_t domain.
+
+.br
+.TP 5
+Paths: 
+/bin/tracepath.*, /usr/bin/traceroute.*, /usr/bin/nmap, /usr/bin/lft, /bin/traceroute.*, /usr/sbin/traceroute.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
+.PP 
+The following port types are defined for traceroute:
+
+.EX
+.TP 5
+.B traceroute_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
+.PP 
+The following process types are defined for traceroute:
+
+.EX
+.B traceroute_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), traceroute(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/tuned_selinux.8 serefpolicy-3.7.19/man/man8/tuned_selinux.8
--- nsaserefpolicy/man/man8/tuned_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/tuned_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,109 @@
+.TH  "tuned_selinux"  "8"  "tuned" "dwalsh@redhat.com" "tuned SELinux Policy documentation"
+.SH "NAME"
+tuned_selinux \- Security Enhanced Linux Policy for the tuned processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tuned
+(Dynamic adaptive system tuning daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tuned policy is very flexible allowing users to setup their tuned processes in as secure a method as possible.
+.PP 
+The following file types are defined for tuned:
+
+
+.EX
+.PP
+.B tuned_exec_t 
+.EE
+
+- Set files with the tuned_exec_t type, if you want to transition an executable to the tuned_t domain.
+
+
+.EX
+.PP
+.B tuned_initrc_exec_t 
+.EE
+
+- Set files with the tuned_initrc_exec_t type, if you want to transition an executable to the tuned_initrc_t domain.
+
+
+.EX
+.PP
+.B tuned_log_t 
+.EE
+
+- Set files with the tuned_log_t type, if you want to treat the data as tuned log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/tuned(/.*)?, /var/log/tuned\.log
+
+.EX
+.PP
+.B tuned_var_run_t 
+.EE
+
+- Set files with the tuned_var_run_t type, if you want to store the tuned files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/tuned\.pid, /var/run/tuned(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tuned policy is very flexible allowing users to setup their tuned processes in as secure a method as possible.
+.PP 
+The following process types are defined for tuned:
+
+.EX
+.B tuned_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tuned(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/tvtime_selinux.8 serefpolicy-3.7.19/man/man8/tvtime_selinux.8
--- nsaserefpolicy/man/man8/tvtime_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/tvtime_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,101 @@
+.TH  "tvtime_selinux"  "8"  "tvtime" "dwalsh@redhat.com" "tvtime SELinux Policy documentation"
+.SH "NAME"
+tvtime_selinux \- Security Enhanced Linux Policy for the tvtime processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tvtime
+( tvtime - a high quality television application )
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tvtime policy is very flexible allowing users to setup their tvtime processes in as secure a method as possible.
+.PP 
+The following file types are defined for tvtime:
+
+
+.EX
+.PP
+.B tvtime_exec_t 
+.EE
+
+- Set files with the tvtime_exec_t type, if you want to transition an executable to the tvtime_t domain.
+
+
+.EX
+.PP
+.B tvtime_home_t 
+.EE
+
+- Set files with the tvtime_home_t type, if you want to store tvtime files in the users home directory.
+
+
+.EX
+.PP
+.B tvtime_tmp_t 
+.EE
+
+- Set files with the tvtime_tmp_t type, if you want to store tvtime temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B tvtime_tmpfs_t 
+.EE
+
+- Set files with the tvtime_tmpfs_t type, if you want to store tvtime files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tvtime policy is very flexible allowing users to setup their tvtime processes in as secure a method as possible.
+.PP 
+The following process types are defined for tvtime:
+
+.EX
+.B tvtime_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tvtime(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/tzdata_selinux.8 serefpolicy-3.7.19/man/man8/tzdata_selinux.8
--- nsaserefpolicy/man/man8/tzdata_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/tzdata_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,77 @@
+.TH  "tzdata_selinux"  "8"  "tzdata" "dwalsh@redhat.com" "tzdata SELinux Policy documentation"
+.SH "NAME"
+tzdata_selinux \- Security Enhanced Linux Policy for the tzdata processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tzdata
+(Time zone updater)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tzdata policy is very flexible allowing users to setup their tzdata processes in as secure a method as possible.
+.PP 
+The following file types are defined for tzdata:
+
+
+.EX
+.PP
+.B tzdata_exec_t 
+.EE
+
+- Set files with the tzdata_exec_t type, if you want to transition an executable to the tzdata_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tzdata policy is very flexible allowing users to setup their tzdata processes in as secure a method as possible.
+.PP 
+The following process types are defined for tzdata:
+
+.EX
+.B tzdata_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tzdata(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/udev_selinux.8 serefpolicy-3.7.19/man/man8/udev_selinux.8
--- nsaserefpolicy/man/man8/udev_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/udev_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,125 @@
+.TH  "udev_selinux"  "8"  "udev" "dwalsh@redhat.com" "udev SELinux Policy documentation"
+.SH "NAME"
+udev_selinux \- Security Enhanced Linux Policy for the udev processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B udev
+(Policy for udev)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux udev policy is very flexible allowing users to setup their udev processes in as secure a method as possible.
+.PP 
+The following file types are defined for udev:
+
+
+.EX
+.PP
+.B udev_etc_t 
+.EE
+
+- Set files with the udev_etc_t type, if you want to store udev files in the /etc directories.
+
+
+.EX
+.PP
+.B udev_exec_t 
+.EE
+
+- Set files with the udev_exec_t type, if you want to transition an executable to the udev_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/udevd, /sbin/start_udev, /sbin/udevsend, /usr/bin/udevinfo, /sbin/udev, /sbin/udevstart, /sbin/wait_for_sysfs, /lib/udev/udev-acl, /sbin/udevadm
+
+.EX
+.PP
+.B udev_helper_exec_t 
+.EE
+
+- Set files with the udev_helper_exec_t type, if you want to transition an executable to the udev_helper_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/udev/scripts/.+, /etc/hotplug\.d/default/udev.*, /etc/dev\.d/.+
+
+.EX
+.PP
+.B udev_tbl_t 
+.EE
+
+- Set files with the udev_tbl_t type, if you want to treat the files as udev tbl data.
+
+.br
+.TP 5
+Paths: 
+/dev/\.udevdb, /dev/\.udev(/.*)?, /dev/udev\.tbl
+
+.EX
+.PP
+.B udev_var_run_t 
+.EE
+
+- Set files with the udev_var_run_t type, if you want to store the udev files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/PackageKit/udev(/.*)?, /etc/udev/rules.d(/.*)?, /var/run/libgpod(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux udev policy is very flexible allowing users to setup their udev processes in as secure a method as possible.
+.PP 
+The following process types are defined for udev:
+
+.EX
+.B udev_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), udev(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ulogd_selinux.8 serefpolicy-3.7.19/man/man8/ulogd_selinux.8
--- nsaserefpolicy/man/man8/ulogd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ulogd_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,109 @@
+.TH  "ulogd_selinux"  "8"  "ulogd" "dwalsh@redhat.com" "ulogd SELinux Policy documentation"
+.SH "NAME"
+ulogd_selinux \- Security Enhanced Linux Policy for the ulogd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ulogd
+(Iptables/netfilter userspace logging daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ulogd policy is very flexible allowing users to setup their ulogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ulogd:
+
+
+.EX
+.PP
+.B ulogd_etc_t 
+.EE
+
+- Set files with the ulogd_etc_t type, if you want to store ulogd files in the /etc directories.
+
+
+.EX
+.PP
+.B ulogd_exec_t 
+.EE
+
+- Set files with the ulogd_exec_t type, if you want to transition an executable to the ulogd_t domain.
+
+
+.EX
+.PP
+.B ulogd_initrc_exec_t 
+.EE
+
+- Set files with the ulogd_initrc_exec_t type, if you want to transition an executable to the ulogd_initrc_t domain.
+
+
+.EX
+.PP
+.B ulogd_modules_t 
+.EE
+
+- Set files with the ulogd_modules_t type, if you want to treat the files as ulogd modules.
+
+
+.EX
+.PP
+.B ulogd_var_log_t 
+.EE
+
+- Set files with the ulogd_var_log_t type, if you want to treat the data as ulogd var log data, usually stored under the /var/log directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ulogd policy is very flexible allowing users to setup their ulogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ulogd:
+
+.EX
+.B ulogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ulogd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/uml_selinux.8 serefpolicy-3.7.19/man/man8/uml_selinux.8
--- nsaserefpolicy/man/man8/uml_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/uml_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,125 @@
+.TH  "uml_selinux"  "8"  "uml" "dwalsh@redhat.com" "uml SELinux Policy documentation"
+.SH "NAME"
+uml_selinux \- Security Enhanced Linux Policy for the uml processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B uml
+(Policy for UML)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux uml policy is very flexible allowing users to setup their uml processes in as secure a method as possible.
+.PP 
+The following file types are defined for uml:
+
+
+.EX
+.PP
+.B uml_exec_t 
+.EE
+
+- Set files with the uml_exec_t type, if you want to transition an executable to the uml_t domain.
+
+
+.EX
+.PP
+.B uml_ro_t 
+.EE
+
+- Set files with the uml_ro_t type, if you want to treat the files as uml read/only content.
+
+
+.EX
+.PP
+.B uml_rw_t 
+.EE
+
+- Set files with the uml_rw_t type, if you want to treat the files as uml read/write content.
+
+
+.EX
+.PP
+.B uml_switch_exec_t 
+.EE
+
+- Set files with the uml_switch_exec_t type, if you want to transition an executable to the uml_switch_t domain.
+
+
+.EX
+.PP
+.B uml_switch_var_run_t 
+.EE
+
+- Set files with the uml_switch_var_run_t type, if you want to store the uml switch files under the /run directory.
+
+
+.EX
+.PP
+.B uml_tmp_t 
+.EE
+
+- Set files with the uml_tmp_t type, if you want to store uml temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B uml_tmpfs_t 
+.EE
+
+- Set files with the uml_tmpfs_t type, if you want to store uml files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux uml policy is very flexible allowing users to setup their uml processes in as secure a method as possible.
+.PP 
+The following process types are defined for uml:
+
+.EX
+.B uml_switch_t, uml_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), uml(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/unconfined_selinux.8 serefpolicy-3.7.19/man/man8/unconfined_selinux.8
--- nsaserefpolicy/man/man8/unconfined_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/unconfined_selinux.8	2012-04-24 11:06:45.876312378 +0000
@@ -0,0 +1,65 @@
+.TH  "unconfined_selinux"  "8"  "unconfined" "mgrepl@redhat.com" "unconfined SELinux Policy documentation"
+.SH "NAME"
+unconfined_r \- \fBUnconfiend user role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the unconfined_r role is unconfined_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r unconfined_r -t unconfined_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=unconfined_r TYPE=unconfined_t COMMAND
+.br
+sudo will run COMMAND as staff_u:unconfined_r:unconfined_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add unconfined_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r unconfined_r' staff_u 
+
+
+
+SELinux policy also controls which roles can transition to a different role.  
+You can list these rules using the following command.
+
+.B sesearch --role_allow
+
+SELinux policy allows the staff_r role can transition to the unconfined_r role.
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/update_selinux.8 serefpolicy-3.7.19/man/man8/update_selinux.8
--- nsaserefpolicy/man/man8/update_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/update_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,83 @@
+.TH  "update_selinux"  "8"  "update" "dwalsh@redhat.com" "update SELinux Policy documentation"
+.SH "NAME"
+update_selinux \- Security Enhanced Linux Policy for the update processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux update policy is very flexible allowing users to setup their update processes in as secure a method as possible.
+.PP 
+The following file types are defined for update:
+
+
+.EX
+.PP
+.B update_modules_exec_t 
+.EE
+
+- Set files with the update_modules_exec_t type, if you want to transition an executable to the update_modules_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/modules-update, /sbin/generate-modprobe\.conf, /sbin/update-modules
+
+.EX
+.PP
+.B update_modules_tmp_t 
+.EE
+
+- Set files with the update_modules_tmp_t type, if you want to store update modules temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux update policy is very flexible allowing users to setup their update processes in as secure a method as possible.
+.PP 
+The following process types are defined for update:
+
+.EX
+.B update_modules_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), update(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/updfstab_selinux.8 serefpolicy-3.7.19/man/man8/updfstab_selinux.8
--- nsaserefpolicy/man/man8/updfstab_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/updfstab_selinux.8	2012-03-20 22:37:14.361458020 +0000
@@ -0,0 +1,81 @@
+.TH  "updfstab_selinux"  "8"  "updfstab" "dwalsh@redhat.com" "updfstab SELinux Policy documentation"
+.SH "NAME"
+updfstab_selinux \- Security Enhanced Linux Policy for the updfstab processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B updfstab
+(Red Hat utility to change /etc/fstab)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux updfstab policy is very flexible allowing users to setup their updfstab processes in as secure a method as possible.
+.PP 
+The following file types are defined for updfstab:
+
+
+.EX
+.PP
+.B updfstab_exec_t 
+.EE
+
+- Set files with the updfstab_exec_t type, if you want to transition an executable to the updfstab_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/updfstab, /usr/sbin/fstab-sync
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux updfstab policy is very flexible allowing users to setup their updfstab processes in as secure a method as possible.
+.PP 
+The following process types are defined for updfstab:
+
+.EX
+.B updfstab_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), updfstab(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/updpwd_selinux.8 serefpolicy-3.7.19/man/man8/updpwd_selinux.8
--- nsaserefpolicy/man/man8/updpwd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/updpwd_selinux.8	2012-03-20 22:37:14.362457996 +0000
@@ -0,0 +1,71 @@
+.TH  "updpwd_selinux"  "8"  "updpwd" "dwalsh@redhat.com" "updpwd SELinux Policy documentation"
+.SH "NAME"
+updpwd_selinux \- Security Enhanced Linux Policy for the updpwd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux updpwd policy is very flexible allowing users to setup their updpwd processes in as secure a method as possible.
+.PP 
+The following file types are defined for updpwd:
+
+
+.EX
+.PP
+.B updpwd_exec_t 
+.EE
+
+- Set files with the updpwd_exec_t type, if you want to transition an executable to the updpwd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux updpwd policy is very flexible allowing users to setup their updpwd processes in as secure a method as possible.
+.PP 
+The following process types are defined for updpwd:
+
+.EX
+.B updpwd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), updpwd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/usbmodules_selinux.8 serefpolicy-3.7.19/man/man8/usbmodules_selinux.8
--- nsaserefpolicy/man/man8/usbmodules_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/usbmodules_selinux.8	2012-03-20 22:37:14.362457996 +0000
@@ -0,0 +1,81 @@
+.TH  "usbmodules_selinux"  "8"  "usbmodules" "dwalsh@redhat.com" "usbmodules SELinux Policy documentation"
+.SH "NAME"
+usbmodules_selinux \- Security Enhanced Linux Policy for the usbmodules processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B usbmodules
+(List kernel modules of USB devices)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux usbmodules policy is very flexible allowing users to setup their usbmodules processes in as secure a method as possible.
+.PP 
+The following file types are defined for usbmodules:
+
+
+.EX
+.PP
+.B usbmodules_exec_t 
+.EE
+
+- Set files with the usbmodules_exec_t type, if you want to transition an executable to the usbmodules_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/usbmodules, /sbin/usbmodules
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux usbmodules policy is very flexible allowing users to setup their usbmodules processes in as secure a method as possible.
+.PP 
+The following process types are defined for usbmodules:
+
+.EX
+.B usbmodules_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), usbmodules(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/usbmuxd_selinux.8 serefpolicy-3.7.19/man/man8/usbmuxd_selinux.8
--- nsaserefpolicy/man/man8/usbmuxd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/usbmuxd_selinux.8	2012-03-20 22:37:14.362457996 +0000
@@ -0,0 +1,85 @@
+.TH  "usbmuxd_selinux"  "8"  "usbmuxd" "dwalsh@redhat.com" "usbmuxd SELinux Policy documentation"
+.SH "NAME"
+usbmuxd_selinux \- Security Enhanced Linux Policy for the usbmuxd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B usbmuxd
+(USB multiplexing daemon for communicating with Apple iPod Touch and iPhone)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux usbmuxd policy is very flexible allowing users to setup their usbmuxd processes in as secure a method as possible.
+.PP 
+The following file types are defined for usbmuxd:
+
+
+.EX
+.PP
+.B usbmuxd_exec_t 
+.EE
+
+- Set files with the usbmuxd_exec_t type, if you want to transition an executable to the usbmuxd_t domain.
+
+
+.EX
+.PP
+.B usbmuxd_var_run_t 
+.EE
+
+- Set files with the usbmuxd_var_run_t type, if you want to store the usbmuxd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux usbmuxd policy is very flexible allowing users to setup their usbmuxd processes in as secure a method as possible.
+.PP 
+The following process types are defined for usbmuxd:
+
+.EX
+.B usbmuxd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), usbmuxd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/useradd_selinux.8 serefpolicy-3.7.19/man/man8/useradd_selinux.8
--- nsaserefpolicy/man/man8/useradd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/useradd_selinux.8	2012-03-20 22:37:14.362457996 +0000
@@ -0,0 +1,75 @@
+.TH  "useradd_selinux"  "8"  "useradd" "dwalsh@redhat.com" "useradd SELinux Policy documentation"
+.SH "NAME"
+useradd_selinux \- Security Enhanced Linux Policy for the useradd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux useradd policy is very flexible allowing users to setup their useradd processes in as secure a method as possible.
+.PP 
+The following file types are defined for useradd:
+
+
+.EX
+.PP
+.B useradd_exec_t 
+.EE
+
+- Set files with the useradd_exec_t type, if you want to transition an executable to the useradd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/useradd, /usr/sbin/usermod, /usr/sbin/userdel
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux useradd policy is very flexible allowing users to setup their useradd processes in as secure a method as possible.
+.PP 
+The following process types are defined for useradd:
+
+.EX
+.B useradd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), useradd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/usernetctl_selinux.8 serefpolicy-3.7.19/man/man8/usernetctl_selinux.8
--- nsaserefpolicy/man/man8/usernetctl_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/usernetctl_selinux.8	2012-03-20 22:37:14.362457996 +0000
@@ -0,0 +1,77 @@
+.TH  "usernetctl_selinux"  "8"  "usernetctl" "dwalsh@redhat.com" "usernetctl SELinux Policy documentation"
+.SH "NAME"
+usernetctl_selinux \- Security Enhanced Linux Policy for the usernetctl processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B usernetctl
+(User network interface configuration helper)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux usernetctl policy is very flexible allowing users to setup their usernetctl processes in as secure a method as possible.
+.PP 
+The following file types are defined for usernetctl:
+
+
+.EX
+.PP
+.B usernetctl_exec_t 
+.EE
+
+- Set files with the usernetctl_exec_t type, if you want to transition an executable to the usernetctl_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux usernetctl policy is very flexible allowing users to setup their usernetctl processes in as secure a method as possible.
+.PP 
+The following process types are defined for usernetctl:
+
+.EX
+.B usernetctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), usernetctl(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/user_selinux.8 serefpolicy-3.7.19/man/man8/user_selinux.8
--- nsaserefpolicy/man/man8/user_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/user_selinux.8	2012-04-24 11:06:45.876312378 +0000
@@ -0,0 +1,171 @@
+.TH  "user_selinux"  "8"  "user" "mgrepl@redhat.com" "user SELinux Policy documentation"
+.SH "NAME"
+user_u \- \fBGeneric unprivileged user\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBuser_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBuser_r\fP.  The
+default role has a default type, \fBuser_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B user_u:user_r:user_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the user_u user, you would execute:
+
+.B semanage login -m -s user_u __default__
+
+
+.SH USER DESCRIPTION
+
+The SELinux user user_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux type user_t is not allowed to execute sudo. 
+
+.SH X WINDOWS LOGIN
+
+The SELinux user user_u is able to X Windows login.
+
+.SH NETWORK
+
+.TP
+The SELinux user user_u is able to listen on the following tcp ports.
+
+.B xserver_port_t: 6000-6150
+
+.TP
+The SELinux user user_u is able to listen on the following udp ports.
+
+.B all ports with out defined types
+
+.TP
+The SELinux user user_u is able to connect to the following tcp ports.
+
+.B all ports
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  user_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run user_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user user_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when user_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny user_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow user_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user user_t can execute without transitioning:
+
+.B sesearch -A -s user_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow user_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user user_t can execute and transition:
+
+.B $ sesearch -A -s user_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/utempter_selinux.8 serefpolicy-3.7.19/man/man8/utempter_selinux.8
--- nsaserefpolicy/man/man8/utempter_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/utempter_selinux.8	2012-03-20 22:37:14.362457996 +0000
@@ -0,0 +1,71 @@
+.TH  "utempter_selinux"  "8"  "utempter" "dwalsh@redhat.com" "utempter SELinux Policy documentation"
+.SH "NAME"
+utempter_selinux \- Security Enhanced Linux Policy for the utempter processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux utempter policy is very flexible allowing users to setup their utempter processes in as secure a method as possible.
+.PP 
+The following file types are defined for utempter:
+
+
+.EX
+.PP
+.B utempter_exec_t 
+.EE
+
+- Set files with the utempter_exec_t type, if you want to transition an executable to the utempter_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux utempter policy is very flexible allowing users to setup their utempter processes in as secure a method as possible.
+.PP 
+The following process types are defined for utempter:
+
+.EX
+.B utempter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), utempter(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/uucpd_selinux.8 serefpolicy-3.7.19/man/man8/uucpd_selinux.8
--- nsaserefpolicy/man/man8/uucpd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/uucpd_selinux.8	2012-03-20 22:37:14.362457996 +0000
@@ -0,0 +1,157 @@
+.TH  "uucpd_selinux"  "8"  "uucpd" "dwalsh@redhat.com" "uucpd SELinux Policy documentation"
+.SH "NAME"
+uucpd_selinux \- Security Enhanced Linux Policy for the uucpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for uucpd:
+
+
+.EX
+.PP
+.B uucpd_exec_t 
+.EE
+
+- Set files with the uucpd_exec_t type, if you want to transition an executable to the uucpd_t domain.
+
+
+.EX
+.PP
+.B uucpd_lock_t 
+.EE
+
+- Set files with the uucpd_lock_t type, if you want to treat the files as uucpd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B uucpd_log_t 
+.EE
+
+- Set files with the uucpd_log_t type, if you want to treat the data as uucpd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B uucpd_ro_t 
+.EE
+
+- Set files with the uucpd_ro_t type, if you want to treat the files as uucpd read/only content.
+
+
+.EX
+.PP
+.B uucpd_rw_t 
+.EE
+
+- Set files with the uucpd_rw_t type, if you want to treat the files as uucpd read/write content.
+
+
+.EX
+.PP
+.B uucpd_spool_t 
+.EE
+
+- Set files with the uucpd_spool_t type, if you want to store the uucpd files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/uucppublic(/.*)?, /var/spool/uucp(/.*)?
+
+.EX
+.PP
+.B uucpd_tmp_t 
+.EE
+
+- Set files with the uucpd_tmp_t type, if you want to store uucpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B uucpd_var_run_t 
+.EE
+
+- Set files with the uucpd_var_run_t type, if you want to store the uucpd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for uucpd:
+
+.EX
+.TP 5
+.B uucpd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for uucpd:
+
+.EX
+.B uucpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), uucpd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/uuidd_selinux.8 serefpolicy-3.7.19/man/man8/uuidd_selinux.8
--- nsaserefpolicy/man/man8/uuidd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/uuidd_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,101 @@
+.TH  "uuidd_selinux"  "8"  "uuidd" "dwalsh@redhat.com" "uuidd SELinux Policy documentation"
+.SH "NAME"
+uuidd_selinux \- Security Enhanced Linux Policy for the uuidd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B uuidd
+(policy for uuidd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux uuidd policy is very flexible allowing users to setup their uuidd processes in as secure a method as possible.
+.PP 
+The following file types are defined for uuidd:
+
+
+.EX
+.PP
+.B uuidd_exec_t 
+.EE
+
+- Set files with the uuidd_exec_t type, if you want to transition an executable to the uuidd_t domain.
+
+
+.EX
+.PP
+.B uuidd_initrc_exec_t 
+.EE
+
+- Set files with the uuidd_initrc_exec_t type, if you want to transition an executable to the uuidd_initrc_t domain.
+
+
+.EX
+.PP
+.B uuidd_var_lib_t 
+.EE
+
+- Set files with the uuidd_var_lib_t type, if you want to store the uuidd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B uuidd_var_run_t 
+.EE
+
+- Set files with the uuidd_var_run_t type, if you want to store the uuidd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux uuidd policy is very flexible allowing users to setup their uuidd processes in as secure a method as possible.
+.PP 
+The following process types are defined for uuidd:
+
+.EX
+.B uuidd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), uuidd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/uux_selinux.8 serefpolicy-3.7.19/man/man8/uux_selinux.8
--- nsaserefpolicy/man/man8/uux_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/uux_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,71 @@
+.TH  "uux_selinux"  "8"  "uux" "dwalsh@redhat.com" "uux SELinux Policy documentation"
+.SH "NAME"
+uux_selinux \- Security Enhanced Linux Policy for the uux processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux uux policy is very flexible allowing users to setup their uux processes in as secure a method as possible.
+.PP 
+The following file types are defined for uux:
+
+
+.EX
+.PP
+.B uux_exec_t 
+.EE
+
+- Set files with the uux_exec_t type, if you want to transition an executable to the uux_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux uux policy is very flexible allowing users to setup their uux processes in as secure a method as possible.
+.PP 
+The following process types are defined for uux:
+
+.EX
+.B uux_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), uux(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/varnishd_selinux.8 serefpolicy-3.7.19/man/man8/varnishd_selinux.8
--- nsaserefpolicy/man/man8/varnishd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/varnishd_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,158 @@
+.TH  "varnishd_selinux"  "8"  "varnishd" "dwalsh@redhat.com" "varnishd SELinux Policy documentation"
+.SH "NAME"
+varnishd_selinux \- Security Enhanced Linux Policy for the varnishd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B varnishd
+(Varnishd http accelerator daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  varnishd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run varnishd with the tightest access possible.
+
+
+.PP
+If you want to allow varnishd to connect to all ports, not just HTTP, you must turn on the varnishd_connect_any boolean.
+
+.EX
+.B setsebool -P varnishd_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
+.PP 
+The following file types are defined for varnishd:
+
+
+.EX
+.PP
+.B varnishd_etc_t 
+.EE
+
+- Set files with the varnishd_etc_t type, if you want to store varnishd files in the /etc directories.
+
+
+.EX
+.PP
+.B varnishd_exec_t 
+.EE
+
+- Set files with the varnishd_exec_t type, if you want to transition an executable to the varnishd_t domain.
+
+
+.EX
+.PP
+.B varnishd_initrc_exec_t 
+.EE
+
+- Set files with the varnishd_initrc_exec_t type, if you want to transition an executable to the varnishd_initrc_t domain.
+
+
+.EX
+.PP
+.B varnishd_tmp_t 
+.EE
+
+- Set files with the varnishd_tmp_t type, if you want to store varnishd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B varnishd_var_lib_t 
+.EE
+
+- Set files with the varnishd_var_lib_t type, if you want to store the varnishd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B varnishd_var_run_t 
+.EE
+
+- Set files with the varnishd_var_run_t type, if you want to store the varnishd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
+.PP 
+The following port types are defined for varnishd:
+
+.EX
+.TP 5
+.B varnishd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
+.PP 
+The following process types are defined for varnishd:
+
+.EX
+.B varnishd_t, varnishlog_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), varnishd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/varnishlog_selinux.8 serefpolicy-3.7.19/man/man8/varnishlog_selinux.8
--- nsaserefpolicy/man/man8/varnishlog_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/varnishlog_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,107 @@
+.TH  "varnishlog_selinux"  "8"  "varnishlog" "dwalsh@redhat.com" "varnishlog SELinux Policy documentation"
+.SH "NAME"
+varnishlog_selinux \- Security Enhanced Linux Policy for the varnishlog processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux varnishlog policy is very flexible allowing users to setup their varnishlog processes in as secure a method as possible.
+.PP 
+The following file types are defined for varnishlog:
+
+
+.EX
+.PP
+.B varnishlog_exec_t 
+.EE
+
+- Set files with the varnishlog_exec_t type, if you want to transition an executable to the varnishlog_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/varnisncsa, /usr/bin/varnishlog
+
+.EX
+.PP
+.B varnishlog_initrc_exec_t 
+.EE
+
+- Set files with the varnishlog_initrc_exec_t type, if you want to transition an executable to the varnishlog_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/varnishncsa, /etc/rc\.d/init\.d/varnishlog
+
+.EX
+.PP
+.B varnishlog_log_t 
+.EE
+
+- Set files with the varnishlog_log_t type, if you want to treat the data as varnishlog log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B varnishlog_var_run_t 
+.EE
+
+- Set files with the varnishlog_var_run_t type, if you want to store the varnishlog files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/varnishncsa\.pid, /var/run/varnishlog\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux varnishlog policy is very flexible allowing users to setup their varnishlog processes in as secure a method as possible.
+.PP 
+The following process types are defined for varnishlog:
+
+.EX
+.B varnishlog_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), varnishlog(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/vbetool_selinux.8 serefpolicy-3.7.19/man/man8/vbetool_selinux.8
--- nsaserefpolicy/man/man8/vbetool_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/vbetool_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,92 @@
+.TH  "vbetool_selinux"  "8"  "vbetool" "dwalsh@redhat.com" "vbetool SELinux Policy documentation"
+.SH "NAME"
+vbetool_selinux \- Security Enhanced Linux Policy for the vbetool processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vbetool
+(run real-mode video BIOS code to alter hardware state)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  vbetool policy is extremely flexible and has several booleans that allow you to manipulate the policy and run vbetool with the tightest access possible.
+
+
+.PP
+If you want to ignore vbetool mmap_zero errors, you must turn on the vbetool_mmap_zero_ignore boolean.
+
+.EX
+.B setsebool -P vbetool_mmap_zero_ignore 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vbetool policy is very flexible allowing users to setup their vbetool processes in as secure a method as possible.
+.PP 
+The following file types are defined for vbetool:
+
+
+.EX
+.PP
+.B vbetool_exec_t 
+.EE
+
+- Set files with the vbetool_exec_t type, if you want to transition an executable to the vbetool_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vbetool policy is very flexible allowing users to setup their vbetool processes in as secure a method as possible.
+.PP 
+The following process types are defined for vbetool:
+
+.EX
+.B vbetool_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vbetool(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/vdagent_selinux.8 serefpolicy-3.7.19/man/man8/vdagent_selinux.8
--- nsaserefpolicy/man/man8/vdagent_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/vdagent_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,105 @@
+.TH  "vdagent_selinux"  "8"  "vdagent" "dwalsh@redhat.com" "vdagent SELinux Policy documentation"
+.SH "NAME"
+vdagent_selinux \- Security Enhanced Linux Policy for the vdagent processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vdagent
+(policy for vdagent)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vdagent policy is very flexible allowing users to setup their vdagent processes in as secure a method as possible.
+.PP 
+The following file types are defined for vdagent:
+
+
+.EX
+.PP
+.B vdagent_exec_t 
+.EE
+
+- Set files with the vdagent_exec_t type, if you want to transition an executable to the vdagent_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/vdagent, /usr/sbin/spice-vdagentd
+
+.EX
+.PP
+.B vdagent_log_t 
+.EE
+
+- Set files with the vdagent_log_t type, if you want to treat the data as vdagent log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/spice-vdagentd(/.*)?, /var/log/spice-vdagentd\.log
+
+.EX
+.PP
+.B vdagent_var_run_t 
+.EE
+
+- Set files with the vdagent_var_run_t type, if you want to store the vdagent files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/spice-vdagentd.\pid, /var/run/spice-vdagentd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vdagent policy is very flexible allowing users to setup their vdagent processes in as secure a method as possible.
+.PP 
+The following process types are defined for vdagent:
+
+.EX
+.B vdagent_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vdagent(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/vhostmd_selinux.8 serefpolicy-3.7.19/man/man8/vhostmd_selinux.8
--- nsaserefpolicy/man/man8/vhostmd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/vhostmd_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,101 @@
+.TH  "vhostmd_selinux"  "8"  "vhostmd" "dwalsh@redhat.com" "vhostmd SELinux Policy documentation"
+.SH "NAME"
+vhostmd_selinux \- Security Enhanced Linux Policy for the vhostmd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vhostmd
+(Virtual host metrics daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vhostmd policy is very flexible allowing users to setup their vhostmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for vhostmd:
+
+
+.EX
+.PP
+.B vhostmd_exec_t 
+.EE
+
+- Set files with the vhostmd_exec_t type, if you want to transition an executable to the vhostmd_t domain.
+
+
+.EX
+.PP
+.B vhostmd_initrc_exec_t 
+.EE
+
+- Set files with the vhostmd_initrc_exec_t type, if you want to transition an executable to the vhostmd_initrc_t domain.
+
+
+.EX
+.PP
+.B vhostmd_tmpfs_t 
+.EE
+
+- Set files with the vhostmd_tmpfs_t type, if you want to store vhostmd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B vhostmd_var_run_t 
+.EE
+
+- Set files with the vhostmd_var_run_t type, if you want to store the vhostmd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vhostmd policy is very flexible allowing users to setup their vhostmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for vhostmd:
+
+.EX
+.B vhostmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vhostmd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/virtd_selinux.8 serefpolicy-3.7.19/man/man8/virtd_selinux.8
--- nsaserefpolicy/man/man8/virtd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/virtd_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,300 @@
+.TH  "virtd_selinux"  "8"  "virtd" "dwalsh@redhat.com" "virtd SELinux Policy documentation"
+.SH "NAME"
+virtd_selinux \- Security Enhanced Linux Policy for the virtd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  virtd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run virtd with the tightest access possible.
+
+
+.PP
+If you want to allow virt to manage nfs file, you must turn on the virt_use_nfs boolean.
+
+.EX
+.B setsebool -P virt_use_nfs 1
+.EE
+
+.PP
+If you want to allow virt to use serial/parallell communication port, you must turn on the virt_use_comm boolean.
+
+.EX
+.B setsebool -P virt_use_comm 1
+.EE
+
+.PP
+If you want to allow virtual machine to interact with the xserve, you must turn on the virt_use_xserver boolean.
+
+.EX
+.B setsebool -P virt_use_xserver 1
+.EE
+
+.PP
+If you want to allow virt to manage device configuration, (pci, you must turn on the virt_use_sysfs boolean.
+
+.EX
+.B setsebool -P virt_use_sysfs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to interact with the sanloc, you must turn on the virt_use_sanlock boolean.
+
+.EX
+.B setsebool -P virt_use_sanlock 1
+.EE
+
+.PP
+If you want to allow virt to use usb device, you must turn on the virt_use_usb boolean.
+
+.EX
+.B setsebool -P virt_use_usb 1
+.EE
+
+.PP
+If you want to allow virt to read fuse file, you must turn on the virt_use_fusefs boolean.
+
+.EX
+.B setsebool -P virt_use_fusefs 1
+.EE
+
+.PP
+If you want to allow virt to manage cifs file, you must turn on the virt_use_samba boolean.
+
+.EX
+.B setsebool -P virt_use_samba 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
+.PP 
+The following file types are defined for virtd:
+
+
+.EX
+.PP
+.B virt_cache_t 
+.EE
+
+- Set files with the virt_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/oz(/.*)?, /var/cache/libvirt
+
+.EX
+.PP
+.B virt_content_t 
+.EE
+
+- Set files with the virt_content_t type, if you want to treat the files as virt content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/oz/isos(/.*)?, /var/lib/libvirt/boot(/.*)?, /var/lib/libvirt/isos(/.*)?
+
+.EX
+.PP
+.B virt_etc_rw_t 
+.EE
+
+- Set files with the virt_etc_rw_t type, if you want to treat the files as virt etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/libvirt/.*/.*, /etc/xen/.*/.*, /etc/xen/[^/]*, /etc/libvirt/[^/]*
+
+.EX
+.PP
+.B virt_etc_t 
+.EE
+
+- Set files with the virt_etc_t type, if you want to store virt files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/libvirt/[^/]*, /etc/libvirt, /etc/xen/[^/]*, /etc/xen
+
+.EX
+.PP
+.B virt_home_t 
+.EE
+
+- Set files with the virt_home_t type, if you want to store virt files in the users home directory.
+
+
+.EX
+.PP
+.B virt_image_t 
+.EE
+
+- Set files with the virt_image_t type, if you want to treat the files as virt image data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/imagefactory/images(/.*)?, /var/lib/libvirt/images(/.*)?
+
+.EX
+.PP
+.B virt_log_t 
+.EE
+
+- Set files with the virt_log_t type, if you want to treat the data as virt log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B virt_tmp_t 
+.EE
+
+- Set files with the virt_tmp_t type, if you want to store virt temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B virt_var_lib_t 
+.EE
+
+- Set files with the virt_var_lib_t type, if you want to store the virt files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/oz(/.*)?, /var/lib/libvirt(/.*)?
+
+.EX
+.PP
+.B virt_var_run_t 
+.EE
+
+- Set files with the virt_var_run_t type, if you want to store the virt files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/vdsm(/.*)?, /var/run/libvirt(/.*)?
+
+.EX
+.PP
+.B virtd_exec_t 
+.EE
+
+- Set files with the virtd_exec_t type, if you want to transition an executable to the virtd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/imgfac\.py, /usr/bin/imagefactory, /usr/sbin/condor_vm-gahp, /usr/sbin/libvirtd, /usr/share/vdsm/vdsm
+
+.EX
+.PP
+.B virtd_initrc_exec_t 
+.EE
+
+- Set files with the virtd_initrc_exec_t type, if you want to transition an executable to the virtd_initrc_t domain.
+
+
+.EX
+.PP
+.B virtd_keytab_t 
+.EE
+
+- Set files with the virtd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
+.PP 
+The following port types are defined for virtd:
+
+.EX
+.TP 5
+.B virt_migration_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B virt_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
+.PP 
+The following process types are defined for virtd:
+
+.EX
+.B virtd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), virtd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/vmware_selinux.8 serefpolicy-3.7.19/man/man8/vmware_selinux.8
--- nsaserefpolicy/man/man8/vmware_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/vmware_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,173 @@
+.TH  "vmware_selinux"  "8"  "vmware" "dwalsh@redhat.com" "vmware SELinux Policy documentation"
+.SH "NAME"
+vmware_selinux \- Security Enhanced Linux Policy for the vmware processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vmware
+(VMWare Workstation virtual machines)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vmware policy is very flexible allowing users to setup their vmware processes in as secure a method as possible.
+.PP 
+The following file types are defined for vmware:
+
+
+.EX
+.PP
+.B vmware_conf_t 
+.EE
+
+- Set files with the vmware_conf_t type, if you want to treat the files as vmware configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B vmware_exec_t 
+.EE
+
+- Set files with the vmware_exec_t type, if you want to transition an executable to the vmware_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/vmware/bin/vmware-mks, /usr/lib/vmware/bin/vmplayer, /usr/lib64/vmware/bin/vmware-ui, /usr/lib/vmware/bin/vmware-ui, /usr/sbin/vmware-serverd, /usr/lib64/vmware/bin/vmplayer, /usr/lib64/vmware/bin/vmware-mks, /usr/bin/vmware, /usr/bin/vmware-wizard
+
+.EX
+.PP
+.B vmware_file_t 
+.EE
+
+- Set files with the vmware_file_t type, if you want to treat the files as vmware content.
+
+
+.EX
+.PP
+.B vmware_host_exec_t 
+.EE
+
+- Set files with the vmware_host_exec_t type, if you want to transition an executable to the vmware_host_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/vmware-smbpasswd\.bin, /usr/bin/vmware-smbd, /usr/lib/vmware-tools/sbin64/vmware.*, /usr/bin/vmware-ping, /usr/bin/vmnet-dhcpd, /usr/lib64/vmware/bin/vmware-vmx, /usr/bin/vmnet-bridge, /usr/bin/vmware-nmbd, /usr/bin/vmnet-netifup, /usr/sbin/vmware-guest.*, /usr/bin/vmware-network, /usr/bin/vmware-vmx, /usr/bin/vmnet-natd, /usr/bin/vmware-smbpasswd, /usr/bin/vmnet-sniffer, /usr/lib/vmware-tools/sbin32/vmware.*, /usr/lib/vmware/bin/vmware-vmx
+
+.EX
+.PP
+.B vmware_host_pid_t 
+.EE
+
+- Set files with the vmware_host_pid_t type, if you want to store the vmware host files under the /run directory.
+
+
+.EX
+.PP
+.B vmware_host_tmp_t 
+.EE
+
+- Set files with the vmware_host_tmp_t type, if you want to store vmware host temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B vmware_log_t 
+.EE
+
+- Set files with the vmware_log_t type, if you want to treat the data as vmware log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/vmware.*, /var/log/vnetlib.*
+
+.EX
+.PP
+.B vmware_pid_t 
+.EE
+
+- Set files with the vmware_pid_t type, if you want to store the vmware files under the /run directory.
+
+
+.EX
+.PP
+.B vmware_sys_conf_t 
+.EE
+
+- Set files with the vmware_sys_conf_t type, if you want to treat the files as vmware sys configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/vmware/config, /etc/vmware.*(/.*)?, /usr/lib64/vmware/config
+
+.EX
+.PP
+.B vmware_tmp_t 
+.EE
+
+- Set files with the vmware_tmp_t type, if you want to store vmware temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B vmware_tmpfs_t 
+.EE
+
+- Set files with the vmware_tmpfs_t type, if you want to store vmware files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vmware policy is very flexible allowing users to setup their vmware processes in as secure a method as possible.
+.PP 
+The following process types are defined for vmware:
+
+.EX
+.B vmware_t, vmware_host_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vmware(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/vpnc_selinux.8 serefpolicy-3.7.19/man/man8/vpnc_selinux.8
--- nsaserefpolicy/man/man8/vpnc_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/vpnc_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,91 @@
+.TH  "vpnc_selinux"  "8"  "vpnc" "dwalsh@redhat.com" "vpnc SELinux Policy documentation"
+.SH "NAME"
+vpnc_selinux \- Security Enhanced Linux Policy for the vpnc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vpnc policy is very flexible allowing users to setup their vpnc processes in as secure a method as possible.
+.PP 
+The following file types are defined for vpnc:
+
+
+.EX
+.PP
+.B vpnc_exec_t 
+.EE
+
+- Set files with the vpnc_exec_t type, if you want to transition an executable to the vpnc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/vpnc, /usr/bin/openconnect, /sbin/vpnc
+
+.EX
+.PP
+.B vpnc_tmp_t 
+.EE
+
+- Set files with the vpnc_tmp_t type, if you want to store vpnc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B vpnc_var_run_t 
+.EE
+
+- Set files with the vpnc_var_run_t type, if you want to store the vpnc files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vpnc policy is very flexible allowing users to setup their vpnc processes in as secure a method as possible.
+.PP 
+The following process types are defined for vpnc:
+
+.EX
+.B vpnc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vpnc(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/wdmd_selinux.8 serefpolicy-3.7.19/man/man8/wdmd_selinux.8
--- nsaserefpolicy/man/man8/wdmd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/wdmd_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,93 @@
+.TH  "wdmd_selinux"  "8"  "wdmd" "dwalsh@redhat.com" "wdmd SELinux Policy documentation"
+.SH "NAME"
+wdmd_selinux \- Security Enhanced Linux Policy for the wdmd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B wdmd
+(policy for wdmd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux wdmd policy is very flexible allowing users to setup their wdmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for wdmd:
+
+
+.EX
+.PP
+.B wdmd_exec_t 
+.EE
+
+- Set files with the wdmd_exec_t type, if you want to transition an executable to the wdmd_t domain.
+
+
+.EX
+.PP
+.B wdmd_initrc_exec_t 
+.EE
+
+- Set files with the wdmd_initrc_exec_t type, if you want to transition an executable to the wdmd_initrc_t domain.
+
+
+.EX
+.PP
+.B wdmd_var_run_t 
+.EE
+
+- Set files with the wdmd_var_run_t type, if you want to store the wdmd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux wdmd policy is very flexible allowing users to setup their wdmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for wdmd:
+
+.EX
+.B wdmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), wdmd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/webadm_selinux.8 serefpolicy-3.7.19/man/man8/webadm_selinux.8
--- nsaserefpolicy/man/man8/webadm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/webadm_selinux.8	2012-04-24 11:06:45.876312378 +0000
@@ -0,0 +1,65 @@
+.TH  "webadm_selinux"  "8"  "webadm" "mgrepl@redhat.com" "webadm SELinux Policy documentation"
+.SH "NAME"
+webadm_r \- \fBWeb administrator role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the webadm_r role is webadm_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r webadm_r -t webadm_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=webadm_r TYPE=webadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:webadm_r:webadm_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add webadm_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r webadm_r' staff_u 
+
+
+
+SELinux policy also controls which roles can transition to a different role.  
+You can list these rules using the following command.
+
+.B sesearch --role_allow
+
+SELinux policy allows the staff_r role can transition to the webadm_r role.
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/webalizer_selinux.8 serefpolicy-3.7.19/man/man8/webalizer_selinux.8
--- nsaserefpolicy/man/man8/webalizer_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/webalizer_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,117 @@
+.TH  "webalizer_selinux"  "8"  "webalizer" "dwalsh@redhat.com" "webalizer SELinux Policy documentation"
+.SH "NAME"
+webalizer_selinux \- Security Enhanced Linux Policy for the webalizer processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B webalizer
+(Web server log analysis)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux webalizer policy is very flexible allowing users to setup their webalizer processes in as secure a method as possible.
+.PP 
+The following file types are defined for webalizer:
+
+
+.EX
+.PP
+.B webalizer_etc_t 
+.EE
+
+- Set files with the webalizer_etc_t type, if you want to store webalizer files in the /etc directories.
+
+
+.EX
+.PP
+.B webalizer_exec_t 
+.EE
+
+- Set files with the webalizer_exec_t type, if you want to transition an executable to the webalizer_t domain.
+
+
+.EX
+.PP
+.B webalizer_tmp_t 
+.EE
+
+- Set files with the webalizer_tmp_t type, if you want to store webalizer temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B webalizer_usage_t 
+.EE
+
+- Set files with the webalizer_usage_t type, if you want to treat the files as webalizer usage data.
+
+
+.EX
+.PP
+.B webalizer_var_lib_t 
+.EE
+
+- Set files with the webalizer_var_lib_t type, if you want to store the webalizer files under the /var/lib directory.
+
+
+.EX
+.PP
+.B webalizer_write_t 
+.EE
+
+- Set files with the webalizer_write_t type, if you want to treat the files as webalizer read/write content.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux webalizer policy is very flexible allowing users to setup their webalizer processes in as secure a method as possible.
+.PP 
+The following process types are defined for webalizer:
+
+.EX
+.B webalizer_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), webalizer(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/winbind_selinux.8 serefpolicy-3.7.19/man/man8/winbind_selinux.8
--- nsaserefpolicy/man/man8/winbind_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/winbind_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,114 @@
+.TH  "winbind_selinux"  "8"  "winbind" "dwalsh@redhat.com" "winbind SELinux Policy documentation"
+.SH "NAME"
+winbind_selinux \- Security Enhanced Linux Policy for the winbind processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  winbind policy is extremely flexible and has several booleans that allow you to manipulate the policy and run winbind with the tightest access possible.
+
+
+.PP
+If you want to allow Apache to use mod_auth_ntlm_winbin, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_ntlm_winbind 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux winbind policy is very flexible allowing users to setup their winbind processes in as secure a method as possible.
+.PP 
+The following file types are defined for winbind:
+
+
+.EX
+.PP
+.B winbind_exec_t 
+.EE
+
+- Set files with the winbind_exec_t type, if you want to transition an executable to the winbind_t domain.
+
+
+.EX
+.PP
+.B winbind_helper_exec_t 
+.EE
+
+- Set files with the winbind_helper_exec_t type, if you want to transition an executable to the winbind_helper_t domain.
+
+
+.EX
+.PP
+.B winbind_log_t 
+.EE
+
+- Set files with the winbind_log_t type, if you want to treat the data as winbind log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B winbind_var_run_t 
+.EE
+
+- Set files with the winbind_var_run_t type, if you want to store the winbind files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/samba/winbindd_privileged(/.*)?, /var/lib/samba/winbindd_privileged(/.*)?, /var/run/winbindd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux winbind policy is very flexible allowing users to setup their winbind processes in as secure a method as possible.
+.PP 
+The following process types are defined for winbind:
+
+.EX
+.B winbind_helper_t, winbind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), winbind(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/wine_selinux.8 serefpolicy-3.7.19/man/man8/wine_selinux.8
--- nsaserefpolicy/man/man8/wine_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/wine_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,104 @@
+.TH  "wine_selinux"  "8"  "wine" "dwalsh@redhat.com" "wine SELinux Policy documentation"
+.SH "NAME"
+wine_selinux \- Security Enhanced Linux Policy for the wine processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B wine
+(Wine Is Not an Emulator.  Run Windows programs in Linux)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  wine policy is extremely flexible and has several booleans that allow you to manipulate the policy and run wine with the tightest access possible.
+
+
+.PP
+If you want to ignore wine mmap_zero error, you must turn on the wine_mmap_zero_ignore boolean.
+
+.EX
+.B setsebool -P wine_mmap_zero_ignore 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux wine policy is very flexible allowing users to setup their wine processes in as secure a method as possible.
+.PP 
+The following file types are defined for wine:
+
+
+.EX
+.PP
+.B wine_exec_t 
+.EE
+
+- Set files with the wine_exec_t type, if you want to transition an executable to the wine_t domain.
+
+.br
+.TP 5
+Paths: 
+/opt/google/picasa(/.*)?/bin/msiexec, /usr/bin/regedit, /opt/google/picasa(/.*)?/bin/wine.*, /opt/google/picasa(/.*)?/bin/regedit, /opt/google/picasa(/.*)?/bin/notepad, /usr/bin/regsvr32, /usr/bin/notepad, /usr/bin/uninstaller, /opt/google/picasa(/.*)?/bin/uninstaller, /opt/google/picasa(/.*)?/bin/wdi, /opt/google/picasa(/.*)?/bin/regsvr32, /opt/google/picasa(/.*)?/Picasa3/.*exe, /usr/bin/msiexec, /usr/bin/wine.*, /opt/google/picasa(/.*)?/bin/progman, /opt/picasa/wine/bin/wine.*, /opt/cxoffice/bin/wine.*
+
+.EX
+.PP
+.B wine_tmp_t 
+.EE
+
+- Set files with the wine_tmp_t type, if you want to store wine temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux wine policy is very flexible allowing users to setup their wine processes in as secure a method as possible.
+.PP 
+The following process types are defined for wine:
+
+.EX
+.B wine_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), wine(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/wpa_selinux.8 serefpolicy-3.7.19/man/man8/wpa_selinux.8
--- nsaserefpolicy/man/man8/wpa_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/wpa_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,71 @@
+.TH  "wpa_selinux"  "8"  "wpa" "dwalsh@redhat.com" "wpa SELinux Policy documentation"
+.SH "NAME"
+wpa_selinux \- Security Enhanced Linux Policy for the wpa processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux wpa policy is very flexible allowing users to setup their wpa processes in as secure a method as possible.
+.PP 
+The following file types are defined for wpa:
+
+
+.EX
+.PP
+.B wpa_cli_exec_t 
+.EE
+
+- Set files with the wpa_cli_exec_t type, if you want to transition an executable to the wpa_cli_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux wpa policy is very flexible allowing users to setup their wpa processes in as secure a method as possible.
+.PP 
+The following process types are defined for wpa:
+
+.EX
+.B wpa_cli_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), wpa(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/xauth_selinux.8 serefpolicy-3.7.19/man/man8/xauth_selinux.8
--- nsaserefpolicy/man/man8/xauth_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/xauth_selinux.8	2012-03-20 22:37:14.363457973 +0000
@@ -0,0 +1,95 @@
+.TH  "xauth_selinux"  "8"  "xauth" "dwalsh@redhat.com" "xauth SELinux Policy documentation"
+.SH "NAME"
+xauth_selinux \- Security Enhanced Linux Policy for the xauth processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xauth policy is very flexible allowing users to setup their xauth processes in as secure a method as possible.
+.PP 
+The following file types are defined for xauth:
+
+
+.EX
+.PP
+.B xauth_exec_t 
+.EE
+
+- Set files with the xauth_exec_t type, if you want to transition an executable to the xauth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/xauth, /usr/X11R6/bin/xauth
+
+.EX
+.PP
+.B xauth_home_t 
+.EE
+
+- Set files with the xauth_home_t type, if you want to store xauth files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/nxserver/home/\.xauth.*, /root/\.Xauth.*, /var/lib/nxserver/home/\.Xauthority.*, /root/\.serverauth.*, /var/lib/pqsql/\.Xauthority.*, /root/\.xauth.*, /var/lib/pqsql/\.xauth.*
+
+.EX
+.PP
+.B xauth_tmp_t 
+.EE
+
+- Set files with the xauth_tmp_t type, if you want to store xauth temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xauth policy is very flexible allowing users to setup their xauth processes in as secure a method as possible.
+.PP 
+The following process types are defined for xauth:
+
+.EX
+.B xauth_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xauth(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/xdm_selinux.8 serefpolicy-3.7.19/man/man8/xdm_selinux.8
--- nsaserefpolicy/man/man8/xdm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/xdm_selinux.8	2012-03-20 22:37:14.364457950 +0000
@@ -0,0 +1,219 @@
+.TH  "xdm_selinux"  "8"  "xdm" "dwalsh@redhat.com" "xdm SELinux Policy documentation"
+.SH "NAME"
+xdm_selinux \- Security Enhanced Linux Policy for the xdm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xdm policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xdm with the tightest access possible.
+
+
+.PP
+If you want to allow xdm logins as sysad, you must turn on the xdm_sysadm_login boolean.
+
+.EX
+.B setsebool -P xdm_sysadm_login 1
+.EE
+
+.PP
+If you want to allows xdm to execute bootloade, you must turn on the xdm_exec_bootloader boolean.
+
+.EX
+.B setsebool -P xdm_exec_bootloader 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
+.PP 
+The following file types are defined for xdm:
+
+
+.EX
+.PP
+.B xdm_etc_t 
+.EE
+
+- Set files with the xdm_etc_t type, if you want to store xdm files in the /etc directories.
+
+
+.EX
+.PP
+.B xdm_exec_t 
+.EE
+
+- Set files with the xdm_exec_t type, if you want to transition an executable to the xdm_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/slim, /usr/(s)?bin/lxdm, /usr/X11R6/bin/[xgkw]dm, /usr/(s)?bin/gdm-binary, /usr/(s)?bin/[xgkw]dm, /usr/(s)?bin/lxdm-binary, /usr/bin/gpe-dm, /opt/kde3/bin/kdm
+
+.EX
+.PP
+.B xdm_home_t 
+.EE
+
+- Set files with the xdm_home_t type, if you want to store xdm files in the users home directory.
+
+
+.EX
+.PP
+.B xdm_lock_t 
+.EE
+
+- Set files with the xdm_lock_t type, if you want to treat the files as xdm lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B xdm_log_t 
+.EE
+
+- Set files with the xdm_log_t type, if you want to treat the data as xdm log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/slim\.log.*, /var/log/lxdm\.log.*, /var/log/gdm(/.*)?
+
+.EX
+.PP
+.B xdm_rw_etc_t 
+.EE
+
+- Set files with the xdm_rw_etc_t type, if you want to store xdm rw files in the /etc directories.
+
+
+.EX
+.PP
+.B xdm_spool_t 
+.EE
+
+- Set files with the xdm_spool_t type, if you want to store the xdm files under the /var/spool directory.
+
+
+.EX
+.PP
+.B xdm_tmp_t 
+.EE
+
+- Set files with the xdm_tmp_t type, if you want to store xdm temporary files in the /tmp directories.
+
+.br
+.TP 5
+Paths: 
+/tmp/\.X0-lock, /tmp/\.X11-unix(/.*)?, /tmp/\.ICE-unix(/.*)?
+
+.EX
+.PP
+.B xdm_tmpfs_t 
+.EE
+
+- Set files with the xdm_tmpfs_t type, if you want to store xdm files on a tmpfs file system.
+
+
+.EX
+.PP
+.B xdm_var_lib_t 
+.EE
+
+- Set files with the xdm_var_lib_t type, if you want to store the xdm files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/lxdm(/.*)?, /var/lib/[gxkw]dm(/.*)?, /var/cache/gdm(/.*)?
+
+.EX
+.PP
+.B xdm_var_run_t 
+.EE
+
+- Set files with the xdm_var_run_t type, if you want to store the xdm files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/kdm(/.*)?, /var/run/slim.*, /var/run/gdm(/.*)?, /var/run/lxdm\.auth, /var/run/xauth(/.*)?, /var/run/xdmctl(/.*)?, /var/run/[gx]dm\.pid, /usr/lib(64)?/qt-.*/etc/settings(/.*)?, /var/run/lxdm(/*.)?, /var/run/slim(/.*)?, /var/run/gdm_socket, /etc/kde3?/kdm/backgroundrc, /var/run/lxdm\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
+.PP 
+The following port types are defined for xdm:
+
+.EX
+.TP 5
+.B xdmcp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
+.PP 
+The following process types are defined for xdm:
+
+.EX
+.B xdm_t, xdm_dbusd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xdm(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/xenconsoled_selinux.8 serefpolicy-3.7.19/man/man8/xenconsoled_selinux.8
--- nsaserefpolicy/man/man8/xenconsoled_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/xenconsoled_selinux.8	2012-03-20 22:37:14.364457950 +0000
@@ -0,0 +1,79 @@
+.TH  "xenconsoled_selinux"  "8"  "xenconsoled" "dwalsh@redhat.com" "xenconsoled SELinux Policy documentation"
+.SH "NAME"
+xenconsoled_selinux \- Security Enhanced Linux Policy for the xenconsoled processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xenconsoled policy is very flexible allowing users to setup their xenconsoled processes in as secure a method as possible.
+.PP 
+The following file types are defined for xenconsoled:
+
+
+.EX
+.PP
+.B xenconsoled_exec_t 
+.EE
+
+- Set files with the xenconsoled_exec_t type, if you want to transition an executable to the xenconsoled_t domain.
+
+
+.EX
+.PP
+.B xenconsoled_var_run_t 
+.EE
+
+- Set files with the xenconsoled_var_run_t type, if you want to store the xenconsoled files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xenconsoled policy is very flexible allowing users to setup their xenconsoled processes in as secure a method as possible.
+.PP 
+The following process types are defined for xenconsoled:
+
+.EX
+.B xenconsoled_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xenconsoled(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/xend_selinux.8 serefpolicy-3.7.19/man/man8/xend_selinux.8
--- nsaserefpolicy/man/man8/xend_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/xend_selinux.8	2012-03-20 22:37:14.364457950 +0000
@@ -0,0 +1,176 @@
+.TH  "xend_selinux"  "8"  "xend" "dwalsh@redhat.com" "xend SELinux Policy documentation"
+.SH "NAME"
+xend_selinux \- Security Enhanced Linux Policy for the xend processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xend policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xend with the tightest access possible.
+
+
+.PP
+If you want to allow xen to manage nfs file, you must turn on the xen_use_nfs boolean.
+
+.EX
+.B setsebool -P xen_use_nfs 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
+.PP 
+The following file types are defined for xend:
+
+
+.EX
+.PP
+.B xen_devpts_t 
+.EE
+
+- Set files with the xen_devpts_t type, if you want to treat the files as xen devpts data.
+
+
+.EX
+.PP
+.B xen_image_t 
+.EE
+
+- Set files with the xen_image_t type, if you want to treat the files as xen image data.
+
+.br
+.TP 5
+Paths: 
+/xen(/.*)?, /var/lib/xen/images(/.*)?
+
+.EX
+.PP
+.B xend_exec_t 
+.EE
+
+- Set files with the xend_exec_t type, if you want to transition an executable to the xend_t domain.
+
+
+.EX
+.PP
+.B xend_tmp_t 
+.EE
+
+- Set files with the xend_tmp_t type, if you want to store xend temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B xend_var_lib_t 
+.EE
+
+- Set files with the xend_var_lib_t type, if you want to store the xend files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/xen(/.*)?, /var/lib/xend(/.*)?
+
+.EX
+.PP
+.B xend_var_log_t 
+.EE
+
+- Set files with the xend_var_log_t type, if you want to treat the data as xend var log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/xend\.log, /var/log/xen(/.*)?, /var/log/xen-hotplug\.log, /var/log/xend-debug\.log
+
+.EX
+.PP
+.B xend_var_run_t 
+.EE
+
+- Set files with the xend_var_run_t type, if you want to store the xend files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/xenner(/.*)?, /var/run/xend(/.*)?, /var/run/xend\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
+.PP 
+The following port types are defined for xend:
+
+.EX
+.TP 5
+.B xen_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
+.PP 
+The following process types are defined for xend:
+
+.EX
+.B xend_t, xenstored_t, xenconsoled_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xend(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/xenstored_selinux.8 serefpolicy-3.7.19/man/man8/xenstored_selinux.8
--- nsaserefpolicy/man/man8/xenstored_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/xenstored_selinux.8	2012-03-20 22:37:14.364457950 +0000
@@ -0,0 +1,107 @@
+.TH  "xenstored_selinux"  "8"  "xenstored" "dwalsh@redhat.com" "xenstored SELinux Policy documentation"
+.SH "NAME"
+xenstored_selinux \- Security Enhanced Linux Policy for the xenstored processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xenstored policy is very flexible allowing users to setup their xenstored processes in as secure a method as possible.
+.PP 
+The following file types are defined for xenstored:
+
+
+.EX
+.PP
+.B xenstored_exec_t 
+.EE
+
+- Set files with the xenstored_exec_t type, if you want to transition an executable to the xenstored_t domain.
+
+
+.EX
+.PP
+.B xenstored_tmp_t 
+.EE
+
+- Set files with the xenstored_tmp_t type, if you want to store xenstored temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B xenstored_var_lib_t 
+.EE
+
+- Set files with the xenstored_var_lib_t type, if you want to store the xenstored files under the /var/lib directory.
+
+
+.EX
+.PP
+.B xenstored_var_log_t 
+.EE
+
+- Set files with the xenstored_var_log_t type, if you want to treat the data as xenstored var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B xenstored_var_run_t 
+.EE
+
+- Set files with the xenstored_var_run_t type, if you want to store the xenstored files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/xenstore\.pid, /var/run/xenstored(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xenstored policy is very flexible allowing users to setup their xenstored processes in as secure a method as possible.
+.PP 
+The following process types are defined for xenstored:
+
+.EX
+.B xenstored_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xenstored(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/xfs_selinux.8 serefpolicy-3.7.19/man/man8/xfs_selinux.8
--- nsaserefpolicy/man/man8/xfs_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/xfs_selinux.8	2012-03-20 22:37:14.364457950 +0000
@@ -0,0 +1,123 @@
+.TH  "xfs_selinux"  "8"  "xfs" "dwalsh@redhat.com" "xfs SELinux Policy documentation"
+.SH "NAME"
+xfs_selinux \- Security Enhanced Linux Policy for the xfs processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B xfs
+(X Windows Font Server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xfs policy is very flexible allowing users to setup their xfs processes in as secure a method as possible.
+.PP 
+The following file types are defined for xfs:
+
+
+.EX
+.PP
+.B xfs_exec_t 
+.EE
+
+- Set files with the xfs_exec_t type, if you want to transition an executable to the xfs_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/xfstt, /usr/X11R6/bin/xfs-xtt, /usr/bin/xfs, /usr/X11R6/bin/xfs
+
+.EX
+.PP
+.B xfs_tmp_t 
+.EE
+
+- Set files with the xfs_tmp_t type, if you want to store xfs temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B xfs_var_run_t 
+.EE
+
+- Set files with the xfs_var_run_t type, if you want to store the xfs files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux xfs policy is very flexible allowing users to setup their xfs processes in as secure a method as possible.
+.PP 
+The following port types are defined for xfs:
+
+.EX
+.TP 5
+.B xfs_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xfs policy is very flexible allowing users to setup their xfs processes in as secure a method as possible.
+.PP 
+The following process types are defined for xfs:
+
+.EX
+.B xfs_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xfs(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/xguest_selinux.8 serefpolicy-3.7.19/man/man8/xguest_selinux.8
--- nsaserefpolicy/man/man8/xguest_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/xguest_selinux.8	2012-04-24 11:06:45.876312378 +0000
@@ -0,0 +1,210 @@
+.TH  "xguest_selinux"  "8"  "xguest" "mgrepl@redhat.com" "xguest SELinux Policy documentation"
+.SH "NAME"
+xguest_u \- \fBLeast priviledged X user\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBxguest_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBxguest_r\fP.  The
+default role has a default type, \fBxguest_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B xguest_u:xguest_r:xguest_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the xguest_u user, you would execute:
+
+.B semanage login -m -s xguest_u __default__
+
+
+.SH USER DESCRIPTION
+
+The SELinux user xguest_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux type xguest_t is not allowed to execute sudo. 
+
+.SH X WINDOWS LOGIN
+
+The SELinux user xguest_u is able to X Windows login.
+
+.SH NETWORK
+
+.TP
+The SELinux user xguest_u is able to connect to the following tcp ports.
+
+.B dns_port_t: 53
+
+.B ldap_port_t: 389,636,3268
+
+.B soundd_port_t: 8000,9433,16001
+
+.B ipp_port_t: 631,8610-8614
+
+.B transproxy_port_t: 8081
+
+.B all ports with out defined types
+
+.B ftp_port_t: 21,990
+
+.B kerberos_port_t: 88,750
+
+.B speech_port_t: 8036
+
+.B http_cache_port_t: 3128,8080,8118,8123,10001-10010
+
+.B http_port_t: 80,443,488,8008,8009,8443
+
+.B ocsp_port_t: 9080
+
+.B flash_port_t: 843,1935
+
+.B pulseaudio_port_t: 4713
+
+.B jabber_client_port_t: 5222,5223
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xguest_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xguest_t with the tightest access possible.
+
+
+.PP
+If you want to allow xguest to configure Network Manager and connect to apache ports, you must turn on the xguest_connect_network boolean.
+
+.EX
+.B setsebool -P xguest_connect_network 1
+.EE
+
+.PP
+If you want to allow users to connect to mysql, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow xguest to use blue tooth devices, you must turn on the xguest_use_bluetooth boolean.
+
+.EX
+.B setsebool -P xguest_use_bluetooth 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow xguest users to mount removable media, you must turn on the xguest_mount_media boolean.
+
+.EX
+.B setsebool -P xguest_mount_media 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user xguest_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when xguest_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny xguest_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow xguest_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user xguest_t can execute without transitioning:
+
+.B sesearch -A -s xguest_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow xguest_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user xguest_t can execute and transition:
+
+.B $ sesearch -A -s xguest_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/xm_selinux.8 serefpolicy-3.7.19/man/man8/xm_selinux.8
--- nsaserefpolicy/man/man8/xm_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/xm_selinux.8	2012-03-20 22:37:14.364457950 +0000
@@ -0,0 +1,75 @@
+.TH  "xm_selinux"  "8"  "xm" "dwalsh@redhat.com" "xm SELinux Policy documentation"
+.SH "NAME"
+xm_selinux \- Security Enhanced Linux Policy for the xm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xm policy is very flexible allowing users to setup their xm processes in as secure a method as possible.
+.PP 
+The following file types are defined for xm:
+
+
+.EX
+.PP
+.B xm_exec_t 
+.EE
+
+- Set files with the xm_exec_t type, if you want to transition an executable to the xm_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/virsh, /usr/sbin/xm
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xm policy is very flexible allowing users to setup their xm processes in as secure a method as possible.
+.PP 
+The following process types are defined for xm:
+
+.EX
+.B xm_t, xm_ssh_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xm(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/xserver_selinux.8 serefpolicy-3.7.19/man/man8/xserver_selinux.8
--- nsaserefpolicy/man/man8/xserver_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/xserver_selinux.8	2012-03-20 22:37:14.364457950 +0000
@@ -0,0 +1,176 @@
+.TH  "xserver_selinux"  "8"  "xserver" "dwalsh@redhat.com" "xserver SELinux Policy documentation"
+.SH "NAME"
+xserver_selinux \- Security Enhanced Linux Policy for the xserver processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B xserver
+(X Windows Server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xserver policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xserver with the tightest access possible.
+
+
+.PP
+If you want to allow virtual machine to interact with the xserve, you must turn on the virt_use_xserver boolean.
+
+.EX
+.B setsebool -P virt_use_xserver 1
+.EE
+
+.PP
+If you want to support X userspace object manage, you must turn on the xserver_object_manager boolean.
+
+.EX
+.B setsebool -P xserver_object_manager 1
+.EE
+
+.PP
+If you want to allows XServer to execute writable memor, you must turn on the allow_xserver_execmem boolean.
+
+.EX
+.B setsebool -P allow_xserver_execmem 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
+.PP 
+The following file types are defined for xserver:
+
+
+.EX
+.PP
+.B xserver_exec_t 
+.EE
+
+- Set files with the xserver_exec_t type, if you want to transition an executable to the xserver_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/Xair, /usr/bin/Xephyr, /usr/X11R6/bin/Xwrapper, /usr/X11R6/bin/XFree86, /etc/init\.d/xfree86-common, /usr/X11R6/bin/Xorg, /usr/X11R6/bin/Xipaq, /usr/bin/Xorg, /usr/X11R6/bin/X
+
+.EX
+.PP
+.B xserver_log_t 
+.EE
+
+- Set files with the xserver_log_t type, if you want to treat the data as xserver log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/usr/var/[xgkw]dm(/.*)?, /var/[xgk]dm(/.*)?, /var/log/nvidia-installer\.log.*, /var/log/XFree86.*, /var/log/Xorg.*, /var/log/[kw]dm\.log.*
+
+.EX
+.PP
+.B xserver_tmpfs_t 
+.EE
+
+- Set files with the xserver_tmpfs_t type, if you want to store xserver files on a tmpfs file system.
+
+
+.EX
+.PP
+.B xserver_var_lib_t 
+.EE
+
+- Set files with the xserver_var_lib_t type, if you want to store the xserver files under the /var/lib directory.
+
+
+.EX
+.PP
+.B xserver_var_run_t 
+.EE
+
+- Set files with the xserver_var_run_t type, if you want to store the xserver files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/xorg(/.*)?, /var/run/video.rom
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
+.PP 
+The following port types are defined for xserver:
+
+.EX
+.TP 5
+.B xserver_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
+.PP 
+The following process types are defined for xserver:
+
+.EX
+.B xserver_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xserver(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ypbind_selinux.8 serefpolicy-3.7.19/man/man8/ypbind_selinux.8
--- nsaserefpolicy/man/man8/ypbind_selinux.8	2011-03-17 07:21:23.217851002 +0000
+++ serefpolicy-3.7.19/man/man8/ypbind_selinux.8	2012-03-20 22:37:14.365457927 +0000
@@ -1,19 +1,114 @@
-.TH  "ypbind_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "ypbind Selinux Policy documentation"
+.TH  "ypbind_selinux"  "8"  "ypbind" "dwalsh@redhat.com" "ypbind SELinux Policy documentation"
 .SH "NAME"
-ypbind_selinux \- Security Enhanced Linux Policy for NIS.
+ypbind_selinux \- Security Enhanced Linux Policy for the ypbind processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the system via flexible mandatory access
-control. SELinux can be setup deny NIS from working, since it requires daemons to be allowed greater access to the network.  
+
+
+
 .SH BOOLEANS
-.TP
-You must set the allow_ypbind boolean to allow your system to work properly in a NIS environment.
-.TP
-setsebool -P allow_ypbind 1
-.TP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
+SELinux policy is customizable based on least access required.  ypbind policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ypbind with the tightest access possible.
+
+
+.PP
+If you want to allow system to run with NI, you must turn on the allow_ypbind boolean.
+
+.EX
+.B setsebool -P allow_ypbind 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ypbind policy is very flexible allowing users to setup their ypbind processes in as secure a method as possible.
+.PP 
+The following file types are defined for ypbind:
+
+
+.EX
+.PP
+.B ypbind_exec_t 
+.EE
+
+- Set files with the ypbind_exec_t type, if you want to transition an executable to the ypbind_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/ypbind, /usr/sbin/ypbind
+
+.EX
+.PP
+.B ypbind_initrc_exec_t 
+.EE
+
+- Set files with the ypbind_initrc_exec_t type, if you want to transition an executable to the ypbind_initrc_t domain.
+
+
+.EX
+.PP
+.B ypbind_tmp_t 
+.EE
+
+- Set files with the ypbind_tmp_t type, if you want to store ypbind temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ypbind_var_run_t 
+.EE
+
+- Set files with the ypbind_var_run_t type, if you want to store the ypbind files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ypbind policy is very flexible allowing users to setup their ypbind processes in as secure a method as possible.
+.PP 
+The following process types are defined for ypbind:
+
+.EX
+.B ypbind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
 .SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+This manual page was autogenerated by genman.py.
 
 .SH "SEE ALSO"
-selinux(8), ypbind(8), chcon(1), setsebool(8)
+selinux(8), ypbind(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/yppasswdd_selinux.8 serefpolicy-3.7.19/man/man8/yppasswdd_selinux.8
--- nsaserefpolicy/man/man8/yppasswdd_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/yppasswdd_selinux.8	2012-03-20 22:37:14.365457927 +0000
@@ -0,0 +1,79 @@
+.TH  "yppasswdd_selinux"  "8"  "yppasswdd" "dwalsh@redhat.com" "yppasswdd SELinux Policy documentation"
+.SH "NAME"
+yppasswdd_selinux \- Security Enhanced Linux Policy for the yppasswdd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux yppasswdd policy is very flexible allowing users to setup their yppasswdd processes in as secure a method as possible.
+.PP 
+The following file types are defined for yppasswdd:
+
+
+.EX
+.PP
+.B yppasswdd_exec_t 
+.EE
+
+- Set files with the yppasswdd_exec_t type, if you want to transition an executable to the yppasswdd_t domain.
+
+
+.EX
+.PP
+.B yppasswdd_var_run_t 
+.EE
+
+- Set files with the yppasswdd_var_run_t type, if you want to store the yppasswdd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux yppasswdd policy is very flexible allowing users to setup their yppasswdd processes in as secure a method as possible.
+.PP 
+The following process types are defined for yppasswdd:
+
+.EX
+.B yppasswdd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), yppasswdd(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ypserv_selinux.8 serefpolicy-3.7.19/man/man8/ypserv_selinux.8
--- nsaserefpolicy/man/man8/ypserv_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ypserv_selinux.8	2012-03-20 22:37:14.365457927 +0000
@@ -0,0 +1,95 @@
+.TH  "ypserv_selinux"  "8"  "ypserv" "dwalsh@redhat.com" "ypserv SELinux Policy documentation"
+.SH "NAME"
+ypserv_selinux \- Security Enhanced Linux Policy for the ypserv processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ypserv policy is very flexible allowing users to setup their ypserv processes in as secure a method as possible.
+.PP 
+The following file types are defined for ypserv:
+
+
+.EX
+.PP
+.B ypserv_conf_t 
+.EE
+
+- Set files with the ypserv_conf_t type, if you want to treat the files as ypserv configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B ypserv_exec_t 
+.EE
+
+- Set files with the ypserv_exec_t type, if you want to transition an executable to the ypserv_t domain.
+
+
+.EX
+.PP
+.B ypserv_tmp_t 
+.EE
+
+- Set files with the ypserv_tmp_t type, if you want to store ypserv temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ypserv_var_run_t 
+.EE
+
+- Set files with the ypserv_var_run_t type, if you want to store the ypserv files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ypserv policy is very flexible allowing users to setup their ypserv processes in as secure a method as possible.
+.PP 
+The following process types are defined for ypserv:
+
+.EX
+.B ypserv_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ypserv(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/ypxfr_selinux.8 serefpolicy-3.7.19/man/man8/ypxfr_selinux.8
--- nsaserefpolicy/man/man8/ypxfr_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/ypxfr_selinux.8	2012-03-20 22:37:14.365457927 +0000
@@ -0,0 +1,83 @@
+.TH  "ypxfr_selinux"  "8"  "ypxfr" "dwalsh@redhat.com" "ypxfr SELinux Policy documentation"
+.SH "NAME"
+ypxfr_selinux \- Security Enhanced Linux Policy for the ypxfr processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ypxfr policy is very flexible allowing users to setup their ypxfr processes in as secure a method as possible.
+.PP 
+The following file types are defined for ypxfr:
+
+
+.EX
+.PP
+.B ypxfr_exec_t 
+.EE
+
+- Set files with the ypxfr_exec_t type, if you want to transition an executable to the ypxfr_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/yp/ypxfr, /usr/sbin/rpc\.ypxfrd, /usr/lib64/yp/ypxfr
+
+.EX
+.PP
+.B ypxfr_var_run_t 
+.EE
+
+- Set files with the ypxfr_var_run_t type, if you want to store the ypxfr files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ypxfr policy is very flexible allowing users to setup their ypxfr processes in as secure a method as possible.
+.PP 
+The following process types are defined for ypxfr:
+
+.EX
+.B ypxfr_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ypxfr(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/zabbix_selinux.8 serefpolicy-3.7.19/man/man8/zabbix_selinux.8
--- nsaserefpolicy/man/man8/zabbix_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/zabbix_selinux.8	2012-03-20 22:37:14.365457927 +0000
@@ -0,0 +1,101 @@
+.TH  "zabbix_selinux"  "8"  "zabbix" "dwalsh@redhat.com" "zabbix SELinux Policy documentation"
+.SH "NAME"
+zabbix_selinux \- Security Enhanced Linux Policy for the zabbix processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B zabbix
+(Distributed infrastructure monitoring)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux zabbix policy is very flexible allowing users to setup their zabbix processes in as secure a method as possible.
+.PP 
+The following file types are defined for zabbix:
+
+
+.EX
+.PP
+.B zabbix_exec_t 
+.EE
+
+- Set files with the zabbix_exec_t type, if you want to transition an executable to the zabbix_t domain.
+
+
+.EX
+.PP
+.B zabbix_initrc_exec_t 
+.EE
+
+- Set files with the zabbix_initrc_exec_t type, if you want to transition an executable to the zabbix_initrc_t domain.
+
+
+.EX
+.PP
+.B zabbix_log_t 
+.EE
+
+- Set files with the zabbix_log_t type, if you want to treat the data as zabbix log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zabbix_var_run_t 
+.EE
+
+- Set files with the zabbix_var_run_t type, if you want to store the zabbix files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux zabbix policy is very flexible allowing users to setup their zabbix processes in as secure a method as possible.
+.PP 
+The following process types are defined for zabbix:
+
+.EX
+.B zabbix_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), zabbix(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/zarafa_selinux.8 serefpolicy-3.7.19/man/man8/zarafa_selinux.8
--- nsaserefpolicy/man/man8/zarafa_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/zarafa_selinux.8	2012-03-20 22:37:14.365457927 +0000
@@ -0,0 +1,319 @@
+.TH  "zarafa_selinux"  "8"  "zarafa" "dwalsh@redhat.com" "zarafa SELinux Policy documentation"
+.SH "NAME"
+zarafa_selinux \- Security Enhanced Linux Policy for the zarafa processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B zarafa
+(Zarafa collaboration platform)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux zarafa policy is very flexible allowing users to setup their zarafa processes in as secure a method as possible.
+.PP 
+The following file types are defined for zarafa:
+
+
+.EX
+.PP
+.B zarafa_deliver_exec_t 
+.EE
+
+- Set files with the zarafa_deliver_exec_t type, if you want to transition an executable to the zarafa_deliver_t domain.
+
+
+.EX
+.PP
+.B zarafa_deliver_log_t 
+.EE
+
+- Set files with the zarafa_deliver_log_t type, if you want to treat the data as zarafa deliver log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_deliver_tmp_t 
+.EE
+
+- Set files with the zarafa_deliver_tmp_t type, if you want to store zarafa deliver temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zarafa_deliver_var_run_t 
+.EE
+
+- Set files with the zarafa_deliver_var_run_t type, if you want to store the zarafa deliver files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_etc_t 
+.EE
+
+- Set files with the zarafa_etc_t type, if you want to store zarafa files in the /etc directories.
+
+
+.EX
+.PP
+.B zarafa_gateway_exec_t 
+.EE
+
+- Set files with the zarafa_gateway_exec_t type, if you want to transition an executable to the zarafa_gateway_t domain.
+
+
+.EX
+.PP
+.B zarafa_gateway_log_t 
+.EE
+
+- Set files with the zarafa_gateway_log_t type, if you want to treat the data as zarafa gateway log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_gateway_var_run_t 
+.EE
+
+- Set files with the zarafa_gateway_var_run_t type, if you want to store the zarafa gateway files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_ical_exec_t 
+.EE
+
+- Set files with the zarafa_ical_exec_t type, if you want to transition an executable to the zarafa_ical_t domain.
+
+
+.EX
+.PP
+.B zarafa_ical_log_t 
+.EE
+
+- Set files with the zarafa_ical_log_t type, if you want to treat the data as zarafa ical log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_ical_var_run_t 
+.EE
+
+- Set files with the zarafa_ical_var_run_t type, if you want to store the zarafa ical files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_indexer_exec_t 
+.EE
+
+- Set files with the zarafa_indexer_exec_t type, if you want to transition an executable to the zarafa_indexer_t domain.
+
+
+.EX
+.PP
+.B zarafa_indexer_log_t 
+.EE
+
+- Set files with the zarafa_indexer_log_t type, if you want to treat the data as zarafa indexer log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_indexer_tmp_t 
+.EE
+
+- Set files with the zarafa_indexer_tmp_t type, if you want to store zarafa indexer temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zarafa_indexer_var_run_t 
+.EE
+
+- Set files with the zarafa_indexer_var_run_t type, if you want to store the zarafa indexer files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_monitor_exec_t 
+.EE
+
+- Set files with the zarafa_monitor_exec_t type, if you want to transition an executable to the zarafa_monitor_t domain.
+
+
+.EX
+.PP
+.B zarafa_monitor_log_t 
+.EE
+
+- Set files with the zarafa_monitor_log_t type, if you want to treat the data as zarafa monitor log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_monitor_var_run_t 
+.EE
+
+- Set files with the zarafa_monitor_var_run_t type, if you want to store the zarafa monitor files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_server_exec_t 
+.EE
+
+- Set files with the zarafa_server_exec_t type, if you want to transition an executable to the zarafa_server_t domain.
+
+
+.EX
+.PP
+.B zarafa_server_log_t 
+.EE
+
+- Set files with the zarafa_server_log_t type, if you want to treat the data as zarafa server log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_server_tmp_t 
+.EE
+
+- Set files with the zarafa_server_tmp_t type, if you want to store zarafa server temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zarafa_server_var_run_t 
+.EE
+
+- Set files with the zarafa_server_var_run_t type, if you want to store the zarafa server files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/zarafa, /var/run/zarafa-server\.pid
+
+.EX
+.PP
+.B zarafa_share_t 
+.EE
+
+- Set files with the zarafa_share_t type, if you want to treat the files as zarafa share data.
+
+
+.EX
+.PP
+.B zarafa_spooler_exec_t 
+.EE
+
+- Set files with the zarafa_spooler_exec_t type, if you want to transition an executable to the zarafa_spooler_t domain.
+
+
+.EX
+.PP
+.B zarafa_spooler_log_t 
+.EE
+
+- Set files with the zarafa_spooler_log_t type, if you want to treat the data as zarafa spooler log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_spooler_var_run_t 
+.EE
+
+- Set files with the zarafa_spooler_var_run_t type, if you want to store the zarafa spooler files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_var_lib_t 
+.EE
+
+- Set files with the zarafa_var_lib_t type, if you want to store the zarafa files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/zarafa-webaccess(/.*)?, /var/lib/zarafa(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux zarafa policy is very flexible allowing users to setup their zarafa processes in as secure a method as possible.
+.PP 
+The following port types are defined for zarafa:
+
+.EX
+.TP 5
+.B zarafa_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux zarafa policy is very flexible allowing users to setup their zarafa processes in as secure a method as possible.
+.PP 
+The following process types are defined for zarafa:
+
+.EX
+.B zarafa_gateway_t, zarafa_spooler_t, zarafa_deliver_t, zarafa_monitor_t, zarafa_indexer_t, zarafa_server_t, zarafa_ical_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), zarafa(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/zebra_selinux.8 serefpolicy-3.7.19/man/man8/zebra_selinux.8
--- nsaserefpolicy/man/man8/zebra_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/zebra_selinux.8	2012-03-20 22:37:14.365457927 +0000
@@ -0,0 +1,178 @@
+.TH  "zebra_selinux"  "8"  "zebra" "dwalsh@redhat.com" "zebra SELinux Policy documentation"
+.SH "NAME"
+zebra_selinux \- Security Enhanced Linux Policy for the zebra processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B zebra
+(Zebra border gateway protocol network routing service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  zebra policy is extremely flexible and has several booleans that allow you to manipulate the policy and run zebra with the tightest access possible.
+
+
+.PP
+If you want to allow zebra daemon to write it configuration file, you must turn on the allow_zebra_write_config boolean.
+
+.EX
+.B setsebool -P allow_zebra_write_config 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
+.PP 
+The following file types are defined for zebra:
+
+
+.EX
+.PP
+.B zebra_conf_t 
+.EE
+
+- Set files with the zebra_conf_t type, if you want to treat the files as zebra configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/zebra(/.*)?, /etc/quagga(/.*)?
+
+.EX
+.PP
+.B zebra_exec_t 
+.EE
+
+- Set files with the zebra_exec_t type, if you want to transition an executable to the zebra_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/zebra, /usr/sbin/rip.*, /usr/sbin/bgpd, /usr/sbin/ospf.*
+
+.EX
+.PP
+.B zebra_initrc_exec_t 
+.EE
+
+- Set files with the zebra_initrc_exec_t type, if you want to transition an executable to the zebra_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/ripngd, /etc/rc\.d/init\.d/zebra, /etc/rc\.d/init\.d/ripd, /etc/rc\.d/init\.d/bgpd, /etc/rc\.d/init\.d/ospf6d, /etc/rc\.d/init\.d/ospfd
+
+.EX
+.PP
+.B zebra_log_t 
+.EE
+
+- Set files with the zebra_log_t type, if you want to treat the data as zebra log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/zebra(/.*)?, /var/log/quagga(/.*)?
+
+.EX
+.PP
+.B zebra_tmp_t 
+.EE
+
+- Set files with the zebra_tmp_t type, if you want to store zebra temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zebra_var_run_t 
+.EE
+
+- Set files with the zebra_var_run_t type, if you want to store the zebra files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/\.zserv, /var/run/\.zebra, /var/run/quagga(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
+.PP 
+The following port types are defined for zebra:
+
+.EX
+.TP 5
+.B zebra_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
+.PP 
+The following process types are defined for zebra:
+
+.EX
+.B zebra_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), zebra(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --exclude-from=exclude -N -u -r nsaserefpolicy/man/man8/zos_selinux.8 serefpolicy-3.7.19/man/man8/zos_selinux.8
--- nsaserefpolicy/man/man8/zos_selinux.8	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/man/man8/zos_selinux.8	2012-03-20 22:37:14.365457927 +0000
@@ -0,0 +1,77 @@
+.TH  "zos_selinux"  "8"  "zos" "dwalsh@redhat.com" "zos SELinux Policy documentation"
+.SH "NAME"
+zos_selinux \- Security Enhanced Linux Policy for the zos processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B zos
+(policy for z/OS Remote-services Audit dispatcher plugin)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux zos policy is very flexible allowing users to setup their zos processes in as secure a method as possible.
+.PP 
+The following file types are defined for zos:
+
+
+.EX
+.PP
+.B zos_remote_exec_t 
+.EE
+
+- Set files with the zos_remote_exec_t type, if you want to transition an executable to the zos_remote_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux zos policy is very flexible allowing users to setup their zos processes in as secure a method as possible.
+.PP 
+The following process types are defined for zos:
+
+.EX
+.B zos_remote_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), zos(8), semanage(8), restorecon(8), chcon(1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/constraints serefpolicy-3.7.19/policy/constraints
--- nsaserefpolicy/policy/constraints	2011-03-17 07:21:20.274851001 +0000
+++ serefpolicy-3.7.19/policy/constraints	2011-08-30 16:11:27.696160002 +0000
@@ -107,7 +107,15 @@
 
 constrain process dyntransition
 (
-	u1 == u2 and r1 == r2
+	u1 == u2
+	or ( t1 == can_change_process_identity and t2 == process_user_target )
+
+);
+
+constrain process dyntransition
+(
+	r1 == r2
+	or ( t1 == can_change_process_identity and t2 == process_user_target )
 );
 
 # These permissions do not have ubac constraints:
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/flask/access_vectors serefpolicy-3.7.19/policy/flask/access_vectors
--- nsaserefpolicy/policy/flask/access_vectors	2011-03-17 07:21:20.286851001 +0000
+++ serefpolicy-3.7.19/policy/flask/access_vectors	2011-03-17 07:21:02.513851002 +0000
@@ -363,6 +363,7 @@
 	setbool
 	setsecparam
 	setcheckreqprot
+	read_policy
 }
 
 
@@ -816,3 +817,32 @@
 
 class x_keyboard
 inherits x_device
+
+class db_schema
+inherits database
+{
+    search
+    add_name
+    remove_name
+}
+
+class db_view
+inherits database
+{
+    expand
+}
+
+class db_sequence
+inherits database
+{
+    get_value
+    next_value
+    set_value
+}
+
+class db_language
+inherits database
+{
+    implement
+    execute
+}
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/flask/security_classes serefpolicy-3.7.19/policy/flask/security_classes
--- nsaserefpolicy/policy/flask/security_classes	2011-03-17 07:21:20.286851001 +0000
+++ serefpolicy-3.7.19/policy/flask/security_classes	2011-03-17 07:21:02.484851001 +0000
@@ -125,4 +125,10 @@
 class x_pointer			# userspace
 class x_keyboard		# userspace
 
+# More Database stuff
+class db_schema         # userspace
+class db_view           # userspace
+class db_sequence       # userspace
+class db_language       # userspace
+ 
 # FLASK
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/global_tunables serefpolicy-3.7.19/policy/global_tunables
--- nsaserefpolicy/policy/global_tunables	2011-03-17 07:21:20.324851001 +0000
+++ serefpolicy-3.7.19/policy/global_tunables	2012-02-08 11:43:48.632199174 +0000
@@ -13,21 +13,21 @@
 
 ## <desc>
 ## <p>
-## Allow unconfined executables to map a memory region as both executable and writable, this is dangerous and the executable should be reported in bugzilla")
+## Allow unconfined executables to map a memory region as both executable and writable, this is dangerous and the executable should be reported in bugzilla)
 ## </p>
 ## </desc>
 gen_tunable(allow_execmem,false)
 
 ## <desc>
 ## <p>
-## Allow all unconfined executables to use libraries requiring text relocation that are not labeled textrel_shlib_t")
+## Allow all unconfined executables to use libraries requiring text relocation that are not labeled textrel_shlib_t)
 ## </p>
 ## </desc>
 gen_tunable(allow_execmod,false)
 
 ## <desc>
 ## <p>
-## Allow unconfined executables to make their stack executable.  This should never, ever be necessary. Probably indicates a badly coded executable, but could indicate an attack. This executable should be reported in bugzilla")
+## Allow unconfined executables to make their stack executable.  This should never, ever be necessary. Probably indicates a badly coded executable, but could indicate an attack. This executable should be reported in bugzilla)
 ## </p>
 ## </desc>
 gen_tunable(allow_execstack,false)
@@ -61,46 +61,45 @@
 
 ## <desc>
 ## <p>
-## Allow email client to various content.
-## nfs, samba, removable devices, and user temp
-## files
+## Support NFS home directories
 ## </p>
 ## </desc>
-gen_tunable(mail_read_content,false)
+gen_tunable(use_nfs_home_dirs,false)
 
 ## <desc>
 ## <p>
-## Allow any files/directories to be exported read/write via NFS.
+## Support fusefs home directories
 ## </p>
 ## </desc>
-gen_tunable(nfs_export_all_rw,false)
+gen_tunable(use_fusefs_home_dirs,false)
 
 ## <desc>
 ## <p>
-## Allow any files/directories to be exported read/only via NFS.
+## Support SAMBA home directories
 ## </p>
 ## </desc>
-gen_tunable(nfs_export_all_ro,false)
+gen_tunable(use_samba_home_dirs,false)
 
 ## <desc>
 ## <p>
-## Support NFS home directories
+## Allow users to run TCP servers (bind to ports and accept connection from
+## the same domain and outside users)  disabling this forces FTP passive mode
+## and may change other protocols.
 ## </p>
 ## </desc>
-gen_tunable(use_nfs_home_dirs,false)
+gen_tunable(user_tcp_server,false)
 
 ## <desc>
 ## <p>
-## Support SAMBA home directories
+## Allow direct login to the console device. Required for System 390
 ## </p>
 ## </desc>
-gen_tunable(use_samba_home_dirs,false)
+gen_tunable(allow_console_login,false)
 
 ## <desc>
 ## <p>
-## Allow users to run TCP servers (bind to ports and accept connection from
-## the same domain and outside users)  disabling this forces FTP passive mode
-## and may change other protocols.
+## Allow certain domains to map low memory in the kernel
 ## </p>
 ## </desc>
-gen_tunable(user_tcp_server,false)
+gen_tunable(mmap_low_allowed, false)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/mcs serefpolicy-3.7.19/policy/mcs
--- nsaserefpolicy/policy/mcs	2011-03-17 07:21:20.292851001 +0000
+++ serefpolicy-3.7.19/policy/mcs	2012-07-26 06:52:33.831583458 +0000
@@ -69,16 +69,32 @@
 #  - /proc/pid operations are not constrained.
 
 mlsconstrain file { read ioctl lock execute execute_no_trans }
-	(( h1 dom h2 ) or ( t1 == mcsreadall ) or ( t2 == domain ));
+	(( h1 dom h2 ) or ( t1 == mcsreadall ) or 
+	(( t1 != mcsuntrustedproc ) and (t2 == domain)));
 
 mlsconstrain file { write setattr append unlink link rename }
-	(( h1 dom h2 ) or ( t1 == mcswriteall ) or ( t2 == domain ));
+	(( h1 dom h2 ) or ( t1 == mcswriteall ) or
+	(( t1 != mcsuntrustedproc ) and (t2 == domain)));
 
 mlsconstrain dir { search read ioctl lock }
-	(( h1 dom h2 ) or ( t1 == mcsreadall ) or ( t2 == domain ));
+	(( h1 dom h2 ) or ( t1 == mcsreadall ) or 
+	(( t1 != mcsuntrustedproc ) and (t2 == domain)));
 
 mlsconstrain dir { write setattr append unlink link rename add_name remove_name }
-	(( h1 dom h2 ) or ( t1 == mcswriteall ) or ( t2 == domain ));
+	(( h1 dom h2 ) or ( t1 == mcswriteall ) or
+	(( t1 != mcsuntrustedproc ) and (t2 == domain)));
+
+mlsconstrain fifo_file { open }
+    (( h1 dom h2 ) or ( t1 == mcsreadall ) or
+     (( t1 != mcsuntrustedproc ) and ( t2 == domain )));
+
+mlsconstrain { lnk_file chr_file blk_file sock_file } { getattr read ioctl }
+    (( h1 dom h2 ) or ( t1 == mcsreadall ) or
+     (( t1 != mcsuntrustedproc ) and (t2 == domain)));
+
+mlsconstrain { lnk_file chr_file blk_file sock_file } { write setattr }
+    (( h1 dom h2 ) or ( t1 == mcswriteall ) or
+     (( t1 != mcsuntrustedproc ) and (t2 == domain)));
 
 # New filesystem object labels must be dominated by the relabeling subject
 # clearance, also the objects are single-level.
@@ -86,10 +102,10 @@
 	(( h1 dom h2 ) and ( l2 eq h2 ));
 
 # new file labels must be dominated by the relabeling subject clearance
-mlsconstrain { dir lnk_file chr_file blk_file sock_file fifo_file } { relabelfrom }
+mlsconstrain { dir lnk_file chr_file blk_file sock_file fifo_file file } { relabelfrom }
 	( h1 dom h2 );
 
-mlsconstrain { dir lnk_file chr_file blk_file sock_file fifo_file } { create relabelto }
+mlsconstrain { dir lnk_file chr_file blk_file sock_file fifo_file file } { create relabelto }
 	(( h1 dom h2 ) and ( l2 eq h2 ));
 
 mlsconstrain process { transition dyntransition }
@@ -101,13 +117,16 @@
 mlsconstrain process { sigkill sigstop }
 	(( h1 dom h2 ) or ( t1 == mcskillall ));
 
+mlsconstrain process { signal }
+	(( h1 dom h2 ) or ( t1 != mcsuntrustedproc ));
+
 #
 # MCS policy for SELinux-enabled databases
 #
 
 # Any database object must be dominated by the relabeling subject
 # clearance, also the objects are single-level.
-mlsconstrain { db_database db_table db_procedure db_column db_blob } { create relabelto }
+mlsconstrain { db_database db_schema db_table db_sequence db_view db_procedure db_language db_column db_blob } { create relabelto }
 	(( h1 dom h2 ) and ( l2 eq h2 ));
 
 mlsconstrain { db_tuple } { insert relabelto }
@@ -117,6 +136,9 @@
 mlsconstrain db_database { drop getattr setattr relabelfrom access install_module load_module get_param set_param }
 	( h1 dom h2 );
 
+mlsconstrain db_language { drop getattr setattr relabelfrom execute }
+	( h1 dom h2 );
+
 mlsconstrain db_table { drop getattr setattr relabelfrom select update insert delete use lock }
 	( h1 dom h2 );
 
@@ -126,10 +148,25 @@
 mlsconstrain db_tuple { relabelfrom select update delete use }
 	( h1 dom h2 );
 
-mlsconstrain db_procedure { drop getattr setattr execute install }
+mlsconstrain db_sequence { drop getattr setattr relabelfrom get_value next_value set_value }
+	( h1 dom h2 );
+
+mlsconstrain db_view { drop getattr setattr relabelfrom expand }
 	( h1 dom h2 );
 
+mlsconstrain db_procedure { drop getattr setattr relabelfrom execute install }
+	( h1 dom h2 );
+
+mlsconstrain db_language { drop getattr setattr relabelfrom execute }
+ 	( h1 dom h2 );
+
 mlsconstrain db_blob { drop getattr setattr relabelfrom read write import export }
 	( h1 dom h2 );
 
+mlsconstrain { tcp_socket udp_socket rawip_socket } node_bind
+	(( h1 dom h2 ) or ( t1 != mcsuntrustedproc ));
+
+mlsconstrain packet { send recv }
+    (( h1 dom h2 ) or ( t1 == mcsnetwrite ));
+
 ') dnl end enable_mcs
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/mls serefpolicy-3.7.19/policy/mls
--- nsaserefpolicy/policy/mls	2011-03-17 07:21:23.124851003 +0000
+++ serefpolicy-3.7.19/policy/mls	2012-07-09 14:21:35.600852044 +0000
@@ -195,7 +195,8 @@
 	(( l1 eq l2 ) or 
 	 (( t1 == mlsnetwriteranged ) and ( l1 dom l2 ) and ( l1 domby h2 )) or
 	 (( t1 == mlsnetwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
-	 ( t1 == mlsnetwrite ));
+	 ( t1 == mlsnetwrite ) or
+	 ( t2 == mlstrustedobject ));
 
 # used by netlabel to restrict normal domains to same level connections
 mlsconstrain { tcp_socket udp_socket rawip_socket } recvfrom
@@ -208,12 +209,14 @@
 	(( l1 eq l2 ) or 
 	 (( t1 == mlsnetwriteranged ) and ( l1 dom l2 ) and ( l1 domby h2 )) or
 	 (( t1 == mlsnetwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
+	 ( t2 == mlstrustedobject ) or
 	 ( t1 == mlsnetwrite ));
 
 mlsconstrain unix_dgram_socket sendto
 	(( l1 eq l2 ) or 
 	 (( t1 == mlsnetwriteranged ) and ( l1 dom l2 ) and ( l1 domby h2 )) or
 	 (( t1 == mlsnetwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
+	 ( t2 == mlstrustedobject ) or
 	 ( t1 == mlsnetwrite ));
 
 # these access vectors have no MLS restrictions
@@ -725,13 +728,13 @@
 #
 
 # make sure these database classes are "single level"
-mlsconstrain { db_database db_table db_procedure db_column db_blob } { create relabelto }
+mlsconstrain { db_database db_schema db_table db_sequence db_view db_procedure db_language db_column db_blob } { create relabelto }
 	( l2 eq h2 );
 mlsconstrain { db_tuple } { insert relabelto }
 	( l2 eq h2 );
 
 # new database labels must be dominated by the relabeling subjects clearance
-mlsconstrain { db_database db_table db_procedure db_column db_tuple db_blob } { relabelto }
+mlsconstrain { db_database db_schema db_table db_sequence db_view db_procedure db_language db_column db_tuple db_blob } { relabelto }
 	( h1 dom h2 );
 
 # the database "read" ops (note the check is dominance of the low level)
@@ -741,6 +744,12 @@
 	 ( t1 == mlsdbread ) or
 	 ( t2 == mlstrustedobject ));
 
+mlsconstrain { db_schema } { getattr search }
+	(( l1 dom l2 ) or
+	 (( t1 == mlsdbreadtoclr ) and ( h1 dom l2 )) or
+	 ( t1 == mlsdbread ) or
+	 ( t2 == mlstrustedobject ));
+
 mlsconstrain { db_table } { getattr use select lock }
 	(( l1 dom l2 ) or
 	 (( t1 == mlsdbreadtoclr ) and ( h1 dom l2 )) or
@@ -753,12 +762,30 @@
 	 ( t1 == mlsdbread ) or
 	 ( t2 == mlstrustedobject ));
 
+mlsconstrain { db_sequence } { getattr get_value next_value }
+	(( l1 dom l2 ) or
+	 (( t1 == mlsdbreadtoclr ) and ( h1 dom l2 )) or
+	 ( t1 == mlsdbread ) or
+	 ( t2 == mlstrustedobject ));
+
+mlsconstrain { db_view } { getattr expand }
+	(( l1 dom l2 ) or
+	 (( t1 == mlsdbreadtoclr ) and ( h1 dom l2 )) or
+	 ( t1 == mlsdbread ) or
+	 ( t2 == mlstrustedobject ));
+
 mlsconstrain { db_procedure } { getattr execute install }
 	(( l1 dom l2 ) or
 	 (( t1 == mlsdbreadtoclr ) and ( h1 dom l2 )) or
 	 ( t1 == mlsdbread ) or
 	 ( t2 == mlstrustedobject ));
 
+mlsconstrain { db_language } { getattr execute }
+	(( l1 dom l2 ) or
+	 (( t1 == mlsdbreadtoclr ) and ( h1 dom l2 )) or
+	 ( t1 == mlsdbread ) or
+	 ( t2 == mlstrustedobject ));
+
 mlsconstrain { db_blob } { getattr read export }
 	(( l1 dom l2 ) or
 	 (( t1 == mlsdbreadtoclr ) and ( h1 dom l2 )) or
@@ -779,6 +806,13 @@
 	 ( t1 == mlsdbwrite ) or
 	 ( t2 == mlstrustedobject ));
 
+mlsconstrain { db_schema } { create drop setattr relabelfrom add_name remove_name }
+	(( l1 eq l2 ) or
+	 (( t1 == mlsdbwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
+	 (( t2 == mlsdbwriteinrange ) and ( l1 dom l2 ) and ( h1 domby h2 )) or
+	 ( t1 == mlsdbwrite ) or
+	 ( t2 == mlstrustedobject ));
+
 mlsconstrain { db_table } { create drop setattr relabelfrom update insert delete }
 	(( l1 eq l2 ) or
 	 (( t1 == mlsdbwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
@@ -793,6 +827,20 @@
 	 ( t1 == mlsdbwrite ) or
 	 ( t2 == mlstrustedobject ));
 
+mlsconstrain { db_sequence } { create drop setattr relabelfrom set_value }
+    (( l1 eq l2 ) or
+     (( t1 == mlsdbwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
+     (( t2 == mlsdbwriteinrange ) and ( l1 dom l2 ) and ( h1 domby h2 )) or
+     ( t1 == mlsdbwrite ) or
+     ( t2 == mlstrustedobject ));
+
+mlsconstrain { db_view } { create drop setattr relabelfrom }
+    (( l1 eq l2 ) or
+     (( t1 == mlsdbwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
+     (( t2 == mlsdbwriteinrange ) and ( l1 dom l2 ) and ( h1 domby h2 )) or
+     ( t1 == mlsdbwrite ) or
+     ( t2 == mlstrustedobject ));
+
 mlsconstrain { db_procedure } { create drop setattr relabelfrom }
 	(( l1 eq l2 ) or
 	 (( t1 == mlsdbwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
@@ -800,6 +848,13 @@
 	 ( t1 == mlsdbwrite ) or
 	 ( t2 == mlstrustedobject ));
 
+mlsconstrain { db_language } { create drop setattr relabelfrom }
+	(( l1 eq l2 ) or
+	 (( t1 == mlsdbwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
+	 (( t2 == mlsdbwriteinrange ) and ( l1 dom l2 ) and ( h1 domby h2 )) or
+	 ( t1 == mlsdbwrite ) or
+	 ( t2 == mlstrustedobject ));
+
 mlsconstrain { db_blob } { create drop setattr relabelfrom write import }
 	(( l1 eq l2 ) or
 	 (( t1 == mlsdbwritetoclr ) and ( h1 dom l2 ) and ( l1 domby l2 )) or
@@ -815,7 +870,7 @@
 	 ( t2 == mlstrustedobject ));
 
 # the database upgrade/downgrade rule
-mlsvalidatetrans { db_database db_table db_procedure db_column db_tuple db_blob }
+mlsvalidatetrans { db_database db_schema db_table db_sequence db_view db_procedure db_language db_column db_tuple db_blob }
 	((( l1 eq l2 ) or
 	  (( t3 == mlsdbupgrade ) and ( l1 domby l2 )) or
 	  (( t3 == mlsdbdowngrade ) and ( l1 dom l2 )) or
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/accountsd.fc serefpolicy-3.7.19/policy/modules/admin/accountsd.fc
--- nsaserefpolicy/policy/modules/admin/accountsd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/accountsd.fc	2011-03-17 07:21:05.739851002 +0000
@@ -0,0 +1,4 @@
+
+/usr/libexec/accounts-daemon	--	gen_context(system_u:object_r:accountsd_exec_t,s0)
+
+/var/lib/AccountsService(/.*)?			gen_context(system_u:object_r:accountsd_var_lib_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/accountsd.if serefpolicy-3.7.19/policy/modules/admin/accountsd.if
--- nsaserefpolicy/policy/modules/admin/accountsd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/accountsd.if	2011-08-10 18:15:06.970523004 +0000
@@ -0,0 +1,158 @@
+## <summary>policy for accountsd</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run accountsd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`accountsd_domtrans',`
+	gen_require(`
+		type accountsd_t, accountsd_exec_t;
+	')
+
+	domtrans_pattern($1, accountsd_exec_t, accountsd_t)
+')
+
+########################################
+## <summary>
+##	Search accountsd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`accountsd_search_lib',`
+	gen_require(`
+		type accountsd_var_lib_t;
+	')
+
+	allow $1 accountsd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read accountsd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`accountsd_read_lib_files',`
+	gen_require(`
+		type accountsd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, accountsd_var_lib_t, accountsd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	accountsd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`accountsd_manage_lib_files',`
+	gen_require(`
+		type accountsd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, accountsd_var_lib_t,  accountsd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage accountsd var_lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`accountsd_manage_var_lib',`
+	gen_require(`
+		type accountsd_var_lib_t;
+	')
+
+         manage_dirs_pattern($1, accountsd_var_lib_t, accountsd_var_lib_t)
+         manage_files_pattern($1, accountsd_var_lib_t, accountsd_var_lib_t)
+         manage_lnk_files_pattern($1, accountsd_var_lib_t, accountsd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	accountsd over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`accountsd_dbus_chat',`
+	gen_require(`
+		type accountsd_t;
+		class dbus send_msg;
+	')
+
+	allow $1 accountsd_t:dbus send_msg;
+	allow accountsd_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write Accounts Daemon
+##	fifo file.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`accountsd_dontaudit_rw_fifo_file',`
+	gen_require(`
+		type accountsd_t;
+	')
+
+	dontaudit $1 accountsd_t:fifo_file rw_inherited_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an accountsd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`accountsd_admin',`
+	gen_require(`
+		type accountsd_t;
+	')
+	allow $1 accountsd_t:process { ptrace signal_perms getattr };
+	read_files_pattern($1, accountsd_t, accountsd_t)
+
+	accountsd_manage_var_lib($1)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/accountsd.te serefpolicy-3.7.19/policy/modules/admin/accountsd.te
--- nsaserefpolicy/policy/modules/admin/accountsd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/accountsd.te	2011-03-17 07:21:05.843851001 +0000
@@ -0,0 +1,62 @@
+policy_module(accountsd,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type accountsd_t;
+type accountsd_exec_t;
+dbus_system_domain(accountsd_t, accountsd_exec_t)
+
+type accountsd_var_lib_t;
+files_type(accountsd_var_lib_t)
+
+########################################
+#
+# accountsd local policy
+#
+allow accountsd_t self:capability { dac_override setuid setgid sys_ptrace };
+
+allow accountsd_t self:fifo_file rw_fifo_file_perms;
+
+manage_dirs_pattern(accountsd_t, accountsd_var_lib_t,  accountsd_var_lib_t)
+manage_files_pattern(accountsd_t, accountsd_var_lib_t,  accountsd_var_lib_t)
+files_var_lib_filetrans(accountsd_t, accountsd_var_lib_t, { file dir } )
+
+kernel_read_kernel_sysctls(accountsd_t)
+
+corecmd_exec_bin(accountsd_t)
+
+files_read_mnt_files(accountsd_t)
+files_read_usr_files(accountsd_t)
+
+fs_list_inotifyfs(accountsd_t)
+fs_read_noxattr_fs_files(accountsd_t)
+
+auth_use_nsswitch(accountsd_t)
+auth_read_shadow(accountsd_t)
+
+miscfiles_read_localization(accountsd_t)
+
+logging_send_syslog_msg(accountsd_t)
+logging_set_loginuid(accountsd_t)
+
+usermanage_domtrans_useradd(accountsd_t)
+usermanage_domtrans_passwd(accountsd_t)
+
+userdom_read_user_tmp_files(accountsd_t)
+userdom_read_user_home_content_files(accountsd_t)
+
+optional_policy(`
+	consolekit_read_log(accountsd_t)
+')
+
+optional_policy(`
+	policykit_dbus_chat(accountsd_t)
+')
+
+optional_policy(`
+	xserver_manage_xdm_etc_files(accountsd_t)
+	xserver_dbus_chat_xdm(accountsd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/acct.te serefpolicy-3.7.19/policy/modules/admin/acct.te
--- nsaserefpolicy/policy/modules/admin/acct.te	2011-03-17 07:21:22.693851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/acct.te	2011-03-17 07:21:05.575851001 +0000
@@ -43,6 +43,7 @@
 fs_getattr_xattr_fs(acct_t)
 
 term_dontaudit_use_console(acct_t)
+term_dontaudit_use_generic_ptys(acct_t)
 
 corecmd_exec_bin(acct_t)
 corecmd_exec_shell(acct_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/alsa.te serefpolicy-3.7.19/policy/modules/admin/alsa.te
--- nsaserefpolicy/policy/modules/admin/alsa.te	2011-03-17 07:21:22.780851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/alsa.te	2011-03-17 07:21:05.758851002 +0000
@@ -52,6 +52,8 @@
 files_read_usr_files(alsa_t)
 
 term_dontaudit_use_console(alsa_t)
+term_dontaudit_use_generic_ptys(alsa_t)
+term_dontaudit_use_all_ptys(alsa_t)
 
 auth_use_nsswitch(alsa_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/amanda.if serefpolicy-3.7.19/policy/modules/admin/amanda.if
--- nsaserefpolicy/policy/modules/admin/amanda.if	2011-03-17 07:21:22.828851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/amanda.if	2011-09-08 14:34:28.806160001 +0000
@@ -63,6 +63,24 @@
 	files_search_usr($1)
 ')
 
+#######################################
+## <summary>
+##  Allow append amanda lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to allow
+##  </summary>
+## </param>
+#
+interface(`amanda_append_lib_files',`
+    gen_require(`
+        type amanda_var_lib_t;
+    ')
+
+    allow $1 amanda_var_lib_t:file { append_file_perms };
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to read /etc/dumpdates.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/amanda.te serefpolicy-3.7.19/policy/modules/admin/amanda.te
--- nsaserefpolicy/policy/modules/admin/amanda.te	2011-03-17 07:21:22.666851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/amanda.te	2011-08-31 14:22:14.668160000 +0000
@@ -68,7 +68,7 @@
 #
 
 allow amanda_t self:capability { chown dac_override setuid kill };
-allow amanda_t self:process { setpgid signal };
+allow amanda_t self:process { getsched setsched setpgid signal };
 allow amanda_t self:fifo_file rw_fifo_file_perms;
 allow amanda_t self:unix_stream_socket create_stream_socket_perms;
 allow amanda_t self:unix_dgram_socket create_socket_perms;
@@ -84,6 +84,7 @@
 # access to amandas data structure
 manage_dirs_pattern(amanda_t, amanda_data_t, amanda_data_t)
 manage_files_pattern(amanda_t, amanda_data_t, amanda_data_t)
+manage_lnk_files_pattern(amanda_t, amanda_data_t, amanda_data_t)
 filetrans_pattern(amanda_t, amanda_config_t, amanda_data_t, { file dir })
 
 # access to amanda_dumpdates_t
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/anaconda.te serefpolicy-3.7.19/policy/modules/admin/anaconda.te
--- nsaserefpolicy/policy/modules/admin/anaconda.te	2011-03-17 07:21:22.612851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/anaconda.te	2011-03-17 07:21:05.494851002 +0000
@@ -29,8 +29,10 @@
 logging_send_syslog_msg(anaconda_t)
 
 modutils_domtrans_insmod(anaconda_t)
+modutils_domtrans_depmod(anaconda_t)
 
 seutil_domtrans_semanage(anaconda_t)
+seutil_domtrans_setsebool(anaconda_t)
 
 userdom_user_home_dir_filetrans_user_home_content(anaconda_t, { dir file lnk_file fifo_file sock_file })
 
@@ -52,7 +54,7 @@
 ')
 
 optional_policy(`
-	unconfined_domain(anaconda_t)
+	unconfined_domain_noaudit(anaconda_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/bootloader.fc serefpolicy-3.7.19/policy/modules/admin/bootloader.fc
--- nsaserefpolicy/policy/modules/admin/bootloader.fc	2011-03-17 07:21:22.690851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/bootloader.fc	2012-04-24 10:54:13.206022398 +0000
@@ -1,9 +1,12 @@
 
 /etc/lilo\.conf.*	--	gen_context(system_u:object_r:bootloader_etc_t,s0)
 /etc/yaboot\.conf.*	--	gen_context(system_u:object_r:bootloader_etc_t,s0)
+/etc/zipl\.conf.*      --      gen_context(system_u:object_r:bootloader_etc_t,s0)
 
 /sbin/grub		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
 /sbin/lilo.*		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
 /sbin/ybin.*		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
+/sbin/zipl			--	gen_context(system_u:object_r:bootloader_exec_t,s0)
 
 /usr/sbin/grub		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/bootloader.if serefpolicy-3.7.19/policy/modules/admin/bootloader.if
--- nsaserefpolicy/policy/modules/admin/bootloader.if	2011-03-17 07:21:22.838851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/bootloader.if	2011-03-17 07:21:05.821851003 +0000
@@ -18,6 +18,24 @@
 	domtrans_pattern($1, bootloader_exec_t, bootloader_t)
 ')
 
+#######################################
+## <summary>
+##  Execute bootloader in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`bootloader_exec',`
+    gen_require(`
+        type bootloader_exec_t;
+    ')
+
+    can_exec($1, bootloader_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute bootloader interactively and do
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/brctl.if serefpolicy-3.7.19/policy/modules/admin/brctl.if
--- nsaserefpolicy/policy/modules/admin/brctl.if	2011-03-17 07:21:22.798851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/brctl.if	2011-03-17 07:21:05.776851002 +0000
@@ -17,3 +17,29 @@
 
 	domtrans_pattern($1, brctl_exec_t, brctl_t)
 ')
+
+######################################
+## <summary>
+##      Execute brctl in the brctl domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed to transition.
+##      </summary>
+## </param>
+## <param name="role">
+##      <summary>
+##      Role allowed access.
+##      </summary>
+## </param>
+## <rolecap/>
+#
+interface(`brctl_run',`
+        gen_require(`
+                type brctl_t, brctl_exec_t;
+        ')
+
+        brctl_domtrans($1)
+        role $2 types brctl_t;
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/brctl.te serefpolicy-3.7.19/policy/modules/admin/brctl.te
--- nsaserefpolicy/policy/modules/admin/brctl.te	2011-03-17 07:21:22.795851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/brctl.te	2012-05-15 14:54:16.063122651 +0000
@@ -21,6 +21,11 @@
 allow brctl_t self:unix_dgram_socket create_socket_perms;
 allow brctl_t self:tcp_socket create_socket_perms;
 
+ifdef(`hide_broken_symptoms',`
+    # caused by some bogus kernel code
+	 dontaudit brctl_t self:capability sys_module;
+')
+
 kernel_request_load_module(brctl_t)
 kernel_read_network_state(brctl_t)
 kernel_read_sysctl(brctl_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/certwatch.te serefpolicy-3.7.19/policy/modules/admin/certwatch.te
--- nsaserefpolicy/policy/modules/admin/certwatch.te	2011-03-17 07:21:22.558851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/certwatch.te	2011-03-17 07:21:05.440851001 +0000
@@ -36,7 +36,7 @@
 miscfiles_read_localization(certwatch_t)
 
 userdom_use_user_terminals(certwatch_t)
-userdom_dontaudit_list_user_home_dirs(certwatch_t)
+userdom_dontaudit_list_admin_dir(certwatch_t)
 
 optional_policy(`
 	apache_exec_modules(certwatch_t)
@@ -48,6 +48,7 @@
 ')
 
 optional_policy(`
+	pcscd_domtrans(certwatch_t)
 	pcscd_stream_connect(certwatch_t)
 	pcscd_read_pub_files(certwatch_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/consoletype.if serefpolicy-3.7.19/policy/modules/admin/consoletype.if
--- nsaserefpolicy/policy/modules/admin/consoletype.if	2011-03-17 07:21:22.615851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/consoletype.if	2011-03-17 07:21:05.497851002 +0000
@@ -19,6 +19,9 @@
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, consoletype_exec_t, consoletype_t)
+	ifdef(`hide_broken_symptoms', `
+	        dontaudit consoletype_t $1:socket_class_set { read write };
+	')
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/consoletype.te serefpolicy-3.7.19/policy/modules/admin/consoletype.te
--- nsaserefpolicy/policy/modules/admin/consoletype.te	2011-03-17 07:21:22.875851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/consoletype.te	2011-03-17 07:21:05.861851003 +0000
@@ -10,7 +10,6 @@
 type consoletype_exec_t;
 application_executable_file(consoletype_exec_t)
 init_domain(consoletype_t, consoletype_exec_t)
-init_system_domain(consoletype_t, consoletype_exec_t)
 role system_r types consoletype_t;
 
 ########################################
@@ -85,6 +84,8 @@
 	hal_dontaudit_use_fds(consoletype_t)
 	hal_dontaudit_rw_pipes(consoletype_t)
 	hal_dontaudit_rw_dgram_sockets(consoletype_t)
+	hal_dontaudit_write_log(consoletype_t)
+	hal_dontaudit_read_pid_files(consoletype_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/dmesg.te serefpolicy-3.7.19/policy/modules/admin/dmesg.te
--- nsaserefpolicy/policy/modules/admin/dmesg.te	2011-03-17 07:21:22.849851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/dmesg.te	2011-10-18 11:54:51.596041900 +0000
@@ -24,6 +24,7 @@
 kernel_read_ring_buffer(dmesg_t)
 kernel_clear_ring_buffer(dmesg_t)
 kernel_change_ring_buffer_level(dmesg_t)
+kernel_read_system_state(dmesg_t)
 kernel_list_proc(dmesg_t)
 kernel_read_proc_symlinks(dmesg_t)
 
@@ -51,6 +52,10 @@
 userdom_use_user_terminals(dmesg_t)
 
 optional_policy(`
+	abrt_manage_pid_files(dmesg_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(dmesg_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/firstboot.if serefpolicy-3.7.19/policy/modules/admin/firstboot.if
--- nsaserefpolicy/policy/modules/admin/firstboot.if	2011-03-17 07:21:22.822851000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/firstboot.if	2011-08-10 12:59:59.317523004 +0000
@@ -155,3 +155,22 @@
 
 	dontaudit $1 firstboot_t:unix_stream_socket { read write };
 ')
+
+#######################################
+## <summary>
+##  dontaudit read and write an leaked file descriptors
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`firstboot_dontaudit_leaks',`
+    gen_require(`
+        type firstboot_t;
+    ')
+
+    dontaudit $1 firstboot_t:socket_class_set { read write };
+    dontaudit $1 firstboot_t:fifo_file rw_inherited_fifo_file_perms;
+')
Binary files nsaserefpolicy/policy/modules/admin/.firstboot.if.swp and serefpolicy-3.7.19/policy/modules/admin/.firstboot.if.swp differ
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/firstboot.te serefpolicy-3.7.19/policy/modules/admin/firstboot.te
--- nsaserefpolicy/policy/modules/admin/firstboot.te	2011-03-17 07:21:22.663851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/firstboot.te	2011-03-17 07:21:05.543851002 +0000
@@ -77,6 +77,7 @@
 miscfiles_read_localization(firstboot_t)
 
 modutils_domtrans_insmod(firstboot_t)
+modutils_domtrans_depmod(firstboot_t)
 modutils_read_module_config(firstboot_t)
 modutils_read_module_deps(firstboot_t)
 
@@ -99,6 +100,10 @@
 ')
 
 optional_policy(`
+	iptables_domtrans(firstboot_t)
+')
+
+optional_policy(`
 	nis_use_ypbind(firstboot_t)
 ')
 
@@ -121,6 +126,12 @@
 ')
 
 optional_policy(`
+	gnome_admin_home_gconf_filetrans(firstboot_t, dir)
+	gnome_manage_config(firstboot_t)
+')
+
+optional_policy(`
+	xserver_domtrans(firstboot_t)
 	xserver_rw_shm(firstboot_t)
 	xserver_unconfined(firstboot_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/kismet.te serefpolicy-3.7.19/policy/modules/admin/kismet.te
--- nsaserefpolicy/policy/modules/admin/kismet.te	2011-03-17 07:21:22.750851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/kismet.te	2011-03-17 07:21:05.711851003 +0000
@@ -45,6 +45,7 @@
 manage_dirs_pattern(kismet_t, kismet_home_t, kismet_home_t)
 manage_files_pattern(kismet_t, kismet_home_t, kismet_home_t)
 manage_lnk_files_pattern(kismet_t, kismet_home_t, kismet_home_t)
+userdom_search_user_home_dirs(kismet_t)
 userdom_user_home_dir_filetrans(kismet_t, kismet_home_t, { file dir })
 
 manage_files_pattern(kismet_t, kismet_log_t, kismet_log_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/logrotate.te serefpolicy-3.7.19/policy/modules/admin/logrotate.te
--- nsaserefpolicy/policy/modules/admin/logrotate.te	2011-03-17 07:21:22.606851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/logrotate.te	2011-11-10 12:39:42.023852742 +0000
@@ -32,7 +32,7 @@
 # Change ownership on log files.
 allow logrotate_t self:capability { chown dac_override dac_read_search kill fsetid fowner sys_resource sys_nice };
 # for mailx
-dontaudit logrotate_t self:capability { setuid setgid };
+dontaudit logrotate_t self:capability { setuid setgid sys_ptrace };
 
 allow logrotate_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 
@@ -62,7 +62,9 @@
 # for /var/lib/logrotate.status and /var/lib/logcheck
 create_dirs_pattern(logrotate_t, logrotate_var_lib_t, logrotate_var_lib_t)
 manage_files_pattern(logrotate_t, logrotate_var_lib_t, logrotate_var_lib_t)
+read_lnk_files_pattern(logrotate_t, logrotate_var_lib_t, logrotate_var_lib_t)
 files_var_lib_filetrans(logrotate_t, logrotate_var_lib_t, file)
+files_read_var_lib_files(logrotate_t)
 
 kernel_read_system_state(logrotate_t)
 kernel_read_kernel_sysctls(logrotate_t)
@@ -76,6 +78,7 @@
 mls_file_read_all_levels(logrotate_t)
 mls_file_write_all_levels(logrotate_t)
 mls_file_upgrade(logrotate_t)
+mls_process_write_to_clearance(logrotate_t) 
 
 selinux_get_fs_mount(logrotate_t)
 selinux_get_enforce_mode(logrotate_t)
@@ -108,6 +111,7 @@
 
 logging_manage_all_logs(logrotate_t)
 logging_send_syslog_msg(logrotate_t)
+logging_send_audit_msgs(logrotate_t)
 # cjp: why is this needed?
 logging_exec_all_logs(logrotate_t)
 
@@ -116,16 +120,22 @@
 seutil_dontaudit_read_config(logrotate_t)
 
 userdom_use_user_terminals(logrotate_t)
-userdom_dontaudit_search_user_home_dirs(logrotate_t)
+userdom_list_user_home_dirs(logrotate_t)
 userdom_use_unpriv_users_fds(logrotate_t)
+userdom_dontaudit_list_admin_dir(logrotate_t)
 
 cron_system_entry(logrotate_t, logrotate_exec_t)
 cron_search_spool(logrotate_t)
 
-mta_send_mail(logrotate_t)
+#mta_send_mail(logrotate_t)
+mta_base_mail_template(logrotate)
+mta_sendmail_domtrans(logrotate_t, logrotate_mail_t)
+role system_r types logrotate_mail_t;
+logging_read_all_logs(logrotate_mail_t)
+manage_files_pattern(logrotate_mail_t, logrotate_tmp_t, logrotate_tmp_t)
 
 ifdef(`distro_debian', `
-	allow logrotate_t logrotate_tmp_t:file { relabelfrom relabelto };
+	allow logrotate_t logrotate_tmp_t:file relabel_file_perms;
 	# for savelog
 	can_exec(logrotate_t, logrotate_exec_t)
 
@@ -137,6 +147,10 @@
 ')
 
 optional_policy(`
+	abrt_manage_cache(logrotate_t)
+')
+
+optional_policy(`
 	acct_domtrans(logrotate_t)
 	acct_manage_data(logrotate_t)
 	acct_exec_data(logrotate_t)
@@ -149,6 +163,14 @@
 ')
 
 optional_policy(`
+	asterisk_domtrans(logrotate_t)
+')
+
+optional_policy(`
+	bind_manage_cache(logrotate_t)
+')
+
+optional_policy(`
 	consoletype_exec(logrotate_t)
 ')
 
@@ -157,11 +179,15 @@
 ')
 
 optional_policy(`
+	fail2ban_stream_connect(logrotate_t)
+')
+
+optional_policy(`
 	hostname_exec(logrotate_t)
 ')
 
 optional_policy(`
-	samba_exec_log(logrotate_t)
+	icecast_signal(logrotate_t)
 ')
 
 optional_policy(`
@@ -183,6 +209,19 @@
 ')
 
 optional_policy(`
+	psad_domtrans(logrotate_t)
+')
+
+
+optional_policy(`
+	samba_exec_log(logrotate_t)
+')
+
+optional_policy(`
+	sssd_domtrans(logrotate_t)
+')
+
+optional_policy(`
 	slrnpull_manage_spool(logrotate_t)
 ')
 
@@ -191,5 +230,9 @@
 ')
 
 optional_policy(`
+	su_exec(logrotate_t)
+')
+
+optional_policy(`
 	varnishd_manage_log(logrotate_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/logwatch.fc serefpolicy-3.7.19/policy/modules/admin/logwatch.fc
--- nsaserefpolicy/policy/modules/admin/logwatch.fc	2011-03-17 07:21:22.754851000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/logwatch.fc	2011-03-17 07:21:05.714851002 +0000
@@ -1,7 +1,14 @@
+
+/usr/sbin/epylog 	-- gen_context(system_u:object_r:logwatch_exec_t,s0)
 /usr/sbin/logcheck	--	gen_context(system_u:object_r:logwatch_exec_t,s0)
 
 /usr/share/logwatch/scripts/logwatch\.pl -- gen_context(system_u:object_r:logwatch_exec_t, s0)
 
 /var/cache/logwatch(/.*)?	gen_context(system_u:object_r:logwatch_cache_t, s0)
+
+/var/lib/epylog(/.*)?  		gen_context(system_u:object_r:logwatch_cache_t,s0)
 /var/lib/logcheck(/.*)?		gen_context(system_u:object_r:logwatch_cache_t,s0)
+
 /var/log/logcheck/.+	--	gen_context(system_u:object_r:logwatch_lock_t,s0)
+
+/var/run/epylog\.pid	--	gen_context(system_u:object_r:logwatch_var_run_t,s0)    
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/logwatch.te serefpolicy-3.7.19/policy/modules/admin/logwatch.te
--- nsaserefpolicy/policy/modules/admin/logwatch.te	2011-03-17 07:21:22.789851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/logwatch.te	2011-09-15 13:40:25.037160002 +0000
@@ -20,6 +20,9 @@
 type logwatch_tmp_t;
 files_tmp_file(logwatch_tmp_t)
 
+type logwatch_var_run_t;
+files_pid_file(logwatch_var_run_t)
+
 ########################################
 #
 # Local policy
@@ -40,6 +43,10 @@
 manage_files_pattern(logwatch_t, logwatch_tmp_t, logwatch_tmp_t)
 files_tmp_filetrans(logwatch_t, logwatch_tmp_t, { file dir })
 
+# needed by epylog
+allow logwatch_t logwatch_var_run_t:file manage_file_perms;
+files_pid_filetrans(logwatch_t, logwatch_var_run_t, file)
+
 kernel_read_fs_sysctls(logwatch_t)
 kernel_read_kernel_sysctls(logwatch_t)
 kernel_read_system_state(logwatch_t)
@@ -59,6 +66,7 @@
 files_read_var_symlinks(logwatch_t)
 files_read_etc_files(logwatch_t)
 files_read_etc_runtime_files(logwatch_t)
+files_read_system_conf_files(logwatch_t)
 files_read_usr_files(logwatch_t)
 files_search_spool(logwatch_t)
 files_search_mnt(logwatch_t)
@@ -93,12 +101,13 @@
 sysnet_exec_ifconfig(logwatch_t)
 
 userdom_dontaudit_search_user_home_dirs(logwatch_t)
+userdom_dontaudit_list_admin_dir(logwatch_t)
 
-mta_send_mail(logwatch_t)
 
 ifdef(`distro_redhat',`
 	files_search_all(logwatch_t)
 	files_getattr_all_file_type_fs(logwatch_t)
+	files_getattr_all_files(logwatch_t)
 ')
 
 tunable_policy(`use_nfs_home_dirs',`
@@ -146,3 +155,31 @@
 	samba_read_log(logwatch_t)
 	samba_read_share_files(logwatch_t)
 ')
+
+
+# bug 614698
+#mta_send_mail(logwatch_t)
+mta_base_mail_template(logwatch)
+mta_sendmail_domtrans(logwatch_t, logwatch_mail_t)
+role system_r types logwatch_mail_t;
+
+#######################################
+#
+# Local logwatch-mail policy
+#
+
+allow logwatch_mail_t self:capability { dac_read_search dac_override };
+
+manage_files_pattern(logwatch_mail_t, logwatch_tmp_t, logwatch_tmp_t)
+
+dev_read_rand(logwatch_mail_t)
+dev_read_urand(logwatch_mail_t)
+dev_read_sysfs(logwatch_mail_t)
+
+logging_read_all_logs(logwatch_mail_t)
+
+mta_read_home(logwatch_mail_t)
+
+optional_policy(`
+    cron_use_system_job_fds(logwatch_mail_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/mcelog.fc serefpolicy-3.7.19/policy/modules/admin/mcelog.fc
--- nsaserefpolicy/policy/modules/admin/mcelog.fc	2011-03-17 07:21:22.760851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/mcelog.fc	2012-01-18 09:01:36.966473401 +0000
@@ -1 +1,5 @@
 /usr/sbin/mcelog	--	gen_context(system_u:object_r:mcelog_exec_t,s0)
+
+/var/log/mcelog.*   --  gen_context(system_u:object_r:mcelog_log_t,s0)
+
+/var/run/mcelog.*       gen_context(system_u:object_r:mcelog_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/mcelog.te serefpolicy-3.7.19/policy/modules/admin/mcelog.te
--- nsaserefpolicy/policy/modules/admin/mcelog.te	2011-03-17 07:21:22.771851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/mcelog.te	2012-01-18 09:01:30.606623046 +0000
@@ -8,8 +8,14 @@
 
 type mcelog_t;
 type mcelog_exec_t;
+init_system_domain(mcelog_t, mcelog_exec_t)
 application_domain(mcelog_t, mcelog_exec_t)
-cron_system_entry(mcelog_t, mcelog_exec_t)
+
+type mcelog_var_run_t;
+files_pid_file(mcelog_var_run_t)
+
+type mcelog_log_t;
+logging_log_file(mcelog_log_t)
 
 ########################################
 #
@@ -18,13 +24,31 @@
 
 allow mcelog_t self:capability sys_admin;
 
+manage_files_pattern(mcelog_t, mcelog_log_t, mcelog_log_t)
+manage_dirs_pattern(mcelog_t, mcelog_log_t, mcelog_log_t)
+logging_log_filetrans(mcelog_t, mcelog_log_t, { file dir })
+
+manage_files_pattern(mcelog_t, mcelog_var_run_t, mcelog_var_run_t)
+manage_dirs_pattern(mcelog_t, mcelog_var_run_t, mcelog_var_run_t)
+manage_sock_files_pattern(mcelog_t, mcelog_var_run_t, mcelog_var_run_t)
+files_pid_filetrans(mcelog_t, mcelog_var_run_t, { dir file sock_file } )
+
 kernel_read_system_state(mcelog_t)
 
+corecmd_exec_bin(mcelog_t)
+
 dev_read_raw_memory(mcelog_t)
 dev_read_kmsg(mcelog_t)
+dev_rw_sysfs(mcelog_t)
 
 files_read_etc_files(mcelog_t)
 
+mls_file_read_all_levels(mcelog_t)
+
 logging_send_syslog_msg(mcelog_t)
 
 miscfiles_read_localization(mcelog_t)
+
+optional_policy(`
+    cron_system_entry(mcelog_t, mcelog_exec_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/mrtg.te serefpolicy-3.7.19/policy/modules/admin/mrtg.te
--- nsaserefpolicy/policy/modules/admin/mrtg.te	2011-03-17 07:21:22.878851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/mrtg.te	2011-03-17 07:21:05.865851002 +0000
@@ -116,6 +116,7 @@
 userdom_use_user_terminals(mrtg_t)
 userdom_dontaudit_read_user_home_content_files(mrtg_t)
 userdom_dontaudit_use_unpriv_user_fds(mrtg_t)
+userdom_dontaudit_list_admin_dir(mrtg_t)
 
 netutils_domtrans_ping(mrtg_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/ncftool.fc serefpolicy-3.7.19/policy/modules/admin/ncftool.fc
--- nsaserefpolicy/policy/modules/admin/ncftool.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/ncftool.fc	2011-03-17 07:21:05.796851003 +0000
@@ -0,0 +1,2 @@
+
+/usr/bin/ncftool                --      gen_context(system_u:object_r:ncftool_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/ncftool.if serefpolicy-3.7.19/policy/modules/admin/ncftool.if
--- nsaserefpolicy/policy/modules/admin/ncftool.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/ncftool.if	2011-03-17 07:21:05.476851003 +0000
@@ -0,0 +1,78 @@
+
+## <summary>policy for ncftool</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run ncftool.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`ncftool_domtrans',`
+	gen_require(`
+		type ncftool_t, ncftool_exec_t;
+	')
+
+	domtrans_pattern($1, ncftool_exec_t, ncftool_t)
+')
+
+########################################
+## <summary>
+##	Execute ncftool in the ncftool domain, and
+##	allow the specified role the ncftool domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the ncftool domain.
+##	</summary>
+## </param>
+#
+interface(`ncftool_run',`
+	gen_require(`
+		type ncftool_t;
+	')
+
+	ncftool_domtrans($1)
+	role $2 types ncftool_t;
+
+	optional_policy(`
+		brctl_run(ncftool_t, $2)
+	')
+')
+
+########################################
+## <summary>
+##	Role access for ncftool
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access
+##	</summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	User domain for the role
+##	</summary>
+## </param>
+#
+interface(`ncftool_role',`
+	gen_require(`
+              type ncftool_t;
+	')
+
+	role $1 types ncftool_t;
+
+	ncftool_domtrans($2)
+
+	ps_process_pattern($2, ncftool_t)
+	allow $2 ncftool_t:process signal;
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/ncftool.te serefpolicy-3.7.19/policy/modules/admin/ncftool.te
--- nsaserefpolicy/policy/modules/admin/ncftool.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/ncftool.te	2011-08-30 14:21:38.618160001 +0000
@@ -0,0 +1,98 @@
+
+policy_module(ncftool,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+## <p>
+## Allow ncftool to read user content.
+## </p>
+## </desc>
+gen_tunable(ncftool_read_user_content, false)
+
+type ncftool_t;
+type ncftool_exec_t;
+corecmd_executable_file(ncftool_exec_t)
+application_domain(ncftool_t, ncftool_exec_t)
+domain_obj_id_change_exemption(ncftool_t)
+domain_system_change_exemption(ncftool_t)
+role system_r types ncftool_t;
+
+########################################
+#
+# ncftool local policy
+#
+
+allow ncftool_t self:capability { net_admin sys_ptrace };
+
+allow ncftool_t self:process signal;
+
+allow ncftool_t self:fifo_file manage_fifo_file_perms;
+allow ncftool_t self:unix_stream_socket create_stream_socket_perms;
+
+allow ncftool_t self:netlink_route_socket create_netlink_socket_perms;
+allow ncftool_t self:tcp_socket { create ioctl };
+
+kernel_read_system_state(ncftool_t)
+kernel_read_network_state(ncftool_t)
+kernel_read_kernel_sysctls(ncftool_t)
+kernel_request_load_module(ncftool_t) 
+kernel_read_modprobe_sysctls(ncftool_t)
+kernel_rw_net_sysctls(ncftool_t)
+
+corecmd_exec_bin(ncftool_t)
+corecmd_exec_shell(ncftool_t)
+consoletype_exec(ncftool_t)
+
+domain_read_all_domains_state(ncftool_t)
+
+dev_read_sysfs(ncftool_t)
+
+files_manage_system_conf_files(ncftool_t)
+files_relabelto_system_conf_files(ncftool_t)
+files_read_etc_files(ncftool_t)
+files_read_etc_runtime_files(ncftool_t)
+files_read_usr_files(ncftool_t)
+
+modutils_list_module_config(ncftool_t)
+modutils_read_module_config(ncftool_t)
+
+term_use_all_terms(ncftool_t)
+
+miscfiles_read_localization(ncftool_t)
+
+modutils_domtrans_insmod(ncftool_t)
+
+sysnet_delete_dhcpc_pid(ncftool_t)
+sysnet_domtrans_dhcpc(ncftool_t)
+sysnet_domtrans_ifconfig(ncftool_t)
+sysnet_etc_filetrans_config(ncftool_t)
+sysnet_manage_config(ncftool_t)
+sysnet_read_dhcpc_state(ncftool_t)
+sysnet_relabelfrom_net_conf(ncftool_t)
+sysnet_relabelto_net_conf(ncftool_t)
+sysnet_read_dhcpc_pid(ncftool_t)
+sysnet_signal_dhcpc(ncftool_t)
+
+tunable_policy(`ncftool_read_user_content',`
+        allow ncftool_t self: capability dac_override;
+        userdom_read_user_home_content_files(ncftool_t)
+        userdom_read_user_tmp_files(ncftool_t)
+')
+
+userdom_read_user_tmp_files(ncftool_t)
+
+optional_policy(`
+	dbus_system_bus_client(ncftool_t)
+')
+
+optional_policy(`
+	iptables_initrc_domtrans(ncftool_t)
+')
+
+optional_policy(`
+	netutils_domtrans(ncftool_t)  
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/netutils.fc serefpolicy-3.7.19/policy/modules/admin/netutils.fc
--- nsaserefpolicy/policy/modules/admin/netutils.fc	2011-03-17 07:21:22.902851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/netutils.fc	2011-04-18 09:21:01.855000002 +0000
@@ -9,6 +9,8 @@
 /usr/bin/nmap		--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 /usr/bin/traceroute.*	--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 
+/usr/sbin/fping.* 		--	gen_context(system_u:object_r:ping_exec_t,s0)
 /usr/sbin/traceroute.*	--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 /usr/sbin/hping2		--	gen_context(system_u:object_r:ping_exec_t,s0)
 /usr/sbin/tcpdump	--	gen_context(system_u:object_r:netutils_exec_t,s0)
+/usr/sbin/send_arp      --  gen_context(system_u:object_r:ping_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/netutils.if serefpolicy-3.7.19/policy/modules/admin/netutils.if
--- nsaserefpolicy/policy/modules/admin/netutils.if	2011-03-17 07:21:22.735851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/netutils.if	2011-03-17 07:21:05.610851002 +0000
@@ -41,6 +41,7 @@
 	')
 
 	netutils_domtrans($1)
+	allow $1 netutils_t:process { signal sigkill };
 	role $2 types netutils_t;
 ')
 
@@ -158,6 +159,7 @@
 
 	netutils_domtrans_ping($1)
 	role $2 types ping_t;
+	allow $1 ping_t:process { signal sigkill };
 ')
 
 ########################################
@@ -187,6 +189,7 @@
 
 	if ( user_ping ) {
 		netutils_domtrans_ping($1)
+		allow $1 ping_t:process { signal sigkill };
 	}
 ')
 
@@ -250,6 +253,7 @@
 
 	netutils_domtrans_traceroute($1)
 	role $2 types traceroute_t;
+	allow $1 traceroute_t:process { signal sigkill };
 ')
 
 ########################################
@@ -279,6 +283,7 @@
 
 	if( user_ping ) {
 		netutils_domtrans_traceroute($1)
+		allow $1 traceroute_t:process { signal sigkill };
 	}
 ')
 
@@ -299,3 +304,4 @@
 
 	can_exec($1, traceroute_exec_t)
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/netutils.te serefpolicy-3.7.19/policy/modules/admin/netutils.te
--- nsaserefpolicy/policy/modules/admin/netutils.te	2011-03-17 07:21:22.561851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/netutils.te	2012-05-02 10:50:00.340350454 +0000
@@ -44,6 +44,7 @@
 allow netutils_t self:packet_socket create_socket_perms;
 allow netutils_t self:udp_socket create_socket_perms;
 allow netutils_t self:tcp_socket create_stream_socket_perms;
+allow netutils_t self:socket create_socket_perms;
 
 manage_dirs_pattern(netutils_t, netutils_tmp_t, netutils_tmp_t)
 manage_files_pattern(netutils_t, netutils_tmp_t, netutils_tmp_t)
@@ -51,6 +52,8 @@
 
 kernel_search_proc(netutils_t)
 kernel_read_all_sysctls(netutils_t)
+kernel_read_network_state(netutils_t)
+kernel_request_load_module(netutils_t)
 
 corenet_all_recvfrom_unlabeled(netutils_t)
 corenet_all_recvfrom_netlabel(netutils_t)
@@ -66,6 +69,10 @@
 corenet_sendrecv_all_client_packets(netutils_t)
 corenet_udp_bind_generic_node(netutils_t)
 
+dev_rw_generic_usb_dev(netutils_t)
+dev_read_usbmon_dev(netutils_t)
+dev_write_usbmon_dev(netutils_t)
+
 dev_read_sysfs(netutils_t)
 
 fs_getattr_xattr_fs(netutils_t)
@@ -85,6 +92,7 @@
 
 miscfiles_read_localization(netutils_t)
 
+term_dontaudit_use_console(netutils_t)
 userdom_use_user_terminals(netutils_t)
 userdom_use_all_users_fds(netutils_t)
 
@@ -142,19 +150,36 @@
 	init_dontaudit_use_fds(ping_t)
 
 	optional_policy(`
+		nagios_dontaudit_rw_log(ping_t)
 		nagios_dontaudit_rw_pipes(ping_t)
+		nrpe_dontaudit_write_pipes(ping_t)
 	')
 ')
 
+term_use_all_terms(ping_t)
+
+tunable_policy(`user_ping',`
+	term_use_all_ttys(ping_t)
+	term_use_all_ptys(ping_t)
+',`
+	term_dontaudit_use_all_ttys(ping_t)
+	term_dontaudit_use_all_ptys(ping_t)
+')
+
 optional_policy(`
 	munin_append_log(ping_t)
 ')
 
 optional_policy(`
+	nagios_rw_inerited_tmp_files(ping_t)
+')
+
+optional_policy(`
 	pcmcia_use_cardmgr_fds(ping_t)
 ')
 
 optional_policy(`
+	hal_dontaudit_read_pid_files(ping_t)
 	hotplug_use_fds(ping_t)
 ')
 
@@ -195,6 +220,7 @@
 domain_use_interactive_fds(traceroute_t)
 
 files_read_etc_files(traceroute_t)
+files_read_usr_files(traceroute_t)
 files_dontaudit_search_var(traceroute_t)
 
 init_use_fds(traceroute_t)
@@ -205,9 +231,16 @@
 
 miscfiles_read_localization(traceroute_t)
 
-userdom_use_user_terminals(traceroute_t)
-
 #rules needed for nmap
 dev_read_rand(traceroute_t)
 dev_read_urand(traceroute_t)
-files_read_usr_files(traceroute_t)
+
+term_use_all_terms(traceroute_t)
+
+tunable_policy(`user_ping',`
+	term_use_all_ttys(traceroute_t)
+	term_use_all_ptys(traceroute_t)
+',`
+	term_dontaudit_use_all_ttys(traceroute_t)
+	term_dontaudit_use_all_ptys(traceroute_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/permissivedomains.fc serefpolicy-3.7.19/policy/modules/admin/permissivedomains.fc
--- nsaserefpolicy/policy/modules/admin/permissivedomains.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/permissivedomains.fc	2011-08-30 17:15:39.135160000 +0000
@@ -0,0 +1 @@
+# No file contexts
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/permissivedomains.if serefpolicy-3.7.19/policy/modules/admin/permissivedomains.if
--- nsaserefpolicy/policy/modules/admin/permissivedomains.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/permissivedomains.if	2011-08-30 16:37:17.185159999 +0000
@@ -0,0 +1 @@
+## <summary>No Interfaces</summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/permissivedomains.te serefpolicy-3.7.19/policy/modules/admin/permissivedomains.te
--- nsaserefpolicy/policy/modules/admin/permissivedomains.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/permissivedomains.te	2012-05-15 07:43:14.117642482 +0000
@@ -0,0 +1,298 @@
+policy_module(permissivedomains, 1.0.0)
+
+optional_policy(`
+		gen_require(`
+			type fcoemon_t;
+		')
+
+		permissive fcoemon_t;
+')
+
+optional_policy(`
+		gen_require(`
+			type wdmd_t;
+		')
+
+		permissive wdmd_t;
+')
+
+optional_policy(`
+		gen_require(`
+			type zarafa_indexer_t;
+			type zarafa_ical_t;
+			type zarafa_indexer_t;
+			type zarafa_monitor_t;
+			type zarafa_server_t;
+			type zarafa_spooler_t;
+		')
+	
+		permissive zarafa_indexer_t;
+		permissive zarafa_ical_t;
+		permissive zarafa_indexer_t;
+		permissive zarafa_monitor_t;
+		permissive zarafa_server_t;
+		permissive zarafa_spooler_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type boinc_t;
+		type boinc_project_t;
+    ')
+
+    permissive boinc_t;
+	permissive boinc_project_t;
+')
+
+optional_policy(`
+	gen_require(`
+		type sanlock_t;
+	')
+
+	permissive sanlock_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type vdagent_t;
+    ')
+
+    permissive vdagent_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type sblim_gatherd_t;
+		type sblim_reposd_t;
+    ')
+
+    permissive sblim_gatherd_t;
+	permissive sblim_reposd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type ctdbd_t;
+    ')
+
+    permissive ctdbd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type clogd_t;
+    ')
+
+    permissive clogd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type rhsmcertd_t;
+    ')
+
+    permissive rhsmcertd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type foghorn_t;
+    ')
+
+    permissive foghorn_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type matahari_serviced_t;
+		type matahari_hostd_t;
+		type matahari_netd_t;
+		type matahari_rpcd_t;
+    ')
+
+    permissive matahari_serviced_t;
+	permissive matahari_netd_t;
+	permissive matahari_hostd_t;
+	permissive matahari_rpcd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type jabberd_router_t;
+		type jabberd_t;
+    ')
+
+    permissive jabberd_router_t;
+	permissive jabberd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type abrt_dump_oops_t;
+        type abrt_handle_event_t;
+		type abrt_retrace_worker_exec_t;
+		type abrt_retrace_coredump_t;
+    ')
+
+	permissive abrt_dump_oops_t;
+	permissive abrt_handle_event_t;
+	permissive abrt_retrace_worker_exec_t;
+	permissive abrt_retrace_coredump_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type rhev_agentd_t;
+    ')
+
+    permissive rhev_agentd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type uuidd_t;
+    ')
+
+    permissive uuidd_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type lldpad_t;
+    ')
+
+    permissive lldpad_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type passenger_t;
+    ')
+
+    permissive passenger_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type ncftool_t;
+    ')
+
+    permissive ncftool_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type namespace_init_t;
+    ')
+
+    permissive namespace_init_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type httpd_mediawiki_script_t;
+    ')
+
+    permissive httpd_mediawiki_script_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type quota_nld_t;
+    ')
+
+	 permissive quota_nld_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type deltacloudd_t;
+		type iwhd_t;
+		type mongod_t;
+		type thin_t;
+    ')
+
+	permissive deltacloudd_t;
+	permissive iwhd_t;
+	permissive mongod_t;
+	permissive thin_t;
+')
+
+optional_policy(`
+    gen_require(`
+		type virt_qmf_t;
+	')
+
+	permissive virt_qmf_t;
+')
+
+optional_policy(`
+    gen_require(`
+        type condor_collector_t;
+		type condor_negotiator_t;
+		type condor_startd_t;
+		type condor_schedd_t;
+		type condor_procd_t;
+		type condor_master_t;
+    ')
+	permissive condor_collector_t;
+	permissive condor_negotiator_t;
+	permissive condor_schedd_t;
+	permissive condor_startd_t;
+	permissive condor_procd_t;
+	permissive condor_master_t;
+')
+
+optional_policy(`
+        gen_require(`
+                type quantum_t;
+        ')
+
+        permissive quantum_t;
+')
+
+optional_policy(`
+    gen_require(`
+                type keystone_t;
+        ')
+
+        permissive keystone_t;
+')
+
+optional_policy(`
+    gen_require(`
+                type glance_t;
+        ')
+
+        permissive glance_t;
+')
+
+optional_policy(`
+    gen_require(`
+                type nova_ajax_t;
+				type nova_api_t;
+				type nova_cert_t;
+				type nova_compute_t;
+				type nova_console_t;
+				type nova_direct_t;
+				type nova_network_t;
+				type nova_objectstore_t;
+				type nova_scheduler_t;
+				type nova_vncproxy_t;
+				type nova_volume_t;
+        ')
+
+        permissive nova_ajax_t;
+		permissive nova_api_t;
+		permissive nova_cert_t;
+		permissive nova_compute_t;
+		permissive nova_console_t;
+		permissive nova_direct_t;
+		permissive nova_network_t;
+		permissive nova_objectstore_t;
+		permissive nova_scheduler_t;
+		permissive nova_vncproxy_t;
+		permissive nova_volume_t;
+')
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/portage.if serefpolicy-3.7.19/policy/modules/admin/portage.if
--- nsaserefpolicy/policy/modules/admin/portage.if	2011-03-17 07:21:22.842851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/portage.if	2011-09-08 14:25:08.055160000 +0000
@@ -72,7 +72,7 @@
 	gen_require(`
 		class dbus send_msg;
 		type portage_devpts_t, portage_log_t, portage_tmp_t;
-		type portage_tmpfs_t;
+		type portage_tmpfs_t, portage_sandbox_t;
 	')
 
 	allow $1 self:capability { fowner fsetid mknod setgid setuid chown dac_override net_raw };
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/prelink.fc serefpolicy-3.7.19/policy/modules/admin/prelink.fc
--- nsaserefpolicy/policy/modules/admin/prelink.fc	2011-03-17 07:21:22.905851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/prelink.fc	2011-03-17 07:21:05.915851002 +0000
@@ -1,3 +1,4 @@
+/etc/cron\.daily/prelink	--      gen_context(system_u:object_r:prelink_cron_system_exec_t,s0)
 
 /etc/prelink\.cache		--	gen_context(system_u:object_r:prelink_cache_t,s0)
 
@@ -6,4 +7,5 @@
 /var/log/prelink\.log		--	gen_context(system_u:object_r:prelink_log_t,s0)
 /var/log/prelink(/.*)?			gen_context(system_u:object_r:prelink_log_t,s0)
 
-/var/lib/misc/prelink.*		--	gen_context(system_u:object_r:prelink_var_lib_t,s0)
+/var/lib/misc/prelink.*	--	gen_context(system_u:object_r:prelink_var_lib_t,s0)
+/var/lib/prelink(/.*)?			gen_context(system_u:object_r:prelink_var_lib_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/prelink.if serefpolicy-3.7.19/policy/modules/admin/prelink.if
--- nsaserefpolicy/policy/modules/admin/prelink.if	2011-03-17 07:21:22.861851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/prelink.if	2011-03-17 07:21:05.846851003 +0000
@@ -17,6 +17,30 @@
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, prelink_exec_t, prelink_t)
+
+	ifdef(`hide_broken_symptoms', `
+	        dontaudit prelink_t $1:socket_class_set { read write };
+	        dontaudit prelink_t $1:fifo_file setattr;
+	')
+')
+
+########################################
+## <summary>
+##	Execute the prelink program in the current domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`prelink_exec',`
+	gen_require(`
+		type prelink_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	can_exec($1, prelink_exec_t)
 ')
 
 ########################################
@@ -151,11 +175,11 @@
 ##	</summary>
 ## </param>
 #
-interface(`prelink_relabelfrom_lib',`
+interface(`prelink_relabel_lib',`
 	gen_require(`
 		type prelink_var_lib_t;
 	')
 
 	files_search_var_lib($1)
-	relabelfrom_files_pattern($1, prelink_var_lib_t, prelink_var_lib_t)
+	relabel_files_pattern($1, prelink_var_lib_t, prelink_var_lib_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/prelink.te serefpolicy-3.7.19/policy/modules/admin/prelink.te
--- nsaserefpolicy/policy/modules/admin/prelink.te	2011-03-17 07:21:22.580851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/prelink.te	2011-04-13 10:11:16.745000002 +0000
@@ -21,8 +21,21 @@
 type prelink_tmp_t;
 files_tmp_file(prelink_tmp_t)
 
+type prelink_tmpfs_t;
+files_tmpfs_file(prelink_tmpfs_t)
+
 type prelink_var_lib_t;
-files_tmp_file(prelink_var_lib_t)
+files_type(prelink_var_lib_t)
+
+########################################
+#
+# Prelink Cron system Declarations
+#
+
+type prelink_cron_system_t;
+type prelink_cron_system_exec_t;
+domain_type(prelink_cron_system_t)
+domain_entry_file(prelink_cron_system_t, prelink_cron_system_exec_t)
 
 ########################################
 #
@@ -35,7 +48,6 @@
 
 allow prelink_t prelink_cache_t:file manage_file_perms;
 files_etc_filetrans(prelink_t, prelink_cache_t, file)
-files_var_lib_filetrans(prelink_t, prelink_cache_t, file)
 
 allow prelink_t prelink_log_t:dir setattr;
 create_files_pattern(prelink_t, prelink_log_t, prelink_log_t)
@@ -45,15 +57,19 @@
 
 allow prelink_t prelink_tmp_t:file { manage_file_perms execute relabelfrom execmod };
 files_tmp_filetrans(prelink_t, prelink_tmp_t, file)
-fs_tmpfs_filetrans(prelink_t, prelink_tmp_t, file)
+
+allow prelink_t prelink_tmpfs_t:file { manage_file_perms execute relabelfrom execmod };
+fs_tmpfs_filetrans(prelink_t, prelink_tmpfs_t, file)
 
 manage_dirs_pattern(prelink_t, prelink_var_lib_t, prelink_var_lib_t)
 manage_files_pattern(prelink_t, prelink_var_lib_t, prelink_var_lib_t)
+relabel_files_pattern(prelink_t, prelink_var_lib_t, prelink_var_lib_t)
+files_var_lib_filetrans(prelink_t, prelink_var_lib_t, { dir file })
 files_search_var_lib(prelink_t)
 
 # prelink misc objects that are not system
 # libraries or entrypoints
-allow prelink_t prelink_object:file { manage_file_perms execute relabelto relabelfrom };
+allow prelink_t prelink_object:file { manage_file_perms execute relabel_file_perms };
 
 kernel_read_system_state(prelink_t)
 kernel_read_kernel_sysctls(prelink_t)
@@ -64,6 +80,7 @@
 corecmd_read_bin_symlinks(prelink_t)
 
 dev_read_urand(prelink_t)
+dev_getattr_all_chr_files(prelink_t)
 
 files_list_all(prelink_t)
 files_getattr_all_files(prelink_t)
@@ -80,6 +97,7 @@
 selinux_get_enforce_mode(prelink_t)
 
 libs_exec_ld_so(prelink_t)
+libs_legacy_use_shared_libs(prelink_t)
 libs_manage_ld_so(prelink_t)
 libs_relabel_ld_so(prelink_t)
 libs_manage_shared_libs(prelink_t)
@@ -89,6 +107,8 @@
 miscfiles_read_localization(prelink_t)
 
 userdom_use_user_terminals(prelink_t)
+userdom_manage_user_home_content(prelink_t)
+userdom_execmod_user_home_files(prelink_t)
 
 optional_policy(`
 	amanda_manage_lib(prelink_t)
@@ -99,5 +119,66 @@
 ')
 
 optional_policy(`
+	nsplugin_manage_rw_files(prelink_t)
+')
+
+optional_policy(`
+	rpm_manage_tmp_files(prelink_t)
+')
+
+optional_policy(`
 	unconfined_domain(prelink_t)
 ')
+
+########################################
+#
+# Prelink Cron system Policy
+#
+
+allow prelink_cron_system_t self:capability { dac_read_search dac_override };
+allow prelink_cron_system_t self:capability setuid;
+allow prelink_cron_system_t self:process { setsched setfscreate signal };
+
+allow prelink_cron_system_t self:fifo_file rw_fifo_file_perms;
+allow prelink_cron_system_t self:unix_dgram_socket { write bind create setopt };
+
+domtrans_pattern(prelink_cron_system_t, prelink_exec_t, prelink_t)
+allow prelink_cron_system_t prelink_t:process noatsecure;  
+
+read_files_pattern(prelink_cron_system_t, prelink_cache_t, prelink_cache_t)
+allow prelink_cron_system_t prelink_cache_t:file unlink;
+files_delete_etc_dir_entry(prelink_cron_system_t)
+
+manage_files_pattern(prelink_cron_system_t, prelink_log_t, prelink_log_t)
+
+manage_files_pattern(prelink_cron_system_t, prelink_var_lib_t, prelink_var_lib_t)
+files_var_lib_filetrans(prelink_cron_system_t, prelink_var_lib_t, file)
+allow prelink_cron_system_t prelink_var_lib_t:file { relabelfrom relabelto };
+
+corecmd_exec_bin(prelink_cron_system_t)
+corecmd_exec_shell(prelink_cron_system_t)
+
+files_dontaudit_search_all_mountpoints(prelink_cron_system_t)
+files_read_etc_files(prelink_cron_system_t)
+files_search_var_lib(prelink_cron_system_t)
+
+init_exec(prelink_cron_system_t)
+
+kernel_read_system_state(prelink_cron_system_t)
+
+libs_exec_ld_so(prelink_cron_system_t)
+
+logging_search_logs(prelink_cron_system_t)
+
+miscfiles_read_localization(prelink_cron_system_t)
+
+userdom_dontaudit_list_admin_dir(prelink_cron_system_t)
+
+optional_policy(`
+	cron_system_entry(prelink_cron_system_t, prelink_cron_system_exec_t)
+')
+
+optional_policy(`
+	rpm_read_db(prelink_cron_system_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/quota.fc serefpolicy-3.7.19/policy/modules/admin/quota.fc
--- nsaserefpolicy/policy/modules/admin/quota.fc	2011-03-17 07:21:22.804851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/quota.fc	2012-01-26 10:52:27.808360388 +0000
@@ -10,10 +10,15 @@
 
 /var/a?quota\.(user|group)	--	gen_context(system_u:object_r:quota_db_t,s0)
 /var/lib/quota(/.*)?			gen_context(system_u:object_r:quota_flag_t,s0)
-/var/spool/a?quota\.(user|group) --	gen_context(system_u:object_r:quota_db_t,s0)
+/var/spool/(.*/)?a?quota\.(user|group) --      gen_context(system_u:object_r:quota_db_t,s0)
 
 ifdef(`distro_redhat',`
 /usr/sbin/convertquota		--	gen_context(system_u:object_r:quota_exec_t,s0)
 ',`
 /sbin/convertquota		--	gen_context(system_u:object_r:quota_exec_t,s0)
 ')
+
+/usr/sbin/quota_nld     --  gen_context(system_u:object_r:quota_nld_exec_t,s0)
+
+/var/run/quota_nld\.pid --  gen_context(system_u:object_r:quota_nld_var_run_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/quota.if serefpolicy-3.7.19/policy/modules/admin/quota.if
--- nsaserefpolicy/policy/modules/admin/quota.if	2011-03-17 07:21:22.811851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/quota.if	2012-03-20 19:28:22.508091379 +0000
@@ -63,6 +63,24 @@
 	dontaudit $1 quota_db_t:file getattr;
 ')
 
+#######################################
+## <summary>
+##  Alow to read of filesystem quota data files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`quota_read_db',`
+    gen_require(`
+        type quota_db_t;
+    ')
+
+    allow $1 quota_db_t:file read_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Create, read, write, and delete quota
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/quota.te serefpolicy-3.7.19/policy/modules/admin/quota.te
--- nsaserefpolicy/policy/modules/admin/quota.te	2011-03-17 07:21:22.855851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/quota.te	2012-03-20 16:35:17.240452005 +0000
@@ -16,6 +16,13 @@
 type quota_flag_t;
 files_type(quota_flag_t)
 
+type quota_nld_t;
+type quota_nld_exec_t;
+init_daemon_domain(quota_nld_t, quota_nld_exec_t)
+
+type quota_nld_var_run_t;
+files_pid_file(quota_nld_var_run_t)
+
 ########################################
 #
 # Local policy
@@ -35,10 +42,12 @@
 files_usr_filetrans(quota_t, quota_db_t, file)
 files_var_filetrans(quota_t, quota_db_t, file)
 files_spool_filetrans(quota_t, quota_db_t, file)
+userdom_user_home_dir_filetrans(quota_t, quota_db_t, file)
 
 kernel_list_proc(quota_t)
 kernel_read_proc_symlinks(quota_t)
 kernel_read_kernel_sysctls(quota_t)
+kernel_setsched(quota_t)
 
 dev_read_sysfs(quota_t)
 dev_getattr_all_blk_files(quota_t)
@@ -49,6 +58,7 @@
 fs_getattr_xattr_fs(quota_t)
 fs_remount_xattr_fs(quota_t)
 fs_search_auto_mountpoints(quota_t)
+fs_create_noxattr_fs_files(quota_t)
 
 mls_file_read_all_levels(quota_t)
 
@@ -76,9 +86,45 @@
 userdom_dontaudit_use_unpriv_user_fds(quota_t)
 
 optional_policy(`
+	mta_spool_filetrans(quota_t, quota_db_t, file)
+	mta_spool_filetrans_queue(quota_t, quota_db_t, file)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(quota_t)
 ')
 
 optional_policy(`
 	udev_read_db(quota_t)
 ')
+
+######################################
+#
+# quota-nld local policy
+#
+
+allow quota_nld_t self:fifo_file rw_fifo_file_perms;
+allow quota_nld_t self:netlink_socket create_socket_perms;
+allow quota_nld_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(quota_nld_t, quota_nld_var_run_t, quota_nld_var_run_t)
+files_pid_filetrans(quota_nld_t, quota_nld_var_run_t, { file })
+
+kernel_read_network_state(quota_nld_t)
+
+files_read_etc_files(quota_nld_t)
+
+auth_use_nsswitch(quota_nld_t)
+
+init_read_utmp(quota_nld_t)
+
+logging_send_syslog_msg(quota_nld_t)
+
+miscfiles_read_localization(quota_nld_t)
+
+userdom_use_user_terminals(quota_nld_t)
+
+optional_policy(`
+    dbus_system_bus_client(quota_nld_t)
+    dbus_connect_system_bus(quota_nld_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/readahead.te serefpolicy-3.7.19/policy/modules/admin/readahead.te
--- nsaserefpolicy/policy/modules/admin/readahead.te	2011-03-17 07:21:22.891851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/readahead.te	2011-03-17 07:21:05.883851002 +0000
@@ -52,6 +52,7 @@
 
 files_list_non_security(readahead_t)
 files_read_non_security_files(readahead_t)
+files_dontaudit_read_security_files(readahead_t)
 files_create_boot_flag(readahead_t)
 files_getattr_all_pipes(readahead_t)
 files_dontaudit_getattr_all_sockets(readahead_t)
@@ -61,13 +62,17 @@
 fs_search_auto_mountpoints(readahead_t)
 fs_getattr_all_pipes(readahead_t)
 fs_getattr_all_files(readahead_t)
+fs_read_cgroup_files(readahead_t)
+fs_read_tmpfs_files(readahead_t)
 fs_read_tmpfs_symlinks(readahead_t)
 fs_list_inotifyfs(readahead_t)
+fs_dontaudit_read_tmpfs_blk_dev(readahead_t)
 fs_dontaudit_search_ramfs(readahead_t)
 fs_dontaudit_read_ramfs_pipes(readahead_t)
 fs_dontaudit_read_ramfs_files(readahead_t)
 fs_dontaudit_use_tmpfs_chr_dev(readahead_t)
 
+mcs_file_read_all(readahead_t)
 mls_file_read_all_levels(readahead_t)
 
 storage_raw_read_fixed_disk(readahead_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/rpm.fc serefpolicy-3.7.19/policy/modules/admin/rpm.fc
--- nsaserefpolicy/policy/modules/admin/rpm.fc	2011-03-17 07:21:22.586851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/rpm.fc	2012-05-15 00:06:31.585411594 +0000
@@ -1,35 +1,49 @@
 
 /bin/rpm 			--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/bin/rpm 			--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/bin/debuginfo-install      --      gen_context(system_u:object_r:debuginfo_exec_t,s0)
 /usr/bin/smart 			--	gen_context(system_u:object_r:rpm_exec_t,s0)
 
 /usr/bin/yum 			--	gen_context(system_u:object_r:rpm_exec_t,s0)
 
-/usr/lib(64)?/rpm/rpmd		-- 	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib(64)?/rpm/rpmq		-- 	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib(64)?/rpm/rpmk		-- 	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib(64)?/rpm/rpmv		-- 	gen_context(system_u:object_r:bin_t,s0)
+/usr/sbin/yum-complete-transaction --	gen_context(system_u:object_r:rpm_exec_t,s0)
 
 /usr/sbin/system-install-packages --	gen_context(system_u:object_r:rpm_exec_t,s0)
 /usr/sbin/yum-updatesd		--	gen_context(system_u:object_r:rpm_exec_t,s0)
-
-/usr/share/yumex/yumex		--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/sbin/packagekitd		--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/libexec/packagekitd	--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/libexec/yumDBUSBackend.py	--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/share/yumex/yumex-yum-backend --	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/share/yumex/yum_childtask\.py --	gen_context(system_u:object_r:rpm_exec_t,s0)
 
 ifdef(`distro_redhat', `
+/usr/sbin/bcfg2             --  gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/bin/package-cleanup	--	gen_context(system_u:object_r:rpm_exec_t,s0)
 /usr/bin/fedora-rmdevelrpms	--	gen_context(system_u:object_r:rpm_exec_t,s0)
 /usr/bin/rpmdev-rmdevelrpms	--	gen_context(system_u:object_r:rpm_exec_t,s0)
 /usr/sbin/pirut			--	gen_context(system_u:object_r:rpm_exec_t,s0)
 /usr/sbin/pup			--	gen_context(system_u:object_r:rpm_exec_t,s0)
-/usr/sbin/rhn_check		--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/sbin/rhn_check     --  gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/sbin/rhnreg_ks		--	gen_context(system_u:object_r:rpm_exec_t,s0)
 /usr/sbin/up2date		--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/sbin/synaptic		--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/bin/apt-get		--	gen_context(system_u:object_r:rpm_exec_t,s0)
+/usr/bin/apt-shell		--	gen_context(system_u:object_r:rpm_exec_t,s0)
 ')
 
 /var/lib/alternatives(/.*)?		gen_context(system_u:object_r:rpm_var_lib_t,s0)
 
 /var/lib/rpm(/.*)?			gen_context(system_u:object_r:rpm_var_lib_t,s0)
+/var/lib/yum(/.*)?			gen_context(system_u:object_r:rpm_var_lib_t,s0)
+/var/cache/yum(/.*)?			gen_context(system_u:object_r:rpm_var_cache_t,s0)
+
+/var/spool/up2date(/.*)?	gen_context(system_u:object_r:rpm_var_cache_t,s0)
 
-/var/log/rpmpkgs.*		--	gen_context(system_u:object_r:rpm_log_t,s0)
 /var/log/yum\.log.*		--	gen_context(system_u:object_r:rpm_log_t,s0)
 
+/var/run/yum.*			--	gen_context(system_u:object_r:rpm_var_run_t,s0)
+/var/run/PackageKit(/.*)?		gen_context(system_u:object_r:rpm_var_run_t,s0)
+
 # SuSE
 ifdef(`distro_suse', `
 /usr/bin/online_update		--	gen_context(system_u:object_r:rpm_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/rpm.if serefpolicy-3.7.19/policy/modules/admin/rpm.if
--- nsaserefpolicy/policy/modules/admin/rpm.if	2011-03-17 07:21:22.835851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/rpm.if	2011-03-17 07:21:05.818851003 +0000
@@ -13,11 +13,36 @@
 interface(`rpm_domtrans',`
 	gen_require(`
 		type rpm_t, rpm_exec_t;
+		type debuginfo_exec_t;
+		attribute rpm_transition_domain;
 	')
 
 	files_search_usr($1)
 	corecmd_search_bin($1)
 	domtrans_pattern($1, rpm_exec_t, rpm_t)
+	domtrans_pattern($1, debuginfo_exec_t, rpm_t)
+	typeattribute $1 rpm_transition_domain;
+')
+
+########################################
+## <summary>
+##	Execute debuginfo_install programs in the rpm domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`rpm_domtrans_debuginfo',`
+	gen_require(`
+		type rpm_t;
+		type debuginfo_exec_t;
+	')
+
+	files_search_usr($1)
+	corecmd_search_bin($1)
+	domtrans_pattern($1, debuginfo_exec_t, rpm_t)
 ')
 
 ########################################
@@ -66,6 +91,11 @@
 	rpm_domtrans($1)
 	role $2 types rpm_t;
 	role $2 types rpm_script_t;
+
+	domain_system_change_exemption($1)
+	role_transition $2 rpm_exec_t system_r;
+	allow $2 system_r;
+
 	seutil_run_loadpolicy(rpm_script_t, $2)
 	seutil_run_semanage(rpm_script_t, $2)
 	seutil_run_setfiles(rpm_script_t, $2)
@@ -146,6 +176,41 @@
 
 ########################################
 ## <summary>
+##	dontaudit read and write an leaked file descriptors
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`rpm_dontaudit_leaks',`
+	gen_require(`
+		type rpm_t, rpm_var_cache_t;
+		type rpm_script_t, rpm_var_run_t, rpm_tmp_t;
+		type rpm_tmpfs_t, rpm_script_tmp_t, rpm_var_lib_t;
+	')
+
+	dontaudit $1 rpm_t:fifo_file rw_inherited_fifo_file_perms;
+ 	dontaudit $1 rpm_t:tcp_socket { read write };
+	dontaudit $1 rpm_t:unix_dgram_socket { read write };
+	dontaudit $1 rpm_t:shm rw_shm_perms;
+
+	dontaudit $1 rpm_script_t:fd use;
+	dontaudit $1 rpm_script_t:fifo_file rw_inherited_fifo_file_perms;
+
+	dontaudit $1 rpm_var_run_t:file rw_inherited_file_perms;
+
+	dontaudit $1 rpm_tmp_t:file rw_inherited_file_perms;
+ 	dontaudit $1 rpm_tmpfs_t:dir rw_dir_perms;
+ 	dontaudit $1 rpm_tmpfs_t:file rw_inherited_file_perms;
+	dontaudit $1 rpm_script_tmp_t:file rw_inherited_file_perms;
+	dontaudit $1 rpm_var_lib_t:file rw_inherited_file_perms;
+	dontaudit $1 rpm_var_cache_t:file  rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Send and receive messages from
 ##	rpm over dbus.
 ## </summary>
@@ -167,6 +232,68 @@
 
 ########################################
 ## <summary>
+##	dontaudit attempts to Send and receive messages from
+##	rpm over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rpm_dontaudit_dbus_chat',`
+	gen_require(`
+		type rpm_t;
+		class dbus send_msg;
+	')
+
+	dontaudit $1 rpm_t:dbus send_msg;
+	dontaudit rpm_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	rpm_script over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rpm_script_dbus_chat',`
+	gen_require(`
+		type rpm_script_t;
+		class dbus send_msg;
+	')
+
+	allow $1 rpm_script_t:dbus send_msg;
+	allow rpm_script_t $1:dbus send_msg;
+')
+
+#####################################
+## <summary>
+##      Allow the specified domain to append
+##      to rpm log files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`rpm_append_log',`
+        gen_require(`
+                type rpm_log_t;
+        ')
+
+        logging_search_logs($1)
+        append_files_pattern($1, rpm_log_t, rpm_log_t)
+')
+
+########################################
+## <summary>
 ##	Create, read, write, and delete the RPM log.
 ## </summary>
 ## <param name="domain">
@@ -186,6 +313,24 @@
 
 ########################################
 ## <summary>
+##	Search RPM log directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`rpm_search_log',`
+	gen_require(`
+		type rpm_log_t;
+	')
+
+	allow $1 rpm_log_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Inherit and use file descriptors from RPM scripts.
 ## </summary>
 ## <param name="domain">
@@ -219,7 +364,71 @@
 	')
 
 	files_search_tmp($1)
+	manage_dirs_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
 	manage_files_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
+	manage_lnk_files_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
+')
+
+#####################################
+## <summary>
+##      Allow the specified domain to append
+##      to rpm tmp files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`rpm_append_tmp',`
+        gen_require(`
+                type rpm_tmp_t;
+        ')
+
+        files_search_tmp($1)
+        append_files_pattern($1, rpm_tmp_t, rpm_tmp_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete RPM
+##	 temporary files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rpm_manage_tmp_files',`
+	gen_require(`
+		type rpm_tmp_t;
+	')
+
+	files_search_tmp($1)
+	manage_dirs_pattern($1, rpm_tmp_t, rpm_tmp_t)
+	manage_files_pattern($1, rpm_tmp_t, rpm_tmp_t)
+	manage_lnk_files_pattern($1, rpm_tmp_t, rpm_tmp_t)
+')
+
+########################################
+## <summary>
+##	read, RPM
+##	script temporary files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rpm_read_script_tmp_files',`
+	gen_require(`
+		type rpm_script_tmp_t;
+	')
+
+	read_files_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
+	read_lnk_files_pattern($1, rpm_script_tmp_t, rpm_script_tmp_t)
 ')
 
 ########################################
@@ -241,6 +450,25 @@
 	allow $1 rpm_var_lib_t:dir list_dir_perms;
 	read_files_pattern($1, rpm_var_lib_t, rpm_var_lib_t)
 	read_lnk_files_pattern($1, rpm_var_lib_t, rpm_var_lib_t)
+	rpm_read_cache($1)
+')
+
+########################################
+## <summary>
+##	Delete the RPM package database.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`rpm_delete_db',`
+	gen_require(`
+		type rpm_var_lib_t;
+	')
+
+	delete_files_pattern($1, rpm_var_lib_t, rpm_var_lib_t)
 ')
 
 ########################################
@@ -265,6 +493,48 @@
 
 ########################################
 ## <summary>
+##	Read the RPM cache.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`rpm_read_cache',`
+	gen_require(`
+		type rpm_var_cache_t;
+	')
+
+	files_search_var($1)
+	allow $1 rpm_var_cache_t:dir list_dir_perms;
+	read_files_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
+	read_lnk_files_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete the RPM package database.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`rpm_manage_cache',`
+	gen_require(`
+		type rpm_var_cache_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
+	manage_files_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
+	manage_lnk_files_pattern($1, rpm_var_cache_t, rpm_var_cache_t)
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to create, read, 
 ##	write, and delete the RPM package database.
 ## </summary>
@@ -283,3 +553,138 @@
 	dontaudit $1 rpm_var_lib_t:file manage_file_perms;
 	dontaudit $1 rpm_var_lib_t:lnk_file manage_lnk_file_perms;
 ')
+
+######################################
+## <summary>
+##  Dontaudit search the RPM package database.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rpm_dontaudit_search_db',`
+    gen_require(`
+        type rpm_var_lib_t;
+    ')
+
+    dontaudit $1 rpm_var_lib_t:dir list_dir_perms;
+')
+
+#####################################
+## <summary>
+##      Read rpm pid files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`rpm_read_pid_files',`
+        gen_require(`
+                type rpm_var_run_t;
+        ')
+
+	read_files_pattern($1,rpm_var_run_t,rpm_var_run_t)
+')
+
+#####################################
+## <summary>
+##      Create, read, write, and delete rpm pid files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`rpm_manage_pid_files',`
+        gen_require(`
+                type rpm_var_run_t;
+        ')
+
+        manage_files_pattern($1,rpm_var_run_t,rpm_var_run_t)
+')
+
+######################################
+## <summary>
+##      Create files in /var/run with the rpm pid file type.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`rpm_pid_filetrans',`
+        gen_require(`
+                type rpm_var_run_t;
+        ')
+
+        files_pid_filetrans($1, rpm_var_run_t, file)
+')
+
+########################################
+## <summary>
+##	Allow application to transition to rpm_script domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rpm_transition_script',`
+	gen_require(`
+		type rpm_script_t;
+		attribute rpm_transition_domain;
+	')
+
+	typeattribute $1 rpm_transition_domain;
+	allow $1 rpm_script_t:process transition;
+
+	allow $1 rpm_script_t:fd use;
+	allow rpm_script_t $1:fd use;
+	allow rpm_script_t $1:fifo_file rw_fifo_file_perms;
+	allow rpm_script_t $1:process sigchld;
+')
+
+########################################
+## <summary>
+##	Send a null signal to rpm.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rpm_signull',`
+	gen_require(`
+		type rpm_t;
+	')
+
+	allow $1 rpm_t:process signull;
+')
+
+########################################
+## <summary>
+##	Send a null signal to rpm.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rpm_inherited_fifo',`
+	gen_require(`
+		attribute rpm_transition_domain;
+	')
+
+	allow $1 rpm_transition_domain:fifo_file rw_inherited_fifo_file_perms;
+')
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/rpm.te serefpolicy-3.7.19/policy/modules/admin/rpm.te
--- nsaserefpolicy/policy/modules/admin/rpm.te	2011-03-17 07:21:22.746851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/rpm.te	2011-08-10 18:57:07.954523005 +0000
@@ -1,6 +1,8 @@
 
 policy_module(rpm, 1.10.0)
 
+attribute rpm_transition_domain;
+
 ########################################
 #
 # Declarations
@@ -15,6 +17,9 @@
 domain_interactive_fd(rpm_t)
 role system_r types rpm_t;
 
+type debuginfo_exec_t;
+domain_entry_file(rpm_t, debuginfo_exec_t)
+
 type rpm_file_t;
 files_type(rpm_file_t)
 
@@ -31,11 +36,18 @@
 files_type(rpm_var_lib_t)
 typealias rpm_var_lib_t alias var_lib_rpm_t;
 
+type rpm_var_cache_t;
+files_type(rpm_var_cache_t)
+
+type rpm_var_run_t;
+files_pid_file(rpm_var_run_t)
+
 type rpm_script_t;
 type rpm_script_exec_t;
 domain_obj_id_change_exemption(rpm_script_t)
 domain_system_change_exemption(rpm_script_t)
 corecmd_shell_entry_type(rpm_script_t)
+corecmd_bin_entry_type(rpm_script_t)
 domain_type(rpm_script_t)
 domain_entry_file(rpm_t, rpm_script_exec_t)
 domain_interactive_fd(rpm_script_t)
@@ -52,8 +64,9 @@
 # rpm Local policy
 #
 
-allow rpm_t self:capability { chown dac_override fowner fsetid setgid setuid sys_chroot sys_tty_config mknod };
-allow rpm_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
+allow rpm_t self:capability { chown dac_override fowner fsetid ipc_lock setgid setuid setfcap sys_chroot sys_nice sys_tty_config mknod };
+
+allow rpm_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execstack execheap };
 allow rpm_t self:process { getattr setexec setfscreate setrlimit };
 allow rpm_t self:fd use;
 allow rpm_t self:fifo_file rw_fifo_file_perms;
@@ -68,6 +81,9 @@
 allow rpm_t self:sem create_sem_perms;
 allow rpm_t self:msgq create_msgq_perms;
 allow rpm_t self:msg { send receive };
+allow rpm_t self:dir search;
+allow rpm_t self:file rw_file_perms;;
+allow rpm_t self:netlink_kobject_uevent_socket create_socket_perms;
 
 allow rpm_t rpm_log_t:file manage_file_perms;
 logging_log_filetrans(rpm_t, rpm_log_t, file)
@@ -75,6 +91,7 @@
 manage_dirs_pattern(rpm_t, rpm_tmp_t, rpm_tmp_t)
 manage_files_pattern(rpm_t, rpm_tmp_t, rpm_tmp_t)
 files_tmp_filetrans(rpm_t, rpm_tmp_t, { file dir })
+can_exec(rpm_t, rpm_tmp_t)
 
 manage_dirs_pattern(rpm_t, rpm_tmpfs_t, rpm_tmpfs_t)
 manage_files_pattern(rpm_t, rpm_tmpfs_t, rpm_tmpfs_t)
@@ -82,13 +99,23 @@
 manage_fifo_files_pattern(rpm_t, rpm_tmpfs_t, rpm_tmpfs_t)
 manage_sock_files_pattern(rpm_t, rpm_tmpfs_t, rpm_tmpfs_t)
 fs_tmpfs_filetrans(rpm_t, rpm_tmpfs_t, { dir file lnk_file sock_file fifo_file })
+can_exec(rpm_t, rpm_tmpfs_t)
+
+manage_dirs_pattern(rpm_t, rpm_var_cache_t, rpm_var_cache_t)
+manage_files_pattern(rpm_t, rpm_var_cache_t, rpm_var_cache_t)
+files_var_filetrans(rpm_t, rpm_var_cache_t, dir)
 
 # Access /var/lib/rpm files
 manage_files_pattern(rpm_t, rpm_var_lib_t, rpm_var_lib_t)
 files_var_lib_filetrans(rpm_t, rpm_var_lib_t, dir)
 
+manage_files_pattern(rpm_t, rpm_var_run_t, rpm_var_run_t)
+files_pid_filetrans(rpm_t, rpm_var_run_t, file)
+
+kernel_read_network_state(rpm_t)
 kernel_read_system_state(rpm_t)
 kernel_read_kernel_sysctls(rpm_t)
+kernel_read_network_state_symlinks(rpm_t)
 
 corecmd_exec_all_executables(rpm_t)
 
@@ -108,12 +135,15 @@
 dev_list_sysfs(rpm_t)
 dev_list_usbfs(rpm_t)
 dev_read_urand(rpm_t)
+dev_read_raw_memory(rpm_t)
 #devices_manage_all_device_types(rpm_t)
 
+fs_getattr_all_fs(rpm_t)
+fs_getattr_all_dirs(rpm_t)
+fs_list_inotifyfs(rpm_t)
 fs_manage_nfs_dirs(rpm_t)
 fs_manage_nfs_files(rpm_t)
 fs_manage_nfs_symlinks(rpm_t)
-fs_getattr_all_fs(rpm_t)
 fs_search_auto_mountpoints(rpm_t)
 
 mls_file_read_all_levels(rpm_t)
@@ -132,6 +162,10 @@
 # for installing kernel packages
 storage_raw_read_fixed_disk(rpm_t)
 
+term_list_ptys(rpm_t)
+# needed in MLS
+term_use_console(rpm_t)
+
 auth_relabel_all_files_except_shadow(rpm_t)
 auth_manage_all_files_except_shadow(rpm_t)
 auth_dontaudit_read_shadow(rpm_t)
@@ -155,6 +189,8 @@
 files_exec_etc_files(rpm_t)
 
 init_domtrans_script(rpm_t)
+init_use_script_ptys(rpm_t)
+init_signull_script(rpm_t)
 
 libs_exec_ld_so(rpm_t)
 libs_exec_lib_files(rpm_t)
@@ -174,7 +210,19 @@
 ')
 
 optional_policy(`
-	hal_dbus_chat(rpm_t)
+	dbus_system_domain(rpm_t, rpm_exec_t)
+
+	optional_policy(`
+		hal_dbus_chat(rpm_t)
+	')
+
+	optional_policy(`
+		networkmanager_dbus_chat(rpm_t)
+	')
+
+	optional_policy(`
+		dbus_system_domain(rpm_t, debuginfo_exec_t)
+	')
 ')
 
 optional_policy(`
@@ -182,36 +230,19 @@
 ')
 
 optional_policy(`
-	unconfined_domain(rpm_t)
+	unconfined_domain_noaudit(rpm_t)
 	# yum-updatesd requires this
 	unconfined_dbus_chat(rpm_t)
+	unconfined_dbus_chat(rpm_script_t)
 ')
 
-ifdef(`TODO',`
-# read/write/create any files in the system
-dontaudit rpm_t domain:{ socket unix_dgram_socket udp_socket unix_stream_socket tcp_socket fifo_file rawip_socket packet_socket } getattr;
-allow rpm_t ttyfile:chr_file unlink;
-
-# needs rw permission to the directory for an rpm package that includes a mount
-# point
-allow rpm_t fs_type:dir { setattr rw_dir_perms };
-
-allow rpm_t mount_t:tcp_socket write;
-
-allow rpm_t rpc_pipefs_t:dir search;
-
-optional_policy(`
-allow rpm_t sysadm_gph_t:fd use;
-')
-') dnl endif TODO
-
 ########################################
 #
 # rpm-script Local policy
 #
 
-allow rpm_script_t self:capability { chown dac_override dac_read_search fowner fsetid setgid setuid ipc_lock sys_chroot sys_nice mknod kill };
-allow rpm_script_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
+allow rpm_script_t self:capability { chown dac_override dac_read_search fowner fsetid setgid setuid ipc_lock sys_admin sys_chroot sys_ptrace sys_rawio sys_nice mknod kill net_admin };
+allow rpm_script_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execheap };
 allow rpm_script_t self:fd use;
 allow rpm_script_t self:fifo_file rw_fifo_file_perms;
 allow rpm_script_t self:unix_dgram_socket create_socket_perms;
@@ -222,12 +253,15 @@
 allow rpm_script_t self:sem create_sem_perms;
 allow rpm_script_t self:msgq create_msgq_perms;
 allow rpm_script_t self:msg { send receive };
+allow rpm_script_t self:netlink_kobject_uevent_socket create_socket_perms;
 
 allow rpm_script_t rpm_tmp_t:file read_file_perms;
 
 allow rpm_script_t rpm_script_tmp_t:dir mounton;
 manage_dirs_pattern(rpm_script_t, rpm_script_tmp_t, rpm_script_tmp_t)
 manage_files_pattern(rpm_script_t, rpm_script_tmp_t, rpm_script_tmp_t)
+manage_blk_files_pattern(rpm_script_t, rpm_script_tmp_t, rpm_script_tmp_t)
+manage_chr_files_pattern(rpm_script_t, rpm_script_tmp_t, rpm_script_tmp_t)
 files_tmp_filetrans(rpm_script_t, rpm_script_tmp_t, { file dir })
 
 manage_dirs_pattern(rpm_script_t, rpm_script_tmpfs_t, rpm_script_tmpfs_t)
@@ -237,8 +271,16 @@
 manage_sock_files_pattern(rpm_script_t, rpm_script_tmpfs_t, rpm_script_tmpfs_t)
 fs_tmpfs_filetrans(rpm_script_t, rpm_script_tmpfs_t, { dir file lnk_file sock_file fifo_file })
 
+allow rpm_script_t rpm_t:netlink_route_socket { read write };
+
 kernel_read_kernel_sysctls(rpm_script_t)
 kernel_read_system_state(rpm_script_t)
+kernel_read_network_state(rpm_script_t)
+kernel_list_all_proc(rpm_script_t)
+kernel_read_software_raid_state(rpm_script_t)
+
+# needed by rhn_check
+corenet_tcp_connect_http_port(rpm_script_t)
 
 dev_list_sysfs(rpm_script_t)
 
@@ -254,7 +296,9 @@
 fs_getattr_xattr_fs(rpm_script_t)
 fs_mount_xattr_fs(rpm_script_t)
 fs_unmount_xattr_fs(rpm_script_t)
+fs_search_all(rpm_script_t)
 fs_search_auto_mountpoints(rpm_script_t)
+fs_getattr_all_fs(rpm_script_t)
 
 mcs_killall(rpm_script_t)
 mcs_ptrace_all(rpm_script_t)
@@ -272,14 +316,19 @@
 storage_raw_read_fixed_disk(rpm_script_t)
 storage_raw_write_fixed_disk(rpm_script_t)
 
+term_getattr_unallocated_ttys(rpm_script_t)
+term_list_ptys(rpm_script_t)
 term_use_all_terms(rpm_script_t)
 
 auth_dontaudit_getattr_shadow(rpm_script_t)
 auth_use_nsswitch(rpm_script_t)
 # ideally we would not need this
 auth_manage_all_files_except_shadow(rpm_script_t)
+auth_relabel_shadow(rpm_script_t)
 
 corecmd_exec_all_executables(rpm_script_t)
+can_exec(rpm_script_t, rpm_script_tmp_t)
+can_exec(rpm_script_t, rpm_script_tmpfs_t)
 
 domain_read_all_domains_state(rpm_script_t)
 domain_getattr_all_domains(rpm_script_t)
@@ -291,8 +340,10 @@
 files_exec_etc_files(rpm_script_t)
 files_read_etc_runtime_files(rpm_script_t)
 files_exec_usr_files(rpm_script_t)
+files_relabel_all_files(rpm_script_t)
 
 init_domtrans_script(rpm_script_t)
+init_telinit(rpm_script_t)
 
 libs_exec_ld_so(rpm_script_t)
 libs_exec_lib_files(rpm_script_t)
@@ -308,12 +359,15 @@
 seutil_domtrans_loadpolicy(rpm_script_t)
 seutil_domtrans_setfiles(rpm_script_t)
 seutil_domtrans_semanage(rpm_script_t)
+seutil_domtrans_setsebool(rpm_script_t)
 
 userdom_use_all_users_fds(rpm_script_t)
+userdom_exec_admin_home_files(rpm_script_t)
 
 ifdef(`distro_redhat',`
 	optional_policy(`
 		mta_send_mail(rpm_script_t)
+		mta_system_content(rpm_var_run_t)
 	')
 ')
 
@@ -326,13 +380,26 @@
 ')
 
 optional_policy(`
+	dbus_system_bus_client(rpm_script_t)
+')
+
+optional_policy(`
+	lvm_domtrans(rpm_script_t)
+')
+
+optional_policy(`
 	tzdata_domtrans(rpm_t)
 	tzdata_domtrans(rpm_script_t)
 ')
 
 optional_policy(`
-	unconfined_domain(rpm_script_t)
+	udev_domtrans(rpm_script_t)
+')
+
+optional_policy(`
+	unconfined_domain_noaudit(rpm_script_t)
 	unconfined_domtrans(rpm_script_t)
+	unconfined_execmem_domtrans(rpm_script_t)
 
 	optional_policy(`
 		java_domtrans_unconfined(rpm_script_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/sectoolm.te serefpolicy-3.7.19/policy/modules/admin/sectoolm.te
--- nsaserefpolicy/policy/modules/admin/sectoolm.te	2011-03-17 07:21:22.596851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/sectoolm.te	2011-03-17 07:21:05.479851003 +0000
@@ -85,6 +85,7 @@
 sysnet_domtrans_ifconfig(sectoolm_t)
 
 userdom_manage_user_tmp_sockets(sectoolm_t)
+userdom_stream_connect(sectoolm_t)
 
 optional_policy(`
 	mount_exec(sectoolm_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/shorewall.fc serefpolicy-3.7.19/policy/modules/admin/shorewall.fc
--- nsaserefpolicy/policy/modules/admin/shorewall.fc	2011-03-17 07:21:22.729851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/shorewall.fc	2011-03-17 07:21:05.604851001 +0000
@@ -11,4 +11,6 @@
 /var/lib/shorewall6(/.*)?			gen_context(system_u:object_r:shorewall_var_lib_t,s0)
 /var/lib/shorewall-lite(/.*)?			gen_context(system_u:object_r:shorewall_var_lib_t,s0)
 
+/var/lock/subsys/shorewall  --      gen_context(system_u:object_r:shorewall_lock_t,s0)
+
 /var/log/shorewall.*				gen_context(system_u:object_r:shorewall_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/shorewall.if serefpolicy-3.7.19/policy/modules/admin/shorewall.if
--- nsaserefpolicy/policy/modules/admin/shorewall.if	2011-03-17 07:21:22.672851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/shorewall.if	2011-08-10 18:06:39.844523004 +0000
@@ -18,47 +18,27 @@
 	domtrans_pattern($1, shorewall_exec_t, shorewall_t)
 ')
 
-#######################################
+#####################################
 ## <summary>
-##	Read shorewall etc configuration files.
+##      Execute a domain transition to run shorewall.
 ## </summary>
 ## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`shorewall_read_config',`
-	gen_require(`
-		type shorewall_etc_t;
-	')
-
-	files_search_etc($1)
-	read_files_pattern($1, shorewall_etc_t, shorewall_etc_t)
-')
-
-#######################################
 ## <summary>
-##	Read shorewall PID files.
+##      Domain allowed to transition.
 ## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
 ## </param>
 #
-interface(`shorewall_read_pid_files',`
-	gen_require(`
-		type shorewall_var_run_t;
-	')
+interface(`shorewall_domtrans_lib',`
+        gen_require(`
+                type shorewall_t, shorewall_var_lib_t;
+        ')
 
-	files_search_pids($1)
-	read_files_pattern($1, shorewall_var_run_t, shorewall_var_run_t)
+        domtrans_pattern($1, shorewall_var_lib_t, shorewall_t)
 ')
 
 #######################################
 ## <summary>
-##	Read and write shorewall PID files.
+##	Read shorewall etc configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -66,13 +46,13 @@
 ##	</summary>
 ## </param>
 #
-interface(`shorewall_rw_pid_files',`
+interface(`shorewall_read_config',`
 	gen_require(`
-		type shorewall_var_run_t;
+		type shorewall_etc_t;
 	')
 
-	files_search_pids($1)
-	rw_files_pattern($1, shorewall_var_run_t, shorewall_var_run_t)
+	files_search_etc($1)
+	read_files_pattern($1, shorewall_etc_t, shorewall_etc_t)
 ')
 
 ######################################
@@ -87,7 +67,7 @@
 #
 interface(`shorewall_read_lib_files',`
         gen_require(`
-                type shorewall_t;
+                type shorewall_var_lib_t;
        ')
 
         files_search_var_lib($1)
@@ -115,6 +95,25 @@
         rw_files_pattern($1, shorewall_var_lib_t, shorewall_var_lib_t)
 ')
 
+######################################
+## <summary>
+##      Read shorewall tmp files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`shorewall_read_tmp_files',`
+        gen_require(`
+                type shorewall_tmp_t;
+        ')
+
+        files_search_tmp($1)
+        read_files_pattern($1, shorewall_tmp_t, shorewall_tmp_t)
+')
+
 #######################################
 ## <summary>
 ##	All of the rules required to administrate 
@@ -134,9 +133,9 @@
 #
 interface(`shorewall_admin',`
 	gen_require(`
-		type shorewall_t, shorewall_var_run_t, shorewall_lock_t;
+		type shorewall_t, shorewall_lock_t;
 		type shorewall_initrc_exec_t, shorewall_var_lib_t;
-		type shorewall_tmp_t;
+		type shorewall_tmp_t, shorewall_etc_t;
 	')
 
 	allow $1 shorewall_t:process { ptrace signal_perms };
@@ -153,9 +152,6 @@
 	files_search_locks($1)
 	admin_pattern($1, shorewall_lock_t)
 
-	files_search_pids($1)
-	admin_pattern($1, shorewall_var_run_t)
-
 	files_search_var_lib($1)
 	admin_pattern($1, shorewall_var_lib_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/shorewall.te serefpolicy-3.7.19/policy/modules/admin/shorewall.te
--- nsaserefpolicy/policy/modules/admin/shorewall.te	2011-03-17 07:21:22.899851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/shorewall.te	2011-08-22 09:27:24.864523005 +0000
@@ -59,6 +59,9 @@
 manage_dirs_pattern(shorewall_t, shorewall_var_lib_t, shorewall_var_lib_t)
 manage_files_pattern(shorewall_t, shorewall_var_lib_t, shorewall_var_lib_t)
 files_var_lib_filetrans(shorewall_t, shorewall_var_lib_t, { dir file })
+allow shorewall_t shorewall_var_lib_t:file entrypoint;
+
+allow shorewall_t shorewall_initrc_exec_t:file read_file_perms;
 
 kernel_read_kernel_sysctls(shorewall_t)
 kernel_read_network_state(shorewall_t)
@@ -81,13 +84,26 @@
 
 init_rw_utmp(shorewall_t)
 
+logging_read_generic_logs(shorewall_t)
 logging_send_syslog_msg(shorewall_t)
 
+auth_use_nsswitch(shorewall_t)
+
 miscfiles_read_localization(shorewall_t)
 
 sysnet_domtrans_ifconfig(shorewall_t)
 
-userdom_dontaudit_list_user_home_dirs(shorewall_t)
+userdom_use_inherited_user_ttys(shorewall_t)
+userdom_use_inherited_user_ptys(shorewall_t)
+userdom_dontaudit_list_admin_dir(shorewall_t)
+
+optional_policy(`
+	brctl_domtrans(shorewall_t)
+')
+
+optional_policy(`
+	hostname_exec(shorewall_t)
+')
 
 optional_policy(`
 	iptables_domtrans(shorewall_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/shutdown.fc serefpolicy-3.7.19/policy/modules/admin/shutdown.fc
--- nsaserefpolicy/policy/modules/admin/shutdown.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/shutdown.fc	2011-03-17 07:21:05.887851002 +0000
@@ -0,0 +1,5 @@
+/etc/nologin			--	gen_context(system_u:object_r:shutdown_etc_t,s0)
+
+/sbin/shutdown			--	gen_context(system_u:object_r:shutdown_exec_t,s0)
+
+/var/run/shutdown\.pid 	--	gen_context(system_u:object_r:shutdown_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/shutdown.if serefpolicy-3.7.19/policy/modules/admin/shutdown.if
--- nsaserefpolicy/policy/modules/admin/shutdown.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/shutdown.if	2011-03-17 07:21:05.458851003 +0000
@@ -0,0 +1,136 @@
+
+## <summary>policy for shutdown</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run shutdown.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`shutdown_domtrans',`
+	gen_require(`
+		type shutdown_t, shutdown_exec_t;
+	')
+
+	domtrans_pattern($1, shutdown_exec_t, shutdown_t)
+
+	ifdef(`hide_broken_symptoms', `
+		dontaudit shutdown_t $1:socket_class_set { read write };
+		dontaudit shutdown_t $1:fifo_file rw_inherited_fifo_file_perms;
+	')
+')
+
+
+########################################
+## <summary>
+##	Execute shutdown in the shutdown domain, and
+##	allow the specified role the shutdown domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the shutdown domain.
+##	</summary>
+## </param>
+#
+interface(`shutdown_run',`
+	gen_require(`
+		type shutdown_t;
+	')
+
+	shutdown_domtrans($1)
+	role $2 types shutdown_t;
+')
+
+########################################
+## <summary>
+##	Role access for shutdown
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access
+##	</summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	User domain for the role
+##	</summary>
+## </param>
+#
+interface(`shutdown_role',`
+	gen_require(`
+              type shutdown_t;
+	')
+
+	role $1 types shutdown_t;
+
+	shutdown_domtrans($2)
+
+	ps_process_pattern($2, shutdown_t)
+	allow $2 shutdown_t:process signal;
+')
+
+########################################
+## <summary>
+##	Recieve sigchld from shutdown
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`shutdown_send_sigchld',`
+	gen_require(`
+              type shutdown_t;
+	')
+
+	allow shutdown_t $1:process signal;
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	shutdown over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`shutdown_dbus_chat',`
+	gen_require(`
+		type shutdown_t;
+		class dbus send_msg;
+	')
+
+	allow $1 shutdown_t:dbus send_msg;
+	allow shutdown_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Get attributes of shutdown executable.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`shutdown_getattr_exec_files',`
+	gen_require(`
+		type shutdown_exec_t;
+	')
+
+	allow $1 shutdown_exec_t:file getattr;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/shutdown.te serefpolicy-3.7.19/policy/modules/admin/shutdown.te
--- nsaserefpolicy/policy/modules/admin/shutdown.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/shutdown.te	2011-06-20 15:29:05.606029999 +0000
@@ -0,0 +1,79 @@
+policy_module(shutdown,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type shutdown_t;
+type shutdown_exec_t;
+application_domain(shutdown_t, shutdown_exec_t)
+role system_r types shutdown_t;
+
+type shutdown_etc_t;
+files_config_file(shutdown_etc_t)
+
+type shutdown_var_run_t;
+files_pid_file(shutdown_var_run_t)
+
+########################################
+#
+# shutdown local policy
+#
+
+allow shutdown_t self:capability { dac_override kill setuid sys_nice sys_tty_config };
+allow shutdown_t self:process { fork setsched signal signull };
+
+allow shutdown_t self:fifo_file manage_fifo_file_perms;
+allow shutdown_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(shutdown_t, shutdown_etc_t, shutdown_etc_t)
+files_etc_filetrans(shutdown_t, shutdown_etc_t, file)
+
+manage_files_pattern(shutdown_t, shutdown_var_run_t, shutdown_var_run_t)
+files_pid_filetrans(shutdown_t, shutdown_var_run_t, file)
+
+kernel_read_system_state(shutdown_t)
+
+files_read_etc_files(shutdown_t)
+files_read_generic_pids(shutdown_t)
+
+mls_file_write_to_clearance(shutdown_t)
+
+term_use_all_terms(shutdown_t)
+
+auth_use_nsswitch(shutdown_t)
+auth_write_login_records(shutdown_t)
+
+init_read_utmp(shutdown_t)
+init_rw_utmp(shutdown_t)
+init_telinit(shutdown_t)
+init_dontaudit_leaks(shutdown_t)
+
+logging_search_logs(shutdown_t)
+logging_send_audit_msgs(shutdown_t)
+
+miscfiles_read_localization(shutdown_t)
+
+optional_policy(`
+	cron_system_entry(shutdown_t, shutdown_exec_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(shutdown_t)
+	dbus_connect_system_bus(shutdown_t)
+')
+
+optional_policy(`
+    oddjob_dontaudit_rw_fifo_file(shutdown_t)
+    oddjob_sigchld(shutdown_t)
+')
+
+optional_policy(`
+	rhev_sigchld_agentd(shutdown_t)
+')
+
+optional_policy(`
+	xserver_xdm_append_log(shutdown_t)
+	xserver_dontaudit_write_log(shutdown_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/smoltclient.te serefpolicy-3.7.19/policy/modules/admin/smoltclient.te
--- nsaserefpolicy/policy/modules/admin/smoltclient.te	2011-03-17 07:21:22.696851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/smoltclient.te	2011-11-09 09:03:42.585333646 +0000
@@ -46,6 +46,7 @@
 
 files_getattr_generic_locks(smoltclient_t)
 files_read_etc_files(smoltclient_t)
+files_read_etc_runtime_files(smoltclient_t)
 files_read_usr_files(smoltclient_t)
 
 auth_use_nsswitch(smoltclient_t)
@@ -55,6 +56,10 @@
 miscfiles_read_localization(smoltclient_t)
 
 optional_policy(`
+	abrt_stream_connect(smoltclient_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(smoltclient_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/sudo.fc serefpolicy-3.7.19/policy/modules/admin/sudo.fc
--- nsaserefpolicy/policy/modules/admin/sudo.fc	2011-03-17 07:21:22.887851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/sudo.fc	2011-03-17 07:21:05.873851003 +0000
@@ -1,2 +1,4 @@
 
 /usr/bin/sudo(edit)?	--	gen_context(system_u:object_r:sudo_exec_t,s0)
+
+/var/db/sudo(/.*)?              gen_context(system_u:object_r:sudo_db_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/sudo.if serefpolicy-3.7.19/policy/modules/admin/sudo.if
--- nsaserefpolicy/policy/modules/admin/sudo.if	2011-03-17 07:21:22.675851000 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/sudo.if	2012-05-15 07:27:36.566702612 +0000
@@ -32,6 +32,7 @@
 
 	gen_require(`
 		type sudo_exec_t;
+		type sudo_db_t;
 		attribute sudodomain;
 	')
 
@@ -47,13 +48,16 @@
 	ubac_constrained($1_sudo_t)
 	role $2 types $1_sudo_t;
 
+	manage_dirs_pattern($1_sudo_t, sudo_db_t, sudo_db_t)
+	manage_files_pattern($1_sudo_t, sudo_db_t, sudo_db_t)
+
 	##############################
 	#
 	# Local Policy
 	#
 
 	# Use capabilities.
-	allow $1_sudo_t self:capability { fowner setuid setgid dac_override sys_nice sys_resource };
+	allow $1_sudo_t self:capability { chown fowner setuid setgid dac_override sys_nice sys_resource };
 	allow $1_sudo_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 	allow $1_sudo_t self:process { setexec setrlimit };
 	allow $1_sudo_t self:fd use;
@@ -73,17 +77,23 @@
 	# Enter this derived domain from the user domain
 	domtrans_pattern($3, sudo_exec_t, $1_sudo_t)
 
+	ifdef(`hide_broken_symptoms', `
+		dontaudit $1_sudo_t $3:socket_class_set { read write };
+	')
+
 	# By default, revert to the calling domain when a shell is executed.
 	corecmd_shell_domtrans($1_sudo_t, $3)
 	corecmd_bin_domtrans($1_sudo_t, $3)
 	allow $3 $1_sudo_t:fd use;
 	allow $3 $1_sudo_t:fifo_file rw_file_perms;
-	allow $3 $1_sudo_t:process sigchld;
+	allow $3 $1_sudo_t:process signal_perms;
 
 	kernel_read_kernel_sysctls($1_sudo_t)
 	kernel_read_system_state($1_sudo_t)
 	kernel_link_key($1_sudo_t)
 
+	application_signal($1_sudo_t)
+
 	corecmd_read_bin_symlinks($1_sudo_t)
 	corecmd_exec_all_executables($1_sudo_t)
 
@@ -104,13 +114,14 @@
 	files_list_tmp($1_sudo_t)
 
 	fs_search_auto_mountpoints($1_sudo_t)
-	fs_getattr_xattr_fs($1_sudo_t)
+	fs_getattr_all_fs($1_sudo_t)
 
 	selinux_validate_context($1_sudo_t)
 	selinux_compute_relabel_context($1_sudo_t)
 
 	term_relabel_all_ttys($1_sudo_t)
 	term_relabel_all_ptys($1_sudo_t)
+	term_getattr_pty_fs($1_sudo_t)
 
 	auth_run_chk_passwd($1_sudo_t, $2)
 	# sudo stores a token in the pam_pid directory
@@ -121,10 +132,11 @@
 
 	logging_send_audit_msgs($1_sudo_t)
 	logging_send_syslog_msg($1_sudo_t)
+	logging_set_audit_parameters($1_sudo_t)
 
 	miscfiles_read_localization($1_sudo_t)
 
-	seutil_search_default_contexts($1_sudo_t)
+	seutil_read_default_contexts($1_sudo_t)
 	seutil_libselinux_linked($1_sudo_t)
 
 	userdom_spec_domtrans_all_users($1_sudo_t)
@@ -134,7 +146,11 @@
 	userdom_manage_user_tmp_symlinks($1_sudo_t)
 	userdom_use_user_terminals($1_sudo_t)
 	# for some PAM modules and for cwd
-	userdom_dontaudit_search_user_home_content($1_sudo_t)
+	userdom_search_user_home_content($1_sudo_t)
+	userdom_search_admin_dir($1_sudo_t)
+	userdom_manage_all_users_keys($1_sudo_t)
+
+	mta_role($2, $1_sudo_t)
 
 	tunable_policy(`use_nfs_home_dirs',`
 		fs_manage_nfs_files($1_sudo_t)
@@ -171,3 +187,22 @@
 
 	allow $1 sudodomain:process sigchld;
 ')
+
+######################################
+## <summary>
+##  Allow execute sudo in called domain.
+##  This interfaces is added for nova-stack policy.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`sudo_exec',`
+    gen_require(`
+        type sudo_exec_t;
+    ')
+
+        can_exec($1, sudo_exec_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/sudo.te serefpolicy-3.7.19/policy/modules/admin/sudo.te
--- nsaserefpolicy/policy/modules/admin/sudo.te	2011-03-17 07:21:22.609851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/sudo.te	2011-11-03 14:21:26.534816936 +0000
@@ -8,3 +8,7 @@
 
 type sudo_exec_t;
 application_executable_file(sudo_exec_t)
+
+type sudo_db_t;
+files_type(sudo_db_t)
+mls_trusted_object(sudo_db_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/su.if serefpolicy-3.7.19/policy/modules/admin/su.if
--- nsaserefpolicy/policy/modules/admin/su.if	2011-03-17 07:21:22.609851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/su.if	2011-03-17 07:21:05.491851002 +0000
@@ -58,6 +58,10 @@
 	allow $2 $1_su_t:fifo_file rw_file_perms;
 	allow $2 $1_su_t:process sigchld;
 
+ifdef(`hide_broken_symptoms', `
+	dontaudit $1_su_t $2:socket_class_set { read write };
+')
+
 	kernel_read_system_state($1_su_t)
 	kernel_read_kernel_sysctls($1_su_t)
 	kernel_search_key($1_su_t)
@@ -183,6 +187,10 @@
 
 	# Transition from the user domain to this domain.
 	domtrans_pattern($3, su_exec_t, $1_su_t)
+ifdef(`hide_broken_symptoms', `
+	dontaudit $1_su_t $3:socket_class_set { read write };
+')
+
 
 	ps_process_pattern($3, $1_su_t)
 
@@ -207,7 +215,7 @@
 
 	auth_domtrans_chk_passwd($1_su_t)
 	auth_dontaudit_read_shadow($1_su_t)
-	auth_use_nsswitch($1_su_t)
+	auth_use_pam($1_su_t)
 	auth_rw_faillog($1_su_t)
 
 	corecmd_search_bin($1_su_t)
@@ -231,6 +239,7 @@
 
 	userdom_use_user_terminals($1_su_t)
 	userdom_search_user_home_dirs($1_su_t)
+	userdom_search_admin_dir($1_su_t)
 
 	ifdef(`distro_redhat',`
 		# RHEL5 and possibly newer releases incl. Fedora
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/tmpreaper.te serefpolicy-3.7.19/policy/modules/admin/tmpreaper.te
--- nsaserefpolicy/policy/modules/admin/tmpreaper.te	2011-03-17 07:21:22.538851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/tmpreaper.te	2012-01-02 11:59:59.903449658 +0000
@@ -19,6 +19,9 @@
 allow tmpreaper_t self:process { fork sigchld };
 allow tmpreaper_t self:capability { dac_override dac_read_search fowner };
 
+# meminfo
+kernel_read_system_state(tmpreaper_t)
+
 dev_read_urand(tmpreaper_t)
 
 fs_getattr_xattr_fs(tmpreaper_t)
@@ -26,8 +29,11 @@
 files_read_etc_files(tmpreaper_t)
 files_read_var_lib_files(tmpreaper_t)
 files_purge_tmp(tmpreaper_t)
+files_delete_usr_dirs(tmpreaper_t)
+files_delete_usr_files(tmpreaper_t)
 # why does it need setattr?
 files_setattr_all_tmp_dirs(tmpreaper_t)
+files_setattr_usr_dirs(tmpreaper_t)
 files_getattr_all_dirs(tmpreaper_t)
 files_getattr_all_files(tmpreaper_t)
 
@@ -42,6 +48,7 @@
 cron_system_entry(tmpreaper_t, tmpreaper_exec_t)
 
 ifdef(`distro_redhat',`
+	userdom_list_user_home_content(tmpreaper_t)
 	userdom_delete_user_home_content_dirs(tmpreaper_t)
 	userdom_delete_user_home_content_files(tmpreaper_t)
 	userdom_delete_user_home_content_symlinks(tmpreaper_t)
@@ -52,6 +59,14 @@
 ')
 
 optional_policy(`
+	apache_delete_sys_content_rw(tmpreaper_t)
+	apache_list_cache(tmpreaper_t)
+	apache_delete_cache_dirs(tmpreaper_t)
+	apache_delete_cache_files(tmpreaper_t)
+	apache_setattr_cache_dirs(tmpreaper_t)
+')
+
+optional_policy(`
 	kismet_manage_log(tmpreaper_t)
 ')
 
@@ -60,5 +75,17 @@
 ')
 
 optional_policy(`
+	sandbox_list(tmpreaper_t)
+	sandbox_delete_dirs(tmpreaper_t)
+	sandbox_delete_files(tmpreaper_t)
+	sandbox_delete_sock_files(tmpreaper_t)
+	sandbox_setattr_dirs(tmpreaper_t)
+')
+
+optional_policy(`
+	rpm_manage_cache(tmpreaper_t)
+')
+
+optional_policy(`
 	unconfined_domain(tmpreaper_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/usermanage.if serefpolicy-3.7.19/policy/modules/admin/usermanage.if
--- nsaserefpolicy/policy/modules/admin/usermanage.if	2011-03-17 07:21:22.642851002 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/usermanage.if	2011-07-20 14:01:45.390523004 +0000
@@ -18,6 +18,10 @@
 	files_search_usr($1)
 	corecmd_search_bin($1)
 	domtrans_pattern($1, chfn_exec_t, chfn_t)
+
+ifdef(`hide_broken_symptoms', `
+	dontaudit chfn_t $1:socket_class_set { read write };
+')
 ')
 
 ########################################
@@ -63,8 +67,33 @@
 	files_search_usr($1)
 	corecmd_search_bin($1)
 	domtrans_pattern($1, groupadd_exec_t, groupadd_t)
+
+ifdef(`hide_broken_symptoms', `
+	dontaudit groupadd_t $1:socket_class_set { read write };
+')
+')
+
+#######################################
+## <summary>
+##  Check access to the groupadd executable.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`usermanage_access_check_groupadd',`
+    gen_require(`
+        type groupadd_exec_t;
+    ')
+
+    corecmd_search_bin($1)
+    allow $1 groupadd_exec_t:file { getattr_file_perms execute };
 ')
 
+
+
 ########################################
 ## <summary>
 ##	Execute groupadd in the groupadd domain, and
@@ -113,6 +142,10 @@
 	files_search_usr($1)
 	corecmd_search_bin($1)
 	domtrans_pattern($1, passwd_exec_t, passwd_t)
+
+ifdef(`hide_broken_symptoms', `
+	dontaudit passwd_t $1:socket_class_set { read write };
+')
 ')
 
 ########################################
@@ -159,6 +192,25 @@
 	auth_run_chk_passwd(passwd_t, $2)
 ')
 
+#######################################
+## <summary>
+##  Check access to the passwd executable
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`usermanage_access_check_passwd',`
+    gen_require(`
+        type passwd_exec_t;
+    ')
+
+    corecmd_search_bin($1)
+    allow $1 passwd_exec_t:file { getattr_file_perms execute };
+')
+
 ########################################
 ## <summary>
 ##	Execute password admin functions in
@@ -247,6 +299,9 @@
 	files_search_usr($1)
 	corecmd_search_bin($1)
 	domtrans_pattern($1, useradd_exec_t, useradd_t)
+ifdef(`hide_broken_symptoms', `
+	dontaudit useradd_t $1:socket_class_set { read write };
+')
 ')
 
 ########################################
@@ -274,11 +329,36 @@
 	usermanage_domtrans_useradd($1)
 	role $2 types useradd_t;
 
+	# Add/remove user home directories
+	userdom_manage_home_role($2, useradd_t)
+
+	seutil_run_semanage(useradd_t, $2)
+
 	optional_policy(`
 		nscd_run(useradd_t, $2)
 	')
 ')
 
+#######################################
+## <summary>
+##      Check access to the useradd executable.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`usermanage_access_check_useradd',`
+        gen_require(`
+                type useradd_exec_t;
+        ')
+
+        corecmd_search_bin($1)
+        allow $1 useradd_exec_t:file { getattr_file_perms execute };
+')
+
+
 ########################################
 ## <summary>
 ##	Read the crack database.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/usermanage.te serefpolicy-3.7.19/policy/modules/admin/usermanage.te
--- nsaserefpolicy/policy/modules/admin/usermanage.te	2011-03-17 07:21:22.743851003 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/usermanage.te	2012-05-15 00:15:26.207832195 +0000
@@ -75,6 +75,8 @@
 kernel_read_system_state(chfn_t)
 kernel_read_kernel_sysctls(chfn_t)
 
+corecmd_exec_bin(chfn_t)
+
 selinux_get_fs_mount(chfn_t)
 selinux_validate_context(chfn_t)
 selinux_compute_access_vector(chfn_t)
@@ -91,9 +93,10 @@
 # for SSP
 dev_read_urand(chfn_t)
 
-auth_domtrans_chk_passwd(chfn_t)
-auth_dontaudit_read_shadow(chfn_t)
-auth_use_nsswitch(chfn_t)
+#auth_domtrans_chk_passwd(chfn_t)
+#auth_dontaudit_read_shadow(chfn_t)
+#auth_use_nsswitch(chfn_t)
+auth_use_pam(chfn_t)
 
 # allow checking if a shell is executable
 corecmd_check_exec_shell(chfn_t)
@@ -116,11 +119,18 @@
 # uses unix_chkpwd for checking passwords
 seutil_dontaudit_search_config(chfn_t)
 
+userdom_manage_user_tmp_files(chfn_t)
+userdom_tmp_filetrans_user_tmp(chfn_t, { file })
+
 userdom_use_unpriv_users_fds(chfn_t)
 # user generally runs this from their home directory, so do not audit a search
 # on user home dir
 userdom_dontaudit_search_user_home_content(chfn_t)
 
+optional_policy(`
+	rssh_exec(chfn_t)
+')
+
 ########################################
 #
 # Crack local policy
@@ -197,8 +207,8 @@
 selinux_compute_relabel_context(groupadd_t)
 selinux_compute_user_contexts(groupadd_t)
 
-term_use_all_ttys(groupadd_t)
-term_use_all_ptys(groupadd_t)
+term_use_all_terms(groupadd_t)
+term_use_generic_ptys(groupadd_t)
 
 init_use_fds(groupadd_t)
 init_read_utmp(groupadd_t)
@@ -209,6 +219,7 @@
 files_manage_etc_files(groupadd_t)
 files_relabel_etc_files(groupadd_t)
 files_read_etc_runtime_files(groupadd_t)
+files_read_usr_symlinks(groupadd_t)
 
 # Execute /usr/bin/{passwd, chfn, chsh} and /usr/sbin/{useradd, vipw}.
 corecmd_exec_bin(groupadd_t)
@@ -256,7 +267,8 @@
 # Passwd local policy
 #
 
-allow passwd_t self:capability { chown dac_override fsetid setuid setgid sys_resource };
+allow passwd_t self:capability { chown dac_override fsetid setuid setgid sys_nice sys_resource };
+dontaudit passwd_t self:capability sys_tty_config;
 allow passwd_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow passwd_t self:process { setrlimit setfscreate };
 allow passwd_t self:fd use;
@@ -294,6 +306,8 @@
 
 term_use_all_ttys(passwd_t)
 term_use_all_ptys(passwd_t)
+term_use_all_terms(passwd_t)
+term_use_generic_ptys(passwd_t)
 
 auth_domtrans_chk_passwd(passwd_t)
 auth_manage_shadow(passwd_t)
@@ -303,6 +317,9 @@
 
 # allow checking if a shell is executable
 corecmd_check_exec_shell(passwd_t)
+corecmd_exec_bin(passwd_t)
+
+corenet_tcp_connect_kerberos_password_port(passwd_t)
 
 domain_use_interactive_fds(passwd_t)
 
@@ -315,6 +332,7 @@
 # /usr/bin/passwd asks for w access to utmp, but it will operate
 # correctly without it.  Do not audit write denials to utmp.
 init_dontaudit_rw_utmp(passwd_t)
+init_dontaudit_leaks(passwd_t)
 init_use_fds(passwd_t)
 
 logging_send_audit_msgs(passwd_t)
@@ -333,6 +351,7 @@
 # user generally runs this from their home directory, so do not audit a search
 # on user home dir
 userdom_dontaudit_search_user_home_content(passwd_t)
+userdom_stream_connect(passwd_t)
 
 optional_policy(`
 	nscd_domtrans(passwd_t)
@@ -384,6 +403,7 @@
 
 term_use_all_ttys(sysadm_passwd_t)
 term_use_all_ptys(sysadm_passwd_t)
+term_use_all_terms(sysadm_passwd_t)
 
 auth_manage_shadow(sysadm_passwd_t)
 auth_relabel_shadow(sysadm_passwd_t)
@@ -427,7 +447,7 @@
 # Useradd local policy
 #
 
-allow useradd_t self:capability { dac_override chown kill fowner fsetid setuid sys_resource };
+allow useradd_t self:capability { dac_override chown kill fowner fsetid setuid sys_resource sys_ptrace };
 dontaudit useradd_t self:capability sys_tty_config;
 allow useradd_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow useradd_t self:process setfscreate;
@@ -450,6 +470,8 @@
 corecmd_exec_bin(useradd_t)
 
 domain_use_interactive_fds(useradd_t)
+#domain_read_all_domains_state(useradd_t)
+domain_dontaudit_read_all_domains_state(useradd_t)
 
 files_manage_etc_files(useradd_t)
 files_search_var_lib(useradd_t)
@@ -460,6 +482,7 @@
 fs_getattr_xattr_fs(useradd_t)
 
 mls_file_upgrade(useradd_t)
+mls_process_read_to_clearance(useradd_t)
 
 # Allow access to context for shadow file
 selinux_get_fs_mount(useradd_t)
@@ -471,6 +494,7 @@
 
 term_use_all_ttys(useradd_t)
 term_use_all_ptys(useradd_t)
+term_use_all_terms(useradd_t)
 
 auth_domtrans_chk_passwd(useradd_t)
 auth_rw_lastlog(useradd_t)
@@ -498,12 +522,8 @@
 
 userdom_use_unpriv_users_fds(useradd_t)
 # Add/remove user home directories
-userdom_manage_user_home_dirs(useradd_t)
 userdom_home_filetrans_user_home_dir(useradd_t)
-userdom_manage_user_home_content_dirs(useradd_t)
-userdom_manage_user_home_content_files(useradd_t)
-userdom_home_filetrans_user_home_dir(useradd_t)
-userdom_user_home_dir_filetrans_user_home_content(useradd_t, notdevfile_class_set)
+userdom_manage_home_role(system_r, useradd_t)
 
 mta_manage_spool(useradd_t)
 
@@ -527,6 +547,12 @@
 ')
 
 optional_policy(`
+	tunable_policy(`samba_domain_controller',`
+		samba_append_log(useradd_t)
+	')
+')
+
+optional_policy(`
 	puppet_rw_tmp(useradd_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/vbetool.te serefpolicy-3.7.19/policy/modules/admin/vbetool.te
--- nsaserefpolicy/policy/modules/admin/vbetool.te	2011-03-17 07:21:22.825851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/vbetool.te	2011-03-17 07:21:05.809851002 +0000
@@ -6,6 +6,13 @@
 # Declarations
 #
 
+## <desc>
+## <p>
+##      Ignore vbetool mmap_zero errors.
+## </p>
+## </desc>
+gen_tunable(vbetool_mmap_zero_ignore, false)
+
 type vbetool_t;
 type vbetool_exec_t;
 init_system_domain(vbetool_t, vbetool_exec_t)
@@ -25,12 +32,22 @@
 dev_rw_xserver_misc(vbetool_t)
 dev_rw_mtrr(vbetool_t)
 
+domain_mmap_low_type(vbetool_t)
+tunable_policy(`mmap_low_allowed',`
 domain_mmap_low(vbetool_t)
+')
+
+mls_file_read_all_levels(vbetool_t)
+mls_file_write_all_levels(vbetool_t)
 
 term_use_unallocated_ttys(vbetool_t)
 
 miscfiles_read_localization(vbetool_t)
 
+tunable_policy(`vbetool_mmap_zero_ignore',`
+        dontaudit vbetool_t self:memprotect mmap_zero;
+')
+
 optional_policy(`
 	hal_rw_pid_files(vbetool_t)
 	hal_write_log(vbetool_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/vpn.if serefpolicy-3.7.19/policy/modules/admin/vpn.if
--- nsaserefpolicy/policy/modules/admin/vpn.if	2011-03-17 07:21:22.624851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/vpn.if	2011-09-08 14:30:19.395160002 +0000
@@ -110,7 +110,7 @@
 ##	</summary>
 ## </param>
 #
-interface(`vpnc_dbus_chat',`
+interface(`vpn_dbus_chat',`
 	gen_require(`
 		type vpnc_t;
 		class dbus send_msg;
@@ -119,3 +119,21 @@
 	allow $1 vpnc_t:dbus send_msg;
 	allow vpnc_t $1:dbus send_msg;
 ')
+
+########################################
+## <summary>
+##	Relabelfrom from vpnc socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`vpn_relabelfrom_tun_socket',`
+	gen_require(`
+		type vpnc_t;
+	')
+
+	allow $1 vpnc_t:tun_socket relabelfrom;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/admin/vpn.te serefpolicy-3.7.19/policy/modules/admin/vpn.te
--- nsaserefpolicy/policy/modules/admin/vpn.te	2011-03-17 07:21:22.650851001 +0000
+++ serefpolicy-3.7.19/policy/modules/admin/vpn.te	2011-03-17 07:21:05.531851002 +0000
@@ -31,7 +31,7 @@
 allow vpnc_t self:rawip_socket create_socket_perms;
 allow vpnc_t self:unix_dgram_socket create_socket_perms;
 allow vpnc_t self:unix_stream_socket create_socket_perms;
-allow vpnc_t self:tun_socket create;
+allow vpnc_t self:tun_socket  { create_socket_perms relabelfrom };
 # cjp: this needs to be fixed
 allow vpnc_t self:socket create_socket_perms;
 
@@ -46,6 +46,7 @@
 kernel_read_system_state(vpnc_t)
 kernel_read_network_state(vpnc_t)
 kernel_read_all_sysctls(vpnc_t)
+kernel_request_load_module(vpnc_t)
 kernel_rw_net_sysctls(vpnc_t)
 
 corenet_all_recvfrom_unlabeled(vpnc_t)
@@ -107,6 +108,8 @@
 
 userdom_use_all_users_fds(vpnc_t)
 userdom_dontaudit_search_user_home_content(vpnc_t)
+userdom_read_home_certs(vpnc_t)
+userdom_search_admin_dir(vpnc_t)
 
 optional_policy(`
 	dbus_system_bus_client(vpnc_t)
@@ -115,3 +118,7 @@
 		networkmanager_dbus_chat(vpnc_t)
 	')
 ')
+
+optional_policy(`
+	networkmanager_attach_tun_iface(vpnc_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/awstats.te serefpolicy-3.7.19/policy/modules/apps/awstats.te
--- nsaserefpolicy/policy/modules/apps/awstats.te	2011-03-17 07:21:23.038851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/awstats.te	2011-03-17 07:21:06.384851001 +0000
@@ -45,6 +45,7 @@
 
 dev_read_urand(awstats_t)
 
+files_dontaudit_search_all_mountpoints(awstats_t)
 files_read_etc_files(awstats_t)
 # e.g. /usr/share/awstats/lang/awstats-en.txt
 files_read_usr_files(awstats_t)
@@ -70,6 +71,10 @@
 	nscd_dontaudit_search_pid(awstats_t)
 ')
 
+optional_policy(`
+	squid_read_log(awstats_t)
+')
+
 ########################################
 #
 # awstats cgi script policy
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/cdrecord.te serefpolicy-3.7.19/policy/modules/apps/cdrecord.te
--- nsaserefpolicy/policy/modules/apps/cdrecord.te	2011-03-17 07:21:23.041851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/cdrecord.te	2011-03-17 07:21:06.422851002 +0000
@@ -28,7 +28,7 @@
 #
 
 allow cdrecord_t self:capability { ipc_lock sys_nice setuid dac_override sys_rawio };
-allow cdrecord_t self:process { getcap getsched setsched sigkill };
+allow cdrecord_t self:process { getcap getsched setrlimit setsched sigkill };
 allow cdrecord_t self:unix_dgram_socket create_socket_perms;
 allow cdrecord_t self:unix_stream_socket create_stream_socket_perms;
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/chrome.fc serefpolicy-3.7.19/policy/modules/apps/chrome.fc
--- nsaserefpolicy/policy/modules/apps/chrome.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/chrome.fc	2012-01-26 11:09:29.901311003 +0000
@@ -0,0 +1,6 @@
+ /opt/google/chrome/chrome-sandbox	--	gen_context(system_u:object_r:chrome_sandbox_exec_t,s0)
+
+/usr/lib(64)?/chromium-browser/chrome-sandbox	--	gen_context(system_u:object_r:chrome_sandbox_exec_t,s0)
+
+/opt/google/chrome/nacl_helper_bootstrap    --  gen_context(system_u:object_r:chrome_sandbox_nacl_exec_t,s0)
+/usr/lib/chromium-browser/nacl_helper_bootstrap --  gen_context(system_u:object_r:chrome_sandbox_nacl_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/chrome.if serefpolicy-3.7.19/policy/modules/apps/chrome.if
--- nsaserefpolicy/policy/modules/apps/chrome.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/chrome.if	2012-03-09 12:34:21.219075491 +0000
@@ -0,0 +1,133 @@
+
+## <summary>policy for chrome</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run chrome_sandbox.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`chrome_domtrans_sandbox',`
+	gen_require(`
+		type chrome_sandbox_t, chrome_sandbox_exec_t;
+	')
+
+	domtrans_pattern($1, chrome_sandbox_exec_t, chrome_sandbox_t)
+	ps_process_pattern(chrome_sandbox_t, $1)
+
+	allow $1 chrome_sandbox_t:fd use;
+
+	ifdef(`hide_broken_symptoms',`
+		fs_dontaudit_rw_anon_inodefs_files(chrome_sandbox_t)
+	')
+')
+
+
+########################################
+## <summary>
+##	Execute chrome_sandbox in the chrome_sandbox domain, and
+##	allow the specified role the chrome_sandbox domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the chrome_sandbox domain.
+##	</summary>
+## </param>
+#
+interface(`chrome_run_sandbox',`
+	gen_require(`
+		type chrome_sandbox_t;
+		type chrome_sandbox_nacl_t;
+	')
+
+	chrome_domtrans_sandbox($1)
+	role $2 types chrome_sandbox_t;
+	role $2 types chrome_sandbox_nacl_t;
+')
+
+########################################
+## <summary>
+##	Role access for chrome sandbox
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access
+##	</summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	User domain for the role
+##	</summary>
+## </param>
+#
+interface(`chrome_role_notrans',`
+	gen_require(`
+		type chrome_sandbox_t;
+		type chrome_sandbox_tmpfs_t;
+		type chrome_sandbox_nacl_t;
+	')
+
+	role $1 types chrome_sandbox_t;
+	role $1 types chrome_sandbox_nacl_t;
+
+	ps_process_pattern($2, chrome_sandbox_t)
+	allow $2 chrome_sandbox_t:process signal_perms;
+
+	allow chrome_sandbox_t $2:unix_dgram_socket { read write };
+	allow $2 chrome_sandbox_t:unix_dgram_socket { read write };
+	allow chrome_sandbox_t $2:unix_stream_socket { getattr read write };
+	allow chrome_sandbox_nacl_t $2:unix_stream_socket { getattr read write };
+	allow $2 chrome_sandbox_nacl_t:unix_stream_socket { getattr read write };
+	allow $2 chrome_sandbox_t:unix_stream_socket { getattr read write };
+
+	allow $2 chrome_sandbox_t:shm rw_shm_perms;
+
+	allow $2 chrome_sandbox_tmpfs_t:file rw_file_perms;
+')
+
+########################################
+## <summary>
+##	Role access for chrome sandbox
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access
+##	</summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	User domain for the role
+##	</summary>
+## </param>
+#
+interface(`chrome_role',`
+	chrome_role_notrans($1, $2)
+	chrome_domtrans_sandbox($2)
+')
+
+########################################
+## <summary>
+##	Dontaudit read/write to a chrome_sandbox leaks
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`chrome_dontaudit_sandbox_leaks',`
+	gen_require(`
+		type chrome_sandbox_t;
+	')
+
+	dontaudit $1 chrome_sandbox_t:unix_stream_socket { read write };
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/chrome.te serefpolicy-3.7.19/policy/modules/apps/chrome.te
--- nsaserefpolicy/policy/modules/apps/chrome.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/chrome.te	2012-04-05 17:09:53.010772617 +0000
@@ -0,0 +1,180 @@
+policy_module(chrome,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type chrome_sandbox_t;
+type chrome_sandbox_exec_t;
+application_domain(chrome_sandbox_t, chrome_sandbox_exec_t)
+role system_r types chrome_sandbox_t;
+ubac_constrained(chrome_sandbox_t)
+
+type chrome_sandbox_tmp_t;
+files_tmp_file(chrome_sandbox_tmp_t)
+
+type chrome_sandbox_tmpfs_t;
+files_tmpfs_file(chrome_sandbox_tmpfs_t)
+ubac_constrained(chrome_sandbox_tmpfs_t)
+
+type chrome_sandbox_nacl_t;
+type chrome_sandbox_nacl_exec_t;
+application_domain(chrome_sandbox_nacl_t, chrome_sandbox_nacl_exec_t)
+role system_r types chrome_sandbox_nacl_t;
+ubac_constrained(chrome_sandbox_nacl_t)
+
+########################################
+#
+# chrome_sandbox local policy
+#
+allow chrome_sandbox_t self:capability { chown dac_override fsetid setgid setuid sys_admin sys_chroot sys_ptrace };
+allow chrome_sandbox_t self:process { signal_perms setrlimit execmem execstack };
+allow chrome_sandbox_t self:process setsched;
+allow chrome_sandbox_t self:fifo_file manage_file_perms;
+allow chrome_sandbox_t self:unix_stream_socket create_stream_socket_perms;
+allow chrome_sandbox_t self:unix_dgram_socket { create_socket_perms sendto };
+allow chrome_sandbox_t self:shm create_shm_perms;
+allow chrome_sandbox_t self:netlink_route_socket r_netlink_socket_perms;
+dontaudit chrome_sandbox_t self:memprotect mmap_zero;
+
+manage_dirs_pattern(chrome_sandbox_t, chrome_sandbox_tmp_t, chrome_sandbox_tmp_t)
+manage_files_pattern(chrome_sandbox_t, chrome_sandbox_tmp_t, chrome_sandbox_tmp_t)
+files_tmp_filetrans(chrome_sandbox_t, chrome_sandbox_tmp_t, { dir file })
+
+manage_files_pattern(chrome_sandbox_t, chrome_sandbox_tmpfs_t, chrome_sandbox_tmpfs_t)
+fs_tmpfs_filetrans(chrome_sandbox_t, chrome_sandbox_tmpfs_t, file)
+
+kernel_read_system_state(chrome_sandbox_t)
+kernel_read_kernel_sysctls(chrome_sandbox_t)
+
+fs_manage_cgroup_dirs(chrome_sandbox_t)
+fs_manage_cgroup_files(chrome_sandbox_t)
+
+corecmd_exec_bin(chrome_sandbox_t)
+
+corenet_all_recvfrom_unlabeled(chrome_sandbox_t)
+corenet_all_recvfrom_netlabel(chrome_sandbox_t)
+corenet_tcp_connect_flash_port(chrome_sandbox_t)
+corenet_tcp_connect_streaming_port(chrome_sandbox_t)
+corenet_tcp_connect_pulseaudio_port(chrome_sandbox_t)
+corenet_tcp_connect_http_port(chrome_sandbox_t)
+corenet_tcp_connect_http_cache_port(chrome_sandbox_t)
+corenet_tcp_connect_squid_port(chrome_sandbox_t)
+corenet_tcp_sendrecv_generic_if(chrome_sandbox_t)
+corenet_tcp_sendrecv_generic_node(chrome_sandbox_t)
+corenet_tcp_connect_ipp_port(chrome_sandbox_t)
+corenet_tcp_connect_speech_port(chrome_sandbox_t)
+
+domain_dontaudit_read_all_domains_state(chrome_sandbox_t)
+
+dev_read_urand(chrome_sandbox_t)
+dev_read_sysfs(chrome_sandbox_t)
+dev_rwx_zero(chrome_sandbox_t)
+
+files_read_etc_files(chrome_sandbox_t)
+files_read_usr_files(chrome_sandbox_t)
+
+fs_dontaudit_getattr_all_fs(chrome_sandbox_t)
+
+userdom_rw_user_tmpfs_files(chrome_sandbox_t)
+userdom_execute_user_tmpfs_files(chrome_sandbox_t)
+
+userdom_use_user_ptys(chrome_sandbox_t)
+userdom_write_inherited_user_tmp_files(chrome_sandbox_t)
+userdom_read_inherited_user_home_content_files(chrome_sandbox_t)
+userdom_dontaudit_use_user_terminals(chrome_sandbox_t)
+userdom_search_user_home_content(chrome_sandbox_t)
+# This one we should figure a way to make it more secure
+#userdom_manage_home_certs(chrome_sandbox_t)
+
+miscfiles_read_localization(chrome_sandbox_t)
+miscfiles_read_fonts(chrome_sandbox_t)
+
+sysnet_dns_name_resolve(chrome_sandbox_t)
+
+optional_policy(`
+	execmem_exec(chrome_sandbox_t)
+	execmem_execmod(chrome_sandbox_t)
+')
+
+optional_policy(`
+	gnome_rw_inherited_config(chrome_sandbox_t)
+	gnome_list_home_config(chrome_sandbox_t)
+	gnome_read_home_config(chrome_sandbox_t)
+')
+
+optional_policy(`
+	xserver_use_user_fonts(chrome_sandbox_t)
+	xserver_user_x_domain_template(chrome_sandbox, chrome_sandbox_t, chrome_sandbox_tmpfs_t)
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+	fs_search_nfs(chrome_sandbox_t)
+	fs_exec_nfs_files(chrome_sandbox_t)
+    fs_rw_inherited_nfs_files(chrome_sandbox_t)
+	fs_read_nfs_symlinks(chrome_sandbox_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+	fs_search_cifs(chrome_sandbox_t)
+	fs_exec_cifs_files(chrome_sandbox_t)
+	fs_rw_inherited_cifs_files(chrome_sandbox_t)
+	fs_dontaudit_append_cifs_files(chrome_sandbox_t)
+')
+
+tunable_policy(`use_fusefs_home_dirs',`
+    fs_search_fusefs(chrome_sandbox_t)
+    fs_read_fusefs_files(chrome_sandbox_t)
+    fs_exec_fusefs_files(chrome_sandbox_t)
+	fs_read_fusefs_symlinks(chrome_sandbox_t)
+')
+
+optional_policy(`
+	sandbox_use_ptys(chrome_sandbox_t)
+')
+
+
+#######################################
+#
+# chrome_sandbox_nacl local policy
+#
+
+allow chrome_sandbox_nacl_t self:process { execmem setsched };
+allow chrome_sandbox_nacl_t self:fifo_file manage_fifo_file_perms;
+allow chrome_sandbox_nacl_t self:unix_stream_socket create_stream_socket_perms;
+allow chrome_sandbox_nacl_t self:shm create_shm_perms;
+allow chrome_sandbox_nacl_t self:unix_dgram_socket { create_socket_perms sendto };
+allow chrome_sandbox_nacl_t chrome_sandbox_t:unix_stream_socket { getattr write read };
+allow chrome_sandbox_t chrome_sandbox_nacl_t:unix_stream_socket { getattr write read };
+
+
+allow chrome_sandbox_nacl_t chrome_sandbox_t:shm rw_shm_perms;
+allow chrome_sandbox_nacl_t chrome_sandbox_tmpfs_t:file rw_inherited_file_perms;
+allow chrome_sandbox_t chrome_sandbox_nacl_t:process { sigkill sigstop signull signal share };
+
+manage_files_pattern(chrome_sandbox_nacl_t, chrome_sandbox_tmpfs_t, chrome_sandbox_tmpfs_t)
+fs_tmpfs_filetrans(chrome_sandbox_nacl_t, chrome_sandbox_tmpfs_t, file)
+
+domain_use_interactive_fds(chrome_sandbox_nacl_t)
+
+dontaudit chrome_sandbox_nacl_t self:memprotect mmap_zero;
+
+domtrans_pattern(chrome_sandbox_t, chrome_sandbox_nacl_exec_t, chrome_sandbox_nacl_t)
+ps_process_pattern(chrome_sandbox_t, chrome_sandbox_nacl_t)
+
+kernel_read_system_state(chrome_sandbox_nacl_t)
+
+dev_read_urand(chrome_sandbox_nacl_t)
+dev_read_sysfs(chrome_sandbox_nacl_t)
+
+files_read_etc_files(chrome_sandbox_nacl_t)
+
+miscfiles_read_localization(chrome_sandbox_nacl_t)
+
+corecmd_sbin_entry_type(chrome_sandbox_nacl_t)
+
+userdom_use_inherited_user_ptys(chrome_sandbox_nacl_t)
+userdom_rw_inherited_user_tmpfs_files(chrome_sandbox_nacl_t)
+userdom_execute_user_tmpfs_files(chrome_sandbox_nacl_t)
+userdom_rw_inherited_user_tmp_files(chrome_sandbox_nacl_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/cpufreqselector.te serefpolicy-3.7.19/policy/modules/apps/cpufreqselector.te
--- nsaserefpolicy/policy/modules/apps/cpufreqselector.te	2011-03-17 07:21:23.108851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/cpufreqselector.te	2011-03-17 07:21:06.554851003 +0000
@@ -25,8 +25,10 @@
 
 dev_rw_sysfs(cpufreqselector_t)
 
+miscfiles_read_localization(cpufreqselector_t)
+
 userdom_read_all_users_state(cpufreqselector_t)
-userdom_dontaudit_search_user_home_dirs(cpufreqselector_t)
+userdom_dontaudit_search_admin_dir(cpufreqselector_t)
 
 optional_policy(`
 	dbus_system_domain(cpufreqselector_t, cpufreqselector_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/execmem.fc serefpolicy-3.7.19/policy/modules/apps/execmem.fc
--- nsaserefpolicy/policy/modules/apps/execmem.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/execmem.fc	2012-04-17 22:57:44.449244569 +0000
@@ -0,0 +1,47 @@
+
+/usr/bin/aticonfig	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/bin/darcs 		--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/bin/dosbox		--  gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/bin/haddock.*  	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/bin/hasktags   	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/bin/runghc	   	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/bin/runhaskell	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/bin/sbcl	     	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/bin/skype		--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/bin/valgrind	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/sbin/vboxadd-service 	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/sbin/VBox.* 	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+
+ifdef(`distro_gentoo',`
+/usr/lib32/openoffice/program/[^/]+\.bin -- gen_context(system_u:object_r:execmem_exec_t,s0)
+')
+/usr/lib(64)?/chromium-browser/chromium-browser  gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/lib64/erlang/erts-[^/]+/bin/beam.smp --	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/lib/erlang/erts-[^/]+/bin/beam.smp --	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/lib64/R/bin/exec/R	   	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/lib/R/bin/exec/R	   	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+
+/usr/libexec/ghc-[^/]+/.*bin  --	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/libexec/ghc-[^/]+/ghc.*  --	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/lib(64)?/ghc-[^/]+/ghc.*  --	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/lib/ia32el/ia32x_loader 	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/lib(64)/virtualbox/VirtualBox  --	gen_context(system_u:object_r:execmem_exec_t,s0)
+
+/opt/real/(.*/)?realplay\.bin --	gen_context(system_u:object_r:execmem_exec_t,s0)
+
+/opt/real/RealPlayer/realplay\.bin --	gen_context(system_u:object_r:execmem_exec_t,s0)
+
+/usr/local/RealPlayer/realplay\.bin --	gen_context(system_u:object_r:execmem_exec_t,s0)
+
+/usr/lib/wingide-[^/]+/bin/PyCore/python -- gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/lib/thunderbird-[^/]+/thunderbird-bin -- gen_context(system_u:object_r:execmem_exec_t,s0)
+
+/opt/Adobe.*AIR/.*/Resources/Adobe.AIR.Updater -- gen_context(system_u:object_r:execmem_exec_t,s0)
+/opt/Adobe.*AIR/.*/Resources/Adobe.AIR.Application -- gen_context(system_u:object_r:execmem_exec_t,s0)
+
+/opt/likewise/bin/domainjoin-cli -- gen_context(system_u:object_r:execmem_exec_t,s0)
+
+/opt/google/chrome/chrome -- gen_context(system_u:object_r:execmem_exec_t,s0)
+/opt/google/chrome/google-chrome -- gen_context(system_u:object_r:execmem_exec_t,s0)
+/usr/lib(64)?/gimp/2\.0/plug-ins/help-browser	--	gen_context(system_u:object_r:execmem_exec_t,s0)
+/opt/Komodo-Edit-5/lib/mozilla/komodo-bin -- gen_context(system_u:object_r:execmem_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/execmem.if serefpolicy-3.7.19/policy/modules/apps/execmem.if
--- nsaserefpolicy/policy/modules/apps/execmem.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/execmem.if	2011-10-05 07:55:01.833160001 +0000
@@ -0,0 +1,131 @@
+## <summary>execmem domain</summary>
+
+########################################
+## <summary>
+##	Execute the execmem program in the execmem domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`execmem_exec',`
+	gen_require(`
+		type execmem_exec_t;
+	')
+
+	can_exec($1, execmem_exec_t)
+')
+
+#######################################
+## <summary>
+##	The role template for the execmem module.
+## </summary>
+## <desc>
+##	<p>
+##	This template creates a derived domains which are used
+##	for execmem applications.
+##	</p>
+## </desc>
+## <param name="role_prefix">
+##	<summary>
+##	The prefix of the user domain (e.g., user
+##	is the prefix for user_t).
+##	</summary>
+## </param>
+## <param name="user_role">
+##	<summary>
+##	The role associated with the user domain.
+##	</summary>
+## </param>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+template(`execmem_role_template',`
+	gen_require(`
+		type execmem_exec_t;
+	')
+
+	type $1_execmem_t;
+	domain_type($1_execmem_t)
+	domain_entry_file($1_execmem_t, execmem_exec_t)
+	role $2 types $1_execmem_t;
+
+	userdom_unpriv_usertype($1, $1_execmem_t)
+	userdom_manage_tmp_role($2, $1_execmem_t)
+	userdom_manage_tmpfs_role($2, $1_execmem_t)
+
+	allow $1_execmem_t self:process { execmem execstack };
+	allow $3 $1_execmem_t:process { getattr ptrace noatsecure signal_perms };
+	domtrans_pattern($3, execmem_exec_t, $1_execmem_t)
+ifdef(`hide_broken_symptoms', `
+	dontaudit $1_execmem_t $3:socket_class_set { read write };
+')
+	files_execmod_tmp($1_execmem_t)
+
+	allow $3 execmem_exec_t:file execmod;
+	allow $1_execmem_t execmem_exec_t:file execmod;
+
+	optional_policy(`
+		chrome_role($2, $1_execmem_t)
+	')
+
+	optional_policy(`
+		mozilla_execmod_user_home_files($1_execmem_t)
+	')
+
+	optional_policy(`
+		nsplugin_rw_shm($1_execmem_t)
+		nsplugin_rw_semaphores($1_execmem_t)
+	')
+
+	optional_policy(`
+		xserver_role($2, $1_execmem_t)
+	')
+')
+
+########################################
+## <summary>
+##	Execute a execmem_exec file
+##	in the specified domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="target_domain">
+##	<summary>
+##	The type of the new process.
+##	</summary>
+## </param>
+#
+interface(`execmem_domtrans',`
+	gen_require(`
+		type execmem_exec_t;
+	')
+
+	domtrans_pattern($1, execmem_exec_t, $2)
+')
+
+#######################################
+## <summary>
+##  Execmod the execmem_exec applications
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`execmem_execmod',`
+    gen_require(`
+        type execmem_exec_t;
+    ')
+
+    allow $1 execmem_exec_t:file execmod;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/execmem.te serefpolicy-3.7.19/policy/modules/apps/execmem.te
--- nsaserefpolicy/policy/modules/apps/execmem.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/execmem.te	2011-03-17 07:21:06.461851002 +0000
@@ -0,0 +1,11 @@
+
+policy_module(execmem, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type execmem_exec_t alias unconfined_execmem_exec_t;
+application_executable_file(execmem_exec_t)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/firewallgui.fc serefpolicy-3.7.19/policy/modules/apps/firewallgui.fc
--- nsaserefpolicy/policy/modules/apps/firewallgui.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/firewallgui.fc	2011-03-17 07:21:06.371851001 +0000
@@ -0,0 +1,3 @@
+
+/usr/share/system-config-firewall/system-config-firewall-mechanism.py	--	gen_context(system_u:object_r:firewallgui_exec_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/firewallgui.if serefpolicy-3.7.19/policy/modules/apps/firewallgui.if
--- nsaserefpolicy/policy/modules/apps/firewallgui.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/firewallgui.if	2011-03-17 07:21:06.394851003 +0000
@@ -0,0 +1,23 @@
+
+## <summary>policy for firewallgui</summary>
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	firewallgui over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`firewallgui_dbus_chat',`
+	gen_require(`
+		type firewallgui_t;
+		class dbus send_msg;
+	')
+
+	allow $1 firewallgui_t:dbus send_msg;
+	allow firewallgui_t $1:dbus send_msg;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/firewallgui.te serefpolicy-3.7.19/policy/modules/apps/firewallgui.te
--- nsaserefpolicy/policy/modules/apps/firewallgui.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/firewallgui.te	2011-03-17 07:21:06.551851001 +0000
@@ -0,0 +1,70 @@
+
+policy_module(firewallgui,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type firewallgui_t;
+type firewallgui_exec_t;
+dbus_system_domain(firewallgui_t, firewallgui_exec_t)
+
+type firewallgui_tmp_t;
+files_tmp_file(firewallgui_tmp_t)
+
+########################################
+#
+# firewallgui local policy
+#
+
+allow firewallgui_t self:capability { net_admin sys_rawio };
+
+allow firewallgui_t self:fifo_file rw_fifo_file_perms;
+
+manage_files_pattern(firewallgui_t,firewallgui_tmp_t,firewallgui_tmp_t)
+manage_dirs_pattern(firewallgui_t,firewallgui_tmp_t,firewallgui_tmp_t)
+files_tmp_filetrans(firewallgui_t,firewallgui_tmp_t, { file dir })
+
+files_manage_system_conf_files(firewallgui_t)
+files_etc_filetrans_system_conf(firewallgui_t)
+
+corecmd_exec_shell(firewallgui_t)
+corecmd_exec_bin(firewallgui_t)
+consoletype_exec(firewallgui_t)
+
+kernel_read_system_state(firewallgui_t)
+kernel_read_network_state(firewallgui_t)
+kernel_rw_net_sysctls(firewallgui_t)
+kernel_rw_kernel_sysctl(firewallgui_t)
+kernel_rw_vm_sysctls(firewallgui_t)
+
+files_read_etc_files(firewallgui_t)
+files_read_usr_files(firewallgui_t)
+files_search_kernel_modules(firewallgui_t)
+files_list_kernel_modules(firewallgui_t)
+
+modutils_getattr_module_deps(firewallgui_t)
+
+dev_read_urand(firewallgui_t)
+dev_read_sysfs(firewallgui_t)
+
+nscd_dontaudit_search_pid(firewallgui_t)
+nscd_socket_use(firewallgui_t)
+
+miscfiles_read_localization(firewallgui_t)
+
+iptables_domtrans(firewallgui_t)
+iptables_initrc_domtrans(firewallgui_t)
+
+optional_policy(`
+	gnome_read_gconf_home_files(firewallgui_t)
+')
+
+optional_policy(`
+        policykit_dbus_chat(firewallgui_t)
+')
+
+optional_policy(`
+        rpm_dontaudit_search_db(firewallgui_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/games.fc serefpolicy-3.7.19/policy/modules/apps/games.fc
--- nsaserefpolicy/policy/modules/apps/games.fc	2011-03-17 07:21:23.086851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/games.fc	2012-07-17 11:02:34.259204903 +0000
@@ -1,7 +1,7 @@
 #
 # /usr
 #
-/usr/lib/games(/.*)? 		gen_context(system_u:object_r:games_exec_t,s0)
+/usr/lib(64)?/games(/.*)? 		gen_context(system_u:object_r:games_exec_t,s0)
 /usr/games/.*		--	gen_context(system_u:object_r:games_exec_t,s0)
 
 #
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/gitosis.fc serefpolicy-3.7.19/policy/modules/apps/gitosis.fc
--- nsaserefpolicy/policy/modules/apps/gitosis.fc	2011-03-17 07:21:23.032851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/gitosis.fc	2012-08-08 10:06:56.347784443 +0000
@@ -1,3 +1,5 @@
 /usr/bin/gitosis-serve			--	gen_context(system_u:object_r:gitosis_exec_t,s0)
+/usr/bin/gl-auth-command		--	gen_context(system_u:object_r:gitosis_exec_t,s0)
 
 /var/lib/gitosis(/.*)?				gen_context(system_u:object_r:gitosis_var_lib_t,s0)
+/var/lib/gitolite(3)?(/.*)?                         gen_context(system_u:object_r:gitosis_var_lib_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/gitosis.if serefpolicy-3.7.19/policy/modules/apps/gitosis.if
--- nsaserefpolicy/policy/modules/apps/gitosis.if	2011-03-17 07:21:22.914851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/gitosis.if	2011-03-17 07:21:05.942851003 +0000
@@ -62,7 +62,7 @@
 	files_search_var_lib($1)
 	read_files_pattern($1, gitosis_var_lib_t, gitosis_var_lib_t)
 	read_lnk_files_pattern($1, gitosis_var_lib_t, gitosis_var_lib_t)
-	list_dirs_pattern(%1, gitosis_var_lib_t, gitosis_var_lib_t)
+	list_dirs_pattern($1, gitosis_var_lib_t, gitosis_var_lib_t)
 ')
 
 ######################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/gitosis.te serefpolicy-3.7.19/policy/modules/apps/gitosis.te
--- nsaserefpolicy/policy/modules/apps/gitosis.te	2011-03-17 07:21:22.986851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/gitosis.te	2011-03-17 07:21:06.076851002 +0000
@@ -26,12 +26,17 @@
 manage_lnk_files_pattern(gitosis_t, gitosis_var_lib_t, gitosis_var_lib_t)
 manage_dirs_pattern(gitosis_t, gitosis_var_lib_t, gitosis_var_lib_t)
 
+kernel_read_system_state(gitosis_t)
+
 corecmd_exec_bin(gitosis_t) 
 corecmd_exec_shell(gitosis_t)
 
-kernel_read_system_state(gitosis_t)
+dev_read_urand(gitosis_t)
 
+files_read_etc_files(gitosis_t)
 files_read_usr_files(gitosis_t)
 files_search_var_lib(gitosis_t)
 
 miscfiles_read_localization(gitosis_t)
+
+sysnet_read_config(gitosis_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/gnome.fc serefpolicy-3.7.19/policy/modules/apps/gnome.fc
--- nsaserefpolicy/policy/modules/apps/gnome.fc	2011-03-17 07:21:23.033851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/gnome.fc	2012-02-22 22:24:54.551588747 +0000
@@ -1,8 +1,34 @@
-HOME_DIR/\.config/gtk-.*	gen_context(system_u:object_r:gnome_home_t,s0)
+HOME_DIR/\.cache(/.*)?	gen_context(system_u:object_r:cache_home_t,s0)
+HOME_DIR/\.dbus(/.*)?  gen_context(system_u:object_r:dbus_home_t,s0)
+HOME_DIR/\.config(/.*)?	gen_context(system_u:object_r:config_home_t,s0)
 HOME_DIR/\.gconf(d)?(/.*)?	gen_context(system_u:object_r:gconf_home_t,s0)
+HOME_DIR/\.gnome2(/.*)?	gen_context(system_u:object_r:gnome_home_t,s0)
+HOME_DIR/\.gstreamer-.*	gen_context(system_u:object_r:gstreamer_home_t,s0)
+HOME_DIR/\.kde(/.*)?	gen_context(system_u:object_r:config_home_t,s0)
+HOME_DIR/\.local.*		gen_context(system_u:object_r:gconf_home_t,s0)
+HOME_DIR/\.local/share(.*)?	gen_context(system_u:object_r:data_home_t,s0)
+HOME_DIR/\.Xdefaults		gen_context(system_u:object_r:config_home_t,s0)
+HOME_DIR/\.xine(/.*)?		gen_context(system_u:object_r:config_home_t,s0)
+
+
+/root/\.config(/.*)?		gen_context(system_u:object_r:config_home_t,s0)
+/root/\.dbus(/.*)?     gen_context(system_u:object_r:dbus_home_t,s0)
+/root/\.gconf(d)?(/.*)?	gen_context(system_u:object_r:gconf_home_t,s0)
+/root/\.gnome2(/.*)?		gen_context(system_u:object_r:gnome_home_t,s0)
+/root/\.gstreamer-.*		gen_context(system_u:object_r:gstreamer_home_t,s0)
+/root/\.local.*			gen_context(system_u:object_r:gconf_home_t,s0)
+/root/\.local/share(.*)?	gen_context(system_u:object_r:data_home_t,s0)
+/root/\.Xdefaults		gen_context(system_u:object_r:config_home_t,s0)
+/root/\.xine(/.*)?		gen_context(system_u:object_r:config_home_t,s0)
 
 /etc/gconf(/.*)?		gen_context(system_u:object_r:gconf_etc_t,s0)
 
 /tmp/gconfd-USER/.*	--	gen_context(system_u:object_r:gconf_tmp_t,s0)
 
-/usr/libexec/gconfd-2 	--	gen_context(system_u:object_r:gconfd_exec_t,s0)
+# Don't use because toolchain is broken
+#/usr/libexec/gconfd-2 --	gen_context(system_u:object_r:gconfd_exec_t,s0)
+
+/usr/libexec/gconf-defaults-mechanism	    	--      gen_context(system_u:object_r:gconfdefaultsm_exec_t,s0)
+
+/usr/libexec/gnome-system-monitor-mechanism 	--      gen_context(system_u:object_r:gnomesystemmm_exec_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/gnome.if serefpolicy-3.7.19/policy/modules/apps/gnome.if
--- nsaserefpolicy/policy/modules/apps/gnome.if	2011-03-17 07:21:23.030851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/gnome.if	2012-04-24 12:50:13.395252280 +0000
@@ -74,6 +74,24 @@
 
 ########################################
 ## <summary>
+##	Dontaudit search gnome homedir content (.config)
+## </summary>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+interface(`gnome_dontaudit_search_config',`
+	gen_require(`
+		attribute gnome_home_type;
+	')
+
+	dontaudit $1 gnome_home_type:dir search_dir_perms;
+')
+
+########################################
+## <summary>
 ##	manage gnome homedir content (.config)
 ## </summary>
 ## <param name="user_domain">
@@ -84,10 +102,463 @@
 #
 interface(`gnome_manage_config',`
 	gen_require(`
+		attribute gnome_home_type;
+	')
+
+	allow $1 gnome_home_type:dir manage_dir_perms;
+	allow $1 gnome_home_type:file manage_file_perms;
+	allow $1 gnome_home_type:lnk_file manage_lnk_file_perms;
+	userdom_search_user_home_dirs($1)
+')
+
+########################################
+## <summary>
+##	Send general signals to all gconf domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_signal_all',`
+	gen_require(`
+		attribute gnomedomain;
+	')
+
+	allow $1 gnomedomain:process signal;
+')
+
+########################################
+## <summary>
+##	Create objects in a Gnome cache home directory
+##	with an automatic type transition to
+##	a specified private type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="private_type">
+##	<summary>
+##	The type of the object to create.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	The class of the object to be created.
+##	</summary>
+## </param>
+#
+interface(`gnome_cache_filetrans',`
+	gen_require(`
+		type cache_home_t;
+	')
+
+	filetrans_pattern($1, cache_home_t, $2, $3)
+	userdom_search_user_home_dirs($1)
+')
+
+########################################
+## <summary>
+##	Read generic cache home files (.cache)
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_read_generic_cache_files',`
+	gen_require(`
+		type cache_home_t;
+	')
+
+	read_files_pattern($1, cache_home_t, cache_home_t)
+	userdom_search_user_home_dirs($1)
+')
+
+########################################
+## <summary>
+##	Set attributes of cache home dir (.cache)
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_setattr_cache_home_dir',`
+	gen_require(`
+		type cache_home_t;
+	')
+
+	setattr_dirs_pattern($1, cache_home_t, cache_home_t)
+	userdom_search_user_home_dirs($1)
+')
+
+########################################
+## <summary>
+##	write to generic cache home files (.cache)
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_write_generic_cache_files',`
+	gen_require(`
+		type cache_home_t;
+	')
+
+	write_files_pattern($1, cache_home_t, cache_home_t)
+	userdom_search_user_home_dirs($1)
+')
+
+########################################
+## <summary>
+##	read gnome homedir content (.config)
+## </summary>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+template(`gnome_read_config',`
+	gen_require(`
+		attribute gnome_home_type;
+	')
+
+	list_dirs_pattern($1, gnome_home_type, gnome_home_type)
+	read_files_pattern($1, gnome_home_type, gnome_home_type)
+	read_lnk_files_pattern($1, gnome_home_type, gnome_home_type)
+')
+
+########################################
+## <summary>
+##	Set attributes of Gnome config dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_setattr_config_dirs',`
+	gen_require(`
 		type gnome_home_t;
 	')
 
-	allow $1 gnome_home_t:dir manage_dir_perms;
-	allow $1 gnome_home_t:file manage_file_perms;
+	setattr_dirs_pattern($1, gnome_home_t, gnome_home_t)
+	files_search_home($1)
+')
+
+########################################
+## <summary>
+##	Create objects in a Gnome gconf home directory
+##	with an automatic type transition to
+##	a specified private type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="private_type">
+##	<summary>
+##	The type of the object to create.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	The class of the object to be created.
+##	</summary>
+## </param>
+#
+interface(`gnome_data_filetrans',`
+	gen_require(`
+		type data_home_t;
+	')
+
+	filetrans_pattern($1, data_home_t, $2, $3)
+	gnome_search_gconf($1)
+')
+
+######################################
+## <summary>
+##  Read generic data home files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`gnome_read_generic_data_home_files',`
+    gen_require(`
+        type data_home_t, gconf_home_t;
+    ')
+
+    read_files_pattern($1, { gconf_home_t data_home_t }, data_home_t)
+')
+
+########################################
+## <summary>
+##	Create gconf_home_t objects in the /root directory
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	The class of the object to be created.
+##	</summary>
+## </param>
+#
+interface(`gnome_admin_home_gconf_filetrans',`
+	gen_require(`
+		type gconf_home_t;
+	')
+
+	userdom_admin_home_dir_filetrans($1, gconf_home_t, $2)
+')
+
+########################################
+## <summary>
+##	read gconf config files
+## </summary>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+template(`gnome_read_gconf_config',`
+	gen_require(`
+		type gconf_etc_t;
+	')
+
+	allow $1 gconf_etc_t:dir list_dir_perms;
+	read_files_pattern($1, gconf_etc_t, gconf_etc_t)
+')
+
+#######################################
+## <summary>
+##      Manage gconf config files
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`gnome_manage_gconf_config',`
+        gen_require(`
+                type gconf_etc_t;
+        ')
+
+        allow $1 gconf_etc_t:dir list_dir_perms;
+        manage_files_pattern($1, gconf_etc_t, gconf_etc_t)
+')
+
+########################################
+## <summary>
+##	Execute gconf programs in 
+##	in the caller domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_exec_gconf',`
+	gen_require(`
+		type gconfd_exec_t;
+	')
+
+	can_exec($1, gconfd_exec_t)
+')
+
+########################################
+## <summary>
+##	Read gconf home files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_read_gconf_home_files',`
+	gen_require(`
+		type gconf_home_t;
+		type data_home_t;
+	')
+
+	allow $1 gconf_home_t:dir list_dir_perms;
+	allow $1 data_home_t:dir list_dir_perms;
+	read_files_pattern($1, gconf_home_t, gconf_home_t)
+	read_files_pattern($1, data_home_t, data_home_t)
+')
+
+########################################
+## <summary>
+##	search gconf homedir (.local)
+## </summary>
+## <param name="user_domain">
+##	<summary>
+##	The type of the domain.
+##	</summary>
+## </param>
+#
+interface(`gnome_search_gconf',`
+	gen_require(`
+		type gconf_home_t;
+	')
+
+	allow $1 gconf_home_t:dir search_dir_perms;
 	userdom_search_user_home_dirs($1)
 ')
+
+########################################
+## <summary>
+##	Append gconf home files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_append_gconf_home_files',`
+	gen_require(`
+		type gconf_home_t;
+	')
+
+	append_files_pattern($1, gconf_home_t, gconf_home_t)
+')
+
+########################################
+## <summary>
+##	manage gconf home files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_manage_gconf_home_files',`
+	gen_require(`
+		type gconf_home_t;
+	')
+
+	allow $1 gconf_home_t:dir list_dir_perms;
+	manage_files_pattern($1, gconf_home_t, gconf_home_t)
+')
+
+########################################
+## <summary>
+##	Connect to gnome over an unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+interface(`gnome_stream_connect',`
+	gen_require(`
+		attribute gnome_home_type;
+	')
+
+	# Connect to pulseaudit server
+	stream_connect_pattern($1, gnome_home_type, gnome_home_type, $2)
+')
+
+########################################
+## <summary>
+##	read gnome homedir content (.config)
+## </summary>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+template(`gnome_list_home_config',`
+	gen_require(`
+		type config_home_t;
+	')
+
+	allow $1 config_home_t:dir list_dir_perms;
+')
+
+########################################
+## <summary>
+##	Read/Write all inherited gnome home config 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_rw_inherited_config',`
+	gen_require(`
+		attribute gnome_home_type;
+	')
+
+	allow $1 gnome_home_type:file rw_inherited_file_perms;
+')
+
+#######################################
+## <summary>
+##      read gnome homedir content (.config)
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`gnome_read_home_config',`
+        gen_require(`
+                type config_home_t;
+        ')
+
+        read_files_pattern($1, config_home_t, config_home_t)
+		read_lnk_files_pattern($1, config_home_t, config_home_t)
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	gconf system service over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnome_dbus_chat_gconfdefault',`
+	gen_require(`
+		type gconfdefaultsm_t;
+		class dbus send_msg;
+	')
+
+	allow $1 gconfdefaultsm_t:dbus send_msg;
+	allow gconfdefaultsm_t $1:dbus send_msg;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/gnome.te serefpolicy-3.7.19/policy/modules/apps/gnome.te
--- nsaserefpolicy/policy/modules/apps/gnome.te	2011-03-17 07:21:23.038851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/gnome.te	2012-02-22 22:23:48.549141755 +0000
@@ -7,18 +7,36 @@
 #
 
 attribute gnomedomain;
+attribute gnome_home_type;
 
 type gconf_etc_t;
-files_type(gconf_etc_t)
+files_config_file(gconf_etc_t)
 
-type gconf_home_t;
+type data_home_t, gnome_home_type;
+userdom_user_home_content(data_home_t)
+
+type config_home_t, gnome_home_type;
+userdom_user_home_content(config_home_t)
+
+type cache_home_t, gnome_home_type;
+userdom_user_home_content(cache_home_t)
+
+type gstreamer_home_t, gnome_home_type;
+userdom_user_home_content(gstreamer_home_t)
+
+type dbus_home_t, gnome_home_type;
+userdom_user_home_content(dbus_home_t)
+
+type gconf_home_t, gnome_home_type;
 typealias gconf_home_t alias { user_gconf_home_t staff_gconf_home_t sysadm_gconf_home_t };
 typealias gconf_home_t alias { auditadm_gconf_home_t secadm_gconf_home_t };
+typealias gconf_home_t alias unconfined_gconf_home_t;
 userdom_user_home_content(gconf_home_t)
 
 type gconf_tmp_t;
 typealias gconf_tmp_t alias { user_gconf_tmp_t staff_gconf_tmp_t sysadm_gconf_tmp_t };
 typealias gconf_tmp_t alias { auditadm_gconf_tmp_t secadm_gconf_tmp_t };
+typealias gconf_tmp_t alias unconfined_gconf_tmp_t;
 files_tmp_file(gconf_tmp_t)
 ubac_constrained(gconf_tmp_t)
 
@@ -29,11 +47,20 @@
 application_domain(gconfd_t, gconfd_exec_t)
 ubac_constrained(gconfd_t)
 
-type gnome_home_t;
+type gnome_home_t, gnome_home_type;
 typealias gnome_home_t alias { user_gnome_home_t staff_gnome_home_t sysadm_gnome_home_t };
 typealias gnome_home_t alias { auditadm_gnome_home_t secadm_gnome_home_t };
+typealias gnome_home_t alias unconfined_gnome_home_t;
 userdom_user_home_content(gnome_home_t)
 
+type gconfdefaultsm_t;
+type gconfdefaultsm_exec_t;
+dbus_system_domain(gconfdefaultsm_t, gconfdefaultsm_exec_t)
+
+type gnomesystemmm_t;
+type gnomesystemmm_exec_t;
+dbus_system_domain(gnomesystemmm_t, gnomesystemmm_exec_t)
+
 ##############################
 #
 # Local Policy
@@ -73,3 +100,91 @@
 	xserver_use_xdm_fds(gconfd_t)
 	xserver_rw_xdm_pipes(gconfd_t)
 ')
+
+tunable_policy(`use_nfs_home_dirs',`
+        fs_manage_nfs_dirs(gconfdefaultsm_t)
+        fs_manage_nfs_files(gconfdefaultsm_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+        fs_manage_cifs_dirs(gconfdefaultsm_t)
+        fs_manage_cifs_files(gconfdefaultsm_t)
+')
+
+#######################################
+#
+# gconf-defaults-mechanisms local policy
+#
+
+allow gconfdefaultsm_t self:capability { dac_override sys_nice sys_ptrace };
+allow gconfdefaultsm_t self:process getsched;
+allow gconfdefaultsm_t self:fifo_file rw_fifo_file_perms;
+
+corecmd_search_bin(gconfdefaultsm_t)
+
+files_read_etc_files(gconfdefaultsm_t)
+files_read_usr_files(gconfdefaultsm_t)
+
+miscfiles_read_localization(gconfdefaultsm_t)
+
+gnome_manage_gconf_home_files(gconfdefaultsm_t)
+gnome_manage_gconf_config(gconfdefaultsm_t)
+
+userdom_read_all_users_state(gconfdefaultsm_t)
+userdom_search_user_home_dirs(gconfdefaultsm_t)
+
+userdom_dontaudit_search_admin_dir(gconfdefaultsm_t)
+
+optional_policy(`
+        consolekit_dbus_chat(gconfdefaultsm_t)
+')
+
+optional_policy(`
+        nscd_dontaudit_search_pid(gconfdefaultsm_t)
+')
+
+optional_policy(`
+        policykit_domtrans_auth(gconfdefaultsm_t)
+        policykit_dbus_chat(gconfdefaultsm_t)
+        policykit_read_lib(gconfdefaultsm_t)
+        policykit_read_reload(gconfdefaultsm_t)
+')
+
+#######################################
+#
+# gnome-system-monitor-mechanisms local policy
+#
+
+allow gnomesystemmm_t self:capability { sys_nice sys_ptrace };
+allow gnomesystemmm_t self:fifo_file rw_fifo_file_perms;
+
+corecmd_search_bin(gnomesystemmm_t)
+
+domain_kill_all_domains(gnomesystemmm_t)
+domain_search_all_domains_state(gnomesystemmm_t)
+domain_setpriority_all_domains(gnomesystemmm_t)
+domain_signal_all_domains(gnomesystemmm_t)
+domain_sigstop_all_domains(gnomesystemmm_t)
+
+files_read_etc_files(gnomesystemmm_t)
+files_read_usr_files(gnomesystemmm_t)
+
+miscfiles_read_localization(gnomesystemmm_t)
+
+userdom_read_all_users_state(gnomesystemmm_t)
+userdom_dontaudit_search_admin_dir(gnomesystemmm_t)
+
+optional_policy(`
+        consolekit_dbus_chat(gnomesystemmm_t)
+')
+
+optional_policy(`
+        nscd_dontaudit_search_pid(gnomesystemmm_t)
+')
+
+optional_policy(`
+        policykit_dbus_chat(gnomesystemmm_t)
+        policykit_domtrans_auth(gnomesystemmm_t)
+        policykit_read_lib(gnomesystemmm_t)
+        policykit_read_reload(gnomesystemmm_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/gpg.fc serefpolicy-3.7.19/policy/modules/apps/gpg.fc
--- nsaserefpolicy/policy/modules/apps/gpg.fc	2011-03-17 07:21:22.973851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/gpg.fc	2011-03-17 07:21:06.047851002 +0000
@@ -1,4 +1,5 @@
 HOME_DIR/\.gnupg(/.+)?		gen_context(system_u:object_r:gpg_secret_t,s0)
+/root/\.gnupg(/.+)?		gen_context(system_u:object_r:gpg_secret_t,s0)
 
 /usr/bin/gpg(2)?	--	gen_context(system_u:object_r:gpg_exec_t,s0)
 /usr/bin/gpg-agent	--	gen_context(system_u:object_r:gpg_agent_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/gpg.if serefpolicy-3.7.19/policy/modules/apps/gpg.if
--- nsaserefpolicy/policy/modules/apps/gpg.if	2011-03-17 07:21:22.948851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/gpg.if	2011-03-17 07:21:05.995851002 +0000
@@ -21,6 +21,7 @@
 		type gpg_agent_t, gpg_agent_exec_t;
 		type gpg_agent_tmp_t;
 		type gpg_helper_t, gpg_pinentry_t;
+		type gpg_pinentry_tmp_t;
 	')
 
 	role $1 types { gpg_t gpg_agent_t gpg_helper_t gpg_pinentry_t };
@@ -32,6 +33,8 @@
 	ps_process_pattern($2, gpg_t)
 	allow $2 gpg_t:process { signull sigstop signal sigkill };
 
+	allow $2 gpg_agent_t:unix_stream_socket { rw_socket_perms connectto };
+
 	# communicate with the user 
 	allow gpg_helper_t $2:fd use;
 	allow gpg_helper_t $2:fifo_file write;
@@ -50,13 +53,19 @@
 	# Transition from the user domain to the agent domain.
 	domtrans_pattern($2, gpg_agent_exec_t, gpg_agent_t)
 
+	manage_sock_files_pattern($2, gpg_pinentry_tmp_t, gpg_pinentry_tmp_t)
+	relabel_sock_files_pattern($2, gpg_pinentry_tmp_t, gpg_pinentry_tmp_t)
+
+	optional_policy(`
+		gpg_pinentry_dbus_chat($2)
+	')
+
 	ifdef(`hide_broken_symptoms',`
 		#Leaked File Descriptors
+		dontaudit gpg_t $2:socket_class_set { getattr read write };
 		dontaudit gpg_t $2:fifo_file rw_fifo_file_perms;
-		dontaudit gpg_t $2:tcp_socket rw_socket_perms;
-		dontaudit gpg_t $2:udp_socket rw_socket_perms;
-		dontaudit gpg_t $2:unix_stream_socket rw_socket_perms;
-		dontaudit gpg_t $2:unix_dgram_socket rw_socket_perms;
+		dontaudit gpg_agent_t $2:socket_class_set { getattr read write };
+		dontaudit gpg_agent_t $2:fifo_file rw_fifo_file_perms;
 	')
 ')
 
@@ -78,6 +87,43 @@
 	domtrans_pattern($1, gpg_exec_t, gpg_t)
 ')
 
+######################################
+## <summary>
+##  Transition to a gpg web domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`gpg_domtrans_web',`
+    gen_require(`
+        type gpg_web_t, gpg_exec_t;
+    ')
+
+    domtrans_pattern($1, gpg_exec_t, gpg_web_t)
+')
+
+######################################
+## <summary>
+##  Make gpg an entrypoint for
+##  the specified domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The domain for which cifs_t is an entrypoint.
+##  </summary>
+## </param>
+#
+interface(`gpg_entry_type',`
+    gen_require(`
+        type gpg_exec_t;
+    ')
+
+    domain_entry_file($1, gpg_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Send generic signals to user gpg processes.
@@ -95,3 +141,65 @@
 
 	allow $1 gpg_t:process signal;
 ')
+
+########################################
+## <summary>
+##	Read and write GPG named pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gpg_agent_rw_named_pipes',`
+	# Just wants read/write could this be a leak?
+	gen_require(`
+		type gpg_agent_t;
+	')
+
+	allow $1 gpg_agent_t:fifo_file rw_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	Send messages to and from GPG
+##	Pinentry over DBUS.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gpg_pinentry_dbus_chat',`
+	gen_require(`
+		type gpg_pinentry_t;
+		class dbus send_msg;
+	')
+
+	allow $1 gpg_pinentry_t:dbus send_msg;
+	allow gpg_pinentry_t $1:dbus send_msg;
+')
+
+
+########################################
+## <summary>
+##	List Gnu Privacy Guard user 
+##	content dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gpg_list_user_content_dirs',`
+	gen_require(`
+		type gpg_secret_t;
+	')
+
+	list_dirs_pattern($1, gpg_secret_t, gpg_secret_t)
+	userdom_search_user_home_dirs($1)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/gpg.te serefpolicy-3.7.19/policy/modules/apps/gpg.te
--- nsaserefpolicy/policy/modules/apps/gpg.te	2011-03-17 07:21:23.041851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/gpg.te	2012-07-19 23:47:40.324150391 +0000
@@ -5,6 +5,7 @@
 #
 # Declarations
 #
+attribute gpgdomain;
 
 ## <desc>
 ## <p>
@@ -14,12 +15,21 @@
 ## </desc>
 gen_tunable(gpg_agent_env_file, false)
 
-type gpg_t;
+## <desc>
+## <p>
+## Allow gpg web domain to modify public files
+## used for public file transfer services.
+## </p>
+## </desc>
+gen_tunable(gpg_web_anon_write, false)
+
+type gpg_t, gpgdomain;
 type gpg_exec_t;
 typealias gpg_t alias { user_gpg_t staff_gpg_t sysadm_gpg_t };
 typealias gpg_t alias { auditadm_gpg_t secadm_gpg_t };
 application_domain(gpg_t, gpg_exec_t)
 ubac_constrained(gpg_t)
+role system_r types gpg_t;
 
 type gpg_agent_t;
 type gpg_agent_exec_t;
@@ -45,6 +55,7 @@
 typealias gpg_helper_t alias { auditadm_gpg_helper_t secadm_gpg_helper_t };
 application_domain(gpg_helper_t, gpg_helper_exec_t)
 ubac_constrained(gpg_helper_t)
+role system_r types gpg_helper_t;
 
 type gpg_pinentry_t;
 type pinentry_exec_t;
@@ -53,22 +64,38 @@
 application_domain(gpg_pinentry_t, pinentry_exec_t)
 ubac_constrained(gpg_pinentry_t)
 
+type gpg_pinentry_tmp_t;
+files_tmp_file(gpg_pinentry_tmp_t)
+ubac_constrained(gpg_pinentry_tmp_t)
+
+type gpg_pinentry_tmpfs_t;
+files_tmpfs_file(gpg_pinentry_tmpfs_t)
+ubac_constrained(gpg_pinentry_tmpfs_t)
+
+type gpg_web_t;
+domain_type(gpg_web_t)
+gpg_entry_type(gpg_web_t)
+role system_r types gpg_web_t;
+
 ########################################
 #
 # GPG local policy
 #
 
-allow gpg_t self:capability { ipc_lock setuid };
-# setrlimit is for ulimit -c 0
-allow gpg_t self:process { signal setrlimit getcap setcap setpgid };
+allow gpgdomain self:capability { ipc_lock setuid };
+allow gpgdomain self:process { getsched setsched };
+#at setrlimit is for ulimit -c 0
+allow gpgdomain self:process { signal signull setrlimit getcap setcap setpgid };
 
-allow gpg_t self:fifo_file rw_fifo_file_perms;
-allow gpg_t self:tcp_socket create_stream_socket_perms;
+allow gpgdomain self:fifo_file rw_fifo_file_perms;
+allow gpgdomain self:tcp_socket create_stream_socket_perms;
 
 manage_dirs_pattern(gpg_t, gpg_agent_tmp_t, gpg_agent_tmp_t)
 manage_files_pattern(gpg_t, gpg_agent_tmp_t, gpg_agent_tmp_t)
 files_tmp_filetrans(gpg_t, gpg_agent_tmp_t, { dir file })
 
+domtrans_pattern(gpg_t, gpg_agent_exec_t, gpg_agent_t)
+
 # transition from the gpg domain to the helper domain
 domtrans_pattern(gpg_t, gpg_helper_exec_t, gpg_helper_t)
 
@@ -79,6 +106,9 @@
 
 kernel_read_sysctl(gpg_t)
 
+corecmd_exec_shell(gpg_t)
+corecmd_exec_bin(gpg_t)
+
 corenet_all_recvfrom_unlabeled(gpg_t)
 corenet_all_recvfrom_netlabel(gpg_t)
 corenet_tcp_sendrecv_generic_if(gpg_t)
@@ -95,6 +125,7 @@
 dev_read_generic_usb_dev(gpg_t)
 
 fs_getattr_xattr_fs(gpg_t)
+fs_list_inotifyfs(gpg_t)
 
 domain_use_interactive_fds(gpg_t)
 
@@ -112,6 +143,8 @@
 # sign/encrypt user files
 userdom_manage_user_tmp_files(gpg_t)
 userdom_manage_user_home_content_files(gpg_t)
+userdom_user_home_dir_filetrans_user_home_content(gpg_t, file)
+userdom_stream_connect(gpg_t)
 
 mta_write_config(gpg_t)
 
@@ -126,15 +159,20 @@
 ')
 
 optional_policy(`
-	xserver_use_xdm_fds(gpg_t)
-	xserver_rw_xdm_pipes(gpg_t)
+	mozilla_read_user_home_files(gpg_t)
+	mozilla_write_user_home_files(gpg_t)
 ')
 
 optional_policy(`
-	cron_system_entry(gpg_t, gpg_exec_t)
-	cron_read_system_job_tmp_files(gpg_t)
+	xserver_use_xdm_fds(gpg_t)
+	xserver_rw_xdm_pipes(gpg_t)
 ')
 
+#optional_policy(`
+#	cron_system_entry(gpg_t, gpg_exec_t)
+#	cron_read_system_job_tmp_files(gpg_t)
+#')
+
 ########################################
 #
 # GPG helper local policy
@@ -184,6 +222,7 @@
 #
 # GPG agent local policy
 #
+domtrans_pattern(gpg_t, gpg_agent_exec_t, gpg_agent_t)
 
 # rlimit: gpg-agent wants to prevent coredumps
 allow gpg_agent_t self:process setrlimit;
@@ -202,10 +241,17 @@
 manage_sock_files_pattern(gpg_agent_t, gpg_agent_tmp_t, gpg_agent_tmp_t)
 files_tmp_filetrans(gpg_agent_t, gpg_agent_tmp_t, { file sock_file dir })
 
+fs_dontaudit_list_inotifyfs(gpg_agent_t)
+
 # allow gpg to connect to the gpg agent
 stream_connect_pattern(gpg_t, gpg_agent_tmp_t, gpg_agent_tmp_t, gpg_agent_t)
 
+corecmd_read_bin_symlinks(gpg_agent_t)
 corecmd_search_bin(gpg_agent_t)
+corecmd_exec_shell(gpg_agent_t)
+
+dev_read_rand(gpg_agent_t)
+dev_read_urand(gpg_agent_t)
 
 domain_use_interactive_fds(gpg_agent_t)
 
@@ -215,6 +261,10 @@
 userdom_use_user_terminals(gpg_agent_t)
 # read and write ~/.gnupg (gpg-agent stores secret keys in ~/.gnupg/private-keys-v1.d )
 userdom_search_user_home_dirs(gpg_agent_t)
+ifdef(`hide_broken_symptoms',`
+	userdom_dontaudit_read_user_tmp_files(gpg_agent_t)
+	userdom_dontaudit_write_user_tmp_files(gpg_agent_t)
+')
 
 tunable_policy(`gpg_agent_env_file',`
 	# write ~/.gpg-agent-info or a similar to the users home dir
@@ -237,31 +287,75 @@
 	fs_manage_cifs_symlinks(gpg_agent_t)
 ')
 
+optional_policy(`
+	mozilla_dontaudit_rw_user_home_files(gpg_agent_t)
+')
+
 ##############################
 #
 # Pinentry local policy
 #
 
-allow gpg_pinentry_t self:unix_stream_socket { connect create getattr read shutdown write };
+allow gpg_pinentry_t self:process { getcap getsched setsched signal };
 allow gpg_pinentry_t self:fifo_file rw_fifo_file_perms;
+allow gpg_pinentry_t self:netlink_route_socket create_netlink_socket_perms;
+allow gpg_pinentry_t self:shm create_shm_perms;
+allow gpg_pinentry_t self:tcp_socket create_stream_socket_perms;
+allow gpg_pinentry_t self:unix_dgram_socket sendto;
+allow gpg_pinentry_t self:unix_stream_socket { connect create getattr read shutdown write };
+
+can_exec(gpg_pinentry_t, pinentry_exec_t)
 
 # we need to allow gpg-agent to call pinentry so it can get the passphrase 
 # from the user.
 domtrans_pattern(gpg_agent_t, pinentry_exec_t, gpg_pinentry_t)
 
+manage_sock_files_pattern(gpg_pinentry_t, gpg_pinentry_tmp_t, gpg_pinentry_tmp_t)
+userdom_user_tmp_filetrans(gpg_pinentry_t, gpg_pinentry_tmp_t, sock_file)
+
+manage_dirs_pattern(gpg_pinentry_t, gpg_pinentry_tmpfs_t, gpg_pinentry_tmpfs_t)
+manage_files_pattern(gpg_pinentry_t, gpg_pinentry_tmpfs_t, gpg_pinentry_tmpfs_t)
+fs_tmpfs_filetrans(gpg_pinentry_t, gpg_pinentry_tmpfs_t, { file dir })
+fs_getattr_tmpfs(gpg_pinentry_t)
+fs_dontaudit_list_inotifyfs(gpg_pinentry_t)
+fs_getattr_xattr_fs(gpg_pinentry_t)
+
+corecmd_exec_bin(gpg_pinentry_t)
+
+corenet_all_recvfrom_netlabel(gpg_pinentry_t)
+corenet_all_recvfrom_unlabeled(gpg_pinentry_t)
+corenet_sendrecv_pulseaudio_client_packets(gpg_pinentry_t)
+corenet_tcp_bind_generic_node(gpg_pinentry_t)
+corenet_tcp_connect_pulseaudio_port(gpg_pinentry_t)
+corenet_tcp_sendrecv_generic_if(gpg_pinentry_t)
+corenet_tcp_sendrecv_generic_node(gpg_pinentry_t)
+corenet_tcp_sendrecv_generic_port(gpg_pinentry_t)
+
 # read /proc/meminfo
 kernel_read_system_state(gpg_pinentry_t)
 
+dev_read_urand(gpg_pinentry_t)
+dev_read_rand(gpg_pinentry_t)
+
 files_read_usr_files(gpg_pinentry_t)
 # read /etc/X11/qtrc
 files_read_etc_files(gpg_pinentry_t)
 
+logging_send_syslog_msg(gpg_pinentry_t)
+
+auth_use_nsswitch(gpg_pinentry_t)
+
 miscfiles_read_fonts(gpg_pinentry_t)
 miscfiles_read_localization(gpg_pinentry_t)
 
 # for .Xauthority
 userdom_read_user_home_content_files(gpg_pinentry_t)
 
+userdom_read_user_tmpfs_files(gpg_pinentry_t)
+# Bug: user pulseaudio files need open,read and unlink:
+allow gpg_pinentry_t user_tmpfs_t:file unlink;
+userdom_signull_unpriv_users(gpg_pinentry_t)
+
 tunable_policy(`use_nfs_home_dirs',`
 	fs_read_nfs_files(gpg_pinentry_t)
 ')
@@ -271,5 +365,50 @@
 ')
 
 optional_policy(`
-	xserver_stream_connect(gpg_pinentry_t)
+	dbus_session_bus_client(gpg_pinentry_t)
+	dbus_system_bus_client(gpg_pinentry_t)
+')
+
+optional_policy(`
+	gnome_write_generic_cache_files(gpg_pinentry_t)
+	gnome_read_generic_cache_files(gpg_pinentry_t)
+	gnome_read_gconf_home_files(gpg_pinentry_t)
+	gnome_read_home_config(gpg_pinentry_t)
+')
+
+optional_policy(`
+	pulseaudio_exec(gpg_pinentry_t)
+	pulseaudio_rw_home_files(gpg_pinentry_t)
+	pulseaudio_setattr_home_dir(gpg_pinentry_t)
+	pulseaudio_stream_connect(gpg_pinentry_t)
+	pulseaudio_signull(gpg_pinentry_t)
+')
+
+optional_policy(`
+	xserver_user_x_domain_template(gpg_pinentry, gpg_pinentry_t, gpg_pinentry_tmpfs_t)
+
 ')
+
+#############################
+#
+# gpg web local policy
+#
+
+allow gpg_web_t self:process setrlimit;
+
+can_exec(gpg_web_t, gpg_exec_t)
+
+dev_read_rand(gpg_web_t)
+dev_read_urand(gpg_web_t)
+
+files_read_usr_files(gpg_web_t)
+
+miscfiles_read_localization(gpg_web_t)
+
+apache_dontaudit_rw_tmp_files(gpg_web_t)
+apache_manage_sys_content_rw(gpg_web_t)
+
+tunable_policy(`gpg_web_anon_write',`
+    miscfiles_manage_public_files(gpg_web_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/irc.fc serefpolicy-3.7.19/policy/modules/apps/irc.fc
--- nsaserefpolicy/policy/modules/apps/irc.fc	2011-03-17 07:21:22.933851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/irc.fc	2011-03-17 07:21:05.968851003 +0000
@@ -2,10 +2,17 @@
 # /home
 #
 HOME_DIR/\.ircmotd	--	gen_context(system_u:object_r:irc_home_t,s0)
+HOME_DIR/\.irssi(/.*)?	gen_context(system_u:object_r:irssi_home_t,s0)
+
+#
+# /etc
+#
+/etc/irssi\.conf	--	gen_context(system_u:object_r:irssi_etc_t,s0)
 
 #
 # /usr
 #
 /usr/bin/[st]irc	--	gen_context(system_u:object_r:irc_exec_t,s0)
 /usr/bin/ircII		--	gen_context(system_u:object_r:irc_exec_t,s0)
+/usr/bin/irssi		--	gen_context(system_u:object_r:irssi_exec_t,s0)
 /usr/bin/tinyirc	--	gen_context(system_u:object_r:irc_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/irc.if serefpolicy-3.7.19/policy/modules/apps/irc.if
--- nsaserefpolicy/policy/modules/apps/irc.if	2011-03-17 07:21:23.033851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/irc.if	2011-03-17 07:21:06.338851002 +0000
@@ -18,14 +18,51 @@
 interface(`irc_role',`
 	gen_require(`
 		type irc_t, irc_exec_t;
+		type irssi_t, irssi_exec_t, irssi_home_t;
 	')
 
+	########################################
+	#
+	# Irc shared declarations.
+	#
+
 	role $1 types irc_t;
 
+	########################################
+	#
+	# Irssi shared declarations.
+	#
+
+	role $1 types irssi_t;
+
+	########################################
+	#
+	# Irc shared policy.
+	#
+
 	# Transition from the user domain to the derived domain.
 	domtrans_pattern($2, irc_exec_t, irc_t)
 
 	# allow ps to show irc
 	ps_process_pattern($2, irc_t)
 	allow $2 irc_t:process signal;
+
+	########################################
+	#
+	# Irssi shared policy.
+	#
+
+	domtrans_pattern($2, irssi_exec_t, irssi_t)
+
+	allow $2 irssi_t:process { ptrace signal_perms };
+	ps_process_pattern($2, irssi_t)
+
+	manage_dirs_pattern($2, irssi_home_t, irssi_home_t)
+	manage_files_pattern($2, irssi_home_t, irssi_home_t)
+	manage_lnk_files_pattern($2, irssi_home_t, irssi_home_t)
+
+	relabel_dirs_pattern($2, irssi_home_t, irssi_home_t)
+	relabel_files_pattern($2, irssi_home_t, irssi_home_t)
+	relabel_lnk_files_pattern($2, irssi_home_t, irssi_home_t)
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/irc.te serefpolicy-3.7.19/policy/modules/apps/irc.te
--- nsaserefpolicy/policy/modules/apps/irc.te	2011-03-17 07:21:22.954851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/irc.te	2011-03-17 07:21:06.007851001 +0000
@@ -25,6 +25,30 @@
 
 ########################################
 #
+# Irssi personal declarations.
+#
+
+## <desc>
+## <p>
+## Allow the Irssi IRC Client to connect to any port,
+## and to bind to any unreserved port.
+## </p>
+## </desc>
+gen_tunable(irssi_use_full_network, false)
+
+type irssi_t;
+type irssi_exec_t;
+application_domain(irssi_t, irssi_exec_t)
+ubac_constrained(irssi_t)
+
+type irssi_etc_t;
+files_config_file(irssi_etc_t)
+
+type irssi_home_t;
+userdom_user_home_content(irssi_home_t)
+
+########################################
+#
 # Local policy
 #
 
@@ -102,3 +126,83 @@
 optional_policy(`
 	nis_use_ypbind(irc_t)
 ')
+
+########################################
+#
+# Irssi personal declarations.
+#
+
+allow irssi_t self:process { signal sigkill };
+allow irssi_t self:fifo_file rw_fifo_file_perms;
+allow irssi_t self:netlink_route_socket create_netlink_socket_perms;
+allow irssi_t self:tcp_socket create_stream_socket_perms;
+allow irssi_t self:udp_socket create_socket_perms;
+
+read_files_pattern(irssi_t, irssi_etc_t, irssi_etc_t)
+
+manage_dirs_pattern(irssi_t, irssi_home_t, irssi_home_t)
+manage_files_pattern(irssi_t, irssi_home_t, irssi_home_t)
+manage_lnk_files_pattern(irssi_t, irssi_home_t, irssi_home_t)
+userdom_user_home_dir_filetrans(irssi_t, irssi_home_t, { dir file lnk_file })
+userdom_search_user_home_dirs(irssi_t)
+
+corecmd_search_bin(irssi_t)
+corecmd_read_bin_symlinks(irssi_t)
+
+corenet_tcp_connect_ircd_port(irssi_t)
+corenet_sendrecv_ircd_client_packets(irssi_t)
+
+# Privoxy
+corenet_tcp_connect_http_cache_port(irssi_t)
+corenet_sendrecv_http_cache_client_packets(irssi_t)
+
+corenet_all_recvfrom_netlabel(irssi_t)
+corenet_all_recvfrom_unlabeled(irssi_t)
+corenet_tcp_sendrecv_generic_if(irssi_t)
+corenet_tcp_sendrecv_generic_node(irssi_t)
+corenet_tcp_sendrecv_generic_port(irssi_t)
+corenet_tcp_bind_generic_node(irssi_t)
+corenet_udp_bind_generic_node(irssi_t)
+
+dev_read_urand(irssi_t)
+# irssi-otr genkey.
+dev_read_rand(irssi_t)
+
+files_read_etc_files(irssi_t)
+files_read_usr_files(irssi_t)
+
+fs_search_auto_mountpoints(irssi_t)
+
+miscfiles_read_localization(irssi_t)
+
+sysnet_read_config(irssi_t)
+
+userdom_use_user_terminals(irssi_t)
+
+tunable_policy(`irssi_use_full_network', `
+	corenet_tcp_bind_all_unreserved_ports(irssi_t)
+	corenet_tcp_connect_all_ports(irssi_t)
+	corenet_sendrecv_generic_server_packets(irssi_t)
+	corenet_sendrecv_all_client_packets(irssi_t)
+')
+
+tunable_policy(`use_nfs_home_dirs', `
+	fs_manage_nfs_dirs(irssi_t)
+	fs_manage_nfs_files(irssi_t)
+	fs_manage_nfs_symlinks(irssi_t)
+')
+
+tunable_policy(`use_samba_home_dirs', `
+	fs_manage_cifs_dirs(irssi_t)
+	fs_manage_cifs_files(irssi_t)
+	fs_manage_cifs_symlinks(irssi_t)
+')
+
+optional_policy(`
+	automount_dontaudit_getattr_tmp_dirs(irssi_t)
+')
+
+optional_policy(`
+	nis_use_ypbind(irssi_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/java.fc serefpolicy-3.7.19/policy/modules/apps/java.fc
--- nsaserefpolicy/policy/modules/apps/java.fc	2011-03-17 07:21:23.019851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/java.fc	2012-07-17 11:01:49.925247830 +0000
@@ -9,6 +9,7 @@
 #
 # /usr
 #
+/usr/Aptana[^/]*/AptanaStudio	--	gen_context(system_u:object_r:java_exec_t,s0)
 /usr/(.*/)?bin/java.* 	--	gen_context(system_u:object_r:java_exec_t,s0)
 /usr/bin/fastjar	--	gen_context(system_u:object_r:java_exec_t,s0)
 /usr/bin/frysk		--	gen_context(system_u:object_r:java_exec_t,s0)
@@ -23,12 +24,16 @@
 /usr/bin/octave-[^/]*	--	gen_context(system_u:object_r:java_exec_t,s0)
 
 /usr/lib(.*/)?bin/java[^/]* --	gen_context(system_u:object_r:java_exec_t,s0)
-/usr/lib/eclipse/eclipse --	gen_context(system_u:object_r:java_exec_t,s0)
+/usr/lib(64)?/eclipse/eclipse --	gen_context(system_u:object_r:java_exec_t,s0)
 /usr/lib/jvm/java(.*/)bin(/.*)? -- gen_context(system_u:object_r:java_exec_t,s0)
 /usr/lib/opera(/.*)?/opera --	gen_context(system_u:object_r:java_exec_t,s0)
 /usr/lib/opera(/.*)?/works --	gen_context(system_u:object_r:java_exec_t,s0)
 /usr/lib64/jvm/java(.*/)bin(/.*)? -- gen_context(system_u:object_r:java_exec_t,s0)
 
 /usr/local/matlab.*/bin.*/MATLAB.* -- gen_context(system_u:object_r:java_exec_t,s0)
-
 /usr/matlab.*/bin.*/MATLAB.* -- gen_context(system_u:object_r:java_exec_t,s0)
+
+/opt/ibm/lotus/Symphony/framework/rcp/eclipse/plugins(/.*)?	--	gen_context(system_u:object_r:java_exec_t,s0)
+
+/usr/java/eclipse[^/]*/eclipse	--	gen_context(system_u:object_r:java_exec_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/java.if serefpolicy-3.7.19/policy/modules/apps/java.if
--- nsaserefpolicy/policy/modules/apps/java.if	2011-03-17 07:21:23.050851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/java.if	2011-10-18 12:09:57.208042081 +0000
@@ -72,6 +72,7 @@
 
 	domain_interactive_fd($1_java_t)
 
+	userdom_unpriv_usertype($1, $1_java_t)
 	userdom_manage_tmpfs_role($2, $1_java_t)
 
 	allow $1_java_t self:process { ptrace signal getsched execmem execstack };
@@ -82,7 +83,7 @@
 
 	domtrans_pattern($3, java_exec_t, $1_java_t)
 
-	corecmd_bin_domtrans($1_java_t, $3)
+	corecmd_bin_domtrans($1_java_t, $1_t)
 
 	dev_dontaudit_append_rand($1_java_t)
 
@@ -179,6 +180,26 @@
 
 	java_domtrans_unconfined($1)
 	role $2 types unconfined_java_t;
+	nsplugin_role_notrans($2, unconfined_java_t)
+')
+
+
+########################################
+## <summary>
+##	Allow read and write access to unconfined java shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`java_rw_shared_mem_unconfined',`
+	gen_require(`
+		type unconfined_java_t;
+	')
+
+	allow $1 unconfined_java_t:shm { unix_read unix_write create_shm_perms };
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/java.te serefpolicy-3.7.19/policy/modules/apps/java.te
--- nsaserefpolicy/policy/modules/apps/java.te	2011-03-17 07:21:23.036851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/java.te	2011-08-02 10:21:21.420523005 +0000
@@ -33,9 +33,6 @@
 typealias java_tmpfs_t alias { staff_javaplugin_tmpfs_t user_javaplugin_tmpfs_t sysadm_javaplugin_tmpfs_t };
 typealias java_tmpfs_t alias { auditadm_tmpfs_javaplugin_t secadm_tmpfs_javaplugin_t };
 
-type unconfined_java_t;
-init_system_domain(unconfined_java_t, java_exec_t)
-
 ########################################
 #
 # Local policy
@@ -141,12 +138,27 @@
 # Unconfined java local policy
 #
 
-optional_policy(`
+ifndef(`enable_mls',`
+
+    type unconfined_java_t;
+    init_system_domain(unconfined_java_t, java_exec_t)
+
+	optional_policy(`
 	# execheap is needed for itanium/BEA jrocket
-	allow unconfined_java_t self:process { execstack execmem execheap };
+		allow unconfined_java_t self:process { execstack execmem execheap };
+
+		init_dbus_chat_script(unconfined_java_t)
+
+		files_execmod_all_files(unconfined_java_t)
+
+		init_dbus_chat_script(unconfined_java_t)
 
-	init_dbus_chat_script(unconfined_java_t)
+		unconfined_domain_noaudit(unconfined_java_t)
+		unconfined_dbus_chat(unconfined_java_t)
+		userdom_unpriv_usertype(unconfined, unconfined_java_t)
 
-	unconfined_domain_noaudit(unconfined_java_t)
-	unconfined_dbus_chat(unconfined_java_t)
+		optional_policy(`
+			rpm_domtrans(unconfined_java_t)
+		')
+	')
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/kdumpgui.fc serefpolicy-3.7.19/policy/modules/apps/kdumpgui.fc
--- nsaserefpolicy/policy/modules/apps/kdumpgui.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/kdumpgui.fc	2011-03-17 07:21:06.467851000 +0000
@@ -0,0 +1,2 @@
+
+/usr/share/system-config-kdump/system-config-kdump-backend.py -- gen_context(system_u:object_r:kdumpgui_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/kdumpgui.if serefpolicy-3.7.19/policy/modules/apps/kdumpgui.if
--- nsaserefpolicy/policy/modules/apps/kdumpgui.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/kdumpgui.if	2011-03-17 07:21:06.332851003 +0000
@@ -0,0 +1,2 @@
+## <summary>system-config-kdump policy</summary>
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/kdumpgui.te serefpolicy-3.7.19/policy/modules/apps/kdumpgui.te
--- nsaserefpolicy/policy/modules/apps/kdumpgui.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/kdumpgui.te	2011-11-21 10:42:02.879168100 +0000
@@ -0,0 +1,83 @@
+policy_module(kdumpgui,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type kdumpgui_t;
+type kdumpgui_exec_t;
+dbus_system_domain(kdumpgui_t, kdumpgui_exec_t)
+
+type kdumpgui_tmp_t;
+files_tmp_file(kdumpgui_tmp_t)
+
+######################################
+#
+# system-config-kdump local policy
+#
+
+allow kdumpgui_t self:capability { sys_admin net_admin sys_rawio };
+
+allow kdumpgui_t self:fifo_file rw_fifo_file_perms;
+allow kdumpgui_t self:netlink_kobject_uevent_socket create_socket_perms;
+
+manage_dirs_pattern(kdumpgui_t, kdumpgui_tmp_t, kdumpgui_tmp_t)
+manage_files_pattern(kdumpgui_t, kdumpgui_tmp_t, kdumpgui_tmp_t)
+files_tmp_filetrans(kdumpgui_t, kdumpgui_tmp_t, { dir file })
+
+kdump_manage_config(kdumpgui_t)
+kdump_initrc_domtrans(kdumpgui_t)
+
+corecmd_exec_bin(kdumpgui_t)
+corecmd_exec_shell(kdumpgui_t)
+consoletype_exec(kdumpgui_t)
+
+kernel_read_debugfs(kdumpgui_t)   
+kernel_read_system_state(kdumpgui_t)
+kernel_read_network_state(kdumpgui_t)
+
+storage_raw_read_fixed_disk(kdumpgui_t)
+storage_raw_write_fixed_disk(kdumpgui_t)
+
+dev_dontaudit_getattr_all_chr_files(kdumpgui_t)
+dev_read_sysfs(kdumpgui_t)
+
+# for blkid.tab
+files_manage_etc_runtime_files(kdumpgui_t)
+files_etc_filetrans_etc_runtime(kdumpgui_t, file)
+
+files_manage_boot_files(kdumpgui_t)
+files_manage_boot_symlinks(kdumpgui_t)
+# Needed for running chkconfig
+files_manage_etc_symlinks(kdumpgui_t)
+
+fs_read_dos_files(kdumpgui_t)
+
+auth_use_nsswitch(kdumpgui_t)
+
+logging_send_syslog_msg(kdumpgui_t)
+
+miscfiles_read_localization(kdumpgui_t)
+
+mount_exec(kdumpgui_t)
+
+init_dontaudit_read_all_script_files(kdumpgui_t)
+
+userdom_dontaudit_search_admin_dir(kdumpgui_t)
+
+optional_policy(`
+	bootloader_exec(kdumpgui_t)
+')
+
+optional_policy(`
+	dev_rw_lvm_control(kdumpgui_t)
+')
+
+optional_policy(`
+	gnome_dontaudit_search_config(kdumpgui_t)
+')
+
+optional_policy(`
+	policykit_dbus_chat(kdumpgui_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/livecd.fc serefpolicy-3.7.19/policy/modules/apps/livecd.fc
--- nsaserefpolicy/policy/modules/apps/livecd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/livecd.fc	2011-03-17 07:21:06.175851000 +0000
@@ -0,0 +1,2 @@
+
+/usr/bin/livecd-creator	--	gen_context(system_u:object_r:livecd_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/livecd.if serefpolicy-3.7.19/policy/modules/apps/livecd.if
--- nsaserefpolicy/policy/modules/apps/livecd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/livecd.if	2011-03-17 07:21:06.335851002 +0000
@@ -0,0 +1,127 @@
+
+## <summary>policy for livecd</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run livecd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`livecd_domtrans',`
+	gen_require(`
+		type livecd_t;
+                type livecd_exec_t;
+	')
+
+	domtrans_pattern($1, livecd_exec_t, livecd_t)
+')
+
+########################################
+## <summary>
+##	Execute livecd in the livecd domain, and
+##	allow the specified role the livecd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the livecd domain.
+##	</summary>
+## </param>
+#
+interface(`livecd_run',`
+	gen_require(`
+		type livecd_t;
+	')
+
+	livecd_domtrans($1)
+	role $2 types livecd_t;
+	
+	seutil_run_setfiles_mac(livecd_t, $2)
+
+	optional_policy(`
+		mount_run(livecd_t, $2)
+	')
+')
+
+########################################
+## <summary>
+##	Dontaudit read/write to a livecd leaks
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`livecd_dontaudit_leaks',`
+	gen_require(`
+		type livecd_t;
+	')
+
+	dontaudit $1 livecd_t:unix_dgram_socket { read write };
+')
+
+########################################
+## <summary>
+##	Read livecd temporary files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`livecd_read_tmp_files',`
+	gen_require(`
+		type livecd_tmp_t;
+	')
+
+	files_search_tmp($1)
+	read_files_pattern($1, livecd_tmp_t, livecd_tmp_t)
+')
+
+########################################
+## <summary>
+##	Read and write livecd temporary files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`livecd_rw_tmp_files',`
+	gen_require(`
+		type livecd_tmp_t;
+	')
+
+	files_search_tmp($1)
+	allow $1 livecd_tmp_t:file rw_file_perms;
+')
+
+########################################
+## <summary>
+##	Allow read and write access to livecd semaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`livecd_rw_semaphores',`
+	gen_require(`
+		type livecd_t;
+	')
+
+	allow $1 livecd_t:sem { unix_read unix_write associate read write };
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/livecd.te serefpolicy-3.7.19/policy/modules/apps/livecd.te
--- nsaserefpolicy/policy/modules/apps/livecd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/livecd.te	2011-03-17 07:21:06.346851001 +0000
@@ -0,0 +1,34 @@
+policy_module(livecd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type livecd_t;
+type livecd_exec_t;
+application_domain(livecd_t, livecd_exec_t)
+role system_r types livecd_t;
+
+type livecd_tmp_t;
+files_tmp_file(livecd_tmp_t)
+
+########################################
+#
+# livecd local policy
+#
+dontaudit livecd_t self:capability2 mac_admin;
+
+unconfined_domain_noaudit(livecd_t)
+domain_ptrace_all_domains(livecd_t)
+
+manage_dirs_pattern(livecd_t, livecd_tmp_t, livecd_tmp_t)
+manage_files_pattern(livecd_t, livecd_tmp_t, livecd_tmp_t)
+files_tmp_filetrans(livecd_t, livecd_tmp_t, { dir file })
+
+optional_policy(`
+	hal_dbus_chat(livecd_t)
+')
+
+seutil_domtrans_setfiles_mac(livecd_t)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/loadkeys.if serefpolicy-3.7.19/policy/modules/apps/loadkeys.if
--- nsaserefpolicy/policy/modules/apps/loadkeys.if	2011-03-17 07:21:23.022851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/loadkeys.if	2011-03-17 07:21:06.112851001 +0000
@@ -17,6 +17,9 @@
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, loadkeys_exec_t, loadkeys_t)
+ifdef(`hide_broken_symptoms', `
+	dontaudit loadkeys_t $1:socket_class_set { read write };
+')
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/loadkeys.te serefpolicy-3.7.19/policy/modules/apps/loadkeys.te
--- nsaserefpolicy/policy/modules/apps/loadkeys.te	2011-03-17 07:21:23.022851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/loadkeys.te	2011-03-17 07:21:06.118851001 +0000
@@ -40,8 +40,12 @@
 miscfiles_read_localization(loadkeys_t)
 
 userdom_use_user_ttys(loadkeys_t)
-userdom_list_user_home_dirs(loadkeys_t)
+userdom_list_user_home_content(loadkeys_t)
 
 optional_policy(`
 	nscd_dontaudit_search_pid(loadkeys_t)
 ')
+
+ifdef(`hide_broken_symptoms',`
+	dev_dontaudit_rw_lvm_control(loadkeys_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/mediawiki.fc serefpolicy-3.7.19/policy/modules/apps/mediawiki.fc
--- nsaserefpolicy/policy/modules/apps/mediawiki.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/mediawiki.fc	2011-03-17 07:21:05.935851003 +0000
@@ -0,0 +1,10 @@
+
+/usr/lib(64)?/mediawiki/math/texvc	--	gen_context(system_u:object_r:httpd_mediawiki_script_exec_t,s0)	
+/usr/lib(64)?/mediawiki/math/texvc_tex --      gen_context(system_u:object_r:httpd_mediawiki_script_exec_t,s0)
+/usr/lib(64)?/mediawiki/math/texvc_tes --      gen_context(system_u:object_r:httpd_mediawiki_script_exec_t,s0)
+
+/var/www/wiki(/.*)?		  gen_context(system_u:object_r:httpd_mediawiki_rw_content_t,s0)
+
+/var/www/wiki/.*\.php    --           gen_context(system_u:object_r:httpd_mediawiki_content_t,s0)
+
+/usr/share/mediawiki(/.*)?	  gen_context(system_u:object_r:httpd_mediawiki_content_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/mediawiki.if serefpolicy-3.7.19/policy/modules/apps/mediawiki.if
--- nsaserefpolicy/policy/modules/apps/mediawiki.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/mediawiki.if	2011-03-17 07:21:06.400851003 +0000
@@ -0,0 +1,40 @@
+## <summary>Mediawiki policy</summary>
+
+#######################################
+## <summary>
+##      Allow the specified domain to read
+##      mediawiki tmp files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`mediawiki_read_tmp_files',`
+        gen_require(`
+                type httpd_mediawiki_tmp_t;
+        ')
+
+        files_search_tmp($1)
+        read_files_pattern($1, httpd_mediawiki_tmp_t, httpd_mediawiki_tmp_t)
+		read_lnk_files_pattern($1, httpd_mediawiki_tmp_t, httpd_mediawiki_tmp_t)
+')
+
+#######################################
+## <summary>
+##      Delete mediawiki tmp files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`mediawiki_delete_tmp_files',`
+        gen_require(`
+                type httpd_mediawiki_tmp_t;
+        ')
+
+        delete_files_pattern($1, httpd_mediawiki_tmp_t, httpd_mediawiki_tmp_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/mediawiki.te serefpolicy-3.7.19/policy/modules/apps/mediawiki.te
--- nsaserefpolicy/policy/modules/apps/mediawiki.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/mediawiki.te	2011-08-30 14:22:07.371160002 +0000
@@ -0,0 +1,33 @@
+
+policy_module(mediawiki, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+apache_content_template(mediawiki)
+
+type httpd_mediawiki_tmp_t;
+files_tmp_file(httpd_mediawiki_tmp_t)
+
+########################################
+#
+# mediawiki local policy
+#
+
+manage_dirs_pattern(httpd_mediawiki_script_t, httpd_mediawiki_tmp_t, httpd_mediawiki_tmp_t)
+manage_files_pattern(httpd_mediawiki_script_t, httpd_mediawiki_tmp_t, httpd_mediawiki_tmp_t)
+manage_lnk_files_pattern(httpd_mediawiki_script_t, httpd_mediawiki_tmp_t, httpd_mediawiki_tmp_t)
+files_tmp_filetrans(httpd_mediawiki_script_t, httpd_mediawiki_tmp_t, { file dir lnk_file })
+
+files_search_var_lib(httpd_mediawiki_script_t)
+
+userdom_read_user_tmp_files(httpd_mediawiki_script_t)
+
+miscfiles_read_tetex_data(httpd_mediawiki_script_t)
+
+optional_policy(`
+	apache_dontaudit_rw_tmp_files(httpd_mediawiki_script_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/mono.if serefpolicy-3.7.19/policy/modules/apps/mono.if
--- nsaserefpolicy/policy/modules/apps/mono.if	2011-03-17 07:21:22.984851001 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/mono.if	2011-03-17 07:21:06.074851001 +0000
@@ -40,16 +40,19 @@
 	domain_interactive_fd($1_mono_t)
 	application_type($1_mono_t)
 
+	userdom_unpriv_usertype($1, $1_mono_t)
 	userdom_manage_tmpfs_role($2, $1_mono_t)
 
 	allow $1_mono_t self:process { ptrace signal getsched execheap execmem execstack };
-
 	allow $3 $1_mono_t:process { getattr ptrace noatsecure signal_perms };
 
 	domtrans_pattern($3, mono_exec_t, $1_mono_t)
 
 	fs_dontaudit_rw_tmpfs_files($1_mono_t)
 	corecmd_bin_domtrans($1_mono_t, $1_t)
+ifdef(`hide_broken_symptoms', `
+	dontaudit $1_t $1_mono_t:socket_class_set { read write };
+')
 
 	optional_policy(`
 		xserver_role($1_r, $1_mono_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/mozilla.fc serefpolicy-3.7.19/policy/modules/apps/mozilla.fc
--- nsaserefpolicy/policy/modules/apps/mozilla.fc	2011-03-17 07:21:23.039851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/mozilla.fc	2012-05-17 14:48:20.587581399 +0000
@@ -1,6 +1,7 @@
 HOME_DIR/\.galeon(/.*)?			gen_context(system_u:object_r:mozilla_home_t,s0)
 HOME_DIR/\.java(/.*)?			gen_context(system_u:object_r:mozilla_home_t,s0)
 HOME_DIR/\.mozilla(/.*)?		gen_context(system_u:object_r:mozilla_home_t,s0)
+HOME_DIR/\.thunderbird(/.*)?		gen_context(system_u:object_r:mozilla_home_t,s0)
 HOME_DIR/\.netscape(/.*)?		gen_context(system_u:object_r:mozilla_home_t,s0)
 HOME_DIR/\.phoenix(/.*)?		gen_context(system_u:object_r:mozilla_home_t,s0)
 
@@ -11,6 +12,7 @@
 /usr/bin/mozilla		--	gen_context(system_u:object_r:mozilla_exec_t,s0)
 /usr/bin/mozilla-snapshot	--	gen_context(system_u:object_r:mozilla_exec_t,s0)
 /usr/bin/epiphany-bin		--	gen_context(system_u:object_r:mozilla_exec_t,s0)
+/usr/bin/epiphany		--	gen_context(system_u:object_r:mozilla_exec_t,s0)
 /usr/bin/mozilla-[0-9].*	--	gen_context(system_u:object_r:mozilla_exec_t,s0)
 /usr/bin/mozilla-bin-[0-9].*	--	gen_context(system_u:object_r:mozilla_exec_t,s0)
 
@@ -26,3 +28,4 @@
 /usr/lib(64)?/[^/]*firefox[^/]*/firefox-bin -- gen_context(system_u:object_r:mozilla_exec_t,s0)
 /usr/lib/[^/]*firefox[^/]*/firefox --	gen_context(system_u:object_r:mozilla_exec_t,s0)
 /usr/lib64/[^/]*firefox[^/]*/firefox -- gen_context(system_u:object_r:mozilla_exec_t,s0)
+/usr/lib(64)?/xulrunner[^/]*/plugin-container        --  gen_context(system_u:object_r:mozilla_plugin_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/mozilla.if serefpolicy-3.7.19/policy/modules/apps/mozilla.if
--- nsaserefpolicy/policy/modules/apps/mozilla.if	2011-03-17 07:21:23.053851001 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/mozilla.if	2012-01-26 09:44:38.949098794 +0000
@@ -45,9 +45,16 @@
 	relabel_dirs_pattern($2, mozilla_home_t, mozilla_home_t)
 	relabel_files_pattern($2, mozilla_home_t, mozilla_home_t)
 	relabel_lnk_files_pattern($2, mozilla_home_t, mozilla_home_t)
-
+	
+	mozilla_run_plugin(mozilla_t, $1)
 	mozilla_dbus_chat($2)
 
+	userdom_manage_tmp_role($1, mozilla_t)
+
+	optional_policy(`
+		nsplugin_role($1, mozilla_t)
+	')
+
 	optional_policy(`
 		pulseaudio_role($1, mozilla_t)
 	')
@@ -108,7 +115,7 @@
 		type mozilla_home_t;
 	')
 
-	dontaudit $1 mozilla_home_t:file rw_file_perms;
+	dontaudit $1 mozilla_home_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -171,7 +178,7 @@
 
 ########################################
 ## <summary>
-##	read/write mozilla per user tcp_socket
+##	Write mozilla home directory content
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -179,10 +186,210 @@
 ##	</summary>
 ## </param>
 #
-interface(`mozilla_rw_tcp_sockets',`
+interface(`mozilla_execmod_user_home_files',`
 	gen_require(`
-		type mozilla_t;
+		type mozilla_home_t;
 	')
 
-	allow $1 mozilla_t:tcp_socket rw_socket_perms;
+	allow $1 mozilla_home_t:file execmod;
+')
+
+########################################
+## <summary>
+##	Execute mozilla_exec_t 
+##	in the specified domain.
+## </summary>
+## <desc>
+##	<p>
+##	Execute a mozilla_exec_t
+##	in the specified domain.  
+##	</p>
+##	<p>
+##	No interprocess communication (signals, pipes,
+##	etc.) is provided by this interface since
+##	the domains are not owned by this module.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="target_domain">
+##	<summary>
+##	The type of the new process.
+##	</summary>
+## </param>
+#
+interface(`mozilla_exec_domtrans',`
+	gen_require(`
+		type mozilla_exec_t;
+	')
+
+	allow $2 mozilla_exec_t:file entrypoint;
+	domtrans_pattern($1, mozilla_exec_t, $2)
+')
+
+#######################################
+## <summary>
+##  Execute a domain transition to run mozilla_plugin.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`mozilla_domtrans_plugin',`
+    gen_require(`
+        type mozilla_plugin_t, mozilla_plugin_exec_t;
+        class dbus send_msg;
+    ')
+
+    domtrans_pattern($1, mozilla_plugin_exec_t, mozilla_plugin_t)
+    allow mozilla_plugin_t $1:process signull;
+    allow $1 mozilla_plugin_t:unix_stream_socket { connectto rw_socket_perms };
+    allow $1 mozilla_plugin_t:fd use;
+
+    allow mozilla_plugin_t $1:unix_stream_socket rw_socket_perms;
+    allow mozilla_plugin_t $1:shm { rw_shm_perms destroy };
+    allow mozilla_plugin_t $1:sem create_sem_perms;
+
+    ps_process_pattern($1, mozilla_plugin_t)
+    allow $1 mozilla_plugin_t:process { ptrace signal_perms };
+')
+
+#######################################
+## <summary>
+##  Execute mozilla_plugin in the mozilla_plugin domain, and
+##  allow the specified role the mozilla_plugin domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+## <param name="role">
+##  <summary>
+##  The role to be allowed the mozilla_plugin domain.
+##  </summary>
+## </param>
+#
+interface(`mozilla_run_plugin',`
+    gen_require(`
+        type mozilla_plugin_t;
+    ')
+
+    mozilla_domtrans_plugin($1)
+    role $2 types mozilla_plugin_t;
+')
+
+######################################
+## <summary>
+##  Execute qemu unconfined programs in the role.
+## </summary>
+## <param name="role">
+##  <summary>
+##  The role to allow the mozilla_plugin domain.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`mozilla_role_plugin',`
+    gen_require(`
+        type mozilla_plugin_t;
+    ')
+
+    role $1 types mozilla_plugin_t;
+')
+
+#######################################
+## <summary>
+##  read/write mozilla per user tcp_socket
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`mozilla_rw_tcp_sockets',`
+    gen_require(`
+        type mozilla_t;
+    ')
+
+    allow $1 mozilla_t:tcp_socket rw_socket_perms;
+')
+
+######################################
+## <summary>
+##  Read mozilla_plugin tmpfs files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+#
+interface(`mozilla_plugin_read_tmpfs_files',`
+    gen_require(`
+        type mozilla_plugin_tmpfs_t;
+    ')
+
+    allow $1 mozilla_plugin_tmpfs_t:file read_file_perms;
 ')
+
+#######################################
+## <summary>
+##  Delete mozilla_plugin tmpfs files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+#
+interface(`mozilla_plugin_delete_tmpfs_files',`
+    gen_require(`
+        type mozilla_plugin_tmpfs_t;
+    ')
+
+    allow $1 mozilla_plugin_tmpfs_t:file delete_file_perms;
+')
+
+#######################################
+## <summary>
+##  Dontaudit read/write to a mozilla_plugin leaks
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`mozilla_plugin_dontaudit_leaks',`
+    gen_require(`
+        type mozilla_plugin_t;
+    ')
+
+    dontaudit $1 mozilla_plugin_t:unix_stream_socket { read write };
+')
+
+#######################################
+## <summary>
+##  Execute mozilla home directory content.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`mozilla_exec_user_home_files',`
+    gen_require(`
+        type mozilla_home_t;
+    ')
+
+    can_exec($1, mozilla_home_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/mozilla.te serefpolicy-3.7.19/policy/modules/apps/mozilla.te
--- nsaserefpolicy/policy/modules/apps/mozilla.te	2011-03-17 07:21:23.042851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/mozilla.te	2012-01-26 09:48:23.226821642 +0000
@@ -35,6 +35,28 @@
 files_tmpfs_file(mozilla_tmpfs_t)
 ubac_constrained(mozilla_tmpfs_t)
 
+type mozilla_plugin_t;
+type mozilla_plugin_exec_t;
+application_domain(mozilla_plugin_t, mozilla_plugin_exec_t)
+role system_r types mozilla_plugin_t;
+
+type mozilla_plugin_tmp_t;
+userdom_user_tmp_content(mozilla_plugin_tmp_t)
+files_tmp_file(mozilla_plugin_tmp_t)
+ubac_constrained(mozilla_plugin_tmp_t)
+
+type mozilla_plugin_tmpfs_t;
+userdom_user_tmpfs_content(mozilla_plugin_tmpfs_t)
+files_tmpfs_file(mozilla_plugin_tmpfs_t)
+ubac_constrained(mozilla_plugin_tmpfs_t)
+
+type mozilla_plugin_rw_t;
+files_type(mozilla_plugin_rw_t)
+
+type mozilla_plugin_config_t;
+type mozilla_plugin_config_exec_t;
+application_domain(mozilla_plugin_config_t, mozilla_plugin_config_exec_t)
+
 ########################################
 #
 # Local policy
@@ -91,6 +113,7 @@
 corenet_raw_sendrecv_generic_node(mozilla_t)
 corenet_tcp_sendrecv_http_port(mozilla_t)
 corenet_tcp_sendrecv_http_cache_port(mozilla_t)
+corenet_tcp_connect_flash_port(mozilla_t)
 corenet_tcp_sendrecv_ftp_port(mozilla_t)
 corenet_tcp_sendrecv_ipp_port(mozilla_t)
 corenet_tcp_connect_http_port(mozilla_t)
@@ -133,21 +156,18 @@
 fs_rw_tmpfs_files(mozilla_t)
 
 term_dontaudit_getattr_pty_dirs(mozilla_t)
+term_use_all_ttys(mozilla_t)
 
 logging_send_syslog_msg(mozilla_t)
 
+miscfiles_dontaudit_setattr_fonts_dirs(mozilla_t)
 miscfiles_read_fonts(mozilla_t)
 miscfiles_read_localization(mozilla_t)
 
 # Browse the web, connect to printer
 sysnet_dns_name_resolve(mozilla_t)
 
-userdom_manage_user_home_content_dirs(mozilla_t)
-userdom_manage_user_home_content_files(mozilla_t)
-userdom_manage_user_home_content_symlinks(mozilla_t)
-userdom_manage_user_tmp_dirs(mozilla_t)
-userdom_manage_user_tmp_files(mozilla_t)
-userdom_manage_user_tmp_sockets(mozilla_t)
+userdom_use_user_ptys(mozilla_t)
 
 xserver_user_x_domain_template(mozilla, mozilla_t, mozilla_tmpfs_t)
 xserver_dontaudit_read_xdm_tmp_files(mozilla_t)
@@ -244,6 +264,13 @@
 optional_policy(`
 	gnome_stream_connect_gconf(mozilla_t)
 	gnome_manage_config(mozilla_t)
+	gnome_manage_gconf_home_files(mozilla_t)
+')
+
+optional_policy(`
+	pulseaudio_exec(mozilla_t)
+	pulseaudio_stream_connect(mozilla_t)
+	pulseaudio_manage_home_files(mozilla_t)
 ')
 
 optional_policy(`
@@ -264,5 +291,260 @@
 ')
 
 optional_policy(`
+	nsplugin_manage_rw(mozilla_t)
+	nsplugin_manage_home_files(mozilla_t)
+')
+
+optional_policy(`
 	thunderbird_domtrans(mozilla_t)
 ')
+
+#######################################
+#
+# mozilla_plugin local policy
+#
+
+dontaudit mozilla_plugin_t self:capability sys_nice;
+
+allow mozilla_plugin_t self:process { setsched signal_perms execmem };
+allow mozilla_plugin_t self:netlink_route_socket r_netlink_socket_perms;
+allow mozilla_plugin_t self:tcp_socket create_stream_socket_perms;
+allow mozilla_plugin_t self:udp_socket create_socket_perms;
+allow mozilla_plugin_t self:netlink_kobject_uevent_socket create_socket_perms;
+
+allow mozilla_plugin_t self:sem create_sem_perms;
+allow mozilla_plugin_t self:shm create_shm_perms;
+allow mozilla_plugin_t self:fifo_file manage_fifo_file_perms;
+allow mozilla_plugin_t self:unix_dgram_socket sendto;
+allow mozilla_plugin_t self:unix_stream_socket { connectto create_stream_socket_perms };
+
+can_exec(mozilla_plugin_t, mozilla_home_t)
+manage_dirs_pattern(mozilla_plugin_t, mozilla_home_t, mozilla_home_t)
+manage_files_pattern(mozilla_plugin_t, mozilla_home_t, mozilla_home_t)
+manage_lnk_files_pattern(mozilla_plugin_t, mozilla_home_t, mozilla_home_t)
+
+manage_dirs_pattern(mozilla_plugin_t, mozilla_plugin_tmp_t, mozilla_plugin_tmp_t)
+manage_files_pattern(mozilla_plugin_t, mozilla_plugin_tmp_t, mozilla_plugin_tmp_t)
+manage_fifo_files_pattern(mozilla_plugin_t, mozilla_plugin_tmp_t, mozilla_plugin_tmp_t)
+manage_sock_files_pattern(mozilla_plugin_t, mozilla_plugin_tmp_t, mozilla_plugin_tmp_t)
+files_tmp_filetrans(mozilla_plugin_t, mozilla_plugin_tmp_t, { dir file fifo_file sock_file })
+userdom_user_tmp_filetrans(mozilla_plugin_t, mozilla_plugin_tmp_t, { dir file fifo_file sock_file })
+can_exec(mozilla_plugin_t, mozilla_plugin_tmp_t)
+
+manage_files_pattern(mozilla_plugin_t, mozilla_plugin_tmpfs_t, mozilla_plugin_tmpfs_t)
+manage_lnk_files_pattern(mozilla_plugin_t, mozilla_plugin_tmpfs_t, mozilla_plugin_tmpfs_t)
+manage_fifo_files_pattern(mozilla_plugin_t, mozilla_plugin_tmpfs_t, mozilla_plugin_tmpfs_t)
+manage_sock_files_pattern(mozilla_plugin_t, mozilla_plugin_tmpfs_t, mozilla_plugin_tmpfs_t)
+fs_tmpfs_filetrans(mozilla_plugin_t, mozilla_plugin_tmpfs_t, { file lnk_file sock_file fifo_file })
+
+allow mozilla_plugin_t mozilla_plugin_rw_t:dir list_dir_perms;
+read_lnk_files_pattern(mozilla_plugin_t, mozilla_plugin_rw_t, mozilla_plugin_rw_t)
+read_files_pattern(mozilla_plugin_t, mozilla_plugin_rw_t, mozilla_plugin_rw_t)
+
+can_exec(mozilla_plugin_t, mozilla_exec_t)
+
+kernel_read_kernel_sysctls(mozilla_plugin_t)
+kernel_read_system_state(mozilla_plugin_t)
+kernel_read_network_state(mozilla_plugin_t)
+kernel_request_load_module(mozilla_plugin_t)
+
+corecmd_exec_bin(mozilla_plugin_t)
+corecmd_exec_shell(mozilla_plugin_t)
+
+corenet_tcp_connect_generic_port(mozilla_plugin_t)
+corenet_tcp_connect_flash_port(mozilla_plugin_t)
+corenet_tcp_connect_streaming_port(mozilla_plugin_t)
+corenet_tcp_connect_pulseaudio_port(mozilla_plugin_t)
+corenet_tcp_connect_http_port(mozilla_plugin_t)
+corenet_tcp_connect_http_cache_port(mozilla_plugin_t)
+corenet_tcp_connect_squid_port(mozilla_plugin_t)
+corenet_tcp_connect_ipp_port(mozilla_plugin_t)
+corenet_tcp_connect_mmcc_port(mozilla_plugin_t)
+corenet_tcp_connect_speech_port(mozilla_plugin_t)
+corenet_tcp_connect_streaming_port(mozilla_plugin_t)
+corenet_tcp_connect_ftp_port(mozilla_plugin_t)
+#corenet_tcp_connect_all_ephemeral_ports(mozilla_plugin_t)
+corenet_tcp_bind_generic_node(mozilla_plugin_t)
+corenet_udp_bind_generic_node(mozilla_plugin_t)
+
+dev_read_rand(mozilla_plugin_t)
+dev_read_urand(mozilla_plugin_t)
+dev_read_video_dev(mozilla_plugin_t)
+dev_write_video_dev(mozilla_plugin_t)
+dev_read_sysfs(mozilla_plugin_t)
+dev_read_sound(mozilla_plugin_t)
+dev_write_sound(mozilla_plugin_t)
+# for nvidia driver
+dev_rw_xserver_misc(mozilla_plugin_t)
+dev_dontaudit_rw_dri(mozilla_plugin_t)
+
+domain_use_interactive_fds(mozilla_plugin_t)
+domain_dontaudit_read_all_domains_state(mozilla_plugin_t)
+
+files_read_config_files(mozilla_plugin_t)
+files_read_usr_files(mozilla_plugin_t)
+files_list_mnt(mozilla_plugin_t)
+
+fs_getattr_all_fs(mozilla_plugin_t)
+fs_list_dos(mozilla_plugin_t)
+fs_read_dos_files(mozilla_plugin_t)
+
+application_dontaudit_signull(mozilla_plugin_t)
+
+auth_use_nsswitch(mozilla_plugin_t)
+
+logging_send_syslog_msg(mozilla_plugin_t)
+
+miscfiles_read_localization(mozilla_plugin_t)
+miscfiles_read_fonts(mozilla_plugin_t)
+#miscfiles_read_generic_certs(mozilla_plugin_t)
+miscfiles_dontaudit_setattr_fonts_dirs(mozilla_plugin_t)
+miscfiles_dontaudit_setattr_fonts_cache_dirs(mozilla_plugin_t)
+
+sysnet_dns_name_resolve(mozilla_plugin_t)
+
+term_getattr_all_ttys(mozilla_plugin_t)
+term_getattr_all_ptys(mozilla_plugin_t)
+
+userdom_rw_user_tmpfs_files(mozilla_plugin_t)
+userdom_delete_user_tmpfs_files(mozilla_plugin_t)
+userdom_dontaudit_use_user_terminals(mozilla_plugin_t)
+userdom_manage_user_tmp_sockets(mozilla_plugin_t)
+userdom_manage_user_tmp_dirs(mozilla_plugin_t)
+userdom_read_user_tmp_files(mozilla_plugin_t)
+userdom_read_user_tmp_symlinks(mozilla_plugin_t)
+userdom_stream_connect(mozilla_plugin_t)
+userdom_dontaudit_rw_user_tmp_pipes(mozilla_plugin_t)
+
+userdom_read_user_home_content_files(mozilla_plugin_t)
+userdom_read_user_home_content_symlinks(mozilla_plugin_t)
+userdom_read_home_certs(mozilla_plugin_t)
+userdom_dontaudit_write_home_certs(mozilla_plugin_t)
+userdom_read_home_audio_files(mozilla_plugin_t)
+
+optional_policy(`
+    alsa_read_rw_config(mozilla_plugin_t)
+')
+
+optional_policy(`
+    dbus_system_bus_client(mozilla_plugin_t)
+    dbus_session_bus_client(mozilla_plugin_t)
+    dbus_read_lib_files(mozilla_plugin_t)
+')
+
+optional_policy(`
+    git_dontaudit_read_session_content_files(mozilla_plugin_t)
+')
+
+optional_policy(`
+    gnome_manage_config(mozilla_plugin_t)
+')
+
+optional_policy(`
+    java_exec(mozilla_plugin_t)
+')
+
+optional_policy(`
+    mplayer_exec(mozilla_plugin_t)
+    mplayer_read_user_home_files(mozilla_plugin_t)
+')
+
+optional_policy(`
+    nsplugin_domtrans(mozilla_plugin_t)
+    nsplugin_rw_exec(mozilla_plugin_t)
+    nsplugin_manage_home_dirs(mozilla_plugin_t)
+    nsplugin_manage_home_files(mozilla_plugin_t)
+    nsplugin_user_home_dir_filetrans(mozilla_plugin_t, dir)
+    nsplugin_user_home_filetrans(mozilla_plugin_t, file)
+    nsplugin_read_rw_files(mozilla_plugin_t);
+    nsplugin_signal(mozilla_plugin_t)
+')
+
+optional_policy(`
+    pulseaudio_exec(mozilla_plugin_t)
+    pulseaudio_stream_connect(mozilla_plugin_t)
+    pulseaudio_setattr_home_dir(mozilla_plugin_t)
+    pulseaudio_manage_home_files(mozilla_plugin_t)
+    pulseaudio_manage_home_symlinks(mozilla_plugin_t)
+')
+
+optional_policy(`
+    pcscd_stream_connect(mozilla_plugin_t)
+')
+
+optional_policy(`
+    rtkit_scheduled(mozilla_plugin_t)
+')
+
+optional_policy(`
+    udev_read_db(mozilla_plugin_t)
+')
+
+optional_policy(`
+    xserver_read_xdm_pid(mozilla_plugin_t)
+    xserver_stream_connect(mozilla_plugin_t)
+    xserver_use_user_fonts(mozilla_plugin_t)
+    xserver_read_user_iceauth(mozilla_plugin_t)
+    xserver_read_user_xauth(mozilla_plugin_t)
+    xserver_append_xdm_home_files(mozilla_plugin_t);
+')
+
+
+#######################################
+#
+# mozilla_plugin_config local policy
+#
+
+allow mozilla_plugin_config_t self:capability { dac_override dac_read_search sys_nice setuid setgid };
+allow mozilla_plugin_config_t self:process { setsched signal_perms getsched execmem };
+
+allow mozilla_plugin_config_t self:fifo_file rw_file_perms;
+allow mozilla_plugin_config_t self:unix_stream_socket create_stream_socket_perms;
+
+dev_search_sysfs(mozilla_plugin_config_t)
+dev_read_urand(mozilla_plugin_config_t)
+dev_dontaudit_read_rand(mozilla_plugin_config_t)
+dev_dontaudit_rw_dri(mozilla_plugin_config_t)
+
+fs_search_auto_mountpoints(mozilla_plugin_config_t)
+fs_list_inotifyfs(mozilla_plugin_config_t)
+
+can_exec(mozilla_plugin_config_t, mozilla_plugin_rw_t)
+manage_dirs_pattern(mozilla_plugin_config_t, mozilla_plugin_rw_t, mozilla_plugin_rw_t)
+manage_files_pattern(mozilla_plugin_config_t, mozilla_plugin_rw_t, mozilla_plugin_rw_t)
+manage_lnk_files_pattern(mozilla_plugin_config_t, mozilla_plugin_rw_t, mozilla_plugin_rw_t)
+
+manage_dirs_pattern(mozilla_plugin_config_t, mozilla_home_t, mozilla_home_t)
+manage_files_pattern(mozilla_plugin_config_t, mozilla_home_t, mozilla_home_t)
+manage_lnk_files_pattern(mozilla_plugin_config_t, mozilla_home_t, mozilla_home_t)
+
+corecmd_exec_bin(mozilla_plugin_config_t)
+corecmd_exec_shell(mozilla_plugin_config_t)
+
+kernel_read_system_state(mozilla_plugin_config_t)
+kernel_request_load_module(mozilla_plugin_config_t)
+
+domain_use_interactive_fds(mozilla_plugin_config_t)
+
+files_read_etc_files(mozilla_plugin_config_t)
+files_read_usr_files(mozilla_plugin_config_t)
+files_dontaudit_search_home(mozilla_plugin_config_t)
+files_list_tmp(mozilla_plugin_config_t)
+
+auth_use_nsswitch(mozilla_plugin_config_t)
+
+miscfiles_read_localization(mozilla_plugin_config_t)
+miscfiles_read_fonts(mozilla_plugin_config_t)
+
+userdom_search_user_home_content(mozilla_plugin_config_t)
+userdom_read_user_home_content_symlinks(mozilla_plugin_config_t)
+userdom_read_user_home_content_files(mozilla_plugin_config_t)
+userdom_dontaudit_search_admin_dir(mozilla_plugin_config_t)
+userdom_use_inherited_user_ptys(mozilla_plugin_config_t)
+
+#domtrans_pattern(mozilla_plugin_config_t, mozilla_plugin_exec_t, mozilla_plugin_t)
+
+optional_policy(`
+    xserver_use_user_fonts(mozilla_plugin_config_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/mplayer.if serefpolicy-3.7.19/policy/modules/apps/mplayer.if
--- nsaserefpolicy/policy/modules/apps/mplayer.if	2011-03-17 07:21:23.032851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/mplayer.if	2011-03-17 07:21:06.286851002 +0000
@@ -102,3 +102,39 @@
 	read_files_pattern($1, mplayer_home_t, mplayer_home_t)
 	userdom_search_user_home_dirs($1)
 ')
+
+########################################
+## <summary>
+##	Execute mplayer_exec_t 
+##	in the specified domain.
+## </summary>
+## <desc>
+##	<p>
+##	Execute a mplayer_exec_t
+##	in the specified domain.  
+##	</p>
+##	<p>
+##	No interprocess communication (signals, pipes,
+##	etc.) is provided by this interface since
+##	the domains are not owned by this module.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="target_domain">
+##	<summary>
+##	The type of the new process.
+##	</summary>
+## </param>
+#
+interface(`mplayer_exec_domtrans',`
+	gen_require(`
+		type mplayer_exec_t;
+	')
+
+	allow $2 mplayer_exec_t:file entrypoint;
+	domtrans_pattern($1, mplayer_exec_t, $2)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/mplayer.te serefpolicy-3.7.19/policy/modules/apps/mplayer.te
--- nsaserefpolicy/policy/modules/apps/mplayer.te	2011-03-17 07:21:23.111851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/mplayer.te	2011-03-17 07:21:06.564851003 +0000
@@ -152,11 +152,15 @@
 
 allow mplayer_t self:process { signal_perms getsched };
 allow mplayer_t self:fifo_file rw_fifo_file_perms;
+allow mplayer_t self:netlink_route_socket create_netlink_socket_perms;
 allow mplayer_t self:sem create_sem_perms;
+allow mplayer_t self:tcp_socket create_socket_perms;
+allow mplayer_t self:unix_dgram_socket sendto;
 
 manage_dirs_pattern(mplayer_t, mplayer_home_t, mplayer_home_t)
 manage_files_pattern(mplayer_t, mplayer_home_t, mplayer_home_t)
 manage_lnk_files_pattern(mplayer_t, mplayer_home_t, mplayer_home_t)
+userdom_user_home_dir_filetrans(mplayer_t, mplayer_home_t, dir)
 userdom_search_user_home_dirs(mplayer_t)
 
 manage_files_pattern(mplayer_t, mplayer_tmpfs_t, mplayer_tmpfs_t)
@@ -178,6 +182,15 @@
 # Sysctl on kernel version 
 kernel_read_kernel_sysctls(mplayer_t)
 
+corenet_all_recvfrom_netlabel(mplayer_t)
+corenet_all_recvfrom_unlabeled(mplayer_t)
+corenet_tcp_sendrecv_generic_if(mplayer_t)
+corenet_tcp_sendrecv_generic_node(mplayer_t)
+corenet_tcp_bind_generic_node(mplayer_t)
+
+corenet_sendrecv_pulseaudio_client_packets(mplayer_t)
+corenet_tcp_connect_pulseaudio_port(mplayer_t)
+
 # Run bash/sed (??) 
 corecmd_exec_bin(mplayer_t)
 corecmd_exec_shell(mplayer_t)
@@ -192,6 +205,9 @@
 # RTC clock 
 dev_read_realtime_clock(mplayer_t)
 
+dev_read_rand(mplayer_t)
+dev_read_urand(mplayer_t)
+
 # Access to DVD/CD/V4L
 storage_raw_read_removable_device(mplayer_t)
 
@@ -211,6 +227,8 @@
 fs_search_auto_mountpoints(mplayer_t)
 fs_list_inotifyfs(mplayer_t)
 
+logging_send_syslog_msg(mplayer_t)
+
 miscfiles_read_localization(mplayer_t)
 miscfiles_read_fonts(mplayer_t)
 
@@ -221,6 +239,7 @@
 userdom_read_user_tmp_symlinks(mplayer_t)
 userdom_read_user_home_content_files(mplayer_t)
 userdom_read_user_home_content_symlinks(mplayer_t)
+userdom_write_user_tmp_sockets(mplayer_t)
 
 xserver_user_x_domain_template(mplayer, mplayer_t, mplayer_tmpfs_t)
 
@@ -290,5 +309,15 @@
 ')
 
 optional_policy(`
+	gnome_setattr_config_dirs(mplayer_t)
+')
+
+optional_policy(`
 	nscd_socket_use(mplayer_t)
 ')
+
+optional_policy(`
+	pulseaudio_exec(mplayer_t)
+	pulseaudio_stream_connect(mplayer_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/namespace.fc serefpolicy-3.7.19/policy/modules/apps/namespace.fc
--- nsaserefpolicy/policy/modules/apps/namespace.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/namespace.fc	2011-03-17 07:21:06.034851003 +0000
@@ -0,0 +1,3 @@
+
+/etc/security/namespace.init		--	gen_context(system_u:object_r:namespace_init_exec_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/namespace.if serefpolicy-3.7.19/policy/modules/apps/namespace.if
--- nsaserefpolicy/policy/modules/apps/namespace.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/namespace.if	2011-03-17 07:21:06.026851002 +0000
@@ -0,0 +1,48 @@
+
+## <summary>policy for namespace</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run namespace_init.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`namespace_init_domtrans',`
+	gen_require(`
+		type namespace_init_t, namespace_init_exec_t;
+	')
+
+	domtrans_pattern($1, namespace_init_exec_t, namespace_init_t)
+')
+
+
+########################################
+## <summary>
+##	Execute namespace_init in the namespace_init domain, and
+##	allow the specified role the namespace_init domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the namespace_init domain.
+##	</summary>
+## </param>
+#
+interface(`namespace_init_run',`
+	gen_require(`
+		type namespace_init_t;
+	')
+
+	namespace_init_domtrans($1)
+	role $2 types namespace_init_t;
+	
+	seutil_run_setfiles(namespace_init_t, $2)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/namespace.te serefpolicy-3.7.19/policy/modules/apps/namespace.te
--- nsaserefpolicy/policy/modules/apps/namespace.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/namespace.te	2012-04-10 12:18:58.572704030 +0000
@@ -0,0 +1,43 @@
+policy_module(namespace,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type namespace_init_t;
+type namespace_init_exec_t;
+init_system_domain(namespace_init_t, namespace_init_exec_t)
+role system_r types namespace_init_t;
+
+########################################
+#
+# namespace_init local policy
+#
+
+allow namespace_init_t self:capability dac_override;
+
+allow namespace_init_t self:fifo_file manage_fifo_file_perms;
+allow namespace_init_t self:unix_stream_socket create_stream_socket_perms;
+
+kernel_read_system_state(namespace_init_t)
+
+domain_use_interactive_fds(namespace_init_t)
+domain_obj_id_change_exemption(namespace_init_t)
+
+mcs_file_write_all(namespace_init_t)
+
+files_read_etc_files(namespace_init_t)
+files_polyinstantiate_all(namespace_init_t)
+
+auth_use_nsswitch(namespace_init_t)
+
+miscfiles_read_localization(namespace_init_t)
+
+term_use_console(namespace_init_t)
+
+userdom_manage_user_home_content_dirs(namespace_init_t)
+userdom_manage_user_home_content_files(namespace_init_t)
+userdom_relabelto_user_home_dirs(namespace_init_t)
+userdom_relabelto_user_home_files(namespace_init_t)
+userdom_user_home_dir_filetrans_user_home_content(namespace_init_t, { dir file lnk_file fifo_file sock_file })
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/nsplugin.fc serefpolicy-3.7.19/policy/modules/apps/nsplugin.fc
--- nsaserefpolicy/policy/modules/apps/nsplugin.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/nsplugin.fc	2011-03-17 07:21:06.564851003 +0000
@@ -0,0 +1,10 @@
+HOME_DIR/\.adobe(/.*)?			gen_context(system_u:object_r:nsplugin_home_t,s0)
+HOME_DIR/\.macromedia(/.*)?		gen_context(system_u:object_r:nsplugin_home_t,s0)
+HOME_DIR/\.gcjwebplugin(/.*)?		gen_context(system_u:object_r:nsplugin_home_t,s0)
+HOME_DIR/\.icedteaplugin(/.*)?		gen_context(system_u:object_r:nsplugin_home_t,s0)
+
+/usr/bin/nspluginscan	--	gen_context(system_u:object_r:nsplugin_exec_t,s0)
+/usr/bin/nspluginviewer	--	gen_context(system_u:object_r:nsplugin_exec_t,s0)
+/usr/lib(64)?/nspluginwrapper/npviewer.bin	--	gen_context(system_u:object_r:nsplugin_exec_t,s0)
+/usr/lib(64)?/nspluginwrapper/plugin-config	--	gen_context(system_u:object_r:nsplugin_config_exec_t,s0)
+/usr/lib(64)?/mozilla/plugins-wrapped(/.*)?			gen_context(system_u:object_r:nsplugin_rw_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/nsplugin.if serefpolicy-3.7.19/policy/modules/apps/nsplugin.if
--- nsaserefpolicy/policy/modules/apps/nsplugin.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/nsplugin.if	2012-04-02 19:10:28.185390391 +0000
@@ -0,0 +1,486 @@
+
+## <summary>policy for nsplugin</summary>
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	nsplugin rw files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_manage_rw_files',`
+	gen_require(`
+		type nsplugin_rw_t;
+	')
+
+	allow $1 nsplugin_rw_t:file manage_file_perms;
+	allow $1 nsplugin_rw_t:dir rw_dir_perms;
+')
+
+########################################
+## <summary>
+##	Manage nsplugin rw files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_manage_rw',`
+	gen_require(`
+		type nsplugin_rw_t;
+	')
+
+         manage_dirs_pattern($1, nsplugin_rw_t, nsplugin_rw_t)
+         manage_files_pattern($1, nsplugin_rw_t, nsplugin_rw_t)
+         manage_lnk_files_pattern($1, nsplugin_rw_t, nsplugin_rw_t)
+')
+
+#######################################
+## <summary>
+##	The per role template for the nsplugin module.
+## </summary>
+## <desc>
+##	<p>
+##	This template creates a derived domains which are used
+##	for nsplugin web browser.
+##	</p>
+##	<p>
+##	This template is invoked automatically for each user, and
+##	generally does not need to be invoked directly
+##	by policy writers.
+##	</p>
+## </desc>
+## <param name="user_role">
+##  <summary>
+##  The role associated with the user domain.
+##  </summary>
+## </param>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_role_notrans',`
+	gen_require(`
+		type nsplugin_rw_t;
+		type nsplugin_home_t;
+		type nsplugin_exec_t;
+		type nsplugin_config_exec_t;
+		type nsplugin_t;
+		type nsplugin_config_t;
+		class x_drawable all_x_drawable_perms;
+		class x_resource all_x_resource_perms;
+		class dbus send_msg;
+	')
+
+	role $1 types nsplugin_t;
+	role $1 types nsplugin_config_t;
+
+	allow nsplugin_t $2:process signull;
+	allow nsplugin_t $2:dbus send_msg;
+	allow $2 nsplugin_t:dbus send_msg;
+
+	list_dirs_pattern($2, nsplugin_rw_t, nsplugin_rw_t)
+	read_files_pattern($2, nsplugin_rw_t, nsplugin_rw_t)
+	read_lnk_files_pattern($2, nsplugin_rw_t, nsplugin_rw_t)
+	can_exec($2, nsplugin_rw_t)
+
+	#Leaked File Descriptors
+ifdef(`hide_broken_symptoms', `
+	dontaudit nsplugin_t $2:socket_class_set { read write };
+	dontaudit nsplugin_t $2:fifo_file rw_inherited_fifo_file_perms;
+	dontaudit nsplugin_config_t $2:socket_class_set { read write };
+	dontaudit nsplugin_config_t $2:fifo_file rw_inherited_fifo_file_perms;
+')
+	allow nsplugin_t $2:unix_stream_socket connectto;
+	dontaudit nsplugin_t $2:process ptrace;
+	allow nsplugin_t $2:sem rw_sem_perms;
+	allow nsplugin_t $2:shm rw_shm_perms;
+	dontaudit nsplugin_t $2:shm destroy;
+	allow $2 nsplugin_t:sem rw_sem_perms;
+
+	allow $2 nsplugin_t:process { getattr ptrace signal_perms };
+	allow $2 nsplugin_t:unix_stream_socket connectto;
+
+	allow $2 nsplugin_config_t:process { getattr ptrace signal_perms };
+
+	# Connect to pulseaudit server
+	stream_connect_pattern(nsplugin_t, user_home_t, user_home_t, $2)
+	gnome_stream_connect(nsplugin_t, $2)
+
+	userdom_use_user_terminals(nsplugin_t)
+	userdom_use_user_terminals(nsplugin_config_t)
+	userdom_dontaudit_setattr_user_home_content_files(nsplugin_t)
+	userdom_manage_tmpfs_role($1, nsplugin_t)
+
+	optional_policy(`
+		pulseaudio_role($1, nsplugin_t)
+	')
+')
+
+#######################################
+## <summary>
+##	Role access for nsplugin
+## </summary>
+## <param name="user_role">
+##	<summary>
+##	The role associated with the user domain.
+##	</summary>
+## </param>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_role',`
+	gen_require(`
+		type nsplugin_exec_t;
+		type nsplugin_config_exec_t;
+		type nsplugin_t;
+		type nsplugin_config_t;
+	')
+
+	nsplugin_role_notrans($1, $2)
+
+	domtrans_pattern($2, nsplugin_exec_t, nsplugin_t)
+	domtrans_pattern($2, nsplugin_config_exec_t, nsplugin_config_t)
+
+')
+
+#######################################
+## <summary>
+##	The per role template for the nsplugin module.
+## </summary>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_domtrans',`
+	gen_require(`
+		type nsplugin_exec_t;
+		type nsplugin_t;
+	')
+
+	domtrans_pattern($1, nsplugin_exec_t, nsplugin_t)
+	allow $1 nsplugin_t:unix_stream_socket connectto;
+	allow nsplugin_t $1:process signal;
+')
+#######################################
+## <summary>
+##	The per role template for the nsplugin module.
+## </summary>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_domtrans_config',`
+	gen_require(`
+		type nsplugin_config_exec_t;
+		type nsplugin_config_t;
+	')
+
+	domtrans_pattern($1, nsplugin_config_exec_t, nsplugin_config_t)
+')
+
+########################################
+## <summary>
+##	Search nsplugin rw directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_search_rw_dir',`
+	gen_require(`
+		type nsplugin_rw_t;
+	')
+
+	allow $1 nsplugin_rw_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Read nsplugin rw files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_read_rw_files',`
+	gen_require(`
+		type nsplugin_rw_t;
+	')
+
+	list_dirs_pattern($1, nsplugin_rw_t, nsplugin_rw_t)
+	read_files_pattern($1, nsplugin_rw_t, nsplugin_rw_t)
+	read_lnk_files_pattern($1, nsplugin_rw_t, nsplugin_rw_t)
+')
+
+########################################
+## <summary>
+##	Read nsplugin home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_read_home',`
+	gen_require(`
+		type nsplugin_home_t;
+	')
+
+	list_dirs_pattern($1, nsplugin_home_t, nsplugin_home_t)
+	read_files_pattern($1, nsplugin_home_t, nsplugin_home_t)
+	read_lnk_files_pattern($1, nsplugin_home_t, nsplugin_home_t)
+')
+
+########################################
+## <summary>
+##	Exec nsplugin rw files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_rw_exec',`
+	gen_require(`
+		type nsplugin_rw_t;
+	')
+
+	can_exec($1, nsplugin_rw_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	nsplugin home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_manage_home_files',`
+	gen_require(`
+		type nsplugin_home_t;
+	')
+
+	manage_files_pattern($1, nsplugin_home_t, nsplugin_home_t)
+')
+
+#######################################
+## <summary>
+##  manage nnsplugin home dirs.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`nsplugin_manage_home_dirs',`
+    gen_require(`
+        type nsplugin_home_t;
+    ')
+
+    manage_dirs_pattern($1, nsplugin_home_t, nsplugin_home_t)
+')
+
+########################################
+## <summary>
+##	Allow attempts to read and write to
+##	nsplugin named pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_rw_pipes',`
+	gen_require(`
+		type nsplugin_home_t;
+	')
+
+	allow $1 nsplugin_home_t:fifo_file rw_fifo_file_perms; 
+')
+
+########################################
+## <summary>
+##	Read and write to nsplugin shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_rw_shm',`
+	gen_require(`
+		type nsplugin_t;
+	')
+
+	allow $1 nsplugin_t:shm rw_shm_perms;
+')
+
+#####################################
+## <summary>
+##      Allow read and write access to nsplugin semaphores.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`nsplugin_rw_semaphores',`
+        gen_require(`
+                type nsplugin_t;
+        ')
+
+        allow $1 nsplugin_t:sem rw_sem_perms;
+')
+
+########################################
+## <summary>
+##	Execute nsplugin_exec_t 
+##	in the specified domain.
+## </summary>
+## <desc>
+##	<p>
+##	Execute a nsplugin_exec_t
+##	in the specified domain.  
+##	</p>
+##	<p>
+##	No interprocess communication (signals, pipes,
+##	etc.) is provided by this interface since
+##	the domains are not owned by this module.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="target_domain">
+##	<summary>
+##	The type of the new process.
+##	</summary>
+## </param>
+#
+interface(`nsplugin_exec_domtrans',`
+	gen_require(`
+		type nsplugin_exec_t;
+	')
+
+	allow $2 nsplugin_exec_t:file entrypoint;
+	domtrans_pattern($1, nsplugin_exec_t, $2)
+')
+
+#######################################
+## <summary>
+##  Create objects in a user home directory
+##  with an automatic type transition to
+##  the nsplugin home file type.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="object_class">
+##  <summary>
+##  The class of the object to be created.
+##  </summary>
+## </param>
+#
+interface(`nsplugin_user_home_dir_filetrans',`
+    gen_require(`
+        type nsplugin_home_t;
+    ')
+
+    userdom_user_home_dir_filetrans($1, nsplugin_home_t, $2)
+')
+
+######################################
+## <summary>
+##  Create objects in a user home directory
+##  with an automatic type transition to
+##  the nsplugin home file type.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="object_class">
+##  <summary>
+##  The class of the object to be created.
+##  </summary>
+## </param>
+#
+interface(`nsplugin_user_home_filetrans',`
+    gen_require(`
+        type nsplugin_home_t;
+    ')
+
+    userdom_user_home_content_filetrans($1, nsplugin_home_t, $2)
+')
+
+#######################################
+## <summary>
+##  Send signull signal to nsplugin
+##  processes.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`nsplugin_signull',`
+    gen_require(`
+        type nsplugin_t;
+    ')
+
+    allow $1 nsplugin_t:process signull;
+')
+
+#######################################
+## <summary>
+##  Send generic signals to user nsplugin processes.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`nsplugin_signal',`
+    gen_require(`
+        type nsplugin_t;
+    ')
+
+    allow $1 nsplugin_t:process signal;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/nsplugin.te serefpolicy-3.7.19/policy/modules/apps/nsplugin.te
--- nsaserefpolicy/policy/modules/apps/nsplugin.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/nsplugin.te	2012-03-09 12:34:47.491457316 +0000
@@ -0,0 +1,306 @@
+
+policy_module(nsplugin, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+## <p>
+## Allow nsplugin code to execmem/execstack
+## </p>
+## </desc>
+gen_tunable(allow_nsplugin_execmem, false)
+
+## <desc>
+## <p>
+## Allow nsplugin code to connect to unreserved ports
+## </p>
+## </desc>
+gen_tunable(nsplugin_can_network, true)
+
+type nsplugin_exec_t;
+application_executable_file(nsplugin_exec_t)
+
+type nsplugin_config_exec_t;
+application_executable_file(nsplugin_config_exec_t)
+
+type nsplugin_rw_t;
+files_poly_member(nsplugin_rw_t)
+files_type(nsplugin_rw_t)
+
+type nsplugin_tmp_t;
+files_tmp_file(nsplugin_tmp_t)
+
+type nsplugin_home_t;
+files_poly_member(nsplugin_home_t)
+userdom_user_home_content(nsplugin_home_t)
+typealias nsplugin_home_t alias user_nsplugin_home_t;
+
+type nsplugin_t;
+domain_type(nsplugin_t)
+domain_entry_file(nsplugin_t, nsplugin_exec_t)
+
+type nsplugin_config_t;
+domain_type(nsplugin_config_t)
+domain_entry_file(nsplugin_config_t, nsplugin_config_exec_t)
+
+application_executable_file(nsplugin_exec_t)
+application_executable_file(nsplugin_config_exec_t)
+
+
+########################################
+#
+# nsplugin local policy
+#
+dontaudit nsplugin_t self:capability { sys_nice sys_tty_config };
+allow nsplugin_t self:fifo_file rw_file_perms;
+allow nsplugin_t self:process { ptrace setpgid getsched setsched signal_perms };
+
+allow nsplugin_t self:sem create_sem_perms;
+allow nsplugin_t self:shm create_shm_perms;
+allow nsplugin_t self:msgq create_msgq_perms;
+allow nsplugin_t self:unix_stream_socket { connectto create_stream_socket_perms };
+allow nsplugin_t self:unix_dgram_socket create_socket_perms;
+
+tunable_policy(`allow_nsplugin_execmem',`
+	allow nsplugin_t self:process { execstack execmem };
+	allow nsplugin_config_t self:process { execstack execmem };
+')
+	
+tunable_policy(`nsplugin_can_network',`
+	corenet_tcp_connect_all_unreserved_ports(nsplugin_t)
+')
+
+manage_dirs_pattern(nsplugin_t, nsplugin_home_t, nsplugin_home_t)
+exec_files_pattern(nsplugin_t, nsplugin_home_t, nsplugin_home_t)
+manage_files_pattern(nsplugin_t, nsplugin_home_t, nsplugin_home_t)
+manage_fifo_files_pattern(nsplugin_t, nsplugin_home_t, nsplugin_home_t)
+manage_sock_files_pattern(nsplugin_t, nsplugin_home_t, nsplugin_home_t)
+manage_lnk_files_pattern(nsplugin_t, nsplugin_home_t, nsplugin_home_t)
+userdom_user_home_dir_filetrans(nsplugin_t, nsplugin_home_t, {file dir})
+userdom_user_home_content_filetrans(nsplugin_t, nsplugin_home_t, {file dir})
+userdom_dontaudit_write_user_home_content_files(nsplugin_t)
+userdom_dontaudit_search_admin_dir(nsplugin_t)
+
+corecmd_exec_bin(nsplugin_t)
+corecmd_exec_shell(nsplugin_t)
+
+corenet_all_recvfrom_unlabeled(nsplugin_t)
+corenet_all_recvfrom_netlabel(nsplugin_t)
+corenet_tcp_connect_flash_port(nsplugin_t)
+corenet_tcp_connect_streaming_port(nsplugin_t)
+corenet_tcp_connect_pulseaudio_port(nsplugin_t)
+corenet_tcp_connect_http_port(nsplugin_t)
+corenet_tcp_connect_http_cache_port(nsplugin_t)
+corenet_tcp_sendrecv_generic_if(nsplugin_t)
+corenet_tcp_sendrecv_generic_node(nsplugin_t)
+corenet_tcp_connect_ipp_port(nsplugin_t)
+corenet_tcp_connect_speech_port(nsplugin_t)
+
+domain_dontaudit_read_all_domains_state(nsplugin_t)
+
+dev_read_rand(nsplugin_t)
+dev_read_sound(nsplugin_t)
+dev_write_sound(nsplugin_t)
+dev_read_video_dev(nsplugin_t)
+dev_write_video_dev(nsplugin_t)
+dev_getattr_dri_dev(nsplugin_t)
+dev_rwx_zero(nsplugin_t)
+dev_search_sysfs(nsplugin_t)
+
+kernel_read_kernel_sysctls(nsplugin_t)
+kernel_read_system_state(nsplugin_t)
+
+files_dontaudit_getattr_lost_found_dirs(nsplugin_t)
+files_dontaudit_list_home(nsplugin_t)
+files_read_usr_files(nsplugin_t)
+files_read_etc_files(nsplugin_t)
+files_read_config_files(nsplugin_t)
+
+fs_getattr_tmpfs(nsplugin_t)
+fs_getattr_xattr_fs(nsplugin_t)
+fs_search_auto_mountpoints(nsplugin_t)
+fs_rw_anon_inodefs_files(nsplugin_t)
+fs_list_inotifyfs(nsplugin_t)
+
+storage_dontaudit_getattr_fixed_disk_dev(nsplugin_t)
+
+term_dontaudit_getattr_all_ptys(nsplugin_t)
+term_dontaudit_getattr_all_ttys(nsplugin_t)
+term_dontaudit_use_ptmx(nsplugin_t)
+
+auth_use_nsswitch(nsplugin_t)
+
+libs_exec_ld_so(nsplugin_t)
+
+miscfiles_read_localization(nsplugin_t)
+miscfiles_read_fonts(nsplugin_t)
+miscfiles_dontaudit_write_fonts(nsplugin_t)
+miscfiles_setattr_fonts_cache_dirs(nsplugin_t)
+
+userdom_manage_user_tmp_dirs(nsplugin_t)
+userdom_manage_user_tmp_files(nsplugin_t)
+userdom_manage_user_tmp_sockets(nsplugin_t)
+userdom_tmp_filetrans_user_tmp(nsplugin_t, { file dir sock_file })
+userdom_rw_semaphores(nsplugin_t)
+
+userdom_read_user_home_content_symlinks(nsplugin_t)
+userdom_read_user_home_content_files(nsplugin_t)
+userdom_read_user_tmp_files(nsplugin_t)
+userdom_write_user_tmp_sockets(nsplugin_t)
+userdom_dontaudit_append_user_home_content_files(nsplugin_t)
+
+optional_policy(`
+	alsa_read_rw_config(nsplugin_t)
+')
+
+optional_policy(`
+	cups_stream_connect(nsplugin_t)
+')
+
+optional_policy(`
+	chrome_dontaudit_sandbox_leaks(nsplugin_t)
+')
+
+optional_policy(`
+	dbus_session_bus_client(nsplugin_t)
+	dbus_connect_session_bus(nsplugin_t)
+	dbus_system_bus_client(nsplugin_t)
+')
+
+optional_policy(`
+	gnome_exec_gconf(nsplugin_t)
+	gnome_manage_config(nsplugin_t)
+	gnome_read_gconf_home_files(nsplugin_t)
+')
+
+optional_policy(`
+	mozilla_read_user_home_files(nsplugin_t)
+	mozilla_write_user_home_files(nsplugin_t)
+	mozilla_plugin_delete_tmpfs_files(nsplugin_t)
+	mozilla_exec_user_home_files(nsplugin_t)
+')
+
+optional_policy(`
+	mplayer_exec(nsplugin_t)
+	mplayer_read_user_home_files(nsplugin_t)
+')
+
+optional_policy(`
+	unconfined_execmem_signull(nsplugin_t)
+')
+
+optional_policy(`
+	gen_require(`
+		type user_tmpfs_t;
+	')
+	xserver_user_x_domain_template(nsplugin, nsplugin_t, user_tmpfs_t)
+	xserver_rw_shm(nsplugin_t)
+	xserver_read_xdm_pid(nsplugin_t)
+	xserver_read_xdm_tmp_files(nsplugin_t)
+	xserver_read_user_xauth(nsplugin_t)
+	xserver_read_user_iceauth(nsplugin_t)
+	xserver_use_user_fonts(nsplugin_t)
+	xserver_rw_inherited_user_fonts(nsplugin_t)
+')
+
+########################################
+#
+# nsplugin_config local policy
+#
+
+allow nsplugin_config_t self:capability { dac_override dac_read_search sys_nice setuid setgid };
+allow nsplugin_config_t self:process { setsched signal_perms getsched execmem };
+#execing pulseaudio
+dontaudit nsplugin_t self:process { getcap setcap };
+
+allow nsplugin_config_t self:fifo_file rw_file_perms;
+allow nsplugin_config_t self:unix_stream_socket create_stream_socket_perms;
+
+dev_dontaudit_read_rand(nsplugin_config_t)
+
+fs_search_auto_mountpoints(nsplugin_config_t)
+fs_list_inotifyfs(nsplugin_config_t)
+
+can_exec(nsplugin_config_t, nsplugin_rw_t)
+manage_dirs_pattern(nsplugin_config_t, nsplugin_rw_t, nsplugin_rw_t)
+manage_files_pattern(nsplugin_config_t, nsplugin_rw_t, nsplugin_rw_t)
+manage_lnk_files_pattern(nsplugin_config_t, nsplugin_rw_t, nsplugin_rw_t)
+
+manage_dirs_pattern(nsplugin_config_t, nsplugin_home_t, nsplugin_home_t)
+manage_files_pattern(nsplugin_config_t, nsplugin_home_t, nsplugin_home_t)
+manage_lnk_files_pattern(nsplugin_config_t, nsplugin_home_t, nsplugin_home_t)
+
+corecmd_exec_bin(nsplugin_config_t)
+corecmd_exec_shell(nsplugin_config_t)
+
+kernel_read_system_state(nsplugin_config_t)
+
+files_read_etc_files(nsplugin_config_t)
+files_read_usr_files(nsplugin_config_t)
+files_dontaudit_search_home(nsplugin_config_t)
+files_list_tmp(nsplugin_config_t)
+
+auth_use_nsswitch(nsplugin_config_t)
+
+miscfiles_read_localization(nsplugin_config_t)
+miscfiles_read_fonts(nsplugin_config_t)
+
+userdom_search_user_home_content(nsplugin_config_t)
+userdom_read_user_home_content_symlinks(nsplugin_config_t)
+userdom_read_user_home_content_files(nsplugin_config_t)
+userdom_dontaudit_search_admin_dir(nsplugin_config_t)
+userdom_dontaudit_read_user_tmp_files(nsplugin_config_t)
+userdom_dontaudit_write_user_tmp_files(nsplugin_config_t) 
+
+tunable_policy(`use_nfs_home_dirs',`
+	fs_getattr_nfs(nsplugin_t)
+	fs_manage_nfs_dirs(nsplugin_t)
+	fs_manage_nfs_files(nsplugin_t)
+	fs_read_nfs_symlinks(nsplugin_t)
+	fs_manage_nfs_named_pipes(nsplugin_t)
+	fs_manage_nfs_dirs(nsplugin_config_t)
+	fs_manage_nfs_files(nsplugin_config_t)
+	fs_manage_nfs_named_pipes(nsplugin_config_t)
+	fs_read_nfs_symlinks(nsplugin_config_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+	fs_getattr_cifs(nsplugin_t)
+	fs_manage_cifs_dirs(nsplugin_t)
+	fs_manage_cifs_files(nsplugin_t)
+	fs_read_cifs_symlinks(nsplugin_t)
+	fs_manage_cifs_named_pipes(nsplugin_t)
+	fs_manage_cifs_dirs(nsplugin_config_t)
+	fs_manage_cifs_files(nsplugin_config_t)
+	fs_manage_cifs_named_pipes(nsplugin_config_t)
+	fs_read_cifs_symlinks(nsplugin_config_t)
+')
+
+domtrans_pattern(nsplugin_config_t, nsplugin_exec_t, nsplugin_t)
+
+optional_policy(`
+	xserver_use_user_fonts(nsplugin_config_t)
+')
+
+optional_policy(`
+	mozilla_read_user_home_files(nsplugin_config_t)
+	mozilla_write_user_home_files(nsplugin_config_t)
+')
+
+application_signull(nsplugin_t)
+
+optional_policy(`
+	pulseaudio_exec(nsplugin_t)
+	pulseaudio_stream_connect(nsplugin_t)
+	pulseaudio_manage_home_files(nsplugin_t)
+	pulseaudio_setattr_home_dir(nsplugin_t)
+')
+
+optional_policy(`
+	unconfined_execmem_exec(nsplugin_t)
+')
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/openoffice.fc serefpolicy-3.7.19/policy/modules/apps/openoffice.fc
--- nsaserefpolicy/policy/modules/apps/openoffice.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/openoffice.fc	2011-03-17 07:21:06.197851002 +0000
@@ -0,0 +1,4 @@
+/usr/lib/openoffice\.org.*/program/.+\.bin -- gen_context(system_u:object_r:openoffice_exec_t,s0)
+/usr/lib64/openoffice\.org.*/program/.+\.bin -- gen_context(system_u:object_r:openoffice_exec_t,s0)
+/opt/openoffice\.org.*/program/.+\.bin -- gen_context(system_u:object_r:openoffice_exec_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/openoffice.if serefpolicy-3.7.19/policy/modules/apps/openoffice.if
--- nsaserefpolicy/policy/modules/apps/openoffice.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/openoffice.if	2011-08-10 18:17:06.164523004 +0000
@@ -0,0 +1,124 @@
+## <summary>Openoffice</summary>
+
+#######################################
+## <summary>
+##	The per role template for the openoffice module.
+## </summary>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+interface(`openoffice_plugin_role',`
+	gen_require(`
+		type openoffice_exec_t;
+		type openoffice_t;
+	')
+	
+	########################################
+	#
+	# Local policy
+	#
+
+	domtrans_pattern($1, openoffice_exec_t, openoffice_t)
+	allow $1 openoffice_t:process { signal sigkill };
+')
+
+#######################################
+## <summary>
+##	role for openoffice
+## </summary>
+## <desc>
+##	<p>
+##	This template creates a derived domains which are used
+##	for java applications.
+##	</p>
+## </desc>
+## <param name="role_prefix">
+##	<summary>
+##	The prefix of the user domain (e.g., user
+##	is the prefix for user_t).
+##	</summary>
+## </param>
+## <param name="user_role">
+##	<summary>
+##	The role associated with the user domain.
+##	</summary>
+## </param>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+interface(`openoffice_role_template',`
+	gen_require(`
+		type openoffice_exec_t;
+	')
+
+	role $2 types $1_openoffice_t;
+
+	type $1_openoffice_t;
+	domain_type($1_openoffice_t)
+	domain_entry_file($1_openoffice_t, openoffice_exec_t)
+	domain_interactive_fd($1_openoffice_t)
+
+	userdom_unpriv_usertype($1, $1_openoffice_t)
+	userdom_exec_user_home_content_files($1_openoffice_t)
+
+	allow $1_openoffice_t self:process { getsched sigkill execheap execmem execstack };
+
+	allow $3 $1_openoffice_t:process { getattr ptrace signal_perms noatsecure siginh rlimitinh };
+	allow $1_openoffice_t $3:tcp_socket { read write };
+
+	domtrans_pattern($3, openoffice_exec_t, $1_openoffice_t)
+
+	dev_read_urand($1_openoffice_t)
+	dev_read_rand($1_openoffice_t)
+
+	fs_dontaudit_rw_tmpfs_files($1_openoffice_t)
+
+	allow $3 $1_openoffice_t:process { signal sigkill };
+	allow $1_openoffice_t $3:unix_stream_socket connectto;
+
+	optional_policy(`
+		xserver_role($2, $1_openoffice_t)
+	')
+')
+
+########################################
+## <summary>
+##	Execute openoffice_exec_t 
+##	in the specified domain.
+## </summary>
+## <desc>
+##	<p>
+##	Execute a openoffice_exec_t
+##	in the specified domain.  
+##	</p>
+##	<p>
+##	No interprocess communication (signals, pipes,
+##	etc.) is provided by this interface since
+##	the domains are not owned by this module.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="target_domain">
+##	<summary>
+##	The type of the new process.
+##	</summary>
+## </param>
+#
+interface(`openoffice_exec_domtrans',`
+	gen_require(`
+		type openoffice_exec_t;
+	')
+
+	allow $2 openoffice_exec_t:file entrypoint;
+	domtrans_pattern($1, openoffice_exec_t, $2)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/openoffice.te serefpolicy-3.7.19/policy/modules/apps/openoffice.te
--- nsaserefpolicy/policy/modules/apps/openoffice.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/openoffice.te	2011-03-17 07:21:06.458851002 +0000
@@ -0,0 +1,17 @@
+
+policy_module(openoffice, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type openoffice_t;
+type openoffice_exec_t;
+application_domain(openoffice_t, openoffice_exec_t)
+
+########################################
+#
+# Unconfined java local policy
+#
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/podsleuth.te serefpolicy-3.7.19/policy/modules/apps/podsleuth.te
--- nsaserefpolicy/policy/modules/apps/podsleuth.te	2011-03-17 07:21:22.970851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/podsleuth.te	2011-03-17 07:21:06.044851001 +0000
@@ -28,7 +28,7 @@
 # podsleuth local policy
 #
 allow podsleuth_t self:capability { kill dac_override sys_admin sys_rawio };
-allow podsleuth_t self:process { ptrace signal getsched execheap execmem execstack };
+allow podsleuth_t self:process { ptrace signal signull getsched execheap execmem execstack };
 allow podsleuth_t self:fifo_file rw_file_perms;
 allow podsleuth_t self:unix_stream_socket create_stream_socket_perms;
 allow podsleuth_t self:sem create_sem_perms;
@@ -50,6 +50,7 @@
 fs_tmpfs_filetrans(podsleuth_t, podsleuth_tmpfs_t, { dir file lnk_file })
 
 kernel_read_system_state(podsleuth_t)
+kernel_request_load_module(podsleuth_t)
 
 corecmd_exec_bin(podsleuth_t)
 
@@ -66,12 +67,15 @@
 fs_search_dos(podsleuth_t)
 fs_getattr_tmpfs(podsleuth_t)
 fs_list_tmpfs(podsleuth_t)
+fs_rw_removable_blk_files(podsleuth_t)
 
 miscfiles_read_localization(podsleuth_t)
 
 sysnet_dns_name_resolve(podsleuth_t)
 
 userdom_signal_unpriv_users(podsleuth_t)
+userdom_signull_unpriv_users(podsleuth_t)
+userdom_read_user_tmpfs_files(podsleuth_t)
 
 optional_policy(`
 	dbus_system_bus_client(podsleuth_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/pulseaudio.if serefpolicy-3.7.19/policy/modules/apps/pulseaudio.if
--- nsaserefpolicy/policy/modules/apps/pulseaudio.if	2011-03-17 07:21:23.024851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/pulseaudio.if	2012-01-26 09:26:53.922158394 +0000
@@ -17,7 +17,7 @@
 #
 interface(`pulseaudio_role',`
 	gen_require(`
-		type pulseaudio_t, pulseaudio_exec_t, print_spool_t;
+		type pulseaudio_t, pulseaudio_exec_t;
 		class dbus { acquire_svc send_msg };
 	')
 
@@ -104,6 +104,24 @@
 	can_exec($1, pulseaudio_exec_t)
 ')
 
+########################################
+## <summary>
+##	dontaudit attempts to execute a pulseaudio in the current domain.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`pulseaudio_dontaudit_exec',`
+	gen_require(`
+		type pulseaudio_exec_t;
+	')
+
+	dontaudit $1 pulseaudio_exec_t:file execute;
+')
+
 #####################################
 ## <summary>
 ##	Connect to pulseaudio over a unix domain
@@ -186,6 +204,25 @@
 
 ########################################
 ## <summary>
+##	Read and write Pulse Audio files.
+## </summary>
+## <param name="user_domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pulseaudio_rw_home_files',`
+	gen_require(`
+		type pulseaudio_home_t;
+	')
+
+	rw_files_pattern($1, pulseaudio_home_t, pulseaudio_home_t)
+	userdom_search_user_home_dirs($1)
+')
+
+########################################
+## <summary>
 ##	Create, read, write, and delete pulseaudio
 ##	home directory files.
 ## </summary>
@@ -202,4 +239,44 @@
 
 	userdom_search_user_home_dirs($1)
 	manage_files_pattern($1, pulseaudio_home_t, pulseaudio_home_t)
+	read_lnk_files_pattern($1, pulseaudio_home_t, pulseaudio_home_t)
+')
+
+########################################
+## <summary>
+##	Send signull signal to pulseaudio 
+##	processes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`pulseaudio_signull',`
+	gen_require(`
+		type pulseaudio_t;
+	')
+
+	allow $1 pulseaudio_t:process signull;
+')
+
+#######################################
+## <summary>
+##  Create, read, write, and delete pulseaudio
+##  home directory symlinks.
+## </summary>
+## <param name="user_domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`pulseaudio_manage_home_symlinks',`
+    gen_require(`
+        type pulseaudio_home_t;
+    ')
+
+    userdom_search_user_home_dirs($1)
+    manage_lnk_files_pattern($1, pulseaudio_home_t, pulseaudio_home_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/pulseaudio.te serefpolicy-3.7.19/policy/modules/apps/pulseaudio.te
--- nsaserefpolicy/policy/modules/apps/pulseaudio.te	2011-03-17 07:21:23.029851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/pulseaudio.te	2012-01-25 19:35:06.949446772 +0000
@@ -41,9 +41,11 @@
 manage_dirs_pattern(pulseaudio_t, pulseaudio_home_t, pulseaudio_home_t)
 manage_files_pattern(pulseaudio_t, pulseaudio_home_t, pulseaudio_home_t)
 userdom_search_user_home_dirs(pulseaudio_t)
+userdom_search_admin_dir(pulseaudio_t)
 
 manage_dirs_pattern(pulseaudio_t, pulseaudio_var_lib_t, pulseaudio_var_lib_t)
 manage_files_pattern(pulseaudio_t, pulseaudio_var_lib_t, pulseaudio_var_lib_t)
+manage_lnk_files_pattern(pulseaudio_t, pulseaudio_var_lib_t, pulseaudio_var_lib_t)  
 files_var_lib_filetrans(pulseaudio_t, pulseaudio_var_lib_t, { dir file })
 
 manage_dirs_pattern(pulseaudio_t, pulseaudio_var_run_t, pulseaudio_var_run_t)
@@ -118,6 +120,15 @@
 ')
 
 optional_policy(`
+	mozilla_plugin_delete_tmpfs_files(pulseaudio_t)
+	mozilla_plugin_read_tmpfs_files(pulseaudio_t)
+')
+
+optional_policy(`
+    mpd_read_tmpfs_files(pulseaudio_t)
+')
+
+optional_policy(`
 	rtkit_scheduled(pulseaudio_t)
 ')
 
@@ -128,6 +139,7 @@
 ')
 
 optional_policy(`
+	udev_read_state(pulseaudio_t)
 	udev_read_db(pulseaudio_t)
 ')
 
@@ -138,3 +150,7 @@
 	xserver_read_xdm_pid(pulseaudio_t)
 	xserver_user_x_domain_template(pulseaudio, pulseaudio_t, pulseaudio_tmpfs_t)
 ')
+
+optional_policy(`
+	sandbox_manage_tmpfs_files(pulseaudio_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/qemu.fc serefpolicy-3.7.19/policy/modules/apps/qemu.fc
--- nsaserefpolicy/policy/modules/apps/qemu.fc	2011-03-17 07:21:23.000851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/qemu.fc	2011-03-17 07:21:06.082851000 +0000
@@ -1,2 +1,4 @@
-/usr/bin/qemu.*	--	gen_context(system_u:object_r:qemu_exec_t,s0)
+/usr/bin/qemu	--	gen_context(system_u:object_r:qemu_exec_t,s0)
+/usr/bin/qemu-system-.*	--	gen_context(system_u:object_r:qemu_exec_t,s0)
+/usr/bin/qemu-kvm	--	gen_context(system_u:object_r:qemu_exec_t,s0)
 /usr/libexec/qemu.* --	gen_context(system_u:object_r:qemu_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/qemu.if serefpolicy-3.7.19/policy/modules/apps/qemu.if
--- nsaserefpolicy/policy/modules/apps/qemu.if	2011-03-17 07:21:22.942851000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/qemu.if	2012-02-28 20:24:20.783079734 +0000
@@ -127,12 +127,14 @@
 template(`qemu_role',`
 	gen_require(`
 		type qemu_t, qemu_exec_t;
+		type qemu_config_t, qemu_config_exec_t;
 	')
 
 	role $1 types { qemu_t qemu_config_t };
 
 	domtrans_pattern($2, qemu_exec_t, qemu_t)
  	domtrans_pattern($2, qemu_config_exec_t, qemu_config_t)
+	allow qemu_t $2:process signull;
 ')
 
 ########################################
@@ -153,13 +155,31 @@
 	domtrans_pattern($1, qemu_exec_t, qemu_t)
 ')
 
+#######################################
+## <summary>
+##      Execute a qemu in the callers domain
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`qemu_exec',`
+        gen_require(`
+                type qemu_exec_t;
+        ')
+
+        can_exec($1, qemu_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute qemu in the qemu domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 ## <param name="role">
@@ -167,6 +187,7 @@
 ##	The role to allow the qemu domain.
 ##	</summary>
 ## </param>
+## <rolecap/>
 #
 interface(`qemu_run',`
 	gen_require(`
@@ -175,10 +196,6 @@
 
 	qemu_domtrans($1)
 	role $2 types qemu_t;
-
-	optional_policy(`
-		samba_run_smb(qemu_t, $2, $3)
-	')
 ')
 
 ########################################
@@ -255,20 +272,44 @@
 
 ########################################
 ## <summary>
-##	Execute a domain transition to run qemu unconfined.
+##	Execute qemu_exec_t 
+##	in the specified domain but do not
+##	do it automatically. This is an explicit
+##	transition, requiring the caller to use setexeccon().
 ## </summary>
+## <desc>
+##	<p>
+##	Execute qemu_exec_t 
+##	in the specified domain.  This allows
+##	the specified domain to qemu programs
+##	on these filesystems in the specified
+##	domain.
+##	</p>
+## </desc>
 ## <param name="domain">
-## <summary>
-##	Domain allowed to transition.
-## </summary>
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="target_domain">
+##	<summary>
+##	The type of the new process.
+##	</summary>
 ## </param>
 #
-interface(`qemu_domtrans_unconfined',`
+interface(`qemu_spec_domtrans',`
 	gen_require(`
-		type unconfined_qemu_t, qemu_exec_t;
+		type qemu_exec_t;
 	')
+  
+	read_lnk_files_pattern($1, qemu_exec_t, qemu_exec_t)
+	domain_transition_pattern($1, qemu_exec_t, $2)
+  	domain_entry_file($2,qemu_exec_t)
+	can_exec($1,qemu_exec_t)
 
-	domtrans_pattern($1, qemu_exec_t, unconfined_qemu_t)
+	allow $2 $1:fd use;
+	allow $2 $1:fifo_file rw_fifo_file_perms;
+	allow $2 $1:process sigchld;
 ')
 
 ########################################
@@ -306,3 +347,24 @@
 
 	manage_files_pattern($1, qemu_tmp_t, qemu_tmp_t)
 ')
+
+########################################
+## <summary>
+##     Make qemu_exec_t an entrypoint for
+##     the specified domain.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     The domain for which qemu_exec_t is an entrypoint.
+##     </summary>
+## </param>
+#
+interface(`qemu_entry_type',`
+	gen_require(`
+		type qemu_exec_t;
+	')
+
+	domain_entry_file($1, qemu_exec_t)
+')
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/qemu.te serefpolicy-3.7.19/policy/modules/apps/qemu.te
--- nsaserefpolicy/policy/modules/apps/qemu.te	2011-03-17 07:21:22.925851001 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/qemu.te	2011-11-02 09:03:00.772108594 +0000
@@ -51,8 +51,16 @@
 # qemu local policy
 #
 
+# needed by AEOLUS
+files_read_boot_files(qemu_t)
+fs_getattr_xattr_fs(qemu_t)
+
+storage_raw_write_removable_device(qemu_t)
+storage_raw_read_removable_device(qemu_t)
+
 userdom_search_user_home_content(qemu_t)
 userdom_read_user_tmpfs_files(qemu_t)
+userdom_stream_connect(qemu_t)
 
 tunable_policy(`qemu_full_network',`
 	allow qemu_t self:udp_socket create_socket_perms;
@@ -94,22 +102,12 @@
 optional_policy(`
 	virt_manage_images(qemu_t)
 	virt_append_log(qemu_t)
+	virt_write_tmp_sock(qemu_t)
+	virt_dontaudit_write_tmp_files(qemu_t)
+	virt_read_tmp_files(qemu_t)
 ')
 
 optional_policy(`
 	xen_rw_image_files(qemu_t)
 ')
 
-########################################
-#
-# Unconfined qemu local policy
-#
-
-optional_policy(`
-	type unconfined_qemu_t;
-	typealias unconfined_qemu_t alias qemu_unconfined_t;
-	application_type(unconfined_qemu_t)
-	unconfined_domain_noaudit(unconfined_qemu_t)
-
-	allow unconfined_qemu_t self:process { execstack execmem };
-')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/rssh.if serefpolicy-3.7.19/policy/modules/apps/rssh.if
--- nsaserefpolicy/policy/modules/apps/rssh.if	2011-03-17 07:21:23.097851000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/rssh.if	2011-03-17 07:21:06.522851002 +0000
@@ -45,6 +45,25 @@
 	spec_domtrans_pattern($1, rssh_exec_t, rssh_t)
 ')
 
+#######################################
+## <summary>
+##  Execute the rssh program
+##  in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rssh_exec',`
+    gen_require(`
+        type rssh_exec_t;
+    ')
+
+    can_exec($1, rssh_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Read all users rssh read-only content.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/sambagui.fc serefpolicy-3.7.19/policy/modules/apps/sambagui.fc
--- nsaserefpolicy/policy/modules/apps/sambagui.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/sambagui.fc	2011-03-17 07:21:06.071851001 +0000
@@ -0,0 +1 @@
+/usr/share/system-config-samba/system-config-samba-mechanism.py -- gen_context(system_u:object_r:sambagui_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/sambagui.if serefpolicy-3.7.19/policy/modules/apps/sambagui.if
--- nsaserefpolicy/policy/modules/apps/sambagui.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/sambagui.if	2011-03-17 07:21:05.932851001 +0000
@@ -0,0 +1,2 @@
+## <summary>system-config-samba policy</summary>
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/sambagui.te serefpolicy-3.7.19/policy/modules/apps/sambagui.te
--- nsaserefpolicy/policy/modules/apps/sambagui.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/sambagui.te	2011-03-17 07:21:05.995851002 +0000
@@ -0,0 +1,63 @@
+policy_module(sambagui,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type sambagui_t;
+type sambagui_exec_t;
+dbus_system_domain(sambagui_t, sambagui_exec_t)
+
+########################################
+#
+# system-config-samba local policy
+#
+
+allow sambagui_t self:capability dac_override;  
+allow sambagui_t self:fifo_file rw_fifo_file_perms;
+allow sambagui_t self:unix_dgram_socket create_socket_perms;
+
+# handling with samba conf files
+samba_append_log(sambagui_t)
+samba_manage_config(sambagui_t)
+samba_manage_var_files(sambagui_t)
+samba_read_secrets(sambagui_t)
+samba_initrc_domtrans(sambagui_t)
+samba_domtrans_smbd(sambagui_t)
+samba_domtrans_nmbd(sambagui_t)
+
+# execut apps of system-config-samba
+corecmd_exec_shell(sambagui_t)
+corecmd_exec_bin(sambagui_t)
+
+files_read_etc_files(sambagui_t)
+files_read_usr_files(sambagui_t)
+files_search_var_lib(sambagui_t)
+
+auth_use_nsswitch(sambagui_t)
+
+logging_send_syslog_msg(sambagui_t)
+
+miscfiles_read_localization(sambagui_t)
+
+# read meminfo
+kernel_read_system_state(sambagui_t)
+
+dev_dontaudit_read_urand(sambagui_t)
+nscd_dontaudit_search_pid(sambagui_t)
+
+userdom_dontaudit_search_admin_dir(sambagui_t)
+
+
+optional_policy(`
+	consoletype_exec(sambagui_t)
+')
+
+optional_policy(`
+	gnome_dontaudit_search_config(sambagui_t)
+') 
+
+optional_policy(`
+	policykit_dbus_chat(sambagui_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/sandbox.fc serefpolicy-3.7.19/policy/modules/apps/sandbox.fc
--- nsaserefpolicy/policy/modules/apps/sandbox.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/sandbox.fc	2011-03-17 07:21:06.032851002 +0000
@@ -0,0 +1,2 @@
+
+/usr/share/sandbox/start --	gen_context(system_u:object_r:sandbox_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/sandbox.if serefpolicy-3.7.19/policy/modules/apps/sandbox.if
--- nsaserefpolicy/policy/modules/apps/sandbox.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/sandbox.if	2012-02-16 11:31:48.948324475 +0000
@@ -0,0 +1,323 @@
+
+## <summary>policy for sandbox</summary>
+
+########################################
+## <summary>
+##	Execute sandbox in the sandbox domain, and
+##	allow the specified role the sandbox domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the sandbox domain.
+##	</summary>
+## </param>
+#
+interface(`sandbox_transition',`
+	gen_require(`
+		type sandbox_xserver_t;
+		type sandbox_file_t;
+		attribute sandbox_domain;
+		attribute sandbox_x_domain;
+		attribute sandbox_tmpfs_type;
+	')
+
+	allow $1 sandbox_domain:process transition;
+	dontaudit $1 sandbox_domain:process { noatsecure siginh rlimitinh };
+	role $2 types sandbox_domain;
+	allow sandbox_domain $1:process { sigchld signull };
+	allow sandbox_domain $1:fifo_file rw_inherited_fifo_file_perms;
+
+	allow $1 sandbox_x_domain:process { signal_perms transition };
+	dontaudit $1 sandbox_x_domain:process { noatsecure siginh rlimitinh };
+	allow sandbox_x_domain $1:process { sigchld signull };
+	dontaudit sandbox_domain $1:process signal;
+	role $2 types sandbox_x_domain;
+	role $2 types sandbox_xserver_t;
+	allow $1 sandbox_xserver_t:process signal_perms;
+	dontaudit sandbox_xserver_t $1:fifo_file rw_inherited_fifo_file_perms;
+	dontaudit sandbox_xserver_t $1:tcp_socket rw_socket_perms;
+	dontaudit sandbox_xserver_t $1:udp_socket rw_socket_perms;
+	allow sandbox_xserver_t $1:unix_stream_socket { connectto rw_socket_perms };
+	allow sandbox_x_domain sandbox_x_domain:process signal;
+	# Dontaudit leaked file descriptors
+	dontaudit sandbox_x_domain $1:fifo_file { read write };
+	dontaudit sandbox_x_domain $1:tcp_socket rw_socket_perms;
+	dontaudit sandbox_x_domain $1:udp_socket rw_socket_perms;
+	dontaudit sandbox_x_domain $1:unix_stream_socket { read write };
+	dontaudit sandbox_x_domain $1:process { signal sigkill };
+	
+	allow $1 sandbox_tmpfs_type:file manage_file_perms;
+	dontaudit $1 sandbox_tmpfs_type:file manage_file_perms;
+
+	can_exec($1, sandbox_file_t)
+	allow $1 sandbox_file_t:filesystem getattr;
+	manage_files_pattern($1, sandbox_file_t, sandbox_file_t);
+	manage_dirs_pattern($1, sandbox_file_t, sandbox_file_t);
+	manage_sock_files_pattern($1, sandbox_file_t, sandbox_file_t);
+	manage_fifo_files_pattern($1, sandbox_file_t, sandbox_file_t);
+	manage_lnk_files_pattern($1, sandbox_file_t, sandbox_file_t);
+	relabel_dirs_pattern($1, sandbox_file_t, sandbox_file_t)
+	relabel_files_pattern($1, sandbox_file_t, sandbox_file_t)
+	relabel_lnk_files_pattern($1, sandbox_file_t, sandbox_file_t)
+	relabel_fifo_files_pattern($1, sandbox_file_t, sandbox_file_t)
+	relabel_sock_files_pattern($1, sandbox_file_t, sandbox_file_t)
+')
+
+########################################
+## <summary>
+##	Creates types and rules for a basic
+##	sandbox process domain.
+## </summary>
+## <param name="prefix">
+##	<summary>
+##	Prefix for the domain.
+##	</summary>
+## </param>
+#
+template(`sandbox_domain_template',`
+
+	gen_require(`
+		attribute sandbox_domain;
+		type sandbox_file_t;
+		attribute sandbox_type;
+	')
+	type $1_t, sandbox_domain, sandbox_type;
+
+	application_type($1_t)
+
+	mls_rangetrans_target($1_t)
+	mcs_untrusted_proc($1_t)
+')
+
+########################################
+## <summary>
+##	Creates types and rules for a basic
+##	sandbox process domain.
+## </summary>
+## <param name="prefix">
+##	<summary>
+##	Prefix for the domain.
+##	</summary>
+## </param>
+#
+template(`sandbox_x_domain_template',`
+	gen_require(`
+		type xserver_exec_t, sandbox_devpts_t;
+		type sandbox_xserver_t;
+		type sandbox_exec_t;
+		attribute sandbox_domain, sandbox_x_domain;
+		attribute sandbox_tmpfs_type;
+		attribute sandbox_type;
+	')
+
+	type $1_t, sandbox_x_domain, sandbox_type;
+	application_type($1_t)
+	mcs_untrusted_proc($1_t)
+
+	# window manager
+	miscfiles_setattr_fonts_cache_dirs($1_t)
+	allow $1_t self:capability setuid;
+
+	type $1_client_t, sandbox_x_domain;
+	application_type($1_client_t)
+	mcs_untrusted_proc($1_t)
+
+	type $1_client_tmpfs_t, sandbox_tmpfs_type;
+	files_tmpfs_file($1_client_tmpfs_t)
+
+	manage_files_pattern($1_client_t, $1_client_tmpfs_t, $1_client_tmpfs_t)
+	manage_files_pattern($1_t, $1_client_tmpfs_t, $1_client_tmpfs_t)
+	fs_tmpfs_filetrans($1_client_t, $1_client_tmpfs_t, file )
+	fs_tmpfs_filetrans($1_t, $1_client_tmpfs_t, file )
+	# Pulseaudio tmpfs files with different MCS labels
+	dontaudit $1_client_t $1_client_tmpfs_t:file { read write };
+	dontaudit $1_t $1_client_tmpfs_t:file { read write };
+	allow sandbox_xserver_t $1_client_tmpfs_t:file { read write };
+
+	domtrans_pattern($1_t, xserver_exec_t, sandbox_xserver_t)
+	allow $1_t sandbox_xserver_t:process signal_perms;
+
+	domtrans_pattern($1_t, sandbox_exec_t, $1_client_t)
+	domain_entry_file($1_client_t,  sandbox_exec_t)
+
+	# Random tmpfs_t that gets created when you run X. 
+	fs_rw_tmpfs_files($1_t)
+
+	ps_process_pattern(sandbox_xserver_t, $1_client_t)
+	ps_process_pattern(sandbox_xserver_t, $1_t)
+	allow sandbox_xserver_t $1_client_t:shm rw_shm_perms;
+	allow sandbox_xserver_t $1_t:shm rw_shm_perms;
+	allow $1_client_t $1_t:unix_stream_socket connectto;
+	allow $1_t $1_client_t:unix_stream_socket connectto;
+')
+
+########################################
+## <summary>
+##	allow domain to read, 
+##	write sandbox_xserver tmp files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`sandbox_rw_xserver_tmpfs_files',`
+	gen_require(`
+		type sandbox_xserver_tmpfs_t;
+	')
+
+	allow $1 sandbox_xserver_tmpfs_t:file rw_file_perms;
+')
+
+########################################
+## <summary>
+##	allow domain to read
+##	sandbox tmpfs files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`sandbox_read_tmpfs_files',`
+	gen_require(`
+		attribute sandbox_tmpfs_type;
+	')
+
+	allow $1 sandbox_tmpfs_type:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	allow domain to manage
+##	sandbox tmpfs files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`sandbox_manage_tmpfs_files',`
+	gen_require(`
+		attribute sandbox_tmpfs_type;
+	')
+
+	allow $1 sandbox_tmpfs_type:file manage_file_perms;
+')
+
+########################################
+## <summary>
+##	Delete sandbox files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`sandbox_delete_files',`
+	gen_require(`
+		type sandbox_file_t;
+	')
+
+	delete_files_pattern($1, sandbox_file_t, sandbox_file_t)
+')
+
+########################################
+## <summary>
+##	Delete sandbox sock files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`sandbox_delete_sock_files',`
+	gen_require(`
+		type sandbox_file_t;
+	')
+
+	delete_sock_files_pattern($1, sandbox_file_t, sandbox_file_t)
+')
+
+########################################
+## <summary>
+##	Allow domain to  set the attributes
+##	of the sandbox directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`sandbox_setattr_dirs',`
+	gen_require(`
+		type sandbox_file_t;
+	')
+
+	allow $1 sandbox_file_t:dir setattr;
+')
+
+########################################
+## <summary>
+##	allow domain to delete sandbox files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`sandbox_delete_dirs',`
+	gen_require(`
+		type sandbox_file_t;
+	')
+
+	delete_dirs_pattern($1, sandbox_file_t, sandbox_file_t)
+')
+
+########################################
+## <summary>
+##	allow domain to list sandbox dirs
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`sandbox_list',`
+	gen_require(`
+		type sandbox_file_t;
+	')
+
+	allow $1 sandbox_file_t:dir list_dir_perms;
+')
+
+#######################################
+## <summary>
+##  Read and write a sandbox domain pty.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`sandbox_use_ptys',`
+    gen_require(`
+        type sandbox_devpts_t;
+    ')
+
+    allow $1 sandbox_devpts_t:chr_file rw_inherited_term_perms;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/sandbox.te serefpolicy-3.7.19/policy/modules/apps/sandbox.te
--- nsaserefpolicy/policy/modules/apps/sandbox.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/sandbox.te	2012-03-02 10:01:33.144465134 +0000
@@ -0,0 +1,486 @@
+policy_module(sandbox,1.0.0)
+dbus_stub()
+attribute sandbox_domain;
+attribute sandbox_x_domain;
+attribute sandbox_web_type;
+attribute sandbox_file_type;
+attribute sandbox_tmpfs_type;
+attribute sandbox_type;
+
+type sandbox_exec_t;
+files_type(sandbox_exec_t)
+
+type sandbox_file_t, sandbox_file_type;
+files_type(sandbox_file_t)
+typealias sandbox_file_t alias { sandbox_x_file_t sandbox_web_file_t sandbox_net_file_t sandbox_min_file_t };
+
+########################################
+#
+# Declarations
+#
+
+sandbox_domain_template(sandbox)
+sandbox_x_domain_template(sandbox_min)
+sandbox_x_domain_template(sandbox_x)
+sandbox_x_domain_template(sandbox_web)
+sandbox_x_domain_template(sandbox_net)
+
+type sandbox_xserver_t;
+domain_type(sandbox_xserver_t)
+xserver_user_x_domain_template(sandbox_xserver, sandbox_xserver_t, sandbox_xserver_tmpfs_t)
+
+type sandbox_xserver_tmpfs_t;
+files_tmpfs_file(sandbox_xserver_tmpfs_t)
+
+type sandbox_devpts_t;
+term_pty(sandbox_devpts_t)
+files_type(sandbox_devpts_t)
+
+########################################
+#
+# sandbox xserver policy
+#
+allow sandbox_xserver_t self:process { signal_perms execmem execstack };
+allow sandbox_xserver_t self:fifo_file manage_fifo_file_perms;
+allow sandbox_xserver_t self:shm create_shm_perms;
+allow sandbox_xserver_t self:tcp_socket create_stream_socket_perms;
+
+manage_dirs_pattern(sandbox_xserver_t, sandbox_file_t, sandbox_file_t)
+manage_files_pattern(sandbox_xserver_t, sandbox_file_t, sandbox_file_t)
+manage_sock_files_pattern(sandbox_xserver_t, sandbox_file_t, sandbox_file_t)
+allow sandbox_xserver_t sandbox_file_t:sock_file create_sock_file_perms;
+
+manage_dirs_pattern(sandbox_xserver_t, sandbox_xserver_tmpfs_t, sandbox_xserver_tmpfs_t)
+manage_files_pattern(sandbox_xserver_t, sandbox_xserver_tmpfs_t, sandbox_xserver_tmpfs_t)
+manage_lnk_files_pattern(sandbox_xserver_t, sandbox_xserver_tmpfs_t, sandbox_xserver_tmpfs_t)
+manage_fifo_files_pattern(sandbox_xserver_t, sandbox_xserver_tmpfs_t, sandbox_xserver_tmpfs_t)
+manage_sock_files_pattern(sandbox_xserver_t, sandbox_xserver_tmpfs_t, sandbox_xserver_tmpfs_t)
+fs_tmpfs_filetrans(sandbox_xserver_t, sandbox_xserver_tmpfs_t, { dir file lnk_file sock_file fifo_file })
+
+kernel_dontaudit_request_load_module(sandbox_xserver_t)
+
+corecmd_exec_bin(sandbox_xserver_t)
+corecmd_exec_shell(sandbox_xserver_t)
+
+corenet_all_recvfrom_unlabeled(sandbox_xserver_t)
+corenet_all_recvfrom_netlabel(sandbox_xserver_t)
+corenet_tcp_sendrecv_all_if(sandbox_xserver_t)
+corenet_udp_sendrecv_all_if(sandbox_xserver_t)
+corenet_tcp_sendrecv_all_nodes(sandbox_xserver_t)
+corenet_udp_sendrecv_all_nodes(sandbox_xserver_t)
+corenet_tcp_sendrecv_all_ports(sandbox_xserver_t)
+corenet_udp_sendrecv_all_ports(sandbox_xserver_t)
+corenet_tcp_bind_all_nodes(sandbox_xserver_t)
+corenet_tcp_bind_xserver_port(sandbox_xserver_t)
+corenet_sendrecv_xserver_server_packets(sandbox_xserver_t)
+corenet_sendrecv_all_client_packets(sandbox_xserver_t)
+
+dev_rwx_zero(sandbox_xserver_t)
+
+files_read_config_files(sandbox_xserver_t)
+files_read_usr_files(sandbox_xserver_t)
+files_search_home(sandbox_xserver_t)
+fs_dontaudit_rw_tmpfs_files(sandbox_xserver_t)
+fs_list_inotifyfs(sandbox_xserver_t)
+fs_search_auto_mountpoints(sandbox_xserver_t)
+
+miscfiles_read_fonts(sandbox_xserver_t)
+miscfiles_read_localization(sandbox_xserver_t)
+
+kernel_read_system_state(sandbox_xserver_t)
+
+selinux_validate_context(sandbox_xserver_t)
+selinux_compute_access_vector(sandbox_xserver_t)
+selinux_compute_create_context(sandbox_xserver_t)
+
+auth_use_nsswitch(sandbox_xserver_t)
+
+logging_send_syslog_msg(sandbox_xserver_t)
+logging_send_audit_msgs(sandbox_xserver_t)
+
+userdom_use_user_terminals(sandbox_xserver_t)
+userdom_dontaudit_search_user_home_content(sandbox_xserver_t)
+
+xserver_entry_type(sandbox_xserver_t)
+
+optional_policy(`
+	dbus_system_bus_client(sandbox_xserver_t)
+
+	optional_policy(`
+		hal_dbus_chat(sandbox_xserver_t)
+	')
+')
+
+########################################
+#
+# sandbox local policy
+#
+
+allow sandbox_domain self:fifo_file manage_file_perms;
+allow sandbox_domain self:sem create_sem_perms;
+allow sandbox_domain self:shm create_shm_perms;
+allow sandbox_domain self:msgq create_msgq_perms;
+allow sandbox_domain self:unix_stream_socket create_stream_socket_perms;
+allow sandbox_domain self:unix_dgram_socket { sendto create_socket_perms };
+dontaudit sandbox_domain self:netlink_audit_socket { create_netlink_socket_perms nlmsg_relay };
+
+dev_rw_all_inherited_chr_files(sandbox_domain)
+dev_rw_all_inherited_blk_files(sandbox_domain)
+
+can_exec(sandbox_domain, sandbox_file_t)
+allow sandbox_domain sandbox_file_t:filesystem getattr;
+manage_files_pattern(sandbox_domain, sandbox_file_t, sandbox_file_t);
+manage_dirs_pattern(sandbox_domain, sandbox_file_t, sandbox_file_t);
+manage_sock_files_pattern(sandbox_domain, sandbox_file_t, sandbox_file_t);
+manage_fifo_files_pattern(sandbox_domain, sandbox_file_t, sandbox_file_t);
+manage_lnk_files_pattern(sandbox_domain, sandbox_file_t, sandbox_file_t);
+dontaudit sandbox_domain sandbox_file_t:dir mounton;
+
+gen_require(`
+	type usr_t, lib_t, locale_t;
+	type var_t, var_run_t, rpm_log_t, locale_t;
+	attribute exec_type, configfile;
+')
+
+files_rw_all_inherited_files(sandbox_domain, -exec_type -configfile -usr_t -lib_t -locale_t -var_t -var_run_t -device_t -rpm_log_t )
+files_entrypoint_all_files(sandbox_domain)
+
+files_read_config_files(sandbox_domain)
+files_read_usr_files(sandbox_domain)
+files_read_var_files(sandbox_domain)
+files_dontaudit_search_all_dirs(sandbox_domain)
+files_dontaudit_list_all_mountpoints(sandbox_x_domain)
+
+miscfiles_read_localization(sandbox_domain)
+
+kernel_dontaudit_read_system_state(sandbox_domain)
+corecmd_exec_all_executables(sandbox_domain)
+
+userdom_dontaudit_use_user_terminals(sandbox_domain)
+
+mta_dontaudit_read_spool_symlinks(sandbox_domain)
+
+########################################
+#
+# sandbox_x_domain local policy
+#
+allow sandbox_x_domain self:fifo_file manage_file_perms;
+allow sandbox_x_domain self:sem create_sem_perms;
+allow sandbox_x_domain self:shm create_shm_perms;
+allow sandbox_x_domain self:msgq create_msgq_perms;
+allow sandbox_x_domain self:unix_stream_socket create_stream_socket_perms;
+allow sandbox_x_domain self:unix_dgram_socket { sendto create_socket_perms };
+
+allow sandbox_x_domain self:unix_stream_socket create_stream_socket_perms;
+
+allow sandbox_x_domain self:process { signal_perms getsched setsched setpgid execstack execmem };
+dontaudit sandbox_x_domain sandbox_x_domain:process signal;
+dontaudit sandbox_x_domain sandbox_xserver_t:process signal;
+
+allow sandbox_x_domain self:shm create_shm_perms;
+allow sandbox_x_domain self:unix_stream_socket { connectto create_stream_socket_perms };
+allow sandbox_x_domain self:unix_dgram_socket { sendto create_socket_perms };
+allow sandbox_x_domain sandbox_xserver_t:unix_stream_socket connectto;
+dontaudit sandbox_x_domain self:netlink_audit_socket { create_netlink_socket_perms nlmsg_relay };
+dontaudit sandbox_x_domain sandbox_file_t:dir mounton;
+
+allow sandbox_x_domain sandbox_devpts_t:chr_file { rw_term_perms setattr };
+term_create_pty(sandbox_x_domain,sandbox_devpts_t)
+
+can_exec(sandbox_x_domain, sandbox_file_t)
+allow sandbox_x_domain sandbox_file_t:filesystem getattr;
+manage_files_pattern(sandbox_x_domain, sandbox_file_t, sandbox_file_t);
+manage_dirs_pattern(sandbox_x_domain, sandbox_file_t, sandbox_file_t);
+manage_sock_files_pattern(sandbox_x_domain, sandbox_file_t, sandbox_file_t);
+manage_fifo_files_pattern(sandbox_x_domain, sandbox_file_t, sandbox_file_t);
+manage_lnk_files_pattern(sandbox_x_domain, sandbox_file_t, sandbox_file_t);
+
+domain_dontaudit_read_all_domains_state(sandbox_x_domain)
+
+files_search_home(sandbox_x_domain)
+files_dontaudit_list_tmp(sandbox_x_domain)
+
+kernel_getattr_proc(sandbox_x_domain)
+kernel_read_network_state(sandbox_x_domain)
+kernel_read_system_state(sandbox_x_domain)
+
+corecmd_exec_all_executables(sandbox_x_domain)
+
+dev_read_urand(sandbox_x_domain)
+dev_dontaudit_read_rand(sandbox_x_domain)
+dev_read_sysfs(sandbox_x_domain)
+dev_dontaudit_rw_dri(sandbox_x_domain)
+
+files_entrypoint_all_files(sandbox_x_domain)
+files_read_config_files(sandbox_x_domain)
+files_read_usr_files(sandbox_x_domain)
+files_read_usr_symlinks(sandbox_x_domain)
+
+fs_getattr_tmpfs(sandbox_x_domain)
+fs_getattr_xattr_fs(sandbox_x_domain)
+fs_list_inotifyfs(sandbox_x_domain)
+fs_dontaudit_getattr_xattr_fs(sandbox_x_domain)
+
+auth_dontaudit_read_login_records(sandbox_x_domain)
+auth_dontaudit_write_login_records(sandbox_x_domain)
+auth_use_nsswitch(sandbox_x_domain)
+auth_search_pam_console_data(sandbox_x_domain)
+
+init_read_utmp(sandbox_x_domain)
+init_dontaudit_write_utmp(sandbox_x_domain)
+
+miscfiles_read_localization(sandbox_x_domain)
+miscfiles_dontaudit_setattr_fonts_cache_dirs(sandbox_x_domain)
+
+mta_dontaudit_read_spool_symlinks(sandbox_x_domain)
+
+selinux_get_fs_mount(sandbox_x_domain)
+selinux_validate_context(sandbox_x_domain)
+selinux_compute_access_vector(sandbox_x_domain)
+selinux_compute_create_context(sandbox_x_domain)
+selinux_compute_relabel_context(sandbox_x_domain)
+selinux_compute_user_contexts(sandbox_x_domain)
+seutil_read_default_contexts(sandbox_x_domain)
+
+term_getattr_pty_fs(sandbox_x_domain)
+term_use_ptmx(sandbox_x_domain)
+term_search_ptys(sandbox_x_domain)
+
+application_dontaudit_signal(sandbox_x_domain)
+application_dontaudit_sigkill(sandbox_x_domain)
+
+logging_send_syslog_msg(sandbox_x_domain)
+logging_dontaudit_search_logs(sandbox_x_domain)
+
+miscfiles_read_fonts(sandbox_x_domain)
+
+storage_dontaudit_rw_fuse(sandbox_x_domain)
+
+optional_policy(`
+	consolekit_dbus_chat(sandbox_x_domain)
+')
+
+optional_policy(`
+	cups_stream_connect(sandbox_x_domain)
+	cups_read_rw_config(sandbox_x_domain)
+')
+
+optional_policy(`
+	devicekit_dontaudit_dbus_chat_disk(sandbox_x_domain)
+')
+
+optional_policy(`
+	dbus_system_bus_client(sandbox_x_domain)
+')
+
+optional_policy(`
+	gnome_read_gconf_config(sandbox_x_domain)
+')
+
+optional_policy(`
+	nscd_dontaudit_search_pid(sandbox_x_domain)
+')
+
+optional_policy(`
+	sssd_dontaudit_search_lib(sandbox_x_domain)
+')
+
+optional_policy(`
+	udev_read_db(sandbox_x_domain)
+')
+
+userdom_dontaudit_use_user_terminals(sandbox_x_domain)
+userdom_read_user_home_content_symlinks(sandbox_x_domain)
+userdom_search_user_home_content(sandbox_x_domain)
+
+fs_search_auto_mountpoints(sandbox_x_domain)
+
+tunable_policy(`use_nfs_home_dirs',`
+	fs_search_auto_mountpoints(sandbox_x_domain)
+	fs_search_nfs(sandbox_xserver_t)
+	fs_read_nfs_files(sandbox_xserver_t)
+	fs_manage_nfs_dirs(sandbox_x_domain)
+	fs_manage_nfs_files(sandbox_x_domain)
+	fs_exec_nfs_files(sandbox_x_domain)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+	fs_search_cifs(sandbox_xserver_t)
+	fs_read_cifs_files(sandbox_xserver_t)
+	fs_manage_cifs_dirs(sandbox_x_domain)
+	fs_manage_cifs_files(sandbox_x_domain)
+	fs_exec_cifs_files(sandbox_x_domain)
+')
+
+tunable_policy(`use_fusefs_home_dirs',`
+	fs_search_fusefs(sandbox_xserver_t)
+	fs_read_fusefs_files(sandbox_xserver_t)
+	fs_manage_fusefs_dirs(sandbox_x_domain)
+	fs_manage_fusefs_files(sandbox_x_domain)
+	fs_exec_fusefs_files(sandbox_x_domain)
+')
+
+files_search_home(sandbox_x_t)
+userdom_use_user_ptys(sandbox_x_t)
+
+########################################
+#
+# sandbox_x_client_t local policy
+#
+allow sandbox_x_client_t self:tcp_socket create_stream_socket_perms;
+allow sandbox_x_client_t self:udp_socket create_socket_perms;
+allow sandbox_x_client_t self:dbus { acquire_svc send_msg };
+allow sandbox_x_client_t self:netlink_selinux_socket create_socket_perms;
+
+dev_read_rand(sandbox_x_client_t)
+
+corenet_tcp_connect_ipp_port(sandbox_x_client_t)
+
+auth_use_nsswitch(sandbox_x_client_t)
+
+optional_policy(`
+	hal_dbus_chat(sandbox_x_client_t)
+')
+
+optional_policy(`
+	nsplugin_read_rw_files(sandbox_x_client_t)
+')
+
+########################################
+#
+# sandbox_web_client_t local policy
+#
+typeattribute sandbox_web_client_t sandbox_web_type;
+
+allow sandbox_web_type self:capability { setuid setgid };
+allow sandbox_web_type self:netlink_audit_socket nlmsg_relay;
+dontaudit sandbox_web_type self:process setrlimit;
+
+allow sandbox_web_type self:tcp_socket create_stream_socket_perms;
+allow sandbox_web_type self:udp_socket create_socket_perms;
+allow sandbox_web_type self:dbus { acquire_svc send_msg };
+allow sandbox_web_type self:netlink_selinux_socket create_socket_perms;
+
+kernel_dontaudit_search_kernel_sysctl(sandbox_web_type)
+kernel_request_load_module(sandbox_web_type)
+
+dev_read_rand(sandbox_web_type)
+dev_write_sound(sandbox_web_type)
+dev_read_sound(sandbox_web_type)
+
+corenet_all_recvfrom_unlabeled(sandbox_web_type)
+corenet_all_recvfrom_netlabel(sandbox_web_type)
+corenet_tcp_sendrecv_all_if(sandbox_web_type)
+corenet_raw_sendrecv_all_if(sandbox_web_type)
+corenet_tcp_sendrecv_all_nodes(sandbox_web_type)
+corenet_raw_sendrecv_all_nodes(sandbox_web_type)
+corenet_tcp_sendrecv_http_port(sandbox_web_type)
+corenet_tcp_sendrecv_http_cache_port(sandbox_web_type)
+corenet_tcp_sendrecv_squid_port(sandbox_web_type)
+corenet_tcp_sendrecv_ftp_port(sandbox_web_type)
+corenet_tcp_sendrecv_ipp_port(sandbox_web_type)
+corenet_tcp_connect_http_port(sandbox_web_type)
+corenet_tcp_connect_http_cache_port(sandbox_web_type)
+corenet_tcp_connect_squid_port(sandbox_web_type)
+corenet_tcp_connect_flash_port(sandbox_web_type)
+corenet_tcp_connect_ftp_port(sandbox_web_type)
+corenet_tcp_connect_ipp_port(sandbox_web_type)
+corenet_tcp_connect_streaming_port(sandbox_web_type)
+corenet_tcp_connect_pulseaudio_port(sandbox_web_type)
+corenet_tcp_connect_speech_port(sandbox_web_type)
+corenet_tcp_connect_generic_port(sandbox_web_type)
+corenet_tcp_connect_soundd_port(sandbox_web_type)
+corenet_tcp_connect_speech_port(sandbox_web_type)
+corenet_sendrecv_http_client_packets(sandbox_web_type)
+corenet_sendrecv_http_cache_client_packets(sandbox_web_type)
+corenet_sendrecv_squid_client_packets(sandbox_web_type)
+corenet_sendrecv_ftp_client_packets(sandbox_web_type)
+corenet_sendrecv_ipp_client_packets(sandbox_web_type)
+corenet_sendrecv_generic_client_packets(sandbox_web_type)
+
+corenet_dontaudit_tcp_sendrecv_generic_port(sandbox_web_type)
+corenet_dontaudit_tcp_bind_generic_port(sandbox_web_type)
+
+files_dontaudit_getattr_all_dirs(sandbox_web_type)
+files_dontaudit_list_mnt(sandbox_web_type)
+
+# the bug in pulseaudio, needed by fedora13
+fs_rw_anon_inodefs_files(sandbox_web_type)
+#fs_dontaudit_rw_anon_inodefs_files(sandbox_web_type)
+fs_dontaudit_getattr_all_fs(sandbox_web_type)
+
+storage_dontaudit_getattr_fixed_disk_dev(sandbox_web_type)
+
+auth_use_nsswitch(sandbox_web_type)
+
+dbus_system_bus_client(sandbox_web_type)
+dbus_read_config(sandbox_web_type)
+selinux_get_fs_mount(sandbox_web_type)
+selinux_validate_context(sandbox_web_type)
+selinux_compute_access_vector(sandbox_web_type)
+selinux_compute_create_context(sandbox_web_type)
+selinux_compute_relabel_context(sandbox_web_type)
+selinux_compute_user_contexts(sandbox_web_type)
+seutil_read_default_contexts(sandbox_web_type)
+
+userdom_rw_user_tmpfs_files(sandbox_web_type)
+userdom_delete_user_tmpfs_files(sandbox_web_type)
+
+optional_policy(`
+	alsa_read_rw_config(sandbox_web_type)
+')
+
+optional_policy(`
+	bluetooth_dontaudit_dbus_chat(sandbox_web_type)
+')
+
+optional_policy(`
+	hal_dbus_chat(sandbox_web_type)
+')
+
+optional_policy(`
+	nsplugin_manage_rw(sandbox_web_type)
+	nsplugin_read_rw_files(sandbox_web_type)
+	nsplugin_rw_exec(sandbox_web_type)
+')
+
+optional_policy(`
+	pulseaudio_stream_connect(sandbox_web_type)
+	allow sandbox_web_type self:netlink_kobject_uevent_socket create_socket_perms;
+')
+
+optional_policy(`
+	rtkit_daemon_dontaudit_dbus_chat(sandbox_web_type)
+')
+
+optional_policy(`
+	networkmanager_dontaudit_dbus_chat(sandbox_web_type)
+')
+
+optional_policy(`
+	udev_read_state(sandbox_web_type)
+')
+
+########################################
+#
+# sandbox_net_client_t local policy
+#
+typeattribute sandbox_net_client_t sandbox_web_type;
+
+corenet_all_recvfrom_unlabeled(sandbox_net_client_t)
+corenet_all_recvfrom_netlabel(sandbox_net_client_t)
+corenet_tcp_sendrecv_all_if(sandbox_net_client_t)
+corenet_udp_sendrecv_all_if(sandbox_net_client_t)
+corenet_tcp_sendrecv_all_nodes(sandbox_net_client_t)
+corenet_udp_sendrecv_all_nodes(sandbox_net_client_t)
+corenet_tcp_sendrecv_all_ports(sandbox_net_client_t)
+corenet_udp_sendrecv_all_ports(sandbox_net_client_t)
+corenet_tcp_connect_all_ports(sandbox_net_client_t)
+corenet_sendrecv_all_client_packets(sandbox_net_client_t)
+
+optional_policy(`
+	mozilla_dontaudit_rw_user_home_files(sandbox_x_t)
+	mozilla_dontaudit_rw_user_home_files(sandbox_xserver_t)
+	mozilla_dontaudit_rw_user_home_files(sandbox_x_domain)
+	mozilla_plugin_dontaudit_leaks(sandbox_x_domain)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/screen.fc serefpolicy-3.7.19/policy/modules/apps/screen.fc
--- nsaserefpolicy/policy/modules/apps/screen.fc	2011-03-17 07:21:23.111851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/screen.fc	2011-03-17 07:21:06.561851001 +0000
@@ -2,6 +2,9 @@
 # /home
 #
 HOME_DIR/\.screenrc		--	gen_context(system_u:object_r:screen_home_t,s0)
+HOME_DIR/\.screen(/.*)?		gen_context(system_u:object_r:screen_home_t,s0)
+
+/root/\.screen(/.*)?            gen_context(system_u:object_r:screen_home_t,s0)
 
 #
 # /usr
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/screen.if serefpolicy-3.7.19/policy/modules/apps/screen.if
--- nsaserefpolicy/policy/modules/apps/screen.if	2011-03-17 07:21:22.951851000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/screen.if	2011-09-26 12:03:01.948160000 +0000
@@ -64,6 +64,10 @@
 	files_pid_filetrans($1_screen_t, screen_var_run_t, dir)
 
 	allow $1_screen_t screen_home_t:dir list_dir_perms;
+	manage_dirs_pattern($1_screen_t, screen_home_t, screen_home_t)
+    manage_fifo_files_pattern($1_screen_t, screen_home_t, screen_home_t)
+    userdom_user_home_dir_filetrans($1_screen_t, screen_home_t, dir)
+	userdom_admin_home_dir_filetrans($1_screen_t, screen_home_t, dir)
 	read_files_pattern($1_screen_t, screen_home_t, screen_home_t)
 	read_lnk_files_pattern($1_screen_t, screen_home_t, screen_home_t)
 
@@ -113,6 +117,8 @@
 	dev_read_urand($1_screen_t)
 
 	domain_use_interactive_fds($1_screen_t)
+	domain_sigchld_interactive_fds($1_screen_t)
+	domain_read_all_domains_state($1_screen_t)
 
 	files_search_tmp($1_screen_t)
 	files_search_home($1_screen_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/seunshare.if serefpolicy-3.7.19/policy/modules/apps/seunshare.if
--- nsaserefpolicy/policy/modules/apps/seunshare.if	2011-03-17 07:21:23.024851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/seunshare.if	2011-04-11 09:42:01.330000002 +0000
@@ -2,59 +2,14 @@
 
 ########################################
 ## <summary>
-##	Execute a domain transition to run seunshare.
+##	The role template for the seunshare module.
 ## </summary>
-## <param name="domain">
-## <summary>
-##	Domain allowed to transition.
-## </summary>
-## </param>
-#
-interface(`seunshare_domtrans',`
-	gen_require(`
-		type seunshare_t, seunshare_exec_t;
-	')
-
-	domtrans_pattern($1, seunshare_exec_t, seunshare_t)
-')
-
-########################################
-## <summary>
-##	Execute seunshare in the seunshare domain, and
-##	allow the specified role the seunshare domain.
-## </summary>
-## <param name="domain">
+## <param name="role_prefix">
 ##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-## <param name="role">
-##	<summary>
-##	Role allowed access.
+##	The prefix of the user role (e.g., user
+##	is the prefix for user_r).
 ##	</summary>
 ## </param>
-#
-interface(`seunshare_run',`
-	gen_require(`
-		type seunshare_t;
-	')
-
-	seunshare_domtrans($1)
-	role $2 types seunshare_t;
-
-	allow $1 seunshare_t:process signal_perms;
-
-	ifdef(`hide_broken_symptoms', `
-		dontaudit seunshare_t $1:tcp_socket rw_socket_perms;
-		dontaudit seunshare_t $1:udp_socket rw_socket_perms;
-		dontaudit seunshare_t $1:unix_stream_socket rw_socket_perms;
-	')
-')
-
-########################################
-## <summary>
-##	Role access for seunshare
-## </summary>
 ## <param name="role">
 ##	<summary>
 ##	Role allowed access.
@@ -66,15 +21,31 @@
 ##	</summary>
 ## </param>
 #
-interface(`seunshare_role',`
+interface(`seunshare_role_template',`
 	gen_require(`
-		type seunshare_t;
+		attribute seunshare_domain;
+		type seunshare_exec_t;
 	')
 
-	role $2 types seunshare_t;
+	type $1_seunshare_t, seunshare_domain;
+	application_domain($1_seunshare_t, seunshare_exec_t)
+	role $2 types $1_seunshare_t;
+
+	mls_process_set_level($1_seunshare_t)
+
+	domtrans_pattern($3, seunshare_exec_t, $1_seunshare_t)
+	sandbox_transition($1_seunshare_t, $2)
 
-	seunshare_domtrans($1)
+	ps_process_pattern($3, $1_seunshare_t)
+	allow $3 $1_seunshare_t:process signal_perms;
 
-	ps_process_pattern($2, seunshare_t)
-	allow $2 seunshare_t:process signal;
+	allow $1_seunshare_t $3:process transition;
+	dontaudit $1_seunshare_t $3:process { noatsecure siginh rlimitinh };
+
+	corecmd_bin_domtrans($1_seunshare_t, $1_t)
+	corecmd_shell_domtrans($1_seunshare_t, $1_t)
+
+	ifdef(`hide_broken_symptoms', `
+		dontaudit $1_seunshare_t $3:socket_class_set { read write };
+	')
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/seunshare.te serefpolicy-3.7.19/policy/modules/apps/seunshare.te
--- nsaserefpolicy/policy/modules/apps/seunshare.te	2011-03-17 07:21:23.032851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/seunshare.te	2012-01-25 19:33:37.365554640 +0000
@@ -1,45 +1,65 @@
-
-policy_module(seunshare, 1.0.1)
+policy_module(seunshare, 1.1.0)
 
 ########################################
 #
 # Declarations
 #
 
-type seunshare_t;
+attribute seunshare_domain;
 type seunshare_exec_t;
-application_domain(seunshare_t, seunshare_exec_t)
-role system_r types seunshare_t;
 
 ########################################
 #
 # seunshare local policy
 #
+allow seunshare_domain self:capability { fowner setgid setuid dac_override setpcap sys_admin sys_nice };
+allow seunshare_domain self:process { fork setexec signal getcap setcap setsched };
+
+allow seunshare_domain self:fifo_file rw_file_perms;
+allow seunshare_domain self:unix_stream_socket create_stream_socket_perms;
 
-allow seunshare_t self:capability { setuid dac_override setpcap sys_admin };
-allow seunshare_t self:process { setexec signal getcap setcap };
+kernel_read_system_state(seunshare_domain)
 
-allow seunshare_t self:fifo_file rw_file_perms;
-allow seunshare_t self:unix_stream_socket create_stream_socket_perms;
+corecmd_exec_shell(seunshare_domain)
+corecmd_exec_bin(seunshare_domain)
 
-corecmd_exec_shell(seunshare_t)
-corecmd_exec_bin(seunshare_t)
+files_search_all(seunshare_domain)
+files_read_etc_files(seunshare_domain)
+files_mounton_all_poly_members(seunshare_domain)
+files_manage_generic_tmp_dirs(seunshare_domain)
+files_relabelfrom_tmp_dirs(seunshare_domain)
 
-files_read_etc_files(seunshare_t)
-files_mounton_all_poly_members(seunshare_t)
+fs_manage_cgroup_dirs(seunshare_domain)
+fs_manage_cgroup_files(seunshare_domain)
 
-auth_use_nsswitch(seunshare_t)
+auth_use_nsswitch(seunshare_domain)
 
-logging_send_syslog_msg(seunshare_t)
+logging_send_syslog_msg(seunshare_domain)
 
-miscfiles_read_localization(seunshare_t)
+miscfiles_read_localization(seunshare_domain)
 
-userdom_use_user_terminals(seunshare_t)
+userdom_use_user_terminals(seunshare_domain)
+userdom_list_user_home_content(seunshare_domain)
+
+tunable_policy(`use_nfs_home_dirs',`
+       fs_mounton_nfs(seunshare_domain)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+       fs_mounton_cifs(seunshare_domain)
+')
+
+tunable_policy(`use_fusefs_home_dirs',`
+       fs_mounton_fusefs(seunshare_domain)
+')
 
 ifdef(`hide_broken_symptoms', `
-	fs_dontaudit_rw_anon_inodefs_files(seunshare_t)
+	fs_dontaudit_rw_anon_inodefs_files(seunshare_domain)
+ 	fs_dontaudit_list_inotifyfs(seunshare_domain)
 
 	optional_policy(`
-		mozilla_dontaudit_manage_user_home_files(seunshare_t)
+		mozilla_dontaudit_manage_user_home_files(seunshare_domain)
+		mozilla_plugin_dontaudit_leaks(seunshare_domain)
 	')
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/slocate.te serefpolicy-3.7.19/policy/modules/apps/slocate.te
--- nsaserefpolicy/policy/modules/apps/slocate.te	2011-03-17 07:21:22.977851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/slocate.te	2011-03-17 07:21:06.065851001 +0000
@@ -30,6 +30,7 @@
 manage_files_pattern(locate_t, locate_var_lib_t, locate_var_lib_t)
 
 kernel_read_system_state(locate_t)
+kernel_dontaudit_search_network_state(locate_t)
 kernel_dontaudit_search_sysctl(locate_t)
 
 corecmd_exec_bin(locate_t)
@@ -48,8 +49,11 @@
 fs_getattr_all_files(locate_t)
 fs_getattr_all_pipes(locate_t)
 fs_getattr_all_symlinks(locate_t)
+fs_getattr_all_blk_files(locate_t)
+fs_getattr_all_chr_files(locate_t)
 fs_list_all(locate_t)
 fs_list_inotifyfs(locate_t)
+fs_read_noxattr_fs_symlinks(locate_t)
 
 # getpwnam
 auth_use_nsswitch(locate_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/telepathy.fc serefpolicy-3.7.19/policy/modules/apps/telepathy.fc
--- nsaserefpolicy/policy/modules/apps/telepathy.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/telepathy.fc	2011-03-17 07:21:06.368851001 +0000
@@ -0,0 +1,14 @@
+#HOME_DIR/\.mission-control(/.*)?				gen_context(system_u:object_r:telepathy_mission_control_home_t, s0)
+#HOME_DIR/\.cache/\.mc_connections		--		gen_context(system_u:object_r:telepathy_mission_control_cache_home_t, s0)
+#HOME_DIR/\.cache/telepathy/gabble(/.*)?				gen_context(system_u:object_r:telepathy_gabble_cache_home_t, s0)
+
+#/usr/libexec/mission-control-5			--		gen_context(system_u:object_r:telepathy_mission_control_exec_t, s0)
+
+#/usr/libexec/telepathy-butterfly		--		gen_context(system_u:object_r:telepathy_msn_exec_t, s0)
+#/usr/libexec/telepathy-gabble			--		gen_context(system_u:object_r:telepathy_gabble_exec_t, s0)
+#/usr/libexec/telepathy-haze			--		gen_context(system_u:object_r:telepathy_msn_exec_t, s0)
+#/usr/libexec/telepathy-idle			--		gen_context(system_u:object_r:telepathy_idle_exec_t, s0)
+#/usr/libexec/telepathy-salut			--		gen_context(system_u:object_r:telepathy_salut_exec_t, s0)
+#/usr/libexec/telepathy-sofiasip			--		gen_context(system_u:object_r:telepathy_sofiasip_exec_t, s0)
+#/usr/libexec/telepathy-stream-engine		--		gen_context(system_u:object_r:telepathy_stream_engine_exec_t, s0)
+#/usr/libexec/telepathy-sunshine			--		gen_context(system_u:object_r:telepathy_sunshine_exec_t, s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/telepathy.if serefpolicy-3.7.19/policy/modules/apps/telepathy.if
--- nsaserefpolicy/policy/modules/apps/telepathy.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/telepathy.if	2011-03-17 07:21:05.965851002 +0000
@@ -0,0 +1,184 @@
+
+## <summary>Telepathy framework.</summary>
+
+#######################################
+## <summary>
+##  Creates basic types for telepathy
+##  domain
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+#
+template(`telepathy_domain_template',`
+
+	gen_require(`
+		attribute telepathy_domain;
+		attribute telepathy_executable;
+	')
+
+	type telepathy_$1_t, telepathy_domain;
+	type telepathy_$1_exec_t, telepathy_executable;
+	application_domain(telepathy_$1_t, telepathy_$1_exec_t)
+	ubac_constrained(telepathy_$1_t)
+
+	type telepathy_$1_tmp_t;
+	files_tmp_file(telepathy_$1_tmp_t)
+	ubac_constrained(telepathy_$1_tmp_t)
+')
+
+#######################################
+## <summary>
+##  	Role access for telepathy domains
+###     that executes via dbus-session
+## </summary>
+## <param name="user_role">
+##	<summary>
+##	The role associated with the user domain.
+##	</summary>
+## </param>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+template(`telepathy_dbus_session_role', `
+	gen_require(`
+		attribute telepathy_domain;
+
+		type telepathy_gabble_t, telepathy_msn_t;
+                type telepathy_idle_t, telepathy_mission_control_t, telepathy_salut_t;
+                type telepathy_sofiasip_t, telepathy_stream_engine_t, telepathy_sunshine_t;
+
+                type telepathy_gabble_exec_t, telepathy_msn_exec_t;
+                type telepathy_idle_exec_t, telepathy_mission_control_exec_t, telepathy_salut_exec_t;
+                type telepathy_sofiasip_exec_t, telepathy_stream_engine_exec_t, telepathy_sunshine_exec_t;
+
+	')
+
+	dbus_session_domain(telepathy_gabble_t, telepathy_gabble_exec_t)
+	dbus_session_domain(telepathy_idle_t, telepathy_idle_exec_t)
+	dbus_session_domain(telepathy_mission_control_t, telepathy_mission_control_exec_t)
+	dbus_session_domain(telepathy_msn_t, telepathy_msn_exec_t)
+	dbus_session_domain(telepathy_salut_t, telepathy_salut_exec_t)
+	dbus_session_domain(telepathy_sofiasip_t, telepathy_sofiasip_exec_t)
+	dbus_session_domain(telepathy_stream_engine_t, telepathy_stream_engine_exec_t)
+	dbus_session_domain(telepathy_sunshine_t, telepathy_sunshine_exec_t)
+	
+        role $1 types telepathy_domain;
+
+	allow $2 telepathy_domain:process { ptrace signal_perms };
+	ps_process_pattern($2, telepathy_domain)
+
+	optional_policy(`
+		telepathy_dbus_chat($2)
+	')
+
+	telepathy_gabble_stream_connect($2)
+	telepathy_msn_stream_connect($2)
+	telepathy_salut_stream_connect($2)	
+')
+
+########################################
+## <summary>
+##	Send DBus messages to and from
+##	all Telepathy domain.
+## </summary>
+## <param name="domain">
+## 	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`telepathy_dbus_chat', `
+	gen_require(`
+		attribute telepathy_domain;
+		class dbus send_msg;
+	')
+
+	allow $1 telepathy_domain:dbus send_msg;
+	allow telepathy_domain $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Send DBus messages to and from
+##	Telepathy Gabble.
+## </summary>
+## <param name="domain">
+## 	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`telepathy_gabble_dbus_chat', `
+	gen_require(`
+		type telepathy_gabble_t;
+		class dbus send_msg;
+	')
+
+	allow $1 telepathy_gabble_t:dbus send_msg;
+	allow telepathy_gabble_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Stream connect to Telepathy Gabble
+## </summary>
+## <param name="domain">
+## 	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`telepathy_gabble_stream_connect', `
+	gen_require(`
+		type telepathy_gabble_t, telepathy_gabble_tmp_t;
+	')
+
+	stream_connect_pattern($1, telepathy_gabble_tmp_t, telepathy_gabble_tmp_t, telepathy_gabble_t)
+	files_search_tmp($1)
+')
+
+#######################################
+## <summary>
+##      Stream connect to telepathy MSN managers
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`telepathy_msn_stream_connect', `
+        gen_require(`
+                type telepathy_msn_t, telepathy_msn_tmp_t;
+        ')
+
+        stream_connect_pattern($1, telepathy_msn_tmp_t, telepathy_msn_tmp_t, telepathy_msn_t)
+        files_search_tmp($1)
+')
+
+
+########################################
+## <summary>
+##	Stream connect to Telepathy Salut
+## </summary>
+## <param name="domain">
+## 	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`telepathy_salut_stream_connect', `
+	gen_require(`
+		type telepathy_salut_t, telepathy_salut_tmp_t;
+	')
+
+	stream_connect_pattern($1, telepathy_salut_tmp_t, telepathy_salut_tmp_t, telepathy_salut_t)
+	files_search_tmp($1)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/telepathy.te serefpolicy-3.7.19/policy/modules/apps/telepathy.te
--- nsaserefpolicy/policy/modules/apps/telepathy.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/telepathy.te	2012-02-22 22:25:47.048353522 +0000
@@ -0,0 +1,305 @@
+
+policy_module(telepathy, 1.0.0)
+
+########################################
+#
+# Declarations.
+#
+
+## <desc>
+## <p>
+##  Allow the Telepathy connection managers
+##  to connect to any generic TCP port.
+## </p>
+## </desc>
+gen_tunable(telepathy_tcp_connect_generic_network_ports, false)
+
+attribute telepathy_domain;
+attribute telepathy_executable;
+
+telepathy_domain_template(gabble)
+
+type telepathy_gabble_cache_home_t;
+userdom_user_home_content(telepathy_gabble_cache_home_t)
+
+telepathy_domain_template(idle)
+telepathy_domain_template(mission_control)
+
+type telepathy_mission_control_home_t;
+userdom_user_home_content(telepathy_mission_control_home_t)
+
+type telepathy_mission_control_cache_home_t;
+userdom_user_home_content(telepathy_mission_control_cache_home_t)
+
+telepathy_domain_template(msn)
+telepathy_domain_template(salut)
+telepathy_domain_template(sofiasip)
+telepathy_domain_template(stream_engine)
+telepathy_domain_template(sunshine)
+
+#######################################
+#
+# Telepathy Butterfly and Haze local policy.
+#
+
+allow telepathy_msn_t self:process setsched;
+allow telepathy_msn_t self:netlink_route_socket create_netlink_socket_perms;
+allow telepathy_msn_t self:unix_dgram_socket { write create connect };
+
+manage_dirs_pattern(telepathy_msn_t, telepathy_msn_tmp_t, telepathy_msn_tmp_t)
+manage_files_pattern(telepathy_msn_t, telepathy_msn_tmp_t, telepathy_msn_tmp_t)
+exec_files_pattern(telepathy_msn_t, telepathy_msn_tmp_t, telepathy_msn_tmp_t)
+files_tmp_filetrans(telepathy_msn_t, telepathy_msn_tmp_t, { dir file})
+
+corenet_sendrecv_http_client_packets(telepathy_msn_t)
+corenet_sendrecv_msnp_client_packets(telepathy_msn_t)
+corenet_tcp_connect_http_port(telepathy_msn_t)
+corenet_tcp_connect_msnp_port(telepathy_msn_t)
+
+corecmd_exec_bin(telepathy_msn_t)
+corecmd_exec_shell(telepathy_msn_t)
+corecmd_read_bin_symlinks(telepathy_msn_t)
+
+dev_read_urand(telepathy_msn_t)
+
+files_read_etc_files(telepathy_msn_t)
+files_read_usr_files(telepathy_msn_t)
+
+kernel_read_system_state(telepathy_msn_t)
+
+logging_send_syslog_msg(telepathy_msn_t)
+
+miscfiles_read_certs(telepathy_msn_t)
+
+sysnet_read_config(telepathy_msn_t)
+
+optional_policy(`
+        dbus_system_bus_client(telepathy_msn_t)
+')
+
+optional_policy(`
+        gnome_read_gconf_home_files(telepathy_msn_t)
+')
+
+#######################################
+#
+# Telepathy Gabble local policy.
+#
+
+allow telepathy_gabble_t self:netlink_route_socket create_netlink_socket_perms;
+allow telepathy_gabble_t self:tcp_socket { listen accept };
+allow telepathy_gabble_t self:unix_dgram_socket { write read create getattr sendto };
+
+manage_dirs_pattern(telepathy_gabble_t, telepathy_gabble_tmp_t, telepathy_gabble_tmp_t)
+manage_sock_files_pattern(telepathy_gabble_t, telepathy_gabble_tmp_t, telepathy_gabble_tmp_t)
+files_tmp_filetrans(telepathy_gabble_t, telepathy_gabble_tmp_t, { dir sock_file })
+
+# ~/.cache/gabble/caps-cache.db-journal
+optional_policy(`
+        manage_dirs_pattern(telepathy_gabble_t, telepathy_gabble_cache_home_t, telepathy_gabble_cache_home_t)
+        manage_files_pattern(telepathy_gabble_t, telepathy_gabble_cache_home_t, telepathy_gabble_cache_home_t)
+        gnome_cache_filetrans(telepathy_gabble_t, telepathy_gabble_cache_home_t, { dir file })
+')
+
+corenet_sendrecv_commplex_client_packets(telepathy_gabble_t)
+corenet_sendrecv_http_client_packets(telepathy_gabble_t)
+corenet_sendrecv_jabber_client_client_packets(telepathy_gabble_t)
+corenet_sendrecv_vnc_client_packets(telepathy_gabble_t)
+
+corenet_tcp_connect_commplex_port(telepathy_gabble_t)
+corenet_tcp_connect_http_port(telepathy_gabble_t)
+corenet_tcp_connect_jabber_client_port(telepathy_gabble_t)
+corenet_tcp_connect_vnc_port(telepathy_gabble_t)
+
+dev_read_rand(telepathy_gabble_t)
+dev_read_urand(telepathy_gabble_t)
+
+files_read_etc_files(telepathy_gabble_t)
+
+miscfiles_read_certs(telepathy_gabble_t)
+
+sysnet_read_config(telepathy_gabble_t)
+
+optional_policy(`
+        dbus_system_bus_client(telepathy_gabble_t)
+')
+
+tunable_policy(`use_nfs_home_dirs', `
+        fs_manage_nfs_dirs(telepathy_gabble_t)
+        fs_manage_nfs_files(telepathy_gabble_t)
+')
+
+tunable_policy(`use_samba_home_dirs', `
+        fs_manage_cifs_dirs(telepathy_gabble_t)
+        fs_manage_cifs_files(telepathy_gabble_t)
+')
+
+#######################################
+#
+# Telepathy Idle local policy.
+#
+
+allow telepathy_idle_t self:netlink_route_socket create_netlink_socket_perms;
+
+corenet_sendrecv_ircd_client_packets(telepathy_idle_t)
+corenet_tcp_connect_ircd_port(telepathy_idle_t)
+
+files_read_etc_files(telepathy_idle_t)
+
+sysnet_read_config(telepathy_idle_t)
+
+#######################################
+#
+# Telepathy Mission-Control local policy.
+#
+
+allow telepathy_mission_control_t self:process setsched;
+
+manage_dirs_pattern(telepathy_mission_control_t, telepathy_mission_control_home_t, telepathy_mission_control_home_t)
+manage_files_pattern(telepathy_mission_control_t, telepathy_mission_control_home_t, telepathy_mission_control_home_t)
+userdom_user_home_dir_filetrans(telepathy_mission_control_t, telepathy_mission_control_home_t, { dir file })
+userdom_search_user_home_dirs(telepathy_mission_control_t)
+
+files_list_tmp(telepathy_mission_control_t)
+files_read_etc_files(telepathy_mission_control_t)
+files_read_usr_files(telepathy_mission_control_t)
+
+tunable_policy(`use_nfs_home_dirs', `
+        fs_manage_nfs_dirs(telepathy_mission_control_t)
+        fs_manage_nfs_files(telepathy_mission_control_t)
+')
+
+tunable_policy(`use_samba_home_dirs', `
+        fs_manage_cifs_dirs(telepathy_mission_control_t)
+        fs_manage_cifs_files(telepathy_mission_control_t)
+')
+
+# ~/.cache/.mc_connections.
+optional_policy(`
+        manage_files_pattern(telepathy_mission_control_t, telepathy_mission_control_cache_home_t, telepathy_mission_control_cache_home_t)
+        gnome_cache_filetrans(telepathy_mission_control_t, telepathy_mission_control_cache_home_t, file)
+')
+
+optional_policy(`
+        gnome_read_gconf_home_files(telepathy_mission_control_t)
+        gnome_setattr_cache_home_dir(telepathy_mission_control_t)
+')
+
+#######################################
+#
+# Telepathy Salut local policy.
+#
+
+allow telepathy_salut_t self:netlink_route_socket create_netlink_socket_perms;
+allow telepathy_salut_t self:tcp_socket { accept listen };
+
+manage_sock_files_pattern(telepathy_salut_t, telepathy_salut_tmp_t, telepathy_salut_tmp_t)
+files_tmp_filetrans(telepathy_salut_t, telepathy_salut_tmp_t, sock_file)
+
+corenet_sendrecv_presence_server_packets(telepathy_salut_t)
+corenet_tcp_bind_presence_port(telepathy_salut_t)
+corenet_tcp_connect_presence_port(telepathy_salut_t)
+
+dev_read_urand(telepathy_salut_t)
+
+files_read_etc_files(telepathy_salut_t)
+
+sysnet_read_config(telepathy_salut_t)
+
+optional_policy(`
+        dbus_system_bus_client(telepathy_salut_t)
+
+        optional_policy(`
+                avahi_dbus_chat(telepathy_salut_t)
+        ')
+')
+
+#######################################
+#
+# Telepathy Sofiasip local policy.
+#
+
+allow telepathy_sofiasip_t self:netlink_route_socket create_netlink_socket_perms;
+allow telepathy_sofiasip_t self:rawip_socket { create_socket_perms listen };
+allow telepathy_sofiasip_t self:tcp_socket { listen };
+
+corenet_sendrecv_sip_client_packets(telepathy_sofiasip_t)
+corenet_tcp_connect_sip_port(telepathy_sofiasip_t)
+
+dev_read_urand(telepathy_sofiasip_t)
+
+kernel_request_load_module(telepathy_sofiasip_t)
+
+sysnet_read_config(telepathy_sofiasip_t)
+
+#######################################
+#
+# Telepathy Sunshine local policy.
+#
+
+manage_files_pattern(telepathy_sunshine_t, telepathy_sunshine_tmp_t, telepathy_sunshine_tmp_t)
+exec_files_pattern(telepathy_sunshine_t, telepathy_sunshine_tmp_t, telepathy_sunshine_tmp_t)
+files_tmp_filetrans(telepathy_sunshine_t, telepathy_sunshine_tmp_t, file)
+
+corecmd_list_bin(telepathy_sunshine_t)
+
+dev_read_urand(telepathy_sunshine_t)
+
+files_read_etc_files(telepathy_sunshine_t)
+files_read_usr_files(telepathy_sunshine_t)
+
+kernel_read_system_state(telepathy_sunshine_t)
+
+optional_policy(`
+        xserver_read_xdm_pid(telepathy_sunshine_t)
+        xserver_stream_connect(telepathy_sunshine_t)
+')
+
+#######################################
+#
+# telepathy domains common policy
+#
+
+allow telepathy_domain self:process { getsched signal };
+allow telepathy_domain self:fifo_file rw_fifo_file_perms;
+allow telepathy_domain self:tcp_socket create_socket_perms;
+allow telepathy_domain self:udp_socket create_socket_perms;
+
+corenet_all_recvfrom_netlabel(telepathy_domain)
+corenet_all_recvfrom_unlabeled(telepathy_domain)
+corenet_raw_bind_generic_node(telepathy_domain)
+corenet_raw_sendrecv_generic_if(telepathy_domain)
+corenet_raw_sendrecv_generic_node(telepathy_domain)
+corenet_tcp_bind_generic_node(telepathy_domain)
+corenet_tcp_sendrecv_generic_if(telepathy_domain)
+corenet_tcp_sendrecv_generic_node(telepathy_domain)
+corenet_udp_bind_generic_node(telepathy_domain)
+
+fs_search_auto_mountpoints(telepathy_domain)
+
+miscfiles_read_localization(telepathy_domain)
+
+# This interface does not facilitate files_search_tmp which appears to be a bug.
+userdom_stream_connect(telepathy_domain)
+userdom_use_user_terminals(telepathy_domain)
+
+tunable_policy(`telepathy_tcp_connect_generic_network_ports', `
+        corenet_tcp_connect_generic_port(telepathy_domain)
+        corenet_sendrecv_generic_client_packets(telepathy_domain)
+')
+
+optional_policy(`
+        automount_dontaudit_getattr_tmp_dirs(telepathy_domain)
+')
+
+optional_policy(`
+        nis_use_ypbind(telepathy_domain)
+')
+
+optional_policy(`
+        telepathy_dbus_chat(telepathy_domain)
+')
+
+optional_policy(`
+        xserver_rw_xdm_pipes(telepathy_domain)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/userhelper.fc serefpolicy-3.7.19/policy/modules/apps/userhelper.fc
--- nsaserefpolicy/policy/modules/apps/userhelper.fc	2011-03-17 07:21:23.037851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/userhelper.fc	2011-03-17 07:21:06.374851001 +0000
@@ -7,3 +7,4 @@
 # /usr
 #
 /usr/sbin/userhelper		--	gen_context(system_u:object_r:userhelper_exec_t,s0)
+/usr/bin/consolehelper		--	gen_context(system_u:object_r:consolehelper_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/userhelper.if serefpolicy-3.7.19/policy/modules/apps/userhelper.if
--- nsaserefpolicy/policy/modules/apps/userhelper.if	2011-03-17 07:21:23.036851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/userhelper.if	2011-03-17 07:21:06.363851002 +0000
@@ -25,6 +25,7 @@
 	gen_require(`
 		attribute userhelper_type;
 		type userhelper_exec_t, userhelper_conf_t;
+		class dbus send_msg;
 	')
 
 	########################################
@@ -260,3 +261,58 @@
 
 	can_exec($1, userhelper_exec_t)
 ')
+
+#######################################
+## <summary>
+##	The role template for the consolehelper module.
+## </summary>
+## <desc>
+##	<p>
+##	This template creates a derived domains which are used
+##	for consolehelper applications.
+##	</p>
+## </desc>
+## <param name="role_prefix">
+##	<summary>
+##	The prefix of the user domain (e.g., user
+##	is the prefix for user_t).
+##	</summary>
+## </param>
+## <param name="user_role">
+##	<summary>
+##	The role associated with the user domain.
+##	</summary>
+## </param>
+## <param name="user_domain">
+##	<summary>
+##	The type of the user domain.
+##	</summary>
+## </param>
+#
+template(`userhelper_console_role_template',`
+	gen_require(`
+		type consolehelper_exec_t;
+		attribute consolehelper_domain;
+		class dbus send_msg;
+	')
+	type $1_consolehelper_t, consolehelper_domain;
+	domain_type($1_consolehelper_t)
+	domain_entry_file($1_consolehelper_t, consolehelper_exec_t)
+	role $2 types $1_consolehelper_t;
+
+	domtrans_pattern($3, consolehelper_exec_t, $1_consolehelper_t)
+
+	allow $3 $1_consolehelper_t:dbus send_msg;
+	allow $1_consolehelper_t $3:dbus send_msg;
+
+	auth_use_pam($1_consolehelper_t)
+
+	optional_policy(`
+		shutdown_run($1_consolehelper_t, $2)
+		shutdown_send_sigchld($3)
+	')
+
+	optional_policy(`
+		xserver_read_xdm_pid($1_consolehelper_t)
+	')
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/userhelper.te serefpolicy-3.7.19/policy/modules/apps/userhelper.te
--- nsaserefpolicy/policy/modules/apps/userhelper.te	2011-03-17 07:21:23.043851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/userhelper.te	2011-05-17 15:10:32.673889000 +0000
@@ -7,9 +7,53 @@
 #
 
 attribute userhelper_type;
+attribute consolehelper_domain;
 
 type userhelper_conf_t;
 files_type(userhelper_conf_t)
 
 type userhelper_exec_t;
 application_executable_file(userhelper_exec_t)
+
+type consolehelper_exec_t;
+application_executable_file(consolehelper_exec_t)
+
+########################################
+#
+# consolehelper local policy
+#
+
+allow consolehelper_domain self:capability { setgid setuid }; 
+
+dontaudit consolehelper_domain  userhelper_conf_t:file write;
+read_files_pattern(consolehelper_domain, userhelper_conf_t, userhelper_conf_t)
+
+# Init script handling
+domain_use_interactive_fds(consolehelper_domain)
+
+# internal communication is often done using fifo and unix sockets.
+allow consolehelper_domain self:fifo_file rw_fifo_file_perms;
+allow consolehelper_domain self:unix_stream_socket create_stream_socket_perms;
+
+kernel_read_kernel_sysctls(consolehelper_domain)
+
+corecmd_exec_bin(consolehelper_domain)
+
+dev_getattr_all_chr_files(consolehelper_domain)
+
+files_read_etc_files(consolehelper_domain)
+
+auth_search_pam_console_data(consolehelper_domain)
+
+init_read_utmp(consolehelper_domain)
+
+miscfiles_read_localization(consolehelper_domain)
+
+userhelper_exec(consolehelper_domain)
+
+userdom_use_user_ptys(consolehelper_domain)
+userdom_use_user_ttys(consolehelper_domain)
+
+optional_policy(`
+	xserver_stream_connect(consolehelper_domain)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/vmware.fc serefpolicy-3.7.19/policy/modules/apps/vmware.fc
--- nsaserefpolicy/policy/modules/apps/vmware.fc	2011-03-17 07:21:22.961851001 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/vmware.fc	2011-03-17 07:21:06.034851003 +0000
@@ -66,5 +66,6 @@
 /var/log/vmware.* 		--	gen_context(system_u:object_r:vmware_log_t,s0)
 /var/log/vnetlib.*		--	gen_context(system_u:object_r:vmware_log_t,s0)
 
+/var/run/vmnet.*   			gen_context(system_u:object_r:vmware_var_run_t,s0)
 /var/run/vmnat.* 		-s	gen_context(system_u:object_r:vmware_var_run_t,s0)
 /var/run/vmware.* 			gen_context(system_u:object_r:vmware_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/vmware.if serefpolicy-3.7.19/policy/modules/apps/vmware.if
--- nsaserefpolicy/policy/modules/apps/vmware.if	2011-03-17 07:21:23.039851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/vmware.if	2011-03-17 07:21:06.407851001 +0000
@@ -84,3 +84,22 @@
 	logging_search_logs($1)
 	append_files_pattern($1, vmware_log_t, vmware_log_t)
 ')
+
+########################################
+## <summary>
+##	Execute vmware host executables
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`vmware_exec_host',`
+	gen_require(`
+		type vmware_host_exec_t;
+	')
+
+	can_exec($1, vmware_host_exec_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/vmware.te serefpolicy-3.7.19/policy/modules/apps/vmware.te
--- nsaserefpolicy/policy/modules/apps/vmware.te	2011-03-17 07:21:23.034851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/vmware.te	2011-03-17 07:21:06.361851003 +0000
@@ -29,6 +29,10 @@
 type vmware_host_exec_t;
 init_daemon_domain(vmware_host_t, vmware_host_exec_t)
 
+type vmware_host_tmp_t;
+files_tmp_file(vmware_host_tmp_t)
+ubac_constrained(vmware_host_tmp_t)
+
 type vmware_host_pid_t alias vmware_var_run_t;
 files_pid_file(vmware_host_pid_t)
 
@@ -79,6 +83,12 @@
 
 # cjp: the ro and rw files should be split up
 manage_files_pattern(vmware_host_t, vmware_sys_conf_t, vmware_sys_conf_t)
+manage_lnk_files_pattern(vmware_host_t, vmware_sys_conf_t, vmware_sys_conf_t)
+
+manage_dirs_pattern(vmware_host_t, vmware_host_tmp_t, vmware_host_tmp_t)
+manage_files_pattern(vmware_host_t, vmware_host_tmp_t, vmware_host_tmp_t)
+manage_sock_files_pattern(vmware_host_t, vmware_host_tmp_t, vmware_host_tmp_t)
+files_tmp_filetrans(vmware_host_t, vmware_host_tmp_t, { file dir })
 
 manage_files_pattern(vmware_host_t, vmware_var_run_t, vmware_var_run_t)
 manage_sock_files_pattern(vmware_host_t, vmware_var_run_t, vmware_var_run_t)
@@ -87,7 +97,10 @@
 manage_files_pattern(vmware_host_t, vmware_log_t, vmware_log_t)	
 logging_log_filetrans(vmware_host_t, vmware_log_t, { file dir })
 
+can_exec(vmware_host_t, vmware_host_exec_t)
+
 kernel_read_kernel_sysctls(vmware_host_t)
+kernel_read_network_state(vmware_host_t)
 kernel_read_system_state(vmware_host_t)
 
 corenet_all_recvfrom_unlabeled(vmware_host_t)
@@ -114,6 +127,7 @@
 dev_read_sysfs(vmware_host_t)
 dev_read_urand(vmware_host_t)
 dev_rw_vmware(vmware_host_t)
+dev_rw_generic_chr_files(vmware_host_t)
 
 domain_use_interactive_fds(vmware_host_t)
 domain_dontaudit_read_all_domains_state(vmware_host_t)
@@ -121,6 +135,7 @@
 files_list_tmp(vmware_host_t)
 files_read_etc_files(vmware_host_t)
 files_read_etc_runtime_files(vmware_host_t)
+files_read_usr_files(vmware_host_t)
 
 fs_getattr_all_fs(vmware_host_t)
 fs_search_auto_mountpoints(vmware_host_t)
@@ -146,11 +161,19 @@
 netutils_domtrans_ping(vmware_host_t)
 
 optional_policy(`
+	samba_read_config(vmware_host_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(vmware_host_t)
 
 ')
 
 optional_policy(`
+	shutdown_domtrans(vmware_host_t)
+')
+
+optional_policy(`
 	udev_read_db(vmware_host_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/webalizer.te serefpolicy-3.7.19/policy/modules/apps/webalizer.te
--- nsaserefpolicy/policy/modules/apps/webalizer.te	2011-03-17 07:21:23.030851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/webalizer.te	2011-03-17 07:21:06.254851002 +0000
@@ -85,6 +85,7 @@
 userdom_use_user_terminals(webalizer_t)
 userdom_use_unpriv_users_fds(webalizer_t)
 userdom_dontaudit_search_user_home_content(webalizer_t)
+userdom_dontaudit_list_admin_dir(webalizer_t)
 
 apache_read_log(webalizer_t)
 apache_manage_sys_content(webalizer_t)
@@ -104,3 +105,8 @@
 optional_policy(`
 	nscd_socket_use(webalizer_t)
 ')
+
+optional_policy(`
+	squid_manage_logs(webalizer_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/wine.fc serefpolicy-3.7.19/policy/modules/apps/wine.fc
--- nsaserefpolicy/policy/modules/apps/wine.fc	2011-03-17 07:21:23.003851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/wine.fc	2011-03-17 07:21:06.085851002 +0000
@@ -2,6 +2,7 @@
 
 /opt/cxoffice/bin/wine.*	--	gen_context(system_u:object_r:wine_exec_t,s0)
 
+/opt/google/picasa(/.*)?/Picasa3/.*exe --	gen_context(system_u:object_r:wine_exec_t,s0)
 /opt/google/picasa(/.*)?/bin/msiexec --	gen_context(system_u:object_r:wine_exec_t,s0)
 /opt/google/picasa(/.*)?/bin/notepad --	gen_context(system_u:object_r:wine_exec_t,s0)
 /opt/google/picasa(/.*)?/bin/progman --	gen_context(system_u:object_r:wine_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/wine.if serefpolicy-3.7.19/policy/modules/apps/wine.if
--- nsaserefpolicy/policy/modules/apps/wine.if	2011-03-17 07:21:22.980851002 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/wine.if	2012-04-02 19:12:30.299517098 +0000
@@ -10,22 +10,16 @@
 ##	for wine applications.
 ##	</p>
 ## </desc>
-## <param name="userdomain_prefix">
-##	<summary>
-##	The prefix of the user domain (e.g., user
-##	is the prefix for user_t).
-##	</summary>
+## <param name="user_role">
+##  <summary>
+##  The role associated with the user domain.
+##  </summary>
 ## </param>
 ## <param name="user_domain">
 ##	<summary>
 ##	The type of the user domain.
 ##	</summary>
 ## </param>
-## <param name="user_role">
-##	<summary>
-##	The role associated with the user domain.
-##	</summary>
-## </param>
 #
 template(`wine_role',`
 	gen_require(`
@@ -35,6 +29,8 @@
 	role $1 types wine_t;
 
 	domain_auto_trans($2, wine_exec_t, wine_t)
+	# Unrestricted inheritance from the caller.
+	allow $2 wine_t:process { noatsecure siginh rlimitinh };
 	allow wine_t $2:fd use;
 	allow wine_t $2:process { sigchld signull };
 	allow wine_t $2:unix_stream_socket connectto;
@@ -103,7 +99,14 @@
 	userdom_unpriv_usertype($1, $1_wine_t)
 	userdom_manage_tmpfs_role($2, $1_wine_t)
 
-	domain_mmap_low($1_wine_t)
+	domain_mmap_low_type($1_wine_t)
+	tunable_policy(`mmap_low_allowed',`
+		domain_mmap_low($1_wine_t)
+	')
+
+	tunable_policy(`wine_mmap_zero_ignore',`
+		allow $1_wine_t self:memprotect mmap_zero;
+	')
 
 	optional_policy(`
 		xserver_role($1_r, $1_wine_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/wine.te serefpolicy-3.7.19/policy/modules/apps/wine.te
--- nsaserefpolicy/policy/modules/apps/wine.te	2011-03-17 07:21:23.077851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/wine.te	2011-03-17 07:21:06.499851002 +0000
@@ -1,6 +1,13 @@
 
 policy_module(wine, 1.6.1)
 
+## <desc>
+## <p>
+## Ignore wine mmap_zero errors
+## </p>
+## </desc>
+gen_tunable(wine_mmap_zero_ignore, false)
+
 ########################################
 #
 # Declarations
@@ -30,7 +37,14 @@
 manage_files_pattern(wine_t, wine_tmp_t, wine_tmp_t)
 files_tmp_filetrans(wine_t, wine_tmp_t, { file dir })
 
-domain_mmap_low(wine_t)
+domain_mmap_low_type(wine_t)
+tunable_policy(`mmap_low_allowed',`
+	domain_mmap_low(wine_t)
+')
+
+tunable_policy(`wine_mmap_zero_ignore',`
+	dontaudit wine_t self:memprotect mmap_zero;
+')
 
 files_execmod_all_files(wine_t)
 
@@ -41,7 +55,11 @@
 ')
 
 optional_policy(`
-	unconfined_domain_noaudit(wine_t)
+	policykit_dbus_chat(wine_t)
+')
+
+optional_policy(`
+	unconfined_domain(wine_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/apps/wm.if serefpolicy-3.7.19/policy/modules/apps/wm.if
--- nsaserefpolicy/policy/modules/apps/wm.if	2011-03-17 07:21:23.093851003 +0000
+++ serefpolicy-3.7.19/policy/modules/apps/wm.if	2011-03-17 07:21:06.515851002 +0000
@@ -30,6 +30,7 @@
 template(`wm_role_template',`
 	gen_require(`
 		type wm_exec_t;
+		class dbus send_msg;
 	')
 
 	type $1_wm_t;
@@ -42,6 +43,12 @@
 	allow $1_wm_t self:shm create_shm_perms;
 
 	allow $1_wm_t $3:unix_stream_socket connectto;
+	allow $3 $1_wm_t:unix_stream_socket connectto;
+	allow $3 $1_wm_t:process { signal sigchld };
+	allow $1_wm_t $3:process { signull sigkill };
+
+	allow $1_wm_t $3:dbus send_msg;
+	allow $3 $1_wm_t:dbus send_msg;
 
 	domtrans_pattern($3, wm_exec_t, $1_wm_t)
 
@@ -55,6 +62,8 @@
 	files_read_etc_files($1_wm_t)
 	files_read_usr_files($1_wm_t)
 
+	fs_getattr_tmpfs($1_wm_t)
+
 	mls_file_read_all_levels($1_wm_t)
 	mls_file_write_all_levels($1_wm_t)
 	mls_xwin_read_all_levels($1_wm_t)
@@ -72,11 +81,18 @@
 
 	optional_policy(`
 		dbus_system_bus_client($1_wm_t)
+		dbus_session_bus_client($1_wm_t)
+	')
+
+	optional_policy(`
+		pulseaudio_stream_connect($1_wm_t)
 	')
 
 	optional_policy(`
 		xserver_role($2, $1_wm_t)
+		xserver_manage_core_devices($1_wm_t)
 	')
+
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/corecommands.fc serefpolicy-3.7.19/policy/modules/kernel/corecommands.fc
--- nsaserefpolicy/policy/modules/kernel/corecommands.fc	2011-03-17 07:21:22.476851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/corecommands.fc	2012-05-30 14:00:46.725346168 +0000
@@ -9,8 +9,11 @@
 /bin/bash2			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /bin/fish			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /bin/ksh.*			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/bin/mksh           --  gen_context(system_u:object_r:shell_exec_t,s0)
+/bin/mountpoint		--	gen_context(system_u:object_r:bin_t,s0)
 /bin/sash			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /bin/tcsh			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/bin/yash           --  gen_context(system_u:object_r:shell_exec_t,s0)
 /bin/zsh.*			--	gen_context(system_u:object_r:shell_exec_t,s0)
 
 #
@@ -49,7 +52,8 @@
 /etc/cipe/ip-up.*		--	gen_context(system_u:object_r:bin_t,s0)
 /etc/cipe/ip-down.*		--	gen_context(system_u:object_r:bin_t,s0)
 
-/etc/ConsoleKit/run-session.d(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/etc/ConsoleKit/run-seat\.d(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/etc/ConsoleKit/run-session\.d(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 
 /etc/cron.daily(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /etc/cron.hourly(/.*)?			gen_context(system_u:object_r:bin_t,s0)
@@ -65,11 +69,22 @@
 
 /etc/init\.d/functions		--	gen_context(system_u:object_r:bin_t,s0)
 
+/etc/kde/env(/.*)?				gen_context(system_u:object_r:bin_t,s0)
+/etc/kde/shutdown(/.*)?			gen_context(system_u:object_r:bin_t,s0)
+
 /etc/mail/make			--	gen_context(system_u:object_r:bin_t,s0)
+/etc/mcelog/cache-error-trigger --  gen_context(system_u:object_r:bin_t,s0)
+/etc/mcelog/triggers(/.*)?      gen_context(system_u:object_r:bin_t,s0)
 /etc/mgetty\+sendfax/new_fax	--	gen_context(system_u:object_r:bin_t,s0)
 
 /etc/netplug\.d(/.*)? 	 		gen_context(system_u:object_r:bin_t,s0)
 
+/etc/pki/tls/certs/make-dummy-cert	--  gen_context(system_u:object_r:bin_t,s0)
+/etc/pki/tls/misc(/.*)?  			--  gen_context(system_u:object_r:bin_t,s0)    
+
+/etc/pm/power\.d(/.*)? 	 		gen_context(system_u:object_r:bin_t,s0)
+/etc/pm/sleep\.d(/.*)? 	 		gen_context(system_u:object_r:bin_t,s0)
+
 /etc/ppp/ip-down\..*		--	gen_context(system_u:object_r:bin_t,s0)
 /etc/ppp/ip-up\..*		--	gen_context(system_u:object_r:bin_t,s0)
 /etc/ppp/ipv6-up\..*		--	gen_context(system_u:object_r:bin_t,s0)
@@ -79,8 +94,6 @@
 
 /etc/rc\.d/init\.d/functions	--	gen_context(system_u:object_r:bin_t,s0)
 
-/etc/security/namespace.init	--	gen_context(system_u:object_r:bin_t,s0)
-
 /etc/sysconfig/crond		-- gen_context(system_u:object_r:bin_t,s0)
 /etc/sysconfig/init		-- gen_context(system_u:object_r:bin_t,s0)
 /etc/sysconfig/libvirtd		-- gen_context(system_u:object_r:bin_t,s0)
@@ -105,6 +118,8 @@
 /etc/mysql/debian-start		--	gen_context(system_u:object_r:bin_t,s0)
 ')
 
+/etc/vmware-tools(/.*)?                 gen_context(system_u:object_r:bin_t,s0)
+
 #
 # /lib
 #
@@ -141,18 +156,24 @@
 
 /opt/(.*/)?sbin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 
+/opt/google/chrome(/.*)?        gen_context(system_u:object_r:bin_t,s0)
+
 ifdef(`distro_gentoo',`
 /opt/RealPlayer/realplay(\.bin)?	gen_context(system_u:object_r:bin_t,s0)
 /opt/RealPlayer/postint(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /opt/vmware/workstation/lib/lib/wrapper-gtk24\.sh -- gen_context(system_u:object_r:bin_t,s0)
 ')
 
+/opt/gutenprint/cups/lib/filter(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/opt/OpenPrinting-Gutenprint/cups/lib/filter(/.*)? gen_context(system_u:object_r:bin_t,s0)
+
 #
 # /usr
 #
 /usr/(.*/)?Bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/(.*/)?bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/bin/git-shell		--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/libexec/git-core/git-shell	--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/bin/fish			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/bin/scponly		--	gen_context(system_u:object_r:shell_exec_t,s0)
 
@@ -163,10 +184,11 @@
 
 /usr/lib/ccache/bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/fence(/.*)?			gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/pgsql/test/regress/.*\.sh --	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib(64)?/pgsql/test/regress/.*\.sh --	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/qt.*/bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/[^/]*firefox[^/]*/firefox -- gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/apt/methods.+	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib(64)?/chromium-browser/chrome   --  gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/ConsoleKit/scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/ConsoleKit/run-session.d(/.*)? gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/courier(/.*)?		gen_context(system_u:object_r:bin_t,s0)
@@ -186,10 +208,14 @@
 /usr/lib(64)?/sftp-server	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/vte/gnome-pty-helper --	gen_context(system_u:object_r:bin_t,s0)
 
+/usr/lib/ruby/gems(/.*)?/helper-scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/ruby/gems/.*/agents(/.*)?     gen_context(system_u:object_r:bin_t,s0)
+
 /usr/lib(64)?/debug/bin(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/debug/sbin(/.*)? --	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/debug/usr/bin(/.*)? --	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib(64)?/debug/usr/sbin(/.*)? --	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib(64)?/debug/usr/sbin(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib(64)?/debug/usr/libexec(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
 
 /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird -- gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(64)?/[^/]*thunderbird[^/]*/thunderbird-bin -- gen_context(system_u:object_r:bin_t,s0)
@@ -199,9 +225,10 @@
 /usr/lib(64)?/thunderbird.*/mozilla-xremote-client -- gen_context(system_u:object_r:bin_t,s0)
 
 /usr/lib(64)?/xen/bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib(64)?/xfce4(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 
 /usr/libexec(/.*)?			gen_context(system_u:object_r:bin_t,s0)
-/usr/libsexec/sesh		--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/libexec/sesh		--	gen_context(system_u:object_r:shell_exec_t,s0)
 
 /usr/libexec/openssh/sftp-server --	gen_context(system_u:object_r:bin_t,s0)
 
@@ -216,11 +243,21 @@
 
 /usr/share/apr-0/build/[^/]+\.sh --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/apr-0/build/libtool --	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/dayplanner/dayplanner -- 	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/debconf/.+		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/denyhosts/scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/denyhosts/plugins(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/.*\.sh		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/ocf-shellfuncs  --   gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/svclib_nfslock --	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/cluster/SAPDatabase  --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/cluster/SAPInstance  --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/cluster/fence_scsi_check\.pl --  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/cluster/checkquorum  --  gen_context(system_u:object_r:bin_t,s0)
 /usr/share/e16/misc(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gedit-2/plugins/externaltools/tools(/.*)?  gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite/hooks/common/update		--      gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite/hooks/gitolite-admin/post-update -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gnucash/finance-quote-check -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gnucash/finance-quote-helper -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/hal/device-manager/hal-device-manager -- gen_context(system_u:object_r:bin_t,s0)
@@ -236,10 +273,12 @@
 /usr/share/smolt/client(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall/compiler\.pl --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall/configpath	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/shorewall/getparams  --  gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall-perl(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall-shell(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall-lite(/.*)? 	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall6-lite(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/spamassassin/sa-update\.cron gen_context(system_u:object_r:bin_t,s0)
 /usr/share/turboprint/lib(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/vhostmd/scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 
@@ -297,6 +336,7 @@
 /usr/share/system-config-rootpassword/system-config-rootpassword -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/system-config-samba/system-config-samba\.py -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/system-config-securitylevel/system-config-securitylevel\.py -- gen_context(system_u:object_r:bin_t,s0)
+/usr/share/system-config-services/gui\.py -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/system-config-services/serviceconf\.py -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/system-config-services/system-config-services -- gen_context(system_u:object_r:bin_t,s0)
 /usr/share/system-config-soundcard/system-config-soundcard -- gen_context(system_u:object_r:bin_t,s0)
@@ -305,6 +345,7 @@
 /usr/share/texmf/web2c/mktexdir	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/texmf/web2c/mktexnam	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/texmf/web2c/mktexupd	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/texmf/texconfig/tcfmgr --   gen_context(system_u:object_r:bin_t,s0)
 ')
 
 ifdef(`distro_suse', `
@@ -331,3 +372,24 @@
 ifdef(`distro_suse',`
 /var/lib/samba/bin/.+			gen_context(system_u:object_r:bin_t,s0)
 ')
+
+/lib/security/pam_krb5/pam_krb5_storetmp -- gen_context(system_u:object_r:bin_t,s0)
+/lib64/security/pam_krb5/pam_krb5_storetmp -- gen_context(system_u:object_r:bin_t,s0)
+
+/usr/lib/oracle/xe/apps(/.*)?  gen_context(system_u:object_r:bin_t,s0)
+
+/usr/lib(64)?/pm-utils(/.*)?  gen_context(system_u:object_r:bin_t,s0)
+
+/usr/lib/wicd/monitor.py 	-- 	gen_context(system_u:object_r:bin_t, s0)
+
+/usr/lib(64)?/nspluginwrapper/np.*	gen_context(system_u:object_r:bin_t,s0)
+
+/usr/lib(64)?/rpm/rpmd		-- 	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib(64)?/rpm/rpmq		-- 	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib(64)?/rpm/rpmk		-- 	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib(64)?/rpm/rpmv		-- 	gen_context(system_u:object_r:bin_t,s0)
+
+/usr/lib(64)?/gimp/.*/plug-ins(/.*)?  gen_context(system_u:object_r:bin_t,s0)
+
+/usr/local/Brother/(.*/)?inf/brprintconf.*  --  gen_context(system_u:object_r:bin_t,s0)
+/usr/local/Brother/(.*/)?inf/setup.*        --  gen_context(system_u:object_r:bin_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/corecommands.if serefpolicy-3.7.19/policy/modules/kernel/corecommands.if
--- nsaserefpolicy/policy/modules/kernel/corecommands.if	2011-03-17 07:21:22.493851002 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/corecommands.if	2011-03-17 07:21:05.297851001 +0000
@@ -179,6 +179,24 @@
 	dontaudit $1 bin_t:dir write;
 ')
 
+#######################################
+## <summary>
+##      Do not audit attempts to write bin files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`corecmd_dontaudit_write_bin_files',`
+        gen_require(`
+                type bin_t;
+        ')
+
+        dontaudit $1 bin_t:file write;
+')
+
 ########################################
 ## <summary>
 ##	Get the attributes of files in bin directories.
@@ -931,6 +949,7 @@
 
 	read_lnk_files_pattern($1, bin_t, bin_t)
 	can_exec($1, chroot_exec_t)
+	allow $1 self:capability sys_chroot;
 ')
 
 ########################################
@@ -1030,6 +1049,7 @@
 		type bin_t;
 	')
 
+	manage_dirs_pattern($1, bin_t, exec_type)
 	manage_files_pattern($1, bin_t, exec_type)
 	manage_lnk_files_pattern($1, bin_t, bin_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/corenetwork.if.in serefpolicy-3.7.19/policy/modules/kernel/corenetwork.if.in
--- nsaserefpolicy/policy/modules/kernel/corenetwork.if.in	2011-03-17 07:21:22.470851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/corenetwork.if.in	2011-11-16 10:32:32.629349402 +0000
@@ -3,6 +3,33 @@
 ##	Contains the initial SIDs for network objects.
 ## </required>
 
+#######################################
+## <summary>
+##  Define type to be a network packet type
+## </summary>
+## <desc>
+##  <p>
+##  Define type to be a network packet type
+##  </p>
+##  <p>
+##  This is for supporting third party modules and its
+##  use is not allowed in upstream reference policy.
+##  </p>
+## </desc>
+## <param name="domain">
+##  <summary>
+##  Type to be used for a network packet.
+##  </summary>
+## </param>
+#
+interface(`corenet_packet',`
+    gen_require(`
+        attribute packet_type;
+    ')
+
+    typeattribute $1 packet_type;
+')
+
 ########################################
 ## <summary>
 ##	Define type to be a network port type
@@ -180,8 +207,26 @@
 	gen_require(`
 		type netif_t;
 	')
+		allow $1 netif_t:netif { tcp_send tcp_recv egress ingress };
+')
 
-	allow $1 netif_t:netif { tcp_send tcp_recv egress ingress };
+#######################################
+## <summary>
+##  Send and receive TCP network traffic on loopback interface.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`corenet_tcp_sendrecv_loopback_if',`
+    ifdef(`enable_mls',`
+        gen_require(`
+            type lo_netif_t;
+        ')
+		allow $1 lo_netif_t:netif { tcp_send tcp_recv egress ingress };
+    ')
 ')
 
 ########################################
@@ -2149,9 +2194,14 @@
 ## </param>
 #
 interface(`corenet_tcp_recvfrom_unlabeled',`
+	gen_require(`
+		attribute corenet_unlabeled_type;
+    ')
+
 	kernel_tcp_recvfrom_unlabeled($1)
 	kernel_recvfrom_unlabeled_peer($1)
 
+	typeattribute $1 corenet_unlabeled_type;
 	# XXX - at some point the oubound/send access check will be removed
 	# but for right now we need to keep this in place so as not to break
 	# older systems
@@ -2501,6 +2551,30 @@
 	allow $1 netlabel_peer_t:{ tcp_socket udp_socket rawip_socket } recvfrom;
 ')
 
+#######################################
+## <summary>
+##  Enable unlabeled net packets
+## </summary>
+## <desc>
+##  <p>
+##  Allow unlabeled_packet_t to be used by all domains that use the network
+##  </p>
+## </desc>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <infoflow type="read" weight="10"/>
+#
+interface(`corenet_enable_unlabeled_packets',`
+    gen_require(`
+        attribute corenet_unlabeled_type;
+    ')
+
+    kernel_sendrecv_unlabeled_association(corenet_unlabeled_type)
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to receive packets from an unlabeled connection.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/corenetwork.te.in serefpolicy-3.7.19/policy/modules/kernel/corenetwork.te.in
--- nsaserefpolicy/policy/modules/kernel/corenetwork.te.in	2011-03-17 07:21:22.480851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/corenetwork.te.in	2012-05-16 10:49:44.934374925 +0000
@@ -16,6 +16,7 @@
 attribute server_packet_type;
 
 attribute corenet_unconfined_type;
+attribute corenet_unlabeled_type;
 
 type ppp_device_t;
 dev_node(ppp_device_t)
@@ -25,6 +26,7 @@
 #
 type tun_tap_device_t;
 dev_node(tun_tap_device_t)
+mls_trusted_object(tun_tap_device_t)
 
 ########################################
 #
@@ -34,6 +36,18 @@
 #
 # client_packet_t is the default type of IPv4 and IPv6 client packets.
 #
+type intranet_packet_t;
+corenet_packet(intranet_packet_t)
+
+#
+# client_packet_t is the default type of IPv4 and IPv6 client packets.
+#
+type internet_packet_t;
+corenet_packet(internet_packet_t)
+
+#
+# client_packet_t is the default type of IPv4 and IPv6 client packets.
+#
 type client_packet_t, packet_type, client_packet_type;
 
 #
@@ -55,7 +69,7 @@
 type reserved_port_t, port_type, reserved_port_type;
 
 #
-# hi_reserved_port_t is the type of INET port numbers between 600-1023.
+# hi_reserved_port_t is the type of INET port numbers between 512-1023.
 #
 type hi_reserved_port_t, port_type, reserved_port_type, rpc_port_type;
 
@@ -65,6 +79,7 @@
 type server_packet_t, packet_type, server_packet_type;
 
 network_port(afs_bos, udp,7007,s0)
+network_port(afs_client, udp,7001,s0)
 network_port(afs_fs, tcp,2040,s0, udp,7000,s0, udp,7005,s0)
 network_port(afs_ka, udp,7004,s0)
 network_port(afs_pt, udp,7002,s0)
@@ -73,20 +88,27 @@
 network_port(amanda, udp,10080-10082,s0, tcp,10080-10083,s0)
 network_port(amavisd_recv, tcp,10024,s0)
 network_port(amavisd_send, tcp,10025,s0)
+network_port(amqp, tcp,5671,s0, udp,5671,s0, tcp,5672,s0, udp,5672,s0)
 network_port(aol, udp,5190-5193,s0, tcp,5190-5193,s0) 
 network_port(apcupsd, tcp,3551,s0, udp,3551,s0)
+network_port(apertus_ldp, tcp,539,s0, udp,539,s0)
 network_port(asterisk, tcp,1720,s0, udp,2427,s0, udp,2727,s0, udp,4569,s0)
 network_port(audit, tcp,60,s0)
 network_port(auth, tcp,113,s0)
 network_port(bgp, tcp,179,s0, udp,179,s0, tcp,2605,s0, udp,2605,s0)
+network_port(boinc, tcp,31416,s0)
 type biff_port_t, port_type, reserved_port_type; dnl network_port(biff) # no defined portcon in current strict
 network_port(certmaster, tcp,51235,s0)
 network_port(chronyd, udp,323,s0)
 network_port(clamd, tcp,3310,s0)
 network_port(clockspeed, udp,4041,s0)
 network_port(cluster, tcp,5149,s0, udp,5149,s0, tcp,40040,s0, tcp,50006-50008,s0, udp,50006-50008,s0)
+network_port(cma, tcp,1050,s0, udp,1050,s0)
 network_port(cobbler, tcp,25151,s0)
+network_port(commplex, tcp,5000,s0, udp,5000,s0, tcp,5001,s0, udp,5001,s0)
 network_port(comsat, udp,512,s0)
+network_port(condor, tcp, 9618,s0, udp, 9618,s0)
+network_port(ctdb, tcp,4379,s0, udp,4379,s0)
 network_port(cvs, tcp,2401,s0, udp,2401,s0)
 network_port(cyphesis, tcp,6767,s0, tcp,6769,s0, tcp,6780-6799,s0, udp,32771,s0)
 network_port(dbskkd, tcp,1178,s0)
@@ -97,24 +119,30 @@
 network_port(dict, tcp,2628,s0)
 network_port(distccd, tcp,3632,s0)
 network_port(dns, udp,53,s0, tcp,53,s0)
+network_port(dogtag, tcp,7390,s0)
 network_port(epmap, tcp,135,s0, udp,135,s0)
+network_port(festival, tcp,1314,s0)
 network_port(fingerd, tcp,79,s0)
+network_port(flash, tcp,843,s0, tcp,1935,s0, udp,1935,s0)
 network_port(ftp, tcp,21,s0, tcp,990,s0, udp,990,s0)
 network_port(ftp_data, tcp,20,s0)
 network_port(gatekeeper, udp,1718,s0, udp,1719,s0, tcp,1721,s0, tcp,7000,s0)
 network_port(giftd, tcp,1213,s0)
 network_port(git, tcp,9418,s0, udp,9418,s0)
+network_port(glance, tcp,9292,s0, udp,9292,s0)
+network_port(glance_registry, tcp,9191,s0, udp,9191,s0)
 network_port(gopher, tcp,70,s0, udp,70,s0)
 network_port(gpsd, tcp,2947,s0)
 network_port(hddtemp, tcp,7634,s0)
 network_port(howl, tcp,5335,s0, udp,5353,s0)
-network_port(hplip, tcp,1782,s0, tcp,2207,s0, tcp,2208,s0, tcp, 8290,s0, tcp,50000,s0, tcp,50002,s0, tcp,8292,s0, tcp,9100,s0, tcp,9101,s0, tcp,9102,s0, tcp,9220,s0, tcp,9221,s0, tcp,9222,s0, tcp,9280,s0, tcp,9281,s0, tcp,9282,s0, tcp,9290,s0, tcp,9291,s0, tcp,9292,s0)
-network_port(http, tcp,80,s0, tcp,443,s0, tcp,488,s0, tcp,8008,s0, tcp,8009,s0, tcp,8443,s0) #8443 is mod_nss default port
-network_port(http_cache, tcp,3128,s0, udp,3130,s0, tcp,8080,s0, tcp,8118,s0, tcp,10001-10010,s0) # 8118 is for privoxy
+network_port(hplip, tcp,1782,s0, tcp,2207,s0, tcp,2208,s0, tcp, 8290,s0, tcp,50000,s0, tcp,50002,s0, tcp,8292,s0, tcp,9100,s0, tcp,9101,s0, tcp,9102,s0, tcp,9220,s0, tcp,9221,s0, tcp,9222,s0, tcp,9280,s0, tcp,9281,s0, tcp,9282,s0, tcp,9290,s0, tcp,9291,s0)
+network_port(http, tcp,80,s0, tcp,443,s0, tcp,488,s0, tcp,8008,s0,tcp,8009,s0, tcp,8443,s0) #8443 is mod_nss default port
+network_port(http_cache, tcp,3128,s0, udp,3130,s0, tcp,8080,s0, tcp,8118,s0, tcp,8123,s0, tcp,10001-10010,s0) # 8118 is for privoxy
 network_port(i18n_input, tcp,9010,s0)
 network_port(imaze, tcp,5323,s0, udp,5323,s0)
 network_port(inetd_child, tcp,1,s0, udp,1,s0, tcp,7,s0, udp,7,s0, tcp,9,s0, udp,9,s0, tcp,13,s0, udp,13,s0, tcp,19,s0, udp,19,s0, tcp,37,s0, udp,37,s0, tcp,512,s0, tcp,543,s0, tcp,544,s0, tcp,891,s0, udp,891,s0, tcp,892,s0, udp,892,s0, tcp,2105,s0, tcp,5666,s0)
 network_port(innd, tcp,119,s0)
+network_port(ionixnetmon, tcp,7410,s0, udp,7410,s0)
 network_port(ipmi, udp,623,s0, udp,664,s0)
 network_port(ipp, tcp,631,s0, udp,631,s0, tcp,8610-8614,s0, udp,8610-8614,s0)
 network_port(ipsecnat, tcp,4500,s0, udp,4500,s0)
@@ -124,50 +152,78 @@
 network_port(isns, tcp,3205,s0, udp,3205,s0)
 network_port(jabber_client, tcp,5222,s0, tcp,5223,s0)
 network_port(jabber_interserver, tcp,5269,s0)
+network_port(jabber_router, tcp,5347,s0)
+network_port(jacorb, tcp,3528,s0, tcp,3529,s0)
+network_port(jboss_debug, tcp,8787,s0)
+network_port(jboss_messaging, tcp,5445,s0, tcp,5455,s0)
+network_port(jboss_management, tcp,4712,s0, udp,4712,s0, tcp,4447,s0, tcp,7600,s0, tcp,9123,s0, udp,9123,s0, tcp, 9990, s0, tcp, 9999, s0, tcp, 18001, s0)
 network_port(kerberos, tcp,88,s0, udp,88,s0, tcp,750,s0, udp,750,s0)
-network_port(kerberos_admin, tcp,464,s0, udp,464,s0, tcp,749,s0)
+network_port(kerberos_admin, tcp,749,s0)
 network_port(kerberos_master, tcp,4444,s0, udp,4444,s0)
+network_port(kerberos_password, tcp,464,s0, udp,464,s0)
+#network_port(keystone, tcp,5000,s0, udp,5000,s0)
 network_port(kismet, tcp,2501,s0)
 network_port(kprop, tcp,754,s0)
 network_port(ktalkd, udp,517,s0, udp,518,s0)
 network_port(ldap, tcp,389,s0, udp,389,s0, tcp,636,s0, udp,636,s0, tcp,3268,s0)
 network_port(lmtp, tcp,24,s0, udp,24,s0)
+network_port(lirc, tcp,8765,s0)
+network_port(luci, tcp,8084,s0)
 type lrrd_port_t, port_type; dnl network_port(lrrd_port_t) # no defined portcon
 network_port(mail, tcp,2000,s0, tcp,3905,s0)
+network_port(matahari, tcp,49000,s0, udp,49000,s0)
 network_port(memcache, tcp,11211,s0, udp,11211,s0)
 network_port(mmcc, tcp,5050,s0, udp,5050,s0)
+network_port(mongod, tcp,27017,s0)
 network_port(monopd, tcp,1234,s0)
+network_port(mpd, tcp,6600,s0)
 network_port(msnp, tcp,1863,s0, udp,1863,s0)
 network_port(mssql, tcp,1433,s0, tcp,1434,s0, udp,1433,s0, udp,1434,s0)
 network_port(munin, tcp,4949,s0, udp,4949,s0)
-network_port(mysqld, tcp,1186,s0, tcp,3306,s0, tcp,63132-63163,s0)
+network_port(mysqld, tcp,1186,s0, tcp,3306,s0, tcp,63132-63164,s0)
 network_port(mysqlmanagerd, tcp,2273,s0)
+network_port(movaz_ssc, tcp,5252,s0)
 network_port(nessus, tcp,1241,s0)
+network_port(netport, tcp,3129,s0, udp,3129,s0)
 network_port(netsupport, tcp,5404,s0, udp,5404,s0, tcp,5405,s0, udp,5405,s0)
 network_port(nmbd, udp,137,s0, udp,138,s0)
+network_port(nodejs_debug, tcp,5858,s0, udp,5858,s0)
 network_port(ntp, udp,123,s0)
+network_port(ntop, tcp,3000,s0, udp,3000,s0, tcp,3001,s0, udp,3001,s0)
+network_port(oracle, tcp, 1521,s0,udp, 1521,s0, tcp,2483,s0,udp,2483,s0, tcp,2484,s0, udp,2484,s0)
 network_port(ocsp, tcp,9080,s0)
 network_port(openvpn, tcp,1194,s0, udp,1194,s0)
+network_port(pktcable, tcp,2126,s0, udp,2126,s0, tcp,3198,s0, udp,3198,s0)
 network_port(pegasus_http, tcp,5988,s0)
 network_port(pegasus_https, tcp,5989,s0)
 network_port(pgpkeyserver, udp, 11371,s0, tcp,11371,s0)
 network_port(pingd, tcp,9125,s0)
+network_port(piranha, tcp,3636,s0)
+network_port(pki_ca, tcp, 9180, s0, tcp, 9701, s0, tcp, 9443-9447, s0)
+network_port(pki_kra, tcp, 10180, s0, tcp, 10701, s0, tcp, 10443-10446, s0)
+network_port(pki_ocsp, tcp, 11180, s0, tcp, 11701, s0, tcp, 11443-11446, s0)
+network_port(pki_tks, tcp, 13180, s0, tcp, 13701, s0, tcp, 13443-13446, s0)
+network_port(pki_ra, tcp, 12888, s0, tcp, 12889, s0)
+network_port(pki_tps, tcp, 7888, s0, tcp, 7889, s0)
 network_port(pop, tcp,106,s0, tcp,109,s0, tcp,110,s0, tcp,143,s0, tcp,220,s0, tcp,993,s0, tcp,995,s0, tcp,1109,s0)
 network_port(portmap, udp,111,s0, tcp,111,s0)
 network_port(postfix_policyd, tcp,10031,s0)
 network_port(postgresql, tcp,5432,s0)
 network_port(postgrey, tcp,60000,s0)
 network_port(prelude, tcp,4690,s0, udp,4690,s0)
+network_port(presence, tcp,5298,s0, udp,5298,s0)
 network_port(printer, tcp,515,s0)
 network_port(ptal, tcp,5703,s0)
-network_port(pulseaudio, tcp,4713,s0)
+network_port(pulseaudio, tcp,4713,s0, udp,4713,s0)
 network_port(puppet, tcp, 8140, s0)
 network_port(pxe, udp,4011,s0)
 network_port(pyzor, udp,24441,s0)
+network_port(quantum, tcp,9696,s0)
 network_port(radacct, udp,1646,s0, udp,1813,s0)
 network_port(radius, udp,1645,s0, udp,1812,s0)
 network_port(radsec, tcp,2083,s0)
 network_port(razor, tcp,2703,s0)
+network_port(repository, tcp, 6363, s0)
 network_port(ricci, tcp,11111,s0, udp,11111,s0)
 network_port(ricci_modcluster, tcp,16851,s0, udp,16851,s0)
 network_port(rlogind, tcp,513,s0)
@@ -177,22 +233,27 @@
 network_port(rsync, tcp,873,s0, udp,873,s0)
 network_port(rwho, udp,513,s0)
 network_port(sap, tcp,9875,s0, udp,9875,s0)
+network_port(sieve, tcp,4190,s0)
 network_port(sip, tcp,5060,s0, udp,5060,s0, tcp,5061,s0, udp,5061,s0)
+network_port(sixxsconfig, tcp,3874,s0, udp,3874,s0)
 network_port(smbd, tcp,137-139,s0, tcp,445,s0)
 network_port(smtp, tcp,25,s0, tcp,465,s0, tcp,587,s0)
-network_port(snmp, udp,161,s0, udp,162,s0, tcp,199,s0, tcp, 1161, s0)
+network_port(snmp, tcp,161-162,s0, udp,161-162,s0, tcp,199,s0, tcp, 1161, s0)
 type socks_port_t, port_type; dnl network_port(socks) # no defined portcon
 network_port(soundd, tcp,8000,s0, tcp,9433,s0, tcp, 16001, s0)
 network_port(spamd, tcp,783,s0)
 network_port(speech, tcp,8036,s0)
 network_port(squid, udp,3401,s0, tcp,3401,s0, udp,4827,s0, tcp,4827,s0) # snmp and htcp
 network_port(ssh, tcp,22,s0)
+network_port(streaming, tcp, 1755, s0, udp, 1755, s0)
 type stunnel_port_t, port_type; dnl network_port(stunnel) # no defined portcon in current strict
 network_port(swat, tcp,901,s0)
-network_port(syslogd, udp,514,s0)
+network_port(sype, tcp,9911,s0, udp,9911,s0)
+network_port(syslogd, udp,514,s0, tcp,6514,s0, udp,6514,s0)
 network_port(telnetd, tcp,23,s0)
 network_port(tftp, udp,69,s0)
-network_port(tor, tcp, 6969, s0, tcp,9001,s0, tcp,9030,s0, tcp,9050,s0, tcp,9051,s0)
+network_port(tor, tcp, 6969, s0, tcp,9001,s0, tcp,9030,s0, tcp,9051,s0)
+network_port(tor_socks, tcp,9050,s0)
 network_port(traceroute, udp,64000-64010,s0)
 network_port(transproxy, tcp,8081,s0)
 network_port(ups, tcp,3493,s0)
@@ -201,23 +262,27 @@
 network_port(varnishd, tcp,6081,s0, tcp,6082,s0)
 network_port(virt, tcp,16509,s0, udp,16509,s0, tcp,16514,s0, udp,16514,s0)
 network_port(virt_migration, tcp,49152-49216,s0)
-network_port(vnc, tcp,5900,s0)
+network_port(vnc, tcp,5900-5999,s0)
 network_port(wccp, udp,2048,s0)
+network_port(websm, tcp,9090,s0, udp,9090,s0)
 network_port(whois, tcp,43,s0, udp,43,s0, tcp, 4321, s0 , udp, 4321, s0 )
+network_port(winshadow, tcp, 3261, s0, udp, 3261,s0)
 network_port(xdmcp, udp,177,s0, tcp,177,s0)
 network_port(xen, tcp,8002,s0)
 network_port(xfs, tcp,7100,s0)
-network_port(xserver, tcp,6000-6020,s0)
+network_port(xserver, tcp,6000-6150,s0)
+network_port(zarafa, tcp,236,s0, tcp,237,s0)
 network_port(zebra, tcp,2600-2604,s0, tcp,2606,s0, udp,2600-2604,s0, udp,2606,s0)
+network_port(zented, tcp,1229,s0, udp,1229,s0)
 network_port(zope, tcp,8021,s0)
 
 # Defaults for reserved ports.  Earlier portcon entries take precedence;
 # these entries just cover any remaining reserved ports not otherwise declared.
 
-portcon tcp 600-1023 gen_context(system_u:object_r:hi_reserved_port_t, s0)
-portcon udp 600-1023 gen_context(system_u:object_r:hi_reserved_port_t, s0)
-portcon tcp 1-599 gen_context(system_u:object_r:reserved_port_t, s0)
-portcon udp 1-599 gen_context(system_u:object_r:reserved_port_t, s0)
+portcon tcp 512-1023 gen_context(system_u:object_r:hi_reserved_port_t, s0)
+portcon udp 512-1023 gen_context(system_u:object_r:hi_reserved_port_t, s0)
+portcon tcp 1-511 gen_context(system_u:object_r:reserved_port_t, s0)
+portcon udp 1-511 gen_context(system_u:object_r:reserved_port_t, s0)
 
 ########################################
 #
@@ -266,5 +331,5 @@
 allow corenet_unconfined_type port_type:udp_socket { send_msg recv_msg };
 
 # Bind to any network address.
-allow corenet_unconfined_type port_type:{ tcp_socket udp_socket } name_bind;
+allow corenet_unconfined_type port_type:{ tcp_socket udp_socket rawip_socket } name_bind;
 allow corenet_unconfined_type node_type:{ tcp_socket udp_socket rawip_socket } node_bind;
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/corenetwork.te.m4 serefpolicy-3.7.19/policy/modules/kernel/corenetwork.te.m4
--- nsaserefpolicy/policy/modules/kernel/corenetwork.te.m4	2011-03-17 07:21:22.456851003 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/corenetwork.te.m4	2011-03-17 07:21:05.267851000 +0000
@@ -10,7 +10,7 @@
 #
 # return the low port in a range.
 #
-# range_start(600) returns "600"
+# range_start(512) returns "512"
 # range_start(1200-1600) returns "1200"
 #
 define(`range_start',`ifelse(-1,index(`$1', `-'),$1,substr($1,0,index(`$1', `-')))')
@@ -80,7 +80,7 @@
 # bindresvport in glibc starts searching for reserved ports at 600
 define(`declare_ports',`dnl
 ifelse(eval(range_start($3) < 1024),1,`typeattribute $1 reserved_port_type;
-ifelse(eval(range_start($3) >= 600),1,`typeattribute $1 rpc_port_type;',`dnl')
+ifelse(eval(range_start($3) >= 512),1,`typeattribute $1 rpc_port_type;',`dnl')
 ',`dnl')
 portcon $2 $3 gen_context(system_u:object_r:$1,$4)
 ifelse(`$5',`',`',`declare_ports($1,shiftn(4,$*))')dnl
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/devices.fc serefpolicy-3.7.19/policy/modules/kernel/devices.fc
--- nsaserefpolicy/policy/modules/kernel/devices.fc	2011-03-17 07:21:22.437851003 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/devices.fc	2011-10-25 13:51:01.720904000 +0000
@@ -17,12 +17,15 @@
 /dev/autofs.*		-c	gen_context(system_u:object_r:autofs_device_t,s0)
 /dev/beep		-c	gen_context(system_u:object_r:sound_device_t,s0)
 /dev/btrfs-control	-c	gen_context(system_u:object_r:lvm_control_t,s0)
+/dev/bsr.*			-c  gen_context(system_u:object_r:cpu_device_t,s0)
+/dev/crash			-c	gen_context(system_u:object_r:crash_device_t,mls_systemhigh)
 /dev/controlD64		-c	gen_context(system_u:object_r:xserver_misc_device_t,s0)
 /dev/dahdi/.*		-c	gen_context(system_u:object_r:sound_device_t,s0)
-/dev/dmfm		-c	gen_context(system_u:object_r:sound_device_t,s0)
+/dev/dlm.*  		-c	gen_context(system_u:object_r:dlm_control_device_t,s0)
+/dev/dmfm			-c	gen_context(system_u:object_r:sound_device_t,s0)
 /dev/dmmidi.*		-c	gen_context(system_u:object_r:sound_device_t,s0)
-/dev/dsp.*		-c	gen_context(system_u:object_r:sound_device_t,s0)
-/dev/efirtc		-c	gen_context(system_u:object_r:clock_device_t,s0)
+/dev/dsp.*			-c	gen_context(system_u:object_r:sound_device_t,s0)
+/dev/efirtc			-c	gen_context(system_u:object_r:clock_device_t,s0)
 /dev/elographics/e2201	-c	gen_context(system_u:object_r:mouse_device_t,s0)
 /dev/em8300.*		-c	gen_context(system_u:object_r:v4l_device_t,s0)
 /dev/etherd/.+		-c	gen_context(system_u:object_r:lvm_control_t,s0)
@@ -38,6 +41,7 @@
 /dev/hiddev.*		-c	gen_context(system_u:object_r:usb_device_t,s0)
 /dev/hidraw.*		-c	gen_context(system_u:object_r:usb_device_t,s0)
 /dev/hpet		-c	gen_context(system_u:object_r:clock_device_t,s0)
+/dev/hpilo  		-d gen_context(system_u:object_r:device_t,mls_systemhigh)
 /dev/hw_random		-c	gen_context(system_u:object_r:random_device_t,s0)
 /dev/hwrng		-c	gen_context(system_u:object_r:random_device_t,s0)
 /dev/i915		-c	gen_context(system_u:object_r:dri_device_t,s0)
@@ -70,6 +74,7 @@
 /dev/modem		-c	gen_context(system_u:object_r:modem_device_t,s0)
 /dev/mpu401.*		-c	gen_context(system_u:object_r:sound_device_t,s0)
 /dev/msr.*		-c	gen_context(system_u:object_r:cpu_device_t,s0)
+/dev/net/vhost	-c	gen_context(system_u:object_r:vhost_device_t,s0)
 /dev/network_latency	-c	gen_context(system_u:object_r:netcontrol_device_t,s0)
 /dev/network_throughput	-c	gen_context(system_u:object_r:netcontrol_device_t,s0)
 /dev/noz.* 		-c	gen_context(system_u:object_r:modem_device_t,s0)
@@ -108,10 +113,12 @@
 /dev/urandom		-c	gen_context(system_u:object_r:urandom_device_t,s0)
 /dev/ub[a-c]		-c	gen_context(system_u:object_r:usb_device_t,s0)
 /dev/usb.+		-c	gen_context(system_u:object_r:usb_device_t,s0)
+/dev/usbmon.+		-c	gen_context(system_u:object_r:usbmon_device_t,s0)
 /dev/usblp.*		-c	gen_context(system_u:object_r:printer_device_t,s0)
 ifdef(`distro_suse', `
 /dev/usbscanner		-c	gen_context(system_u:object_r:scanner_device_t,s0)
 ')
+/dev/vhost-net		-c	gen_context(system_u:object_r:vhost_device_t,s0)
 /dev/vbi.*		-c	gen_context(system_u:object_r:v4l_device_t,s0)
 /dev/vbox.*		-c	gen_context(system_u:object_r:xserver_misc_device_t,s0)
 /dev/vga_arbiter	-c	gen_context(system_u:object_r:xserver_misc_device_t,s0)
@@ -163,6 +170,7 @@
 
 /dev/usb/dc2xx.*	-c	gen_context(system_u:object_r:scanner_device_t,s0)
 /dev/usb/lp.*		-c	gen_context(system_u:object_r:printer_device_t,s0)
+/dev/mfpports/.*	-c	gen_context(system_u:object_r:printer_device_t,s0)
 /dev/usb/mdc800.*	-c	gen_context(system_u:object_r:scanner_device_t,s0)
 /dev/usb/scanner.*	-c	gen_context(system_u:object_r:scanner_device_t,s0)
 
@@ -186,3 +194,8 @@
 /var/named/chroot/dev/random -c	gen_context(system_u:object_r:random_device_t,s0)
 /var/named/chroot/dev/zero -c	gen_context(system_u:object_r:zero_device_t,s0)
 ')
+
+#
+# /sys
+#
+/sys(/.*)?			gen_context(system_u:object_r:sysfs_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/devices.if serefpolicy-3.7.19/policy/modules/kernel/devices.if
--- nsaserefpolicy/policy/modules/kernel/devices.if	2011-03-17 07:21:22.502851002 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/devices.if	2012-01-11 12:19:58.424106527 +0000
@@ -407,7 +407,7 @@
 
 ########################################
 ## <summary>
-##	Allow read, write, and create for generic character device files.
+##	Create generic block device files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -415,12 +415,30 @@
 ##	</summary>
 ## </param>
 #
-interface(`dev_create_generic_chr_files',`
+interface(`dev_create_generic_blk_files',`
 	gen_require(`
 		type device_t;
 	')
 
-	create_chr_files_pattern($1, device_t, device_t)
+	create_blk_files_pattern($1, device_t, device_t)
+')
+
+########################################
+## <summary>
+##	Delete generic block device files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_delete_generic_blk_files',`
+	gen_require(`
+		type device_t;
+	')
+
+	delete_blk_files_pattern($1, device_t, device_t)
 ')
 
 ########################################
@@ -459,6 +477,24 @@
 	dontaudit $1 device_t:chr_file getattr;
 ')
 
+#######################################
+## <summary>
+##  Dontaudit read for generic character device files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to dontaudit access.
+##  </summary>
+## </param>
+#
+interface(`dev_dontaudit_read_generic_chr_files',`
+    gen_require(`
+        type device_t;
+    ')
+
+    dontaudit $1 device_t:chr_file { getattr read };
+')
+
 ########################################
 ## <summary>
 ##	Dontaudit setattr for generic character device files.
@@ -497,6 +533,42 @@
 
 ########################################
 ## <summary>
+##	Create generic character device files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_create_generic_chr_files',`
+	gen_require(`
+		type device_t;
+	')
+
+	create_chr_files_pattern($1, device_t, device_t)
+')
+
+########################################
+## <summary>
+##	Delete generic character device files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_delete_generic_chr_files',`
+	gen_require(`
+		type device_t;
+	')
+
+	delete_chr_files_pattern($1, device_t, device_t)
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to set the attributes
 ##	of symbolic links in device directories (/dev).
 ## </summary>
@@ -514,6 +586,24 @@
 	dontaudit $1 device_t:lnk_file setattr;
 ')
 
+#######################################
+## <summary>
+## Read symbolic links in device directories.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`dev_read_generic_symlinks',`
+	gen_require(`
+		type device_t;
+	')
+
+	allow $1 device_t:lnk_file read_lnk_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Create symbolic links in device directories.
@@ -711,6 +801,33 @@
 
 ########################################
 ## <summary>
+##	Create, read, and write device nodes. The node
+##	will be transitioned to the type provided.  This is
+##	a temporary interface until devtmpfs functionality
+##	fixed.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="objectclass(es)">
+##	<summary>
+##	Object class(es) (single or set including {}) for which this
+##	the transition will occur.
+##	</summary>
+## </param>
+#
+interface(`dev_tmpfs_filetrans_dev',`
+	gen_require(`
+		type device_t;
+	')
+
+	fs_tmpfs_filetrans($1, device_t, $2)
+')
+
+########################################
+## <summary>
 ##	Getattr on all block file device nodes.
 ## </summary>
 ## <param name="domain">
@@ -762,6 +879,7 @@
 interface(`dev_getattr_all_chr_files',`
 	gen_require(`
 		attribute device_node;
+		type device_t;
 	')
 
 	getattr_chr_files_pattern($1, device_t, device_node)
@@ -799,6 +917,7 @@
 #
 interface(`dev_setattr_all_blk_files',`
 	gen_require(`
+		type device_t;
 		attribute device_node;
 	')
 
@@ -818,6 +937,7 @@
 #
 interface(`dev_setattr_all_chr_files',`
 	gen_require(`
+		type device_t;
 		attribute device_node;
 	')
 
@@ -908,6 +1028,7 @@
 #
 interface(`dev_create_all_blk_files',`
 	gen_require(`
+		type device_t;
 		attribute device_node;
 	')
 
@@ -926,6 +1047,7 @@
 #
 interface(`dev_create_all_chr_files',`
 	gen_require(`
+		type device_t;
 		attribute device_node;
 	')
 
@@ -934,6 +1056,42 @@
 
 ########################################
 ## <summary>
+##	rw all inherited character device files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rw_all_inherited_chr_files',`
+	gen_require(`
+		attribute device_node;
+	')
+
+	allow $1 device_node:chr_file rw_inherited_chr_file_perms;
+')
+
+########################################
+## <summary>
+##	rw all inherited blk device files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rw_all_inherited_blk_files',`
+	gen_require(`
+		attribute device_node;
+	')
+
+	allow $1 device_node:blk_file rw_inherited_blk_file_perms;
+')
+
+########################################
+## <summary>
 ##	Delete all block device files.
 ## </summary>
 ## <param name="domain">
@@ -944,6 +1102,7 @@
 #
 interface(`dev_delete_all_blk_files',`
 	gen_require(`
+		type device_t;
 		attribute device_node;
 	')
 
@@ -962,6 +1121,7 @@
 #
 interface(`dev_delete_all_chr_files',`
 	gen_require(`
+		type device_t;
 		attribute device_node;
 	')
 
@@ -980,6 +1140,7 @@
 #
 interface(`dev_rename_all_blk_files',`
 	gen_require(`
+		type device_t;
 		attribute device_node;
 	')
 
@@ -998,6 +1159,7 @@
 #
 interface(`dev_rename_all_chr_files',`
 	gen_require(`
+		type device_t;
 		attribute device_node;
 	')
 
@@ -1041,6 +1203,7 @@
 interface(`dev_manage_all_chr_files',`
 	gen_require(`
 		attribute device_node, memory_raw_read, memory_raw_write;
+		type device_t;
 	')
 
 	manage_chr_files_pattern($1, device_t, device_node)
@@ -1280,6 +1443,7 @@
 #
 interface(`dev_rw_cardmgr',`
 	gen_require(`
+		type device_t;
 		type cardmgr_dev_t;
 	')
 
@@ -1441,6 +1605,24 @@
 	rw_chr_files_pattern($1, device_t, cpu_device_t)
 ')
 
+#######################################
+## <summary>
+##     Read the kernel crash device
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`dev_read_crash',`
+       gen_require(`
+               type device_t, crash_device_t;
+       ')
+
+       read_chr_files_pattern($1, device_t, crash_device_t)
+')
+
 ########################################
 ## <summary>
 ##	Read and write the the hardware SSL accelerator.
@@ -1471,7 +1653,7 @@
 #
 interface(`dev_setattr_dlm_control',`
 	gen_require(`
-	type device_t, kvm_device_t;
+	type device_t, dlm_control_device_t;
 	')
 
 	setattr_chr_files_pattern($1, device_t, dlm_control_device_t)
@@ -1746,6 +1928,7 @@
 interface(`dev_read_framebuffer',`
 	gen_require(`
 		type framebuf_device_t;
+		type device_t;
 	')
 
 	read_chr_files_pattern($1, device_t, framebuf_device_t)
@@ -1823,6 +2006,24 @@
 	read_chr_files_pattern($1, device_t, kmsg_device_t)
 ')
 
+#######################################
+## <summary>
+##  Do not audit attempts to read the kernel messages
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`dev_dontaudit_read_kmsg',`
+    gen_require(`
+        type kmsg_device_t;
+    ')
+
+    dontaudit $1 kmsg_device_t:chr_file read;
+')
+
 ########################################
 ## <summary>
 ##	Write to the kernel messages device
@@ -2042,6 +2243,24 @@
 
 ########################################
 ## <summary>
+##	Get the attributes of the lvm comtrol device.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_getattr_lvm_control',`
+	gen_require(`
+		type device_t, lvm_control_t;
+	')
+
+	getattr_chr_files_pattern($1, device_t, lvm_control_t)
+')
+
+########################################
+## <summary>
 ##	Read the lvm comtrol device.
 ## </summary>
 ## <param name="domain">
@@ -2597,7 +2816,8 @@
 		type mtrr_device_t;
 	')
 
-	dontaudit $1 mtrr_device_t:chr_file write;
+	dontaudit $1 mtrr_device_t:file write_file_perms;
+	dontaudit $1 mtrr_device_t:chr_file write_chr_file_perms;
 ')
 
 ########################################
@@ -2794,6 +3014,7 @@
 #
 interface(`dev_rw_nvram',`
 	gen_require(`
+		type device_t;
 		type nvram_device_t;
 	')
 
@@ -2875,24 +3096,6 @@
 
 ########################################
 ## <summary>
-##	Read printk devices (e.g., /dev/kmsg /dev/mcelog)
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`dev_read_printk',`
-	gen_require(`
-		type device_t, printk_device_t;
-	')
-
-	read_chr_files_pattern($1, device_t, printk_device_t)
-')
-
-########################################
-## <summary>
 ##	Get the attributes of the QEMU
 ##	microcode and id interfaces.
 ## </summary>
@@ -3440,6 +3643,24 @@
 
 ########################################
 ## <summary>
+##	Associate a file to a sysfs filesystem.
+## </summary>
+## <param name="file_type">
+##	<summary>
+##	The type of the file to be associated to sysfs.
+##	</summary>
+## </param>
+#
+interface(`dev_associate_sysfs',`
+	gen_require(`
+		type sysfs_t;
+	')
+
+	allow $1 sysfs_t:filesystem associate;
+')
+
+########################################
+## <summary>
 ##	Get the attributes of sysfs directories.
 ## </summary>
 ## <param name="domain">
@@ -3507,6 +3728,7 @@
 		type sysfs_t;
 	')
 
+	read_lnk_files_pattern($1, sysfs_t, sysfs_t)
 	list_dirs_pattern($1, sysfs_t, sysfs_t)
 ')
 
@@ -3659,6 +3881,25 @@
 	write_chr_files_pattern($1, device_t, urandom_device_t)
 ')
 
+#######################################
+## <summary>
+##     Do not audit attempts to write to pseudo
+##     random devices (e.g., /dev/urandom)
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain to not audit.
+##     </summary>
+## </param>
+#
+interface(`dev_dontaudit_write_urand',`
+       gen_require(`
+               type urandom_device_t;
+       ')
+
+       dontaudit $1 urandom_device_t:chr_file write;
+')
+
 ########################################
 ## <summary>
 ##	Getattr generic the USB devices.
@@ -3671,6 +3912,7 @@
 #
 interface(`dev_getattr_generic_usb_dev',`
 	gen_require(`
+		type device_t;
 		type usb_device_t;
 	')
 
@@ -3689,6 +3931,7 @@
 #
 interface(`dev_setattr_generic_usb_dev',`
 	gen_require(`
+		type device_t;
 		type usb_device_t;
 	')
 
@@ -3707,7 +3950,7 @@
 #
 interface(`dev_read_generic_usb_dev',`
 	gen_require(`
-		type usb_device_t;
+		type device_t, usb_device_t;
 	')
 
 	read_chr_files_pattern($1, device_t, usb_device_t)
@@ -3731,6 +3974,60 @@
 	rw_chr_files_pattern($1, device_t, usb_device_t)
 ')
 
+#######################################
+## <summary>
+##  Allow relabeling (to and from) of generic usb device
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to relabel.
+##  </summary>
+## </param>
+#
+interface(`dev_relabel_generic_usb_dev',`
+	gen_require(`
+		type usb_device_t;
+	')
+
+	relabel_dirs_pattern($1, usb_device_t, usb_device_t)
+')
+
+########################################
+## <summary>
+##	Read USB monitor devices.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_read_usbmon_dev',`
+	gen_require(`
+		type device_t, usbmon_device_t;
+	')
+
+	read_chr_files_pattern($1, device_t, usbmon_device_t)
+')
+
+#######################################
+## <summary>
+## Write USB monitor devices.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`dev_write_usbmon_dev',`
+	gen_require(`
+		type device_t, usbmon_device_t;
+	')
+
+	write_chr_files_pattern($1, device_t, usbmon_device_t)
+')
+
 ########################################
 ## <summary>
 ##	Mount a usbfs filesystem.
@@ -3905,6 +4202,24 @@
 
 ########################################
 ## <summary>
+##	Allow read/write the vhost net device
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rw_vhost',`
+	gen_require(`
+		type device_t, vhost_device_t;
+	')
+
+	rw_chr_files_pattern($1, device_t, vhost_device_t)
+')
+
+########################################
+## <summary>
 ##	Get the attributes of video4linux devices.
 ## </summary>
 ## <param name="domain">
@@ -4068,6 +4383,24 @@
 	allow $1 vmware_device_t:chr_file execute;
 ')
 
+#######################################
+## <summary>
+##	Read to watchdog devices.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_read_watchdog',`
+	gen_require(`
+		type device_t, watchdog_device_t;
+	')
+
+	read_chr_files_pattern($1, device_t, watchdog_device_t)
+')
+
 ########################################
 ## <summary>
 ##	Write to watchdog devices.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/devices.te serefpolicy-3.7.19/policy/modules/kernel/devices.te
--- nsaserefpolicy/policy/modules/kernel/devices.te	2011-03-17 07:21:22.436851003 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/devices.te	2011-05-26 15:51:52.235196995 +0000
@@ -1,5 +1,5 @@
 
-policy_module(devices, 1.9.3)
+policy_module(devices, 1.10.0)
 
 ########################################
 #
@@ -55,6 +55,12 @@
 type cpu_device_t;
 dev_node(cpu_device_t)
 
+#
+# crash_device_t is the type of /dev/crash
+#
+type crash_device_t;
+dev_node(crash_device_t)
+
 # for the IBM zSeries z90crypt hardware ssl accelorator
 type crypt_device_t;
 dev_node(crypt_device_t)
@@ -101,6 +107,7 @@
 #
 type kvm_device_t;
 dev_node(kvm_device_t)
+mls_trusted_object(kvm_device_t)
 
 #
 # Type for /dev/lirc
@@ -239,6 +246,19 @@
 dev_node(usb_device_t)
 
 #
+# usb_device_t is the type for /dev/usbmon
+#
+type usbmon_device_t;
+dev_node(usbmon_device_t)
+
+#
+# vhost_device_t is the type for /dev/vhost-net
+#
+type vhost_device_t;
+dev_node(vhost_device_t)
+mls_trusted_object(vhost_device_t)
+
+#
 # userio_device_t is the type for /dev/uio[0-9]+
 #
 type userio_device_t;
@@ -289,5 +309,6 @@
 #
 
 allow devices_unconfined_type self:capability sys_rawio;
-allow devices_unconfined_type device_node:{ blk_file chr_file } *;
+allow devices_unconfined_type device_node:{ blk_file chr_file lnk_file } *;
 allow devices_unconfined_type mtrr_device_t:file *;
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/domain.if serefpolicy-3.7.19/policy/modules/kernel/domain.if
--- nsaserefpolicy/policy/modules/kernel/domain.if	2011-03-17 07:21:22.527851002 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/domain.if	2011-10-13 10:49:02.122160001 +0000
@@ -611,7 +611,7 @@
 
 ########################################
 ## <summary>
-##	Get the attributes of all domains of all domains.
+##	Get the attributes of all domains.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -630,7 +630,7 @@
 
 ########################################
 ## <summary>
-##	Get the attributes of all domains of all domains.
+##	Dontaudit geting the attributes of all domains.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1132,6 +1132,44 @@
 	dontaudit $1 domain:unix_stream_socket getattr;
 ')
 
+#######################################
+## <summary>
+##  Do not audit attempts to get the attributes
+##  of all domains unix datagram sockets.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`domain_dontaudit_getattr_all_netlink_sockets',`
+    gen_require(`
+        attribute domain;
+    ')
+
+    dontaudit $1 domain:netlink_socket_class_set getattr;
+')
+
+######################################
+## <summary>
+##  Do not audit attempts to get the attributes
+##  of all domains unix datagram sockets.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`domain_dontaudit_getattr_all_netlink_kobject_uevent_sockets',`
+    gen_require(`
+        attribute domain;
+    ')
+
+    dontaudit $1 domain:netlink_kobject_uevent_socket getattr;
+')
+
 ########################################
 ## <summary>
 ##	Get the attributes of all domains
@@ -1372,18 +1410,34 @@
 ##	</summary>
 ## </param>
 #
-interface(`domain_mmap_low',`
+interface(`domain_mmap_low_type',`
 	gen_require(`
 		attribute mmap_low_domain_type;
 	')
 
-	allow $1 self:memprotect mmap_zero;
-
 	typeattribute $1 mmap_low_domain_type;
 ')
 
 ########################################
 ## <summary>
+##	Ability to mmap a low area of the address space,
+##      as configured by /proc/sys/kernel/mmap_min_addr.
+##      Preventing such mappings helps protect against
+##      exploiting null deref bugs in the kernel.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to mmap low memory.
+##	</summary>
+## </param>
+#
+interface(`domain_mmap_low',`
+
+	allow $1 self:memprotect mmap_zero;
+')
+
+########################################
+## <summary>
 ##	Allow specified type to receive labeled
 ##	networking packets from all domains, over
 ##	all protocols (TCP, UDP, etc)
@@ -1444,4 +1498,29 @@
 	typeattribute $1 can_change_object_identity;
 	typeattribute $1 set_curr_context;
 	typeattribute $1 process_uncond_exempt;
+
+	mcs_file_read_all($1)
+	mcs_file_write_all($1)
+	mcs_killall($1)
+	mcs_ptrace_all($1)
+	mcs_socket_write_all_levels($1)
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	all leaked sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`domain_dontaudit_leaks',`
+	gen_require(`
+		attribute domain;
+	')
+
+	dontaudit $1 domain:socket_class_set { read write };
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/domain.te serefpolicy-3.7.19/policy/modules/kernel/domain.te
--- nsaserefpolicy/policy/modules/kernel/domain.te	2011-03-17 07:21:22.500851003 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/domain.te	2012-03-20 22:20:11.717520367 +0000
@@ -5,6 +5,21 @@
 #
 # Declarations
 #
+## <desc>
+## <p>
+## Allow all domains to use other domains file descriptors
+## </p>
+## </desc>
+#
+gen_tunable(allow_domain_fd_use, true)
+
+## <desc>
+## <p>
+## Allow all domains to have the kernel load modules
+## </p>
+## </desc>
+#
+gen_tunable(domain_kernel_load_modules, false)
 
 # Mark process types as domains
 attribute domain;
@@ -80,14 +95,17 @@
 allow domain self:lnk_file { read_lnk_file_perms lock ioctl };
 allow domain self:file rw_file_perms;
 kernel_read_proc_symlinks(domain)
+kernel_read_crypto_sysctls(domain)
+
 # Every domain gets the key ring, so we should default
 # to no one allowed to look at it; afs kernel support creates
 # a keyring
 kernel_dontaudit_search_key(domain)
 kernel_dontaudit_link_key(domain)
+kernel_dontaudit_search_debugfs(domain)
 
 # create child processes in the domain
-allow domain self:process { fork sigchld };
+allow domain self:process { fork getsched sigchld };
 
 # Use trusted objects in /dev
 dev_rw_null(domain)
@@ -97,6 +115,17 @@
 # list the root directory
 files_list_root(domain)
 
+# allow all domains to search through default_t directory, since users sometimes
+# place labels within these directories.  (samba_share_t) for example.
+files_search_default(domain)
+
+# All executables should be able to search the directory they are in
+corecmd_search_bin(domain)
+
+tunable_policy(`domain_kernel_load_modules',`
+	kernel_request_load_module(domain)
+')
+
 tunable_policy(`global_ssp',`
 	# enable reading of urandom for all domains:
 	# this should be enabled when all programs
@@ -106,8 +135,13 @@
 ')
 
 optional_policy(`
+	afs_rw_cache(domain)
+')
+
+optional_policy(`
 	libs_use_ld_so(domain)
 	libs_use_shared_libs(domain)
+	libs_read_lib_files(domain)
 ')
 
 optional_policy(`
@@ -118,6 +152,7 @@
 optional_policy(`
 	xserver_dontaudit_use_xdm_fds(domain)
 	xserver_dontaudit_rw_xdm_pipes(domain)
+	xserver_dontaudit_append_xdm_home_files(domain)
 ')
 
 ########################################
@@ -136,6 +171,8 @@
 allow unconfined_domain_type domain:fd use;
 allow unconfined_domain_type domain:fifo_file rw_file_perms;
 
+allow unconfined_domain_type unconfined_domain_type:dbus send_msg;
+
 # Act upon any other process.
 allow unconfined_domain_type domain:process ~{ transition dyntransition execmem execstack execheap };
 
@@ -153,3 +190,86 @@
 
 # receive from all domains over labeled networking
 domain_all_recvfrom_all_domains(unconfined_domain_type)
+
+selinux_getattr_fs(domain)
+selinux_search_fs(domain)
+selinux_dontaudit_read_fs(domain)
+
+seutil_dontaudit_read_config(domain)
+
+init_sigchld(domain)
+init_signull(domain)
+
+ifdef(`distro_redhat',`
+	files_search_mnt(domain)
+	optional_policy(`
+		unconfined_use_fds(domain)
+	')
+')
+
+# these seem questionable:
+
+optional_policy(`
+	abrt_domtrans_helper(domain)
+	abrt_read_pid_files(domain)
+	abrt_read_state(domain)
+	abrt_signull(domain)
+	abrt_append_cache(domain)
+	abrt_rw_fifo_file(domain)
+	#abrt_stream_connect(domain)
+')
+
+optional_policy(`
+	rpm_use_fds(domain)
+	rpm_read_pipes(domain)
+	rpm_search_log(domain)
+	rpm_append_tmp(domain)
+	rpm_dontaudit_leaks(domain)
+	rpm_read_script_tmp_files(domain)
+	rpm_inherited_fifo(domain)
+')
+
+optional_policy(`
+	sosreport_append_tmp_files(domain)
+')
+
+tunable_policy(`allow_domain_fd_use',`
+	# Allow all domains to use fds past to them
+	allow domain domain:fd use;
+')
+
+optional_policy(`
+	cron_dontaudit_write_system_job_tmp_files(domain)
+	cron_rw_pipes(domain)
+	cron_rw_system_job_pipes(domain)
+
+ifdef(`hide_broken_symptoms',`
+	dontaudit domain self:udp_socket listen;
+	allow domain domain:key { link search };
+	dontaudit domain domain:socket_class_set { read write };
+	')
+')
+
+optional_policy(`
+    ipsec_match_default_spd(domain)
+')
+
+optional_policy(`
+	ssh_rw_pipes(domain)
+')
+
+optional_policy(`
+	unconfined_dontaudit_rw_pipes(domain)
+	unconfined_sigchld(domain)
+')
+
+# broken kernel
+dontaudit can_change_object_identity can_change_object_identity:key link;
+
+tunable_policy(`allow_polyinstantiation',`
+	files_polyinstantiate_all(polydomain)
+	userdom_manage_user_home_content_dirs(polydomain)
+	userdom_manage_user_home_content_files(polydomain)
+	userdom_relabelto_user_home_dirs(polydomain)
+	userdom_relabelto_user_home_files(polydomain)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/files.fc serefpolicy-3.7.19/policy/modules/kernel/files.fc
--- nsaserefpolicy/policy/modules/kernel/files.fc	2011-03-17 07:21:22.443851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/files.fc	2012-05-10 08:43:43.560006917 +0000
@@ -18,6 +18,7 @@
 /fsckoptions 		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /halt			--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /poweroff		--	gen_context(system_u:object_r:etc_runtime_t,s0)
+/[^/]+			--	gen_context(system_u:object_r:etc_runtime_t,s0)
 ')
 
 ifdef(`distro_suse',`
@@ -48,20 +49,29 @@
 /etc/.*				gen_context(system_u:object_r:etc_t,s0)
 /etc/\.fstab\.hal\..+	--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/blkid(/.*)?		gen_context(system_u:object_r:etc_runtime_t,s0)
+/etc/cmtab		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/fstab\.REVOKE	--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/HOSTNAME		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/ioctl\.save	--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/issue		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/issue\.net		--	gen_context(system_u:object_r:etc_runtime_t,s0)
+/etc/killpower		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/localtime		-l	gen_context(system_u:object_r:etc_t,s0)
-/etc/mtab		--	gen_context(system_u:object_r:etc_runtime_t,s0)
+/etc/mtab.*			-- gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/mtab\.fuselock	--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/motd		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/nohotplug		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/nologin.*		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/reader\.conf	-- 	gen_context(system_u:object_r:etc_runtime_t,s0)
+/etc/securetty 		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/smartd\.conf.*	--	gen_context(system_u:object_r:etc_runtime_t,s0)
 
+/etc/sysctl\.conf(\.old)?               --      gen_context(system_u:object_r:system_conf_t,s0)
+/etc/sysconfig/ebtables.*              	--      gen_context(system_u:object_r:system_conf_t,s0)
+/etc/sysconfig/ip6?tables.*             --      gen_context(system_u:object_r:system_conf_t,s0)
+/etc/sysconfig/ipvsadm.*                --      gen_context(system_u:object_r:system_conf_t,s0)
+/etc/sysconfig/system-config-firewall.* --      gen_context(system_u:object_r:system_conf_t,s0)
+
 /etc/cups/client\.conf	--	gen_context(system_u:object_r:etc_t,s0)
 
 /etc/ipsec\.d/examples(/.*)?	gen_context(system_u:object_r:etc_t,s0)
@@ -71,8 +81,9 @@
 /etc/ptal/ptal-printd-like -- 	gen_context(system_u:object_r:etc_runtime_t,s0)
 
 /etc/sysconfig/hwconf	--	gen_context(system_u:object_r:etc_runtime_t,s0)
-/etc/sysconfig/iptables\.save -- gen_context(system_u:object_r:etc_runtime_t,s0)
-/etc/sysconfig/firstboot --	gen_context(system_u:object_r:etc_runtime_t,s0)
+/etc/sysconfig/ip6?tables\.save -- gen_context(system_u:object_r:etc_runtime_t,s0)
+
+/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf --	gen_context(system_u:object_r:etc_runtime_t,s0)
 
 ifdef(`distro_gentoo', `
 /etc/profile\.env	--	gen_context(system_u:object_r:etc_runtime_t,s0)
@@ -93,7 +104,7 @@
 # HOME_ROOT
 # expanded by genhomedircon
 #
-HOME_ROOT		-d	gen_context(system_u:object_r:home_root_t,s0-mls_systemhigh)
+HOME_ROOT			gen_context(system_u:object_r:home_root_t,s0-mls_systemhigh)
 HOME_ROOT/\.journal		<<none>>
 HOME_ROOT/lost\+found	-d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
 HOME_ROOT/lost\+found/.*		<<none>>
@@ -157,6 +168,12 @@
 /proc			-d	<<none>>
 /proc/.*			<<none>>
 
+ifdef(`distro_redhat',`
+/rhev           -d  gen_context(system_u:object_r:mnt_t,s0)
+/rhev(/[^/]*)?  -d gen_context(system_u:object_r:mnt_t,s0)
+/rhev/[^/]*/.*   <<none>>
+')
+
 #
 # /selinux
 #
@@ -170,12 +187,6 @@
 /srv/.*				gen_context(system_u:object_r:var_t,s0)
 
 #
-# /sys
-#
-/sys			-d	<<none>>
-/sys/.*				<<none>>
-
-#
 # /tmp
 #
 /tmp			-d	gen_context(system_u:object_r:tmp_t,s0-mls_systemhigh)
@@ -191,6 +202,7 @@
 /usr			-d	gen_context(system_u:object_r:usr_t,s0)
 /usr/.*				gen_context(system_u:object_r:usr_t,s0)
 /usr/\.journal			<<none>>
+/export(/.*)?		gen_context(system_u:object_r:usr_t,s0)
 
 /usr/doc(/.*)?/lib(/.*)?		gen_context(system_u:object_r:usr_t,s0)
 
@@ -205,15 +217,19 @@
 /usr/local/lost\+found	-d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
 /usr/local/lost\+found/.*	<<none>>
 
+ifndef(`distro_redhat',`
 /usr/local/src(/.*)?		gen_context(system_u:object_r:src_t,s0)
+')
 
 /usr/lost\+found		-d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
 /usr/lost\+found/.*		<<none>>
 
 /usr/share/doc(/.*)?/README.*	gen_context(system_u:object_r:usr_t,s0)
 
+ifndef(`distro_redhat',`
 /usr/src(/.*)?			gen_context(system_u:object_r:src_t,s0)
 /usr/src/kernels/.+/lib(/.*)?	gen_context(system_u:object_r:usr_t,s0)
+')
 
 /usr/tmp			-d	gen_context(system_u:object_r:tmp_t,s0-mls_systemhigh)
 /usr/tmp/.*			<<none>>
@@ -229,6 +245,8 @@
 
 /var/ftp/etc(/.*)?		gen_context(system_u:object_r:etc_t,s0)
 
+/var/named/chroot/etc(/.*)? 	gen_context(system_u:object_r:etc_t,s0)
+
 /var/lib(/.*)?			gen_context(system_u:object_r:var_lib_t,s0)
 
 /var/lib/nfs/rpc_pipefs(/.*)?	<<none>>
@@ -254,3 +272,5 @@
 ifdef(`distro_debian',`
 /var/run/motd		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 ')
+/nsr(/.*)?						gen_context(system_u:object_r:var_t,s0)
+/nsr/logs(/.*)?						gen_context(system_u:object_r:var_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/files.if serefpolicy-3.7.19/policy/modules/kernel/files.if
--- nsaserefpolicy/policy/modules/kernel/files.if	2011-03-17 07:21:22.428851000 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/files.if	2012-06-06 13:00:00.277476415 +0000
@@ -541,6 +541,56 @@
 	allow $1 non_security_file_type:dir manage_dir_perms;
 ')
 
+#######################################
+## <summary>
+##  Manage all non-security files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_manage_non_security_files',`
+    gen_require(`
+        attribute non_security_file_type;
+    ')
+
+    manage_files_pattern($1, non_security_file_type, non_security_file_type)
+	manage_lnk_files_pattern($1, non_security_file_type, non_security_file_type)
+')
+
+#######################################
+## <summary>
+##  Relabel all non-security files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_relabel_non_security_files',`
+    gen_require(`
+        attribute non_security_file_type;
+    ')
+
+    relabel_files_pattern($1, non_security_file_type, non_security_file_type)
+    allow $1 { non_security_file_type }:dir list_dir_perms;
+    relabel_dirs_pattern($1, { non_security_file_type }, { non_security_file_type })
+    relabel_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+    relabel_lnk_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+    relabel_fifo_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+    relabel_sock_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+    relabel_blk_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+    relabel_chr_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+
+	# satisfy the assertions:
+	seutil_relabelto_bin_policy($1)
+')
+
+
 ########################################
 ## <summary>
 ##	Get the attributes of all files.
@@ -1053,10 +1103,8 @@
 	relabel_lnk_files_pattern($1, { file_type $2 }, { file_type $2 })
 	relabel_fifo_files_pattern($1, { file_type $2 }, { file_type $2 })
 	relabel_sock_files_pattern($1, { file_type $2 }, { file_type $2 })
-	# this is only relabelfrom since there should be no
-	# device nodes with file types.
-	relabelfrom_blk_files_pattern($1, { file_type $2 }, { file_type $2 })
-	relabelfrom_chr_files_pattern($1, { file_type $2 }, { file_type $2 })
+	relabel_blk_files_pattern($1, { file_type $2 }, { file_type $2 })
+	relabel_chr_files_pattern($1, { file_type $2 }, { file_type $2 })
 
 	# satisfy the assertions:
 	seutil_relabelto_bin_policy($1)
@@ -1408,6 +1456,60 @@
 	allow $1 mountpoint:dir getattr;
 ')
 
+#######################################
+## <summary>
+##  List the attributes of all mount points.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_list_all_mountpoints',`
+    gen_require(`
+        attribute mountpoint;
+    ')
+
+    allow $1 mountpoint:dir list_dir_perms;
+')
+
+#######################################
+## <summary>
+##  Get the attributes of all mount points.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_setattr_all_mountpoints',`
+    gen_require(`
+        attribute mountpoint;
+    ')
+
+    allow $1 mountpoint:dir setattr;
+')
+
+#######################################
+## <summary>
+## Do not audit listing of all mount points.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain to not audit.
+## </summary>
+## </param>
+#
+interface(`files_dontaudit_list_all_mountpoints',`
+	gen_require(`
+		attribute mountpoint;
+	')
+
+	dontaudit $1 mountpoint:dir list_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Search all mount points.
@@ -1428,6 +1530,42 @@
 
 ########################################
 ## <summary>
+##	Search all mount points.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_search_all_mountpoints',`
+	gen_require(`
+		attribute mountpoint;
+	')
+
+	dontaudit $1 mountpoint:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Write all mount points.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_write_all_mountpoints',`
+	gen_require(`
+		attribute mountpoint;
+	')
+
+	allow $1 mountpoint:dir write;
+')
+
+########################################
+## <summary>
 ##	List the contents of the root directory.
 ## </summary>
 ## <param name="domain">
@@ -1552,6 +1690,24 @@
 
 ########################################
 ## <summary>
+##	Remove file entries from the root directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_delete_root_file',`
+	gen_require(`
+		type root_t;
+	')
+
+	allow $1 root_t:file unlink;
+')
+
+########################################
+## <summary>
 ##	Remove entries from the root directory.
 ## </summary>
 ## <param name="domain">
@@ -1697,6 +1853,24 @@
 
 ########################################
 ## <summary>
+##	manage directories in /boot
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_manage_boot_dirs',`
+	gen_require(`
+		type boot_t;
+	')
+
+	allow $1 boot_t:dir manage_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Create a private type object in boot
 ##	with an automatic type transition
 ## </summary>
@@ -1740,7 +1914,7 @@
 		type boot_t;
 	')
 
-	manage_files_pattern($1, boot_t, boot_t)
+	read_files_pattern($1, boot_t, boot_t)
 ')
 
 ########################################
@@ -1781,6 +1955,25 @@
 	relabelfrom_files_pattern($1, boot_t, boot_t)
 ')
 
+#######################################
+## <summary>
+##  Read symbolic links
+##  in the /boot directory.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_read_boot_symlinks',`
+    gen_require(`
+        type boot_t;
+    ')
+
+    read_lnk_files_pattern($1, boot_t, boot_t)
+')
+
 ########################################
 ## <summary>
 ##	Read and write symbolic links
@@ -2209,6 +2402,24 @@
 	allow $1 etc_t:dir rw_dir_perms;
 ')
 
+########################################
+## <summary>
+##	Do not audit attempts to write to /etc dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_write_etc_dirs',`
+	gen_require(`
+		type etc_t;
+	')
+
+	dontaudit $1 etc_t:dir write;
+')
+
 ##########################################
 ## <summary>
 ## 	Manage generic directories in /etc
@@ -2280,6 +2491,7 @@
 	allow $1 etc_t:dir list_dir_perms;
 	read_files_pattern($1, etc_t, etc_t)
 	read_lnk_files_pattern($1, etc_t, etc_t)
+	files_read_config_files($1)
 ')
 
 ########################################
@@ -2362,6 +2574,24 @@
 
 ########################################
 ## <summary>
+##	Remove entries from the etc directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_delete_etc_dir_entry',`
+	gen_require(`
+		type etc_t;
+	')
+
+	allow $1 etc_t:dir del_entry_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Execute generic files in /etc.
 ## </summary>
 ## <param name="domain">
@@ -2590,6 +2820,25 @@
 	')
 
 	manage_files_pattern($1, { etc_t etc_runtime_t }, etc_runtime_t)
+	read_lnk_files_pattern($1, etc_t, etc_runtime_t)
+')
+
+#######################################
+## <summary>
+##	Do not audit attempts to set the attributes of the etc_runtime files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_setattr_etc_runtime_files',`
+	gen_require(`
+		type etc_runtime_t;
+	')
+
+	dontaudit $1 etc_runtime_t:file setattr;
 ')
 
 ########################################
@@ -2789,8 +3038,8 @@
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete files
-##	on new filesystems that have not yet been labeled.
+##	Delete lnk_files on new filesystems
+##	that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2798,18 +3047,18 @@
 ##	</summary>
 ## </param>
 #
-interface(`files_manage_isid_type_files',`
+interface(`files_delete_isid_type_symlinks',`
 	gen_require(`
 		type file_t;
 	')
 
-	allow $1 file_t:file manage_file_perms;
+	delete_lnk_files_pattern($1, file_t, file_t)
 ')
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete symbolic links
-##	on new filesystems that have not yet been labeled.
+##	Delete fifo files on new filesystems
+##	that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2817,17 +3066,17 @@
 ##	</summary>
 ## </param>
 #
-interface(`files_manage_isid_type_symlinks',`
+interface(`files_delete_isid_type_fifo_files',`
 	gen_require(`
 		type file_t;
 	')
 
-	allow $1 file_t:lnk_file manage_lnk_file_perms;
+	delete_fifo_files_pattern($1, file_t, file_t)
 ')
 
 ########################################
 ## <summary>
-##	Read and write block device nodes on new filesystems
+##	Delete sock files on new filesystems
 ##	that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
@@ -2836,18 +3085,18 @@
 ##	</summary>
 ## </param>
 #
-interface(`files_rw_isid_type_blk_files',`
+interface(`files_delete_isid_type_sock_files',`
 	gen_require(`
 		type file_t;
 	')
 
-	allow $1 file_t:blk_file rw_blk_file_perms;
+	delete_sock_files_pattern($1, file_t, file_t)
 ')
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete block device nodes
-##	on new filesystems that have not yet been labeled.
+##	Delete blk files on new filesystems
+##	that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2855,18 +3104,18 @@
 ##	</summary>
 ## </param>
 #
-interface(`files_manage_isid_type_blk_files',`
+interface(`files_delete_isid_type_blk_files',`
 	gen_require(`
 		type file_t;
 	')
 
-	allow $1 file_t:blk_file manage_blk_file_perms;
+	delete_blk_files_pattern($1, file_t, file_t)
 ')
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete character device nodes
-##	on new filesystems that have not yet been labeled.
+##	Delete chr files on new filesystems
+##	that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2874,18 +3123,18 @@
 ##	</summary>
 ## </param>
 #
-interface(`files_manage_isid_type_chr_files',`
+interface(`files_delete_isid_type_chr_files',`
 	gen_require(`
 		type file_t;
 	')
 
-	allow $1 file_t:chr_file manage_chr_file_perms;
+	delete_chr_files_pattern($1, file_t, file_t)
 ')
 
 ########################################
 ## <summary>
-##	Get the attributes of the home directories root
-##	(/home).
+##	Do not audit attempts to write to chr_files
+##	that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2893,37 +3142,37 @@
 ##	</summary>
 ## </param>
 #
-interface(`files_getattr_home_dir',`
+interface(`files_dontaudit_write_isid_chr_files',`
 	gen_require(`
-		type home_root_t;
+		type file_t;
 	')
 
-	allow $1 home_root_t:dir getattr;
+	dontaudit $1 file_t:chr_file write;
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to get the
-##	attributes of the home directories root
-##	(/home).
+##	Create, read, write, and delete files
+##	on new filesystems that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`files_dontaudit_getattr_home_dir',`
+interface(`files_manage_isid_type_files',`
 	gen_require(`
-		type home_root_t;
+		type file_t;
 	')
 
-	dontaudit $1 home_root_t:dir getattr;
+	allow $1 file_t:file manage_file_perms;
 ')
 
 ########################################
 ## <summary>
-##	Search home directories root (/home).
+##	Create, read, write, and delete symbolic links
+##	on new filesystems that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2931,55 +3180,56 @@
 ##	</summary>
 ## </param>
 #
-interface(`files_search_home',`
+interface(`files_manage_isid_type_symlinks',`
 	gen_require(`
-		type home_root_t;
+		type file_t;
 	')
 
-	allow $1 home_root_t:dir search_dir_perms;
+	allow $1 file_t:lnk_file manage_lnk_file_perms;
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to search
-##	home directories root (/home).
+##	Read and write block device nodes on new filesystems
+##	that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`files_dontaudit_search_home',`
+interface(`files_rw_isid_type_blk_files',`
 	gen_require(`
-		type home_root_t;
+		type file_t;
 	')
 
-	dontaudit $1 home_root_t:dir search_dir_perms;
+	allow $1 file_t:blk_file rw_blk_file_perms;
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to list
-##	home directories root (/home).
+##	Create, read, write, and delete block device nodes
+##	on new filesystems that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`files_dontaudit_list_home',`
+interface(`files_manage_isid_type_blk_files',`
 	gen_require(`
-		type home_root_t;
+		type file_t;
 	')
 
-	dontaudit $1 home_root_t:dir list_dir_perms;
+	allow $1 file_t:blk_file manage_blk_file_perms;
 ')
 
 ########################################
 ## <summary>
-##	Get listing of home directories.
+##	Create, read, write, and delete character device nodes
+##	on new filesystems that have not yet been labeled.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2987,12 +3237,131 @@
 ##	</summary>
 ## </param>
 #
-interface(`files_list_home',`
+interface(`files_manage_isid_type_chr_files',`
 	gen_require(`
-		type home_root_t;
+		type file_t;
 	')
 
-	allow $1 home_root_t:dir list_dir_perms;
+	allow $1 file_t:chr_file manage_chr_file_perms;
+')
+
+########################################
+## <summary>
+##	Get the attributes of the home directories root
+##	(/home).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_getattr_home_dir',`
+	gen_require(`
+		type home_root_t;
+	')
+
+	allow $1 home_root_t:dir getattr;
+	allow $1 home_root_t:lnk_file getattr;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to get the
+##	attributes of the home directories root
+##	(/home).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_getattr_home_dir',`
+	gen_require(`
+		type home_root_t;
+	')
+
+	dontaudit $1 home_root_t:dir getattr;
+	dontaudit $1 home_root_t:lnk_file getattr;
+')
+
+########################################
+## <summary>
+##	Search home directories root (/home).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_search_home',`
+	gen_require(`
+		type home_root_t;
+	')
+
+	allow $1 home_root_t:dir search_dir_perms;
+	allow $1 home_root_t:lnk_file read_lnk_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to search
+##	home directories root (/home).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_search_home',`
+	gen_require(`
+		type home_root_t;
+	')
+
+	dontaudit $1 home_root_t:dir search_dir_perms;
+	dontaudit $1 home_root_t:lnk_file read_lnk_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to list
+##	home directories root (/home).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_list_home',`
+	gen_require(`
+		type home_root_t;
+	')
+
+	dontaudit $1 home_root_t:dir list_dir_perms;
+	dontaudit $1 home_root_t:lnk_file read_lnk_file_perms;
+')
+
+########################################
+## <summary>
+##	Get listing of home directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_list_home',`
+	gen_require(`
+		type home_root_t;
+	')
+
+	allow $1 home_root_t:dir list_dir_perms;
+	allow $1 home_root_t:lnk_file read_lnk_file_perms;
 ')
 
 ########################################
@@ -3156,6 +3525,24 @@
 	allow $1 mnt_t:dir list_dir_perms;
 ')
 
+#######################################
+## <summary>
+##  dontaudit List the contents of /mnt.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_dontaudit_list_mnt',`
+    gen_require(`
+        type mnt_t;
+    ')
+
+    dontaudit $1 mnt_t:dir list_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Mount a filesystem on /mnt.
@@ -3229,6 +3616,24 @@
 	read_files_pattern($1, mnt_t, mnt_t)
 ')
 
+#######################################
+## <summary>
+##  Read symbolic links in /mnt.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_read_mnt_symlinks',`
+    gen_require(`
+        type mnt_t;
+    ')
+
+    read_lnk_files_pattern($1, mnt_t, mnt_t)
+')
+
 ########################################
 ## <summary>
 ##	Create, read, write, and delete symbolic links in /mnt.
@@ -3520,6 +3925,100 @@
 	allow $1 readable_t:sock_file read_sock_file_perms;
 ')
 
+#######################################
+## <summary>
+##  Read manageable system configuration files in /etc
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_read_system_conf_files',`
+    gen_require(`
+        type etc_t, system_conf_t;
+    ')
+
+    allow $1 etc_t:dir list_dir_perms;
+    read_files_pattern($1, etc_t, system_conf_t)
+    read_lnk_files_pattern($1, etc_t, system_conf_t)
+')
+
+######################################
+## <summary>
+##  Manage manageable system configuration files in /etc.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_manage_system_conf_files',`
+    gen_require(`
+        type etc_t, system_conf_t;
+    ')
+
+    manage_files_pattern($1, { etc_t system_conf_t }, system_conf_t)
+')
+
+#######################################
+## <summary>
+##  Relabel manageable system configuration files in /etc.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_relabelto_system_conf_files',`
+    gen_require(`
+        type system_conf_t;
+    ')
+
+    relabelto_files_pattern($1, system_conf_t, system_conf_t)
+')
+
+#####################################
+## <summary>
+##  Relabel manageable system configuration files in /etc.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_relabelfrom_system_conf_files',`
+    gen_require(`
+        type system_conf_t;
+    ')
+
+    relabelfrom_files_pattern($1, system_conf_t, system_conf_t)
+')
+
+###################################
+## <summary>
+##  Create files in /etc with the type used for
+##  the manageable system config files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`files_etc_filetrans_system_conf',`
+    gen_require(`
+        type etc_t, system_conf_t;
+    ')
+
+    filetrans_pattern($1, etc_t, system_conf_t, file)
+')
+
 ########################################
 ## <summary>
 ##	Allow the specified type to associate
@@ -3649,6 +4148,24 @@
 	dontaudit $1 tmp_t:dir list_dir_perms;
 ')
 
+#######################################
+## <summary>
+##  Allow read and write to the tmp directory (/tmp).
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain not to audit.
+##  </summary>
+## </param>
+#
+interface(`files_rw_generic_tmp_dir',`
+    gen_require(`
+        type tmp_t;
+    ')
+
+    allow $1 tmp_t:dir rw_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Remove entries from the tmp directory.
@@ -3705,6 +4222,32 @@
 
 ########################################
 ## <summary>
+##	Allow shared library text relocations in tmp files.
+## </summary>
+## <desc>
+##	<p>
+##	Allow shared library text relocations in tmp files.
+##	</p>
+##	<p>
+##	This is added to support java policy.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_execmod_tmp',`
+	gen_require(`
+		attribute tmpfile;
+	')
+
+	allow $1 tmpfile:file execmod;
+')
+
+########################################
+## <summary>
 ##	Manage temporary files and directories in /tmp.
 ## </summary>
 ## <param name="domain">
@@ -3757,6 +4300,24 @@
 	rw_sock_files_pattern($1, tmp_t, tmp_t)
 ')
 
+#######################################
+## <summary>
+##  Relabel a dir from the type used in /tmp.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_relabelfrom_tmp_dirs',`
+    gen_require(`
+        type tmp_t;
+    ')
+
+    relabelfrom_dirs_pattern($1, tmp_t, tmp_t)
+')
+
 ########################################
 ## <summary>
 ##	Set the attributes of all tmp directories.
@@ -3918,6 +4479,13 @@
 	delete_lnk_files_pattern($1, tmpfile, tmpfile)
 	delete_fifo_files_pattern($1, tmpfile, tmpfile)
 	delete_sock_files_pattern($1, tmpfile, tmpfile)
+	files_delete_isid_type_dirs($1)
+	files_delete_isid_type_files($1)
+	files_delete_isid_type_symlinks($1)
+	files_delete_isid_type_fifo_files($1)
+	files_delete_isid_type_sock_files($1)
+	files_delete_isid_type_blk_files($1)
+	files_delete_isid_type_chr_files($1)
 ')
 
 ########################################
@@ -4013,6 +4581,24 @@
 
 ########################################
 ## <summary>
+##	Set the attributes of the /usr directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_setattr_usr_dirs',`
+	gen_require(`
+		type usr_t;
+	')
+
+	allow $1 usr_t:dir setattr;
+')
+
+########################################
+## <summary>
 ##	Delete generic files in /usr in the caller domain.
 ## </summary>
 ## <param name="domain">
@@ -4026,7 +4612,7 @@
 		type usr_t;
 	')
 
-	allow $1 usr_t:file delete_file_perms;
+	delete_files_pattern($1, usr_t, usr_t)
 ')
 
 ########################################
@@ -4107,6 +4693,24 @@
 
 ########################################
 ## <summary>
+##	dontaudit write of /usr dirs
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_write_usr_dirs',`
+	gen_require(`
+		type usr_t;
+	')
+
+	dontaudit $1 usr_t:dir write;
+')
+
+########################################
+## <summary>
 ##	dontaudit write of /usr files
 ## </summary>
 ## <param name="domain">
@@ -4451,6 +5055,24 @@
 	allow $1 var_t:dir list_dir_perms;
 ')
 
+#####################################
+## <summary>
+## Do not audit listing of the var directory (/var).
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain to not audit.
+##     </summary>
+## </param>
+#
+interface(`files_dontaudit_list_var',`
+       gen_require(`
+               type var_t;
+       ')
+
+       dontaudit $1 var_t:dir list_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Create, read, write, and delete directories
@@ -4842,6 +5464,24 @@
 
 ########################################
 ## <summary>
+##     Set the attributes of the /var/lock directory.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`files_setattr_lock_dirs',`
+	gen_require(`
+		type var_lock_t;
+	')
+
+	allow $1 var_lock_t:dir setattr;
+')
+
+########################################
+## <summary>
 ##	Add and remove entries in the /var/lock
 ##	directories.
 ## </summary>
@@ -5032,6 +5672,62 @@
 	search_dirs_pattern($1, var_t, var_run_t)
 ')
 
+#######################################
+## <summary>
+##	Do not audit attempts to search
+##	the all /var/run directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_search_all_pids',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	dontaudit $1 pidfile:dir search_dir_perms;
+')
+
+#######################################
+## <summary>
+## Add and remove entries from pid directories.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`files_rw_pid_dirs',`
+	gen_require(`
+		type var_run_t;
+	')
+
+	allow $1 var_run_t:dir rw_dir_perms;
+')
+
+#######################################
+## <summary>
+##      Create generic pid directory.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`files_create_var_run_dirs',`
+        gen_require(`
+                type var_t, var_run_t;
+        ')
+
+        allow $1 var_t:dir search_dir_perms;
+        allow $1 var_run_t:dir create_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to search
@@ -5091,6 +5787,24 @@
 
 ########################################
 ## <summary>
+##	Write named generic process ID pipes
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_write_generic_pid_pipes',`
+	gen_require(`
+		type var_run_t;
+	')
+
+	allow $1 var_run_t:fifo_file write;
+')
+
+########################################
+## <summary>
 ##	Create an object in the process ID directory, with a private type.
 ## </summary>
 ## <desc>
@@ -5238,6 +5952,7 @@
 
 	list_dirs_pattern($1, var_t, pidfile)
 	read_files_pattern($1, pidfile, pidfile)
+	read_lnk_files_pattern($1, pidfile, pidfile)
 ')
 
 ########################################
@@ -5306,6 +6021,24 @@
 
 ########################################
 ## <summary>
+##	Set the attributes of the /var/run directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_setattr_pid_dirs',`
+	gen_require(`
+		type var_run_t;
+	')
+
+	allow $1 var_run_t:dir setattr;
+')
+
+########################################
+## <summary>
 ##	Search the contents of generic spool
 ##	directories (/var/spool).
 ## </summary>
@@ -5494,12 +6227,15 @@
 	allow $1 poly_t:dir { create mounton };
 	fs_unmount_xattr_fs($1)
 
+	fs_mount_tmpfs($1)
+	fs_unmount_tmpfs($1)
+
 	ifdef(`distro_redhat',`
 		# namespace.init
+		files_search_tmp($1)
 		files_search_home($1)
 		corecmd_exec_bin($1)
 		seutil_domtrans_setfiles($1)
-		mount_domtrans($1)
 	')
 ')
 
@@ -5520,3 +6256,233 @@
 
 	typeattribute $1 files_unconfined_type;
 ')
+
+########################################
+## <summary>
+##	Create a core files in /
+## </summary>
+## <desc>
+##	<p>
+##	Create a core file in /,
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_manage_root_files',`
+	gen_require(`
+		type root_t;
+	')
+
+	manage_files_pattern($1, root_t, root_t)
+')
+
+########################################
+## <summary>
+##     Create a default directory
+## </summary>
+## <desc>
+##     <p>
+##     Create a default_t direcrory
+##     </p>
+## </desc>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_create_default_dir',`
+       gen_require(`
+               type default_t;
+       ')
+
+       allow $1 default_t:dir create;
+')
+
+########################################
+## <summary>
+##	Create, default_t objects with an automatic
+##	type transition.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="object">
+##	<summary>
+##	The class of the object being created.
+##	</summary>
+## </param>
+#
+interface(`files_root_filetrans_default',`
+       gen_require(`
+               type root_t, default_t;
+       ')
+
+       filetrans_pattern($1, root_t, default_t, $2)
+')
+
+########################################
+## <summary>
+##	manage generic symbolic links
+##	in the /var/run directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_manage_generic_pids_symlinks',`
+	gen_require(`
+		type var_run_t;
+	')
+
+	manage_lnk_files_pattern($1,var_run_t,var_run_t)
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to getattr
+##	all tmpfs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_getattr_tmpfs_files',`
+	gen_require(`
+		attribute tmpfsfile;
+	')
+
+	allow $1 tmpfsfile:file getattr;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read security files 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_read_security_files',`
+	gen_require(`
+		attribute security_file_type;
+	')
+
+	dontaudit $1 security_file_type:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	rw any files inherited from another process
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="object_type">
+##  <summary>
+##  Object type.
+##  </summary>
+## </param>
+#
+interface(`files_rw_all_inherited_files',`
+	gen_require(`
+		attribute file_type;
+	')
+
+	allow $1 { file_type $2 }:file rw_inherited_file_perms;
+	allow $1 { file_type $2 }:fifo_file rw_inherited_fifo_file_perms;
+	allow $1 { file_type $2 }:sock_file rw_inherited_sock_file_perms;
+	allow $1 { file_type $2 }:chr_file rw_inherited_chr_file_perms;
+')
+
+########################################
+## <summary>
+##	Allow any file point to be the entrypoint of this domain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_entrypoint_all_files',`
+	gen_require(`
+		attribute file_type;
+	')
+	allow $1 file_type:file entrypoint;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to rw inherited file perms
+##	of non security files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_all_non_security_leaks',`
+	gen_require(`
+		attribute non_security_file_type;
+	')
+
+	dontaudit $1 non_security_file_type:file_class_set rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	all leaked files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_leaks',`
+	gen_require(`
+		attribute file_type;
+	')
+
+	dontaudit $1 file_type:file rw_inherited_file_perms;
+	dontaudit $1 file_type:lnk_file { read };
+')
+
+########################################
+## <summary>
+##	Allow domain to create_file_ass all types
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_create_as_is_all_files',`
+	gen_require(`
+		attribute file_type;
+		class kernel_service create_files_as;
+	')
+
+	allow $1 file_type:kernel_service create_files_as;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/files.te serefpolicy-3.7.19/policy/modules/kernel/files.te
--- nsaserefpolicy/policy/modules/kernel/files.te	2011-03-17 07:21:22.446851000 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/files.te	2011-11-21 14:03:22.572938397 +0000
@@ -1,4 +1,4 @@
-
+	
 policy_module(files, 1.12.5)
 
 ########################################
@@ -12,6 +12,7 @@
 attribute mountpoint;
 attribute pidfile;
 attribute configfile;
+attribute etcfile;
 
 # For labeling types that are to be polyinstantiated
 attribute polydir;
@@ -59,12 +60,21 @@
 typealias etc_t alias automount_etc_t;
 typealias etc_t alias snmpd_etc_t;
 
+# system_conf_t is a new type of various
+# files in /etc/ that can be managed and
+# created by several domains.
+# 
+type system_conf_t, configfile;
+files_type(system_conf_t)
+# compatibility aliases for removed type:
+typealias system_conf_t alias iptables_conf_t;
+
 #
 # etc_runtime_t is the type of various
 # files in /etc that are automatically
 # generated during initialization.
 #
-type etc_runtime_t;
+type etc_runtime_t, configfile;
 files_type(etc_runtime_t)
 #Temporarily in policy until FC5 dissappears
 typealias etc_runtime_t alias firstboot_rw_t;
@@ -134,6 +144,7 @@
 #
 type system_map_t;
 files_type(system_map_t)
+procs_type(system_map_t)
 genfscon proc /kallsyms gen_context(system_u:object_r:system_map_t,s0)
 
 #
@@ -194,6 +205,7 @@
 fs_associate_noxattr(file_type)
 fs_associate_tmpfs(file_type)
 fs_associate_ramfs(file_type)
+fs_associate_hugetlbfs(file_type)
 
 ########################################
 #
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/filesystem.fc serefpolicy-3.7.19/policy/modules/kernel/filesystem.fc
--- nsaserefpolicy/policy/modules/kernel/filesystem.fc	2011-03-17 07:21:22.518851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/filesystem.fc	2011-03-17 07:21:05.372851002 +0000
@@ -1 +1,3 @@
 /dev/shm	-d	gen_context(system_u:object_r:tmpfs_t,s0)
+
+/cgroup(/.*)?           gen_context(system_u:object_r:cgroup_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/filesystem.if serefpolicy-3.7.19/policy/modules/kernel/filesystem.if
--- nsaserefpolicy/policy/modules/kernel/filesystem.if	2011-03-17 07:21:22.475851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/filesystem.if	2012-07-17 14:38:56.944727974 +0000
@@ -559,6 +559,24 @@
 
 ########################################
 ## <summary>
+##	Delete directories on cgroup.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_delete_cgroup_dirs', `
+	gen_require(`
+		type cgroup_t;
+	')
+
+	delete_dirs_pattern($1, cgroup_t, cgroup_t)
+')
+
+########################################
+## <summary>
 ##	Mount a cgroup filesystem.
 ## </summary>
 ## <param name="domain">
@@ -621,53 +639,32 @@
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`fs_getattr_cgroup',`
 	gen_require(`
-		type cifs_t;
+		type cgroup_t;
 	')
 
-	allow $1 cifs_t:filesystem getattr;
-')
-
-########################################
-## <summary>
-##      list dirs on cgroup
-##      file systems.
-## </summary>
-## <param name="domain">
-##      <summary>
-##      Domain allowed access.
-##      </summary>
-## </param>
-#
-interface(`fs_list_cgroup_dirs', `
-        gen_require(`
-                type cgroup_t;
-
-        ')
-
-        list_dirs_pattern($1, cgroup_t, cgroup_t)
+	allow $1 cgroup_t:filesystem getattr;
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to read
-##	dirs on a CIFS or SMB filesystem.
+##	list dirs on cgroup
+##	file systems.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`fs_dontaudit_list_cifs_dirs',`
+interface(`fs_list_cgroup_dirs', `
 	gen_require(`
-		type cifs_t;
+		type cgroup_t;
 	')
 
-	dontaudit $1 cifs_t:dir list_dir_perms;
+	list_dirs_pattern($1, cgroup_t, cgroup_t)
 ')
 
 ########################################
@@ -743,7 +740,6 @@
 interface(`fs_write_cgroup_files', `
 	gen_require(`
 		type cgroup_t;
-
 	')
 
 	write_files_pattern($1, cgroup_t, cgroup_t)
@@ -771,6 +767,82 @@
 
 ########################################
 ## <summary>
+##	Do not audit attempts to getattr,
+##	open, read and write files on cgroup
+##	file systems.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`fs_dontaudit_rw_cgroup_files',`
+	gen_require(`
+		type cgroup_t;
+	')
+
+	dontaudit $1 cgroup_t:file rw_file_perms;
+')
+
+#######################################
+## <summary>
+##      Manage cgroup files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`fs_manage_cgroup_files',`
+        gen_require(`
+                type cgroup_t;
+
+        ')
+
+        manage_files_pattern($1, cgroup_t, cgroup_t)
+')
+
+#######################################
+## <summary>
+##      Mount on cgroup directories.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`fs_mounton_cgroup', `
+        gen_require(`
+                type cgroup_t;
+        ')
+
+        allow $1 cgroup_t:dir mounton;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read
+##	dirs on a CIFS or SMB filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`fs_dontaudit_list_cifs_dirs',`
+	gen_require(`
+		type cifs_t;
+	')
+
+	dontaudit $1 cifs_t:dir list_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Mount a CIFS or SMB network filesystem.
 ## </summary>
 ## <param name="domain">
@@ -1030,6 +1102,43 @@
 	dontaudit $1 noxattrfs:file write;
 ')
 
+#######################################
+## <summary>
+##  Read/Write all inherited noxattrfs files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_rw_inherited_noxattr_fs_files',`
+    gen_require(`
+        attribute noxattrfs;
+    ')
+
+    allow $1 noxattrfs:file rw_inherited_file_perms;
+')
+
+#######################################
+## <summary>
+##  Create  noxattrfs files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_create_noxattr_fs_files',`
+    gen_require(`
+        attribute noxattrfs;
+    ')
+
+    create_files_pattern($1, noxattrfs, noxattrfs)
+	rw_files_pattern($1, noxattrfs, noxattrfs)
+')
+
 ########################################
 ## <summary>
 ##	Create, read, write, and delete all noxattrfs files.
@@ -1095,7 +1204,6 @@
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`fs_append_cifs_files',`
 	gen_require(`
@@ -1115,7 +1223,6 @@
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`fs_dontaudit_append_cifs_files',`
 	gen_require(`
@@ -1125,6 +1232,42 @@
 	dontaudit $1 cifs_t:file append_file_perms;
 ')
 
+#######################################
+## <summary>
+##      Read inherited files on a CIFS or SMB filesystem.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`fs_read_inherited_cifs_files',`
+        gen_require(`
+                type cifs_t;
+        ')
+
+        allow $1 cifs_t:file read_inherited_file_perms;
+')
+
+#######################################
+## <summary>
+##  Read/Write inherited files on a CIFS or SMB filesystem.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_rw_inherited_cifs_files',`
+    gen_require(`
+        type cifs_t;
+    ')
+
+    allow $1 cifs_t:file rw_inherited_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to read or
@@ -1141,7 +1284,7 @@
 		type cifs_t;
 	')
 
-	dontaudit $1 cifs_t:file rw_file_perms;
+	dontaudit $1 cifs_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -1404,6 +1547,25 @@
 	domain_auto_transition_pattern($1, cifs_t, $2)
 ')
 
+########################################
+## <summary>
+##	Make general progams in cifs an entrypoint for
+##	the specified domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The domain for which cifs_t is an entrypoint.
+##	</summary>
+## </param>
+#
+interface(`fs_cifs_entry_type',`
+	gen_require(`
+		type cifs_t;
+	')
+
+	domain_entry_file($1, cifs_t)
+')
+
 #######################################
 ## <summary>
 ##	Create, read, write, and delete dirs
@@ -1557,6 +1719,24 @@
 	allow $1 dosfs_t:dir search_dir_perms;
 ')
 
+#######################################
+## <summary>
+##  List dirs DOS filesystem.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_list_dos',`
+    gen_require(`
+        type dosfs_t;
+    ')
+
+    list_dirs_pattern($1, dosfs_t, dosfs_t)
+')
+
 ########################################
 ## <summary>
 ##	Create, read, write, and delete dirs
@@ -1672,6 +1852,24 @@
 	allow $1 fusefs_t:filesystem unmount;
 ')
 
+#######################################
+## <summary>
+##     Mounton a FUSEFS filesystem.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`fs_mounton_fusefs',`
+	gen_require(`
+		type fusefs_t;
+	')
+ 
+	allow $1 fusefs_t:dir mounton;
+')
+
 ########################################
 ## <summary>
 ##	Search directories
@@ -1790,6 +1988,25 @@
 	manage_files_pattern($1, fusefs_t, fusefs_t)
 ')
 
+######################################
+## <summary>
+##     Execute files on a FUSEFS filesystem.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`fs_exec_fusefs_files',`
+       gen_require(`
+               type fusefs_t;
+       ')
+
+       allow $1 fusefs_t:dir list_dir_perms;
+       exec_files_pattern($1, fusefs_t, fusefs_t)
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to create,
@@ -1831,6 +2048,25 @@
 
 ########################################
 ## <summary>
+##	Get the attributes of an hugetlbfs 
+##	filesystem;
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_getattr_hugetlbfs',`
+	gen_require(`
+		type hugetlbfs_t;
+	')
+
+	allow $1 hugetlbfs_t:filesystem getattr;
+')
+
+########################################
+## <summary>
 ##	Read and write hugetlbfs files.
 ## </summary>
 ## <param name="domain">
@@ -1847,6 +2083,42 @@
 	rw_files_pattern($1, hugetlbfs_t, hugetlbfs_t)
 ')
 
+#######################################
+## <summary>
+##      Manage hugetlbfs dirs.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`fs_manage_hugetlbfs_dirs',`
+        gen_require(`
+                type hugetlbfs_t;
+        ')
+
+        manage_dirs_pattern($1, hugetlbfs_t, hugetlbfs_t)
+')
+
+#######################################
+## <summary>
+##  List hugetlbfs dirs
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_list_hugetlbfs',`
+    gen_require(`
+        type hugetlbfs_t;
+    ')
+
+    allow $1 hugetlbfs_t:dir list_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Allow the type to associate to hugetlbfs filesystems.
@@ -1899,6 +2171,7 @@
 	')
 
 	allow $1 inotifyfs_t:dir list_dir_perms;
+	fs_read_anon_inodefs_files($1)
 ')
 
 ########################################
@@ -2295,6 +2568,25 @@
 
 ########################################
 ## <summary>
+##	Make general progams in nfs an entrypoint for
+##	the specified domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The domain for which nfs_t is an entrypoint.
+##	</summary>
+## </param>
+#
+interface(`fs_nfs_entry_type',`
+	gen_require(`
+		type nfs_t;
+	')
+
+	domain_entry_file($1, nfs_t)
+')
+
+########################################
+## <summary>
 ##	Append files
 ##	on a NFS filesystem.
 ## </summary>
@@ -2333,6 +2625,42 @@
 	dontaudit $1 nfs_t:file append_file_perms;
 ')
 
+#######################################
+## <summary>
+##      Read inherited files on a NFS filesystem.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`fs_read_inherited_nfs_files',`
+        gen_require(`
+                type nfs_t;
+        ')
+
+        allow $1 nfs_t:file read_inherited_file_perms;
+')
+
+#######################################
+## <summary>
+##  Read/write inherited files on a NFS filesystem.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_rw_inherited_nfs_files',`
+    gen_require(`
+        type nfs_t;
+    ')
+
+    allow $1 nfs_t:file rw_inherited_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to read or
@@ -2349,7 +2677,7 @@
 		type nfs_t;
 	')
 
-	dontaudit $1 nfs_t:file rw_file_perms;
+	dontaudit $1 nfs_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -2537,6 +2865,24 @@
 
 ########################################
 ## <summary>
+##	Do not audit attempts to write removable storage files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain not to audit.
+##	</summary>
+## </param>
+#
+interface(`fs_dontaudit_write_removable_files',`
+	gen_require(`
+		type removable_t;
+	')
+
+	dontaudit $1 removable_t:file write_file_perms;
+')
+
+########################################
+## <summary>
 ##	Read removable storage symbolic links.
 ## </summary>
 ## <param name="domain">
@@ -2745,7 +3091,7 @@
 #########################################
 ## <summary>
 ##	Create, read, write, and delete symbolic links
-##	on a CIFS or SMB network filesystem.
+##	on a NFS network filesystem.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2972,6 +3318,24 @@
 	getattr_files_pattern($1, nfsd_fs_t, nfsd_fs_t)
 ')
 
+#######################################
+## <summary>
+##  read files on an nfsd filesystem
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_read_nfsd_files',`
+    gen_require(`
+        type nfsd_fs_t;
+    ')
+
+    read_files_pattern($1, nfsd_fs_t, nfsd_fs_t)
+')
+
 ########################################
 ## <summary>
 ##	Read and write NFS server files.
@@ -3759,6 +4123,24 @@
 
 ########################################
 ## <summary>
+##     Read and write generic tmpfs files.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`fs_rw_inherited_tmpfs_files',`
+       gen_require(`
+               type tmpfs_t;
+       ')
+
+       allow $1 tmpfs_t:file { read write };
+')
+
+########################################
+## <summary>
 ##	Create, read, write, and delete
 ##	auto moutpoints.
 ## </summary>
@@ -3812,6 +4194,24 @@
 	rw_files_pattern($1, tmpfs_t, tmpfs_t)
 ')
 
+#######################################
+## <summary>
+##  Delete generic tmpfs files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_delete_tmpfs_files',`
+    gen_require(`
+        type tmpfs_t;
+    ')
+
+	allow $1 tmpfs_t:file delete_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Read tmpfs link files.
@@ -3870,6 +4270,24 @@
 
 ########################################
 ## <summary>
+##	dontaudit Read and write block nodes on tmpfs filesystems.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_dontaudit_read_tmpfs_blk_dev',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	dontaudit $1 tmpfs_t:blk_file read_blk_file_perms;
+')
+
+########################################
+## <summary>
 ##	Relabel character nodes on tmpfs filesystems.
 ## </summary>
 ## <param name="domain">
@@ -4432,6 +4850,44 @@
 
 ########################################
 ## <summary>
+##	Get the attributes of all blk files with
+##	a filesystem type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_getattr_all_blk_files',`
+	gen_require(`
+		attribute filesystem_type;
+	')
+
+	getattr_blk_files_pattern($1, filesystem_type, filesystem_type)
+')
+
+########################################
+## <summary>
+##	Get the attributes of all chr files with
+##	a filesystem type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_getattr_all_chr_files',`
+	gen_require(`
+		attribute filesystem_type;
+	')
+
+	getattr_chr_files_pattern($1, filesystem_type, filesystem_type)
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to get the attributes
 ##	of all files with a filesystem type.
 ## </summary>
@@ -4549,3 +5005,24 @@
 	relabelfrom_blk_files_pattern($1, noxattrfs, noxattrfs)
 	relabelfrom_chr_files_pattern($1, noxattrfs, noxattrfs)
 ')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	all leaked filesystems files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_dontaudit_leaks',`
+	gen_require(`
+		attribute filesystem_type;
+	')
+
+	dontaudit $1 filesystem_type:file rw_inherited_file_perms;
+	dontaudit $1 filesystem_type:lnk_file { read };
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/filesystem.te serefpolicy-3.7.19/policy/modules/kernel/filesystem.te
--- nsaserefpolicy/policy/modules/kernel/filesystem.te	2011-03-17 07:21:22.428851000 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/filesystem.te	2012-05-02 10:35:03.073462734 +0000
@@ -34,6 +34,7 @@
 fs_use_xattr jfs gen_context(system_u:object_r:fs_t,s0);
 fs_use_xattr lustre gen_context(system_u:object_r:fs_t,s0);
 fs_use_xattr xfs gen_context(system_u:object_r:fs_t,s0);
+#fs_use_xattr squashfs gen_context(system_u:object_r:fs_t,s0);
 
 # Use the allocating task SID to label inodes in the following filesystem
 # types, and label the filesystem itself with the specified context.
@@ -53,6 +54,7 @@
 fs_type(anon_inodefs_t)
 files_mountpoint(anon_inodefs_t)
 genfscon anon_inodefs / gen_context(system_u:object_r:anon_inodefs_t,s0)
+mls_trusted_object(anon_inodefs_t)
 
 type bdev_t;
 fs_type(bdev_t)
@@ -68,6 +70,12 @@
 files_mountpoint(capifs_t)
 genfscon capifs / gen_context(system_u:object_r:capifs_t,s0)
 
+type cgroup_t alias cgroupfs_t;
+fs_type(cgroup_t)
+files_type(cgroup_t)
+files_mountpoint(cgroup_t)
+genfscon cgroup / gen_context(system_u:object_r:cgroup_t,s0)
+
 type configfs_t;
 fs_type(configfs_t)
 genfscon configfs / gen_context(system_u:object_r:configfs_t,s0)
@@ -138,11 +146,6 @@
 genfscon spufs / gen_context(system_u:object_r:spufs_t,s0)
 files_mountpoint(spufs_t)
 
-type squash_t;
-fs_type(squash_t)
-genfscon squash / gen_context(system_u:object_r:squash_t,s0)
-files_mountpoint(squash_t)
-
 type vmblock_t;
 fs_noxattr_type(vmblock_t)
 files_mountpoint(vmblock_t)
@@ -243,6 +246,7 @@
 type removable_t;
 allow removable_t noxattrfs:filesystem associate;
 fs_noxattr_type(removable_t)
+files_type(removable_t)
 files_mountpoint(removable_t)
 
 #
@@ -262,6 +266,7 @@
 genfscon reiserfs / gen_context(system_u:object_r:nfs_t,s0)
 genfscon panfs / gen_context(system_u:object_r:nfs_t,s0)
 genfscon gadgetfs / gen_context(system_u:object_r:nfs_t,s0)
+#genfscon 9p / gen_context(system_u:object_r:nfs_t,s0)
 
 ########################################
 #
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/kernel.if serefpolicy-3.7.19/policy/modules/kernel/kernel.if
--- nsaserefpolicy/policy/modules/kernel/kernel.if	2011-03-17 07:21:22.453851003 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/kernel.if	2012-07-17 09:58:26.502740620 +0000
@@ -534,6 +534,37 @@
 
 ########################################
 ## <summary>
+##	Dontaudit caller request the kernel to load a module
+## </summary>
+## <desc>
+##	<p>
+##	Allow the specified domain to request that the kernel
+##	load a kernel module.  An example of this is the
+##	auto-loading of network drivers when doing an
+##	ioctl() on a network interface.
+##	</p>
+##	<p>
+##	In the specific case of a module loading request
+##	on a network interface, the domain will also
+##	need the net_admin capability.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_dontaudit_request_load_module',`
+	gen_require(`
+		type kernel_t;
+	')
+
+	dontaudit $1 kernel_t:system module_request;
+')
+
+########################################
+## <summary>
 ##	Get information on all System V IPC objects.
 ## </summary>
 ## <param name="domain">
@@ -1151,6 +1182,7 @@
 #
 interface(`kernel_search_network_state',`
 	gen_require(`
+		type proc_t;
 		type proc_net_t;
 	')
 
@@ -1959,7 +1991,7 @@
 	')
 
 	dontaudit $1 sysctl_type:dir list_dir_perms;
-	dontaudit $1 sysctl_type:file getattr;
+	dontaudit $1 sysctl_type:file read_file_perms;
 ')
 
 ########################################
@@ -2046,6 +2078,24 @@
 	allow $1 unlabeled_t:filesystem mount;
 ')
 
+########################################
+## <summary>
+##	Unmount a kernel unlabeled filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_unmount_unlabeled',`
+	gen_require(`
+		type unlabeled_t;
+	')
+
+	allow $1 unlabeled_t:filesystem unmount;
+')
+
 
 ########################################
 ## <summary>
@@ -2195,6 +2245,24 @@
 
 ########################################
 ## <summary>
+##	Read and write unlabeled files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_rw_unlabeled_files',`
+	gen_require(`
+		type unlabeled_t;
+	')
+
+	allow $1 unlabeled_t:file rw_file_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts by caller to get the
 ##	attributes of an unlabeled file.
 ## </summary>
@@ -2325,6 +2393,24 @@
 	allow $1 unlabeled_t:blk_file getattr;
 ')
 
+#######################################
+## <summary>
+##  Read and write unlabeled sockets.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`kernel_rw_unlabeled_socket',`
+    gen_require(`
+        type unlabeled_t;
+    ')
+
+    allow $1 unlabeled_t:socket rw_socket_perms;
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts by caller to get attributes for
@@ -2677,6 +2763,33 @@
 
 ########################################
 ## <summary>
+##     Read/Write Raw IP packets from an unlabeled connection.
+## </summary>
+## <desc>
+##     <p>
+##     Receive Raw IP packets from an unlabeled connection.
+##     </p>
+##     <p>
+##     The corenetwork interface corenet_raw_recv_unlabeled() should
+##     be used instead of this one.
+##     </p>
+## </desc>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`kernel_rw_unlabeled_rawip_socket',`
+       gen_require(`
+               type unlabeled_t;
+       ')
+
+       allow $1 unlabeled_t:rawip_socket rw_socket_perms;
+')
+
+########################################
+## <summary>
 ##	Send and receive unlabeled packets.
 ## </summary>
 ## <desc>
@@ -2775,16 +2888,24 @@
 	gen_require(`
 		type unlabeled_t;
 		class db_database { setattr relabelfrom };
+		class db_schema { setattr relabelfrom };
 		class db_table { setattr relabelfrom };
+		class db_sequence { setattr relabelfrom };
+		class db_view { setattr relabelfrom };
 		class db_procedure { setattr relabelfrom };
+		class db_language { setattr relabelfrom };
 		class db_column { setattr relabelfrom };
 		class db_tuple { update relabelfrom };
 		class db_blob { setattr relabelfrom };
 	')
 
 	allow $1 unlabeled_t:db_database { setattr relabelfrom };
+	allow $1 unlabeled_t:db_schema { setattr relabelfrom };
 	allow $1 unlabeled_t:db_table { setattr relabelfrom };
+	allow $1 unlabeled_t:db_sequence { setattr relabelfrom };
+	allow $1 unlabeled_t:db_view { setattr relabelfrom };
 	allow $1 unlabeled_t:db_procedure { setattr relabelfrom };
+	allow $1 unlabeled_t:db_language { setattr relabelfrom };
 	allow $1 unlabeled_t:db_column { setattr relabelfrom };
 	allow $1 unlabeled_t:db_tuple { update relabelfrom };
 	allow $1 unlabeled_t:db_blob { setattr relabelfrom };
@@ -2792,6 +2913,24 @@
 
 ########################################
 ## <summary>
+##      Relabel to unlabeled context .
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`kernel_relabelto_unlabeled',`
+	gen_require(`
+		type unlabeled_t;
+	')
+
+	allow $1 unlabeled_t:dir_file_class_set relabelto;
+')
+
+########################################
+## <summary>
 ##	Unconfined access to kernel module resources.
 ## </summary>
 ## <param name="domain">
@@ -2807,3 +2946,40 @@
 
 	typeattribute $1 kern_unconfined;
 ')
+
+########################################
+## <summary>
+##	Allow the specified domain to connect to
+##	the kernel with a unix socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_stream_connect',`
+	gen_require(`
+		type kernel_t;
+	')
+
+	allow $1 kernel_t:unix_stream_socket connectto;
+')
+
+########################################
+## <summary>
+##     Make the specified type usable for regular entries in proc
+## </summary>
+## <param name="type">
+##     <summary>
+##     Type to be used for /proc entries.
+##     </summary>
+## </param>
+#
+interface(`procs_type',`
+       gen_require(`
+               attribute proc_type;
+       ')
+
+       typeattribute $1 proc_type;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/kernel.te serefpolicy-3.7.19/policy/modules/kernel/kernel.te
--- nsaserefpolicy/policy/modules/kernel/kernel.te	2011-03-17 07:21:22.520851002 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/kernel.te	2012-02-15 16:17:58.135480831 +0000
@@ -46,15 +46,6 @@
 sid kernel gen_context(system_u:system_r:kernel_t,mls_systemhigh)
 
 #
-# cgroup fs
-#
-
-type cgroup_t;
-fs_type(cgroup_t)
-allow cgroup_t self:filesystem associate;
-genfscon cgroup / gen_context(system_u:object_r:cgroup_t,s0)
-
-#
 # DebugFS
 #
 
@@ -62,6 +53,16 @@
 fs_type(debugfs_t)
 allow debugfs_t self:filesystem associate;
 genfscon debugfs / gen_context(system_u:object_r:debugfs_t,s0)
+files_mountpoint(debugfs_t)
+
+#
+# infinibandeventfs fs
+#
+
+type infinibandeventfs_t;
+fs_type(infinibandeventfs_t)
+allow infinibandeventfs_t self:filesystem associate;
+genfscon infinibandeventfs / gen_context(system_u:object_r:infinibandeventfs_t,s0)
 
 #
 # kvmFS
@@ -166,6 +167,7 @@
 #
 type unlabeled_t;
 sid unlabeled gen_context(system_u:object_r:unlabeled_t,mls_systemhigh)
+fs_associate(unlabeled_t)
 
 # These initial sids are no longer used, and can be removed:
 sid any_socket		gen_context(system_u:object_r:unlabeled_t,mls_systemhigh)
@@ -229,6 +231,8 @@
 # connections with invalidated labels:
 allow kernel_t unlabeled_t:packet send;
 
+kernel_rw_unlabeled_socket(kernel_t)
+
 # Allow unlabeled network traffic
 allow unlabeled_t unlabeled_t:packet { forward_in forward_out };
 corenet_in_generic_if(unlabeled_t)
@@ -256,7 +260,8 @@
 
 selinux_load_policy(kernel_t)
 
-term_use_console(kernel_t)
+term_use_all_terms(kernel_t)
+term_use_ptmx(kernel_t)
 
 corecmd_exec_shell(kernel_t)
 corecmd_list_bin(kernel_t)
@@ -270,19 +275,31 @@
 files_list_etc(kernel_t)
 files_list_home(kernel_t)
 files_read_usr_files(kernel_t)
+files_manage_mounttab(kernel_t)
+files_manage_generic_spool_dirs(kernel_t)
 
 mcs_process_set_categories(kernel_t)
+mcs_file_read_all(kernel_t)
+mcs_file_write_all(kernel_t)  
+mcs_socket_write_all_levels(kernel_t)
 
 mls_process_read_up(kernel_t)
 mls_process_write_down(kernel_t)
 mls_file_write_all_levels(kernel_t)
 mls_file_read_all_levels(kernel_t)
+mls_socket_write_all_levels(kernel_t) 
+mls_fd_share_all_levels(kernel_t) 
+mls_file_downgrade(kernel_t)
+
+logging_manage_generic_logs(kernel_t)
 
 ifdef(`distro_redhat',`
 	# Bugzilla 222337
 	fs_rw_tmpfs_chr_files(kernel_t)
 ')
 
+userdom_user_home_dir_filetrans_user_home_content(kernel_t, { file dir })
+
 optional_policy(`
 	hotplug_search_config(kernel_t)
 ')
@@ -329,25 +346,6 @@
 	rpc_manage_nfs_rw_content(kernel_t)
 	rpc_udp_rw_nfs_sockets(kernel_t)
 
-	tunable_policy(`nfs_export_all_ro',`
-		fs_getattr_noxattr_fs(kernel_t)
-		fs_list_noxattr_fs(kernel_t)
-		fs_read_noxattr_fs_files(kernel_t)
-		fs_read_noxattr_fs_symlinks(kernel_t)
-
-		auth_read_all_dirs_except_shadow(kernel_t)
-		auth_read_all_files_except_shadow(kernel_t)
-		auth_read_all_symlinks_except_shadow(kernel_t)
-	')
-
-	tunable_policy(`nfs_export_all_rw',`
-		fs_getattr_noxattr_fs(kernel_t)
-		fs_list_noxattr_fs(kernel_t)
-		fs_read_noxattr_fs_files(kernel_t)
-		fs_read_noxattr_fs_symlinks(kernel_t)
-
-		auth_manage_all_files_except_shadow(kernel_t)
-	')
 ')
 
 optional_policy(`
@@ -359,6 +357,10 @@
 	unconfined_domain_noaudit(kernel_t)
 ')
 
+optional_policy(`
+	xserver_xdm_manage_spool(kernel_t)
+')
+
 ########################################
 #
 # Unlabeled process local policy
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/mcs.if serefpolicy-3.7.19/policy/modules/kernel/mcs.if
--- nsaserefpolicy/policy/modules/kernel/mcs.if	2011-03-17 07:21:22.515851000 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/mcs.if	2011-03-17 07:21:05.369851002 +0000
@@ -102,3 +102,49 @@
 
 	typeattribute $1 mcssetcats;
 ')
+
+#######################################
+## <summary>
+##      Make specified process type MCS untrusted.
+## </summary>
+## <desc>
+##      <p>
+##      Make specified process type MCS untrusted.  This
+##      prevents this process from sending signals to other processes 
+##      with different mcs labels
+##      object.
+##      </p>
+## </desc>
+## <param name="domain">
+##      <summary>
+##      The type of the process.
+##      </summary>
+## </param>
+#
+interface(`mcs_untrusted_proc',`
+        gen_require(`
+                attribute mcsuntrustedproc;
+        ')
+
+        typeattribute $1 mcsuntrustedproc;
+')
+
+######################################
+## <summary>
+##  Make specified domain MCS trusted
+##  for writing to sockets at any level.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`mcs_socket_write_all_levels',`
+    gen_require(`
+        attribute mcsnetwrite;
+    ')
+
+    typeattribute $1 mcsnetwrite;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/mcs.te serefpolicy-3.7.19/policy/modules/kernel/mcs.te
--- nsaserefpolicy/policy/modules/kernel/mcs.te	2011-03-17 07:21:22.431851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/mcs.te	2011-03-17 07:21:05.214851002 +0000
@@ -11,3 +11,5 @@
 attribute mcssetcats;
 attribute mcswriteall;
 attribute mcsreadall;
+attribute mcsuntrustedproc;
+attribute mcsnetwrite;
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/selinux.if serefpolicy-3.7.19/policy/modules/kernel/selinux.if
--- nsaserefpolicy/policy/modules/kernel/selinux.if	2011-03-17 07:21:22.518851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/selinux.if	2011-03-17 07:21:05.380851002 +0000
@@ -40,7 +40,7 @@
 
 	# because of this statement, any module which
 	# calls this interface must be in the base module:
-	genfscon selinuxfs /booleans/$2 gen_context(system_u:object_r:$1,s0)
+#	genfscon selinuxfs /booleans/$2 gen_context(system_u:object_r:$1,s0)
 ')
 
 ########################################
@@ -202,6 +202,7 @@
 		type security_t;
 	')
 
+	selinux_dontaudit_getattr_fs($1)
 	dontaudit $1 security_t:dir search_dir_perms;
 	dontaudit $1 security_t:file read_file_perms;
 ')
@@ -223,6 +224,7 @@
 		type security_t;
 	')
 
+	selinux_get_fs_mount($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file read_file_perms;
 ')
@@ -301,6 +303,26 @@
 	}
 ')
 
+#######################################
+## <summary>
+##  Allow caller to read the policy from the kernel.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`selinux_read_policy',`
+    gen_require(`
+        type security_t;
+    ')
+
+    allow $1 security_t:dir list_dir_perms;
+    allow $1 security_t:file read_file_perms;
+    allow $1 security_t:security read_policy;
+')
+
 ########################################
 ## <summary>
 ##	Allow caller to set the state of Booleans to
@@ -404,6 +426,7 @@
 	')
 
 	allow $1 security_t:dir list_dir_perms;
+	allow $1 boolean_type:dir list_dir_perms;
 	allow $1 boolean_type:file rw_file_perms;
 
 	if(!secure_mode_policyload) {
@@ -622,3 +645,23 @@
 
 	typeattribute $1 selinux_unconfined_type;
 ')
+
+########################################
+## <summary>
+##	Generate a file context for a boolean type
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`selinux_genbool',`
+	gen_require(`
+		attribute boolean_type;
+	')
+
+	type $1, boolean_type;
+	fs_type($1)
+	mls_trusted_object($1)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/storage.fc serefpolicy-3.7.19/policy/modules/kernel/storage.fc
--- nsaserefpolicy/policy/modules/kernel/storage.fc	2011-03-17 07:21:22.497851003 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/storage.fc	2012-04-04 10:35:09.550986379 +0000
@@ -12,6 +12,7 @@
 /dev/cdu.*		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/cm20.*		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/dasd[^/]*		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
+/dev/dasd[^/]*		-c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/dm-[0-9]+		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/drbd[^/]*		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/etherd/.+		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
@@ -20,12 +21,14 @@
 /dev/gscd		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/hitcd		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/ht[0-1]		-b	gen_context(system_u:object_r:tape_device_t,s0)
+/dev/hwcdrom		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/initrd		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/jsfd		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/jsflash		-c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/loop.*		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/lvm		-c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/mcdx?		-b	gen_context(system_u:object_r:removable_device_t,s0)
+/dev/megaraid_sas_ioctl_node -c gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/megadev.*		-c	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/mmcblk.*		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/mspblk.*		-b	gen_context(system_u:object_r:removable_device_t,s0)
@@ -49,6 +52,7 @@
 /dev/sjcd		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/sonycd		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/tape.*		-c	gen_context(system_u:object_r:tape_device_t,s0)
+/dev/tgt		-c	gen_context(system_u:object_r:scsi_generic_device_t,s0)
 /dev/tw[a-z][^/]+	-c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/ub[a-z][^/]+	-b	gen_context(system_u:object_r:removable_device_t,mls_systemhigh)
 /dev/ubd[^/]*		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/storage.if serefpolicy-3.7.19/policy/modules/kernel/storage.if
--- nsaserefpolicy/policy/modules/kernel/storage.if	2011-03-17 07:21:22.495851002 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/storage.if	2012-04-04 10:45:46.519998782 +0000
@@ -101,6 +101,8 @@
 	dev_list_all_dev_nodes($1)
 	allow $1 fixed_disk_device_t:blk_file read_blk_file_perms;
 	allow $1 fixed_disk_device_t:chr_file read_chr_file_perms;
+	#577012
+	allow $1 fixed_disk_device_t:lnk_file read_lnk_file_perms;
 	typeattribute $1 fixed_disk_raw_read;
 ')
 
@@ -203,7 +205,10 @@
 		type fixed_disk_device_t;
 	')
 
+	allow $1 self:capability mknod;
+
 	allow $1 fixed_disk_device_t:blk_file create_blk_file_perms;
+	allow $1 fixed_disk_device_t:chr_file create_chr_file_perms;
 	dev_add_entry_generic_dirs($1)
 ')
 
@@ -266,6 +271,7 @@
 	')
 
 	dev_filetrans($1, fixed_disk_device_t, blk_file)
+	dev_filetrans($1, fixed_disk_device_t, chr_file)
 ')
 
 ########################################
@@ -572,6 +578,26 @@
 
 ########################################
 ## <summary>
+##	Do not audit attempts made by the caller to write
+##	removable devices device nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process to not audit.
+##	</summary>
+## </param>
+#
+interface(`storage_dontaudit_write_removable_device',`
+	gen_require(`
+		type removable_device_t;
+
+	')
+
+	dontaudit $1 removable_device_t:blk_file write_blk_file_perms;
+')
+
+########################################
+## <summary>
 ##	Allow the caller to set the attributes of removable
 ##	devices device nodes.
 ## </summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/terminal.fc serefpolicy-3.7.19/policy/modules/kernel/terminal.fc
--- nsaserefpolicy/policy/modules/kernel/terminal.fc	2011-03-17 07:21:22.443851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/terminal.fc	2011-03-17 07:21:05.247851002 +0000
@@ -6,6 +6,7 @@
 /dev/console		-c	gen_context(system_u:object_r:console_device_t,s0)
 /dev/cu.*		-c	gen_context(system_u:object_r:tty_device_t,s0)
 /dev/dcbri[0-9]+	-c	gen_context(system_u:object_r:tty_device_t,s0)
+/dev/hpilo/[^/]*      -c  gen_context(system_u:object_r:tty_device_t,s0)
 /dev/hvc.*		-c	gen_context(system_u:object_r:tty_device_t,s0)
 /dev/hvsi.*		-c	gen_context(system_u:object_r:tty_device_t,s0)
 /dev/i2c[^/]*		-c	gen_context(system_u:object_r:tty_device_t,s0)
@@ -18,6 +19,7 @@
 /dev/slamr[0-9]+	-c	gen_context(system_u:object_r:tty_device_t,s0)
 /dev/tty		-c	gen_context(system_u:object_r:devtty_t,s0)
 /dev/ttySG.*		-c	gen_context(system_u:object_r:tty_device_t,s0)
+/dev/vport[0-9]p[0-9]+  -c  gen_context(system_u:object_r:virtio_device_t,s0)
 /dev/xvc[^/]*		-c	gen_context(system_u:object_r:tty_device_t,s0)
 
 /dev/pty/.*		-c	gen_context(system_u:object_r:bsdpty_device_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/terminal.if serefpolicy-3.7.19/policy/modules/kernel/terminal.if
--- nsaserefpolicy/policy/modules/kernel/terminal.if	2011-03-17 07:21:22.506851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/terminal.if	2011-09-15 14:10:51.892160000 +0000
@@ -292,9 +292,11 @@
 interface(`term_dontaudit_use_console',`
 	gen_require(`
 		type console_device_t;
+		type tty_device_t;
 	')
 
-	dontaudit $1 console_device_t:chr_file rw_chr_file_perms;
+	dontaudit $1 console_device_t:chr_file rw_inherited_chr_file_perms;
+	dontaudit $1 tty_device_t:chr_file rw_inherited_chr_file_perms;
 ')
 
 ########################################
@@ -334,7 +336,7 @@
 	')
 
 	dev_list_all_dev_nodes($1)
-	allow $1 console_device_t:chr_file { relabelfrom relabelto };
+	allow $1 console_device_t:chr_file relabel_chr_file_perms;
 ')
 
 ########################################
@@ -672,6 +674,25 @@
 
 ########################################
 ## <summary>
+##	Do not audit attempts to get attributes 
+##	on the pty multiplexor (/dev/ptmx).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process to not audit.
+##	</summary>
+## </param>
+#
+interface(`term_dontaudit_getattr_ptmx',`
+	gen_require(`
+		type ptmx_t;
+	')
+
+	dontaudit $1 ptmx_t:chr_file getattr;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read and
 ##	write the pty multiplexor (/dev/ptmx).
 ## </summary>
@@ -829,7 +850,7 @@
 		attribute ptynode;
 	')
 
-	dontaudit $1 ptynode:chr_file { rw_term_perms lock append };
+	dontaudit $1 ptynode:chr_file { rw_inherited_term_perms lock append };
 ')
 
 ########################################
@@ -1097,7 +1118,7 @@
 	')
 
 	dev_list_all_dev_nodes($1)
-	allow $1 tty_device_t:chr_file { relabelfrom relabelto };
+	allow $1 tty_device_t:chr_file relabel_chr_file_perms;
 ')
 
 ########################################
@@ -1196,7 +1217,7 @@
 		type tty_device_t;
 	')
 
-	dontaudit $1 tty_device_t:chr_file rw_chr_file_perms;
+	dontaudit $1 tty_device_t:chr_file rw_inherited_chr_file_perms;
 ')
 
 ########################################
@@ -1233,10 +1254,12 @@
 interface(`term_dontaudit_getattr_all_ttys',`
 	gen_require(`
 		attribute ttynode;
+		type tty_device_t;
 	')
 
 	dev_list_all_dev_nodes($1)
 	dontaudit $1 ttynode:chr_file getattr;
+	dontaudit $1 tty_device_t:chr_file getattr;
 ')
 
 ########################################
@@ -1275,7 +1298,7 @@
 	')
 
 	dev_list_all_dev_nodes($1)
-	allow $1 ttynode:chr_file { relabelfrom relabelto };
+	allow $1 ttynode:chr_file relabel_chr_file_perms;
 ')
 
 ########################################
@@ -1333,7 +1356,7 @@
 		attribute ttynode;
 	')
 
-	dontaudit $1 ttynode:chr_file rw_chr_file_perms;
+	dontaudit $1 ttynode:chr_file rw_inherited_chr_file_perms;
 ')
 
 ########################################
@@ -1449,3 +1472,40 @@
 	refpolicywarn(`$0() is deprecated, use term_dontaudit_use_all_ttys() instead.')
 	term_dontaudit_use_all_ttys($1)
 ')
+
+###################################
+## <summary>
+##      Getattr on the virtio console.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`term_getattr_virtio_console',`
+        gen_require(`
+                type virtio_device_t;
+        ')
+
+        allow $1 virtio_device_t:chr_file getattr_chr_file_perms;
+')
+
+###################################
+## <summary>
+##      Read from and write to the virtio console.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`term_use_virtio_console',`
+        gen_require(`
+                type virtio_device_t;
+        ')
+
+        dev_list_all_dev_nodes($1)
+        allow $1 virtio_device_t:chr_file rw_chr_file_perms;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/terminal.te serefpolicy-3.7.19/policy/modules/kernel/terminal.te
--- nsaserefpolicy/policy/modules/kernel/terminal.te	2011-03-17 07:21:22.512851001 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/terminal.te	2011-03-17 07:21:05.365851003 +0000
@@ -57,3 +57,9 @@
 #
 type usbtty_device_t, serial_device;
 dev_node(usbtty_device_t)
+
+#
+# virtio_device_t is the type of /dev/vport[0-9]p[0-9]
+#
+type virtio_device_t, serial_device;
+dev_node(virtio_device_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/unlabelednet.fc serefpolicy-3.7.19/policy/modules/kernel/unlabelednet.fc
--- nsaserefpolicy/policy/modules/kernel/unlabelednet.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/unlabelednet.fc	2011-10-04 10:00:08.048160001 +0000
@@ -0,0 +1 @@
+# No unlabelednet file contexts.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/unlabelednet.if serefpolicy-3.7.19/policy/modules/kernel/unlabelednet.if
--- nsaserefpolicy/policy/modules/kernel/unlabelednet.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/unlabelednet.if	2011-10-04 10:27:15.169160004 +0000
@@ -0,0 +1 @@
+## <summary> Policy for allowing confined domains to use unlabeled_t packets </summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/kernel/unlabelednet.te serefpolicy-3.7.19/policy/modules/kernel/unlabelednet.te
--- nsaserefpolicy/policy/modules/kernel/unlabelednet.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/kernel/unlabelednet.te	2011-10-04 09:59:55.744160001 +0000
@@ -0,0 +1,3 @@
+policy_module(unlabelednet, 1.0)
+
+corenet_enable_unlabeled_packets()
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/auditadm.te serefpolicy-3.7.19/policy/modules/roles/auditadm.te
--- nsaserefpolicy/policy/modules/roles/auditadm.te	2011-03-17 07:21:20.370851002 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/auditadm.te	2011-04-05 18:03:18.487000002 +0000
@@ -23,16 +23,21 @@
 
 domain_kill_all_domains(auditadm_t)
 
+selinux_read_policy(auditadm_t)
+
 logging_send_syslog_msg(auditadm_t)
 logging_read_generic_logs(auditadm_t)
 logging_manage_audit_log(auditadm_t)
 logging_manage_audit_config(auditadm_t)
 logging_run_auditctl(auditadm_t, auditadm_r)
 logging_run_auditd(auditadm_t, auditadm_r)
+logging_stream_connect_syslog(auditadm_t)
 
 seutil_run_runinit(auditadm_t, auditadm_r)
 seutil_read_bin_policy(auditadm_t)
 
+userdom_dontaudit_search_admin_dir(auditadm_t)
+
 optional_policy(`
 	consoletype_exec(auditadm_t)
 ')
@@ -43,6 +48,7 @@
 
 optional_policy(`
 	screen_role_template(auditadm, auditadm_r, auditadm_t)
+	allow auditadm_screen_t self:capability { dac_read_search dac_override };
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/guest.if serefpolicy-3.7.19/policy/modules/roles/guest.if
--- nsaserefpolicy/policy/modules/roles/guest.if	2011-03-17 07:21:20.421851001 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/guest.if	2012-03-08 12:43:03.532738405 +0000
@@ -1,4 +1,4 @@
-## <summary>Least privledge terminal user role</summary>
+## <summary>Least privledge terminal user</summary>
 
 ########################################
 ## <summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/guest.te serefpolicy-3.7.19/policy/modules/roles/guest.te
--- nsaserefpolicy/policy/modules/roles/guest.te	2011-03-17 07:21:20.403851001 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/guest.te	2011-03-17 07:21:02.672851000 +0000
@@ -10,17 +10,15 @@
 
 userdom_restricted_user_template(guest)
 
+kernel_read_system_state(guest_t)
+
 ########################################
 #
 # Local policy
 #
 
 optional_policy(`
-	java_role_template(guest, guest_r, guest_t)
-')
-
-optional_policy(`
-	mono_role_template(guest, guest_r, guest_t)
+	apache_role(guest_r, guest_t)
 ')
 
-#gen_user(guest_u,, guest_r, s0, s0)
+gen_user(guest_u, user, guest_r, s0, s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/secadm.te serefpolicy-3.7.19/policy/modules/roles/secadm.te
--- nsaserefpolicy/policy/modules/roles/secadm.te	2011-03-17 07:21:20.364851003 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/secadm.te	2011-04-05 18:03:34.895000002 +0000
@@ -10,6 +10,8 @@
 
 userdom_unpriv_user_template(secadm)
 userdom_security_admin_template(secadm_t, secadm_r)
+userdom_inherit_append_admin_home_files(secadm_t)
+userdom_read_admin_home_files(secadm_t)
 
 ########################################
 #
@@ -58,6 +60,7 @@
 
 optional_policy(`
 	screen_role_template(secadm, secadm_r, secadm_t)
+	allow secadm_screen_t self:capability { dac_read_search dac_override };
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/staff.if serefpolicy-3.7.19/policy/modules/roles/staff.if
--- nsaserefpolicy/policy/modules/roles/staff.if	2011-03-17 07:21:20.358851002 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/staff.if	2012-03-08 12:43:21.287320649 +0000
@@ -1,4 +1,4 @@
-## <summary>Administrator's unprivileged user role</summary>
+## <summary>Administrator's unprivileged user</summary>
 
 ########################################
 ## <summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/staff.te serefpolicy-3.7.19/policy/modules/roles/staff.te
--- nsaserefpolicy/policy/modules/roles/staff.te	2011-03-17 07:21:20.391851003 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/staff.te	2012-01-25 19:49:13.324531951 +0000
@@ -9,25 +9,68 @@
 role staff_r;
 
 userdom_unpriv_user_template(staff)
+fs_exec_noxattr(staff_t)
+
+# needed for sandbox
+allow staff_t self:process setexec;
 
 ########################################
 #
 # Local policy
 #
 
+kernel_read_ring_buffer(staff_t)
+kernel_getattr_core_if(staff_t)
+kernel_getattr_message_if(staff_t)
+kernel_read_software_raid_state(staff_t)
+
+auth_domtrans_pam_console(staff_t)
+
+selinux_read_policy(staff_t)
+
+init_dbus_chat_script(staff_t)
+
+seutil_read_module_store(staff_t)
+seutil_run_newrole(staff_t, staff_r)
+netutils_run_ping(staff_t, staff_r)
+netutils_run_traceroute(staff_t, staff_r)
+netutils_signal_ping(staff_t)
+netutils_kill_ping(staff_t)
+
+tunable_policy(`allow_execmod',`
+ userdom_execmod_user_home_files(staff_usertype)
+')
+
 optional_policy(`
 	apache_role(staff_r, staff_t)
 ')
 
+ifndef(`distro_
+redhat',`
+
 optional_policy(`
 	auth_role(staff_r, staff_t)
 ')
+')
+
+optional_policy(`
+	abrt_read_cache(staff_t)
+ ')
 
 optional_policy(`
 	auditadm_role_change(staff_r)
 ')
 
 optional_policy(`
+	kerneloops_manage_tmp_files(staff_t)
+')
+
+optional_policy(`
+	logadm_role_change(staff_r)
+')
+
+ifndef(`distro_redhat',`
+optional_policy(`
 	bluetooth_role(staff_r, staff_t)
 ')
 
@@ -85,6 +128,7 @@
 
 optional_policy(`
 	mozilla_role(staff_r, staff_t)
+	mozilla_run_plugin(staff_usertype, staff_r)
 ')
 
 optional_policy(`
@@ -99,12 +143,18 @@
 	oident_manage_user_content(staff_t)
 	oident_relabel_user_content(staff_t)
 ')
+')
 
 optional_policy(`
 	postgresql_role(staff_r, staff_t)
 ')
 
 optional_policy(`
+	rtkit_scheduled(staff_t)
+')
+
+ifndef(`distro_redhat',`
+optional_policy(`
 	pyzor_role(staff_r, staff_t)
 ')
 
@@ -119,22 +169,27 @@
 optional_policy(`
 	screen_role_template(staff, staff_r, staff_t)
 ')
+')
 
 optional_policy(`
 	secadm_role_change(staff_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	spamassassin_role(staff_r, staff_t)
 ')
+')
 
 optional_policy(`
 	ssh_role_template(staff, staff_r, staff_t)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	su_role_template(staff, staff_r, staff_t)
 ')
+')
 
 optional_policy(`
 	sudo_role_template(staff, staff_r, staff_t)
@@ -145,6 +200,11 @@
 	userdom_dontaudit_use_user_terminals(staff_t)
 ')
 
+#optional_policy(`
+#    telepathy_dbus_session_role(staff_r, staff_t)
+#')
+
+ifndef(`distro_redhat',`
 optional_policy(`
 	thunderbird_role(staff_r, staff_t)
 ')
@@ -169,6 +229,79 @@
 	wireshark_role(staff_r, staff_t)
 ')
 
+')
+
+optional_policy(`
+	unconfined_role_change(staff_r)
+')
+
+optional_policy(`
+	webadm_role_change(staff_r)
+')
+
 optional_policy(`
 	xserver_role(staff_r, staff_t)
 ')
+
+domain_read_all_domains_state(staff_usertype)
+domain_getattr_all_domains(staff_usertype)
+domain_obj_id_change_exemption(staff_t)
+
+files_read_kernel_modules(staff_usertype)
+
+kernel_read_fs_sysctls(staff_usertype)
+
+dev_read_cpuid(staff_usertype)
+
+modutils_read_module_config(staff_usertype)
+modutils_read_module_deps(staff_usertype)
+
+miscfiles_read_hwdata(staff_usertype)
+
+term_use_unallocated_ttys(staff_usertype)
+
+optional_policy(`
+	accountsd_dbus_chat(staff_t)
+')
+
+optional_policy(`
+	gnomeclock_dbus_chat(staff_t)
+')
+
+optional_policy(`
+	firewallgui_dbus_chat(staff_t)
+')
+
+optional_policy(`
+	lpd_list_spool(staff_t)
+')
+
+optional_policy(`
+	kerneloops_dbus_chat(staff_t)
+')
+
+optional_policy(`
+	rpm_dbus_chat(staff_usertype)
+')
+
+optional_policy(`
+	sandbox_transition(staff_t, staff_r)
+')
+
+optional_policy(`
+	screen_role_template(staff, staff_r, staff_t)
+')
+
+optional_policy(`
+	setroubleshoot_stream_connect(staff_t)
+	setroubleshoot_dbus_chat(staff_t)
+	setroubleshoot_dbus_chat_fixit(staff_t)
+')
+
+optional_policy(`
+	virt_stream_connect(staff_t)
+')
+
+optional_policy(`
+	userhelper_console_role_template(staff, staff_r, staff_usertype)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/sysadm_secadm.fc serefpolicy-3.7.19/policy/modules/roles/sysadm_secadm.fc
--- nsaserefpolicy/policy/modules/roles/sysadm_secadm.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/sysadm_secadm.fc	2012-04-17 13:12:56.261853648 +0000
@@ -0,0 +1 @@
+# No context
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/sysadm_secadm.if serefpolicy-3.7.19/policy/modules/roles/sysadm_secadm.if
--- nsaserefpolicy/policy/modules/roles/sysadm_secadm.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/sysadm_secadm.if	2012-04-17 13:12:56.261853648 +0000
@@ -0,0 +1 @@
+## <summary>No Interfaces</summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/sysadm_secadm.te serefpolicy-3.7.19/policy/modules/roles/sysadm_secadm.te
--- nsaserefpolicy/policy/modules/roles/sysadm_secadm.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/sysadm_secadm.te	2012-05-15 00:01:31.199479541 +0000
@@ -0,0 +1,23 @@
+policy_module(sysadm_secadm, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+gen_require(`
+	type sysadm_t;
+	role sysadm_r;
+')
+
+userdom_security_admin_template(sysadm_t, sysadm_r)
+
+#######################################
+#
+# Local policy
+#
+
+logging_manage_audit_log(sysadm_t)
+logging_manage_audit_config(sysadm_t)
+logging_run_auditctl(sysadm_t, sysadm_r)
+logging_stream_connect_syslog(sysadm_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/sysadm.te serefpolicy-3.7.19/policy/modules/roles/sysadm.te
--- nsaserefpolicy/policy/modules/roles/sysadm.te	2011-03-17 07:21:20.397851001 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/sysadm.te	2012-05-15 07:08:16.155006579 +0000
@@ -17,10 +17,6 @@
 
 userdom_admin_user_template(sysadm)
 
-ifndef(`enable_mls',`
-	userdom_security_admin_template(sysadm_t, sysadm_r)
-')
-
 ########################################
 #
 # Local policy
@@ -28,17 +24,31 @@
 
 corecmd_exec_shell(sysadm_t)
 
+dev_read_crash(sysadm_t)
+
+domain_dontaudit_read_all_domains_state(sysadm_t)
+
 mls_process_read_up(sysadm_t)
+mls_file_read_to_clearance(sysadm_t)
+mls_process_write_to_clearance(sysadm_t)
 
 ubac_process_exempt(sysadm_t)
 ubac_file_exempt(sysadm_t)
 ubac_fd_exempt(sysadm_t)
 
+application_exec(sysadm_t)
+
 init_exec(sysadm_t)
+init_exec_script_files(sysadm_t)
 
 # Add/remove user home directories
 userdom_manage_user_home_dirs(sysadm_t)
 userdom_home_filetrans_user_home_dir(sysadm_t)
+userdom_manage_user_tmp_dirs(sysadm_t)
+userdom_manage_user_tmp_files(sysadm_t)
+userdom_manage_user_tmp_symlinks(sysadm_t)
+userdom_manage_user_tmp_chr_files(sysadm_t)
+userdom_manage_user_tmp_blk_files(sysadm_t)
 
 ifdef(`direct_sysadm_daemon',`
 	optional_policy(`
@@ -52,12 +62,6 @@
 	')
 ')
 
-ifndef(`enable_mls',`
-	logging_manage_audit_log(sysadm_t)
-	logging_manage_audit_config(sysadm_t)
-	logging_run_auditctl(sysadm_t, sysadm_r)
-')
-
 tunable_policy(`allow_ptrace',`
 	domain_ptrace_all_domains(sysadm_t)
 ')
@@ -70,7 +74,9 @@
 	apache_run_helper(sysadm_t, sysadm_r)
 	#apache_run_all_scripts(sysadm_t, sysadm_r)
 	#apache_domtrans_sys_script(sysadm_t)
-	apache_role(sysadm_r, sysadm_t)
+	ifndef(`distro_redhat',`
+		apache_role(sysadm_r, sysadm_t)
+	')
 ')
 
 optional_policy(`
@@ -98,17 +104,25 @@
 	bind_run_ndc(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	bluetooth_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	bootloader_run(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	cdrecord_role(sysadm_r, sysadm_t)
 ')
+')
+
+optional_policy(`
+	certmonger_dbus_chat(sysadm_t)
+')
 
 optional_policy(`
 	certwatch_run(sysadm_t, sysadm_r)
@@ -126,16 +140,23 @@
 	consoletype_run(sysadm_t, sysadm_r)
 ')
 
+#optional_policy(`
+#	cron_role(sysadm_r, sysadm_t)
+#')
+
+#ifndef(`distro_redhat',`
 optional_policy(`
 	cron_admin_role(sysadm_r, sysadm_t)
 ')
 
-optional_policy(`
-	cvs_exec(sysadm_t)
+ifndef(`distro_redhat',`
+	optional_policy(`
+		dbus_role_template(sysadm, sysadm_r, sysadm_t)
+	')
 ')
 
 optional_policy(`
-	dbus_role_template(sysadm, sysadm_r, sysadm_t)
+    daemonstools_run_start(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
@@ -165,9 +186,11 @@
 	ethereal_run_tethereal(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	evolution_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	firstboot_run(sysadm_t, sysadm_r)
@@ -177,6 +200,7 @@
 	fstools_run(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	games_role(sysadm_r, sysadm_t)
 ')
@@ -192,6 +216,7 @@
 optional_policy(`
 	gpg_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	hostname_run(sysadm_t, sysadm_r)
@@ -205,6 +230,13 @@
 	ipsec_stream_connect(sysadm_t)
 	# for lsof
 	ipsec_getattr_key_sockets(sysadm_t)
+	ipsec_run_setkey(sysadm_t, sysadm_r)
+	ipsec_run_racoon(sysadm_t, sysadm_r)
+	ipsec_stream_connect_racoon(sysadm_t)
+')
+
+optional_policy(`
+	ipsec_mgmt_dbus_chat(sysadm_t)
 ')
 
 optional_policy(`
@@ -212,12 +244,18 @@
 ')
 
 optional_policy(`
+	kerberos_exec_kadmind(sysadm_t)
+')
+
+ifndef(`distro_redhat',`
+optional_policy(`
 	irc_role(sysadm_r, sysadm_t)
 ')
 
 optional_policy(`
 	java_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	kudzu_run(sysadm_t, sysadm_r)
@@ -227,9 +265,11 @@
 	libs_run_ldconfig(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	lockdev_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	logrotate_run(sysadm_t, sysadm_r)
@@ -252,8 +292,10 @@
 
 optional_policy(`
 	mount_run(sysadm_t, sysadm_r)
+	mount_run_showmount(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	mozilla_role(sysadm_r, sysadm_t)
 ')
@@ -261,6 +303,7 @@
 optional_policy(`
 	mplayer_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	mta_role(sysadm_r, sysadm_t)
@@ -275,6 +318,10 @@
 ')
 
 optional_policy(`
+	ncftool_run(sysadm_t, sysadm_r)
+')
+
+optional_policy(`
 	netutils_run(sysadm_t, sysadm_r)
 	netutils_run_ping(sysadm_t, sysadm_r)
 	netutils_run_traceroute(sysadm_t, sysadm_r)
@@ -308,8 +355,14 @@
 ')
 
 optional_policy(`
+	prelink_run(sysadm_t, sysadm_r)
+')
+
+ifndef(`distro_redhat',`
+optional_policy(`
 	pyzor_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	quota_run(sysadm_t, sysadm_r)
@@ -319,9 +372,11 @@
 	raid_domtrans_mdadm(sysadm_t)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	razor_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	rpc_domtrans_nfsd(sysadm_t)
@@ -331,9 +386,11 @@
 	rpm_run(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	rssh_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	rsync_exec(sysadm_t)
@@ -346,6 +403,7 @@
 
 optional_policy(`
 	screen_role_template(sysadm, sysadm_r, sysadm_t)
+	allow sysadm_screen_t self:capability { dac_read_search dac_override sys_tty_config };
 ')
 
 optional_policy(`
@@ -358,8 +416,14 @@
 ')
 
 optional_policy(`
+	shutdown_run(sysadm_t, sysadm_r)
+')
+
+ifndef(`distro_redhat',`
+optional_policy(`
 	spamassassin_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	ssh_role_template(sysadm, sysadm_r, sysadm_t)
@@ -382,9 +446,11 @@
 	sysnet_run_dhcpc(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	thunderbird_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	tripwire_run_siggen(sysadm_t, sysadm_r)
@@ -393,23 +459,31 @@
 	tripwire_run_twprint(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	tvtime_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	tzdata_domtrans(sysadm_t)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	uml_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	unconfined_domtrans(sysadm_t)
 ')
 
 optional_policy(`
+    udev_run(sysadm_t, sysadm_r)
+')
+
+optional_policy(`
 	unprivuser_role_change(sysadm_r)
 ')
 
@@ -417,9 +491,11 @@
 	usbmodules_run(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	userhelper_role_template(sysadm, sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	usermanage_run_admin_passwd(sysadm_t, sysadm_r)
@@ -427,9 +503,15 @@
 	usermanage_run_useradd(sysadm_t, sysadm_r)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	vmware_role(sysadm_r, sysadm_t)
 ')
+')
+
+optional_policy(`
+	vpn_run(sysadm_t, sysadm_r)
+')
 
 optional_policy(`
 	vpn_run(sysadm_t, sysadm_r)
@@ -440,13 +522,30 @@
 ')
 
 optional_policy(`
+	virt_stream_connect(sysadm_t)
+')
+
+ifndef(`distro_redhat',`
+optional_policy(`
 	wireshark_role(sysadm_r, sysadm_t)
 ')
 
 optional_policy(`
 	xserver_role(sysadm_r, sysadm_t)
 ')
+')
 
 optional_policy(`
 	yam_run(sysadm_t, sysadm_r)
 ')
+
+optional_policy(`
+	zebra_stream_connect(sysadm_t)
+')
+
+init_script_role_transition(sysadm_r)
+
+files_read_kernel_modules(sysadm_t)
+kernel_read_fs_sysctls(sysadm_t)
+modutils_read_module_deps(sysadm_t)
+miscfiles_read_hwdata(sysadm_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/unconfineduser.fc serefpolicy-3.7.19/policy/modules/roles/unconfineduser.fc
--- nsaserefpolicy/policy/modules/roles/unconfineduser.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/unconfineduser.fc	2011-03-17 07:21:02.698851002 +0000
@@ -0,0 +1,10 @@
+# Add programs here which should not be confined by SELinux
+# e.g.:
+# /usr/local/bin/appsrv		--	gen_context(system_u:object_r:unconfined_exec_t,s0)
+# For the time being until someone writes a sane policy, we need initrc to transition to unconfined_t
+/usr/bin/vncserver		--	gen_context(system_u:object_r:unconfined_exec_t,s0)
+/usr/sbin/mock			    --	gen_context(system_u:object_r:unconfined_notrans_exec_t,s0)
+/usr/sbin/sysreport	 	    --	gen_context(system_u:object_r:unconfined_notrans_exec_t,s0)
+
+/usr/sbin/xrdp   --  gen_context(system_u:object_r:unconfined_exec_t,s0)
+/usr/sbin/xrdp-sesman   --  gen_context(system_u:object_r:unconfined_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/unconfineduser.if serefpolicy-3.7.19/policy/modules/roles/unconfineduser.if
--- nsaserefpolicy/policy/modules/roles/unconfineduser.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/unconfineduser.if	2011-06-29 13:32:15.537029999 +0000
@@ -0,0 +1,724 @@
+## <summary>Unconfiend user role</summary>
+
+########################################
+## <summary>
+##	Change from the unconfineduser role.
+## </summary>
+## <desc>
+##	<p>
+##	Change from the unconfineduser role to
+##	the specified role.
+##	</p>
+##	<p>
+##	This is an interface to support third party modules
+##	and its use is not allowed in upstream reference
+##	policy.
+##	</p>
+## </desc>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`unconfined_role_change_to',`
+	gen_require(`
+		role unconfined_r;
+	')
+
+	allow unconfined_r $1;
+')
+
+########################################
+## <summary>
+##	Transition to the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_domtrans',`
+	gen_require(`
+		type unconfined_t, unconfined_exec_t;
+	')
+
+	domtrans_pattern($1,unconfined_exec_t,unconfined_t)
+')
+
+########################################
+## <summary>
+##	Execute specified programs in the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to allow the unconfined domain.
+##	</summary>
+## </param>
+#
+interface(`unconfined_run',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	unconfined_domtrans($1)
+	role $2 types unconfined_t;
+')
+
+########################################
+## <summary>
+##	Transition to the unconfined domain by executing a shell.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_shell_domtrans',`
+	gen_require(`
+		attribute unconfined_login_domain;
+	')
+	typeattribute $1 unconfined_login_domain;
+')
+
+########################################
+## <summary>
+##	Allow unconfined to execute the specified program in
+##	the specified domain.
+## </summary>
+## <desc>
+##	<p>
+##	Allow unconfined to execute the specified program in
+##	the specified domain.
+##	</p>
+##	<p>
+##	This is a interface to support third party modules
+##	and its use is not allowed in upstream reference
+##	policy.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain to execute in.
+##	</summary>
+## </param>
+## <param name="entry_file">
+##	<summary>
+##	Domain entry point file.
+##	</summary>
+## </param>
+#
+interface(`unconfined_domtrans_to',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	domtrans_pattern(unconfined_t,$2,$1)
+')
+
+########################################
+## <summary>
+##	Allow unconfined to execute the specified program in
+##	the specified domain.  Allow the specified domain the
+##	unconfined role and use of unconfined user terminals.
+## </summary>
+## <desc>
+##	<p>
+##	Allow unconfined to execute the specified program in
+##	the specified domain.  Allow the specified domain the
+##	unconfined role and use of unconfined user terminals.
+##	</p>
+##	<p>
+##	This is a interface to support third party modules
+##	and its use is not allowed in upstream reference
+##	policy.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain to execute in.
+##	</summary>
+## </param>
+## <param name="entry_file">
+##	<summary>
+##	Domain entry point file.
+##	</summary>
+## </param>
+#
+interface(`unconfined_run_to',`
+	gen_require(`
+		type unconfined_t;
+		role unconfined_r;
+	')
+
+	domtrans_pattern(unconfined_t,$2,$1)
+	role unconfined_r types $1;
+	userdom_use_user_terminals($1)
+')
+
+########################################
+## <summary>
+##	Inherit file descriptors from the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_use_fds',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:fd use;
+')
+
+########################################
+## <summary>
+##	Send a SIGCHLD signal to the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_sigchld',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process sigchld;
+')
+
+########################################
+## <summary>
+##	Send a SIGNULL signal to the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_signull',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process signull;
+')
+
+########################################
+## <summary>
+##	Send a SIGNULL signal to the unconfined execmem domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_execmem_signull',`
+	gen_require(`
+		type unconfined_execmem_t;
+	')
+
+	allow $1 unconfined_execmem_t:process signull;
+')
+
+########################################
+## <summary>
+##	Send a signal to the unconfined execmem domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_execmem_signal',`
+	gen_require(`
+		type unconfined_execmem_t;
+	')
+
+	allow $1 unconfined_execmem_t:process signal;
+')
+
+########################################
+## <summary>
+##	Send generic signals to the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_signal',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process signal;
+')
+
+########################################
+## <summary>
+##	Read unconfined domain unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_read_pipes',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:fifo_file read_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read unconfined domain unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_read_pipes',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:fifo_file read;
+')
+
+########################################
+## <summary>
+##	Read and write unconfined domain unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_rw_pipes',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:fifo_file rw_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write
+##	unconfined domain unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_rw_pipes',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:fifo_file rw_file_perms;
+')
+
+#######################################
+## <summary>
+##  Do not audit attempts to read and write
+##  unconfined domain netlink_route_socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`unconfined_dontaudit_netlink_route_socket',`
+    gen_require(`
+        type unconfined_t;
+    ')
+
+    dontaudit $1 unconfined_t:netlink_route_socket { read write };
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write
+##	unconfined domain stream.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_rw_stream',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:unix_stream_socket rw_socket_perms;
+')
+
+########################################
+## <summary>
+##	Connect to the unconfined domain using
+##	a unix domain stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_stream_connect',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:unix_stream_socket connectto;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	unconfined domain tcp sockets.
+## </summary>
+## <desc>
+##	<p>
+##	Do not audit attempts to read or write
+##	unconfined domain tcp sockets.
+##	</p>
+##	<p>
+##	This interface was added due to a broken
+##	symptom in ldconfig.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_rw_tcp_sockets',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:tcp_socket { read write };
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	unconfined domain packet sockets.
+## </summary>
+## <desc>
+##	<p>
+##	Do not audit attempts to read or write
+##	unconfined domain packet sockets.
+##	</p>
+##	<p>
+##	This interface was added due to a broken
+##	symptom.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_rw_packet_sockets',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:packet_socket { read write };
+')
+
+########################################
+## <summary>
+##	Create keys for the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_create_keys',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:key create;
+')
+
+########################################
+## <summary>
+##	Send messages to the unconfined domain over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dbus_send',`
+	gen_require(`
+		type unconfined_t;
+		class dbus send_msg;
+	')
+
+	allow $1 unconfined_t:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	unconfined_t over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dbus_chat',`
+	gen_require(`
+		type unconfined_t;
+		class dbus send_msg;
+	')
+
+	allow $1 unconfined_t:dbus send_msg;
+	allow unconfined_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Connect to the the unconfined DBUS
+##	for service (acquire_svc).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dbus_connect',`
+	gen_require(`
+		type unconfined_t;
+		class dbus acquire_svc;
+	')
+
+	allow $1 unconfined_t:dbus acquire_svc;
+')
+
+#######################################
+## <summary>
+##  Connect to the the unconfined DBUS
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`unconfined_dbus_stream_connect',`
+    gen_require(`
+        type unconfined_dbusd_t;
+    ')
+
+    allow $1 unconfined_dbusd_t:unix_stream_socket connectto;
+')
+
+########################################
+## <summary>
+##	Allow ptrace of unconfined domain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_ptrace',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process ptrace;
+')
+
+########################################
+## <summary>
+##	Read and write to unconfined shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`unconfined_rw_shm',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:shm rw_shm_perms;
+')
+
+########################################
+## <summary>
+##	Read and write to unconfined execmem shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`unconfined_execmem_rw_shm',`
+	gen_require(`
+		type unconfined_execmem_t;
+	')
+
+	allow $1 unconfined_execmem_t:shm rw_shm_perms;
+')
+
+########################################
+## <summary>
+##	Transition to the unconfined_execmem domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_execmem_domtrans',`
+
+	gen_require(`
+		type unconfined_execmem_t;
+	')
+
+	execmem_domtrans($1, unconfined_execmem_t)
+')
+
+########################################
+## <summary>
+##	execute the execmem applications
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_execmem_exec',`
+
+	gen_require(`
+		type execmem_exec_t;
+	')
+
+	can_exec($1, execmem_exec_t)
+')
+
+########################################
+## <summary>
+##	Allow apps to set rlimits on userdomain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_set_rlimitnh',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process rlimitinh;
+')
+
+########################################
+## <summary>
+##	Get the process group of unconfined.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_getpgid',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process getpgid;
+')
+
+########################################
+## <summary>
+##	Change to the unconfined role.
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`unconfined_role_change',`
+	gen_require(`
+		role unconfined_r;
+	')
+
+	allow $1 unconfined_r;
+')
+
+#######################################
+## <summary>
+##      Allow domain to attach to TUN devices created by unconfined_t users.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`unconfined_attach_tun_iface',`
+        gen_require(`
+                type unconfined_t;
+        ')
+
+        allow $1 unconfined_t:tun_socket relabelfrom;
+        allow $1 self:tun_socket relabelto;
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/unconfineduser.te serefpolicy-3.7.19/policy/modules/roles/unconfineduser.te
--- nsaserefpolicy/policy/modules/roles/unconfineduser.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/unconfineduser.te	2012-08-01 10:17:08.117058803 +0000
@@ -0,0 +1,467 @@
+policy_module(unconfineduser, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+attribute unconfined_login_domain;
+
+## <desc>
+## <p>
+## Transition to confined nsplugin domains from unconfined user
+## </p>
+## </desc>
+gen_tunable(allow_unconfined_nsplugin_transition, false)
+
+## <desc>
+## <p>
+## Allow a user to login as an unconfined domain
+## </p>
+## </desc>
+gen_tunable(unconfined_login, true)
+
+## <desc>
+## <p>
+## Ignore unconfined mmap_zero errors
+## </p>
+## </desc>
+gen_tunable(unconfined_mmap_zero_ignore, false)
+
+## <desc>
+## <p>
+## Allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container.
+## </p>
+## </desc>
+gen_tunable(unconfined_mozilla_plugin_transition, false)
+
+# usage in this module of types created by these
+# calls is not correct, however we dont currently
+# have another method to add access to these types
+userdom_base_user_template(unconfined)
+userdom_manage_home_role(unconfined_r, unconfined_t)
+userdom_manage_tmp_role(unconfined_r, unconfined_t)
+userdom_manage_tmpfs_role(unconfined_r, unconfined_t)
+userdom_unpriv_usertype(unconfined, unconfined_t)
+
+type unconfined_exec_t;
+init_system_domain(unconfined_t, unconfined_exec_t)
+role unconfined_r types unconfined_t;
+role_transition system_r unconfined_exec_t unconfined_r;
+allow system_r unconfined_r;
+
+domain_user_exemption_target(unconfined_t)
+allow system_r unconfined_r;
+allow unconfined_r system_r;
+init_script_role_transition(unconfined_r)
+role system_r types unconfined_t;
+typealias unconfined_t alias unconfined_crontab_t;
+
+type unconfined_notrans_t;
+type unconfined_notrans_exec_t;
+init_system_domain(unconfined_notrans_t, unconfined_notrans_exec_t)
+role unconfined_r types unconfined_notrans_t;
+
+########################################
+#
+# Local policy
+#
+
+dontaudit unconfined_t self:dir write;
+dontaudit unconfined_t self:file setattr;
+
+allow unconfined_t self:process dyntransition;
+allow unconfined_t self:system syslog_read;
+dontaudit unconfined_t self:capability sys_module;
+
+kernel_rw_unlabeled_socket(unconfined_t)
+kernel_rw_unlabeled_rawip_socket(unconfined_t)
+
+files_create_boot_flag(unconfined_t)
+files_create_default_dir(unconfined_t)
+files_root_filetrans_default(unconfined_t, dir)
+
+mcs_killall(unconfined_t)
+mcs_ptrace_all(unconfined_t)
+mls_file_write_all_levels(unconfined_t)
+
+init_run_daemon(unconfined_t, unconfined_r)
+init_domtrans_script(unconfined_t)
+init_telinit(unconfined_t)
+
+libs_run_ldconfig(unconfined_t, unconfined_r)
+
+logging_send_syslog_msg(unconfined_t)
+logging_run_auditctl(unconfined_t, unconfined_r)
+
+mount_run_unconfined(unconfined_t, unconfined_r)
+# Unconfined running as system_r
+mount_domtrans_unconfined(unconfined_t)
+
+seutil_run_setsebool(unconfined_t, unconfined_r)
+seutil_run_setfiles(unconfined_t, unconfined_r)
+seutil_run_semanage(unconfined_t, unconfined_r)
+
+unconfined_domain_noaudit(unconfined_t)
+
+userdom_user_home_dir_filetrans_user_home_content(unconfined_t, { dir file lnk_file fifo_file sock_file })
+
+usermanage_run_passwd(unconfined_t, unconfined_r)
+usermanage_run_chfn(unconfined_t, unconfined_r)
+
+tunable_policy(`allow_execmem',`
+	allow unconfined_t self:process execmem;
+')
+
+tunable_policy(`allow_execmem && allow_execstack',`
+	allow unconfined_t self:process execstack;
+')
+
+tunable_policy(`allow_execmod',`
+	userdom_execmod_user_home_files(unconfined_usertype)
+')
+
+tunable_policy(`unconfined_login',`
+	corecmd_shell_domtrans(unconfined_login_domain,unconfined_t)
+	allow unconfined_t unconfined_login_domain:fd use;
+	allow unconfined_t unconfined_login_domain:fifo_file rw_file_perms;
+	allow unconfined_t unconfined_login_domain:process sigchld;
+')
+
+tunable_policy(`unconfined_mmap_zero_ignore',`
+    dontaudit unconfined_usertype self:memprotect mmap_zero;
+')
+
+optional_policy(`
+	gen_require(`
+		attribute unconfined_usertype;
+	')
+
+	nsplugin_role_notrans(unconfined_r, unconfined_usertype)
+	optional_policy(`
+		tunable_policy(`allow_unconfined_nsplugin_transition',`
+		      nsplugin_domtrans(unconfined_usertype)
+		      nsplugin_domtrans_config(unconfined_usertype)
+		')
+	')
+
+	optional_policy(`
+		abrt_dbus_chat(unconfined_usertype)
+		abrt_run_helper(unconfined_usertype, unconfined_r)
+	')
+
+	optional_policy(`
+		avahi_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		certmonger_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		devicekit_dbus_chat(unconfined_usertype)
+		devicekit_dbus_chat_disk(unconfined_usertype)
+		devicekit_dbus_chat_power(unconfined_usertype)
+	')
+
+	optional_policy(`
+		hal_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		networkmanager_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		policykit_role(unconfined_r, unconfined_usertype)
+	')
+
+	optional_policy(`
+		rtkit_scheduled(unconfined_usertype)
+	')
+
+	optional_policy(`
+		setroubleshoot_dbus_chat(unconfined_usertype)
+		setroubleshoot_dbus_chat_fixit(unconfined_t)
+	')
+
+	optional_policy(`
+		sandbox_transition(unconfined_usertype, unconfined_r)
+	')
+
+	optional_policy(`
+		shutdown_run(unconfined_t, unconfined_r)
+	')
+
+	optional_policy(`
+		tzdata_run(unconfined_usertype, unconfined_r)
+	')
+
+	optional_policy(`
+		xserver_rw_shm(unconfined_usertype)
+		xserver_run_xauth(unconfined_usertype, unconfined_r)
+		xserver_dbus_chat_xdm(unconfined_usertype)
+	')
+')
+
+ifdef(`distro_gentoo',`
+	seutil_run_runinit(unconfined_t, unconfined_r)
+	seutil_init_script_run_runinit(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	accountsd_dbus_chat(unconfined_t)
+')
+
+optional_policy(`
+	ada_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	apache_run_helper(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	bind_run_ndc(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	bootloader_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	cron_unconfined_role(unconfined_r, unconfined_t)
+')
+
+optional_policy(`
+	chrome_role(unconfined_r, unconfined_t)
+')
+
+optional_policy(`
+	dbus_role_template(unconfined, unconfined_r, unconfined_t)
+
+	optional_policy(`
+		unconfined_domain(unconfined_dbusd_t)
+		unconfined_execmem_domtrans(unconfined_dbusd_t)
+
+		optional_policy(`
+			xserver_rw_shm(unconfined_dbusd_t)
+		')
+	')
+
+	init_dbus_chat_script(unconfined_usertype)
+
+	dbus_stub(unconfined_t)
+
+	optional_policy(`
+		bluetooth_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		consolekit_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		cups_dbus_chat_config(unconfined_usertype)
+	')
+
+	optional_policy(`
+		fprintd_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		gnomeclock_dbus_chat(unconfined_usertype)
+		gnome_dbus_chat_gconfdefault(unconfined_usertype)
+	')
+	
+	optional_policy(`
+		ipsec_mgmt_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		kerneloops_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		oddjob_dbus_chat(unconfined_usertype)
+	')
+
+	optional_policy(`
+		vpn_dbus_chat(unconfined_usertype)
+	')
+')
+
+optional_policy(`
+	firewallgui_dbus_chat(unconfined_usertype)
+')
+
+optional_policy(`
+	firstboot_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	ftp_run_ftpdctl(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+        gpsd_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	java_run_unconfined(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	livecd_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	lpd_run_checkpc(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	modutils_run_update_mods(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	mono_role_template(unconfined, unconfined_r, unconfined_t)
+	unconfined_domain_noaudit(unconfined_mono_t)
+	role system_r types unconfined_mono_t;
+')
+
+optional_policy(`
+    mozilla_role_plugin(unconfined_r)
+
+    tunable_policy(`unconfined_mozilla_plugin_transition', `
+            mozilla_domtrans_plugin(unconfined_usertype)
+    ')
+')
+
+optional_policy(`
+	oddjob_run_mkhomedir(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	prelink_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	portmap_run_helper(unconfined_t, unconfined_r)
+')
+
+#optional_policy(`
+#	ppp_run(unconfined_t, unconfined_r)
+#')
+
+optional_policy(`
+    quota_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	rpm_run(unconfined_t, unconfined_r)
+	# Allow SELinux aware applications to request rpm_script execution
+	rpm_transition_script(unconfined_t)
+	rpm_dbus_chat(unconfined_t)
+')
+
+optional_policy(`
+	optional_policy(`
+		samba_run_unconfined_net(unconfined_t, unconfined_r)
+	')
+	samba_role_notrans(unconfined_r)
+#	samba_run_winbind_helper(unconfined_t, unconfined_r)
+	samba_run_smbcontrol(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	sendmail_run_unconfined(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	ssh_run_keygen(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	sysnet_run_dhcpc(unconfined_t, unconfined_r)
+	sysnet_dbus_chat_dhcpc(unconfined_t)
+	sysnet_role_transition_dhcpc(unconfined_r)
+')
+
+optional_policy(`
+	vbetool_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	virt_transition_svirt(unconfined_t, unconfined_r)
+	#virt_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	vpn_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	webalizer_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	wine_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	xserver_run(unconfined_t, unconfined_r)
+')
+
+########################################
+#
+# Unconfined Execmem Local policy
+#
+
+optional_policy(`
+	execmem_role_template(unconfined, unconfined_r, unconfined_t)
+	typealias unconfined_execmem_t alias execmem_t;
+	unconfined_domain_noaudit(unconfined_execmem_t)
+	allow unconfined_execmem_t unconfined_t:process transition;
+	rpm_transition_script(unconfined_execmem_t)
+	role system_r types unconfined_execmem_t;
+
+	userdom_user_home_dir_filetrans_user_home_content(unconfined_execmem_t, dir_file_class_set)
+
+	optional_policy(`
+		init_dbus_chat_script(unconfined_execmem_t)
+		dbus_system_bus_client(unconfined_execmem_t)
+		unconfined_dbus_chat(unconfined_execmem_t)
+		unconfined_dbus_connect(unconfined_execmem_t)
+	')
+
+	optional_policy(`
+		tunable_policy(`allow_unconfined_nsplugin_transition',`', `
+			nsplugin_exec_domtrans(unconfined_t, unconfined_execmem_t)
+		')
+	')
+
+	optional_policy(`
+		openoffice_exec_domtrans(unconfined_t, unconfined_execmem_t)
+	')
+')
+
+########################################
+#
+# Unconfined notrans Local policy
+#
+
+allow unconfined_notrans_t self:process { execstack execmem };
+unconfined_domain_noaudit(unconfined_notrans_t)
+userdom_unpriv_usertype(unconfined, unconfined_notrans_t)
+domtrans_pattern(unconfined_t, unconfined_notrans_exec_t, unconfined_notrans_t)
+# Allow SELinux aware applications to request rpm_script execution
+rpm_transition_script(unconfined_notrans_t)
+domain_ptrace_all_domains(unconfined_notrans_t)
+
+########################################
+#
+# Unconfined mount local policy
+#
+
+gen_user(unconfined_u, user, unconfined_r system_r, s0, s0 - mls_systemhigh, mcs_allcats)
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/unprivuser.if serefpolicy-3.7.19/policy/modules/roles/unprivuser.if
--- nsaserefpolicy/policy/modules/roles/unprivuser.if	2011-03-17 07:21:20.394851001 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/unprivuser.if	2012-03-08 12:43:37.588937079 +0000
@@ -1,4 +1,4 @@
-## <summary>Generic unprivileged user role</summary>
+## <summary>Generic unprivileged user</summary>
 
 ########################################
 ## <summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/unprivuser.te serefpolicy-3.7.19/policy/modules/roles/unprivuser.te
--- nsaserefpolicy/policy/modules/roles/unprivuser.te	2011-03-17 07:21:20.412851001 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/unprivuser.te	2012-01-25 19:49:38.730934150 +0000
@@ -13,10 +13,21 @@
 
 userdom_unpriv_user_template(user)
 
+fs_exec_noxattr(user_t)
+
+tunable_policy(`allow_execmod',`
+	userdom_execmod_user_home_files(user_usertype)
+')
+
+optional_policy(`
+	abrt_read_cache(user_t)
+ ')
+
 optional_policy(`
 	apache_role(user_r, user_t)
 ')
 
+ifndef(`distro_redhat',`
 optional_policy(`
 	auth_role(user_r, user_t)
 ')
@@ -79,6 +90,7 @@
 
 optional_policy(`
 	mozilla_role(user_r, user_t)
+	mozilla_run_plugin(user_usertype, user_r)
 ')
 
 optional_policy(`
@@ -109,19 +121,38 @@
 optional_policy(`
 	rssh_role(user_r, user_t)
 ')
+')
 
 optional_policy(`
-	screen_role_template(user, user_r, user_t)
+    netutils_run_ping_cond(user_t, user_r)
+    netutils_run_traceroute_cond(user_t, user_r)
 ')
 
 optional_policy(`
-	spamassassin_role(user_r, user_t)
+	rpm_dontaudit_dbus_chat(user_t)
+')
+
+optional_policy(`
+	rtkit_scheduled(user_t)
+')
+
+optional_policy(`
+	sandbox_transition(user_t, user_r)
+')
+
+optional_policy(`
+	screen_role_template(user, user_r, user_t)
 ')
 
 optional_policy(`
 	ssh_role_template(user, user_r, user_t)
 ')
 
+ifndef(`distro_redhat',`
+optional_policy(`
+	spamassassin_role(user_r, user_t)
+')
+
 optional_policy(`
 	su_role_template(user, user_r, user_t)
 ')
@@ -154,6 +185,12 @@
 	wireshark_role(user_r, user_t)
 ')
 
+')
+
+optional_policy(`
+	setroubleshoot_dontaudit_stream_connect(user_t)
+')
+
 optional_policy(`
 	xserver_role(user_r, user_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/xguest.if serefpolicy-3.7.19/policy/modules/roles/xguest.if
--- nsaserefpolicy/policy/modules/roles/xguest.if	2011-03-17 07:21:20.345851001 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/xguest.if	2012-03-08 12:48:05.282638367 +0000
@@ -1,4 +1,4 @@
-## <summary>Least privledge xwindows user role</summary>
+## <summary>Least priviledged X user</summary>
 
 ########################################
 ## <summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/roles/xguest.te serefpolicy-3.7.19/policy/modules/roles/xguest.te
--- nsaserefpolicy/policy/modules/roles/xguest.te	2011-03-17 07:21:20.421851001 +0000
+++ serefpolicy-3.7.19/policy/modules/roles/xguest.te	2012-01-25 19:50:13.605113576 +0000
@@ -15,7 +15,7 @@
 
 ## <desc>
 ## <p>
-## Allow xguest to configure Network Manager
+## Allow xguest to configure Network Manager and connect to apache ports
 ## </p>
 ## </desc>
 gen_tunable(xguest_connect_network, true)
@@ -30,12 +30,12 @@
 role xguest_r;
 
 userdom_restricted_xwindows_user_template(xguest)
+sysnet_dns_name_resolve(xguest_t)
 
 ########################################
 #
 # Local policy
 #
-
 ifndef(`enable_mls',`
 	fs_exec_noxattr(xguest_t)
 
@@ -49,12 +49,21 @@
 		storage_raw_read_removable_device(xguest_t)
 	')
 ')
+# Dontaudit fusermount
+mount_dontaudit_exec_fusermount(xguest_t)
+
+allow xguest_t self:process execmem;
+kernel_dontaudit_request_load_module(xguest_t)
+
+tunable_policy(`allow_execstack',`
+	allow xguest_t self:process execstack;
+')
 
 # Allow mounting of file systems
 optional_policy(`
 	tunable_policy(`xguest_mount_media',`
 		kernel_read_fs_sysctls(xguest_t)
-
+		kernel_request_load_module(xguest_t)
 		files_dontaudit_getattr_boot_dirs(xguest_t)
 		files_search_mnt(xguest_t)
 
@@ -63,10 +72,9 @@
 		fs_manage_noxattr_fs_dirs(xguest_t)
 		fs_getattr_noxattr_fs(xguest_t)
 		fs_read_noxattr_fs_symlinks(xguest_t)
+		fs_mount_fusefs(xguest_t)
 
 		auth_list_pam_console_data(xguest_t)
-
-		init_read_utmp(xguest_t)
 	')
 ')
 
@@ -81,19 +89,92 @@
 ')
 
 optional_policy(`
-	java_role(xguest_r, xguest_t)
+	apache_role(xguest_r, xguest_t)
+')
+
+optional_policy(`
+	execmem_role_template(xguest, xguest_r, xguest_t)
+')
+
+optional_policy(`
+	gnomeclock_dontaudit_dbus_chat(xguest_t)
+')
+
+optional_policy(`
+	chrome_role(xguest_r, xguest_usertype)
+')
+
+optional_policy(`
+	java_role_template(xguest, xguest_r, xguest_t)
 ')
 
 optional_policy(`
-	mozilla_role(xguest_r, xguest_t)
+	mono_role_template(xguest, xguest_r, xguest_t)
+')
+
+optional_policy(`
+    mozilla_run_plugin(xguest_usertype, xguest_r)
+')
+
+optional_policy(`
+	nsplugin_role(xguest_r, xguest_t)
+')
+
+optional_policy(`
+	pcscd_read_pub_files(xguest_usertype)
+	pcscd_stream_connect(xguest_usertype)
+')
+
+optional_policy(`
+    rhsmcertd_dontaudit_dbus_chat(xguest_t)
 ')
 
 optional_policy(`
 	tunable_policy(`xguest_connect_network',`
+		kernel_read_network_state(xguest_usertype)
+
 		networkmanager_dbus_chat(xguest_t)
-		corenet_tcp_connect_pulseaudio_port(xguest_t)
-		corenet_tcp_connect_ipp_port(xguest_t)
+		networkmanager_read_var_lib_files(xguest_t)
+		corenet_tcp_connect_pulseaudio_port(xguest_usertype)
+		corenet_all_recvfrom_unlabeled(xguest_usertype)
+		corenet_all_recvfrom_netlabel(xguest_usertype)
+		corenet_tcp_sendrecv_generic_if(xguest_usertype)
+		corenet_raw_sendrecv_generic_if(xguest_usertype)
+		corenet_tcp_sendrecv_generic_node(xguest_usertype)
+		corenet_raw_sendrecv_generic_node(xguest_usertype)
+		corenet_tcp_sendrecv_http_port(xguest_usertype)
+		corenet_tcp_sendrecv_http_cache_port(xguest_usertype)
+		corenet_tcp_sendrecv_ftp_port(xguest_usertype)
+		corenet_tcp_sendrecv_ipp_port(xguest_usertype)
+		corenet_tcp_connect_http_port(xguest_usertype)
+		corenet_tcp_connect_http_cache_port(xguest_usertype)
+		corenet_tcp_connect_flash_port(xguest_usertype)
+		corenet_tcp_connect_ftp_port(xguest_usertype)
+		corenet_tcp_connect_ipp_port(xguest_usertype)
+		corenet_tcp_connect_generic_port(xguest_usertype)
+		corenet_tcp_connect_soundd_port(xguest_usertype)
+		corenet_sendrecv_http_client_packets(xguest_usertype)
+		corenet_sendrecv_http_cache_client_packets(xguest_usertype)
+		corenet_sendrecv_ftp_client_packets(xguest_usertype)
+		corenet_sendrecv_ipp_client_packets(xguest_usertype)
+		corenet_sendrecv_generic_client_packets(xguest_usertype)
+		# Should not need other ports
+		corenet_dontaudit_tcp_sendrecv_generic_port(xguest_usertype)
+		corenet_dontaudit_tcp_bind_generic_port(xguest_usertype)
+		corenet_tcp_connect_speech_port(xguest_usertype)
+		corenet_tcp_sendrecv_transproxy_port(xguest_usertype)
+		corenet_tcp_connect_transproxy_port(xguest_usertype)
+		corenet_tcp_connect_jabber_client_port(xguest_usertype)
 	')
 ')
 
-#gen_user(xguest_u,, xguest_r, s0, s0)
+optional_policy(`
+	gen_require(`
+		type mozilla_t;
+	')
+
+	allow xguest_t mozilla_t:process transition;
+	role xguest_r types mozilla_t;
+')
+
+gen_user(xguest_u, user, xguest_r, s0, s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/abrt.fc serefpolicy-3.7.19/policy/modules/services/abrt.fc
--- nsaserefpolicy/policy/modules/services/abrt.fc	2011-03-17 07:21:20.990851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/abrt.fc	2011-08-10 18:46:45.165523005 +0000
@@ -1,11 +1,33 @@
-/etc/abrt(/.*)?			 gen_context(system_u:object_r:abrt_etc_t,s0)
+/etc/abrt(/.*)?				gen_context(system_u:object_r:abrt_etc_t,s0)
 /etc/rc\.d/init\.d/abrt		--	gen_context(system_u:object_r:abrt_initrc_exec_t,s0)
 
-/usr/sbin/abrt			--	gen_context(system_u:object_r:abrt_exec_t,s0)
+/usr/bin/abrt-dump-oops 	--	gen_context(system_u:object_r:abrt_dump_oops_exec_t,s0)
+/usr/bin/abrt-pyhook-helper 	--	gen_context(system_u:object_r:abrt_helper_exec_t,s0)
+
+/usr/sbin/abrtd			--	gen_context(system_u:object_r:abrt_exec_t,s0)
+
+/usr/libexec/abrt-handle-event	--	gen_context(system_u:object_r:abrt_handle_event_exec_t,s0)
 
 /var/cache/abrt(/.*)?			gen_context(system_u:object_r:abrt_var_cache_t,s0)
+/var/cache/abrt-di(/.*)?		gen_context(system_u:object_r:abrt_var_cache_t,s0)
 
 /var/log/abrt-logger		--	gen_context(system_u:object_r:abrt_var_log_t,s0)
 
-/var/run/abrt\.pid		--	gen_context(system_u:object_r:abrt_var_run_t,s0)	
-/var/run/abrt\.lock		--	gen_context(system_u:object_r:abrt_var_run_t,s0)
+/var/run/abrt\.pid		--	gen_context(system_u:object_r:abrt_var_run_t,s0)
+/var/run/abrtd?\.lock		--	gen_context(system_u:object_r:abrt_var_run_t,s0)
+/var/run/abrtd?\.socket		--	gen_context(system_u:object_r:abrt_var_run_t,s0)
+/var/run/abrt(/.*)?			gen_context(system_u:object_r:abrt_var_run_t,s0)
+
+/var/spool/abrt(/.*)?			gen_context(system_u:object_r:abrt_var_cache_t,s0)
+
+# ABRT retrace server
+/usr/bin/abrt-retrace-worker				--      gen_context(system_u:object_r:abrt_retrace_worker_exec_t,s0)
+/usr/bin/coredump2packages					--		gen_context(system_u:object_r:abrt_retrace_coredump_exec_t,s0)
+
+/var/cache/abrt-retrace(/.*)?						gen_context(system_u:object_r:abrt_retrace_cache_t,s0)
+/var/spool/abrt-retrace(/.*)?						gen_context(system_u:object_r:abrt_retrace_spool_t,s0)
+
+# cjp: new version
+/usr/bin/retrace-server-worker				--      gen_context(system_u:object_r:abrt_retrace_worker_exec_t,s0)
+/var/cache/retrace-server(/.*)?						gen_context(system_u:object_r:abrt_retrace_cache_t,s0)
+/var/spool/retrace-server(/.*)?						gen_context(system_u:object_r:abrt_retrace_spool_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/abrt.if serefpolicy-3.7.19/policy/modules/services/abrt.if
--- nsaserefpolicy/policy/modules/services/abrt.if	2011-03-17 07:21:21.826851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/abrt.if	2011-11-01 11:16:53.974276813 +0000
@@ -6,7 +6,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -21,11 +21,11 @@
 
 ######################################
 ## <summary>
-##	Execute abrt 
+##	Execute abrt in the caller domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -38,6 +38,184 @@
 	can_exec($1, abrt_exec_t)
 ')
 
+########################################
+## <summary>
+##	Send a null signal to abrt.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_signull',`
+	gen_require(`
+		type abrt_t;
+	')
+
+	allow $1 abrt_t:process signull;
+')
+
+########################################
+## <summary>
+##	Allow the domain to read abrt state files in /proc.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_read_state',`
+	gen_require(`
+		type abrt_t;
+	')
+
+	kernel_search_proc($1)
+	ps_process_pattern($1, abrt_t)
+')
+
+########################################
+## <summary>
+##	Connect to abrt over an unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_stream_connect',`
+	gen_require(`
+		type abrt_t, abrt_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, abrt_var_run_t, abrt_var_run_t, abrt_t)
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	abrt over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_dbus_chat',`
+	gen_require(`
+		type abrt_t;
+		class dbus send_msg;
+	')
+
+	allow $1 abrt_t:dbus send_msg;
+	allow abrt_t $1:dbus send_msg;
+')
+
+#####################################
+## <summary>
+##	Execute abrt-helper in the abrt-helper domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`abrt_domtrans_helper',`
+	gen_require(`
+		type abrt_helper_t, abrt_helper_exec_t;
+	')
+
+	domtrans_pattern($1, abrt_helper_exec_t, abrt_helper_t)
+')
+
+########################################
+## <summary>
+##	Execute abrt helper in the abrt_helper domain, and
+##	allow the specified role the abrt_helper domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`abrt_run_helper',`
+	gen_require(`
+		type abrt_helper_t;
+	')
+
+	abrt_domtrans_helper($1)
+	role $2 types abrt_helper_t;
+')
+
+########################################
+## <summary>
+##	Read abrt cache
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_read_cache',`
+	gen_require(`
+		type abrt_var_cache_t;
+	')
+
+	read_files_pattern($1, abrt_var_cache_t, abrt_var_cache_t)
+	read_lnk_files_pattern($1, abrt_var_cache_t, abrt_var_cache_t)
+')
+
+########################################
+## <summary>
+##	Append abrt cache
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_append_cache',`
+	gen_require(`
+		type abrt_var_cache_t;
+	')
+
+	append_files_pattern($1, abrt_var_cache_t, abrt_var_cache_t)
+')
+
+########################################
+## <summary>
+##	Manage abrt cache
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_manage_cache',`
+	gen_require(`
+		type abrt_var_cache_t;
+	')
+
+	manage_files_pattern($1, abrt_var_cache_t, abrt_var_cache_t)
+	manage_lnk_files_pattern($1, abrt_var_cache_t, abrt_var_cache_t)
+	manage_dirs_pattern($1, abrt_var_cache_t, abrt_var_cache_t)
+')
+
 ####################################
 ## <summary>
 ##	Read abrt configuration file.
@@ -76,9 +254,65 @@
 	read_files_pattern($1, abrt_var_log_t, abrt_var_log_t)
 ')
 
+######################################
+## <summary>
+##	Read abrt PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_read_pid_files',`
+	gen_require(`
+		type abrt_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, abrt_var_run_t, abrt_var_run_t)
+')
+
+######################################
+## <summary>
+##	Create, read, write, and delete abrt PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_manage_pid_files',`
+	gen_require(`
+		type abrt_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_files_pattern($1, abrt_var_run_t, abrt_var_run_t)
+')
+
+########################################
+## <summary>
+##	Read and write abrt fifo files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`abrt_rw_fifo_file',`
+	gen_require(`
+		type abrt_t;
+	')
+
+	allow $1 abrt_t:fifo_file rw_inherited_fifo_file_perms;
+')
+
 #####################################
 ## <summary>
-##	All of the rules required to administrate 
+##	All of the rules required to administrate
 ##	an abrt environment
 ## </summary>
 ## <param name="domain">
@@ -95,7 +329,7 @@
 #
 interface(`abrt_admin',`
 	gen_require(`
-		type abrt_t, abrt_etc_t; 
+		type abrt_t, abrt_etc_t;
 		type abrt_var_cache_t, abrt_var_log_t;
 		type abrt_var_run_t, abrt_tmp_t;
 		type abrt_initrc_exec_t;
@@ -109,18 +343,98 @@
 	role_transition $2 abrt_initrc_exec_t system_r;
 	allow $2 system_r;
 
-	files_search_etc($1)
+	files_list_etc($1)
 	admin_pattern($1, abrt_etc_t)
 
-	logging_search_logs($1)
-	admin_pattern($1, abrt_var_log_t)	
+	logging_list_logs($1)
+	admin_pattern($1, abrt_var_log_t)
 
-	files_search_var($1)
+	files_list_var($1)
 	admin_pattern($1, abrt_var_cache_t)
 
-	files_search_pids($1)
+	files_list_pids($1)
 	admin_pattern($1, abrt_var_run_t)
 
-	files_search_tmp($1)
+	files_list_tmp($1)
 	admin_pattern($1, abrt_tmp_t)
 ')
+
+####################################
+## <summary>
+##  Execute abrt-retrace in the abrt-retrace domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`abrt_domtrans_retrace_worker',`
+    gen_require(`
+        type abrt_retrace_worker_t, abrt_retrace_worker_exec_t;
+    ')
+
+    corecmd_search_bin($1)
+    domtrans_pattern($1, abrt_retrace_worker_exec_t, abrt_retrace_worker_t)
+')
+
+######################################
+## <summary>
+##  Manage abrt retrace server cache
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`abrt_manage_spool_retrace',`
+    gen_require(`
+        type abrt_retrace_spool_t;
+    ')
+
+	manage_dirs_pattern($1, abrt_retrace_spool_t, abrt_retrace_spool_t)
+	manage_files_pattern($1, abrt_retrace_spool_t, abrt_retrace_spool_t)
+	manage_lnk_files_pattern($1, abrt_retrace_spool_t, abrt_retrace_spool_t)
+')
+
+#####################################
+## <summary>
+##  Read abrt retrace server cache
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`abrt_read_spool_retrace',`
+    gen_require(`
+        type abrt_retrace_spool_t;
+    ')
+
+    list_dirs_pattern($1, abrt_retrace_spool_t, abrt_retrace_spool_t)
+    read_files_pattern($1, abrt_retrace_spool_t, abrt_retrace_spool_t)
+    read_lnk_files_pattern($1, abrt_retrace_spool_t, abrt_retrace_spool_t)
+')
+
+
+#####################################
+## <summary>
+##  Read abrt retrace server cache
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`abrt_read_cache_retrace',`
+    gen_require(`
+        type abrt_retrace_cache_t;
+    ')
+
+    list_dirs_pattern($1, abrt_retrace_cache_t, abrt_retrace_cache_t)
+    read_files_pattern($1, abrt_retrace_cache_t, abrt_retrace_cache_t)
+    read_lnk_files_pattern($1, abrt_retrace_cache_t, abrt_retrace_cache_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/abrt.te serefpolicy-3.7.19/policy/modules/services/abrt.te
--- nsaserefpolicy/policy/modules/services/abrt.te	2011-03-17 07:21:21.865851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/abrt.te	2012-03-22 15:04:49.611256220 +0000
@@ -1,12 +1,29 @@
-
-policy_module(abrt, 1.0.1)
+policy_module(abrt, 1.2.0)
 
 ########################################
 #
 # Declarations
 #
 
-type abrt_t;
+## <desc>
+##	<p>
+##	Allow ABRT to modify public files
+##	used for public file transfer services.
+##	</p>
+## </desc>
+gen_tunable(abrt_anon_write, false)
+
+## <desc>
+##  <p>
+##  Allow ABRT to run in abrt_handle_event_t domain
+##  to handle ABRT event scripts
+##  </p>
+## </desc>
+gen_tunable(abrt_handle_event, false)
+
+attribute abrt_domain;
+
+type abrt_t, abrt_domain;
 type abrt_exec_t;
 init_daemon_domain(abrt_t, abrt_exec_t)
 
@@ -33,13 +50,56 @@
 type abrt_var_run_t;
 files_pid_file(abrt_var_run_t)
 
+type abrt_dump_oops_t, abrt_domain;
+type abrt_dump_oops_exec_t;
+init_system_domain(abrt_dump_oops_t, abrt_dump_oops_exec_t)
+
+# type for abrt-handle-event to handle
+# ABRT event scripts
+type abrt_handle_event_t, abrt_domain;
+type abrt_handle_event_exec_t;
+application_domain(abrt_handle_event_t, abrt_handle_event_exec_t)
+role system_r types abrt_handle_event_t;
+
+# type needed to allow all domains
+# to handle /var/cache/abrt
+type abrt_helper_t, abrt_domain;
+type abrt_helper_exec_t;
+application_domain(abrt_helper_t, abrt_helper_exec_t)
+role system_r types abrt_helper_t;
+
+ifdef(`enable_mcs',`
+	init_ranged_daemon_domain(abrt_t, abrt_exec_t, s0 - mcs_systemhigh)
+')
+
+#
+# Support for ABRT retrace server
+#
+
+type abrt_retrace_worker_t, abrt_domain;
+type abrt_retrace_worker_exec_t;
+application_domain(abrt_retrace_worker_t, abrt_retrace_worker_exec_t)
+role system_r types abrt_retrace_worker_t;
+
+type abrt_retrace_coredump_t, abrt_domain;
+type abrt_retrace_coredump_exec_t;
+application_domain(abrt_retrace_coredump_t, abrt_retrace_coredump_exec_t)
+role system_r types abrt_retrace_coredump_t;
+
+type abrt_retrace_cache_t;
+files_type(abrt_retrace_cache_t)
+
+type abrt_retrace_spool_t;
+files_type(abrt_retrace_spool_t)
+
 ########################################
 #
 # abrt local policy
 #
 
-allow abrt_t self:capability { setuid setgid sys_nice dac_override };
-allow abrt_t self:process { signal signull setsched getsched };
+allow abrt_t self:capability { chown dac_override fowner fsetid kill setgid setuid sys_nice };
+dontaudit abrt_t self:capability sys_rawio;
+allow abrt_t self:process { setpgid sigkill signal signull setsched getsched };
 
 allow abrt_t self:fifo_file rw_fifo_file_perms;
 allow abrt_t self:tcp_socket create_stream_socket_perms;
@@ -48,77 +108,332 @@
 allow abrt_t self:netlink_route_socket r_netlink_socket_perms;
 
 # abrt etc files
+list_dirs_pattern(abrt_t, abrt_etc_t, abrt_etc_t)
 rw_files_pattern(abrt_t, abrt_etc_t, abrt_etc_t)
 
 # log file
 manage_files_pattern(abrt_t, abrt_var_log_t, abrt_var_log_t)
 logging_log_filetrans(abrt_t, abrt_var_log_t, file)
 
-# abrt tmp files 
+# abrt tmp files
 manage_dirs_pattern(abrt_t, abrt_tmp_t, abrt_tmp_t)
 manage_files_pattern(abrt_t, abrt_tmp_t, abrt_tmp_t)
+manage_lnk_files_pattern(abrt_t, abrt_tmp_t, abrt_tmp_t)
 files_tmp_filetrans(abrt_t, abrt_tmp_t, { file dir })
+can_exec(abrt_t, abrt_tmp_t)
 
 # abrt var/cache files
 manage_files_pattern(abrt_t, abrt_var_cache_t, abrt_var_cache_t)
 manage_dirs_pattern(abrt_t, abrt_var_cache_t, abrt_var_cache_t)
+manage_lnk_files_pattern(abrt_t, abrt_var_cache_t, abrt_var_cache_t)
 files_var_filetrans(abrt_t, abrt_var_cache_t, { file dir })
+files_spool_filetrans(abrt_t, abrt_var_cache_t, dir)
 
 # abrt pid files
 manage_files_pattern(abrt_t, abrt_var_run_t, abrt_var_run_t)
 manage_dirs_pattern(abrt_t, abrt_var_run_t, abrt_var_run_t)
-files_pid_filetrans(abrt_t, abrt_var_run_t, { file dir })
+manage_sock_files_pattern(abrt_t, abrt_var_run_t, abrt_var_run_t)
+manage_lnk_files_pattern(abrt_t, abrt_var_run_t, abrt_var_run_t)
+files_pid_filetrans(abrt_t, abrt_var_run_t, { file dir sock_file })
 
 kernel_read_ring_buffer(abrt_t)
-kernel_read_system_state(abrt_t)
+kernel_request_load_module(abrt_t)
 kernel_rw_kernel_sysctl(abrt_t)
 
 corecmd_exec_bin(abrt_t)
 corecmd_exec_shell(abrt_t)
+corecmd_read_all_executables(abrt_t)
 
 corenet_all_recvfrom_netlabel(abrt_t)
 corenet_all_recvfrom_unlabeled(abrt_t)
-corenet_sendrecv_http_client_packets(abrt_t)
-corenet_tcp_bind_generic_node(abrt_t)
-corenet_tcp_connect_http_port(abrt_t)
 corenet_tcp_sendrecv_generic_if(abrt_t)
 corenet_tcp_sendrecv_generic_node(abrt_t)
 corenet_tcp_sendrecv_generic_port(abrt_t)
+corenet_tcp_bind_generic_node(abrt_t)
+corenet_tcp_connect_http_port(abrt_t)
+corenet_tcp_connect_ftp_port(abrt_t)
+corenet_tcp_connect_all_ports(abrt_t)
+corenet_sendrecv_http_client_packets(abrt_t)
 
+dev_getattr_all_chr_files(abrt_t)
+dev_getattr_all_blk_files(abrt_t)
+dev_read_rand(abrt_t)
 dev_read_urand(abrt_t)
+dev_rw_sysfs(abrt_t)
+dev_dontaudit_read_raw_memory(abrt_t)
+
+domain_getattr_all_domains(abrt_t)
+domain_read_all_domains_state(abrt_t)
+domain_signull_all_domains(abrt_t)
 
 files_getattr_all_files(abrt_t)
-files_read_etc_files(abrt_t)
+files_read_config_files(abrt_t)
+files_read_etc_runtime_files(abrt_t)
+files_read_var_symlinks(abrt_t)
+files_read_var_lib_files(abrt_t)
 files_read_usr_files(abrt_t)
+files_read_generic_tmp_files(abrt_t)
+files_read_kernel_modules(abrt_t)
+files_dontaudit_list_default(abrt_t)
+files_dontaudit_read_default_files(abrt_t)
+files_dontaudit_read_all_symlinks(abrt_t)
+files_dontaudit_getattr_all_sockets(abrt_t)
+files_list_mnt(abrt_t)
 
 fs_list_inotifyfs(abrt_t)
 fs_getattr_all_fs(abrt_t)
 fs_getattr_all_dirs(abrt_t)
+fs_read_fusefs_files(abrt_t)
+fs_read_noxattr_fs_files(abrt_t)
+fs_read_nfs_files(abrt_t)
+fs_read_nfs_symlinks(abrt_t)
+fs_search_all(abrt_t)
 
-sysnet_read_config(abrt_t)
+auth_use_nsswitch(abrt_t)
+
+sysnet_dns_name_resolve(abrt_t)
 
 logging_read_generic_logs(abrt_t)
-logging_send_syslog_msg(abrt_t)
 
 miscfiles_read_certs(abrt_t)
-miscfiles_read_localization(abrt_t)
 
-# to run bugzilla plugin
-# read ~/.abrt/Bugzilla.conf
-userdom_read_user_home_content_files(abrt_t)
+userdom_dontaudit_read_user_home_content_files(abrt_t)
+userdom_dontaudit_read_admin_home_files(abrt_t)
+
+tunable_policy(`abrt_anon_write',`
+	miscfiles_manage_public_files(abrt_t)
+')
+
+optional_policy(`
+	apache_list_modules(abrt_t)
+	apache_read_modules(abrt_t)
+')
 
 optional_policy(`
-	dbus_connect_system_bus(abrt_t)
-	dbus_system_bus_client(abrt_t)
+	dbus_system_domain(abrt_t, abrt_exec_t)
 ')
 
-# to install debuginfo packages 
 optional_policy(`
-	rpm_manage_db(abrt_t)
-	rpm_domtrans(abrt_t)
+	nsplugin_read_rw_files(abrt_t)
+	nsplugin_read_home(abrt_t)
+')
+
+optional_policy(`
+	policykit_dbus_chat(abrt_t)
+	policykit_domtrans_auth(abrt_t)
+	policykit_read_lib(abrt_t)
+	policykit_read_reload(abrt_t)
+')
+
+optional_policy(`
+	prelink_exec(abrt_t)
+	libs_exec_ld_so(abrt_t)
+	corecmd_exec_all_executables(abrt_t)
+')
+
+# to install debuginfo packages
+optional_policy(`
+	rpm_exec(abrt_t)
+	rpm_dontaudit_manage_db(abrt_t)
+	rpm_manage_cache(abrt_t)
+	rpm_manage_log(abrt_t)
+	rpm_manage_pid_files(abrt_t)
+	rpm_read_db(abrt_t)
+	rpm_signull(abrt_t)
 ')
 
 # to run mailx plugin
 optional_policy(`
 	sendmail_domtrans(abrt_t)
 ')
+
+optional_policy(`
+	sosreport_domtrans(abrt_t)
+	sosreport_read_tmp_files(abrt_t)
+	sosreport_delete_tmp_files(abrt_t)
+')
+
+optional_policy(`
+	sssd_stream_connect(abrt_t)
+')
+
+#######################################
+#
+# abrt-handle-event local policy
+#
+
+allow abrt_handle_event_t self:fifo_file rw_fifo_file_perms;
+
+tunable_policy(`abrt_handle_event',`
+	domtrans_pattern(abrt_t, abrt_handle_event_exec_t, abrt_handle_event_t)
+',`
+	can_exec(abrt_t, abrt_handle_event_exec_t)
+')
+
+optional_policy(`
+	unconfined_domain(abrt_handle_event_t)
+')
+
+########################################
+#
+# abrt-helper local policy
+#
+
+allow abrt_helper_t self:capability { chown setgid sys_nice };
+allow abrt_helper_t self:process signal;
+
+read_files_pattern(abrt_helper_t, abrt_etc_t, abrt_etc_t)
+
+files_search_spool(abrt_helper_t)
+manage_dirs_pattern(abrt_helper_t, abrt_var_cache_t, abrt_var_cache_t)
+manage_files_pattern(abrt_helper_t, abrt_var_cache_t, abrt_var_cache_t)
+manage_lnk_files_pattern(abrt_helper_t, abrt_var_cache_t, abrt_var_cache_t)
+files_var_filetrans(abrt_helper_t, abrt_var_cache_t, { file dir })
+
+read_files_pattern(abrt_helper_t, abrt_var_run_t, abrt_var_run_t)
+read_lnk_files_pattern(abrt_helper_t, abrt_var_run_t, abrt_var_run_t)
+
+corecmd_read_all_executables(abrt_helper_t)
+
+domain_read_all_domains_state(abrt_helper_t)
+
+files_dontaudit_all_non_security_leaks(abrt_helper_t)
+
+fs_list_inotifyfs(abrt_helper_t)
+fs_getattr_all_fs(abrt_helper_t)
+
+auth_use_nsswitch(abrt_helper_t)
+
+term_dontaudit_use_all_ttys(abrt_helper_t)
+term_dontaudit_use_all_ptys(abrt_helper_t)
+
+ifdef(`hide_broken_symptoms',`
+	domain_dontaudit_leaks(abrt_helper_t)
+	userdom_dontaudit_read_user_home_content_files(abrt_helper_t)
+	userdom_dontaudit_read_user_tmp_files(abrt_helper_t)
+	dev_dontaudit_read_all_blk_files(abrt_helper_t)
+	dev_dontaudit_read_all_chr_files(abrt_helper_t)
+	dev_dontaudit_write_all_chr_files(abrt_helper_t)
+	dev_dontaudit_write_all_blk_files(abrt_helper_t)
+	fs_dontaudit_rw_anon_inodefs_files(abrt_helper_t)
+
+	optional_policy(`
+		rpm_dontaudit_leaks(abrt_helper_t)
+	')
+')
+
+ifdef(`hide_broken_symptoms',`
+	gen_require(`
+		attribute domain;
+	')
+
+	allow abrt_t self:capability sys_resource;
+	allow abrt_t domain:file write;
+	allow abrt_t domain:process setrlimit;
+')
+
+#######################################
+#
+# abrt retrace coredump policy
+#
+
+allow abrt_retrace_coredump_t self:fifo_file rw_fifo_file_perms;
+
+list_dirs_pattern(abrt_retrace_coredump_t, abrt_retrace_cache_t, abrt_retrace_cache_t)
+read_files_pattern(abrt_retrace_coredump_t, abrt_retrace_cache_t, abrt_retrace_cache_t)
+read_lnk_files_pattern(abrt_retrace_coredump_t, abrt_retrace_cache_t, abrt_retrace_cache_t)
+
+list_dirs_pattern(abrt_retrace_coredump_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+read_files_pattern(abrt_retrace_coredump_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+read_lnk_files_pattern(abrt_retrace_coredump_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+
+corecmd_exec_bin(abrt_retrace_coredump_t)
+corecmd_exec_shell(abrt_retrace_coredump_t)
+
+dev_read_urand(abrt_retrace_coredump_t)
+
+files_read_usr_files(abrt_retrace_coredump_t)
+
+sysnet_dns_name_resolve(abrt_retrace_coredump_t)
+
+# to install debuginfo packages
+optional_policy(`
+	rpm_exec(abrt_retrace_coredump_t)
+	rpm_dontaudit_manage_db(abrt_retrace_coredump_t)
+	rpm_manage_cache(abrt_retrace_coredump_t)
+	rpm_manage_log(abrt_retrace_coredump_t)
+	rpm_manage_pid_files(abrt_retrace_coredump_t)
+	rpm_read_db(abrt_retrace_coredump_t)
+	rpm_signull(abrt_retrace_coredump_t)
+')
+
+#######################################
+#
+# abrt retrace worker policy
+#
+
+allow abrt_retrace_worker_t self:capability { setuid };
+
+allow abrt_retrace_worker_t self:fifo_file rw_fifo_file_perms;
+
+domtrans_pattern(abrt_retrace_worker_t, abrt_retrace_coredump_exec_t, abrt_retrace_coredump_t)
+allow abrt_retrace_worker_t abrt_retrace_coredump_exec_t:file ioctl;
+
+manage_dirs_pattern(abrt_retrace_worker_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+manage_files_pattern(abrt_retrace_worker_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+manage_lnk_files_pattern(abrt_retrace_worker_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+
+read_files_pattern(abrt_retrace_worker_t, abrt_etc_t, abrt_etc_t)
+
+can_exec(abrt_retrace_worker_t, abrt_retrace_worker_exec_t)
+
+corecmd_exec_bin(abrt_retrace_worker_t)
+corecmd_exec_shell(abrt_retrace_worker_t)
+
+dev_read_urand(abrt_retrace_worker_t)
+
+files_read_usr_files(abrt_retrace_worker_t)
+
+sysnet_dns_name_resolve(abrt_retrace_worker_t)
+
+########################################
+#
+# abrt_dump_oops local policy
+#
+
+allow abrt_dump_oops_t self:capability dac_override;
+allow abrt_dump_oops_t self:fifo_file rw_fifo_file_perms;
+allow abrt_dump_oops_t self:unix_stream_socket create_stream_socket_perms;
+
+files_search_spool(abrt_dump_oops_t)
+manage_dirs_pattern(abrt_dump_oops_t, abrt_var_cache_t, abrt_var_cache_t)
+manage_files_pattern(abrt_dump_oops_t, abrt_var_cache_t, abrt_var_cache_t)
+manage_lnk_files_pattern(abrt_dump_oops_t, abrt_var_cache_t, abrt_var_cache_t)
+files_var_filetrans(abrt_dump_oops_t, abrt_var_cache_t, { file dir })
+
+read_files_pattern(abrt_dump_oops_t, abrt_var_run_t, abrt_var_run_t)
+read_lnk_files_pattern(abrt_dump_oops_t, abrt_var_run_t, abrt_var_run_t)
+
+read_files_pattern(abrt_dump_oops_t, abrt_etc_t, abrt_etc_t)
+
+kernel_read_kernel_sysctls(abrt_dump_oops_t)
+kernel_read_ring_buffer(abrt_dump_oops_t)
+
+domain_use_interactive_fds(abrt_dump_oops_t)
+
+fs_list_inotifyfs(abrt_dump_oops_t)
+
+logging_read_generic_logs(abrt_dump_oops_t)
+
+#######################################
+#
+# Local policy for all abrt domain
+#
+
+kernel_read_system_state(abrt_domain)
+
+files_read_etc_files(abrt_domain)
+
+logging_send_syslog_msg(abrt_domain)
+
+miscfiles_read_localization(abrt_domain)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/afs.if serefpolicy-3.7.19/policy/modules/services/afs.if
--- nsaserefpolicy/policy/modules/services/afs.if	2011-03-17 07:21:21.698851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/afs.if	2011-03-17 07:21:04.217851002 +0000
@@ -97,8 +97,8 @@
 		type afs_t, afs_initrc_exec_t;
 	')
 
-	allow $1 afs_t:process { ptrace signal_perms getattr };
-	read_files_pattern($1, afs_t, afs_t)
+	allow $1 afs_t:process { ptrace signal_perms };
+	ps_process_pattern($1, afs_t)
 
 	# Allow afs_admin to restart the afs service
 	afs_initrc_domtrans($1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/afs.te serefpolicy-3.7.19/policy/modules/services/afs.te
--- nsaserefpolicy/policy/modules/services/afs.te	2011-03-17 07:21:21.920851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/afs.te	2011-03-17 07:21:04.556851001 +0000
@@ -88,9 +88,14 @@
 
 fs_getattr_xattr_fs(afs_t)
 fs_mount_nfs(afs_t)
+fs_read_nfs_symlinks(afs_t)
 
 kernel_rw_afs_state(afs_t)
 
+ifdef(`hide_broken_symptoms', `
+	kernel_rw_unlabeled_files(afs_t)
+')
+
 corenet_all_recvfrom_unlabeled(afs_t)
 corenet_all_recvfrom_netlabel(afs_t)
 corenet_tcp_sendrecv_generic_if(afs_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/aiccu.fc serefpolicy-3.7.19/policy/modules/services/aiccu.fc
--- nsaserefpolicy/policy/modules/services/aiccu.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/aiccu.fc	2011-03-17 07:21:05.036851001 +0000
@@ -0,0 +1,6 @@
+/etc/aiccu\.conf			--	gen_context(system_u:object_r:aiccu_etc_t,s0)
+/etc/rc\.d/init\.d/aiccu	--	gen_context(system_u:object_r:aiccu_initrc_exec_t,s0)
+
+/usr/sbin/aiccu			--	gen_context(system_u:object_r:aiccu_exec_t,s0)
+
+/var/run/aiccu\.pid		--	gen_context(system_u:object_r:aiccu_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/aiccu.if serefpolicy-3.7.19/policy/modules/services/aiccu.if
--- nsaserefpolicy/policy/modules/services/aiccu.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/aiccu.if	2011-03-17 07:21:04.200851002 +0000
@@ -0,0 +1,118 @@
+## <summary>Automatic IPv6 Connectivity Client Utility.</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run aiccu.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`aiccu_domtrans',`
+	gen_require(`
+		type aiccu_t, aiccu_exec_t;
+	')
+
+	domtrans_pattern($1, aiccu_exec_t, aiccu_t)
+	corecmd_search_bin($1)
+')
+
+
+########################################
+## <summary>
+##	Execute aiccu server in the aiccu domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`aiccu_initrc_domtrans',`
+	gen_require(`
+		type aiccu_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, aiccu_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Read aiccu PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`aiccu_read_pid_files',`
+	gen_require(`
+		type aiccu_var_run_t;
+	')
+
+	allow $1 aiccu_var_run_t:file read_file_perms;
+	files_search_pids($1)
+')
+
+########################################
+## <summary>
+##	Manage aiccu PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`aiccu_manage_var_run',`
+	gen_require(`
+		type aiccu_var_run_t;
+	')
+
+	manage_dirs_pattern($1, aiccu_var_run_t, aiccu_var_run_t)
+	manage_files_pattern($1, aiccu_var_run_t, aiccu_var_run_t)
+	manage_lnk_files_pattern($1, aiccu_var_run_t, aiccu_var_run_t)
+	files_search_pids($1)
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an aiccu environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`aiccu_admin',`
+	gen_require(`
+		type aiccu_t, aiccu_initrc_exec_t, aiccu_etc_t;
+		type aiccu_var_run_t;
+	')
+
+	allow $1 aiccu_t:process { ptrace signal_perms };
+	ps_process_pattern($1, aiccu_t)
+
+	aiccu_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 aiccu_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	admin_pattern($1, aiccu_etc_t)
+	files_search_etc($1)
+
+	admin_pattern($1, aiccu_var_run_t)
+	files_search_pids($1)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/aiccu.te serefpolicy-3.7.19/policy/modules/services/aiccu.te
--- nsaserefpolicy/policy/modules/services/aiccu.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/aiccu.te	2011-03-17 07:21:04.907851002 +0000
@@ -0,0 +1,72 @@
+
+policy_module(aiccu, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type aiccu_t;
+type aiccu_exec_t;
+init_daemon_domain(aiccu_t, aiccu_exec_t)
+
+type aiccu_initrc_exec_t;
+init_script_file(aiccu_initrc_exec_t)
+
+type aiccu_etc_t;
+files_config_file(aiccu_etc_t)
+
+type aiccu_var_run_t;
+files_pid_file(aiccu_var_run_t)
+
+########################################
+#
+# aiccu local policy
+#
+
+allow aiccu_t self:capability { kill net_admin net_raw };
+dontaudit aiccu_t self:capability sys_tty_config;
+allow aiccu_t self:process signal;
+allow aiccu_t self:fifo_file rw_file_perms;
+allow aiccu_t self:netlink_route_socket create_netlink_socket_perms;
+allow aiccu_t self:tcp_socket create_stream_socket_perms;
+allow aiccu_t self:tun_socket create_socket_perms;
+allow aiccu_t self:udp_socket create_stream_socket_perms;
+allow aiccu_t self:unix_stream_socket create_stream_socket_perms;
+
+allow aiccu_t aiccu_etc_t:file read_file_perms;
+
+manage_dirs_pattern(aiccu_t, aiccu_var_run_t,  aiccu_var_run_t)
+manage_files_pattern(aiccu_t, aiccu_var_run_t,  aiccu_var_run_t)
+files_pid_filetrans(aiccu_t, aiccu_var_run_t, { file dir })
+
+kernel_read_system_state(aiccu_t)
+
+corecmd_exec_shell(aiccu_t)
+
+corenet_all_recvfrom_netlabel(aiccu_t)
+corenet_all_recvfrom_unlabeled(aiccu_t)
+corenet_tcp_bind_generic_node(aiccu_t)
+corenet_tcp_sendrecv_generic_if(aiccu_t)
+corenet_tcp_sendrecv_generic_node(aiccu_t)
+corenet_tcp_sendrecv_generic_port(aiccu_t)
+corenet_sendrecv_sixxsconfig_client_packets(aiccu_t)
+corenet_tcp_sendrecv_sixxsconfig_port(aiccu_t)
+corenet_tcp_connect_sixxsconfig_port(aiccu_t)
+corenet_rw_tun_tap_dev(aiccu_t)
+
+domain_use_interactive_fds(aiccu_t)
+
+dev_read_rand(aiccu_t)
+dev_read_urand(aiccu_t)
+
+files_read_etc_files(aiccu_t)
+
+logging_send_syslog_msg(aiccu_t)
+
+miscfiles_read_localization(aiccu_t)
+
+modutils_domtrans_insmod(aiccu_t)
+
+sysnet_dns_name_resolve(aiccu_t)
+sysnet_domtrans_ifconfig(aiccu_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/aide.fc serefpolicy-3.7.19/policy/modules/services/aide.fc
--- nsaserefpolicy/policy/modules/services/aide.fc	2011-03-17 07:21:21.838851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/aide.fc	2011-04-26 12:37:43.456000004 +0000
@@ -1,6 +1,6 @@
-/usr/sbin/aide		--	gen_context(system_u:object_r:aide_exec_t,mls_systemhigh)
+/usr/sbin/aide		--	gen_context(system_u:object_r:aide_exec_t,s0)
 
-/var/lib/aide(/.*)		gen_context(system_u:object_r:aide_db_t,mls_systemhigh)
+/var/lib/aide(/.*)?		gen_context(system_u:object_r:aide_db_t,mls_systemhigh)
 
 /var/log/aide(/.*)?		gen_context(system_u:object_r:aide_log_t,mls_systemhigh)
 /var/log/aide\.log	--	gen_context(system_u:object_r:aide_log_t,mls_systemhigh)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/aide.te serefpolicy-3.7.19/policy/modules/services/aide.te
--- nsaserefpolicy/policy/modules/services/aide.te	2011-03-17 07:21:20.913851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/aide.te	2011-04-26 12:34:42.996000004 +0000
@@ -33,8 +33,17 @@
 logging_log_filetrans(aide_t, aide_log_t, file)
 
 files_read_all_files(aide_t)
+files_read_boot_symlinks(aide_t)
+files_read_all_symlinks(aide_t)
+files_getattr_all_pipes(aide_t)
+files_getattr_all_sockets(aide_t)
+
+mls_file_read_to_clearance(aide_t)
+mls_file_write_to_clearance(aide_t)
 
 logging_send_audit_msgs(aide_t)
+# AIDE can be configured to log to syslog
+logging_send_syslog_msg(aide_t)
 
 seutil_use_newrole_fds(aide_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/aisexec.fc serefpolicy-3.7.19/policy/modules/services/aisexec.fc
--- nsaserefpolicy/policy/modules/services/aisexec.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/aisexec.fc	2011-03-17 07:21:04.543851002 +0000
@@ -0,0 +1,10 @@
+
+/etc/rc\.d/init\.d/openais             --      gen_context(system_u:object_r:aisexec_initrc_exec_t,s0)
+
+/usr/sbin/aisexec                      --      gen_context(system_u:object_r:aisexec_exec_t,s0)
+
+/var/lib/openais(/.*)?                         gen_context(system_u:object_r:aisexec_var_lib_t,s0)
+
+/var/log/cluster/aisexec\.log          --      gen_context(system_u:object_r:aisexec_var_log_t,s0)
+
+/var/run/aisexec\.pid                  --      gen_context(system_u:object_r:aisexec_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/aisexec.if serefpolicy-3.7.19/policy/modules/services/aisexec.if
--- nsaserefpolicy/policy/modules/services/aisexec.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/aisexec.if	2011-03-17 07:21:03.828851001 +0000
@@ -0,0 +1,106 @@
+## <summary>SELinux policy for Aisexec Cluster Engine</summary>
+
+########################################
+## <summary>
+##      Execute a domain transition to run aisexec.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`aisexec_domtrans',`
+        gen_require(`
+                type aisexec_t, aisexec_exec_t;
+        ')
+
+        domtrans_pattern($1, aisexec_exec_t, aisexec_t)
+')
+
+#####################################
+## <summary>
+##      Connect to aisexec over a unix domain
+##      stream socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`aisexec_stream_connect',`
+        gen_require(`
+                type aisexec_t, aisexec_var_run_t;
+        ')
+
+        files_search_pids($1)
+        stream_connect_pattern($1, aisexec_var_run_t, aisexec_var_run_t, aisexec_t)
+')
+
+#######################################
+## <summary>
+##      Allow the specified domain to read aisexec's log files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`aisexec_read_log',`
+        gen_require(`
+                type aisexec_var_log_t;
+        ')
+
+        logging_search_logs($1)
+        list_dirs_pattern($1, aisexec_var_log_t, aisexec_var_log_t)
+        read_files_pattern($1, aisexec_var_log_t, aisexec_var_log_t)
+')
+
+######################################
+## <summary>
+##      All of the rules required to administrate 
+##      an aisexec environment
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+## <param name="role">
+##      <summary>
+##      The role to be allowed to manage the aisexecd domain.
+##      </summary>
+## </param>
+## <rolecap/>
+#
+interface(`aisexecd_admin',`
+        gen_require(`
+                type aisexec_t, aisexec_var_lib_t, aisexec_var_log_t;
+                type aisexec_var_run_t, aisexec_tmp_t, aisexec_tmpfs_t;
+                type aisexec_initrc_exec_t;
+        ')
+
+        allow $1 aisexec_t:process { ptrace signal_perms };
+        ps_process_pattern($1, aisexec_t)
+
+        init_labeled_script_domtrans($1, aisexec_initrc_exec_t)
+        domain_system_change_exemption($1)
+        role_transition $2 aisexec_initrc_exec_t system_r;
+        allow $2 system_r;
+
+        files_search_var_lib($1)
+        admin_pattern($1, aisexec_var_lib_t)
+
+        logging_search_logs($1)
+        admin_pattern($1, aisexec_var_log_t)
+
+        files_search_pids($1)
+        admin_pattern($1, aisexec_var_run_t)
+
+        files_search_tmp($1)
+        admin_pattern($1, aisexec_tmp_t)
+
+        admin_pattern($1, aisexec_tmpfs_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/aisexec.te serefpolicy-3.7.19/policy/modules/services/aisexec.te
--- nsaserefpolicy/policy/modules/services/aisexec.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/aisexec.te	2012-01-16 10:36:52.121903824 +0000
@@ -0,0 +1,119 @@
+
+policy_module(aisexec,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type aisexec_t;
+type aisexec_exec_t;
+init_daemon_domain(aisexec_t, aisexec_exec_t)
+
+type aisexec_initrc_exec_t;
+init_script_file(aisexec_initrc_exec_t);
+
+# tmp files
+type aisexec_tmp_t;
+files_tmp_file(aisexec_tmp_t)
+
+type aisexec_tmpfs_t;
+files_tmpfs_file(aisexec_tmpfs_t)
+
+# log files
+type aisexec_var_log_t;
+logging_log_file(aisexec_var_log_t)
+
+# var/lib files
+type aisexec_var_lib_t;
+files_type(aisexec_var_lib_t)
+
+# pid files
+type aisexec_var_run_t;
+files_pid_file(aisexec_var_run_t)
+
+########################################
+#
+# aisexec local policy
+#
+
+allow aisexec_t self:capability { sys_nice sys_resource ipc_lock ipc_owner };
+allow aisexec_t self:process { setrlimit setsched signal };
+
+allow aisexec_t self:fifo_file rw_fifo_file_perms;
+allow aisexec_t self:sem create_sem_perms;
+allow aisexec_t self:unix_stream_socket { create_stream_socket_perms connectto };
+allow aisexec_t self:unix_dgram_socket create_socket_perms;
+allow aisexec_t self:udp_socket create_socket_perms;
+
+# tmp files
+manage_dirs_pattern(aisexec_t, aisexec_tmp_t, aisexec_tmp_t)
+manage_files_pattern(aisexec_t, aisexec_tmp_t, aisexec_tmp_t)
+files_tmp_filetrans(aisexec_t, aisexec_tmp_t, { file dir })
+
+manage_dirs_pattern(aisexec_t, aisexec_tmpfs_t, aisexec_tmpfs_t)
+manage_files_pattern(aisexec_t, aisexec_tmpfs_t, aisexec_tmpfs_t)
+fs_tmpfs_filetrans(aisexec_t, aisexec_tmpfs_t,{ dir file })
+
+# var/lib files
+manage_files_pattern(aisexec_t, aisexec_var_lib_t,aisexec_var_lib_t)
+manage_dirs_pattern(aisexec_t, aisexec_var_lib_t,aisexec_var_lib_t)
+manage_sock_files_pattern(aisexec_t, aisexec_var_lib_t,aisexec_var_lib_t)
+files_var_lib_filetrans(aisexec_t,aisexec_var_lib_t, { file dir sock_file })
+
+# log files
+manage_files_pattern(aisexec_t, aisexec_var_log_t,aisexec_var_log_t)
+manage_sock_files_pattern(aisexec_t, aisexec_var_log_t,aisexec_var_log_t)
+logging_log_filetrans(aisexec_t,aisexec_var_log_t,{ sock_file file })
+
+# pid file
+manage_files_pattern(aisexec_t, aisexec_var_run_t,aisexec_var_run_t)
+manage_sock_files_pattern(aisexec_t, aisexec_var_run_t,aisexec_var_run_t)
+files_pid_filetrans(aisexec_t,aisexec_var_run_t, { file sock_file })
+
+corenet_udp_bind_netsupport_port(aisexec_t)
+corenet_tcp_bind_reserved_port(aisexec_t)
+corenet_udp_bind_cluster_port(aisexec_t)
+
+corecmd_exec_bin(aisexec_t)
+corecmd_exec_shell(aisexec_t)
+
+kernel_read_system_state(aisexec_t)
+
+files_manage_mounttab(aisexec_t)
+
+auth_use_nsswitch(aisexec_t)
+
+dev_read_urand(aisexec_t)
+
+libs_use_ld_so(aisexec_t)
+libs_use_shared_libs(aisexec_t)
+miscfiles_read_localization(aisexec_t)
+
+init_rw_script_tmp_files(aisexec_t)
+
+logging_send_syslog_msg(aisexec_t)
+
+optional_policy(`
+	ccs_stream_connect(aisexec_t)
+')
+
+optional_policy(`
+	corosync_domtrans(aisexec_t)
+')
+
+optional_policy(`
+        # to communication with RHCS
+        rhcs_rw_dlm_controld_semaphores(aisexec_t)
+
+        rhcs_rw_fenced_semaphores(aisexec_t)
+
+        rhcs_rw_gfs_controld_semaphores(aisexec_t)
+        rhcs_rw_gfs_controld_shm(aisexec_t)
+
+        rhcs_rw_groupd_semaphores(aisexec_t)
+        rhcs_rw_groupd_shm(aisexec_t)
+')
+
+userdom_rw_semaphores(aisexec_t)
+userdom_rw_unpriv_user_shared_mem(aisexec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/amavis.fc serefpolicy-3.7.19/policy/modules/services/amavis.fc
--- nsaserefpolicy/policy/modules/services/amavis.fc	2011-03-17 07:21:20.879851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/amavis.fc	2012-07-26 07:22:06.933863165 +0000
@@ -2,6 +2,7 @@
 /etc/amavis\.conf		--	gen_context(system_u:object_r:amavis_etc_t,s0)
 /etc/amavisd(/.*)?			gen_context(system_u:object_r:amavis_etc_t,s0)
 /etc/rc\.d/init\.d/amavis	--	gen_context(system_u:object_r:amavis_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/amavisd-snmp   --  gen_context(system_u:object_r:amavis_initrc_exec_t,s0)
 
 /usr/sbin/amavisd.*		--	gen_context(system_u:object_r:amavis_exec_t,s0)
 /usr/lib(64)?/AntiVir/antivir	--	gen_context(system_u:object_r:amavis_exec_t,s0)
@@ -16,3 +17,4 @@
 /var/run/amavis(d)?(/.*)?		gen_context(system_u:object_r:amavis_var_run_t,s0)
 /var/spool/amavisd(/.*)?		gen_context(system_u:object_r:amavis_spool_t,s0)
 /var/virusmails(/.*)?			gen_context(system_u:object_r:amavis_quarantine_t,s0)
+#/var/opt/f-secure(/.*)?                        gen_context(system_u:object_r:amavis_var_lib_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/amavis.if serefpolicy-3.7.19/policy/modules/services/amavis.if
--- nsaserefpolicy/policy/modules/services/amavis.if	2011-03-17 07:21:21.994851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/amavis.if	2012-07-11 13:37:29.725202878 +0000
@@ -56,7 +56,7 @@
 	')
 
 	files_search_spool($1)
-	allow $1 amavis_spool_t:file read_file_perms;
+	read_files_pattern($1, amavis_spool_t, amavis_spool_t)
 ')
 
 ########################################
@@ -202,6 +202,7 @@
 		type amavis_var_run_t;
 	')
 
+	allow $1 amavis_var_run_t:dir rw_dir_perms;
 	allow $1 amavis_var_run_t:file create_file_perms;
 	files_search_pids($1)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/amavis.te serefpolicy-3.7.19/policy/modules/services/amavis.te
--- nsaserefpolicy/policy/modules/services/amavis.te	2011-03-17 07:21:21.966851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/amavis.te	2012-07-26 07:22:01.363994213 +0000
@@ -6,6 +6,13 @@
 # Declarations
 #
 
+## <desc>
+##  <p>
+##  Allow amavis to use JIT compiler
+##  </p>
+## </desc>
+gen_tunable(amavis_use_jit, false)
+
 type amavis_t;
 type amavis_exec_t;
 domain_type(amavis_t)
@@ -48,9 +55,9 @@
 
 allow amavis_t self:capability { kill chown dac_override setgid setuid };
 dontaudit amavis_t self:capability sys_tty_config;
-allow amavis_t self:process { signal sigchld signull };
+allow amavis_t self:process { signal sigchld sigkill signull };
 allow amavis_t self:fifo_file rw_fifo_file_perms;
-allow amavis_t self:unix_stream_socket create_stream_socket_perms;
+allow amavis_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow amavis_t self:unix_dgram_socket create_socket_perms;
 allow amavis_t self:tcp_socket { listen accept };
 allow amavis_t self:netlink_route_socket r_netlink_socket_perms;
@@ -77,8 +84,9 @@
 
 # tmp files
 manage_files_pattern(amavis_t, amavis_tmp_t, amavis_tmp_t)
-allow amavis_t amavis_tmp_t:dir setattr;
-files_tmp_filetrans(amavis_t, amavis_tmp_t, file)
+manage_dirs_pattern(amavis_t, amavis_tmp_t, amavis_tmp_t)
+manage_sock_files_pattern(amavis_t, amavis_tmp_t, amavis_tmp_t)
+files_tmp_filetrans(amavis_t, amavis_tmp_t, { file dir sock_file } )
 
 # var/lib files for amavis
 manage_dirs_pattern(amavis_t, amavis_var_lib_t, amavis_var_lib_t)
@@ -124,11 +132,13 @@
 corenet_udp_bind_generic_port(amavis_t)
 corenet_dontaudit_udp_bind_all_ports(amavis_t)
 corenet_tcp_connect_razor_port(amavis_t)
+corenet_tcp_connect_agentx_port(amavis_t)
 
 dev_read_rand(amavis_t)
 dev_read_urand(amavis_t)
 
 domain_use_interactive_fds(amavis_t)
+domain_dontaudit_read_all_domains_state(amavis_t)
 
 files_read_etc_files(amavis_t)
 files_read_etc_runtime_files(amavis_t)
@@ -139,6 +149,7 @@
 auth_dontaudit_read_shadow(amavis_t)
 
 # uses uptime which reads utmp - redhat bug 561383
+init_read_state(amavis_t)
 init_read_utmp(amavis_t)
 init_stream_connect_script(amavis_t)
 
@@ -159,9 +170,16 @@
 
 mta_read_config(amavis_t)
 
+tunable_policy(`amavis_use_jit',`
+    allow amavis_t self:process execmem;
+',`
+    dontaudit amavis_t self:process execmem;
+')
+
 optional_policy(`
 	clamav_stream_connect(amavis_t)
 	clamav_domtrans_clamscan(amavis_t)
+	clamav_read_state_clamd(amavis_t)
 ')
 
 optional_policy(`
@@ -170,7 +188,12 @@
 ')
 
 optional_policy(`
+	nslcd_stream_connect(amavis_t)
+')
+
+optional_policy(`
 	postfix_read_config(amavis_t)
+	postfix_list_spool(amavis_t)
 ')
 
 optional_policy(`
@@ -183,6 +206,10 @@
 ')
 
 optional_policy(`
+	snmp_manage_var_lib_files(amavis_t)
+')
+
+optional_policy(`
 	spamassassin_exec(amavis_t)
 	spamassassin_exec_client(amavis_t)
 	spamassassin_read_lib_files(amavis_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/apache.fc serefpolicy-3.7.19/policy/modules/services/apache.fc
--- nsaserefpolicy/policy/modules/services/apache.fc	2011-03-17 07:21:21.741851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/apache.fc	2012-05-24 16:12:37.038936383 +0000
@@ -2,13 +2,16 @@
 
 /etc/apache(2)?(/.*)?			gen_context(system_u:object_r:httpd_config_t,s0)
 /etc/apache-ssl(2)?(/.*)?		gen_context(system_u:object_r:httpd_config_t,s0)
-/etc/drupal(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/etc/cherokee(/.*)?         gen_context(system_u:object_r:httpd_config_t,s0)
+/etc/drupal.* 				gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/etc/dokuwiki(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /etc/htdig(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /etc/httpd(/.*)?			gen_context(system_u:object_r:httpd_config_t,s0)
 /etc/httpd/conf/keytab		--	gen_context(system_u:object_r:httpd_keytab_t,s0)
 /etc/httpd/logs				gen_context(system_u:object_r:httpd_log_t,s0)
 /etc/httpd/modules			gen_context(system_u:object_r:httpd_modules_t,s0)
 /etc/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_config_t,s0)
+/etc/init\.d/cherokee   --  gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
 /etc/mock/koji(/.*)? 			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /etc/rc\.d/init\.d/httpd	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/lighttpd	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
@@ -24,16 +27,17 @@
 
 /usr/lib/apache-ssl/.+		--	gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/lib/cgi-bin(/.*)?			gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
-/usr/lib/dirsrv/cgi-bin(/.*)?		gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
 /usr/lib(64)?/apache(/.*)?		gen_context(system_u:object_r:httpd_modules_t,s0)
 /usr/lib(64)?/apache2/modules(/.*)?	gen_context(system_u:object_r:httpd_modules_t,s0)
 /usr/lib(64)?/apache(2)?/suexec(2)? --	gen_context(system_u:object_r:httpd_suexec_exec_t,s0)
 /usr/lib(64)?/cgi-bin/(nph-)?cgiwrap(d)? -- gen_context(system_u:object_r:httpd_suexec_exec_t,s0)
+/usr/lib(64)?/cherokee(/.*)?     gen_context(system_u:object_r:httpd_modules_t,s0)
 /usr/lib(64)?/httpd(/.*)?		gen_context(system_u:object_r:httpd_modules_t,s0)
 /usr/lib(64)?/lighttpd(/.*)?		gen_context(system_u:object_r:httpd_modules_t,s0)
 
 /usr/sbin/apache(2)?		--	gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/sbin/apache-ssl(2)?	--	gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/sbin/cherokee      --  gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/sbin/httpd(\.worker)?	--	gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/sbin/lighttpd		--	gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/sbin/rotatelogs		--	gen_context(system_u:object_r:httpd_rotatelogs_exec_t,s0)
@@ -43,8 +47,7 @@
 /usr/sbin/httpd2-.*		--	gen_context(system_u:object_r:httpd_exec_t,s0)
 ')
 
-/usr/share/dirsrv(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/drupal(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/drupal.* 			gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /usr/share/htdig(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /usr/share/icecast(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /usr/share/mythweb(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
@@ -54,9 +57,12 @@
 /usr/share/ntop/html(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /usr/share/openca/htdocs(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /usr/share/selinux-policy[^/]*/html(/.*)? gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/wordpress/.*\.php        --      gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
 /usr/share/wordpress-mu/wp-config\.php	-- gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
 /usr/share/wordpress-mu/wp-content(/.*)? gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 /usr/share/wordpress/wp-content/uploads(/.*)? gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/usr/share/wordpress/wp-content/upgrade(/.*)? gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/usr/share/wordpress/wp-includes/.*\.php	--	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
 
 /var/cache/httpd(/.*)?			gen_context(system_u:object_r:httpd_cache_t,s0)
 /var/cache/lighttpd(/.*)?		gen_context(system_u:object_r:httpd_cache_t,s0)
@@ -73,8 +79,11 @@
 /var/cache/ssl.*\.sem		--	gen_context(system_u:object_r:httpd_cache_t,s0)
 
 /var/lib/cacti/rra(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/var/lib/cherokee(/.*)?         gen_context(system_u:object_r:httpd_var_lib_t,s0)
 /var/lib/dav(/.*)?			gen_context(system_u:object_r:httpd_var_lib_t,s0)
-/var/lib/drupal(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/lib/dokuwiki(/.*)?         gen_context(system_u:object_r:httpd_sys_content_rw_t,s0)
+/var/lib/drupal.*  				gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/lib/graphite-web(/.*)		gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /var/lib/htdig(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /var/lib/httpd(/.*)?			gen_context(system_u:object_r:httpd_var_lib_t,s0)
 /var/lib/php/session(/.*)?		gen_context(system_u:object_r:httpd_var_run_t,s0)
@@ -84,9 +93,9 @@
 /var/log/apache-ssl(2)?(/.*)?		gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/cacti(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/cgiwrap\.log.*		--	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/cherokee(/.*)?     gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/httpd(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
 /var/log/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
-/var/log/piranha(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
 
 ifdef(`distro_debian', `
 /var/log/horde2(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
@@ -104,8 +113,29 @@
 /var/spool/viewvc(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t, s0)
 
 /var/www(/.*)?				gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/var/www(/.*)?/logs(/.*)?		gen_context(system_u:object_r:httpd_log_t,s0)
 /var/www/[^/]*/cgi-bin(/.*)?		gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
 /var/www/cgi-bin(/.*)?			gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
 /var/www/icons(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
 /var/www/perl(/.*)?			gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+
+/var/www/html/[^/]*/cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+
+/var/www/html/[^/]*/sites/default/settings\.php		--	gen_context(system_u:object_r:httpd_sys_rw_content_t, s0)
+/var/www/html/[^/]*/sites/default/files(/.*)?  			gen_context(system_u:object_r:httpd_sys_rw_content_t, s0)
+
+/var/www/html/configuration\.php 	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+
+/var/www/gallery/albums(/.*)?		gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/www/moodledata(/.*)?              gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+
+/var/lib/koji(/.*)? 			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/lib/rt3/data/RT-Shredder(/.*)?	gen_context(system_u:object_r:httpd_var_lib_t,s0)
+
+/var/lib/svn(/.*)?		gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/lib/trac(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
+
+
+/var/www/svn(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/www/svn/hooks(/.*)?		gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/var/www/svn/conf(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/apache.if serefpolicy-3.7.19/policy/modules/services/apache.if
--- nsaserefpolicy/policy/modules/services/apache.if	2011-03-17 07:21:21.391851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/apache.if	2012-03-29 08:05:02.095644006 +0000
@@ -13,17 +13,13 @@
 #
 template(`apache_content_template',`
 	gen_require(`
-		attribute httpdcontent;
 		attribute httpd_exec_scripts;
 		attribute httpd_script_exec_type;
 		type httpd_t, httpd_suexec_t, httpd_log_t;
+		type httpd_sys_content_t;
 	')
-	# allow write access to public file transfer
-	# services files.
-	gen_tunable(allow_httpd_$1_script_anon_write, false)
-
 	#This type is for webpages
-	type httpd_$1_content_t, httpdcontent; # customizable
+	type httpd_$1_content_t; # customizable;
 	typealias httpd_$1_content_t alias httpd_$1_script_ro_t;
 	files_type(httpd_$1_content_t)
 
@@ -36,16 +32,18 @@
 	domain_type(httpd_$1_script_t)
 	role system_r types httpd_$1_script_t;
 
+	search_dirs_pattern(httpd_$1_script_t, httpd_sys_content_t, httpd_script_exec_type)
+
 	# This type is used for executable scripts files
 	type httpd_$1_script_exec_t, httpd_script_exec_type; # customizable;
 	corecmd_shell_entry_type(httpd_$1_script_t)
 	domain_entry_file(httpd_$1_script_t, httpd_$1_script_exec_t)
 
-	type httpd_$1_rw_content_t, httpdcontent; # customizable
+	type httpd_$1_rw_content_t; # customizable
 	typealias httpd_$1_rw_content_t alias { httpd_$1_script_rw_t httpd_$1_content_rw_t };
 	files_type(httpd_$1_rw_content_t)
 
-	type httpd_$1_ra_content_t, httpdcontent; # customizable
+	type httpd_$1_ra_content_t; # customizable
 	typealias httpd_$1_ra_content_t alias { httpd_$1_script_ra_t httpd_$1_content_ra_t };
 	files_type(httpd_$1_ra_content_t)
 
@@ -54,7 +52,7 @@
 	domtrans_pattern(httpd_suexec_t, httpd_$1_script_exec_t, httpd_$1_script_t)
 
 	allow httpd_t { httpd_$1_content_t httpd_$1_rw_content_t httpd_$1_script_exec_t }:dir search_dir_perms;
-	allow httpd_suexec_t { httpd_$1_content_t httpd_$1_content_t httpd_$1_rw_content_t httpd_$1_script_exec_t }:dir search_dir_perms;
+	allow httpd_suexec_t { httpd_$1_content_t httpd_$1_rw_content_t httpd_$1_script_exec_t }:dir search_dir_perms;
 
 	allow httpd_$1_script_t self:fifo_file rw_file_perms;
 	allow httpd_$1_script_t self:unix_stream_socket connectto;
@@ -86,7 +84,6 @@
 	manage_lnk_files_pattern(httpd_$1_script_t, httpd_$1_rw_content_t, httpd_$1_rw_content_t)
 	manage_fifo_files_pattern(httpd_$1_script_t, httpd_$1_rw_content_t, httpd_$1_rw_content_t)
 	manage_sock_files_pattern(httpd_$1_script_t, httpd_$1_rw_content_t, httpd_$1_rw_content_t)
-	files_tmp_filetrans(httpd_$1_script_t, httpd_$1_rw_content_t, { dir file lnk_file sock_file fifo_file })
 
 	kernel_dontaudit_search_sysctl(httpd_$1_script_t)
 	kernel_dontaudit_search_kernel_sysctl(httpd_$1_script_t)
@@ -95,6 +92,7 @@
 	dev_read_urand(httpd_$1_script_t)
 
 	corecmd_exec_all_executables(httpd_$1_script_t)
+	application_exec_all(httpd_$1_script_t)
 
 	files_exec_etc_files(httpd_$1_script_t)
 	files_read_etc_files(httpd_$1_script_t)
@@ -108,18 +106,7 @@
 
 	seutil_dontaudit_search_config(httpd_$1_script_t)
 
-	tunable_policy(`httpd_enable_cgi && httpd_unified',`
-		allow httpd_$1_script_t httpdcontent:file entrypoint;
-
-		manage_dirs_pattern(httpd_$1_script_t, httpdcontent, httpdcontent)
-		manage_files_pattern(httpd_$1_script_t, httpdcontent, httpdcontent)
-		manage_lnk_files_pattern(httpd_$1_script_t, httpdcontent, httpdcontent)
-		can_exec(httpd_$1_script_t, httpdcontent)
-	')
-
-	tunable_policy(`allow_httpd_$1_script_anon_write',`
-		miscfiles_manage_public_files(httpd_$1_script_t)
-	')
+	apache_dontaudit_leaks(httpd_$1_script_t)
 
 	# Allow the web server to run scripts and serve pages
 	tunable_policy(`httpd_builtin_scripting',`
@@ -140,6 +127,7 @@
 		allow httpd_t httpd_$1_content_t:dir list_dir_perms;
 		read_files_pattern(httpd_t, httpd_$1_content_t, httpd_$1_content_t)
 		read_lnk_files_pattern(httpd_t, httpd_$1_content_t, httpd_$1_content_t)
+		allow httpd_t httpd_$1_script_t:unix_stream_socket connectto;
 	')
 
 	tunable_policy(`httpd_enable_cgi',`
@@ -148,14 +136,20 @@
 		# privileged users run the script:
 		domtrans_pattern(httpd_exec_scripts, httpd_$1_script_exec_t, httpd_$1_script_t)
 
+		allow httpd_exec_scripts httpd_$1_script_exec_t:file read_file_perms;
+
 		# apache runs the script:
 		domtrans_pattern(httpd_t, httpd_$1_script_exec_t, httpd_$1_script_t)
 
+		allow httpd_t httpd_$1_script_exec_t:file read_file_perms;
+		allow httpd_t httpd_$1_script_exec_t:lnk_file read_lnk_file_perms;
+
 		allow httpd_t httpd_$1_script_t:process { signal sigkill sigstop };
 		allow httpd_t httpd_$1_script_exec_t:dir list_dir_perms;
 
 		allow httpd_$1_script_t self:process { setsched signal_perms };
 		allow httpd_$1_script_t self:unix_stream_socket create_stream_socket_perms;
+		allow httpd_$1_script_t self:unix_dgram_socket create_socket_perms;
 
 		allow httpd_$1_script_t httpd_t:fd use;
 		allow httpd_$1_script_t httpd_t:process sigchld;
@@ -172,6 +166,7 @@
 		libs_read_lib_files(httpd_$1_script_t)
 
 		miscfiles_read_localization(httpd_$1_script_t)
+		allow httpd_$1_script_t httpd_sys_content_t:dir search_dir_perms;
 	')
 
 	optional_policy(`
@@ -182,15 +177,13 @@
 
 	optional_policy(`
 		postgresql_unpriv_client(httpd_$1_script_t)
-
-		tunable_policy(`httpd_enable_cgi && httpd_can_network_connect_db',`
-			postgresql_tcp_connect(httpd_$1_script_t)
-		')
 	')
 
 	optional_policy(`
 		nscd_socket_use(httpd_$1_script_t)
 	')
+
+	dontaudit httpd_$1_script_t httpd_t:tcp_socket { read write };
 ')
 
 ########################################
@@ -229,6 +222,13 @@
 	relabel_files_pattern($2, httpd_user_ra_content_t, httpd_user_ra_content_t)
 	relabel_lnk_files_pattern($2, httpd_user_ra_content_t, httpd_user_ra_content_t)
 
+	manage_dirs_pattern($2, httpd_user_content_t, httpd_user_content_t)
+	manage_files_pattern($2, httpd_user_content_t, httpd_user_content_t)
+	manage_lnk_files_pattern($2, httpd_user_content_t, httpd_user_content_t)
+	relabel_dirs_pattern($2, httpd_user_content_t, httpd_user_content_t)
+	relabel_files_pattern($2, httpd_user_content_t, httpd_user_content_t)
+	relabel_lnk_files_pattern($2, httpd_user_content_t, httpd_user_content_t)
+
 	manage_dirs_pattern($2, httpd_user_rw_content_t, httpd_user_rw_content_t)
 	manage_files_pattern($2, httpd_user_rw_content_t, httpd_user_rw_content_t)
 	manage_lnk_files_pattern($2, httpd_user_rw_content_t, httpd_user_rw_content_t)
@@ -312,6 +312,25 @@
 	domtrans_pattern($1, httpd_exec_t, httpd_t)
 ')
 
+######################################
+## <summary>
+##  Allow the specified domain to execute apache
+##  in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`apache_exec',`
+    gen_require(`
+        type httpd_exec_t;
+    ')
+
+    can_exec($1, httpd_exec_t)
+')
+
 #######################################
 ## <summary>
 ##	Send a generic signal to apache.
@@ -400,7 +419,7 @@
 		type httpd_t;
 	')
 
-	dontaudit $1 httpd_t:fifo_file rw_fifo_file_perms;
+	dontaudit $1 httpd_t:fifo_file rw_inherited_fifo_file_perms;
 ')
 
 ########################################
@@ -526,6 +545,25 @@
 ########################################
 ## <summary>
 ##	Allow the specified domain to delete
+##	Apache cache dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`apache_delete_cache_dirs',`
+	gen_require(`
+		type httpd_cache_t;
+	')
+
+	delete_dirs_pattern($1, httpd_cache_t, httpd_cache_t)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to delete
 ##	Apache cache.
 ## </summary>
 ## <param name="domain">
@@ -542,6 +580,26 @@
 	delete_files_pattern($1, httpd_cache_t, httpd_cache_t)
 ')
 
+#######################################
+## <summary>
+## Allow the specified domain to search
+## apache configuration dirs.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`apache_search_config',`
+	gen_require(`
+		type httpd_config_t;
+	')
+
+	files_search_etc($1)
+	allow $1 httpd_config_t:dir search_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Allow the specified domain to read
@@ -756,6 +814,28 @@
 	')
 
 	allow $1 httpd_modules_t:dir list_dir_perms;
+	read_lnk_files_pattern($1, httpd_modules_t, httpd_modules_t)
+')
+
+#######################################
+## <summary>
+##  Allow the specified domain to read
+##  the apache modules files.
+##  directory.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`apache_read_modules',`
+    gen_require(`
+        type httpd_modules_t;
+    ')
+	
+    allow $1 httpd_modules_t:dir list_dir_perms;
+	read_files_pattern($1,httpd_modules_t, httpd_modules_t)
 ')
 
 ########################################
@@ -797,6 +877,43 @@
 	domtrans_pattern($1, httpd_rotatelogs_exec_t, httpd_rotatelogs_t)
 ')
 
+######################################
+## <summary>
+##  Execute httpd_rotatelogs in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`apache_exec_rotatelogs',`
+    gen_require(`
+        type httpd_rotatelogs_exec_t;
+    ')
+
+    can_exec($1, httpd_rotatelogs_exec_t)
+')
+
+######################################
+## <summary>
+##  Execute httpd system scripts in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`apache_exec_sys_script',`
+    gen_require(`
+        type httpd_sys_script_exec_t;
+    ')
+
+    allow $1 httpd_sys_script_exec_t:dir search_dir_perms;
+    can_exec($1, httpd_sys_script_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Allow the specified domain to list
@@ -814,6 +931,7 @@
 	')
 
 	list_dirs_pattern($1, httpd_sys_content_t, httpd_sys_content_t)
+	read_lnk_files_pattern($1, httpd_sys_content_t, httpd_sys_content_t)
 	files_search_var($1)
 ')
 
@@ -836,11 +954,62 @@
 	')
 
 	files_search_var($1)
+	apache_search_sys_content($1)
 	manage_dirs_pattern($1, httpd_sys_content_t, httpd_sys_content_t)
 	manage_files_pattern($1, httpd_sys_content_t, httpd_sys_content_t)
 	manage_lnk_files_pattern($1, httpd_sys_content_t, httpd_sys_content_t)
 ')
 
+######################################
+## <summary>
+##  Allow the specified domain to manage
+##  apache system content rw files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`apache_manage_sys_content_rw',`
+    gen_require(`
+		type httpd_sys_rw_content_t;
+	')
+
+	files_search_var($1)
+	apache_search_sys_content($1)
+    manage_dirs_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+    manage_files_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+    manage_lnk_files_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to delete
+##	apache system content rw files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`apache_delete_sys_content_rw',`
+	gen_require(`
+		type httpd_sys_rw_content_t;
+	')
+
+	files_search_tmp($1)
+	apache_search_sys_content($1)
+	delete_dirs_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+	delete_files_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+	delete_lnk_files_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+	delete_fifo_files_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+	delete_sock_files_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute all web scripts in the system
@@ -858,6 +1027,12 @@
 	gen_require(`
 		attribute httpdcontent;
 		type httpd_sys_script_t;
+		type httpd_sys_content_t;
+		type httpd_sys_script_exec_t;
+	')
+
+	tunable_policy(`httpd_enable_cgi',`
+		domtrans_pattern($1, httpd_sys_script_exec_t, httpd_sys_script_t)
 	')
 
 	tunable_policy(`httpd_enable_cgi && httpd_unified',`
@@ -945,7 +1120,7 @@
 		type httpd_squirrelmail_t;
 	')
 
-	allow $1 httpd_squirrelmail_t:file read_file_perms;
+	read_files_pattern($1, httpd_squirrelmail_t, httpd_squirrelmail_t)
 ')
 
 ########################################
@@ -985,6 +1160,24 @@
 	allow $1 httpd_sys_content_t:dir search_dir_perms;
 ')
 
+#######################################
+## <summary>
+##  Getattr apache system content.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`apache_getattr_sys_content',`
+    gen_require(`
+        type httpd_sys_content_t;
+    ')
+
+    getattr_files_pattern($1, httpd_sys_content_t, httpd_sys_content_t)
+')
+
 ########################################
 ## <summary>
 ##	Read apache system content.
@@ -1086,6 +1279,25 @@
 	read_files_pattern($1, httpd_tmp_t, httpd_tmp_t)
 ')
 
+######################################
+## <summary>
+##  Dontaudit attempts to read and write
+##  apache tmp files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`apache_dontaudit_rw_tmp_files',`
+    gen_require(`
+        type httpd_tmp_t;
+    ')
+
+    dontaudit $1 httpd_tmp_t:file { read write };
+')
+
 ########################################
 ## <summary>
 ##	Dontaudit attempts to write
@@ -1102,7 +1314,7 @@
 		type httpd_tmp_t;
 	')
 
-	dontaudit $1 httpd_tmp_t:file write_file_perms;
+	dontaudit $1 httpd_tmp_t:file write;
 ')
 
 ########################################
@@ -1145,12 +1357,6 @@
 ## <summary>
 ##	All of the rules required to administrate an apache environment
 ## </summary>
-## <param name="prefix">
-##	<summary>
-##	Prefix of the domain. Example, user would be
-##	the prefix for the uder_t domain.
-##	</summary>
-## </param>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
@@ -1172,7 +1378,7 @@
 		type httpd_modules_t, httpd_lock_t;
 		type httpd_var_run_t, httpd_php_tmp_t;
 		type httpd_suexec_tmp_t, httpd_tmp_t;
-		type httpd_initrc_exec_t;
+		type httpd_initrc_exec_t, httpd_bool_t;
 	')
 
 	allow $1 httpd_t:process { getattr ptrace signal_perms };
@@ -1202,12 +1408,81 @@
 
 	kernel_search_proc($1)
 	allow $1 httpd_t:dir list_dir_perms;
-
+	ps_process_pattern($1, httpd_t)
 	read_lnk_files_pattern($1, httpd_t, httpd_t)
 
 	admin_pattern($1, httpdcontent)
 	admin_pattern($1, httpd_script_exec_type)
+
+	seutil_domtrans_setfiles($1)
+
 	admin_pattern($1, httpd_tmp_t)
 	admin_pattern($1, httpd_php_tmp_t)
 	admin_pattern($1, httpd_suexec_tmp_t)
+#	files_tmp_filetrans($1, httpd_tmp_t, { file dir })
+
+ifdef(`TODO',`
+	#apache_set_booleans($1, $2, $3, httpd_bool_t )
+	#seutil_setsebool_role_template($1, $3, $2)
+	allow httpd_setsebool_t httpd_bool_t:dir list_dir_perms;
+	allow httpd_setsebool_t httpd_bool_t:file rw_file_perms;
+')
+')
+
+########################################
+## <summary>
+##	dontaudit read and write an leaked file descriptors
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`apache_dontaudit_leaks',`
+	gen_require(`
+		type httpd_t, httpd_tmp_t;
+	')
+
+	dontaudit $1 httpd_t:fifo_file rw_inherited_fifo_file_perms;
+ 	dontaudit $1 httpd_t:tcp_socket { read write };
+	dontaudit $1 httpd_t:unix_dgram_socket { read write };
+	dontaudit $1 httpd_t:unix_stream_socket { read write };
+	dontaudit $1 httpd_tmp_t:file { read write };
+')
+
+#######################################
+## <summary>
+##  Allow getattr of suexec
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`apache_getattr_suexec',`
+    gen_require(`
+        type httpd_suexec_exec_t;
+    ')
+
+	allow $1 httpd_suexec_exec_t:file getattr;
+')
+
+#######################################
+## <summary>
+##  Read and write of httpd unix stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`apache_rw_stream_sockets',`
+    gen_require(`
+        type httpd_t;
+    ')
+
+    allow $1 httpd_t:unix_stream_socket rw_socket_perms;
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/apache.te serefpolicy-3.7.19/policy/modules/services/apache.te
--- nsaserefpolicy/policy/modules/services/apache.te	2011-03-17 07:21:21.408851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/apache.te	2012-05-14 22:44:48.563777462 +0000
@@ -19,11 +19,13 @@
 # Declarations
 #
 
+selinux_genbool(httpd_bool_t)
+
 ## <desc>
 ## <p>
 ## Allow Apache to modify public files
 ## used for public file transfer services. Directories/Files must
-## be labeled public_content_rw_t.
+## be labeled public_rw_content_t.
 ## </p>
 ## </desc>
 gen_tunable(allow_httpd_anon_write, false)
@@ -37,6 +39,20 @@
 
 ## <desc>
 ## <p>
+## Allow httpd scripts and modules execmem/execstack
+## </p>
+## </desc>
+gen_tunable(httpd_execmem, false)
+
+## <desc>
+##     <p>
+##     Allow httpd processes to manage IPA content
+##     </p>
+## </desc>
+gen_tunable(httpd_manage_ipa, false)
+
+## <desc>
+## <p>
 ## Allow httpd to use built in scripting (usually php)
 ## </p>
 ## </desc>
@@ -51,6 +67,13 @@
 
 ## <desc>
 ## <p>
+## Allow HTTPD scripts and modules to connect to cobbler over the network.
+## </p>
+## </desc>
+gen_tunable(httpd_can_network_connect_cobbler, false)
+
+## <desc>
+## <p>
 ## Allow HTTPD scripts and modules to connect to databases over the network.
 ## </p>
 ## </desc>
@@ -58,6 +81,13 @@
 
 ## <desc>
 ## <p>
+## Allow httpd to connect to memcache server
+## </p>
+## </desc>
+gen_tunable(httpd_can_network_memcache, false)
+
+## <desc>
+## <p>
 ## Allow httpd to act as a relay
 ## </p>
 ## </desc>
@@ -72,6 +102,13 @@
 
 ## <desc>
 ## <p>
+## Allow http daemon to check spam
+## </p>
+## </desc>
+gen_tunable(httpd_can_check_spam, false)
+
+## <desc>
+## <p>
 ## Allow Apache to communicate with avahi service via dbus
 ## </p>
 ## </desc>
@@ -101,6 +138,20 @@
 
 ## <desc>
 ## <p>
+## Allow httpd to read user content 
+## </p>
+## </desc>
+gen_tunable(httpd_read_user_content, false)
+
+## <desc>
+## <p>
+## Allow httpd daemon to change system limits
+## </p>
+## </desc>
+gen_tunable(httpd_setrlimit, false)
+
+## <desc>
+## <p>
 ## Allow HTTPD to run SSI executables in the same domain as system CGI scripts.
 ## </p>
 ## </desc>
@@ -108,6 +159,13 @@
 
 ## <desc>
 ## <p>
+## Allow Apache to execute tmp content.
+## </p>
+## </desc>
+gen_tunable(httpd_tmp_exec, false)
+
+## <desc>
+## <p>
 ## Unify HTTPD to communicate with the terminal.
 ## Needed for entering the passphrase for certificates at
 ## the terminal.
@@ -123,6 +181,13 @@
 gen_tunable(httpd_unified, false)
 
 ## <desc>
+##  <p>
+##  Allow httpd to access openstack ports
+##  </p>
+## </desc>
+gen_tunable(httpd_use_openstack, false)
+
+## <desc>
 ## <p>
 ## Allow httpd to access cifs file systems
 ## </p>
@@ -131,7 +196,7 @@
 
 ## <desc>
 ## <p>
-## Allow httpd to run gpg
+## Allow httpd to run gpg in gpg-web domain
 ## </p>
 ## </desc>
 gen_tunable(httpd_use_gpg, false)
@@ -143,6 +208,13 @@
 ## </desc>
 gen_tunable(httpd_use_nfs, false)
 
+## <desc>
+## <p>
+## Allow apache scripts to write to public content.  Directories/Files must be labeled public_rw_content_t.
+## </p>
+## </desc>
+gen_tunable(allow_httpd_sys_script_anon_write, false)
+
 attribute httpdcontent;
 attribute httpd_user_content_type;
 
@@ -218,6 +290,10 @@
 # setup the system domain for system CGI scripts
 apache_content_template(sys)
 
+typeattribute httpd_sys_content_t httpdcontent; # customizable
+typeattribute httpd_sys_rw_content_t httpdcontent; # customizable
+typeattribute httpd_sys_ra_content_t httpdcontent; # customizable
+
 type httpd_tmp_t;
 files_tmp_file(httpd_tmp_t)
 
@@ -226,6 +302,10 @@
 
 apache_content_template(user)
 ubac_constrained(httpd_user_script_t)
+typeattribute httpd_user_content_t httpdcontent;
+typeattribute httpd_user_rw_content_t httpdcontent;
+typeattribute httpd_user_ra_content_t httpdcontent;
+
 userdom_user_home_content(httpd_user_content_t)
 userdom_user_home_content(httpd_user_htaccess_t)
 userdom_user_home_content(httpd_user_script_exec_t)
@@ -233,6 +313,7 @@
 userdom_user_home_content(httpd_user_rw_content_t)
 typeattribute httpd_user_script_t httpd_script_domains;
 typealias httpd_user_content_t alias { httpd_staff_content_t httpd_sysadm_content_t };
+typealias httpd_user_content_t alias httpd_unconfined_content_t;
 typealias httpd_user_content_t alias { httpd_auditadm_content_t httpd_secadm_content_t };
 typealias httpd_user_content_t alias { httpd_staff_script_ro_t httpd_sysadm_script_ro_t };
 typealias httpd_user_content_t alias { httpd_auditadm_script_ro_t httpd_secadm_script_ro_t };
@@ -286,6 +367,7 @@
 manage_dirs_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
 manage_files_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
 manage_lnk_files_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
+files_var_filetrans(httpd_t, httpd_cache_t, { file dir })
 
 # Allow the httpd_t to read the web servers config files
 allow httpd_t httpd_config_t:dir list_dir_perms;
@@ -330,7 +412,8 @@
 manage_dirs_pattern(httpd_t, httpd_tmp_t, httpd_tmp_t)
 manage_files_pattern(httpd_t, httpd_tmp_t, httpd_tmp_t)
 manage_lnk_files_pattern(httpd_t, httpd_tmp_t, httpd_tmp_t)
-files_tmp_filetrans(httpd_t, httpd_tmp_t, { file dir lnk_file })
+manage_sock_files_pattern(httpd_t, httpd_tmp_t, httpd_tmp_t)
+files_tmp_filetrans(httpd_t, httpd_tmp_t, { file dir lnk_file sock_file })
 
 manage_dirs_pattern(httpd_t, httpd_tmpfs_t, httpd_tmpfs_t)
 manage_files_pattern(httpd_t, httpd_tmpfs_t, httpd_tmpfs_t)
@@ -355,6 +438,7 @@
 kernel_read_kernel_sysctls(httpd_t)
 # for modules that want to access /proc/meminfo
 kernel_read_system_state(httpd_t)
+kernel_search_network_sysctl(httpd_t)
 
 corenet_all_recvfrom_unlabeled(httpd_t)
 corenet_all_recvfrom_netlabel(httpd_t)
@@ -365,11 +449,17 @@
 corenet_tcp_sendrecv_all_ports(httpd_t)
 corenet_udp_sendrecv_all_ports(httpd_t)
 corenet_tcp_bind_generic_node(httpd_t)
+corenet_udp_bind_generic_node(httpd_t)
 corenet_tcp_bind_http_port(httpd_t)
+corenet_udp_bind_http_port(httpd_t)
 corenet_tcp_bind_http_cache_port(httpd_t)
+corenet_tcp_bind_jboss_management_port(httpd_t)
+corenet_tcp_bind_jboss_messaging_port(httpd_t)
+corenet_tcp_bind_ntop_port(httpd_t)
 corenet_sendrecv_http_server_packets(httpd_t)
 # Signal self for shutdown
 corenet_tcp_connect_http_port(httpd_t)
+corenet_tcp_bind_puppet_port(httpd_t)
 
 dev_read_sysfs(httpd_t)
 dev_read_rand(httpd_t)
@@ -378,12 +468,12 @@
 
 fs_getattr_all_fs(httpd_t)
 fs_search_auto_mountpoints(httpd_t)
+fs_read_iso9660_files(httpd_t)
+fs_read_anon_inodefs_files(httpd_t)
 
 auth_use_nsswitch(httpd_t)
 
-# execute perl
-corecmd_exec_bin(httpd_t)
-corecmd_exec_shell(httpd_t)
+application_exec_all(httpd_t)
 
 domain_use_interactive_fds(httpd_t)
 
@@ -400,8 +490,16 @@
 files_read_etc_files(httpd_t)
 # for tomcat
 files_read_var_lib_symlinks(httpd_t)
+files_read_var_symlinks(httpd_t)
 
 fs_search_auto_mountpoints(httpd_sys_script_t)
+# php uploads a file to /tmp and then execs programs to acton them
+manage_dirs_pattern(httpd_sys_script_t, httpd_tmp_t, httpd_tmp_t)
+manage_files_pattern(httpd_sys_script_t, httpd_tmp_t, httpd_tmp_t)
+manage_sock_files_pattern(httpd_sys_script_t, httpd_tmp_t, httpd_tmp_t)
+manage_lnk_files_pattern(httpd_sys_script_t, httpd_tmp_t, httpd_tmp_t)
+manage_fifo_files_pattern(httpd_sys_script_t, httpd_tmp_t, httpd_tmp_t)
+files_tmp_filetrans(httpd_sys_script_t, httpd_sys_rw_content_t, { dir file lnk_file sock_file fifo_file })
 
 libs_read_lib_files(httpd_t)
 
@@ -420,12 +518,23 @@
 	miscfiles_manage_public_files(httpd_t)
 ')
 
-ifdef(`TODO', `
 #
 # We need optionals to be able to be within booleans to make this work
 #
 tunable_policy(`allow_httpd_mod_auth_pam',`
-	auth_domtrans_chk_passwd(httpd_t)
+	auth_domtrans_chkpwd(httpd_t)
+	logging_send_audit_msgs(httpd_t)
+')
+
+## <desc>
+## <p>
+## Allow Apache to use mod_auth_ntlm_winbind
+## </p>
+## </desc>
+gen_tunable(allow_httpd_mod_auth_ntlm_winbind, false)
+optional_policy(`
+tunable_policy(`allow_httpd_mod_auth_ntlm_winbind',`
+		samba_domtrans_winbind_helper(httpd_t)
 ')
 ')
 
@@ -433,12 +542,17 @@
 	corenet_tcp_connect_all_ports(httpd_t)
 ')
 
+tunable_policy(`httpd_can_network_memcache',`
+        corenet_tcp_connect_memcache_port(httpd_t)
+')
+
 tunable_policy(`httpd_can_network_relay',`
 	# allow httpd to work as a relay
 	corenet_tcp_connect_gopher_port(httpd_t)
 	corenet_tcp_connect_ftp_port(httpd_t)
 	corenet_tcp_connect_http_port(httpd_t)
 	corenet_tcp_connect_http_cache_port(httpd_t)
+	corenet_tcp_connect_squid_port(httpd_t)
 	corenet_tcp_connect_memcache_port(httpd_t)
 	corenet_sendrecv_gopher_client_packets(httpd_t)
 	corenet_sendrecv_ftp_client_packets(httpd_t)
@@ -446,6 +560,16 @@
 	corenet_sendrecv_http_cache_client_packets(httpd_t)
 ')
 
+tunable_policy(`httpd_enable_cgi && httpd_unified',`
+	allow httpd_sys_script_t httpd_sys_content_t:file entrypoint;
+	filetrans_pattern(httpd_sys_script_t, httpd_sys_content_t, httpd_sys_rw_content_t, { file dir lnk_file })
+	can_exec(httpd_sys_script_t, httpd_sys_content_t)
+')
+
+tunable_policy(`allow_httpd_sys_script_anon_write',`
+	miscfiles_manage_public_files(httpd_sys_script_t)
+') 
+
 tunable_policy(`httpd_enable_cgi && httpd_use_nfs',`
 	fs_nfs_domtrans(httpd_t, httpd_sys_script_t)
 ')
@@ -456,12 +580,22 @@
 
 tunable_policy(`httpd_enable_cgi && httpd_unified && httpd_builtin_scripting',`
 	domtrans_pattern(httpd_t, httpdcontent, httpd_sys_script_t)
+	filetrans_pattern(httpd_t, httpd_sys_content_t, httpd_sys_rw_content_t, { file dir lnk_file })
+	manage_dirs_pattern(httpd_t, httpdcontent, httpd_sys_rw_content_t)
+	manage_files_pattern(httpd_t, httpdcontent, httpd_sys_rw_content_t)
+	manage_lnk_files_pattern(httpd_t, httpdcontent, httpd_sys_rw_content_t)
 
 	manage_dirs_pattern(httpd_t, httpdcontent, httpdcontent)
 	manage_files_pattern(httpd_t, httpdcontent, httpdcontent)
 	manage_lnk_files_pattern(httpd_t, httpdcontent, httpdcontent)
 ')
 
+tunable_policy(`httpd_use_openstack',`
+    #corenet_tcp_connect_keystone_port(httpd_sys_script_t)
+	corenet_tcp_connect_commplex_port(httpd_sys_script_t)
+    corenet_tcp_connect_glance_port(httpd_sys_script_t)
+')
+
 tunable_policy(`httpd_enable_ftp_server',`
 	corenet_tcp_bind_ftp_port(httpd_t)
 ')
@@ -470,11 +604,27 @@
 	userdom_read_user_home_content_files(httpd_t)
 ')
 
+tunable_policy(`httpd_tmp_exec && httpd_builtin_scripting',`
+        can_exec(httpd_t, httpd_tmp_t)
+')
+
+tunable_policy(`httpd_tmp_exec && httpd_enable_cgi',`
+        can_exec(httpd_sys_script_t, httpd_tmp_t)
+')
+
 tunable_policy(`httpd_enable_homedirs && use_nfs_home_dirs',`
+	fs_list_auto_mountpoints(httpd_t)
 	fs_read_nfs_files(httpd_t)
 	fs_read_nfs_symlinks(httpd_t)
 ')
 
+tunable_policy(`httpd_use_nfs',`
+	fs_list_auto_mountpoints(httpd_t)
+	fs_manage_nfs_dirs(httpd_t)
+	fs_manage_nfs_files(httpd_t)
+	fs_manage_nfs_symlinks(httpd_t)
+')
+
 tunable_policy(`httpd_enable_homedirs && use_samba_home_dirs',`
 	fs_read_cifs_files(httpd_t)
 	fs_read_cifs_symlinks(httpd_t)
@@ -484,9 +634,23 @@
 	# allow httpd to connect to mail servers
 	corenet_tcp_connect_smtp_port(httpd_t)
 	corenet_sendrecv_smtp_client_packets(httpd_t)
+	corenet_tcp_connect_pop_port(httpd_t)
+	corenet_sendrecv_pop_client_packets(httpd_t)
 	mta_send_mail(httpd_t)
+	mta_signal(httpd_t)
+')
+
+tunable_policy(`httpd_use_cifs',`
+	fs_manage_cifs_dirs(httpd_t)
+	fs_manage_cifs_files(httpd_t)
+	fs_manage_cifs_symlinks(httpd_t)
 ')
 
+tunable_policy(`httpd_setrlimit',`
+	allow httpd_t self:process setrlimit;
+	allow httpd_t self:capability sys_resource;
+')    
+
 tunable_policy(`httpd_ssi_exec',`
 	corecmd_shell_domtrans(httpd_t, httpd_sys_script_t)
 	allow httpd_sys_script_t httpd_t:fd use;
@@ -500,8 +664,13 @@
 # are dontaudited here.
 tunable_policy(`httpd_tty_comm',`
 	userdom_use_user_terminals(httpd_t)
+	userdom_use_user_terminals(httpd_suexec_t)
+	userdom_use_user_terminals(httpd_user_script_t)
+
 ',`
 	userdom_dontaudit_use_user_terminals(httpd_t)
+	userdom_dontaudit_use_user_terminals(httpd_suexec_t)
+	userdom_dontaudit_use_user_terminals(httpd_user_script_t)
 ')
 
 optional_policy(`
@@ -514,6 +683,12 @@
 
 optional_policy(`
 	cobbler_search_lib(httpd_t)
+	cobbler_list_config(httpd_t)
+	cobbler_read_config(httpd_t)
+	cobbler_read_lib_files(httpd_t)
+	tunable_policy(`httpd_can_network_connect_cobbler',`
+		corenet_tcp_connect_cobbler_port(httpd_t)
+	')
 ')
 
 optional_policy(`
@@ -528,7 +703,19 @@
 	daemontools_service_domain(httpd_t, httpd_exec_t)
 ')
 
- optional_policy(`
+optional_policy(`
+    dirsrv_manage_config(httpd_t)
+    dirsrv_manage_log(httpd_t)
+    dirsrv_manage_var_run(httpd_t)
+    dirsrv_read_share(httpd_t)
+    dirsrv_signal(httpd_t)
+    dirsrv_signull(httpd_t)
+    dirsrvadmin_manage_config(httpd_t)
+    dirsrvadmin_manage_tmp(httpd_t)
+	dirsrvadmin_domtrans_unconfined_script_t(httpd_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(httpd_t)
 
 	tunable_policy(`httpd_dbus_avahi',`
@@ -537,8 +724,13 @@
 ')
 
 optional_policy(`
+	git_read_generic_system_content_files(httpd_t)
+	gitosis_read_lib_files(httpd_t)
+')
+
+optional_policy(`
 	tunable_policy(`httpd_enable_cgi && httpd_use_gpg',`
-		gpg_domtrans(httpd_t)
+		gpg_domtrans_web(httpd_t)
 	')
 ')
 
@@ -556,7 +748,21 @@
 ')
 
 optional_policy(`
+	mediawiki_read_tmp_files(httpd_t)
+	mediawiki_delete_tmp_files(httpd_t)
+')
+
+optional_policy(`
+	memcached_stream_connect(httpd_t)
+
+	tunable_policy(`httpd_manage_ipa',`
+		memcached_manage_pid_files(httpd_t)
+		')
+')
+
+optional_policy(`
 	# Allow httpd to work with mysql
+	mysql_read_config(httpd_t)
 	mysql_stream_connect(httpd_t)
 	mysql_rw_db_sockets(httpd_t)
 
@@ -567,6 +773,7 @@
 
 optional_policy(`
 	nagios_read_config(httpd_t)
+	nagios_read_log(httpd_t)
 ')
 
 optional_policy(`
@@ -577,12 +784,33 @@
 ')
 
 optional_policy(`
+    passenger_domtrans(httpd_t)
+    passenger_manage_pid_content(httpd_t)
+    passenger_read_lib_files(httpd_t)
+')
+
+optional_policy(`
+    puppet_read_lib(httpd_t)
+')
+
+optional_policy(`
+	rpc_search_nfs_state_data(httpd_t)
+')
+
+tunable_policy(`httpd_execmem',`
+	allow httpd_t self:process { execmem execstack };
+	allow httpd_sys_script_t self:process { execmem execstack };
+	allow httpd_suexec_t self:process { execmem execstack };
+') 
+
+optional_policy(`
 	# Allow httpd to work with postgresql
 	postgresql_stream_connect(httpd_t)
 	postgresql_unpriv_client(httpd_t)
 
 	tunable_policy(`httpd_can_network_connect_db',`
 		postgresql_tcp_connect(httpd_t)
+		postgresql_tcp_connect(httpd_sys_script_t)
 	')
 ')
 
@@ -591,6 +819,11 @@
 ')
 
 optional_policy(`
+	smokeping_read_lib_files(httpd_t)
+')
+
+optional_policy(`
+	files_dontaudit_rw_usr_dirs(httpd_t)
 	snmp_dontaudit_read_snmp_var_lib_files(httpd_t)
 	snmp_dontaudit_write_snmp_var_lib_files(httpd_t)
 ')
@@ -603,6 +836,12 @@
 	yam_read_content(httpd_t)
 ')
 
+optional_policy(`
+    zarafa_manage_lib_files(httpd_t)
+    zarafa_stream_connect_server(httpd_t)
+    zarafa_search_config(httpd_t)
+')
+
 ########################################
 #
 # Apache helper local policy
@@ -618,6 +857,10 @@
 
 userdom_use_user_terminals(httpd_helper_t)
 
+tunable_policy(`httpd_tty_comm',`
+	userdom_use_user_terminals(httpd_helper_t)
+')
+
 ########################################
 #
 # Apache PHP script local policy
@@ -667,6 +910,17 @@
 	corenet_sendrecv_mssql_client_packets(httpd_sys_script_t)
 	corenet_tcp_connect_mssql_port(httpd_suexec_t)
 	corenet_sendrecv_mssql_client_packets(httpd_suexec_t)
+
+
+    corenet_tcp_connect_oracle_port(httpd_t)
+    corenet_sendrecv_oracle_client_packets(httpd_t)
+	corenet_tcp_connect_oracle_port(httpd_php_t)
+	corenet_tcp_connect_oracle_port(httpd_suexec_t)
+    corenet_sendrecv_oracle_client_packets(httpd_suexec_t)
+    corenet_sendrecv_oracle_client_packets(httpd_php_t)
+	corenet_tcp_connect_oracle_port(httpd_sys_script_t)
+    corenet_sendrecv_oracle_client_packets(httpd_sys_script_t)
+
 ')
 
 optional_policy(`
@@ -699,17 +953,18 @@
 manage_files_pattern(httpd_suexec_t, httpd_suexec_tmp_t, httpd_suexec_tmp_t)
 files_tmp_filetrans(httpd_suexec_t, httpd_suexec_tmp_t, { file dir })
 
+can_exec(httpd_suexec_t, httpd_sys_script_exec_t)
+
 kernel_read_kernel_sysctls(httpd_suexec_t)
 kernel_list_proc(httpd_suexec_t)
 kernel_read_proc_symlinks(httpd_suexec_t)
 
 dev_read_urand(httpd_suexec_t)
 
+fs_read_iso9660_files(httpd_suexec_t)
 fs_search_auto_mountpoints(httpd_suexec_t)
 
-# for shell scripts
-corecmd_exec_bin(httpd_suexec_t)
-corecmd_exec_shell(httpd_suexec_t)
+application_exec_all(httpd_suexec_t)
 
 files_read_etc_files(httpd_suexec_t)
 files_read_usr_files(httpd_suexec_t)
@@ -740,13 +995,25 @@
 	corenet_sendrecv_all_client_packets(httpd_suexec_t)
 ')
 
+read_files_pattern(httpd_suexec_t, httpd_user_content_t, httpd_user_content_t)
+read_files_pattern(httpd_suexec_t, httpd_user_rw_content_t, httpd_user_rw_content_t)
+read_files_pattern(httpd_suexec_t, httpd_user_ra_content_t, httpd_user_ra_content_t)
+
+domain_entry_file(httpd_sys_script_t, httpd_sys_content_t)
 tunable_policy(`httpd_enable_cgi && httpd_unified',`
 	allow httpd_sys_script_t httpdcontent:file entrypoint;
 	domtrans_pattern(httpd_suexec_t, httpdcontent, httpd_sys_script_t)
-
+	manage_dirs_pattern(httpd_sys_script_t, httpdcontent, httpdcontent)
+	manage_files_pattern(httpd_sys_script_t, httpdcontent, httpdcontent)
+	manage_sock_files_pattern(httpd_sys_script_t, httpdcontent, httpdcontent)
+	manage_lnk_files_pattern(httpd_sys_script_t, httpdcontent, httpdcontent)
+')
+tunable_policy(`httpd_enable_cgi',`
+	domtrans_pattern(httpd_suexec_t, httpd_user_script_t, httpd_user_script_t)
 ')
 
 tunable_policy(`httpd_enable_homedirs && use_nfs_home_dirs',`
+	fs_list_auto_mountpoints(httpd_suexec_t)
 	fs_read_nfs_files(httpd_suexec_t)
 	fs_read_nfs_symlinks(httpd_suexec_t)
 	fs_exec_nfs_files(httpd_suexec_t)
@@ -769,6 +1036,12 @@
 	dontaudit httpd_suexec_t httpd_t:unix_stream_socket { read write };
 ')
 
+optional_policy(`
+	mysql_stream_connect(httpd_suexec_t)
+	mysql_rw_db_sockets(httpd_suexec_t)
+	mysql_read_config(httpd_suexec_t)
+')
+
 ########################################
 #
 # Apache system script local policy
@@ -791,10 +1064,15 @@
 
 files_search_var_lib(httpd_sys_script_t)
 files_search_spool(httpd_sys_script_t)
+files_read_var_symlinks(httpd_sys_script_t)
+
+logging_inherit_append_all_logs(httpd_sys_script_t)
 
 # Should we add a boolean?
 apache_domtrans_rotatelogs(httpd_sys_script_t)
 
+auth_use_nsswitch(httpd_sys_script_t)
+
 ifdef(`distro_redhat',`
 	allow httpd_sys_script_t httpd_log_t:file append_file_perms;
 ')
@@ -803,6 +1081,30 @@
 	mta_send_mail(httpd_sys_script_t)
 ')
 
+optional_policy(`
+	tunable_policy(`httpd_can_sendmail && httpd_can_check_spam',`
+		spamassassin_domtrans_client(httpd_t)
+	')
+')
+
+fs_cifs_entry_type(httpd_sys_script_t)
+fs_read_iso9660_files(httpd_sys_script_t)
+fs_nfs_entry_type(httpd_sys_script_t)
+
+tunable_policy(`httpd_use_nfs',`
+	fs_list_auto_mountpoints(httpd_sys_script_t)
+	fs_manage_nfs_dirs(httpd_sys_script_t)
+	fs_manage_nfs_files(httpd_sys_script_t)
+	fs_manage_nfs_symlinks(httpd_sys_script_t)
+	fs_exec_nfs_files(httpd_sys_script_t)
+
+	fs_list_auto_mountpoints(httpd_suexec_t)
+	fs_manage_nfs_dirs(httpd_suexec_t)
+	fs_manage_nfs_files(httpd_suexec_t)
+	fs_manage_nfs_symlinks(httpd_suexec_t)
+	fs_exec_nfs_files(httpd_suexec_t)
+')
+
 tunable_policy(`httpd_enable_cgi && httpd_can_network_connect',`
 	allow httpd_sys_script_t self:tcp_socket create_stream_socket_perms;
 	allow httpd_sys_script_t self:udp_socket create_socket_perms;
@@ -826,10 +1128,21 @@
 ')
 
 tunable_policy(`httpd_enable_homedirs && use_nfs_home_dirs',`
+	fs_list_auto_mountpoints(httpd_sys_script_t)
 	fs_read_nfs_files(httpd_sys_script_t)
 	fs_read_nfs_symlinks(httpd_sys_script_t)
 ')
 
+tunable_policy(`httpd_use_cifs',`
+	fs_manage_cifs_dirs(httpd_sys_script_t)
+	fs_manage_cifs_files(httpd_sys_script_t)
+	fs_manage_cifs_symlinks(httpd_sys_script_t)
+	fs_manage_cifs_dirs(httpd_suexec_t)
+	fs_manage_cifs_files(httpd_suexec_t)
+	fs_manage_cifs_symlinks(httpd_suexec_t)
+	fs_exec_cifs_files(httpd_suexec_t)
+')
+
 tunable_policy(`httpd_enable_homedirs && use_samba_home_dirs',`
 	fs_read_cifs_files(httpd_sys_script_t)
 	fs_read_cifs_symlinks(httpd_sys_script_t)
@@ -842,6 +1155,7 @@
 optional_policy(`
 	mysql_stream_connect(httpd_sys_script_t)
 	mysql_rw_db_sockets(httpd_sys_script_t)
+	mysql_read_config(httpd_sys_script_t)
 ')
 
 optional_policy(`
@@ -891,11 +1205,33 @@
 
 tunable_policy(`httpd_enable_cgi && httpd_unified',`
 	allow httpd_user_script_t httpdcontent:file entrypoint;
+	manage_dirs_pattern(httpd_user_script_t, httpd_user_content_t, httpd_user_content_t)
+	manage_files_pattern(httpd_user_script_t, httpd_user_content_t, httpd_user_content_t)
+	manage_dirs_pattern(httpd_user_script_t, httpd_user_ra_content_t, httpd_user_ra_content_t)
+	manage_files_pattern(httpd_user_script_t, httpd_user_ra_content_t, httpd_user_ra_content_t)
 ')
 
 # allow accessing files/dirs below the users home dir
 tunable_policy(`httpd_enable_homedirs',`
-	userdom_search_user_home_dirs(httpd_t)
-	userdom_search_user_home_dirs(httpd_suexec_t)
-	userdom_search_user_home_dirs(httpd_user_script_t)
+	userdom_search_user_home_content(httpd_t)
+	userdom_search_user_home_content(httpd_suexec_t)
+	userdom_search_user_home_content(httpd_user_script_t)
+')
+
+tunable_policy(`httpd_read_user_content',`
+	userdom_read_user_home_content_files(httpd_user_script_t)
+	userdom_read_user_home_content_files(httpd_suexec_t)
+')
+
+tunable_policy(`httpd_read_user_content && httpd_builtin_scripting',`
+	userdom_read_user_home_content_files(httpd_t)
 ')
+
+# Removal of fastcgi, will cause problems without the following
+typealias httpd_sys_script_exec_t alias httpd_fastcgi_script_exec_t;
+typealias httpd_sys_content_t alias { httpd_fastcgi_content_t httpd_fastcgi_script_ro_t };
+typealias httpd_sys_rw_content_t alias { httpd_fastcgi_rw_content_t httpd_fastcgi_script_rw_t };
+typealias httpd_sys_ra_content_t   alias httpd_fastcgi_script_ra_t;
+typealias httpd_sys_script_t      alias httpd_fastcgi_script_t;
+typealias httpd_var_run_t         alias httpd_fastcgi_var_run_t;
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/apcupsd.fc serefpolicy-3.7.19/policy/modules/services/apcupsd.fc
--- nsaserefpolicy/policy/modules/services/apcupsd.fc	2011-03-17 07:21:21.580851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/apcupsd.fc	2011-03-17 07:21:04.076851001 +0000
@@ -13,3 +13,4 @@
 /var/www/apcupsd/upsfstats\.cgi	--	gen_context(system_u:object_r:httpd_apcupsd_cgi_script_exec_t,s0)
 /var/www/apcupsd/upsimage\.cgi	--	gen_context(system_u:object_r:httpd_apcupsd_cgi_script_exec_t,s0)
 /var/www/apcupsd/upsstats\.cgi	--	gen_context(system_u:object_r:httpd_apcupsd_cgi_script_exec_t,s0)
+/var/www/cgi-bin/apcgui(/.*)?   gen_context(system_u:object_r:httpd_apcupsd_cgi_script_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/apcupsd.te serefpolicy-3.7.19/policy/modules/services/apcupsd.te
--- nsaserefpolicy/policy/modules/services/apcupsd.te	2011-03-17 07:21:20.910851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/apcupsd.te	2011-03-17 07:21:03.300851002 +0000
@@ -95,6 +95,10 @@
 ')
 
 optional_policy(`
+	shutdown_domtrans(apcupsd_t)
+')
+
+optional_policy(`
 	mta_send_mail(apcupsd_t)
 	mta_system_content(apcupsd_tmp_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/apm.te serefpolicy-3.7.19/policy/modules/services/apm.te
--- nsaserefpolicy/policy/modules/services/apm.te	2011-03-17 07:21:22.031851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/apm.te	2011-03-17 07:21:04.763851002 +0000
@@ -63,6 +63,7 @@
 dontaudit apmd_t self:capability { setuid dac_override dac_read_search sys_ptrace sys_tty_config };
 allow apmd_t self:process { signal_perms getsession };
 allow apmd_t self:fifo_file rw_fifo_file_perms;
+allow apmd_t self:netlink_socket create_socket_perms;
 allow apmd_t self:unix_dgram_socket create_socket_perms;
 allow apmd_t self:unix_stream_socket create_stream_socket_perms;
 
@@ -82,6 +83,7 @@
 kernel_read_system_state(apmd_t)
 kernel_write_proc_files(apmd_t)
 
+dev_read_input(apmd_t)
 dev_read_realtime_clock(apmd_t)
 dev_read_urand(apmd_t)
 dev_rw_apm_bios(apmd_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/arpwatch.if serefpolicy-3.7.19/policy/modules/services/arpwatch.if
--- nsaserefpolicy/policy/modules/services/arpwatch.if	2011-03-17 07:21:21.923851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/arpwatch.if	2011-03-17 07:21:04.561851002 +0000
@@ -137,7 +137,7 @@
 		type arpwatch_initrc_exec_t;
 	')
 
-	allow $1 arpwatch_t:process { ptrace signal_perms getattr };
+	allow $1 arpwatch_t:process { ptrace signal_perms };
 	ps_process_pattern($1, arpwatch_t)
 
 	arpwatch_initrc_domtrans($1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/arpwatch.te serefpolicy-3.7.19/policy/modules/services/arpwatch.te
--- nsaserefpolicy/policy/modules/services/arpwatch.te	2011-03-17 07:21:21.266851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/arpwatch.te	2011-03-17 07:21:03.790851003 +0000
@@ -34,6 +34,7 @@
 allow arpwatch_t self:tcp_socket { connect create_stream_socket_perms };
 allow arpwatch_t self:udp_socket create_socket_perms;
 allow arpwatch_t self:packet_socket create_socket_perms;
+allow arpwatch_t self:socket create_socket_perms;
 
 manage_dirs_pattern(arpwatch_t, arpwatch_data_t, arpwatch_data_t)
 manage_files_pattern(arpwatch_t, arpwatch_data_t, arpwatch_data_t)
@@ -46,9 +47,11 @@
 manage_files_pattern(arpwatch_t, arpwatch_var_run_t, arpwatch_var_run_t)
 files_pid_filetrans(arpwatch_t, arpwatch_var_run_t, file)
 
+kernel_read_network_state(arpwatch_t)
 kernel_read_kernel_sysctls(arpwatch_t)
 kernel_list_proc(arpwatch_t)
 kernel_read_proc_symlinks(arpwatch_t)
+kernel_request_load_module(arpwatch_t)
 
 corenet_all_recvfrom_unlabeled(arpwatch_t)
 corenet_all_recvfrom_netlabel(arpwatch_t)
@@ -62,6 +65,8 @@
 corenet_udp_sendrecv_all_ports(arpwatch_t)
 
 dev_read_sysfs(arpwatch_t)
+dev_read_usbmon_dev(arpwatch_t)
+dev_rw_generic_usb_dev(arpwatch_t)
 
 fs_getattr_all_fs(arpwatch_t)
 fs_search_auto_mountpoints(arpwatch_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/asterisk.if serefpolicy-3.7.19/policy/modules/services/asterisk.if
--- nsaserefpolicy/policy/modules/services/asterisk.if	2011-03-17 07:21:21.185851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/asterisk.if	2011-03-17 07:21:03.695851003 +0000
@@ -1,5 +1,24 @@
 ## <summary>Asterisk IP telephony server</summary>
 
+######################################
+## <summary>
+##	Execute asterisk in the asterisk domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`asterisk_domtrans',`
+	gen_require(`
+		type asterisk_t, asterisk_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, asterisk_exec_t, asterisk_t)
+')
+
 #####################################
 ## <summary>
 ##	Connect to asterisk over a unix domain
@@ -45,7 +64,7 @@
 		type asterisk_initrc_exec_t;
 	')
 
-	allow $1 asterisk_t:process { ptrace signal_perms getattr };
+	allow $1 asterisk_t:process { ptrace signal_perms };
 	ps_process_pattern($1, asterisk_t)
 
 	init_labeled_script_domtrans($1, asterisk_initrc_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/asterisk.te serefpolicy-3.7.19/policy/modules/services/asterisk.te
--- nsaserefpolicy/policy/modules/services/asterisk.te	2011-03-17 07:21:21.165851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/asterisk.te	2011-04-18 09:06:13.242000003 +0000
@@ -40,12 +40,13 @@
 #
 
 # dac_override for /var/run/asterisk
-allow asterisk_t self:capability { dac_override setgid setuid sys_nice };
+allow asterisk_t self:capability { dac_override chown setgid setuid sys_nice net_admin };
 dontaudit asterisk_t self:capability sys_tty_config;
-allow asterisk_t self:process { setsched signal_perms };
+allow asterisk_t self:process { getsched setsched signal_perms getcap setcap };
 allow asterisk_t self:fifo_file rw_fifo_file_perms;
 allow asterisk_t self:sem create_sem_perms;
 allow asterisk_t self:shm create_shm_perms;
+allow asterisk_t self:unix_stream_socket connectto;
 allow asterisk_t self:tcp_socket create_stream_socket_perms;
 allow asterisk_t self:udp_socket create_socket_perms;
 
@@ -54,6 +55,8 @@
 read_lnk_files_pattern(asterisk_t, asterisk_etc_t, asterisk_etc_t)
 files_search_etc(asterisk_t)
 
+can_exec(asterisk_t, asterisk_exec_t)
+
 manage_files_pattern(asterisk_t, asterisk_log_t, asterisk_log_t)
 logging_log_filetrans(asterisk_t, asterisk_log_t, { file dir })
 
@@ -74,16 +77,18 @@
 manage_files_pattern(asterisk_t, asterisk_var_lib_t, asterisk_var_lib_t)
 files_var_lib_filetrans(asterisk_t, asterisk_var_lib_t, file)
 
+manage_dirs_pattern(asterisk_t, asterisk_var_run_t, asterisk_var_run_t)
 manage_files_pattern(asterisk_t, asterisk_var_run_t, asterisk_var_run_t)
 manage_fifo_files_pattern(asterisk_t, asterisk_var_run_t, asterisk_var_run_t)
 manage_sock_files_pattern(asterisk_t, asterisk_var_run_t, asterisk_var_run_t)
-files_pid_filetrans(asterisk_t, asterisk_var_run_t, file)
+files_pid_filetrans(asterisk_t, asterisk_var_run_t, { dir file })
 
 kernel_read_system_state(asterisk_t)
 kernel_read_kernel_sysctls(asterisk_t)
+kernel_request_load_module(asterisk_t)
 
 corecmd_exec_bin(asterisk_t)
-corecmd_search_bin(asterisk_t)
+corecmd_exec_shell(asterisk_t)
 
 corenet_all_recvfrom_unlabeled(asterisk_t)
 corenet_all_recvfrom_netlabel(asterisk_t)
@@ -96,6 +101,7 @@
 corenet_tcp_bind_generic_node(asterisk_t)
 corenet_udp_bind_generic_node(asterisk_t)
 corenet_tcp_bind_asterisk_port(asterisk_t)
+corenet_tcp_bind_sip_port(asterisk_t)
 corenet_udp_bind_asterisk_port(asterisk_t)
 corenet_udp_bind_sip_port(asterisk_t)
 corenet_sendrecv_asterisk_server_packets(asterisk_t)
@@ -104,10 +110,17 @@
 corenet_udp_bind_generic_port(asterisk_t)
 corenet_dontaudit_udp_bind_all_ports(asterisk_t)
 corenet_sendrecv_generic_server_packets(asterisk_t)
+corenet_tcp_connect_festival_port(asterisk_t)
+corenet_tcp_connect_pktcable_port(asterisk_t)
+corenet_tcp_connect_postgresql_port(asterisk_t)
+corenet_tcp_connect_snmp_port(asterisk_t)
+corenet_tcp_connect_sip_port(asterisk_t)
 
+dev_rw_generic_usb_dev(asterisk_t)
 dev_read_sysfs(asterisk_t)
 dev_read_sound(asterisk_t)
 dev_write_sound(asterisk_t)
+dev_read_urand(asterisk_t)
 
 domain_use_interactive_fds(asterisk_t)
 
@@ -116,21 +129,40 @@
 # demo files installed in /usr/share/asterisk/sounds/demo-instruct.gsm
 # are labeled usr_t
 files_read_usr_files(asterisk_t)
+files_dontaudit_search_home(asterisk_t)
 
 fs_getattr_all_fs(asterisk_t)
+fs_list_inotifyfs(asterisk_t)
+fs_read_anon_inodefs_files(asterisk_t)
 fs_search_auto_mountpoints(asterisk_t)
 
+auth_use_nsswitch(asterisk_t)
+
 logging_send_syslog_msg(asterisk_t)
 
 miscfiles_read_localization(asterisk_t)
 
-sysnet_read_config(asterisk_t)
-
 userdom_dontaudit_use_unpriv_user_fds(asterisk_t)
 userdom_dontaudit_search_user_home_dirs(asterisk_t)
 
 optional_policy(`
-	nis_use_ypbind(asterisk_t)
+	alsa_read_rw_config(asterisk_t)
+')
+
+optional_policy(`
+	mysql_stream_connect(asterisk_t)
+')
+
+optional_policy(`
+	mta_send_mail(asterisk_t)
+')
+
+optional_policy(`
+	postfix_domtrans_postdrop(asterisk_t)
+')
+
+optional_policy(`
+	postgresql_stream_connect(asterisk_t)
 ')
 
 optional_policy(`
@@ -138,10 +170,11 @@
 ')
 
 optional_policy(`
-	udev_read_db(asterisk_t)
+	snmp_read_snmp_var_lib_files(asterisk_t)
+	snmp_stream_connect(asterisk_t)
 ')
 
-ifdef(`TODO',`
-allow initrc_t asterisk_var_run_t:fifo_file unlink;
-allow sysadm_t asterisk_t:unix_stream_socket { connectto rw_stream_socket_perms };
+optional_policy(`
+	udev_read_db(asterisk_t)
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/automount.if serefpolicy-3.7.19/policy/modules/services/automount.if
--- nsaserefpolicy/policy/modules/services/automount.if	2011-03-17 07:21:21.660851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/automount.if	2011-03-17 07:21:04.147851003 +0000
@@ -68,7 +68,8 @@
 		type automount_t;
 	')
 
-	read_files_pattern($1, automount_t, automount_t)
+	kernel_search_proc($1)
+	ps_process_pattern($1, automount_t)
 ')
 
 ########################################
@@ -149,7 +150,7 @@
 		type automount_var_run_t, automount_initrc_exec_t;
 	')
 
-	allow $1 automount_t:process { ptrace signal_perms getattr };
+	allow $1 automount_t:process { ptrace signal_perms };
 	ps_process_pattern($1, automount_t)
 
 	init_labeled_script_domtrans($1, automount_initrc_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/automount.te serefpolicy-3.7.19/policy/modules/services/automount.te
--- nsaserefpolicy/policy/modules/services/automount.te	2011-03-17 07:21:22.262851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/automount.te	2011-03-17 07:21:04.996851001 +0000
@@ -146,6 +146,7 @@
 
 # Run mount in the mount_t domain.
 mount_domtrans(automount_t)
+mount_domtrans_showmount(automount_t)
 mount_signal(automount_t)
 
 userdom_dontaudit_use_unpriv_user_fds(automount_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/avahi.if serefpolicy-3.7.19/policy/modules/services/avahi.if
--- nsaserefpolicy/policy/modules/services/avahi.if	2011-03-17 07:21:21.866851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/avahi.if	2011-03-17 07:21:04.445851001 +0000
@@ -90,6 +90,7 @@
 		class dbus send_msg;
 	')
 
+	allow avahi_t $1:file read;
 	allow $1 avahi_t:dbus send_msg;
 	allow avahi_t $1:dbus send_msg;
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/avahi.te serefpolicy-3.7.19/policy/modules/services/avahi.te
--- nsaserefpolicy/policy/modules/services/avahi.te	2011-03-17 07:21:22.380851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/avahi.te	2011-03-17 07:21:05.107851003 +0000
@@ -104,6 +104,10 @@
 ')
 
 optional_policy(`
+	mpd_dbus_chat(avahi_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(avahi_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/bind.if serefpolicy-3.7.19/policy/modules/services/bind.if
--- nsaserefpolicy/policy/modules/services/bind.if	2011-03-17 07:21:22.174851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/bind.if	2011-03-17 07:21:04.922851001 +0000
@@ -269,6 +269,27 @@
 	allow $1 named_var_run_t:dir setattr;
 ')
 
+#######################################
+## <summary>
+## Read BIND log files.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`bind_read_log',`
+	gen_require(`
+		type named_zone_t;
+		type named_log_t;
+	')
+
+	files_search_var($1)
+	allow $1 named_zone_t:dir search_dir_perms;
+	read_files_pattern($1, named_log_t, named_log_t)
+')
+
 ########################################
 ## <summary>
 ##	Set the attributes of the BIND zone directory.
@@ -359,7 +380,7 @@
 interface(`bind_admin',`
 	gen_require(`
 		type named_t, named_tmp_t, named_log_t;
-		type named_conf_t, named_var_lib_t, named_var_run_t;
+		type named_conf_t, named_var_run_t;
 		type named_cache_t, named_zone_t;
 		type dnssec_t, ndc_t;
 		type named_initrc_exec_t;
@@ -391,9 +412,6 @@
 	admin_pattern($1, named_zone_t)
 	admin_pattern($1, dnssec_t)
 
-	files_list_var_lib($1)
-	admin_pattern($1, named_var_lib_t)
-
 	files_list_pids($1)
 	admin_pattern($1, named_var_run_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/bind.te serefpolicy-3.7.19/policy/modules/services/bind.te
--- nsaserefpolicy/policy/modules/services/bind.te	2011-03-17 07:21:21.427851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/bind.te	2012-03-20 22:07:02.773083873 +0000
@@ -155,6 +155,12 @@
 ')
 
 optional_policy(`
+    # needed by FreeIPA with DNS support
+	dirsrv_stream_connect(named_t)
+	ldap_stream_connect(named_t)
+')
+
+optional_policy(`
 	init_dbus_chat_script(named_t)
 
 	sysnet_dbus_chat_dhcpc(named_t)
@@ -211,6 +217,7 @@
 
 allow ndc_t named_zone_t:dir search_dir_perms;
 
+kernel_read_system_state(ndc_t)
 kernel_read_kernel_sysctls(ndc_t)
 
 corenet_all_recvfrom_unlabeled(ndc_t)
@@ -240,6 +247,7 @@
 sysnet_dns_name_resolve(ndc_t)
 
 userdom_use_user_terminals(ndc_t)
+userdom_dontaudit_list_admin_dir(ndc_t)
 
 term_dontaudit_use_console(ndc_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/bitlbee.te serefpolicy-3.7.19/policy/modules/services/bitlbee.te
--- nsaserefpolicy/policy/modules/services/bitlbee.te	2011-03-17 07:21:22.028851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/bitlbee.te	2011-03-17 07:21:04.759851003 +0000
@@ -27,19 +27,21 @@
 #
 # Local policy
 #
-#
 
+allow bitlbee_t self:capability { setgid setuid };
+allow bitlbee_t self:process { setsched signal };
 allow bitlbee_t self:udp_socket create_socket_perms;
 allow bitlbee_t self:tcp_socket { create_stream_socket_perms connected_stream_socket_perms };
 allow bitlbee_t self:unix_stream_socket create_stream_socket_perms;
 allow bitlbee_t self:fifo_file rw_fifo_file_perms;
-allow bitlbee_t self:process signal;
+allow bitlbee_t self:netlink_route_socket r_netlink_socket_perms;
 
 bitlbee_read_config(bitlbee_t)
 
 # tmp files
 manage_files_pattern(bitlbee_t, bitlbee_tmp_t, bitlbee_tmp_t)
-files_tmp_filetrans(bitlbee_t, bitlbee_tmp_t, file)
+manage_dirs_pattern(bitlbee_t, bitlbee_tmp_t, bitlbee_tmp_t )
+files_tmp_filetrans(bitlbee_t, bitlbee_tmp_t, { dir file })
 
 # user account information is read and edited at runtime; give the usual
 # r/w access to bitlbee_var_t
@@ -53,6 +55,7 @@
 corenet_udp_sendrecv_generic_node(bitlbee_t)
 corenet_tcp_sendrecv_generic_if(bitlbee_t)
 corenet_tcp_sendrecv_generic_node(bitlbee_t)
+corenet_tcp_bind_generic_node(bitlbee_t)
 # Allow bitlbee to connect to jabber servers
 corenet_tcp_connect_jabber_client_port(bitlbee_t)
 corenet_tcp_sendrecv_jabber_client_port(bitlbee_t)
@@ -81,6 +84,10 @@
 
 libs_legacy_use_shared_libs(bitlbee_t)
 
+auth_use_nsswitch(bitlbee_t)
+
+logging_send_syslog_msg(bitlbee_t)
+
 miscfiles_read_localization(bitlbee_t)
 
 sysnet_dns_name_resolve(bitlbee_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/bluetooth.if serefpolicy-3.7.19/policy/modules/services/bluetooth.if
--- nsaserefpolicy/policy/modules/services/bluetooth.if	2011-03-17 07:21:22.098851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/bluetooth.if	2011-03-17 07:21:04.870851003 +0000
@@ -117,6 +117,27 @@
 
 ########################################
 ## <summary>
+##	dontaudit Send and receive messages from
+##	bluetooth over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`bluetooth_dontaudit_dbus_chat',`
+	gen_require(`
+		type bluetooth_t;
+		class dbus send_msg;
+	')
+
+	dontaudit $1 bluetooth_t:dbus send_msg;
+	dontaudit bluetooth_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
 ##	Execute bluetooth_helper in the bluetooth_helper domain.  (Deprecated)
 ## </summary>
 ## <param name="domain">
@@ -194,7 +215,7 @@
 interface(`bluetooth_admin',`
 	gen_require(`
 		type bluetooth_t, bluetooth_tmp_t, bluetooth_lock_t;
-		type bluetooth_spool_t, bluetooth_var_lib_t, bluetooth_var_run_t;
+		type  bluetooth_var_lib_t, bluetooth_var_run_t;
 		type bluetooth_conf_t, bluetooth_conf_rw_t;
 		type bluetooth_initrc_exec_t;
 	')
@@ -217,9 +238,6 @@
 	admin_pattern($1, bluetooth_conf_t)
 	admin_pattern($1, bluetooth_conf_rw_t)
 
-	files_list_spool($1)
-	admin_pattern($1, bluetooth_spool_t)
-
 	files_list_var_lib($1)
 	admin_pattern($1, bluetooth_var_lib_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/bluetooth.te serefpolicy-3.7.19/policy/modules/services/bluetooth.te
--- nsaserefpolicy/policy/modules/services/bluetooth.te	2011-03-17 07:21:21.132851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/bluetooth.te	2011-08-22 12:12:39.428523003 +0000
@@ -117,6 +117,8 @@
 dev_read_urand(bluetooth_t)
 dev_rw_input_dev(bluetooth_t)
 dev_rw_wireless(bluetooth_t)
+# bug 708604
+dev_dontaudit_read_generic_chr_files(bluetooth_t)
 
 fs_getattr_all_fs(bluetooth_t)
 fs_search_auto_mountpoints(bluetooth_t)
@@ -148,6 +150,10 @@
 userdom_dontaudit_search_user_home_dirs(bluetooth_t)
 
 optional_policy(`
+	devicekit_dbus_chat_power(bluetooth_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(bluetooth_t)
 	dbus_connect_system_bus(bluetooth_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/boinc.fc serefpolicy-3.7.19/policy/modules/services/boinc.fc
--- nsaserefpolicy/policy/modules/services/boinc.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/boinc.fc	2011-03-17 07:21:03.941851003 +0000
@@ -0,0 +1,8 @@
+
+/etc/rc\.d/init\.d/boinc-client		-- 	gen_context(system_u:object_r:boinc_initrc_exec_t,s0)
+
+/usr/bin/boinc_client			--	gen_context(system_u:object_r:boinc_exec_t,s0)
+
+/var/lib/boinc(/.*)?				gen_context(system_u:object_r:boinc_var_lib_t,s0)
+/var/lib/boinc/projects(/.*)?			gen_context(system_u:object_r:boinc_project_var_lib_t,s0)
+/var/lib/boinc/slots(/.*)?          	 	gen_context(system_u:object_r:boinc_project_var_lib_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/boinc.if serefpolicy-3.7.19/policy/modules/services/boinc.if
--- nsaserefpolicy/policy/modules/services/boinc.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/boinc.if	2011-03-17 07:21:04.613851002 +0000
@@ -0,0 +1,151 @@
+
+## <summary>policy for boinc</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run boinc.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`boinc_domtrans',`
+	gen_require(`
+		type boinc_t, boinc_exec_t;
+	')
+
+	domtrans_pattern($1, boinc_exec_t, boinc_t)
+')
+
+#######################################
+## <summary>
+##  Execute boinc server in the boinc domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`boinc_initrc_domtrans',`
+    gen_require(`
+        type boinc_initrc_exec_t;
+    ')
+
+    init_labeled_script_domtrans($1, boinc_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Search boinc lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`boinc_search_lib',`
+	gen_require(`
+		type boinc_var_lib_t;
+	')
+
+	allow $1 boinc_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read boinc lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`boinc_read_lib_files',`
+	gen_require(`
+		type boinc_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, boinc_var_lib_t, boinc_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	boinc lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`boinc_manage_lib_files',`
+	gen_require(`
+		type boinc_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, boinc_var_lib_t,  boinc_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage boinc var_lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`boinc_manage_var_lib',`
+	gen_require(`
+		type boinc_var_lib_t;
+	')
+
+         manage_dirs_pattern($1, boinc_var_lib_t, boinc_var_lib_t)
+         manage_files_pattern($1, boinc_var_lib_t, boinc_var_lib_t)
+         manage_lnk_files_pattern($1, boinc_var_lib_t, boinc_var_lib_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an boinc environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`boinc_admin',`
+	gen_require(`
+		type boinc_t, boinc_initrc_exec_t;
+		type boinc_var_lib_t;
+	')
+
+	allow $1 boinc_t:process { ptrace signal_perms };
+	ps_process_pattern($1, boinc_t)
+
+	boinc_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 boinc_initrc_exec_t system_r;
+	allow $2 system_r;
+	        
+	files_list_var_lib($1)
+	admin_pattern($1, boinc_var_lib_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/boinc.te serefpolicy-3.7.19/policy/modules/services/boinc.te
--- nsaserefpolicy/policy/modules/services/boinc.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/boinc.te	2011-08-30 14:15:46.463160002 +0000
@@ -0,0 +1,175 @@
+
+policy_module(boinc,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type boinc_t;
+type boinc_exec_t;
+init_daemon_domain(boinc_t, boinc_exec_t)
+
+type boinc_initrc_exec_t;
+init_script_file(boinc_initrc_exec_t)
+
+type boinc_tmp_t;
+files_tmp_file(boinc_tmp_t)
+
+type boinc_tmpfs_t;
+files_tmpfs_file(boinc_tmpfs_t)
+
+type boinc_var_lib_t;
+files_type(boinc_var_lib_t)
+
+type boinc_project_t;
+domain_type(boinc_project_t)
+role system_r types boinc_project_t;
+
+type boinc_project_tmp_t;
+files_tmp_file(boinc_project_tmp_t)
+
+type boinc_project_var_lib_t;
+files_type(boinc_project_var_lib_t)
+
+########################################
+#
+# boinc local policy
+#
+
+allow boinc_t self:capability { kill };
+allow boinc_t self:process { setsched sigkill };
+
+allow boinc_t self:fifo_file rw_fifo_file_perms;
+allow boinc_t self:unix_stream_socket create_stream_socket_perms;
+allow boinc_t self:tcp_socket create_stream_socket_perms;
+allow boinc_t self:sem create_sem_perms;
+allow boinc_t self:shm create_shm_perms;
+
+manage_dirs_pattern(boinc_t, boinc_tmp_t, boinc_tmp_t)
+manage_files_pattern(boinc_t, boinc_tmp_t, boinc_tmp_t)
+files_tmp_filetrans(boinc_t, boinc_tmp_t, { dir file })
+
+manage_files_pattern(boinc_t, boinc_tmpfs_t, boinc_tmpfs_t)
+fs_tmpfs_filetrans(boinc_t, boinc_tmpfs_t,file)
+
+exec_files_pattern(boinc_t, boinc_var_lib_t,  boinc_var_lib_t)
+manage_dirs_pattern(boinc_t, boinc_var_lib_t,  boinc_var_lib_t)
+manage_files_pattern(boinc_t, boinc_var_lib_t,  boinc_var_lib_t)
+filetrans_pattern(boinc_t, boinc_var_lib_t, boinc_project_var_lib_t, { dir })
+
+allow boinc_t boinc_project_t:process sigkill;
+
+manage_dirs_pattern(boinc_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+manage_files_pattern(boinc_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+
+kernel_read_system_state(boinc_t)
+
+corecmd_exec_bin(boinc_t)
+corecmd_exec_shell(boinc_t)
+
+corenet_all_recvfrom_unlabeled(boinc_t)
+corenet_all_recvfrom_netlabel(boinc_t)
+corenet_tcp_sendrecv_generic_if(boinc_t)
+corenet_udp_sendrecv_generic_if(boinc_t)
+corenet_tcp_sendrecv_generic_node(boinc_t)
+corenet_udp_sendrecv_generic_node(boinc_t)
+corenet_tcp_sendrecv_all_ports(boinc_t)
+corenet_udp_sendrecv_all_ports(boinc_t)
+corenet_tcp_bind_generic_node(boinc_t)
+corenet_udp_bind_generic_node(boinc_t)
+corenet_tcp_bind_boinc_port(boinc_t)
+corenet_tcp_connect_boinc_port(boinc_t)   
+corenet_tcp_connect_http_port(boinc_t)
+corenet_tcp_connect_http_cache_port(boinc_t)
+
+dev_list_sysfs(boinc_t)
+dev_read_rand(boinc_t)
+dev_read_urand(boinc_t)
+dev_read_sysfs(boinc_t)
+dev_rw_xserver_misc(boinc_t)
+
+domain_read_all_domains_state(boinc_t)
+
+files_read_etc_files(boinc_t)
+files_read_usr_files(boinc_t)
+files_getattr_all_dirs(boinc_t)
+files_getattr_all_files(boinc_t)
+files_dontaudit_search_home(boinc_t)
+files_dontaudit_getattr_boot_dirs(boinc_t)
+
+fs_getattr_all_fs(boinc_t)
+
+term_dontaudit_getattr_ptmx(boinc_t)
+
+miscfiles_read_localization(boinc_t)
+miscfiles_read_certs(boinc_t)
+
+logging_send_syslog_msg(boinc_t)
+
+sysnet_dns_name_resolve(boinc_t)
+
+mta_send_mail(boinc_t)
+
+########################################
+#
+# boinc-projects local policy
+#
+
+domtrans_pattern(boinc_t, boinc_project_var_lib_t, boinc_project_t)
+allow boinc_t boinc_project_t:process sigkill;
+
+allow boinc_project_t self:process { ptrace setpgid setsched signal signull sigkill sigstop };
+allow boinc_project_t self:process { execmem execstack };
+
+allow boinc_project_t self:fifo_file rw_fifo_file_perms;
+allow boinc_project_t self:shm create_shm_perms;
+allow boinc_project_t self:sem create_sem_perms;
+
+manage_dirs_pattern(boinc_project_t, boinc_project_tmp_t, boinc_project_tmp_t)
+manage_files_pattern(boinc_project_t, boinc_project_tmp_t, boinc_project_tmp_t)
+files_tmp_filetrans(boinc_project_t, boinc_project_tmp_t, { dir file })
+
+allow boinc_project_t boinc_project_var_lib_t:file entrypoint;
+exec_files_pattern(boinc_project_t, boinc_project_var_lib_t,  boinc_project_var_lib_t)
+manage_dirs_pattern(boinc_project_t, boinc_project_var_lib_t,  boinc_project_var_lib_t)
+manage_files_pattern(boinc_project_t, boinc_project_var_lib_t,  boinc_project_var_lib_t)
+files_var_lib_filetrans(boinc_project_t, boinc_project_var_lib_t, { dir } )
+
+allow boinc_project_t boinc_project_var_lib_t:file execmod;
+
+allow boinc_project_t boinc_t:shm rw_sem_perms;
+allow boinc_project_t boinc_t:shm rw_shm_perms;
+allow boinc_project_t boinc_tmpfs_t:file { read write };
+
+list_dirs_pattern(boinc_project_t, boinc_var_lib_t, boinc_var_lib_t)
+rw_dirs_pattern(boinc_project_t, boinc_var_lib_t, boinc_var_lib_t)
+rw_files_pattern(boinc_project_t, boinc_var_lib_t, boinc_var_lib_t)
+
+corecmd_exec_bin(boinc_project_t)
+corecmd_exec_shell(boinc_project_t)
+
+kernel_read_system_state(boinc_project_t)
+kernel_read_kernel_sysctls(boinc_project_t)
+kernel_search_vm_sysctl(boinc_project_t)
+kernel_read_network_state(boinc_project_t)
+
+corenet_tcp_connect_boinc_port(boinc_project_t)
+
+dev_read_rand(boinc_project_t)
+dev_read_urand(boinc_project_t)
+dev_read_sysfs(boinc_project_t)
+dev_rw_xserver_misc(boinc_project_t)
+
+files_read_etc_files(boinc_project_t)
+files_read_etc_runtime_files(boinc_project_t)
+files_read_usr_files(boinc_project_t)
+
+auth_use_nsswitch(boinc_project_t)
+
+miscfiles_read_localization(boinc_project_t)
+miscfiles_read_fonts(boinc_project_t)
+
+optional_policy(`
+	java_exec(boinc_project_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/bugzilla.fc serefpolicy-3.7.19/policy/modules/services/bugzilla.fc
--- nsaserefpolicy/policy/modules/services/bugzilla.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/bugzilla.fc	2011-03-17 07:21:03.992851002 +0000
@@ -0,0 +1,4 @@
+
+/usr/share/bugzilla(/.*)?	-d	gen_context(system_u:object_r:httpd_bugzilla_content_t,s0)
+/usr/share/bugzilla(/.*)?	--	gen_context(system_u:object_r:httpd_bugzilla_script_exec_t,s0)
+/var/lib/bugzilla(/.*)?			gen_context(system_u:object_r:httpd_bugzilla_rw_content_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/bugzilla.if serefpolicy-3.7.19/policy/modules/services/bugzilla.if
--- nsaserefpolicy/policy/modules/services/bugzilla.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/bugzilla.if	2011-03-17 07:21:03.292851003 +0000
@@ -0,0 +1,39 @@
+## <summary>Bugzilla server</summary>
+
+########################################
+## <summary>
+##	Allow the specified domain to search 
+##	bugzilla directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`bugzilla_search_dirs',`
+	gen_require(`
+		type httpd_bugzilla_content_t;
+	')
+
+	allow $1 httpd_bugzilla_content_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write 
+##	bugzilla script unix domain stream sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`bugzilla_dontaudit_rw_script_stream_sockets',`
+	gen_require(`
+		type httpd_bugzilla_script_t;
+	')
+
+	dontaudit $1 httpd_bugzilla_script_t:unix_stream_socket { read write };
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/bugzilla.te serefpolicy-3.7.19/policy/modules/services/bugzilla.te
--- nsaserefpolicy/policy/modules/services/bugzilla.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/bugzilla.te	2011-03-17 07:21:03.143851001 +0000
@@ -0,0 +1,57 @@
+
+policy_module(bugzilla, 1.0)
+
+########################################
+#
+# Declarations
+#
+
+apache_content_template(bugzilla)
+
+type httpd_bugzilla_tmp_t;
+files_tmp_file(httpd_bugzilla_tmp_t)
+
+########################################
+#
+# bugzilla local policy
+#
+
+allow httpd_bugzilla_script_t self:netlink_route_socket r_netlink_socket_perms;
+allow httpd_bugzilla_script_t self:tcp_socket create_stream_socket_perms;
+allow httpd_bugzilla_script_t self:udp_socket create_socket_perms;
+
+corenet_all_recvfrom_unlabeled(httpd_bugzilla_script_t)
+corenet_all_recvfrom_netlabel(httpd_bugzilla_script_t)
+corenet_tcp_sendrecv_all_if(httpd_bugzilla_script_t)
+corenet_udp_sendrecv_all_if(httpd_bugzilla_script_t)
+corenet_tcp_sendrecv_all_nodes(httpd_bugzilla_script_t)
+corenet_udp_sendrecv_all_nodes(httpd_bugzilla_script_t)
+corenet_tcp_sendrecv_all_ports(httpd_bugzilla_script_t)
+corenet_udp_sendrecv_all_ports(httpd_bugzilla_script_t)
+corenet_tcp_connect_postgresql_port(httpd_bugzilla_script_t)
+corenet_tcp_connect_mysqld_port(httpd_bugzilla_script_t)
+corenet_tcp_connect_http_port(httpd_bugzilla_script_t)
+corenet_tcp_connect_smtp_port(httpd_bugzilla_script_t)
+corenet_sendrecv_postgresql_client_packets(httpd_bugzilla_script_t)
+corenet_sendrecv_mysqld_client_packets(httpd_bugzilla_script_t)
+
+manage_dirs_pattern(httpd_bugzilla_script_t, httpd_bugzilla_tmp_t, httpd_bugzilla_tmp_t)
+manage_files_pattern(httpd_bugzilla_script_t, httpd_bugzilla_tmp_t, httpd_bugzilla_tmp_t)
+files_tmp_filetrans(httpd_bugzilla_script_t, httpd_bugzilla_tmp_t, { file dir })
+
+files_search_var_lib(httpd_bugzilla_script_t)
+
+mta_send_mail(httpd_bugzilla_script_t)
+
+sysnet_read_config(httpd_bugzilla_script_t)
+sysnet_use_ldap(httpd_bugzilla_script_t)
+
+optional_policy(`
+	mysql_search_db(httpd_bugzilla_script_t)
+	mysql_stream_connect(httpd_bugzilla_script_t)
+')
+
+optional_policy(`
+	postgresql_stream_connect(httpd_bugzilla_script_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cachefilesd.fc serefpolicy-3.7.19/policy/modules/services/cachefilesd.fc
--- nsaserefpolicy/policy/modules/services/cachefilesd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cachefilesd.fc	2011-03-17 07:21:04.910851002 +0000
@@ -0,0 +1,29 @@
+###############################################################################
+#
+# Copyright (C) 2006 Red Hat, Inc. All Rights Reserved.
+# Written by David Howells (dhowells@redhat.com)
+#            Karl MacMillan (kmacmill@redhat.com)
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License
+# as published by the Free Software Foundation; either version
+# 2 of the License, or (at your option) any later version.
+#
+###############################################################################
+
+#
+# Define the contexts to be assigned to various files and directories of
+# importance to the CacheFiles kernel module and userspace management daemon.
+#
+
+# cachefilesd executable will have:
+# label: system_u:object_r:cachefilesd_exec_t
+# MLS sensitivity: s0
+# MCS categories: <none>
+
+/sbin/cachefilesd	--	gen_context(system_u:object_r:cachefilesd_exec_t,s0)
+/dev/cachefiles		-c	gen_context(system_u:object_r:cachefiles_dev_t,s0)
+/var/fscache(/.*)?		gen_context(system_u:object_r:cachefiles_var_t,s0)
+/var/cache/fscache(/.*)?		gen_context(system_u:object_r:cachefiles_var_t,s0)
+
+/var/run/cachefilesd\.pid --	gen_context(system_u:object_r:cachefiles_var_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cachefilesd.if serefpolicy-3.7.19/policy/modules/services/cachefilesd.if
--- nsaserefpolicy/policy/modules/services/cachefilesd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cachefilesd.if	2011-03-17 07:21:03.449851002 +0000
@@ -0,0 +1,41 @@
+###############################################################################
+#
+# Copyright (C) 2006 Red Hat, Inc. All Rights Reserved.
+# Written by David Howells (dhowells@redhat.com)
+#            Karl MacMillan (kmacmill@redhat.com)
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License
+# as published by the Free Software Foundation; either version
+# 2 of the License, or (at your option) any later version.
+#
+###############################################################################
+
+#
+# Define the policy interface for the CacheFiles userspace management daemon.
+#
+
+## <summary>policy for cachefilesd</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run cachefilesd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`cachefilesd_domtrans',`
+	gen_require(`
+		type cachefilesd_t, cachefilesd_exec_t;
+	')
+
+	domain_auto_trans($1,cachefilesd_exec_t,cachefilesd_t)
+
+	allow $1 cachefilesd_t:fd use;
+	allow cachefilesd_t $1:fd use;
+	allow cachefilesd_t $1:fifo_file rw_file_perms;
+	allow cachefilesd_t $1:process sigchld;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cachefilesd.te serefpolicy-3.7.19/policy/modules/services/cachefilesd.te
--- nsaserefpolicy/policy/modules/services/cachefilesd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cachefilesd.te	2011-03-17 07:21:03.347851001 +0000
@@ -0,0 +1,147 @@
+###############################################################################
+#
+# Copyright (C) 2006, 2010 Red Hat, Inc. All Rights Reserved.
+# Written by David Howells (dhowells@redhat.com)
+#            Karl MacMillan (kmacmill@redhat.com)
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License
+# as published by the Free Software Foundation; either version
+# 2 of the License, or (at your option) any later version.
+#
+###############################################################################
+
+#
+# This security policy governs access by the CacheFiles kernel module and
+# userspace management daemon to the files and directories in the on-disk
+# cache, on behalf of the processes accessing the cache through a network
+# filesystem such as NFS
+#
+policy_module(cachefilesd,1.0.17)
+
+###############################################################################
+#
+# Declarations
+#
+require { type kernel_t; }
+
+#
+# Files in the cache are created by the cachefiles module with security ID
+# cachefiles_var_t
+#
+type cachefiles_var_t;
+files_type(cachefiles_var_t)
+
+#
+# The /dev/cachefiles character device has security ID cachefiles_dev_t
+#
+type cachefiles_dev_t;
+dev_node(cachefiles_dev_t)
+
+#
+# The cachefilesd daemon normally runs with security ID cachefilesd_t
+#
+type cachefilesd_t;
+type cachefilesd_exec_t;
+domain_type(cachefilesd_t)
+init_daemon_domain(cachefilesd_t, cachefilesd_exec_t)
+
+#
+# The cachefilesd daemon pid file context
+#
+type cachefilesd_var_run_t;
+files_pid_file(cachefilesd_var_run_t)
+
+#
+# The CacheFiles kernel module causes processes accessing the cache files to do
+# so acting as security ID cachefiles_kernel_t
+#
+type cachefiles_kernel_t;
+domain_type(cachefiles_kernel_t)
+domain_obj_id_change_exemption(cachefiles_kernel_t)
+role system_r types cachefiles_kernel_t;
+
+###############################################################################
+#
+# Permit RPM to deal with files in the cache
+#
+rpm_use_script_fds(cachefilesd_t)
+
+###############################################################################
+#
+# cachefilesd local policy
+#
+# These define what cachefilesd is permitted to do.  This doesn't include very
+# much: startup stuff, logging, pid file, scanning the cache superstructure and
+# deleting files from the cache.  It is not permitted to read/write files in
+# the cache.
+#
+# Check in /usr/share/selinux/devel/include/ for macros to use instead of allow
+# rules.
+#
+allow cachefilesd_t self : capability { setuid setgid sys_admin dac_override };
+
+# Basic access
+files_read_etc_files(cachefilesd_t)
+libs_use_ld_so(cachefilesd_t)
+libs_use_shared_libs(cachefilesd_t)
+miscfiles_read_localization(cachefilesd_t)
+logging_send_syslog_msg(cachefilesd_t)
+init_dontaudit_use_script_ptys(cachefilesd_t)
+term_dontaudit_use_generic_ptys(cachefilesd_t)
+term_dontaudit_getattr_unallocated_ttys(cachefilesd_t)
+
+# Allow manipulation of pid file
+allow cachefilesd_t cachefilesd_var_run_t:file create_file_perms;
+manage_files_pattern(cachefilesd_t,cachefilesd_var_run_t, cachefilesd_var_run_t)
+manage_dirs_pattern(cachefilesd_t,cachefilesd_var_run_t, cachefilesd_var_run_t)
+files_pid_file(cachefilesd_var_run_t)
+files_pid_filetrans(cachefilesd_t,cachefilesd_var_run_t,file)
+files_create_as_is_all_files(cachefilesd_t)
+
+# Allow access to cachefiles device file
+allow cachefilesd_t cachefiles_dev_t : chr_file rw_file_perms;
+
+# Allow access to cache superstructure
+allow cachefilesd_t cachefiles_var_t : dir { rw_dir_perms rmdir };
+allow cachefilesd_t cachefiles_var_t : file { getattr rename unlink };
+
+# Permit statfs on the backing filesystem
+fs_getattr_xattr_fs(cachefilesd_t)
+
+###############################################################################
+#
+# When cachefilesd invokes the kernel module to begin caching, it has to tell
+# the kernel module the security context in which it should act, and this
+# policy has to approve that.
+#
+# There are two parts to this:
+#
+#   (1) the security context used by the module to access files in the cache,
+#       as set by the 'secctx' command in /etc/cachefilesd.conf, and
+#
+allow cachefilesd_t cachefiles_kernel_t : kernel_service { use_as_override };
+
+#
+#   (2) the label that will be assigned to new files and directories created in
+#       the cache by the module, which will be the same as the label on the
+#       directory pointed to by the 'dir' command.
+#
+allow cachefilesd_t cachefiles_var_t : kernel_service { create_files_as };
+
+###############################################################################
+#
+# cachefiles kernel module local policy
+#
+# This governs what the kernel module is allowed to do the contents of the
+# cache.
+#
+allow cachefiles_kernel_t self:capability { dac_override dac_read_search };
+allow cachefiles_kernel_t initrc_t:process sigchld;
+
+manage_dirs_pattern(cachefiles_kernel_t,cachefiles_var_t, cachefiles_var_t)
+manage_files_pattern(cachefiles_kernel_t,cachefiles_var_t, cachefiles_var_t)
+
+fs_getattr_xattr_fs(cachefiles_kernel_t)
+
+dev_search_sysfs(cachefiles_kernel_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ccs.te serefpolicy-3.7.19/policy/modules/services/ccs.te
--- nsaserefpolicy/policy/modules/services/ccs.te	2011-03-17 07:21:21.948851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ccs.te	2011-05-27 10:23:54.359208002 +0000
@@ -98,6 +98,7 @@
 files_read_etc_runtime_files(ccs_t)
 
 init_rw_script_tmp_files(ccs_t)
+init_signal(ccs_t)
 
 logging_send_syslog_msg(ccs_t)
 
@@ -114,5 +115,15 @@
 ')
 
 optional_policy(`
+	aisexec_stream_connect(ccs_t)
+	corosync_stream_connect(ccs_t)
+')
+
+optional_policy(`
+	qpidd_rw_semaphores(ccs_t)
+	qpidd_rw_shm(ccs_t)
+')
+
+optional_policy(`
 	unconfined_use_fds(ccs_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/certmaster.if serefpolicy-3.7.19/policy/modules/services/certmaster.if
--- nsaserefpolicy/policy/modules/services/certmaster.if	2011-03-17 07:21:21.799851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/certmaster.if	2011-03-17 07:21:04.346851000 +0000
@@ -18,6 +18,25 @@
 	domtrans_pattern($1, certmaster_exec_t, certmaster_t)
 ')
 
+###################################
+## <summary>
+##  Execute certmaster in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`certmaster_exec',`
+    gen_require(`
+        type certmaster_exec_t;
+    ')
+
+    can_exec($1, certmaster_exec_t)
+    corecmd_search_bin($1)
+')
+
 #######################################
 ## <summary>
 ##	read certmaster logs.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/certmaster.te serefpolicy-3.7.19/policy/modules/services/certmaster.te
--- nsaserefpolicy/policy/modules/services/certmaster.te	2011-03-17 07:21:21.384851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/certmaster.te	2011-09-08 14:02:18.870160002 +0000
@@ -60,6 +60,8 @@
 corenet_tcp_bind_generic_node(certmaster_t)
 corenet_tcp_bind_certmaster_port(certmaster_t)
 
+dev_read_urand(certmaster_t)
+
 files_search_etc(certmaster_t)
 files_list_var(certmaster_t)
 files_search_var_lib(certmaster_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/certmonger.fc serefpolicy-3.7.19/policy/modules/services/certmonger.fc
--- nsaserefpolicy/policy/modules/services/certmonger.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/certmonger.fc	2012-03-14 17:09:40.512620445 +0000
@@ -0,0 +1,8 @@
+/etc/rc\.d/init\.d/certmonger	--	gen_context(system_u:object_r:certmonger_initrc_exec_t,s0)
+
+/usr/sbin/certmonger	--	gen_context(system_u:object_r:certmonger_exec_t,s0)
+
+/var/run/certmonger.pid		--	gen_context(system_u:object_r:certmonger_var_run_t,s0)
+/var/lib/certmonger(/.*)?			gen_context(system_u:object_r:certmonger_var_lib_t,s0)
+
+/usr/lib(64)?/ipa/certmonger(/.*)?       gen_context(system_u:object_r:certmonger_unconfined_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/certmonger.if serefpolicy-3.7.19/policy/modules/services/certmonger.if
--- nsaserefpolicy/policy/modules/services/certmonger.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/certmonger.if	2012-07-17 15:05:22.805413376 +0000
@@ -0,0 +1,237 @@
+
+## <summary>Certificate status monitor and PKI enrollment client</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run certmonger.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`certmonger_domtrans',`
+	gen_require(`
+		type certmonger_t, certmonger_exec_t;
+	')
+
+	domtrans_pattern($1, certmonger_exec_t, certmonger_t)
+')
+
+
+########################################
+## <summary>
+##	Execute certmonger server in the certmonger domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`certmonger_initrc_domtrans',`
+	gen_require(`
+		type certmonger_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, certmonger_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Read certmonger PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`certmonger_read_pid_files',`
+	gen_require(`
+		type certmonger_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 certmonger_var_run_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Manage certmonger var_run files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`certmonger_manage_var_run',`
+	gen_require(`
+		type certmonger_var_run_t;
+	')
+
+         manage_dirs_pattern($1, certmonger_var_run_t, certmonger_var_run_t)
+         manage_files_pattern($1, certmonger_var_run_t, certmonger_var_run_t)
+         manage_lnk_files_pattern($1, certmonger_var_run_t, certmonger_var_run_t)
+')
+
+
+########################################
+## <summary>
+##	Search certmonger lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`certmonger_search_lib',`
+	gen_require(`
+		type certmonger_var_lib_t;
+	')
+
+	allow $1 certmonger_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read certmonger lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`certmonger_read_lib_files',`
+	gen_require(`
+		type certmonger_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, certmonger_var_lib_t, certmonger_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	certmonger lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`certmonger_manage_lib_files',`
+	gen_require(`
+		type certmonger_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, certmonger_var_lib_t,  certmonger_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage certmonger var_lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`certmonger_manage_var_lib',`
+	gen_require(`
+		type certmonger_var_lib_t;
+	')
+
+         manage_dirs_pattern($1, certmonger_var_lib_t, certmonger_var_lib_t)
+         manage_files_pattern($1, certmonger_var_lib_t, certmonger_var_lib_t)
+         manage_lnk_files_pattern($1, certmonger_var_lib_t, certmonger_var_lib_t)
+')
+
+#######################################
+## <summary>
+##  Dontaudit certmonger leaked files descriptors.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`certmonger_dontaudit_leaks',`
+    gen_require(`
+        type certmonger_t;
+		type certmonger_var_run_t;
+    ')
+
+	dontaudit $1 certmonger_var_run_t:file { read write };
+	dontaudit $1 certmonger_t:fifo_file { write read };
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	certmonger over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`certmonger_dbus_chat',`
+	gen_require(`
+		type certmonger_t;
+		class dbus send_msg;
+	')
+
+	allow $1 certmonger_t:dbus send_msg;
+	allow certmonger_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an certmonger environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`certmonger_admin',`
+	gen_require(`
+		type certmonger_t, certmonger_initrc_exec_t;	
+		type  certmonger_var_lib_t, certmonger_var_run_t;
+	')
+
+	allow $1 certmonger_t:process { ptrace signal_perms getattr };
+	read_files_pattern($1, certmonger_t, certmonger_t)
+
+	# Allow certmonger_t to restart the apache service
+	certmonger_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 certmonger_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, certmonger_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, certmonger_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/certmonger.te serefpolicy-3.7.19/policy/modules/services/certmonger.te
--- nsaserefpolicy/policy/modules/services/certmonger.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/certmonger.te	2012-06-26 09:04:42.603604541 +0000
@@ -0,0 +1,137 @@
+policy_module(certmonger,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type certmonger_t;
+type certmonger_exec_t;
+init_daemon_domain(certmonger_t, certmonger_exec_t)
+
+type certmonger_initrc_exec_t;
+init_script_file(certmonger_initrc_exec_t)
+
+type certmonger_var_run_t;
+files_pid_file(certmonger_var_run_t)
+
+type certmonger_var_lib_t;
+files_type(certmonger_var_lib_t)
+
+type certmonger_unconfined_exec_t;
+application_executable_file(certmonger_unconfined_exec_t)
+
+########################################
+#
+# certmonger local policy
+#
+
+allow certmonger_t self:capability { dac_override dac_read_search setgid setuid kill sys_nice };
+dontaudit certmonger_t self:capability sys_tty_config;
+
+allow certmonger_t self:process { fork getsched setsched sigkill };
+allow certmonger_t self:fifo_file rw_file_perms;
+allow certmonger_t self:unix_stream_socket create_stream_socket_perms;
+allow certmonger_t self:tcp_socket create_stream_socket_perms;
+allow certmonger_t self:netlink_route_socket r_netlink_socket_perms;
+
+manage_dirs_pattern(certmonger_t, certmonger_var_run_t,  certmonger_var_run_t)
+manage_files_pattern(certmonger_t, certmonger_var_run_t,  certmonger_var_run_t)
+files_pid_filetrans(certmonger_t, certmonger_var_run_t, { file dir })
+
+manage_dirs_pattern(certmonger_t, certmonger_var_lib_t,  certmonger_var_lib_t)
+manage_files_pattern(certmonger_t, certmonger_var_lib_t,  certmonger_var_lib_t)
+files_var_lib_filetrans(certmonger_t, certmonger_var_lib_t, { file dir } )
+
+
+kernel_read_kernel_sysctls(certmonger_t)
+kernel_read_system_state(certmonger_t)
+
+corecmd_exec_bin(certmonger_t)
+corecmd_exec_shell(certmonger_t)
+
+corenet_tcp_sendrecv_generic_if(certmonger_t)
+corenet_tcp_sendrecv_generic_node(certmonger_t)
+corenet_tcp_sendrecv_all_ports(certmonger_t)
+corenet_tcp_connect_certmaster_port(certmonger_t)
+corenet_tcp_connect_http_port(certmonger_t)
+corenet_tcp_connect_pki_ca_port(certmonger_t)
+
+dev_read_urand(certmonger_t)
+
+domain_use_interactive_fds(certmonger_t)
+
+files_read_etc_files(certmonger_t)
+files_read_usr_files(certmonger_t)
+files_list_tmp(certmonger_t)
+
+auth_use_nsswitch(certmonger_t)
+auth_rw_cache(certmonger_t)
+
+init_getattr_all_script_files(certmonger_t)
+
+logging_send_syslog_msg(certmonger_t)
+
+miscfiles_read_localization(certmonger_t)
+miscfiles_manage_cert_files(certmonger_t)
+
+sysnet_dns_name_resolve(certmonger_t)
+
+userdom_search_user_home_content(certmonger_t)
+
+optional_policy(`
+	apache_search_config(certmonger_t)
+')
+
+optional_policy(`
+	bind_search_cache(certmonger_t)
+')
+
+optional_policy(`
+	consoletype_exec(certmonger_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(certmonger_t)
+	dbus_connect_system_bus(certmonger_t)
+')
+
+optional_policy(`
+	dirsrv_manage_config(certmonger_t)
+	dirsrv_signal(certmonger_t)
+	dirsrv_signull(certmonger_t)
+')
+
+optional_policy(`
+	kerberos_use(certmonger_t)
+	kerberos_read_keytab(certmonger_t)
+')
+
+optional_policy(`
+	pcscd_stream_connect(certmonger_t)
+	pcscd_read_pub_files(certmonger_t)
+')
+
+#######################################
+#
+# certmonger_unconfined_script_t local policy
+#
+
+optional_policy(`
+    type certmonger_unconfined_t;
+    domain_type(certmonger_unconfined_t)
+
+    domain_entry_file(certmonger_unconfined_t, certmonger_unconfined_exec_t)
+    role system_r types certmonger_unconfined_t;
+
+	domtrans_pattern(certmonger_t, certmonger_unconfined_exec_t, certmonger_unconfined_t)
+	allow certmonger_t certmonger_unconfined_exec_t:file ioctl;
+
+    allow certmonger_t certmonger_unconfined_exec_t:dir search_dir_perms;
+	allow certmonger_t certmonger_unconfined_exec_t:dir read_file_perms;
+
+	init_domtrans_script(certmonger_unconfined_t)
+	
+	unconfined_domain(certmonger_unconfined_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cfengine.fc serefpolicy-3.7.19/policy/modules/services/cfengine.fc
--- nsaserefpolicy/policy/modules/services/cfengine.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cfengine.fc	2012-04-03 13:16:18.858424681 +0000
@@ -0,0 +1,12 @@
+
+/usr/sbin/cf-serverd		--	gen_context(system_u:object_r:cfengine_serverd_exec_t,s0)
+/usr/sbin/cf-execd		--	gen_context(system_u:object_r:cfengine_execd_exec_t,s0)
+/usr/sbin/cf-monitord		--	gen_context(system_u:object_r:cfengine_monitord_exec_t,s0)
+
+/etc/rc\.d/init\.d/cf-serverd	--	gen_context(system_u:object_r:cfengine_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/cf-monitord	--	gen_context(system_u:object_r:cfengine_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/cf-execd	--	gen_context(system_u:object_r:cfengine_initrc_exec_t,s0)
+
+/var/cfengine(/.*)?			gen_context(system_u:object_r:cfengine_var_lib_t,s0)
+/var/cfengine/outputs(/.*)? gen_context(system_u:object_r:cfengine_var_log_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cfengine.if serefpolicy-3.7.19/policy/modules/services/cfengine.if
--- nsaserefpolicy/policy/modules/services/cfengine.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cfengine.if	2012-04-03 13:16:18.859424658 +0000
@@ -0,0 +1,143 @@
+
+## <summary>policy for cfengine</summary>
+
+######################################
+## <summary>
+##  Creates types and rules for a basic
+##  cfengine init daemon domain.
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+template(`cfengine_domain_template',`
+    gen_require(`
+        attribute cfengine_domain;
+    ')
+
+	##############################
+	#
+	# Declarations
+	#
+
+	type cfengine_$1_t, cfengine_domain;
+	type cfengine_$1_exec_t;
+	init_daemon_domain(cfengine_$1_t, cfengine_$1_exec_t)
+
+')
+
+########################################
+## <summary>
+##	Transition to cfengine.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`cfengine_domtrans_server',`
+	gen_require(`
+		type cfengine_server_t, cfengine_server_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, cfengine_server_exec_t, cfengine_server_t)
+')
+
+#######################################
+## <summary>
+##  Search cfengine lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`cfengine_search_lib_files',`
+    gen_require(`
+        type cfengine_var_lib_t;
+    ')
+
+	allow $1 cfengine_var_lib_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Read cfengine lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`cfengine_read_lib_files',`
+	gen_require(`
+		type cfengine_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, cfengine_var_lib_t, cfengine_var_lib_t)
+')
+
+######################################
+## <summary>
+##      Allow the specified domain to read cfengine's log files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`cfengine_read_log',`
+        gen_require(`
+                type cfengine_var_log_t;
+        ')
+
+        logging_search_logs($1)
+		files_search_var_lib($1)
+		cfengine_search_lib_files($1)
+        read_files_pattern($1, cfengine_var_log_t, cfengine_var_log_t)
+')
+
+#####################################
+## <summary>
+##      Allow the specified domain to append cfengine's log files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`cfengine_append_inherited_log',`
+        gen_require(`
+                type cfengine_var_log_t;
+        ')
+
+        cfengine_search_lib_files($1)
+		allow $1 cfengine_var_log_t:file { getattr append ioctl lock };
+')
+
+####################################
+## <summary>
+##      Dontaudit the specified domain to write cfengine's log files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`cfengine_dontaudit_write_log',`
+        gen_require(`
+                type cfengine_var_log_t;
+        ')
+
+		dontaudit $1 cfengine_var_log_t:file write;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cfengine.te serefpolicy-3.7.19/policy/modules/services/cfengine.te
--- nsaserefpolicy/policy/modules/services/cfengine.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cfengine.te	2012-04-17 15:12:55.094468404 +0000
@@ -0,0 +1,113 @@
+policy_module(cfengine, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute cfengine_domain;
+
+cfengine_domain_template(serverd)
+cfengine_domain_template(execd)
+cfengine_domain_template(monitord)
+
+type cfengine_initrc_exec_t;
+init_script_file(cfengine_initrc_exec_t)
+
+type cfengine_var_lib_t;
+files_type(cfengine_var_lib_t)
+
+type cfengine_var_log_t;
+logging_log_file(cfengine_var_log_t)
+
+#######################################
+#
+# cfengine domain local policy
+#
+
+allow cfengine_domain self:fifo_file rw_fifo_file_perms;
+allow cfengine_domain self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(cfengine_domain, cfengine_var_lib_t, cfengine_var_lib_t)
+manage_files_pattern(cfengine_domain, cfengine_var_lib_t, cfengine_var_lib_t)
+manage_lnk_files_pattern(cfengine_domain, cfengine_var_lib_t, cfengine_var_lib_t)
+files_var_lib_filetrans(cfengine_domain, cfengine_var_lib_t, { dir file })
+
+manage_files_pattern(cfengine_domain, cfengine_var_log_t,cfengine_var_log_t)
+manage_dirs_pattern(cfengine_domain, cfengine_var_log_t,cfengine_var_log_t)
+logging_log_filetrans(cfengine_domain,cfengine_var_log_t,{ dir file })
+
+kernel_read_system_state(cfengine_domain)
+
+corecmd_exec_bin(cfengine_domain)
+corecmd_exec_shell(cfengine_domain)
+
+dev_read_urand(cfengine_domain)
+dev_read_sysfs(cfengine_domain)
+
+
+logging_send_syslog_msg(cfengine_domain)
+
+miscfiles_read_localization(cfengine_domain)
+
+sysnet_dns_name_resolve(cfengine_domain)
+sysnet_domtrans_ifconfig(cfengine_domain)
+
+files_read_etc_files(cfengine_domain)
+
+########################################
+#
+# cfengine-server local policy
+#
+
+allow cfengine_serverd_t self:capability { chown kill setgid setuid sys_chroot };
+allow cfengine_serverd_t self:process { fork setfscreate signal };
+
+domain_use_interactive_fds(cfengine_serverd_t)
+
+auth_use_nsswitch(cfengine_serverd_t)
+
+optional_policy(`
+	unconfined_domain(cfengine_serverd_t)
+')
+
+########################################
+#
+# cfengine_exec local policy
+#
+
+allow cfengine_execd_t self:capability { chown kill setgid setuid sys_chroot sys_ptrace };
+allow cfengine_execd_t self:process { fork setfscreate signal };
+
+kernel_read_sysctl(cfengine_execd_t)
+
+domain_read_all_domains_state(cfengine_execd_t)
+domain_use_interactive_fds(cfengine_execd_t)
+
+auth_use_nsswitch(cfengine_execd_t)
+
+optional_policy(`
+	unconfined_domain(cfengine_execd_t)
+')
+
+########################################
+#
+# cfengine_monitord local policy
+#
+
+allow cfengine_monitord_t self:capability { chown kill setgid setuid sys_chroot sys_ptrace };
+allow cfengine_monitord_t self:process { fork setfscreate signal };
+
+kernel_read_hotplug_sysctls(cfengine_monitord_t)
+kernel_read_network_state(cfengine_monitord_t)
+
+domain_read_all_domains_state(cfengine_monitord_t)
+domain_use_interactive_fds(cfengine_monitord_t)
+
+fs_getattr_xattr_fs(cfengine_monitord_t)
+
+auth_use_nsswitch(cfengine_monitord_t)
+
+optional_policy(`
+	unconfined_domain(cfengine_monitord_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cgroup.fc serefpolicy-3.7.19/policy/modules/services/cgroup.fc
--- nsaserefpolicy/policy/modules/services/cgroup.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cgroup.fc	2011-03-17 07:21:03.876851002 +0000
@@ -0,0 +1,15 @@
+/etc/cgconfig.conf		--	gen_context(system_u:object_r:cgconfig_etc_t,s0)
+/etc/cgrules.conf		--	gen_context(system_u:object_r:cgrules_etc_t,s0)
+
+/etc/sysconfig/cgconfig     --  gen_context(system_u:object_r:cgconfig_etc_t,s0)
+/etc/sysconfig/cgred.conf   --  gen_context(system_u:object_r:cgrules_etc_t,s0)
+
+/etc/rc\.d/init\.d/cgconfig	--	gen_context(system_u:object_r:cgconfig_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/cgred	--	gen_context(system_u:object_r:cgred_initrc_exec_t,s0)
+
+/sbin/cgconfigparser		--	gen_context(system_u:object_r:cgconfig_exec_t,s0)
+/sbin/cgrulesengd		--	gen_context(system_u:object_r:cgred_exec_t,s0)
+/sbin/cgclear           --  gen_context(system_u:object_r:cgclear_exec_t,s0)
+
+/var/log/cgrulesengd\.log   --  gen_context(system_u:object_r:cgred_log_t,s0)
+/var/run/cgred.*			gen_context(system_u:object_r:cgred_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cgroup.if serefpolicy-3.7.19/policy/modules/services/cgroup.if
--- nsaserefpolicy/policy/modules/services/cgroup.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cgroup.if	2011-03-17 07:21:05.151851001 +0000
@@ -0,0 +1,147 @@
+## <summary>libcg is a library that abstracts the control group file system in Linux.</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run
+##	CG config parser.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`cgroup_domtrans_cgconfig',`
+	gen_require(`
+		type cgconfig_t, cgconfig_exec_t;
+	')
+
+	domtrans_pattern($1, cgconfig_exec_t, cgconfig_t)
+	corecmd_search_bin($1)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run
+##	CG config parser.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`cgroup_initrc_domtrans_cgconfig',`
+	gen_require(`
+		type cgconfig_initrc_exec_t;
+	')
+
+	files_search_etc($1)
+	init_labeled_script_domtrans($1, cgconfig_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run
+##	CG rules engine daemon.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`cgroup_domtrans_cgred',`
+	gen_require(`
+		type cgred_t, cgred_exec_t;
+	')
+
+	domtrans_pattern($1, cgred_exec_t, cgred_t)
+	corecmd_search_bin($1)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run
+## 	CG rules engine daemon.
+##	domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`cgroup_initrc_domtrans_cgred',`
+	gen_require(`
+		type cgred_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, cgred_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Connect to CG rules engine daemon
+##	over unix stream sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`cgroup_stream_connect', `
+	gen_require(`
+		type cgred_var_run_t, cgred_t;
+	')
+
+	stream_connect_pattern($1, cgred_var_run_t, cgred_var_run_t, cgred_t)
+	files_search_pids($1)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an cgroup environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`cgroup_admin',`
+	gen_require(`
+		type cgred_t, cgconfig_t, cgred_var_run_t;
+		type cgconfig_etc_t, cgconfig_initrc_exec_t, cgred_initrc_exec_t;
+		type cgrules_etc_t;
+	')
+
+	allow $1 cgconfig_t:process { ptrace signal_perms getattr };
+	read_files_pattern($1, cgconfig_t, cgconfig_t)
+
+	allow $1 cgred_t:process { ptrace signal_perms getattr };
+	read_files_pattern($1, cgred_t, cgred_t)
+
+	admin_pattern($1, cgconfig_etc_t)
+	admin_pattern($1, cgrules_etc_t)
+	files_search_etc($1)
+
+	admin_pattern($1, cgred_var_run_t)
+	files_search_pids($1)
+
+	cgroup_initrc_domtrans_cgconfig($1)
+	domain_system_change_exemption($1)
+	role_transition $2 cgconfig_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	cgroup_initrc_domtrans_cgred($1)
+	role_transition $2 cgred_initrc_exec_t system_r;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cgroup.te serefpolicy-3.7.19/policy/modules/services/cgroup.te
--- nsaserefpolicy/policy/modules/services/cgroup.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cgroup.te	2012-03-29 12:57:38.529549092 +0000
@@ -0,0 +1,110 @@
+policy_module(cgroup, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type cgclear_t;
+type cgclear_exec_t;
+init_daemon_domain(cgclear_t, cgclear_exec_t)
+
+type cgred_t;
+type cgred_exec_t;
+init_daemon_domain(cgred_t, cgred_exec_t)
+
+type cgred_initrc_exec_t;
+init_script_file(cgred_initrc_exec_t)
+
+type cgred_log_t;
+logging_log_file(cgred_log_t)
+
+type cgred_var_run_t;
+files_pid_file(cgred_var_run_t)
+
+type cgrules_etc_t;
+files_config_file(cgrules_etc_t)
+
+type cgconfig_t alias cgconfigparser_t;
+type cgconfig_exec_t alias cgconfigparser_exec_t;
+init_daemon_domain(cgconfig_t, cgconfig_exec_t)
+
+type cgconfig_initrc_exec_t;
+init_script_file(cgconfig_initrc_exec_t)
+
+type cgconfig_etc_t;
+files_config_file(cgconfig_etc_t)
+
+#######################################
+#
+# cgclear personal policy.
+#
+allow cgclear_t self:capability { dac_read_search dac_override sys_admin };
+
+kernel_read_system_state(cgclear_t)
+
+domain_setpriority_all_domains(cgclear_t)
+
+fs_manage_cgroup_dirs(cgclear_t)
+fs_manage_cgroup_files(cgclear_t)
+fs_unmount_cgroup(cgclear_t)
+
+########################################
+#
+# cgconfig personal policy.
+#
+
+allow cgconfig_t self:capability { dac_override fowner fsetid chown sys_admin };
+
+allow cgconfig_t cgconfig_etc_t:file read_file_perms;
+
+kernel_list_unlabeled(cgconfig_t)
+kernel_read_system_state(cgconfig_t)
+
+files_read_etc_files(cgconfig_t)
+
+fs_manage_cgroup_dirs(cgconfig_t)
+fs_manage_cgroup_files(cgconfig_t)
+fs_mount_cgroup(cgconfig_t)
+fs_mounton_cgroup(cgconfig_t)
+fs_unmount_cgroup(cgconfig_t)
+
+auth_use_nsswitch(cgconfig_t)
+
+########################################
+#
+# cgred personal policy.
+#
+
+allow cgred_t self:capability { chown fsetid net_admin sys_admin sys_ptrace dac_override };
+allow cgred_t self:netlink_socket { write bind create read };
+allow cgred_t self:unix_dgram_socket { write create connect };
+
+allow cgred_t cgrules_etc_t:file read_file_perms;
+
+manage_files_pattern(cgred_t, cgred_log_t, cgred_log_t)
+logging_log_filetrans(cgred_t, cgred_log_t, file)
+
+manage_files_pattern(cgred_t, cgred_var_run_t, cgred_var_run_t)
+manage_sock_files_pattern(cgred_t, cgred_var_run_t, cgred_var_run_t)
+files_pid_filetrans(cgred_t, cgred_var_run_t, { file sock_file })
+
+kernel_read_system_state(cgred_t)
+
+mcs_file_read_all(cgred_t)
+
+domain_read_all_domains_state(cgred_t)
+domain_setpriority_all_domains(cgred_t)
+
+files_getattr_all_files(cgred_t)
+files_getattr_all_sockets(cgred_t)
+files_read_all_symlinks(cgred_t)
+files_read_etc_files(cgred_t)
+
+fs_write_cgroup_files(cgred_t)
+
+auth_use_nsswitch(cgred_t)
+
+logging_send_syslog_msg(cgred_t)
+
+miscfiles_read_localization(cgred_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/chronyd.if serefpolicy-3.7.19/policy/modules/services/chronyd.if
--- nsaserefpolicy/policy/modules/services/chronyd.if	2011-03-17 07:21:21.872851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/chronyd.if	2011-03-17 07:21:04.471851002 +0000
@@ -19,6 +19,24 @@
 	domtrans_pattern($1, chronyd_exec_t, chronyd_t)
 ')
 
+########################################
+## <summary>
+##	Execute chronyd server in the chronyd  domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`chronyd_initrc_domtrans',`
+	gen_require(`
+		type chronyd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, chronyd_initrc_exec_t)
+')
+
 ####################################
 ## <summary>
 ##	Execute chronyd
@@ -56,6 +74,64 @@
 	read_files_pattern($1, chronyd_var_log_t, chronyd_var_log_t)
 ')
 
+########################################
+## <summary>
+##	Read and write chronyd shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`chronyd_rw_shm',`
+	gen_require(`
+		type chronyd_t, chronyd_tmpfs_t;
+	')
+
+	allow $1 chronyd_t:shm rw_shm_perms;
+	allow $1 chronyd_tmpfs_t:dir list_dir_perms;
+	rw_files_pattern($1, chronyd_tmpfs_t, chronyd_tmpfs_t)
+	read_lnk_files_pattern($1, chronyd_tmpfs_t, chronyd_tmpfs_t)
+	fs_search_tmpfs($1)
+')
+
+########################################
+## <summary>
+##	Read chronyd keys files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`chronyd_read_keys',`
+	gen_require(`
+		type chronyd_keys_t;
+	')
+
+	read_files_pattern($1, chronyd_keys_t, chronyd_keys_t)
+')
+
+########################################
+## <summary>
+##	Append chronyd keys files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`chronyd_append_keys',`
+	gen_require(`
+		type chronyd_keys_t;
+	')
+
+	append_files_pattern($1, chronyd_keys_t, chronyd_keys_t)
+')
+
 ####################################
 ## <summary>
 ##	All of the rules required to administrate
@@ -75,9 +151,10 @@
 #
 interface(`chronyd_admin',`
 	gen_require(`
-		type chronyd_t, chronyd_var_log_t;
-		type chronyd_var_run_t, chronyd_var_lib_t;
-		type chronyd_initrc_exec_t, chronyd_keys_t;
+		type chronyd_t, chronyd_initrc_exec_t;
+		type chronyd_keys_t, chronyd_var_log_t; 
+        type chronyd_var_lib_t, chronyd_var_run_t;
+		type chronyd_tmpfs_t;
 	')
 
 	allow $1 chronyd_t:process { ptrace signal_perms };
@@ -101,5 +178,6 @@
 	admin_pattern($1, chronyd_var_run_t)
 
 	files_search_tmp($1)
-	admin_pattern($1, chronyd_tmp_t)
+	admin_pattern($1, chronyd_tmpfs_t)
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/chronyd.te serefpolicy-3.7.19/policy/modules/services/chronyd.te
--- nsaserefpolicy/policy/modules/services/chronyd.te	2011-03-17 07:21:20.905851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/chronyd.te	2011-03-17 07:21:03.294851003 +0000
@@ -16,6 +16,9 @@
 type chronyd_keys_t;
 files_type(chronyd_keys_t)
 
+type chronyd_tmpfs_t;
+files_tmpfs_file(chronyd_tmpfs_t)
+
 type chronyd_var_lib_t;
 files_type(chronyd_var_lib_t)
 
@@ -25,6 +28,7 @@
 type chronyd_var_run_t;
 files_pid_file(chronyd_var_run_t)
 
+
 ########################################
 #
 # Local policy
@@ -38,6 +42,10 @@
 
 allow chronyd_t chronyd_keys_t:file read_file_perms;
 
+manage_dirs_pattern(chronyd_t, chronyd_tmpfs_t, chronyd_tmpfs_t)
+manage_files_pattern(chronyd_t, chronyd_tmpfs_t, chronyd_tmpfs_t)
+fs_tmpfs_filetrans(chronyd_t, chronyd_tmpfs_t, { dir file })
+
 manage_files_pattern(chronyd_t, chronyd_var_lib_t, chronyd_var_lib_t)
 manage_dirs_pattern(chronyd_t, chronyd_var_lib_t, chronyd_var_lib_t)
 manage_sock_files_pattern(chronyd_t, chronyd_var_lib_t, chronyd_var_lib_t)
@@ -51,7 +59,13 @@
 manage_dirs_pattern(chronyd_t, chronyd_var_run_t, chronyd_var_run_t)
 files_pid_filetrans(chronyd_t, chronyd_var_run_t, file)
 
+kernel_read_system_state(chronyd_t)
+
+corecmd_exec_shell(chronyd_t)
+
+corenet_udp_bind_generic_node(chronyd_t)
 corenet_udp_bind_ntp_port(chronyd_t)
+
 # bind to udp/323
 corenet_udp_bind_chronyd_port(chronyd_t)
 
@@ -64,6 +78,8 @@
 
 miscfiles_read_localization(chronyd_t)
 
+mta_send_mail(chronyd_t)
+
 optional_policy(`
 	gpsd_rw_shm(chronyd_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/clamav.fc serefpolicy-3.7.19/policy/modules/services/clamav.fc
--- nsaserefpolicy/policy/modules/services/clamav.fc	2011-03-17 07:21:22.038851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/clamav.fc	2011-03-17 07:21:04.773851002 +0000
@@ -10,6 +10,7 @@
 
 /var/clamav(/.*)?			gen_context(system_u:object_r:clamd_var_lib_t,s0)
 /var/lib/clamav(/.*)?			gen_context(system_u:object_r:clamd_var_lib_t,s0)
+/var/lib/clamd.*			gen_context(system_u:object_r:clamd_var_lib_t,s0)
 /var/log/clamav.*			gen_context(system_u:object_r:clamd_var_log_t,s0)
 /var/log/clamav/freshclam.*	--	gen_context(system_u:object_r:freshclam_var_log_t,s0)
 /var/log/clamd.*			gen_context(system_u:object_r:clamd_var_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/clamav.if serefpolicy-3.7.19/policy/modules/services/clamav.if
--- nsaserefpolicy/policy/modules/services/clamav.if	2011-03-17 07:21:21.020851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/clamav.if	2012-07-17 09:12:15.147949346 +0000
@@ -49,12 +49,12 @@
 #
 interface(`clamav_append_log',`
 	gen_require(`
-		type clamav_log_t;
+		type clamd_var_log_t;
 	')
 
 	logging_search_logs($1)
-	allow $1 clamav_log_t:dir list_dir_perms;
-	append_files_pattern($1, clamav_log_t, clamav_log_t)
+	allow $1 clamd_var_log_t:dir list_dir_perms;
+	append_files_pattern($1, clamd_var_log_t, clamd_var_log_t)
 ')
 
 ########################################
@@ -95,6 +95,25 @@
 	allow $1 clamd_var_lib_t:dir search_dir_perms;
 ')
 
+#####################################
+## <summary>
+##      Read clamd state files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`clamav_read_state_clamd',`
+        gen_require(`
+                type clamd_t;
+        ')
+
+        kernel_search_proc($1)
+        ps_process_pattern($1, clamd_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute a domain transition to run clamscan.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/clamav.te serefpolicy-3.7.19/policy/modules/services/clamav.te
--- nsaserefpolicy/policy/modules/services/clamav.te	2011-03-17 07:21:21.586851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/clamav.te	2012-07-17 13:31:25.698051987 +0000
@@ -1,6 +1,13 @@
 
 policy_module(clamav, 1.7.1)
 
+## <desc>
+## <p>
+## Allow clamd to use JIT compiler
+## </p>
+## </desc>
+gen_tunable(clamd_use_jit, false)
+
 ########################################
 #
 # Declarations
@@ -57,6 +64,9 @@
 #
 
 allow clamd_t self:capability { kill setgid setuid dac_override };
+dontaudit clamd_t self:capability sys_tty_config;
+allow clamd_t self:process signal;
+ 
 allow clamd_t self:fifo_file rw_fifo_file_perms;
 allow clamd_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow clamd_t self:unix_dgram_socket create_socket_perms;
@@ -75,6 +85,7 @@
 # var/lib files for clamd
 manage_dirs_pattern(clamd_t, clamd_var_lib_t, clamd_var_lib_t)
 manage_files_pattern(clamd_t, clamd_var_lib_t, clamd_var_lib_t)
+manage_sock_files_pattern(clamd_t, clamd_var_lib_t, clamd_var_lib_t)
 
 # log files
 manage_dirs_pattern(clamd_t, clamd_var_log_t, clamd_var_log_t)
@@ -104,6 +115,7 @@
 corenet_tcp_bind_clamd_port(clamd_t)
 corenet_tcp_bind_generic_port(clamd_t)
 corenet_tcp_connect_generic_port(clamd_t)
+corenet_tcp_connect_clamd_port(clamd_t)
 corenet_sendrecv_clamd_server_packets(clamd_t)
 
 dev_read_rand(clamd_t)
@@ -125,9 +137,6 @@
 cron_use_system_job_fds(clamd_t)
 cron_rw_pipes(clamd_t)
 
-mta_read_config(clamd_t)
-mta_send_mail(clamd_t)
-
 optional_policy(`
 	amavis_read_lib_files(clamd_t)
 	amavis_read_spool_files(clamd_t)
@@ -136,9 +145,18 @@
 ')
 
 optional_policy(`
+	mta_read_config(clamd_t)
+	mta_send_mail(clamd_t)
+')
+
+optional_policy(`
 	exim_read_spool_files(clamd_t)
 ')
 
+optional_policy(`
+	spamd_stream_connect(clamd_t)
+	spamassassin_read_pid_files(clamd_t)
+')
 ########################################
 #
 # Freshclam local policy
@@ -167,9 +185,16 @@
 # log files (own logfiles only)
 manage_files_pattern(freshclam_t, freshclam_var_log_t, freshclam_var_log_t)
 allow freshclam_t freshclam_var_log_t:dir setattr;
-allow freshclam_t clamd_var_log_t:dir search_dir_perms;
+read_files_pattern(freshclam_t, clamd_var_log_t, clamd_var_log_t)
 logging_log_filetrans(freshclam_t, freshclam_var_log_t, file)
 
+kernel_read_kernel_sysctls(freshclam_t)
+kernel_read_network_state(freshclam_t)
+kernel_read_system_state(freshclam_t)
+
+corecmd_exec_shell(freshclam_t)
+corecmd_exec_bin(freshclam_t)
+
 corenet_all_recvfrom_unlabeled(freshclam_t)
 corenet_all_recvfrom_netlabel(freshclam_t)
 corenet_tcp_sendrecv_generic_if(freshclam_t)
@@ -177,8 +202,11 @@
 corenet_tcp_sendrecv_all_ports(freshclam_t)
 corenet_tcp_sendrecv_clamd_port(freshclam_t)
 corenet_tcp_connect_http_port(freshclam_t)
+corenet_tcp_connect_clamd_port(freshclam_t)
 corenet_sendrecv_http_client_packets(freshclam_t)
 
+corecmd_exec_shell(freshclam_t)
+
 dev_read_rand(freshclam_t)
 dev_read_urand(freshclam_t)
 
@@ -189,14 +217,24 @@
 
 auth_use_nsswitch(freshclam_t)
 
+logging_send_syslog_msg(freshclam_t)
+
 miscfiles_read_localization(freshclam_t)
 
 clamav_stream_connect(freshclam_t)
 
+userdom_stream_connect(freshclam_t)
+
 optional_policy(`
 	cron_system_entry(freshclam_t, freshclam_exec_t)
 ')
 
+tunable_policy(`clamd_use_jit',`
+        allow freshclam_t self:process execmem;
+', `
+        dontaudit freshclam_t self:process execmem;
+')
+
 ########################################
 #
 # clamscam local policy
@@ -228,9 +266,11 @@
 corenet_tcp_sendrecv_generic_node(clamscan_t)
 corenet_tcp_sendrecv_all_ports(clamscan_t)
 corenet_tcp_sendrecv_clamd_port(clamscan_t)
+corenet_tcp_bind_generic_node(clamscan_t)
 corenet_tcp_connect_clamd_port(clamscan_t)
 
 kernel_read_kernel_sysctls(clamscan_t)
+kernel_read_system_state(clamscan_t)
 
 files_read_etc_files(clamscan_t)
 files_read_etc_runtime_files(clamscan_t)
@@ -245,9 +285,20 @@
 clamav_stream_connect(clamscan_t)
 
 mta_send_mail(clamscan_t)
+mta_read_queue(clamscan_t)
+
+sysnet_read_config(clamscan_t)
+
+tunable_policy(`clamd_use_jit',`
+	allow clamd_t self:process execmem;
+	allow clamscan_t self:process execmem;
+', ` 
+	dontaudit clamd_t self:process execmem;
+	dontaudit clamscan_t self:process execmem;
+') 
 
 optional_policy(`
-	amavis_read_spool_files(clamscan_t)
+	amavis_manage_spool_files(clamscan_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/clogd.fc serefpolicy-3.7.19/policy/modules/services/clogd.fc
--- nsaserefpolicy/policy/modules/services/clogd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/clogd.fc	2011-03-17 07:21:04.918851001 +0000
@@ -0,0 +1,4 @@
+
+/usr/sbin/clogd			--	gen_context(system_u:object_r:clogd_exec_t,s0)
+
+/var/run/clogd\.pid             --      gen_context(system_u:object_r:clogd_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/clogd.if serefpolicy-3.7.19/policy/modules/services/clogd.if
--- nsaserefpolicy/policy/modules/services/clogd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/clogd.if	2011-03-17 07:21:03.897851001 +0000
@@ -0,0 +1,82 @@
+## <summary>clogd - clustered mirror log server</summary>
+
+######################################
+## <summary>
+##      Execute a domain transition to run clogd.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`clogd_domtrans',`
+        gen_require(`
+                type clogd_t, clogd_exec_t;
+        ')
+
+        corecmd_search_bin($1)
+        domtrans_pattern($1,clogd_exec_t,clogd_t)
+
+')
+
+#####################################
+## <summary>
+##      Connect to clogd over a unix domain
+##      stream socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`clogd_stream_connect',`
+        gen_require(`
+                type clogd_t, clogd_var_run_t;
+        ')
+
+        files_search_pids($1)
+        stream_connect_pattern($1, clogd_var_run_t, clogd_var_run_t, clogd_t)
+')
+
+#####################################
+## <summary>
+##      Allow read and write access to clogd semaphores.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`clogd_rw_semaphores',`
+        gen_require(`
+                type clogd_t;
+        ')
+
+        allow $1 clogd_t:sem { rw_sem_perms destroy };
+')
+
+########################################
+## <summary>
+##      Read and write to group shared memory.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`clogd_rw_shm',`
+        gen_require(`
+                type clogd_t, clogd_tmpfs_t;
+        ')
+
+        allow $1 clogd_t:shm { rw_shm_perms destroy };
+		allow $1 clogd_tmpfs_t:dir list_dir_perms;
+        rw_files_pattern($1, clogd_tmpfs_t, clogd_tmpfs_t)
+        read_lnk_files_pattern($1, clogd_tmpfs_t, clogd_tmpfs_t)
+        fs_search_tmpfs($1)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/clogd.te serefpolicy-3.7.19/policy/modules/services/clogd.te
--- nsaserefpolicy/policy/modules/services/clogd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/clogd.te	2011-08-30 14:18:02.327160001 +0000
@@ -0,0 +1,63 @@
+
+policy_module(clogd,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type clogd_t;
+type clogd_exec_t;
+init_daemon_domain(clogd_t, clogd_exec_t)
+
+type clogd_tmpfs_t;
+files_tmpfs_file(clogd_tmpfs_t)
+
+# pid files
+type clogd_var_run_t;
+files_pid_file(clogd_var_run_t)
+
+########################################
+#
+# clogd local policy
+#
+
+allow clogd_t self:capability { net_admin mknod };
+allow clogd_t self:process { signal };
+
+allow clogd_t self:sem create_sem_perms;
+allow clogd_t self:shm create_shm_perms;
+allow clogd_t self:netlink_socket create_socket_perms;
+allow clogd_t self:unix_dgram_socket create_socket_perms;
+
+manage_dirs_pattern(clogd_t, clogd_tmpfs_t, clogd_tmpfs_t)
+manage_files_pattern(clogd_t, clogd_tmpfs_t, clogd_tmpfs_t)
+fs_tmpfs_filetrans(clogd_t, clogd_tmpfs_t,{ dir file })
+
+# pid files
+manage_files_pattern(clogd_t, clogd_var_run_t, clogd_var_run_t)
+manage_sock_files_pattern(clogd_t, clogd_var_run_t, clogd_var_run_t)
+files_pid_filetrans(clogd_t,clogd_var_run_t, { file })
+
+dev_manage_generic_blk_files(clogd_t)
+
+storage_raw_read_fixed_disk(clogd_t)
+storage_raw_write_fixed_disk(clogd_t)
+
+libs_use_ld_so(clogd_t)
+libs_use_shared_libs(clogd_t)
+
+logging_send_syslog_msg(clogd_t)
+
+miscfiles_read_localization(clogd_t)
+
+optional_policy(`
+	aisexec_stream_connect(clogd_t)
+	corosync_stream_connect(clogd_t)
+')
+
+optional_policy(`
+        dev_read_lvm_control(clogd_t)
+')
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cloudform.fc serefpolicy-3.7.19/policy/modules/services/cloudform.fc
--- nsaserefpolicy/policy/modules/services/cloudform.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cloudform.fc	2011-11-03 15:30:30.944761803 +0000
@@ -0,0 +1,23 @@
+/etc/rc\.d/init\.d/iwhd --      gen_context(system_u:object_r:iwhd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/mongod	--	gen_context(system_u:object_r:mongod_initrc_exec_t,s0)
+
+/usr/bin/deltacloudd		--	gen_context(system_u:object_r:deltacloudd_exec_t,s0)
+/usr/bin/iwhd           --      gen_context(system_u:object_r:iwhd_exec_t,s0)
+/usr/bin/mongod		--	gen_context(system_u:object_r:mongod_exec_t,s0)
+/usr/bin/thin		--	gen_context(system_u:object_r:thin_exec_t,s0)
+
+/usr/share/aeolus-conductor/dbomatic/dbomatic  --      gen_context(system_u:object_r:mongod_exec_t,s0)
+
+/var/lib/iwhd(/.*)?             gen_context(system_u:object_r:iwhd_var_lib_t,s0)
+/var/lib/mongodb(/.*)?		gen_context(system_u:object_r:mongod_var_lib_t,s0)
+
+/var/log/deltacloud-core(/.*)?	gen_context(system_u:object_r:deltacloudd_log_t,s0)
+/var/log/iwhd\.log		--		gen_context(system_u:object_r:iwhd_log_t,s0)
+/var/log/mongodb(/.*)?		gen_context(system_u:object_r:mongod_log_t,s0)
+
+/var/run/aeolus/dbomatic\.pid   --  gen_context(system_u:object_r:mongod_var_run_t,s0)
+/var/run/aeolus/thin\.pid      --      gen_context(system_u:object_r:thin_var_run_t,s0)
+/var/run/iwhd\.pid               --      gen_context(system_u:object_r:iwhd_var_run_t,s0)
+/var/run/mongodb(/.*)?		gen_context(system_u:object_r:mongod_var_run_t,s0)
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cloudform.if serefpolicy-3.7.19/policy/modules/services/cloudform.if
--- nsaserefpolicy/policy/modules/services/cloudform.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cloudform.if	2011-11-21 19:09:03.397387139 +0000
@@ -0,0 +1,41 @@
+## <summary>cloudform policy</summary>
+
+#######################################
+## <summary>
+##  Creates types and rules for a basic
+##  cloudform daemon domain.
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+template(`cloudform_domain_template',`
+    gen_require(`
+        attribute cloudform_domain;
+    ')
+
+    type $1_t, cloudform_domain;
+    type $1_exec_t;
+    init_daemon_domain($1_t, $1_exec_t)
+
+')
+
+######################################
+## <summary>
+##     Execute mongod in the caller domain.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`cloudform_exec_mongod',`
+    gen_require(`
+       type mongod_exec_t;
+    ')
+ 
+    can_exec($1, mongod_exec_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cloudform.te serefpolicy-3.7.19/policy/modules/services/cloudform.te
--- nsaserefpolicy/policy/modules/services/cloudform.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cloudform.te	2012-05-21 13:27:01.505573115 +0000
@@ -0,0 +1,238 @@
+policy_module(cloudform, 1.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute cloudform_domain;
+
+cloudform_domain_template(deltacloudd)
+cloudform_domain_template(iwhd)
+cloudform_domain_template(mongod)
+cloudform_domain_template(thin)
+
+type deltacloudd_log_t;
+logging_log_file(deltacloudd_log_t)
+
+type deltacloudd_tmp_t;
+files_tmp_file(deltacloudd_tmp_t)
+
+type iwhd_initrc_exec_t;
+init_script_file(iwhd_initrc_exec_t)
+
+type iwhd_var_lib_t;
+files_type(iwhd_var_lib_t)
+
+type iwhd_var_run_t;
+files_pid_file(iwhd_var_run_t)
+
+type mongod_initrc_exec_t;
+init_script_file(mongod_initrc_exec_t)
+
+type mongod_log_t;
+logging_log_file(mongod_log_t)
+
+type mongod_var_lib_t;
+files_type(mongod_var_lib_t)
+
+type mongod_tmp_t;
+files_tmp_file(mongod_tmp_t)
+
+type mongod_var_run_t;
+files_pid_file(mongod_var_run_t)
+
+type thin_var_run_t;
+files_pid_file(thin_var_run_t)
+
+type iwhd_log_t;
+logging_log_file(iwhd_log_t)
+
+########################################
+#
+# cloudform_domain local policy
+#
+
+allow cloudform_domain self:fifo_file rw_fifo_file_perms;
+allow cloudform_domain self:tcp_socket create_stream_socket_perms;
+
+dev_read_urand(cloudform_domain)
+
+files_read_etc_files(cloudform_domain)
+
+miscfiles_read_certs(cloudform_domain)
+miscfiles_read_localization(cloudform_domain)
+
+########################################
+#
+# deltacloudd local policy
+#
+
+allow deltacloudd_t self:capability { dac_override setuid setgid };
+
+allow deltacloudd_t self:netlink_route_socket r_netlink_socket_perms;
+allow deltacloudd_t self:udp_socket create_socket_perms;
+
+allow deltacloudd_t self:process signal;
+
+allow deltacloudd_t self:fifo_file rw_fifo_file_perms;
+allow deltacloudd_t self:tcp_socket create_stream_socket_perms;
+allow deltacloudd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(deltacloudd_t, deltacloudd_log_t, deltacloudd_log_t)
+manage_dirs_pattern(deltacloudd_t, deltacloudd_log_t, deltacloudd_log_t)
+logging_log_filetrans(deltacloudd_t, deltacloudd_log_t, { file dir })
+
+manage_dirs_pattern(deltacloudd_t, deltacloudd_tmp_t, deltacloudd_tmp_t)
+manage_files_pattern(deltacloudd_t, deltacloudd_tmp_t, deltacloudd_tmp_t)
+files_tmp_filetrans(deltacloudd_t, deltacloudd_tmp_t, { file dir })
+
+kernel_read_kernel_sysctls(deltacloudd_t)
+kernel_read_system_state(deltacloudd_t)
+
+corecmd_exec_bin(deltacloudd_t)
+
+corenet_tcp_bind_generic_node(deltacloudd_t)
+corenet_tcp_bind_generic_port(deltacloudd_t)
+
+files_read_usr_files(deltacloudd_t)
+
+logging_send_syslog_msg(deltacloudd_t)
+
+optional_policy(`
+	sysnet_read_config(deltacloudd_t)
+')
+
+optional_policy(`
+	unconfined_domain(deltacloudd_t)
+')
+
+########################################
+#
+# iwhd local policy
+#
+
+allow iwhd_t self:capability { chown kill };
+allow iwhd_t self:process { fork };
+
+allow iwhd_t self:netlink_route_socket r_netlink_socket_perms;
+allow iwhd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(iwhd_t, iwhd_var_lib_t, iwhd_var_lib_t)
+manage_files_pattern(iwhd_t, iwhd_var_lib_t, iwhd_var_lib_t)
+
+manage_files_pattern(iwhd_t, iwhd_log_t, iwhd_log_t)
+logging_log_filetrans(iwhd_t, iwhd_log_t, { file })
+
+manage_dirs_pattern(iwhd_t, iwhd_var_run_t, iwhd_var_run_t)
+manage_files_pattern(iwhd_t, iwhd_var_run_t, iwhd_var_run_t)
+files_pid_filetrans(iwhd_t, iwhd_var_run_t, { dir file })
+
+kernel_read_system_state(iwhd_t)
+
+corenet_tcp_bind_generic_node(iwhd_t)
+corenet_tcp_bind_websm_port(iwhd_t)
+corenet_tcp_connect_all_ports(iwhd_t)
+
+dev_read_rand(iwhd_t)
+dev_read_urand(iwhd_t)
+
+tunable_policy(`use_nfs_home_dirs',`
+    fs_list_auto_mountpoints(iwhd_t)
+    fs_manage_nfs_dirs(iwhd_t)
+    fs_manage_nfs_files(iwhd_t)
+    fs_manage_nfs_symlinks(iwhd_t)
+')
+
+optional_policy(`
+    unconfined_domain(iwhd_t)
+')
+
+########################################
+#
+# mongod local policy
+#
+
+
+allow mongod_t self:process { execmem setsched signal };
+
+allow mongod_t self:netlink_route_socket r_netlink_socket_perms;
+allow mongod_t self:unix_stream_socket create_stream_socket_perms;
+allow mongod_t self:udp_socket create_socket_perms;
+
+manage_dirs_pattern(mongod_t, mongod_log_t, mongod_log_t)
+manage_files_pattern(mongod_t, mongod_log_t, mongod_log_t)
+
+manage_dirs_pattern(mongod_t, mongod_var_lib_t, mongod_var_lib_t)
+manage_files_pattern(mongod_t, mongod_var_lib_t, mongod_var_lib_t)
+
+manage_dirs_pattern(mongod_t, mongod_tmp_t, mongod_tmp_t)
+manage_files_pattern(mongod_t, mongod_tmp_t, mongod_tmp_t)
+manage_sock_files_pattern(mongod_t, mongod_tmp_t, mongod_tmp_t)
+files_tmp_filetrans(mongod_t, mongod_tmp_t, { file dir sock_file })
+
+manage_dirs_pattern(mongod_t, mongod_var_run_t, mongod_var_run_t)
+manage_files_pattern(mongod_t, mongod_var_run_t, mongod_var_run_t)
+#needed by dbomatic
+files_pid_filetrans(mongod_t, mongod_var_run_t, { file })
+
+kernel_read_system_state(mongod_t)
+kernel_read_vm_sysctls(mongod_t)
+
+corenet_tcp_bind_generic_node(mongod_t)
+corenet_tcp_bind_mongod_port(mongod_t)
+
+files_read_usr_files(mongod_t)
+
+optional_policy(`
+	mysql_stream_connect(mongod_t)
+')
+
+optional_policy(`
+	postgresql_stream_connect(mongod_t)
+')
+
+optional_policy(`
+	sysnet_dns_name_resolve(mongod_t)
+')
+
+optional_policy(`
+    unconfined_domain(mongod_t)
+')
+
+########################################
+#
+# thin local policy
+#
+
+allow thin_t self:capability { setuid kill setgid dac_override };
+
+allow thin_t self:netlink_route_socket r_netlink_socket_perms;
+allow thin_t self:udp_socket create_socket_perms;
+allow thin_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(thin_t, thin_var_run_t, thin_var_run_t)
+files_pid_filetrans(thin_t, thin_var_run_t, { file })
+
+corecmd_exec_bin(thin_t)
+
+corenet_tcp_bind_generic_node(thin_t)
+corenet_tcp_bind_ntop_port(thin_t)
+corenet_tcp_connect_postgresql_port(thin_t)
+corenet_tcp_connect_all_ports(iwhd_t)
+
+files_read_usr_files(thin_t)
+
+fs_search_auto_mountpoints(thin_t)
+
+init_read_utmp(thin_t)
+
+kernel_read_kernel_sysctls(thin_t)
+
+optional_policy(`
+	sysnet_read_config(thin_t)
+')
+
+optional_policy(`
+    unconfined_domain(thin_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cmirrord.fc serefpolicy-3.7.19/policy/modules/services/cmirrord.fc
--- nsaserefpolicy/policy/modules/services/cmirrord.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cmirrord.fc	2011-03-17 07:21:04.666851001 +0000
@@ -0,0 +1,6 @@
+
+/etc/rc\.d/init\.d/cmirrord	--	gen_context(system_u:object_r:cmirrord_initrc_exec_t,s0)
+
+/usr/sbin/cmirrord		--	gen_context(system_u:object_r:cmirrord_exec_t,s0)
+
+/var/run/cmirrord\.pid		--	gen_context(system_u:object_r:cmirrord_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cmirrord.if serefpolicy-3.7.19/policy/modules/services/cmirrord.if
--- nsaserefpolicy/policy/modules/services/cmirrord.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cmirrord.if	2011-03-17 07:21:03.296851002 +0000
@@ -0,0 +1,118 @@
+
+## <summary>policy for cmirrord</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run cmirrord.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`cmirrord_domtrans',`
+	gen_require(`
+		type cmirrord_t, cmirrord_exec_t;
+	')
+
+	domtrans_pattern($1, cmirrord_exec_t, cmirrord_t)
+')
+
+########################################
+## <summary>
+##	Execute cmirrord server in the cmirrord domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`cmirrord_initrc_domtrans',`
+	gen_require(`
+		type cmirrord_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, cmirrord_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Read cmirrord PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`cmirrord_read_pid_files',`
+	gen_require(`
+		type cmirrord_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 cmirrord_var_run_t:file read_file_perms;
+')
+
+#######################################
+## <summary>
+##      Read and write to cmirrord shared memory.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`cmirrord_rw_shm',`
+        gen_require(`
+                type cmirrord_t;
+				type cmirrord_tmpfs_t;
+        ')
+
+        allow $1 cmirrord_t:shm { rw_shm_perms destroy };
+        allow $1 cmirrord_tmpfs_t:dir list_dir_perms;
+        rw_files_pattern($1, cmirrord_tmpfs_t, cmirrord_tmpfs_t)
+		delete_files_pattern($1, cmirrord_tmpfs_t, cmirrord_tmpfs_t)
+		read_lnk_files_pattern($1, cmirrord_tmpfs_t, cmirrord_tmpfs_t)
+        fs_search_tmpfs($1)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an cmirrord environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`cmirrord_admin',`
+	gen_require(`
+		type cmirrord_t;
+		type cmirrord_initrc_exec_t;
+                type cmirrord_var_run_t;
+	')
+
+	allow $1 cmirrord_t:process { ptrace signal_perms };
+	ps_process_pattern($1, cmirrord_t)
+
+	cmirrord_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 cmirrord_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_pids($1)
+	admin_pattern($1, cmirrord_var_run_t)
+
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cmirrord.te serefpolicy-3.7.19/policy/modules/services/cmirrord.te
--- nsaserefpolicy/policy/modules/services/cmirrord.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cmirrord.te	2011-03-17 07:21:04.007851001 +0000
@@ -0,0 +1,66 @@
+
+policy_module(cmirrord,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type cmirrord_t;
+type cmirrord_exec_t;
+init_daemon_domain(cmirrord_t, cmirrord_exec_t)
+
+type cmirrord_initrc_exec_t;
+init_script_file(cmirrord_initrc_exec_t)
+
+type cmirrord_tmpfs_t;
+files_tmpfs_file(cmirrord_tmpfs_t)
+
+type cmirrord_var_run_t;
+files_pid_file(cmirrord_var_run_t)
+
+########################################
+#
+# cmirrord local policy
+#
+
+allow cmirrord_t self:capability { net_admin kill };
+dontaudit cmirrord_t self:capability sys_tty_config;
+allow cmirrord_t self:process { setfscreate signal fork};
+
+allow cmirrord_t self:fifo_file rw_fifo_file_perms;
+
+allow cmirrord_t self:sem create_sem_perms;
+allow cmirrord_t self:shm create_shm_perms;
+allow cmirrord_t self:netlink_socket create_socket_perms;
+allow cmirrord_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(cmirrord_t, cmirrord_tmpfs_t, cmirrord_tmpfs_t)
+manage_files_pattern(cmirrord_t, cmirrord_tmpfs_t, cmirrord_tmpfs_t)
+fs_tmpfs_filetrans(cmirrord_t, cmirrord_tmpfs_t, { dir file })
+
+manage_dirs_pattern(cmirrord_t, cmirrord_var_run_t, cmirrord_var_run_t)
+manage_files_pattern(cmirrord_t, cmirrord_var_run_t, cmirrord_var_run_t)
+files_pid_filetrans(cmirrord_t, cmirrord_var_run_t, { file })
+
+domain_use_interactive_fds(cmirrord_t)
+domain_obj_id_change_exemption(cmirrord_t)
+
+files_read_etc_files(cmirrord_t)
+
+storage_create_fixed_disk_dev(cmirrord_t)
+storage_raw_read_fixed_disk(cmirrord_t)
+storage_raw_write_fixed_disk(cmirrord_t)
+
+seutil_read_file_contexts(cmirrord_t)
+
+libs_use_ld_so(cmirrord_t)
+libs_use_shared_libs(cmirrord_t)
+
+logging_send_syslog_msg(cmirrord_t)
+
+miscfiles_read_localization(cmirrord_t)
+
+optional_policy(`
+        corosync_stream_connect(cmirrord_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cobbler.fc serefpolicy-3.7.19/policy/modules/services/cobbler.fc
--- nsaserefpolicy/policy/modules/services/cobbler.fc	2011-03-17 07:21:21.476851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cobbler.fc	2011-03-17 07:21:03.932851002 +0000
@@ -1,7 +1,33 @@
-/etc/cobbler(/.*)?		gen_context(system_u:object_r:cobbler_etc_t, s0)
-/etc/rc\.d/init\.d/cobblerd --	gen_context(system_u:object_r:cobblerd_initrc_exec_t, s0)
 
-/usr/bin/cobblerd	--	gen_context(system_u:object_r:cobblerd_exec_t, s0)
+/etc/cobbler(/.*)?					gen_context(system_u:object_r:cobbler_etc_t,s0)
+
+/etc/rc\.d/init\.d/cobblerd			--	gen_context(system_u:object_r:cobblerd_initrc_exec_t,s0)
+
+/usr/bin/cobblerd				--      gen_context(system_u:object_r:cobblerd_exec_t,s0)
+
+/var/lib/cobbler(/.*)?					gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+
+/var/lib/tftpboot/etc(/.*)?				gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/grub(/.*)?             gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/images(/.*)?                        	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/memdisk			--      gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/menu\.c32			--      gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/ppc(/.*)?				gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/pxelinux\.0			--	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/pxelinux\.cfg(/.*)?			gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/s390x(/.*)?				gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/yaboot			--      gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+
+/var/log/cobbler(/.*)?					gen_context(system_u:object_r:cobbler_var_log_t,s0)
+
+# This should removable when cobbler package installs /var/www/cobbler/rendered
+/var/www/cobbler(/.*)?					gen_context(system_u:object_r:httpd_cobbler_content_t,s0)
+
+/var/www/cobbler/images(/.*)?				gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/ks_mirror(/.*)?			gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/links(/.*)?				gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/localmirror(/.*)?			gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/pub(/.*)?				gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/rendered(/.*)?				gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/repo_mirror(/.*)?			gen_context(system_u:object_r:cobbler_var_lib_t,s0)
 
-/var/lib/cobbler(/.*)?		gen_context(system_u:object_r:cobbler_var_lib_t, s0)
-/var/log/cobbler(/.*)?		gen_context(system_u:object_r:cobbler_var_log_t, s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cobbler.if serefpolicy-3.7.19/policy/modules/services/cobbler.if
--- nsaserefpolicy/policy/modules/services/cobbler.if	2011-03-17 07:21:22.074851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cobbler.if	2011-05-09 16:26:26.985771000 +0000
@@ -1,12 +1,12 @@
 ## <summary>Cobbler installation server.</summary>
 ## <desc>
 ##	<p>
-##		Cobbler is a Linux installation server that allows for
-##		rapid setup of network installation environments. It
-##		glues together and automates many associated Linux
-##		tasks so you do not have to hop between lots of various
-##		commands and applications when rolling out new systems,
-##		and, in some cases, changing existing ones.
+##	Cobbler is a Linux installation server that allows for
+##	rapid setup of network installation environments. It
+##	glues together and automates many associated Linux
+##	tasks so you do not have to hop between lots of various
+##	commands and applications when rolling out new systems,
+##	and, in some cases, changing existing ones.
 ##	</p>
 ## </desc>
 
@@ -15,9 +15,9 @@
 ##	Execute a domain transition to run cobblerd.
 ## </summary>
 ## <param name="domain">
-## <summary>
+##	<summary>
 ##	Domain allowed to transition.
-## </summary>
+##	</summary>
 ## </param>
 #
 interface(`cobblerd_domtrans',`
@@ -26,6 +26,7 @@
 	')
 
 	domtrans_pattern($1, cobblerd_exec_t, cobblerd_t)
+	corecmd_search_bin($1)
 ')
 
 ########################################
@@ -34,7 +35,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -48,7 +49,7 @@
 
 ########################################
 ## <summary>
-##	Read Cobbler content in /etc
+##	List Cobbler configuration.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -56,32 +57,32 @@
 ##	</summary>
 ## </param>
 #
-interface(`cobbler_read_config',`
+interface(`cobbler_list_config',`
 	gen_require(`
 		type cobbler_etc_t;
 	')
 
-	read_files_pattern($1, cobbler_etc_t, cobbler_etc_t);
+	list_dirs_pattern($1, cobbler_etc_t, cobbler_etc_t)
 	files_search_etc($1)
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to read and write
-##  Cobbler log files (leaked fd).
+##	Read Cobbler configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
-interface(`cobbler_dontaudit_rw_log',`
+interface(`cobbler_read_config',`
 	gen_require(`
-		type cobbler_var_log_t;
+		type cobbler_etc_t;
 	')
 
-	dontaudit $1 cobbler_var_log_t:file rw_file_perms;
+	read_files_pattern($1, cobbler_etc_t, cobbler_etc_t)
+	files_search_etc($1)
 ')
 
 ########################################
@@ -100,6 +101,7 @@
 	')
 
 	search_dirs_pattern($1, cobbler_var_lib_t, cobbler_var_lib_t)
+	read_lnk_files_pattern($1, cobbler_var_lib_t, cobbler_var_lib_t)
 	files_search_var_lib($1)
 ')
 
@@ -118,7 +120,9 @@
 		type cobbler_var_lib_t;
 	')
 
+	allow $1 cobbler_var_lib_t:dir list_dir_perms;
 	read_files_pattern($1, cobbler_var_lib_t, cobbler_var_lib_t)
+	read_lnk_files_pattern($1, cobbler_var_lib_t, cobbler_var_lib_t)
 	files_search_var_lib($1)
 ')
 
@@ -137,13 +141,34 @@
 		type cobbler_var_lib_t;
 	')
 
+	manage_dirs_pattern($1, cobbler_var_lib_t, cobbler_var_lib_t)
 	manage_files_pattern($1, cobbler_var_lib_t, cobbler_var_lib_t)
+	manage_lnk_files_pattern($1, cobbler_var_lib_t, cobbler_var_lib_t)
 	files_search_var_lib($1)
 ')
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
+##	Do not audit attempts to read and write
+##	Cobbler log files (leaked fd).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`cobbler_dontaudit_rw_log',`
+	gen_require(`
+		type cobbler_var_log_t;
+	')
+
+	dontaudit $1 cobbler_var_log_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
 ##	an cobblerd environment
 ## </summary>
 ## <param name="domain">
@@ -161,23 +186,34 @@
 interface(`cobblerd_admin',`
 	gen_require(`
 		type cobblerd_t, cobbler_var_lib_t, cobbler_var_log_t;
-		type cobbler_etc_t, cobblerd_initrc_exec_t;
+		type cobbler_etc_t, cobblerd_initrc_exec_t, httpd_cobbler_content_t;
+		type httpd_cobbler_content_ra_t, httpd_cobbler_content_rw_t;
 	')
 
-	allow $1 cobblerd_t:process { ptrace signal_perms getattr };
-	read_files_pattern($1, cobblerd_t, cobblerd_t)
+	allow $1 cobblerd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, cobblerd_t)
 
-	files_search_etc($1)
+	files_list_etc($1)
 	admin_pattern($1, cobbler_etc_t)
 
 	files_list_var_lib($1)
 	admin_pattern($1, cobbler_var_lib_t)
 
-	files_search_var_log($1)
+	logging_list_logs($1)
 	admin_pattern($1, cobbler_var_log_t)
 
+	apache_list_sys_content($1)
+	admin_pattern($1, httpd_cobbler_content_t)
+	admin_pattern($1, httpd_cobbler_content_ra_t)
+	admin_pattern($1, httpd_cobbler_content_rw_t)
+
 	cobblerd_initrc_domtrans($1)
 	domain_system_change_exemption($1)
 	role_transition $2 cobblerd_initrc_exec_t system_r;
 	allow $2 system_r;
+
+	optional_policy(`
+		# traverse /var/lib/tftpdir to get to cobbler_var_lib_t there.
+		tftp_search_rw_content($1)
+	')
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cobbler.te serefpolicy-3.7.19/policy/modules/services/cobbler.te
--- nsaserefpolicy/policy/modules/services/cobbler.te	2011-03-17 07:21:21.710851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cobbler.te	2012-04-24 12:07:20.999779578 +0000
@@ -1,5 +1,4 @@
-
-policy_module(cobbler, 1.0.0) 
+policy_module(cobbler, 1.1.0)
 
 ########################################
 #
@@ -7,13 +6,35 @@
 #
 
 ## <desc>
-## <p>
-## Allow Cobbler to modify public files
-## used for public file transfer services.
-## </p>
+##	<p>
+##	Allow Cobbler to modify public files
+##	used for public file transfer services.
+##	</p>
 ## </desc>
 gen_tunable(cobbler_anon_write, false)
 
+## <desc>
+##	<p>
+##	Allow Cobbler to connect to the
+##	network using TCP.
+##	</p>
+## </desc>
+gen_tunable(cobbler_can_network_connect, false)
+
+## <desc>
+##	<p>
+##	Allow Cobbler to access cifs file systems.
+##	</p>
+## </desc>
+gen_tunable(cobbler_use_cifs, false)
+
+## <desc>
+##	<p>
+##	Allow Cobbler to access nfs file systems.
+##	</p>
+## </desc>
+gen_tunable(cobbler_use_nfs, false)
+
 type cobblerd_t;
 type cobblerd_exec_t;
 init_daemon_domain(cobblerd_t, cobblerd_exec_t)
@@ -27,24 +48,40 @@
 type cobbler_var_log_t;
 logging_log_file(cobbler_var_log_t)
 
-type cobbler_var_lib_t;
+type cobbler_var_lib_t alias cobbler_content_t;
 files_type(cobbler_var_lib_t)
 
+type cobbler_tmp_t;
+files_tmp_file(cobbler_tmp_t)
+
 ########################################
 #
 # Cobbler personal policy.
 #
 
-allow cobblerd_t self:capability { chown dac_override fowner sys_nice };
+allow cobblerd_t self:capability { chown dac_override fowner fsetid sys_nice };
+dontaudit cobblerd_t self:capability { sys_ptrace sys_tty_config };
+
 allow cobblerd_t self:process { getsched setsched signal };
 allow cobblerd_t self:fifo_file rw_fifo_file_perms;
+allow cobblerd_t self:netlink_route_socket create_netlink_socket_perms;
 allow cobblerd_t self:tcp_socket create_stream_socket_perms;
+allow cobblerd_t self:udp_socket create_socket_perms;
+allow cobblerd_t self:unix_dgram_socket create_socket_perms;
 
+list_dirs_pattern(cobblerd_t, cobbler_etc_t, cobbler_etc_t)
 read_files_pattern(cobblerd_t, cobbler_etc_t, cobbler_etc_t)
 
+# Something that runs in the cobberd_t domain tries to relabelfrom cobbler_var_lib_t dir to httpd_sys_content_t.
+dontaudit cobblerd_t cobbler_var_lib_t:dir relabel_dir_perms;
+
 manage_dirs_pattern(cobblerd_t, cobbler_var_lib_t, cobbler_var_lib_t)
 manage_files_pattern(cobblerd_t, cobbler_var_lib_t, cobbler_var_lib_t)
-files_var_lib_filetrans(cobblerd_t, cobbler_var_lib_t, { dir file })
+manage_lnk_files_pattern(cobblerd_t, cobbler_var_lib_t, cobbler_var_lib_t)
+files_var_lib_filetrans(cobblerd_t, cobbler_var_lib_t, { dir file lnk_file })
+
+# Something really needs to write to cobbler.log. Ideally this should not be happening.
+allow cobblerd_t cobbler_var_log_t:file write;
 
 append_files_pattern(cobblerd_t, cobbler_var_log_t, cobbler_var_log_t)
 create_files_pattern(cobblerd_t, cobbler_var_log_t, cobbler_var_log_t)
@@ -52,7 +89,12 @@
 setattr_files_pattern(cobblerd_t, cobbler_var_log_t, cobbler_var_log_t)
 logging_log_filetrans(cobblerd_t, cobbler_var_log_t, file)
 
+manage_dirs_pattern(cobblerd_t, cobbler_tmp_t, cobbler_tmp_t)
+manage_files_pattern(cobblerd_t, cobbler_tmp_t, cobbler_tmp_t)
+files_tmp_filetrans(cobblerd_t, cobbler_tmp_t, { dir file })
+
 kernel_read_system_state(cobblerd_t)
+kernel_dontaudit_search_network_state(cobblerd_t)
 
 corecmd_exec_bin(cobblerd_t)
 corecmd_exec_shell(cobblerd_t)
@@ -65,26 +107,73 @@
 corenet_tcp_sendrecv_generic_if(cobblerd_t)
 corenet_tcp_sendrecv_generic_node(cobblerd_t)
 corenet_tcp_sendrecv_generic_port(cobblerd_t)
+corenet_tcp_sendrecv_cobbler_port(cobblerd_t)
+# sync and rsync to ftp and http are permitted by default, for any other media use cobbler_can_network_connect.
+corenet_tcp_connect_ftp_port(cobblerd_t)
+corenet_tcp_sendrecv_ftp_port(cobblerd_t)
+corenet_sendrecv_ftp_client_packets(cobblerd_t)
+corenet_tcp_connect_http_port(cobblerd_t)
+corenet_tcp_sendrecv_http_port(cobblerd_t)
+corenet_sendrecv_http_client_packets(cobblerd_t)
 
 dev_read_urand(cobblerd_t)
 
+domain_dontaudit_exec_all_entry_files(cobblerd_t)
+domain_dontaudit_read_all_domains_state(cobblerd_t)
+
+files_read_etc_files(cobblerd_t)
+# mtab
+files_read_etc_runtime_files(cobblerd_t)
 files_read_usr_files(cobblerd_t)
 files_list_boot(cobblerd_t)
+files_read_boot_files(cobblerd_t)
 files_list_tmp(cobblerd_t)
 
+# read from mounted images (install media)
+fs_read_iso9660_files(cobblerd_t)
+
+init_dontaudit_read_all_script_files(cobblerd_t)
+
+term_use_console(cobblerd_t)
+
 miscfiles_read_localization(cobblerd_t)
 miscfiles_read_public_files(cobblerd_t)
 
+selinux_get_enforce_mode(cobblerd_t)
+
 sysnet_read_config(cobblerd_t)
 sysnet_rw_dhcp_config(cobblerd_t)
 sysnet_write_config(cobblerd_t)
 
+userdom_dontaudit_use_user_terminals(cobblerd_t)
+userdom_dontaudit_search_user_home_dirs(cobblerd_t)
+userdom_dontaudit_search_admin_dir(cobblerd_t)
+
 tunable_policy(`cobbler_anon_write',`
 	miscfiles_manage_public_files(cobblerd_t)
 ')
 
+tunable_policy(`cobbler_can_network_connect',`
+	corenet_tcp_connect_all_ports(cobblerd_t)
+	corenet_tcp_sendrecv_all_ports(cobblerd_t)
+	corenet_sendrecv_all_client_packets(cobblerd_t)
+')
+
+tunable_policy(`cobbler_use_cifs',`
+	fs_manage_cifs_dirs(cobblerd_t)
+	fs_manage_cifs_files(cobblerd_t)
+	fs_manage_cifs_symlinks(cobblerd_t)
+')
+
+tunable_policy(`cobbler_use_nfs',`
+	fs_manage_nfs_dirs(cobblerd_t)
+	fs_manage_nfs_files(cobblerd_t)
+	fs_manage_nfs_symlinks(cobblerd_t)
+')
+
 optional_policy(`
-	apache_list_sys_content(cobblerd_t)
+	# Cobbler traverses /var/www to get to /var/www/cobbler/*
+	apache_search_sys_content(cobblerd_t)
 ')
 
 optional_policy(`
@@ -97,6 +186,10 @@
 ')
 
 optional_policy(`
+	certmaster_exec(cobblerd_t)
+')
+
+optional_policy(`
 	dhcpd_domtrans(cobblerd_t)
 	dhcpd_initrc_domtrans(cobblerd_t)
 ')
@@ -108,14 +201,36 @@
 ')
 
 optional_policy(`
+	gnome_dontaudit_search_config(cobblerd_t)
+')
+
+optional_policy(`
 	rpm_exec(cobblerd_t)
 ')
 
 optional_policy(`
-	rsync_read_config(cobblerd_t)
-	rsync_write_config(cobblerd_t)
+	rsync_exec(cobblerd_t)
+	rsync_manage_config(cobblerd_t)
+	# cobbler creates /etc/rsync.conf if its not there.
+	rsync_filetrans_config(cobblerd_t, file)
 ')
 
 optional_policy(`
-	tftp_manage_rw_content(cobblerd_t)
+	# Cobbler puts objects in both /var/lib/tftpdir as well as /var/lib/tftpdir/images.
+	# tftp_manage_rw_content(cobblerd_t) can be used instead if:
+	# 1. cobbler package installs /var/lib/tftpdir/images.
+	# 2. no FILES in /var/lib/TFTPDIR are hard linked.
+	# Cobbler also creates other directories in /var/lib/tftpdir (etc, s390x, ppc, pxelinux.cfg)
+	# are any of those hard linked?
+	tftp_filetrans_tftpdir(cobblerd_t, cobbler_var_lib_t, { dir file })
 ')
+
+########################################
+#
+# Cobbler web local policy.
+#
+
+apache_content_template(cobbler)
+list_dirs_pattern(cobblerd_t, httpd_cobbler_content_t, httpd_cobbler_content_t)
+manage_dirs_pattern(cobblerd_t, httpd_cobbler_content_rw_t, httpd_cobbler_content_rw_t)
+manage_files_pattern(cobblerd_t, httpd_cobbler_content_rw_t, httpd_cobbler_content_rw_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/condor.fc serefpolicy-3.7.19/policy/modules/services/condor.fc
--- nsaserefpolicy/policy/modules/services/condor.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/condor.fc	2012-05-15 12:03:58.718532115 +0000
@@ -0,0 +1,19 @@
+/usr/sbin/condor_master		--	gen_context(system_u:object_r:condor_master_exec_t,s0)
+/usr/sbin/condor_collector         --      gen_context(system_u:object_r:condor_collector_exec_t,s0)
+/usr/sbin/condor_negotiator         --      gen_context(system_u:object_r:condor_negotiator_exec_t,s0)
+/usr/sbin/condor_schedd         --      gen_context(system_u:object_r:condor_schedd_exec_t,s0)
+/usr/sbin/condor_startd         --      gen_context(system_u:object_r:condor_startd_exec_t,s0)
+/usr/sbin/condor_starter		--		gen_context(system_u:object_r:condor_startd_exec_t,s0)
+/usr/sbin/condor_procd         --      gen_context(system_u:object_r:condor_procd_exec_t,s0)
+
+/var/lib/condor(/.*)?		gen_context(system_u:object_r:condor_var_lib_t,s0)
+
+/var/lib/condor/execute(/.*)?		gen_context(system_u:object_r:condor_var_lib_t,s0)
+
+/var/lib/condor/spool(/.*)?		gen_context(system_u:object_r:condor_var_lib_t,s0)
+
+/var/lock/condor(/.*)?		gen_context(system_u:object_r:condor_var_lock_t,s0)
+
+/var/log/condor(/.*)?		gen_context(system_u:object_r:condor_log_t,s0)
+
+/var/run/condor(/.*)?		gen_context(system_u:object_r:condor_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/condor.if serefpolicy-3.7.19/policy/modules/services/condor.if
--- nsaserefpolicy/policy/modules/services/condor.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/condor.if	2012-07-16 10:29:11.220287906 +0000
@@ -0,0 +1,351 @@
+
+## <summary>policy for condor</summary>
+
+#####################################
+## <summary>
+##  Creates types and rules for a basic
+##  condor init daemon domain.
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+template(`condor_domain_template',`
+    gen_require(`
+        type condor_master_t;
+        attribute condor_domain;
+    ')
+
+    #############################
+    #
+    # Declarations
+    #
+
+    type condor_$1_t, condor_domain;
+    type condor_$1_exec_t;
+    init_daemon_domain(condor_$1_t, condor_$1_exec_t)
+    role system_r types condor_$1_t;
+
+    domtrans_pattern(condor_master_t, condor_$1_exec_t, condor_$1_t)
+    allow condor_master_t condor_$1_exec_t:file ioctl;
+')
+
+########################################
+## <summary>
+##	Transition to condor.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`condor_domtrans',`
+	gen_require(`
+		type condor_t, condor_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, condor_exec_t, condor_t)
+')
+########################################
+## <summary>
+##	Read condor's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`condor_read_log',`
+	gen_require(`
+		type condor_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, condor_log_t, condor_log_t)
+')
+
+########################################
+## <summary>
+##	Append to condor log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`condor_append_log',`
+	gen_require(`
+		type condor_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, condor_log_t, condor_log_t)
+')
+
+########################################
+## <summary>
+##	Manage condor log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`condor_manage_log',`
+	gen_require(`
+		type condor_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, condor_log_t, condor_log_t)
+	manage_files_pattern($1, condor_log_t, condor_log_t)
+	manage_lnk_files_pattern($1, condor_log_t, condor_log_t)
+')
+
+########################################
+## <summary>
+##	Search condor lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`condor_search_lib',`
+	gen_require(`
+		type condor_var_lib_t;
+	')
+
+	allow $1 condor_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read condor lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`condor_read_lib_files',`
+	gen_require(`
+		type condor_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, condor_var_lib_t, condor_var_lib_t)
+')
+#######################################
+## <summary>
+##  Read condor lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`condor_rw_lib_files',`
+    gen_require(`
+        type condor_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    rw_files_pattern($1, condor_var_lib_t, condor_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage condor lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`condor_manage_lib_files',`
+	gen_require(`
+		type condor_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, condor_var_lib_t, condor_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage condor lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`condor_manage_lib_dirs',`
+	gen_require(`
+		type condor_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, condor_var_lib_t, condor_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Read condor PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`condor_read_pid_files',`
+	gen_require(`
+		type condor_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 condor_var_run_t:file read_file_perms;
+')
+
+#######################################
+## <summary>
+##  Read and write condor_startd server TCP sockets.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`condor_rw_tcp_sockets_startd',`
+       gen_require(`
+               type condor_startd_t;
+       ')
+
+       allow $1 condor_startd_t:tcp_socket rw_socket_perms;
+')
+
+######################################
+## <summary>
+##  Read and write condor_schedd server TCP sockets.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`condor_rw_tcp_sockets_schedd',`
+    gen_require(`
+        type condor_schedd_t;
+    ')
+
+    allow $1 condor_schedd_t:tcp_socket rw_socket_perms;
+')
+
+######################################
+## <summary>
+##  Allows to start userland processes
+##  by transitioning to the specified domain,
+##  with a range transition.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The process type entered by condor_startd.
+##  </summary>
+## </param>
+## <param name="entrypoint">
+##  <summary>
+##  The executable type for the entrypoint.
+##  </summary>
+## </param>
+## <param name="range">
+##  <summary>
+##  Range for the domain.
+##  </summary>
+## </param>
+#
+interface(`condor_startd_ranged_domtrans_to',`
+    gen_require(`
+        type sshd_t;
+    ')
+    condor_startd_domtrans_to($1, $2)
+
+
+    ifdef(`enable_mcs',`
+        range_transition condor_startd_t $2:process $3;
+    ')
+
+')
+
+######################################
+## <summary>
+##  Allows to start userlandprocesses
+##  by transitioning to the specified domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The process type entered by condor_startd.
+##  </summary>
+## </param>
+## <param name="entrypoint">
+##  <summary>
+##  The executable type for the entrypoint.
+##  </summary>
+## </param>
+#
+interface(`condor_startd_domtrans_to',`
+    gen_require(`
+        type condor_startd_t;
+    ')
+
+    domtrans_pattern(condor_startd_t, $2, $1)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an condor environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`condor_admin',`
+	gen_require(`
+		type condor_t;
+		type condor_log_t;
+		type condor_var_lib_t;
+		type condor_var_run_t;
+	')
+
+	allow $1 condor_t:process { ptrace signal_perms };
+	ps_process_pattern($1, condor_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, condor_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, condor_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, condor_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/condor.te serefpolicy-3.7.19/policy/modules/services/condor.te
--- nsaserefpolicy/policy/modules/services/condor.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/condor.te	2012-07-17 14:33:34.090324583 +0000
@@ -0,0 +1,260 @@
+policy_module(condor, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+##  <p>
+##  Allow codnor domain to connect to the network using TCP.
+##  </p>
+## </desc>
+gen_tunable(condor_domain_can_network_connect, false)
+
+attribute condor_domain;
+
+type condor_master_t, condor_domain;
+type condor_master_exec_t;
+init_daemon_domain(condor_master_t, condor_master_exec_t)
+
+condor_domain_template(collector)
+condor_domain_template(negotiator)
+condor_domain_template(schedd)
+condor_domain_template(startd)
+condor_domain_template(procd)
+
+type condor_schedd_tmp_t;
+files_tmp_file(condor_schedd_tmp_t)
+
+type condor_startd_tmp_t;
+files_tmp_file(condor_startd_tmp_t)
+
+type condor_startd_tmpfs_t;
+files_tmpfs_file(condor_startd_tmpfs_t)
+
+type condor_log_t;
+logging_log_file(condor_log_t)
+
+type condor_var_lib_t;
+files_type(condor_var_lib_t)
+
+type condor_var_lock_t;
+files_lock_file(condor_var_lock_t)
+
+type condor_var_run_t;
+files_pid_file(condor_var_run_t)
+
+########################################
+#
+# condor domain local policy
+#
+
+allow condor_domain self:process signal_perms;
+allow condor_domain self:fifo_file rw_fifo_file_perms;
+
+allow condor_domain self:tcp_socket create_stream_socket_perms;
+allow condor_domain self:udp_socket create_socket_perms;
+allow condor_domain self:unix_stream_socket create_stream_socket_perms;
+
+allow condor_domain condor_master_t:process signull;
+allow condor_domain condor_master_t:tcp_socket getattr;
+
+manage_dirs_pattern(condor_domain, condor_log_t, condor_log_t)
+manage_files_pattern(condor_domain, condor_log_t, condor_log_t)
+logging_log_filetrans(condor_domain, condor_log_t, { dir file })
+
+manage_dirs_pattern(condor_domain, condor_var_lib_t, condor_var_lib_t)
+manage_files_pattern(condor_domain, condor_var_lib_t, condor_var_lib_t)
+files_var_lib_filetrans(condor_domain, condor_var_lib_t, { dir file })
+
+manage_files_pattern(condor_domain, condor_var_lock_t, condor_var_lock_t)
+files_lock_filetrans(condor_domain, condor_var_lock_t, file)
+
+manage_dirs_pattern(condor_domain, condor_var_run_t, condor_var_run_t)
+manage_files_pattern(condor_domain, condor_var_run_t, condor_var_run_t)
+manage_fifo_files_pattern(condor_domain, condor_var_run_t, condor_var_run_t)
+files_pid_filetrans(condor_domain, condor_var_run_t, { dir file fifo_file })
+
+kernel_read_system_state(condor_domain)
+kernel_read_network_state(condor_domain)
+
+corecmd_exec_bin(condor_domain)
+corecmd_exec_shell(condor_domain)
+
+corenet_tcp_connect_condor_port(condor_domain)
+
+domain_use_interactive_fds(condor_domain)
+
+dev_read_rand(condor_domain)
+dev_read_urand(condor_domain)
+dev_read_sysfs(condor_domain)
+
+files_read_etc_files(condor_domain)
+
+logging_send_syslog_msg(condor_domain)
+
+miscfiles_read_localization(condor_domain)
+
+tunable_policy(`condor_domain_can_network_connect',`
+    corenet_tcp_connect_all_ports(condor_domain)
+')
+
+optional_policy(`
+	rhcs_stream_connect_cluster(condor_domain)
+')
+
+optional_policy(`
+    sysnet_dns_name_resolve(condor_domain)
+')
+
+#####################################
+#
+# condor master local policy
+#
+
+allow condor_master_t self:capability { setuid setgid dac_override sys_ptrace };
+
+allow condor_master_t condor_domain:process signal;
+
+corenet_tcp_bind_condor_port(condor_master_t)
+corenet_udp_bind_condor_port(condor_master_t)
+
+domain_read_all_domains_state(condor_master_t)
+
+auth_use_nsswitch(condor_master_t)
+
+optional_policy(`
+	unconfined_domain(condor_master_t)
+')
+
+######################################
+#
+# condor collector local policy
+#
+
+allow condor_collector_t self:capability { setuid setgid };
+
+allow condor_collector_t condor_master_t:tcp_socket rw_stream_socket_perms;
+allow condor_collector_t condor_master_t:udp_socket rw_socket_perms;
+
+kernel_read_network_state(condor_collector_t)
+
+auth_use_nsswitch(condor_collector_t)
+
+optional_policy(`
+	unconfined_domain(condor_collector_t)
+')
+
+#####################################
+#
+# condor negotiator local policy
+#
+allow condor_negotiator_t self:capability { setuid setgid };
+allow condor_negotiator_t condor_master_t:tcp_socket rw_stream_socket_perms;
+allow condor_negotiator_t condor_master_t:udp_socket getattr;
+
+auth_use_nsswitch(condor_negotiator_t)
+
+optional_policy(`
+	unconfined_domain(condor_negotiator_t)
+')
+
+######################################
+#
+# condor procd local policy
+#
+
+allow condor_procd_t self:capability { fowner chown dac_override sys_ptrace };
+
+domain_read_all_domains_state(condor_procd_t)
+
+optional_policy(`
+	unconfined_domain(condor_procd_t)
+')
+
+#######################################
+#
+# condor schedd local policy
+#
+
+domtrans_pattern(condor_schedd_t, condor_procd_exec_t, condor_procd_t)
+domtrans_pattern(condor_schedd_t, condor_startd_exec_t, condor_startd_t)
+
+# dac_override because of /var/log/condor
+allow condor_schedd_t self:capability { setuid chown setgid dac_override };
+allow condor_schedd_t condor_master_t:tcp_socket rw_stream_socket_perms;
+allow condor_schedd_t condor_master_t:udp_socket getattr;
+
+allow condor_schedd_t condor_var_lock_t:dir manage_file_perms;
+
+manage_dirs_pattern(condor_schedd_t, condor_schedd_tmp_t, condor_schedd_tmp_t)
+manage_files_pattern(condor_schedd_t, condor_schedd_tmp_t, condor_schedd_tmp_t)
+files_tmp_filetrans(condor_schedd_t, condor_schedd_tmp_t, { file dir })
+allow condor_schedd_t condor_schedd_tmp_t:file { relabelfrom relabelto };
+
+kernel_read_kernel_sysctls(condor_schedd_t)
+
+auth_use_nsswitch(condor_schedd_t)
+
+optional_policy(`
+	unconfined_domain(condor_schedd_t)
+')
+
+#####################################
+#
+# condor startd local policy
+#
+
+# also needed by java
+allow condor_startd_t self:capability { setuid net_admin setgid dac_override };
+allow condor_startd_t self:process execmem;
+
+manage_dirs_pattern(condor_startd_t, condor_startd_tmp_t, condor_startd_tmp_t)
+manage_files_pattern(condor_startd_t, condor_startd_tmp_t, condor_startd_tmp_t)
+files_tmp_filetrans(condor_startd_t, condor_startd_tmp_t, { file dir })
+allow condor_startd_t condor_startd_tmp_t:file { relabelfrom relabelto };
+
+manage_dirs_pattern(condor_startd_t, condor_startd_tmpfs_t, condor_startd_tmpfs_t)
+manage_files_pattern(condor_startd_t, condor_startd_tmpfs_t, condor_startd_tmpfs_t)
+fs_tmpfs_filetrans(condor_startd_t, condor_startd_tmpfs_t, { dir file })
+
+can_exec(condor_startd_t, condor_startd_exec_t)
+
+domain_read_all_domains_state(condor_startd_t)
+
+kernel_read_kernel_sysctls(condor_startd_t)
+
+mcs_process_set_categories(condor_startd_t)
+
+auth_use_nsswitch(condor_startd_t)
+
+init_domtrans_script(condor_startd_t)
+
+libs_exec_lib_files(condor_startd_t)
+
+files_read_usr_files(condor_startd_t)
+
+optional_policy(`
+	hal_dbus_chat(condor_startd_t)
+')
+
+optional_policy(`
+	ssh_basic_client_template(condor_startd, condor_startd_t, system_r)
+	ssh_domtrans(condor_startd_t)
+
+	manage_files_pattern(condor_startd_ssh_t, condor_var_lib_t, condor_var_lib_t)
+	manage_dirs_pattern(condor_startd_ssh_t, condor_var_lib_t, condor_var_lib_t)
+
+	optional_policy(`
+		kerberos_use(condor_startd_ssh_t)
+	')
+
+	optional_policy(`
+		unconfined_domain(condor_startd_ssh_t)
+	')
+')
+
+optional_policy(`
+	unconfined_domain(condor_startd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/consolekit.fc serefpolicy-3.7.19/policy/modules/services/consolekit.fc
--- nsaserefpolicy/policy/modules/services/consolekit.fc	2011-03-17 07:21:21.665851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/consolekit.fc	2011-03-17 07:21:04.150851002 +0000
@@ -1,5 +1,7 @@
 /usr/sbin/console-kit-daemon	--	gen_context(system_u:object_r:consolekit_exec_t,s0)
 
 /var/log/ConsoleKit(/.*)?		gen_context(system_u:object_r:consolekit_log_t,s0)
+
 /var/run/consolekit\.pid	--	gen_context(system_u:object_r:consolekit_var_run_t,s0)
-/var/run/ConsoleKit(/.*)?	--	gen_context(system_u:object_r:consolekit_var_run_t,s0)
+/var/run/console-kit-daemon\.pid	--	gen_context(system_u:object_r:consolekit_var_run_t,s0)
+/var/run/ConsoleKit(/.*)?		gen_context(system_u:object_r:consolekit_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/consolekit.if serefpolicy-3.7.19/policy/modules/services/consolekit.if
--- nsaserefpolicy/policy/modules/services/consolekit.if	2011-03-17 07:21:20.789851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/consolekit.if	2012-05-16 10:13:48.023126065 +0000
@@ -55,5 +55,80 @@
 	')
 
 	read_files_pattern($1, consolekit_log_t, consolekit_log_t)
+	logging_search_logs($1)
+')
+
+#######################################
+## <summary>
+## Dontaudit attempts to read consolekit log files.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain to not audit.
+## </summary>
+## </param>
+#
+interface(`consolekit_dontaudit_read_log',`
+	gen_require(`
+		type consolekit_log_t;
+	')
+
+	dontaudit $1 consolekit_log_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Manage consolekit log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`consolekit_manage_log',`
+	gen_require(`
+		type consolekit_log_t;
+	')
+
+	manage_files_pattern($1, consolekit_log_t, consolekit_log_t)
 	files_search_pids($1)
 ')
+
+########################################
+## <summary>
+##	Read consolekit PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`consolekit_read_pid_files',`
+	gen_require(`
+		type consolekit_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, consolekit_var_run_t, consolekit_var_run_t)
+')
+
+########################################
+## <summary>
+##	Dontaudit attempts to connect to consolekit
+##  over an unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`consolekit_dontaudit_stream_connect',`
+	gen_require(`
+		type consolekit_t;
+	')
+
+	dontaudit $1 consolekit_t:unix_stream_socket connectto;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/consolekit.te serefpolicy-3.7.19/policy/modules/services/consolekit.te
--- nsaserefpolicy/policy/modules/services/consolekit.te	2011-03-17 07:21:21.735851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/consolekit.te	2011-03-17 07:21:04.265851001 +0000
@@ -16,12 +16,15 @@
 type consolekit_var_run_t;
 files_pid_file(consolekit_var_run_t)
 
+type consolekit_tmpfs_t;
+files_tmpfs_file(consolekit_tmpfs_t)
+
 ########################################
 #
 # consolekit local policy
 #
 
-allow consolekit_t self:capability { setuid setgid sys_tty_config dac_override sys_nice sys_ptrace };
+allow consolekit_t self:capability { chown setuid setgid sys_tty_config dac_override sys_nice sys_ptrace };
 allow consolekit_t self:process { getsched signal };
 allow consolekit_t self:fifo_file rw_fifo_file_perms;
 allow consolekit_t self:unix_stream_socket create_stream_socket_perms;
@@ -35,6 +38,7 @@
 files_pid_filetrans(consolekit_t, consolekit_var_run_t, { file dir })
 
 kernel_read_system_state(consolekit_t)
+kernel_dontaudit_request_load_module(consolekit_t)
 
 corecmd_exec_bin(consolekit_t)
 corecmd_exec_shell(consolekit_t)
@@ -59,6 +63,8 @@
 term_use_all_terms(consolekit_t)
 
 auth_use_nsswitch(consolekit_t)
+auth_manage_pam_console_data(consolekit_t)
+auth_write_login_records(consolekit_t)
 
 init_telinit(consolekit_t)
 init_rw_utmp(consolekit_t)
@@ -68,19 +74,24 @@
 
 miscfiles_read_localization(consolekit_t)
 
+# consolekit needs to be able to ptrace all logged in users 
+userdom_ptrace_all_users(consolekit_t)
 userdom_dontaudit_read_user_home_content_files(consolekit_t)
+userdom_dontaudit_getattr_admin_home_files(consolekit_t)
 userdom_read_user_tmp_files(consolekit_t)
 
 hal_ptrace(consolekit_t)
 
 tunable_policy(`use_nfs_home_dirs',`
-	fs_dontaudit_list_nfs(consolekit_t)
-	fs_dontaudit_rw_nfs_files(consolekit_t)
+	fs_read_nfs_files(consolekit_t)
 ')
 
 tunable_policy(`use_samba_home_dirs',`
-	fs_dontaudit_list_cifs(consolekit_t)
-	fs_dontaudit_rw_cifs_files(consolekit_t)
+	fs_read_cifs_files(consolekit_t)
+')
+
+optional_policy(`
+	cron_read_system_job_lib_files(consolekit_t)
 ')
 
 optional_policy(`
@@ -91,6 +102,10 @@
 	')
 
 	optional_policy(`
+		mpd_dbus_chat(consolekit_t)
+	')	
+
+	optional_policy(`
 		rpm_dbus_chat(consolekit_t)
 	')
 
@@ -100,19 +115,37 @@
 ')
 
 optional_policy(`
+	networkmanager_append_log(consolekit_t)
+')
+
+optional_policy(`
+        policykit_dbus_chat(consolekit_t)
 	policykit_domtrans_auth(consolekit_t)
 	policykit_read_lib(consolekit_t)
 	policykit_read_reload(consolekit_t)
 ')
 
 optional_policy(`
+	shutdown_domtrans(consolekit_t)
+')
+
+optional_policy(`
 	xserver_read_xdm_pid(consolekit_t)
 	xserver_read_user_xauth(consolekit_t)
 	xserver_non_drawing_client(consolekit_t)
 	corenet_tcp_connect_xserver_port(consolekit_t)
+	xserver_stream_connect(consolekit_t)
+	xserver_user_x_domain_template(consolekit, consolekit_t, consolekit_tmpfs_t)
+')
+
+optional_policy(`
+	udev_domtrans(consolekit_t)
+	udev_read_db(consolekit_t)
+	udev_signal(consolekit_t)
 ')
 
 optional_policy(`
 	#reading .Xauthity
+	unconfined_ptrace(consolekit_t)
 	unconfined_stream_connect(consolekit_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/corosync.fc serefpolicy-3.7.19/policy/modules/services/corosync.fc
--- nsaserefpolicy/policy/modules/services/corosync.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/corosync.fc	2012-05-10 10:30:11.914691839 +0000
@@ -0,0 +1,22 @@
+
+/etc/rc\.d/init\.d/corosync     --      gen_context(system_u:object_r:corosync_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/heartbeat    --  gen_context(system_u:object_r:corosync_initrc_exec_t,s0)
+
+/usr/sbin/corosync              --      gen_context(system_u:object_r:corosync_exec_t,s0)
+/usr/sbin/corosync-notifyd		--		gen_context(system_u:object_r:corosync_exec_t,s0)
+
+/usr/sbin/ccs_tool              --      gen_context(system_u:object_r:corosync_exec_t,s0)
+/usr/sbin/cman_tool              --      gen_context(system_u:object_r:corosync_exec_t,s0)
+
+/usr/lib(64)?/heartbeat(/.*)?           gen_context(system_u:object_r:corosync_var_lib_t,s0)
+/usr/lib(64)?/heartbeat/heartbeat   --  gen_context(system_u:object_r:corosync_exec_t,s0)
+
+/var/lib/corosync(/.*)?                 gen_context(system_u:object_r:corosync_var_lib_t,s0)
+/var/lib/heartbeat(/.*)?               gen_context(system_u:object_r:corosync_var_lib_t,s0)
+
+/var/log/cluster/corosync\.log  --      gen_context(system_u:object_r:corosync_var_log_t,s0)
+
+/var/run/cman_.*                -s      gen_context(system_u:object_r:corosync_var_run_t,s0)
+/var/run/corosync\.pid          --      gen_context(system_u:object_r:corosync_var_run_t,s0)
+/var/run/heartbeat(/.*)?             gen_context(system_u:object_r:corosync_var_run_t,s0)
+/var/run/rsctmp(/.*)?             gen_context(system_u:object_r:corosync_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/corosync.if serefpolicy-3.7.19/policy/modules/services/corosync.if
--- nsaserefpolicy/policy/modules/services/corosync.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/corosync.if	2011-03-17 07:21:04.061851001 +0000
@@ -0,0 +1,127 @@
+## <summary>SELinux policy for Corosync Cluster Engine</summary>
+
+########################################
+## <summary>
+##      Execute a domain transition to run corosync.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`corosync_domtrans',`
+        gen_require(`
+                type corosync_t, corosync_exec_t;
+        ')
+
+        domtrans_pattern($1, corosync_exec_t, corosync_t)
+')
+
+#######################################
+## <summary>
+##      Execute corosync in the caller domain.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`corosync_exec',`
+        gen_require(`
+                type corosync_exec_t;
+        ')
+
+        corecmd_search_bin($1)
+        can_exec($1, corosync_exec_t)
+')
+
+#####################################
+## <summary>
+##      Connect to corosync over a unix domain
+##      stream socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`corosync_stream_connect',`
+        gen_require(`
+                type corosync_t, corosync_var_run_t;
+        ')
+
+        files_search_pids($1)
+        stream_connect_pattern($1, corosync_var_run_t, corosync_var_run_t, corosync_t)
+')
+
+#######################################
+## <summary>
+##      Allow the specified domain to read corosync's log files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`corosync_read_log',`
+        gen_require(`
+                type corosync_var_log_t;
+        ')
+
+        logging_search_logs($1)
+        list_dirs_pattern($1, corosync_var_log_t, corosync_var_log_t)
+        read_files_pattern($1, corosync_var_log_t, corosync_var_log_t)
+')
+
+######################################
+## <summary>
+##      All of the rules required to administrate 
+##      an corosync environment
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+## <param name="role">
+##      <summary>
+##      The role to be allowed to manage the corosyncd domain.
+##      </summary>
+## </param>
+## <rolecap/>
+#
+interface(`corosyncd_admin',`
+        gen_require(`
+                type corosync_t, corosync_var_lib_t, corosync_var_log_t;
+                type corosync_var_run_t, corosync_tmp_t, corosync_tmpfs_t;
+                type corosync_initrc_exec_t;
+        ')
+
+        allow $1 corosync_t:process { ptrace signal_perms };
+        ps_process_pattern($1, corosync_t)
+
+        init_labeled_script_domtrans($1, corosync_initrc_exec_t)
+        domain_system_change_exemption($1)
+        role_transition $2 corosync_initrc_exec_t system_r;
+        allow $2 system_r;
+
+        files_search_var_lib($1)
+        admin_pattern($1, corosync_var_lib_t)
+
+        logging_search_logs($1)
+        admin_pattern($1, corosync_var_log_t)
+
+        files_search_pids($1)
+        admin_pattern($1, corosync_var_run_t)
+
+        files_search_tmp($1)
+        admin_pattern($1, corosync_tmp_t)
+
+        admin_pattern($1, corosync_tmpfs_t)
+')
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/corosync.te serefpolicy-3.7.19/policy/modules/services/corosync.te
--- nsaserefpolicy/policy/modules/services/corosync.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/corosync.te	2012-05-23 12:18:50.101936548 +0000
@@ -0,0 +1,173 @@
+
+policy_module(corosync,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type corosync_t;
+type corosync_exec_t;
+init_daemon_domain(corosync_t, corosync_exec_t)
+domain_obj_id_change_exemption(corosync_t)
+
+type corosync_initrc_exec_t;
+init_script_file(corosync_initrc_exec_t);
+
+# tmp files
+type corosync_tmp_t;
+files_tmp_file(corosync_tmp_t)
+
+type corosync_tmpfs_t;
+files_tmpfs_file(corosync_tmpfs_t)
+
+# log files
+type corosync_var_log_t;
+logging_log_file(corosync_var_log_t)
+
+# var/lib files
+type corosync_var_lib_t;
+files_type(corosync_var_lib_t)
+
+# pid files
+type corosync_var_run_t;
+files_pid_file(corosync_var_run_t)
+
+########################################
+#
+# corosync local policy
+#
+
+allow corosync_t self:capability { dac_override setuid sys_nice sys_ptrace sys_resource ipc_lock sys_admin };
+# for hearbeat
+allow corosync_t self:capability { net_raw chown };
+allow corosync_t self:process { setpgid setrlimit setsched signal signull };
+
+allow corosync_t self:fifo_file rw_fifo_file_perms;
+allow corosync_t self:sem create_sem_perms;
+allow corosync_t self:shm create_shm_perms;
+allow corosync_t self:unix_stream_socket { create_stream_socket_perms connectto };
+allow corosync_t self:unix_dgram_socket create_socket_perms;
+allow corosync_t self:udp_socket create_socket_perms;
+
+can_exec(corosync_t,corosync_exec_t)
+
+# tmp files
+manage_dirs_pattern(corosync_t, corosync_tmp_t, corosync_tmp_t)
+manage_files_pattern(corosync_t, corosync_tmp_t, corosync_tmp_t)
+files_tmp_filetrans(corosync_t, corosync_tmp_t, { file dir })
+allow corosync_t corosync_tmp_t:file { relabelfrom relabelto };
+
+manage_dirs_pattern(corosync_t, corosync_tmpfs_t, corosync_tmpfs_t)
+manage_files_pattern(corosync_t, corosync_tmpfs_t, corosync_tmpfs_t)
+fs_tmpfs_filetrans(corosync_t, corosync_tmpfs_t,{ dir file })
+
+# var/lib files
+# needed by hearbeat
+can_exec(corosync_t, corosync_var_lib_t)
+manage_files_pattern(corosync_t, corosync_var_lib_t,corosync_var_lib_t)
+manage_dirs_pattern(corosync_t, corosync_var_lib_t,corosync_var_lib_t)
+manage_sock_files_pattern(corosync_t, corosync_var_lib_t,corosync_var_lib_t)
+manage_fifo_files_pattern(corosync_t, corosync_var_lib_t,corosync_var_lib_t)
+files_var_lib_filetrans(corosync_t,corosync_var_lib_t, { file dir fifo_file sock_file })
+
+# log files
+manage_files_pattern(corosync_t, corosync_var_log_t,corosync_var_log_t)
+manage_sock_files_pattern(corosync_t, corosync_var_log_t,corosync_var_log_t)
+logging_log_filetrans(corosync_t,corosync_var_log_t,{ sock_file file })
+
+# pid file
+manage_files_pattern(corosync_t, corosync_var_run_t,corosync_var_run_t)
+manage_sock_files_pattern(corosync_t, corosync_var_run_t,corosync_var_run_t)
+manage_dirs_pattern(corosync_t, corosync_var_run_t,corosync_var_run_t)
+files_pid_filetrans(corosync_t,corosync_var_run_t, { file sock_file dir })
+
+kernel_read_system_state(corosync_t)
+kernel_read_network_state(corosync_t)
+kernel_read_net_sysctls(corosync_t)
+kernel_read_kernel_sysctls(corosync_t)
+
+domain_read_all_domains_state(corosync_t)
+
+corenet_udp_bind_netsupport_port(corosync_t)
+
+corecmd_exec_bin(corosync_t)
+corecmd_exec_shell(corosync_t)
+
+dev_read_urand(corosync_t)
+
+files_manage_mounttab(corosync_t)
+files_read_etc_files(corosync_t)
+files_read_usr_files(corosync_t)
+
+fs_getattr_all_fs(corosync_t)
+
+auth_use_nsswitch(corosync_t)
+
+miscfiles_read_localization(corosync_t)
+
+init_domtrans_script(corosync_t)
+init_read_script_state(corosync_t)
+init_rw_script_tmp_files(corosync_t)
+
+logging_send_syslog_msg(corosync_t)
+
+userdom_read_user_tmp_files(corosync_t)
+userdom_delete_user_tmpfs_files(corosync_t)
+userdom_rw_user_tmpfs_files(corosync_t)
+
+optional_policy(`
+	gen_require(`
+		attribute unconfined_services;
+	') 
+
+	fs_manage_tmpfs_files(corosync_t)
+	init_manage_script_status_files(corosync_t)
+')
+
+
+optional_policy(`
+	ccs_read_config(corosync_t)
+')
+
+optional_policy(`
+	cmirrord_rw_shm(corosync_t)
+')
+
+optional_policy(`
+    dbus_system_bus_client(corosync_t)
+')
+
+optional_policy(`
+	drbd_domtrans(corosync_t)
+')
+
+optional_policy(`
+	lvm_rw_clvmd_tmpfs_files(corosync_t)
+	lvm_delete_clvmd_tmpfs_files(corosync_t)
+')
+
+optional_policy(`
+    qpidd_rw_shm(corosync_t)
+')
+
+optional_policy(`
+	rhcs_getattr_fenced(corosync_t)
+	# to communication with RHCS
+	rhcs_rw_cluster_shm(corosync_t)
+	rhcs_rw_cluster_semaphores(corosync_t)
+	rhcs_stream_connect_cluster(corosync_t)
+	rhcs_manage_cluster_lib_files(corosync_t)
+	rhcs_relabel_cluster_lib_files(corosync_t)
+')
+
+optional_policy(`
+	rgmanager_manage_tmpfs_files(corosync_t)
+')
+
+optional_policy(`
+	corenet_tcp_connect_ricci_port(corosync_t)
+
+	ricci_read_lib_files(corosync_t)
+	ricci_rw_modclusterd_tmpfs_files(corosync_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/courier.fc serefpolicy-3.7.19/policy/modules/services/courier.fc
--- nsaserefpolicy/policy/modules/services/courier.fc	2011-03-17 07:21:22.046851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/courier.fc	2011-10-25 14:49:18.054904002 +0000
@@ -13,9 +13,18 @@
 /usr/lib(64)?/courier/courier/pcpd	--	gen_context(system_u:object_r:courier_pcp_exec_t,s0)
 /usr/lib(64)?/courier/imapd		--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
 /usr/lib(64)?/courier/pop3d		--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
+/usr/lib(64)?/courier/courierlogger         --  gen_context(system_u:object_r:courier_exec_t,s0)
+/usr/lib(64)?/courier/courierldapaliasd     --  gen_context(system_u:object_r:courier_exec_t,s0)
+/usr/lib(64)?/courier/couriertcpd           --  gen_context(system_u:object_r:courier_tcpd_exec_t,s0)
 /usr/lib(64)?/courier/rootcerts(/.*)?		gen_context(system_u:object_r:courier_etc_t,s0)
 /usr/lib(64)?/courier/sqwebmail/cleancache\.pl -- gen_context(system_u:object_r:sqwebmail_cron_exec_t,s0)
 
+# new locations
+#/usr/lib/courier/libexec/courier/.*	--  gen_context(system_u:object_r:courier_exec_t,s0)
+#/usr/libexec/courier-authlib/.*	--  gen_context(system_u:object_r:courier_authdaemon_exec_t,s0)
+#/usr/lib/courier/libexec/courier/imaplogin	--  gen_context(system_u:object_r:courier_pop_exec_t,s0)
+#/usr/lib/courier/bin/imapd		--  gen_context(system_u:object_r:courier_pop_exec_t,s0)
+
 /var/lib/courier(/.*)?			--	gen_context(system_u:object_r:courier_var_lib_t,s0)
 
 /var/run/courier(/.*)?			--	gen_context(system_u:object_r:courier_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/courier.if serefpolicy-3.7.19/policy/modules/services/courier.if
--- nsaserefpolicy/policy/modules/services/courier.if	2011-03-17 07:21:21.504851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/courier.if	2011-10-18 11:45:23.869041988 +0000
@@ -88,7 +88,7 @@
 ##	Execute the courier authentication daemon with
 ##	a domain transition.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -102,12 +102,31 @@
 	domtrans_pattern($1, courier_authdaemon_exec_t, courier_authdaemon_t)
 ')
 
+######################################
+## <summary>
+##  Connect to courier-authdaemon over an unix stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`courier_stream_connect_authdaemon',`
+    gen_require(`
+        type courier_authdaemon_t, courier_spool_t;
+    ')
+
+    files_search_spool($1)
+    stream_connect_pattern($1, courier_spool_t, courier_spool_t, courier_authdaemon_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute the courier POP3 and IMAP server with
 ##	a domain transition.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -125,7 +144,7 @@
 ## <summary>
 ##	Read courier config files
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -144,7 +163,7 @@
 ##	Create, read, write, and delete courier
 ##	spool directories.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -163,7 +182,7 @@
 ##	Create, read, write, and delete courier
 ##	spool files.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -181,7 +200,7 @@
 ## <summary>
 ##	Read courier spool files.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cron.fc serefpolicy-3.7.19/policy/modules/services/cron.fc
--- nsaserefpolicy/policy/modules/services/cron.fc	2011-03-17 07:21:20.980851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cron.fc	2012-05-15 00:07:03.833652808 +0000
@@ -11,17 +11,20 @@
 /usr/sbin/cron(d)?		--	gen_context(system_u:object_r:crond_exec_t,s0)
 /usr/sbin/fcron			--	gen_context(system_u:object_r:crond_exec_t,s0)
 
+/var/log/rpmpkgs.*      --  gen_context(system_u:object_r:cron_log_t,s0)
+
 /var/run/anacron\.pid		--	gen_context(system_u:object_r:crond_var_run_t,s0)
 /var/run/atd\.pid		--	gen_context(system_u:object_r:crond_var_run_t,s0)
 /var/run/crond?\.pid		--	gen_context(system_u:object_r:crond_var_run_t,s0)
-/var/run/crond\.reboot		--	gen_context(system_u:object_r:crond_var_run_t,s0)
+/var/run/crond?\.reboot		--	gen_context(system_u:object_r:crond_var_run_t,s0)
 /var/run/fcron\.fifo		-s	gen_context(system_u:object_r:crond_var_run_t,s0)
 /var/run/fcron\.pid		--	gen_context(system_u:object_r:crond_var_run_t,s0)
 
 /var/spool/anacron(/.*)?		gen_context(system_u:object_r:system_cron_spool_t,s0)
 /var/spool/at(/.*)?			gen_context(system_u:object_r:user_cron_spool_t,s0)
 
-/var/spool/cron			-d	gen_context(system_u:object_r:cron_spool_t,s0)
+#/var/spool/cron			-d	gen_context(system_u:object_r:cron_spool_t,s0)
+/var/spool/cron				-d  gen_context(system_u:object_r:user_cron_spool_t,s0)
 #/var/spool/cron/root		--	gen_context(system_u:object_r:sysadm_cron_spool_t,s0)
 /var/spool/cron/[^/]*		--	<<none>>
 
@@ -45,3 +48,7 @@
 /var/spool/fcron/systab\.orig	--	gen_context(system_u:object_r:system_cron_spool_t,s0)
 /var/spool/fcron/systab		--	gen_context(system_u:object_r:system_cron_spool_t,s0)
 /var/spool/fcron/new\.systab	--	gen_context(system_u:object_r:system_cron_spool_t,s0)
+
+/var/lib/glpi/files(/.*)?		gen_context(system_u:object_r:cron_var_lib_t,s0)
+
+#/var/log/mcelog.*		--	gen_context(system_u:object_r:cron_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cron.if serefpolicy-3.7.19/policy/modules/services/cron.if
--- nsaserefpolicy/policy/modules/services/cron.if	2011-03-17 07:21:22.290851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cron.if	2011-09-08 14:21:35.644160002 +0000
@@ -12,6 +12,12 @@
 ## </param>
 #
 template(`cron_common_crontab_template',`
+	gen_require(`
+		type crond_t, crond_var_run_t, crontab_exec_t;
+		type cron_spool_t, user_cron_spool_t;
+
+	')
+
 	##############################
 	#
 	# Declarations
@@ -34,8 +40,12 @@
 	allow $1_t self:process { setsched signal_perms };
 	allow $1_t self:fifo_file rw_fifo_file_perms;
 
-	allow $1_t $1_tmp_t:file manage_file_perms;
-	files_tmp_filetrans($1_t, $1_tmp_t, file)
+	allow $1_t crond_t:process signal;
+	allow $1_t crond_var_run_t:file read_file_perms;
+
+	manage_dirs_pattern($1_t, $1_tmp_t, $1_tmp_t)
+	manage_files_pattern($1_t, $1_tmp_t, $1_tmp_t)
+	files_tmp_filetrans($1_t, $1_tmp_t, { dir file })
 
 	# create files in /var/spool/cron
 	manage_files_pattern($1_t, { cron_spool_t user_cron_spool_t }, user_cron_spool_t)
@@ -62,6 +72,7 @@
 
 	logging_send_syslog_msg($1_t)
 	logging_send_audit_msgs($1_t)
+	logging_set_loginuid($1_t)
 
 	init_dontaudit_write_utmp($1_t)
 	init_read_utmp($1_t)
@@ -76,6 +87,7 @@
 	userdom_use_user_terminals($1_t)
 	# Read user crontabs
 	userdom_read_user_home_content_files($1_t)
+	userdom_read_user_home_content_symlinks($1_t)
 
 	tunable_policy(`fcron_crond',`
 		# fcron wants an instant update of a crontab change for the administrator
@@ -106,6 +118,7 @@
 interface(`cron_role',`
 	gen_require(`
 		type cronjob_t, crontab_t, crontab_exec_t;
+		type crond_t, user_cron_spool_t;
 	')
 
 	role $1 types { cronjob_t crontab_t };
@@ -120,6 +133,15 @@
 	ps_process_pattern($2, crontab_t)
 	allow $2 crontab_t:process signal;
 
+	# bug 616787
+	allow $2 crond_t:process sigchld;
+	allow crond_t $2:process transition;
+
+	dontaudit crond_t $2:process { noatsecure siginh rlimitinh };
+
+	# needs to be authorized SELinux context for cron
+	allow $2 user_cron_spool_t:file entrypoint;
+
 	# Run helper programs as the user domain
 	#corecmd_bin_domtrans(crontab_t, $2)
 	#corecmd_shell_domtrans(crontab_t, $2)
@@ -154,27 +176,14 @@
 #
 interface(`cron_unconfined_role',`
 	gen_require(`
-		type unconfined_cronjob_t, crontab_t, crontab_tmp_t, crontab_exec_t;
+		type unconfined_cronjob_t;
 	')
 
-	role $1 types { unconfined_cronjob_t crontab_t };
+	role $1 types unconfined_cronjob_t;
 
 	# cronjob shows up in user ps
 	ps_process_pattern($2, unconfined_cronjob_t)
 
-	# Transition from the user domain to the derived domain.
-	domtrans_pattern($2, crontab_exec_t, crontab_t)
-
-	# crontab shows up in user ps
-	ps_process_pattern($2, crontab_t)
-	allow $2 crontab_t:process signal;
-
-	# Run helper programs as the user domain
-	#corecmd_bin_domtrans(crontab_t, $2)
-	#corecmd_shell_domtrans(crontab_t, $2)
-	corecmd_exec_bin(crontab_t)
-	corecmd_exec_shell(crontab_t)
-
 	optional_policy(`
 		gen_require(`
 			class dbus send_msg;
@@ -259,9 +268,8 @@
 	gen_require(`
 		type crond_t, system_cronjob_t;
 	')
-
 	domtrans_pattern(system_cronjob_t, $2, $1)
-	domtrans_pattern(crond_t, $2, $1)
+	 domtrans_pattern(crond_t, $2, $1)
 
 	role system_r types $1;
 ')
@@ -408,7 +416,43 @@
 		type crond_t;
 	')
 
-	allow $1 crond_t:fifo_file { getattr read write };
+	allow $1 crond_t:fifo_file rw_inherited_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	Read and write inherited user spool files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`cron_rw_inherited_user_spool_files',`
+	gen_require(`
+		type user_cron_spool_t;
+	')
+
+	allow $1 user_cron_spool_t:file rw_inherited_file_perms;
+')
+
+#######################################
+## <summary>
+##  Read and write inherited spool files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`cron_rw_inherited_spool_files',`
+    gen_require(`
+        type cron_spool_t;
+    ')
+
+    allow $1 cron_spool_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -554,7 +598,7 @@
 		type system_cronjob_t;
 	')
 
-	allow $1 system_cronjob_t:fifo_file rw_fifo_file_perms;
+	allow $1 system_cronjob_t:fifo_file rw_inherited_fifo_file_perms;
 ')
 
 ########################################
@@ -587,11 +631,14 @@
 #
 interface(`cron_read_system_job_tmp_files',`
 	gen_require(`
-		type system_cronjob_tmp_t;
+		type system_cronjob_tmp_t, cron_var_run_t;
 	')
 
 	files_search_tmp($1)
 	allow $1 system_cronjob_tmp_t:file read_file_perms;
+
+	files_search_pids($1)
+	allow $1 cron_var_run_t:file read_file_perms;
 ')
 
 ########################################
@@ -627,7 +674,47 @@
 interface(`cron_dontaudit_write_system_job_tmp_files',`
 	gen_require(`
 		type system_cronjob_tmp_t;
+		type cron_var_run_t;
 	')
 
 	dontaudit $1 system_cronjob_tmp_t:file write_file_perms;
+	dontaudit $1 cron_var_run_t:file write_file_perms;
+')
+
+########################################
+## <summary>
+##	Read temporary files from the system cron jobs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`cron_read_system_job_lib_files',`
+	gen_require(`
+		type system_cronjob_var_lib_t;
+	')
+
+
+	read_files_pattern($1, system_cronjob_var_lib_t,  system_cronjob_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage files from the system cron jobs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`cron_manage_system_job_lib_files',`
+	gen_require(`
+		type system_cronjob_var_lib_t;
+	')
+
+
+	manage_files_pattern($1, system_cronjob_var_lib_t,  system_cronjob_var_lib_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cron.te serefpolicy-3.7.19/policy/modules/services/cron.te
--- nsaserefpolicy/policy/modules/services/cron.te	2011-03-17 07:21:21.879851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cron.te	2012-04-17 10:35:33.018048895 +0000
@@ -38,8 +38,10 @@
 type cron_var_lib_t;
 files_type(cron_var_lib_t)
 
+# var/lib files
 type cron_var_run_t;
 files_type(cron_var_run_t)
+mta_system_content(crond_var_run_t)
 
 # var/log files
 type cron_log_t;
@@ -64,9 +66,12 @@
 
 type crond_tmp_t;
 files_tmp_file(crond_tmp_t)
+files_poly_parent(crond_tmp_t)
+mta_system_content(crond_tmp_t)
 
 type crond_var_run_t;
 files_pid_file(crond_var_run_t)
+mta_system_content(crond_var_run_t)
 
 type crontab_exec_t;
 application_executable_file(crontab_exec_t)
@@ -80,6 +85,7 @@
 typealias crontab_t alias { auditadm_crontab_t secadm_crontab_t };
 typealias crontab_tmp_t alias { user_crontab_tmp_t staff_crontab_tmp_t };
 typealias crontab_tmp_t alias { auditadm_crontab_tmp_t secadm_crontab_tmp_t };
+allow admin_crontab_t crond_t:process signal;
 
 type system_cron_spool_t, cron_spool_type;
 files_type(system_cron_spool_t)
@@ -88,6 +94,7 @@
 init_daemon_domain(system_cronjob_t, anacron_exec_t)
 corecmd_shell_entry_type(system_cronjob_t)
 role system_r types system_cronjob_t;
+domtrans_pattern(crond_t, anacron_exec_t, system_cronjob_t)
 
 type system_cronjob_lock_t alias system_crond_lock_t;
 files_lock_file(system_cronjob_lock_t)
@@ -109,6 +116,14 @@
 typealias user_cron_spool_t alias { auditadm_cron_spool_t secadm_cron_spool_t };
 files_type(user_cron_spool_t)
 ubac_constrained(user_cron_spool_t)
+mta_system_content(user_cron_spool_t)
+
+type system_cronjob_var_lib_t;
+files_type(system_cronjob_var_lib_t)
+typealias system_cronjob_var_lib_t alias system_crond_var_lib_t;
+
+type system_cronjob_var_run_t;
+files_pid_file(system_cronjob_var_run_t)
 
 ########################################
 #
@@ -139,7 +154,7 @@
 
 allow crond_t self:capability { dac_override setgid setuid sys_nice dac_read_search };
 dontaudit crond_t self:capability { sys_resource sys_tty_config };
-allow crond_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
+allow crond_t self:process ~{ ptrace setcurrent setexec setfscreate execmem execstack execheap };
 allow crond_t self:process { setexec setfscreate };
 allow crond_t self:fd use;
 allow crond_t self:fifo_file rw_fifo_file_perms;
@@ -152,6 +167,7 @@
 allow crond_t self:msgq create_msgq_perms;
 allow crond_t self:msg { send receive };
 allow crond_t self:key { search write link };
+dontaudit crond_t self:netlink_audit_socket nlmsg_tty_audit;
 
 manage_files_pattern(crond_t, cron_log_t, cron_log_t)
 logging_log_filetrans(crond_t, cron_log_t, file)
@@ -168,6 +184,9 @@
 list_dirs_pattern(crond_t, system_cron_spool_t, system_cron_spool_t)
 read_files_pattern(crond_t, system_cron_spool_t, system_cron_spool_t)
 
+read_lnk_files_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
+
+
 kernel_read_kernel_sysctls(crond_t)
 kernel_read_fs_sysctls(crond_t)
 kernel_search_key(crond_t)
@@ -194,6 +213,8 @@
 corecmd_read_bin_symlinks(crond_t)
 
 domain_use_interactive_fds(crond_t)
+domain_subj_id_change_exemption(crond_t)
+domain_role_change_exemption(crond_t)
 
 files_read_usr_files(crond_t)
 files_read_etc_runtime_files(crond_t)
@@ -204,12 +225,25 @@
 files_search_var_lib(crond_t)
 files_search_default(crond_t)
 
+# needed by "crontab -e"
+mls_file_read_all_levels(crond_t)
+mls_file_write_all_levels(crond_t)
+
+# needed because of kernel check of transition
+mls_process_set_level(crond_t)
+
+# to make cronjob working
+mls_fd_share_all_levels(crond_t)
+mls_trusted_object(crond_t)
+
 init_rw_utmp(crond_t)
 init_spec_domtrans_script(crond_t)
 
 auth_use_nsswitch(crond_t)
 
+logging_send_audit_msgs(crond_t)
 logging_send_syslog_msg(crond_t)
+logging_set_loginuid(crond_t)
 
 seutil_read_config(crond_t)
 seutil_read_default_contexts(crond_t)
@@ -220,8 +254,10 @@
 userdom_use_unpriv_users_fds(crond_t)
 # Not sure why this is needed
 userdom_list_user_home_dirs(crond_t)
+userdom_manage_all_users_keys(crond_t)
 
 mta_send_mail(crond_t)
+mta_system_content(cron_spool_t)
 
 ifdef(`distro_debian',`
 	# pam_limits is used
@@ -241,8 +277,17 @@
 	')
 ')
 
-tunable_policy(`fcron_crond', `
-	allow crond_t system_cron_spool_t:file manage_file_perms;
+tunable_policy(`allow_polyinstantiation',`
+	files_polyinstantiate_all(crond_t)
+')
+
+optional_policy(`
+	apache_search_sys_content(crond_t)
+')
+
+optional_policy(`
+    djbdns_search_key_tinydns(crond_t)
+    djbdns_link_key_tinydns(crond_t)
 ')
 
 optional_policy(`
@@ -251,6 +296,20 @@
 ')
 
 optional_policy(`
+	# these should probably be unconfined_crond_t
+	dbus_system_bus_client(crond_t)
+	init_dbus_send_script(crond_t)
+')
+
+optional_policy(`
+	mono_domtrans(crond_t)
+')
+
+tunable_policy(`fcron_crond', `
+	allow crond_t system_cron_spool_t:file manage_file_perms;
+')
+
+optional_policy(`
 	amanda_search_var_lib(crond_t)
 ')
 
@@ -260,6 +319,8 @@
 
 optional_policy(`
 	hal_dbus_chat(crond_t)
+	hal_write_log(crond_t)
+	hal_dbus_chat(system_cronjob_t)
 ')
 
 optional_policy(`
@@ -291,6 +352,8 @@
 #
 
 allow system_cronjob_t self:capability { dac_override dac_read_search chown setgid setuid fowner net_bind_service fsetid sys_nice };
+dontaudit system_cronjob_t self:capability sys_ptrace;
+
 allow system_cronjob_t self:process { signal_perms getsched setsched };
 allow system_cronjob_t self:fifo_file rw_fifo_file_perms;
 allow system_cronjob_t self:passwd rootok;
@@ -302,10 +365,17 @@
 
 # This is to handle /var/lib/misc directory.  Used currently
 # by prelink var/lib files for cron 
-allow system_cronjob_t cron_var_lib_t:file manage_file_perms;
+allow system_cronjob_t cron_var_lib_t:file { manage_file_perms relabelfrom relabelto };
 files_var_lib_filetrans(system_cronjob_t, cron_var_lib_t, file)
 
+allow system_cronjob_t cron_var_run_t:file manage_file_perms;
+files_pid_filetrans(system_cronjob_t, cron_var_run_t, file)
+
 allow system_cronjob_t system_cron_spool_t:file read_file_perms;
+
+# anacron forces the following
+manage_files_pattern(system_cronjob_t, system_cron_spool_t, system_cron_spool_t)
+
 # The entrypoint interface is not used as this is not
 # a regular entrypoint.  Since crontab files are
 # not directly executed, crond must ensure that
@@ -325,6 +395,7 @@
 allow system_cronjob_t crond_t:fd use;
 allow system_cronjob_t crond_t:fifo_file rw_file_perms;
 allow system_cronjob_t crond_t:process sigchld;
+allow crond_t system_cronjob_t:key manage_key_perms;
 
 # Write /var/lock/makewhatis.lock.
 allow system_cronjob_t system_cronjob_lock_t:file manage_file_perms;
@@ -336,11 +407,16 @@
 filetrans_pattern(system_cronjob_t, crond_tmp_t, system_cronjob_tmp_t, { file lnk_file })
 files_tmp_filetrans(system_cronjob_t, system_cronjob_tmp_t, file)
 
+# var/lib files for system_crond
+files_search_var_lib(system_cronjob_t)
+manage_files_pattern(system_cronjob_t, system_cronjob_var_lib_t, system_cronjob_var_lib_t)
+
 # Read from /var/spool/cron.
 allow system_cronjob_t cron_spool_t:dir list_dir_perms;
-allow system_cronjob_t cron_spool_t:file read_file_perms;
+allow system_cronjob_t cron_spool_t:file rw_file_perms;
 
 kernel_read_kernel_sysctls(system_cronjob_t)
+kernel_read_network_state(system_cronjob_t)
 kernel_read_system_state(system_cronjob_t)
 kernel_read_software_raid_state(system_cronjob_t)
 
@@ -361,6 +437,7 @@
 dev_getattr_all_blk_files(system_cronjob_t)
 dev_getattr_all_chr_files(system_cronjob_t)
 dev_read_urand(system_cronjob_t)
+dev_read_sysfs(system_cronjob_t)
 
 fs_getattr_all_fs(system_cronjob_t)
 fs_getattr_all_files(system_cronjob_t)
@@ -387,6 +464,9 @@
 # Access other spool directories like
 # /var/spool/anacron and /var/spool/slrnpull.
 files_manage_generic_spool(system_cronjob_t)
+files_create_boot_flag(system_cronjob_t)
+
+mls_file_read_to_clearance(system_cronjob_t)
 
 init_use_script_fds(system_cronjob_t)
 init_read_utmp(system_cronjob_t)
@@ -411,6 +491,8 @@
 
 ifdef(`distro_redhat', `
 	# Run the rpm program in the rpm_t domain. Allow creation of RPM log files
+	allow crond_t system_cron_spool_t:file manage_file_perms;
+
 	# via redirection of standard out.
 	optional_policy(`
 		rpm_manage_log(system_cronjob_t)
@@ -435,6 +517,8 @@
 	apache_read_config(system_cronjob_t)
 	apache_read_log(system_cronjob_t)
 	apache_read_sys_content(system_cronjob_t)
+	apache_delete_cache_dirs(system_cronjob_t)
+	apache_delete_cache_files(system_cronjob_t)
 ')
 
 optional_policy(`
@@ -442,6 +526,14 @@
 ')
 
 optional_policy(`
+	dbus_system_bus_client(system_cronjob_t)
+')
+
+optional_policy(`
+	exim_read_spool_files(system_cronjob_t)
+')
+
+optional_policy(`
 	ftp_read_log(system_cronjob_t)
 ')
 
@@ -452,15 +544,24 @@
 ')
 
 optional_policy(`
+	livecd_read_tmp_files(system_cronjob_t)
+')
+
+optional_policy(`
 	lpd_list_spool(system_cronjob_t)
 ')
 
 optional_policy(`
+	mono_domtrans(system_cronjob_t)
+')
+
+optional_policy(`
 	mrtg_append_create_logs(system_cronjob_t)
 ')
 
 optional_policy(`
 	mta_send_mail(system_cronjob_t)
+	mta_system_content(system_cron_spool_t)
 ')
 
 optional_policy(`
@@ -476,7 +577,7 @@
 	prelink_manage_lib(system_cronjob_t)
 	prelink_manage_log(system_cronjob_t)
 	prelink_read_cache(system_cronjob_t)
-	prelink_relabelfrom_lib(system_cronjob_t)
+	prelink_relabel_lib(system_cronjob_t)
 ')
 
 optional_policy(`
@@ -491,6 +592,7 @@
 
 optional_policy(`
 	spamassassin_manage_lib_files(system_cronjob_t)
+	spamassassin_manage_home_client(system_cronjob_t)
 ')
 
 optional_policy(`
@@ -498,7 +600,13 @@
 ')
 
 optional_policy(`
+	unconfined_domain(crond_t)
 	unconfined_domain(system_cronjob_t)
+')
+
+optional_policy(`
+	unconfined_dbus_send(crond_t)
+	unconfined_shell_domtrans(crond_t)
 	userdom_user_home_dir_filetrans_user_home_content(system_cronjob_t, { dir file lnk_file fifo_file sock_file })
 ')
 
@@ -591,6 +699,7 @@
 #userdom_user_home_dir_filetrans_user_home_content(cronjob_t, notdevfile_class_set)
 
 list_dirs_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
+rw_dirs_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
 read_files_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
 
 tunable_policy(`fcron_crond', `
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ctdbd.fc serefpolicy-3.7.19/policy/modules/services/ctdbd.fc
--- nsaserefpolicy/policy/modules/services/ctdbd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ctdbd.fc	2011-08-02 09:00:45.353523005 +0000
@@ -0,0 +1,18 @@
+
+/etc/rc\.d/init\.d/ctdb	--	gen_context(system_u:object_r:ctdbd_initrc_exec_t,s0)
+
+/etc/ctdb(/.*)?				gen_context(system_u:object_r:ctdbd_var_lib_t,s0)
+
+/usr/sbin/ctdbd			--	gen_context(system_u:object_r:ctdbd_exec_t,s0)
+
+/var/log/log\.ctdb		--	gen_context(system_u:object_r:ctdbd_log_t,s0)
+
+/var/spool/ctdb(/.*)?		gen_context(system_u:object_r:ctdbd_spool_t,s0)
+
+/var/run/ctdbd(/.*)?		gen_context(system_u:object_r:ctdbd_var_run_t,s0)
+
+
+/var/ctdbd(/.*)?		gen_context(system_u:object_r:ctdbd_var_lib_t,s0)
+/var/ctdb(/.*)?			gen_context(system_u:object_r:ctdbd_var_lib_t,s0)
+/var/lib/ctdbd(/.*)?	gen_context(system_u:object_r:ctdbd_var_lib_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ctdbd.if serefpolicy-3.7.19/policy/modules/services/ctdbd.if
--- nsaserefpolicy/policy/modules/services/ctdbd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ctdbd.if	2011-08-10 19:16:33.577523004 +0000
@@ -0,0 +1,256 @@
+
+## <summary>policy for ctdbd</summary>
+
+########################################
+## <summary>
+##	Transition to ctdbd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`ctdbd_domtrans',`
+	gen_require(`
+		type ctdbd_t, ctdbd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, ctdbd_exec_t, ctdbd_t)
+')
+
+########################################
+## <summary>
+##	Execute ctdbd server in the ctdbd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ctdbd_initrc_domtrans',`
+	gen_require(`
+		type ctdbd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, ctdbd_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Read ctdbd's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`ctdbd_read_log',`
+	gen_require(`
+		type ctdbd_log_t;
+	')
+
+	logging_search_logs($1)
+        read_files_pattern($1, ctdbd_log_t, ctdbd_log_t)
+')
+
+########################################
+## <summary>
+##	Append to ctdbd log files.
+## </summary>
+## <param name="domain">
+## 	<summary>
+##	Domain allowed to transition.
+## 	</summary>
+## </param>
+#
+interface(`ctdbd_append_log',`
+	gen_require(`
+		type ctdbd_log_t;
+	')
+
+	logging_search_logs($1)
+        append_files_pattern($1, ctdbd_log_t, ctdbd_log_t)
+')
+
+########################################
+## <summary>
+##	Manage ctdbd log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`ctdbd_manage_log',`
+	gen_require(`
+		type ctdbd_log_t;
+	')
+
+	logging_search_logs($1)
+        manage_dirs_pattern($1, ctdbd_log_t, ctdbd_log_t)
+        manage_files_pattern($1, ctdbd_log_t, ctdbd_log_t)
+        manage_lnk_files_pattern($1, ctdbd_log_t, ctdbd_log_t)
+')
+
+########################################
+## <summary>
+##	Search ctdbd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ctdbd_search_lib',`
+	gen_require(`
+		type ctdbd_var_lib_t;
+	')
+
+	allow $1 ctdbd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read ctdbd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ctdbd_read_lib_files',`
+	gen_require(`
+		type ctdbd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, ctdbd_var_lib_t, ctdbd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage ctdbd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ctdbd_manage_lib_files',`
+	gen_require(`
+		type ctdbd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, ctdbd_var_lib_t, ctdbd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage ctdbd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ctdbd_manage_lib_dirs',`
+	gen_require(`
+		type ctdbd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_dirs_pattern($1, ctdbd_var_lib_t, ctdbd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Read ctdbd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ctdbd_read_pid_files',`
+	gen_require(`
+		type ctdbd_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 ctdbd_var_run_t:file read_file_perms;
+')
+
+#######################################
+## <summary>
+##  Connect to ctdbd over an unix stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`ctdbd_stream_connect',`
+    gen_require(`
+        type ctdbd_t, ctdbd_var_run_t, ctdbd_tmp_t;
+    ')
+
+    files_search_pids($1)
+    stream_connect_pattern($1, ctdbd_var_run_t, ctdbd_var_run_t, ctdbd_t)
+	stream_connect_pattern($1, ctdbd_tmp_t, ctdbd_tmp_t, ctdbd_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an ctdbd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`ctdbd_admin',`
+	gen_require(`
+		type ctdbd_t, ctdbd_initrc_exec_t;
+		type ctdbd_log_t, ctdbd_var_lib_t, ctdbd_var_run_t;
+	')
+
+	allow $1 ctdbd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, ctdbd_t)
+
+	ctdbd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 ctdbd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, ctdbd_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, ctdbd_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, ctdbd_var_run_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ctdbd.te serefpolicy-3.7.19/policy/modules/services/ctdbd.te
--- nsaserefpolicy/policy/modules/services/ctdbd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ctdbd.te	2011-08-30 14:17:52.343160001 +0000
@@ -0,0 +1,117 @@
+policy_module(ctdbd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type ctdbd_t;
+type ctdbd_exec_t;
+init_daemon_domain(ctdbd_t, ctdbd_exec_t)
+
+type ctdbd_initrc_exec_t;
+init_script_file(ctdbd_initrc_exec_t)
+
+type ctdbd_log_t;
+logging_log_file(ctdbd_log_t)
+
+type ctdbd_spool_t;
+files_type(ctdbd_spool_t)
+#files_spool_file(ctdbd_spool_t)
+
+type ctdbd_tmp_t;
+files_tmp_file(ctdbd_tmp_t)
+
+type ctdbd_var_lib_t;
+files_type(ctdbd_var_lib_t)
+
+type ctdbd_var_run_t;
+files_pid_file(ctdbd_var_run_t)
+
+########################################
+#
+# ctdbd local policy
+#
+
+allow ctdbd_t self:capability { chown ipc_lock net_admin net_raw sys_nice sys_ptrace };
+allow ctdbd_t self:process { setpgid signal_perms setsched };
+
+allow ctdbd_t self:fifo_file rw_fifo_file_perms;
+allow ctdbd_t self:unix_stream_socket { connectto create_stream_socket_perms };
+allow ctdbd_t self:netlink_route_socket r_netlink_socket_perms;
+allow ctdbd_t self:packet_socket create_socket_perms;
+allow ctdbd_t self:tcp_socket create_stream_socket_perms;
+
+manage_dirs_pattern(ctdbd_t, ctdbd_log_t, ctdbd_log_t)
+manage_files_pattern(ctdbd_t, ctdbd_log_t, ctdbd_log_t)
+logging_log_filetrans(ctdbd_t, ctdbd_log_t, { dir file } )
+
+manage_files_pattern(ctdbd_t, ctdbd_tmp_t, ctdbd_tmp_t)
+manage_sock_files_pattern(ctdbd_t, ctdbd_tmp_t, ctdbd_tmp_t)
+files_tmp_filetrans(ctdbd_t, ctdbd_tmp_t, { file sock_file})
+
+manage_dirs_pattern(ctdbd_t, ctdbd_spool_t, ctdbd_spool_t)
+manage_files_pattern(ctdbd_t, ctdbd_spool_t, ctdbd_spool_t)
+manage_lnk_files_pattern(ctdbd_t, ctdbd_spool_t, ctdbd_spool_t)
+files_spool_filetrans(ctdbd_t, ctdbd_spool_t, { dir file })
+
+exec_files_pattern(ctdbd_t, ctdbd_var_lib_t, ctdbd_var_lib_t)
+manage_dirs_pattern(ctdbd_t, ctdbd_var_lib_t, ctdbd_var_lib_t)
+manage_files_pattern(ctdbd_t, ctdbd_var_lib_t, ctdbd_var_lib_t)
+files_var_lib_filetrans(ctdbd_t, ctdbd_var_lib_t, { dir file } )
+
+manage_dirs_pattern(ctdbd_t, ctdbd_var_run_t, ctdbd_var_run_t)
+manage_files_pattern(ctdbd_t, ctdbd_var_run_t, ctdbd_var_run_t)
+files_pid_filetrans(ctdbd_t, ctdbd_var_run_t, { dir file })
+
+kernel_read_network_state(ctdbd_t)
+kernel_rw_net_sysctls(ctdbd_t)
+kernel_read_system_state(ctdbd_t)
+
+corenet_tcp_bind_generic_node(ctdbd_t)
+corenet_tcp_bind_ctdb_port(ctdbd_t)
+corenet_tcp_connect_ctdb_port(ctdbd_t)
+
+corecmd_exec_bin(ctdbd_t)
+corecmd_exec_shell(ctdbd_t)
+
+dev_read_sysfs(ctdbd_t)
+dev_read_urand(ctdbd_t)
+
+domain_use_interactive_fds(ctdbd_t)
+domain_dontaudit_read_all_domains_state(ctdbd_t)
+
+files_read_etc_files(ctdbd_t)
+files_search_all_mountpoints(ctdbd_t)
+
+logging_send_syslog_msg(ctdbd_t)
+
+miscfiles_read_localization(ctdbd_t)
+miscfiles_read_public_files(ctdbd_t)
+
+
+optional_policy(`
+	consoletype_exec(ctdbd_t)
+')
+
+optional_policy(`
+	hostname_exec(ctdbd_t)
+')
+
+optional_policy(`
+	iptables_domtrans(ctdbd_t)
+')
+
+optional_policy(`
+	samba_initrc_domtrans(ctdbd_t)
+	samba_domtrans_net(ctdbd_t)
+	samba_rw_var_files(ctdbd_t)
+')
+
+optional_policy(`
+	sysnet_domtrans_ifconfig(ctdbd_t)
+')
+
+optional_policy(`
+	unconfined_domain(ctdbd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cups.fc serefpolicy-3.7.19/policy/modules/services/cups.fc
--- nsaserefpolicy/policy/modules/services/cups.fc	2011-03-17 07:21:22.114851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cups.fc	2011-03-17 09:51:04.666851002 +0000
@@ -13,10 +13,14 @@
 /etc/cups/certs/.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 /etc/rc\.d/init\.d/cups	--	gen_context(system_u:object_r:cupsd_initrc_exec_t,s0)
 
+/etc/cups/interfaces(/.*)?	gen_context(system_u:object_r:cupsd_interface_t,s0)
+
 /etc/hp(/.*)?			gen_context(system_u:object_r:hplip_etc_t,s0)
 
 /etc/printcap.* 	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 
+/lib/udev/udev-configure-printer --	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
+
 /opt/gutenprint/ppds(/.*)? 	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 
 /usr/bin/cups-config-daemon --	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
@@ -30,6 +34,7 @@
 /usr/lib/cups/backend/hp.* --	gen_context(system_u:object_r:hplip_exec_t,s0)
 /usr/lib64/cups/backend/hp.* -- gen_context(system_u:object_r:hplip_exec_t,s0)
 
+/usr/libexec/cups-pk-helper-mechanism	--	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
 /usr/libexec/hal_lpadmin --	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
 
 /usr/sbin/hp-[^/]+	--	gen_context(system_u:object_r:hplip_exec_t,s0)
@@ -52,13 +57,23 @@
 /var/lib/cups/certs	-d	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 /var/lib/cups/certs/.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 
+/var/lib/hp(/.*)?		gen_context(system_u:object_r:hplip_var_lib_t,s0)
+
 /var/log/cups(/.*)?		gen_context(system_u:object_r:cupsd_log_t,s0)
 /var/log/turboprint.*		gen_context(system_u:object_r:cupsd_log_t,s0)
 
 /var/ccpd(/.*)?			gen_context(system_u:object_r:cupsd_var_run_t,s0)
-/var/run/cups(/.*)?		gen_context(system_u:object_r:cupsd_var_run_t,s0)
+/var/ekpd(/.*)?			gen_context(system_u:object_r:cupsd_var_run_t,s0)
+/var/run/cups(/.*)?            gen_context(system_u:object_r:cupsd_var_run_t,mls_systemhigh)
 /var/run/hp.*\.pid	--	gen_context(system_u:object_r:hplip_var_run_t,s0)
 /var/run/hp.*\.port	--	gen_context(system_u:object_r:hplip_var_run_t,s0)
 /var/run/ptal-printd(/.*)?	gen_context(system_u:object_r:ptal_var_run_t,s0)
 /var/run/ptal-mlcd(/.*)?	gen_context(system_u:object_r:ptal_var_run_t,s0)
+/var/run/udev-configure-printer(/.*)? 	gen_context(system_u:object_r:cupsd_config_var_run_t,s0)
 /var/turboprint(/.*)?		gen_context(system_u:object_r:cupsd_var_run_t,s0)
+
+/usr/local/Brother/fax/.*\.log		gen_context(system_u:object_r:cupsd_log_t,s0)
+/usr/local/Brother/(.*/)?inf(/.*)?      gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/usr/local/Printer/(.*/)?inf(/.*)?      gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+
+/usr/local/linuxprinter/ppd(/.*)?      gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cups.if serefpolicy-3.7.19/policy/modules/services/cups.if
--- nsaserefpolicy/policy/modules/services/cups.if	2011-03-17 07:21:21.221851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cups.if	2011-08-10 18:14:20.601523005 +0000
@@ -6,9 +6,14 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
+## <param name="entry_file">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
 #
 interface(`cups_backend',`
 	gen_require(`
@@ -314,7 +319,7 @@
 interface(`cups_admin',`
 	gen_require(`
 		type cupsd_t, cupsd_tmp_t, cupsd_lpd_tmp_t;
-		type cupsd_etc_t, cupsd_log_t, cupsd_spool_t;
+		type cupsd_etc_t, cupsd_log_t;
 		type cupsd_config_var_run_t, cupsd_lpd_var_run_t;
 		type cupsd_var_run_t, ptal_etc_t;
 		type ptal_var_run_t, hplip_var_run_t;
@@ -341,9 +346,6 @@
 
 	admin_pattern($1, cupsd_lpd_var_run_t)
 
-	admin_pattern($1, cupsd_spool_t)
-	files_list_spool($1)
-
 	admin_pattern($1, cupsd_tmp_t)
 	files_list_tmp($1)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cups.te serefpolicy-3.7.19/policy/modules/services/cups.te
--- nsaserefpolicy/policy/modules/services/cups.te	2011-03-17 07:21:21.517851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cups.te	2012-04-10 10:40:38.636526844 +0000
@@ -16,6 +16,7 @@
 type cupsd_t;
 type cupsd_exec_t;
 init_daemon_domain(cupsd_t, cupsd_exec_t)
+mls_trusted_object(cupsd_t)
 
 type cupsd_etc_t;
 files_config_file(cupsd_etc_t)
@@ -23,6 +24,9 @@
 type cupsd_initrc_exec_t;
 init_script_file(cupsd_initrc_exec_t)
 
+type cupsd_interface_t;
+files_type(cupsd_interface_t)
+
 type cupsd_rw_etc_t;
 files_config_file(cupsd_rw_etc_t)
 
@@ -64,11 +68,14 @@
 # For CUPS to run as a backend
 cups_backend(hplip_t, hplip_exec_t)
 
+type hplip_tmp_t;
+files_tmp_file(hplip_tmp_t)
+
 type hplip_etc_t;
 files_config_file(hplip_etc_t)
 
-type hplip_tmp_t;
-files_tmp_file(hplip_tmp_t)
+type hplip_var_lib_t;
+files_type(hplip_var_lib_t)
 
 type hplip_var_run_t;
 files_pid_file(hplip_var_run_t)
@@ -97,7 +104,7 @@
 #
 
 # /usr/lib/cups/backend/serial needs sys_admin(?!)
-allow cupsd_t self:capability { sys_admin dac_override dac_read_search kill setgid setuid fsetid net_bind_service fowner chown dac_override sys_rawio sys_resource sys_tty_config };
+allow cupsd_t self:capability { ipc_lock sys_admin dac_override dac_read_search kill setgid setuid fsetid net_bind_service fowner chown dac_override sys_rawio sys_resource sys_tty_config };
 dontaudit cupsd_t self:capability { sys_tty_config net_admin };
 allow cupsd_t self:process { getpgid setpgid setsched signal_perms };
 allow cupsd_t self:fifo_file rw_fifo_file_perms;
@@ -105,6 +112,7 @@
 allow cupsd_t self:unix_dgram_socket create_socket_perms;
 allow cupsd_t self:netlink_selinux_socket create_socket_perms;
 allow cupsd_t self:shm create_shm_perms;
+allow cupsd_t self:sem create_sem_perms;
 allow cupsd_t self:tcp_socket create_stream_socket_perms;
 allow cupsd_t self:udp_socket create_socket_perms;
 allow cupsd_t self:appletalk_socket create_socket_perms;
@@ -116,6 +124,9 @@
 read_lnk_files_pattern(cupsd_t, cupsd_etc_t, cupsd_etc_t)
 files_search_etc(cupsd_t)
 
+manage_files_pattern(cupsd_t, cupsd_interface_t, cupsd_interface_t)
+can_exec(cupsd_t, cupsd_interface_t)
+
 manage_dirs_pattern(cupsd_t, cupsd_etc_t, cupsd_rw_etc_t)
 manage_files_pattern(cupsd_t, cupsd_etc_t, cupsd_rw_etc_t)
 filetrans_pattern(cupsd_t, cupsd_etc_t, cupsd_rw_etc_t, file)
@@ -129,6 +140,7 @@
 allow cupsd_t cupsd_lock_t:file manage_file_perms;
 files_lock_filetrans(cupsd_t, cupsd_lock_t, file)
 
+manage_dirs_pattern(cupsd_t, cupsd_log_t, cupsd_log_t)
 manage_files_pattern(cupsd_t, cupsd_log_t, cupsd_log_t)
 allow cupsd_t cupsd_log_t:dir setattr;
 logging_log_filetrans(cupsd_t, cupsd_log_t, { file dir })
@@ -156,6 +168,7 @@
 kernel_read_system_state(cupsd_t)
 kernel_read_network_state(cupsd_t)
 kernel_read_all_sysctls(cupsd_t)
+kernel_request_load_module(cupsd_t)
 
 corenet_all_recvfrom_unlabeled(cupsd_t)
 corenet_all_recvfrom_netlabel(cupsd_t)
@@ -171,6 +184,7 @@
 corenet_udp_bind_generic_node(cupsd_t)
 corenet_tcp_bind_ipp_port(cupsd_t)
 corenet_udp_bind_ipp_port(cupsd_t)
+corenet_udp_bind_howl_port(cupsd_t)
 corenet_tcp_bind_reserved_port(cupsd_t)
 corenet_dontaudit_tcp_bind_all_reserved_ports(cupsd_t)
 corenet_tcp_bind_all_rpc_ports(cupsd_t)
@@ -191,6 +205,7 @@
 
 fs_getattr_all_fs(cupsd_t)
 fs_search_auto_mountpoints(cupsd_t)
+fs_search_fusefs(cupsd_t)
 fs_read_anon_inodefs_files(cupsd_t)
 
 mls_file_downgrade(cupsd_t)
@@ -214,6 +229,7 @@
 files_read_etc_runtime_files(cupsd_t)
 # read python modules
 files_read_usr_files(cupsd_t)
+files_exec_usr_files(cupsd_t)
 # for /var/lib/defoma
 files_read_var_lib_files(cupsd_t)
 files_list_world_readable(cupsd_t)
@@ -250,6 +266,7 @@
 miscfiles_read_localization(cupsd_t)
 # invoking ghostscript needs to read fonts
 miscfiles_read_fonts(cupsd_t)
+miscfiles_setattr_fonts_cache_dirs(cupsd_t)
 
 seutil_read_config(cupsd_t)
 sysnet_exec_ifconfig(cupsd_t)
@@ -285,8 +302,10 @@
 		hal_dbus_chat(cupsd_t)
 	')
 
+	# talk to processes that do not have policy
 	optional_policy(`
 		unconfined_dbus_chat(cupsd_t)
+		files_write_generic_pid_pipes(cupsd_t)
 	')
 ')
 
@@ -317,6 +336,10 @@
 ')
 
 optional_policy(`
+	snmp_read_snmp_var_lib_files(cupsd_t)
+')
+
+optional_policy(`
 	udev_read_db(cupsd_t)
 ')
 
@@ -327,7 +350,7 @@
 
 allow cupsd_config_t self:capability { chown dac_override sys_tty_config };
 dontaudit cupsd_config_t self:capability sys_tty_config;
-allow cupsd_config_t self:process signal_perms;
+allow cupsd_config_t self:process { getsched signal_perms };
 allow cupsd_config_t self:fifo_file rw_fifo_file_perms;
 allow cupsd_config_t self:unix_stream_socket create_socket_perms;
 allow cupsd_config_t self:unix_dgram_socket create_socket_perms;
@@ -378,6 +401,8 @@
 dev_read_rand(cupsd_config_t)
 dev_rw_generic_usb_dev(cupsd_config_t)
 
+files_search_all_mountpoints(cupsd_config_t)
+
 fs_getattr_all_fs(cupsd_config_t)
 fs_search_auto_mountpoints(cupsd_config_t)
 
@@ -407,6 +432,7 @@
 
 userdom_dontaudit_use_unpriv_user_fds(cupsd_config_t)
 userdom_dontaudit_search_user_home_dirs(cupsd_config_t)
+userdom_rw_user_tmp_files(cupsd_config_t)
 
 cups_stream_connect(cupsd_config_t)
 
@@ -419,12 +445,15 @@
 ')
 
 optional_policy(`
+	term_use_generic_ptys(cupsd_config_t)
+')
+
+optional_policy(`
 	cron_system_entry(cupsd_config_t, cupsd_config_exec_t)
 ')
 
 optional_policy(`
-	dbus_system_bus_client(cupsd_config_t)
-	dbus_connect_system_bus(cupsd_config_t)
+	dbus_system_domain(cupsd_config_t, cupsd_config_exec_t)
 
 	optional_policy(`
 		hal_dbus_chat(cupsd_config_t)
@@ -432,6 +461,10 @@
 ')
 
 optional_policy(`
+	gnome_dontaudit_search_config(cupsd_config_t)
+')
+
+optional_policy(`
 	hal_domtrans(cupsd_config_t)
 	hal_read_tmp_files(cupsd_config_t)
 	hal_dontaudit_use_fds(hplip_t)
@@ -446,6 +479,11 @@
 ')
 
 optional_policy(`
+	policykit_dbus_chat(cupsd_config_t)
+	userdom_read_all_users_state(cupsd_config_t)
+')
+
+optional_policy(`
 	rpm_read_db(cupsd_config_t)
 ')
 
@@ -457,6 +495,10 @@
 	udev_read_db(cupsd_config_t)
 ')
 
+optional_policy(`
+	unconfined_stream_connect(cupsd_config_t)
+')
+
 ########################################
 #
 # Cups lpd support
@@ -520,6 +562,7 @@
 logging_send_syslog_msg(cupsd_lpd_t)
 
 miscfiles_read_localization(cupsd_lpd_t)
+miscfiles_setattr_fonts_cache_dirs(cupsd_lpd_t)
 
 cups_stream_connect(cupsd_lpd_t)
 
@@ -532,7 +575,7 @@
 # cups_pdf local policy
 #
 
-allow cups_pdf_t self:capability { chown fsetid setuid setgid dac_override };
+allow cups_pdf_t self:capability { chown fowner fsetid setuid setgid dac_override };
 allow cups_pdf_t self:fifo_file rw_file_perms;
 allow cups_pdf_t self:unix_stream_socket create_stream_socket_perms;
 
@@ -542,6 +585,8 @@
 manage_dirs_pattern(cups_pdf_t, cups_pdf_tmp_t, cups_pdf_tmp_t)
 files_tmp_filetrans(cups_pdf_t, cups_pdf_tmp_t, { file dir })
 
+fs_rw_anon_inodefs_files(cups_pdf_t)
+
 kernel_read_system_state(cups_pdf_t)
 
 files_read_etc_files(cups_pdf_t)
@@ -554,15 +599,23 @@
 
 miscfiles_read_localization(cups_pdf_t)
 miscfiles_read_fonts(cups_pdf_t)
+miscfiles_setattr_fonts_cache_dirs(cups_pdf_t)
 
 userdom_home_filetrans_user_home_dir(cups_pdf_t)
+userdom_user_home_dir_filetrans_pattern(cups_pdf_t, { file dir })
+userdom_read_user_home_content_symlinks(cups_pdf_t)
 userdom_manage_user_home_content_dirs(cups_pdf_t)
 userdom_manage_user_home_content_files(cups_pdf_t)
+userdom_dontaudit_search_admin_dir(cups_pdf_t)
 
 lpd_manage_spool(cups_pdf_t)
 
+optional_policy(`
+	gnome_read_config(cups_pdf_t)
+')
 
 tunable_policy(`use_nfs_home_dirs',`
+	fs_search_auto_mountpoints(cups_pdf_t)
 	fs_manage_nfs_dirs(cups_pdf_t)
 	fs_manage_nfs_files(cups_pdf_t)
 ')
@@ -601,6 +654,9 @@
 read_lnk_files_pattern(hplip_t, hplip_etc_t, hplip_etc_t)
 files_search_etc(hplip_t)
 
+manage_files_pattern(hplip_t, hplip_var_lib_t, hplip_var_lib_t)
+manage_lnk_files_pattern(hplip_t, hplip_var_lib_t, hplip_var_lib_t)
+
 manage_fifo_files_pattern(hplip_t, hplip_tmp_t, hplip_tmp_t)
 files_tmp_filetrans(hplip_t, hplip_tmp_t, fifo_file )
 
@@ -627,6 +683,7 @@
 corenet_tcp_connect_ipp_port(hplip_t)
 corenet_sendrecv_hplip_client_packets(hplip_t)
 corenet_receive_hplip_server_packets(hplip_t)
+corenet_udp_bind_howl_port(hplip_t)
 
 dev_read_sysfs(hplip_t)
 dev_rw_printer(hplip_t)
@@ -647,6 +704,8 @@
 files_read_etc_files(hplip_t)
 files_read_etc_runtime_files(hplip_t)
 files_read_usr_files(hplip_t)
+# bug 616010
+files_dontaudit_write_usr_dirs(hplip_t)
 
 logging_send_syslog_msg(hplip_t)
 
@@ -735,6 +794,10 @@
 userdom_dontaudit_search_user_home_content(ptal_t)
 
 optional_policy(`
+	kerberos_manage_host_rcache(cupsd_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(ptal_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cvs.if serefpolicy-3.7.19/policy/modules/services/cvs.if
--- nsaserefpolicy/policy/modules/services/cvs.if	2011-03-17 07:21:22.053851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cvs.if	2012-02-28 19:20:38.273021658 +0000
@@ -39,6 +39,24 @@
 	can_exec($1, cvs_exec_t)
 ')
 
+#####################################
+## <summary>
+##  Dontaudit Attempts to list the CVS data and metadata.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`cvs_dontaudit_list_data',`
+    gen_require(`
+        type cvs_data_t;
+    ')
+
+    dontaudit $1 cvs_data_t:dir list_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cvs.te serefpolicy-3.7.19/policy/modules/services/cvs.te
--- nsaserefpolicy/policy/modules/services/cvs.te	2011-03-17 07:21:21.866851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cvs.te	2012-02-28 18:30:35.024686726 +0000
@@ -85,6 +85,8 @@
 logging_send_syslog_msg(cvs_t)
 logging_send_audit_msgs(cvs_t)
 
+userdom_dontaudit_search_user_home_dirs(cvs_t)
+
 miscfiles_read_localization(cvs_t)
 
 mta_send_mail(cvs_t)
@@ -93,6 +95,7 @@
 auth_can_read_shadow_passwords(cvs_t)
 tunable_policy(`allow_cvs_read_shadow',`
 	auth_tunable_read_shadow(cvs_t)
+	allow cvs_t self:capability dac_override;
 ')
 
 optional_policy(`
@@ -112,4 +115,5 @@
 	read_files_pattern(httpd_cvs_script_t, cvs_data_t, cvs_data_t)
 	manage_dirs_pattern(httpd_cvs_script_t, cvs_tmp_t, cvs_tmp_t)
 	manage_files_pattern(httpd_cvs_script_t, cvs_tmp_t, cvs_tmp_t)
+	files_tmp_filetrans(httpd_cvs_script_t, cvs_tmp_t, { file dir })
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cyrus.fc serefpolicy-3.7.19/policy/modules/services/cyrus.fc
--- nsaserefpolicy/policy/modules/services/cyrus.fc	2011-03-17 07:21:21.984851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cyrus.fc	2011-03-17 07:21:04.669851001 +0000
@@ -1,4 +1,4 @@
-/etc/rc\.d/init\.d/cyrus		--	gen_context(system_u:object_r:cyrus_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/cyrus-imapd		--	gen_context(system_u:object_r:cyrus_initrc_exec_t,s0)
 
 /usr/lib(64)?/cyrus-imapd/cyrus-master	--	gen_context(system_u:object_r:cyrus_exec_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/cyrus.te serefpolicy-3.7.19/policy/modules/services/cyrus.te
--- nsaserefpolicy/policy/modules/services/cyrus.te	2011-03-17 07:21:22.265851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/cyrus.te	2012-03-20 22:07:43.320129819 +0000
@@ -27,7 +27,7 @@
 # Local policy
 #
 
-allow cyrus_t self:capability { dac_override net_bind_service setgid setuid sys_resource };
+allow cyrus_t self:capability { dac_override fsetid net_bind_service setgid setuid sys_resource };
 dontaudit cyrus_t self:capability sys_tty_config;
 allow cyrus_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow cyrus_t self:process setrlimit;
@@ -75,6 +75,8 @@
 corenet_tcp_bind_mail_port(cyrus_t)
 corenet_tcp_bind_lmtp_port(cyrus_t)
 corenet_tcp_bind_pop_port(cyrus_t)
+corenet_tcp_bind_innd_port(cyrus_t)
+corenet_tcp_bind_sieve_port(cyrus_t)
 corenet_tcp_connect_all_ports(cyrus_t)
 corenet_sendrecv_mail_server_packets(cyrus_t)
 corenet_sendrecv_pop_server_packets(cyrus_t)
@@ -119,6 +121,10 @@
 ')
 
 optional_policy(`
+    dirsrv_stream_connect(cyrus_t)
+')
+
+optional_policy(`
 	kerberos_keytab_template(cyrus, cyrus_t)
 ')
 
@@ -135,6 +141,7 @@
 ')
 
 optional_policy(`
+	files_dontaudit_write_usr_dirs(cyrus_t)
 	snmp_read_snmp_var_lib_files(cyrus_t)
 	snmp_dontaudit_write_snmp_var_lib_files(cyrus_t)
 	snmp_stream_connect(cyrus_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dbus.if serefpolicy-3.7.19/policy/modules/services/dbus.if
--- nsaserefpolicy/policy/modules/services/dbus.if	2011-03-17 07:21:21.730851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dbus.if	2011-08-23 14:53:08.122160001 +0000
@@ -42,8 +42,10 @@
 	gen_require(`
 		class dbus { send_msg acquire_svc };
 
+		attribute dbusd_unconfined;
 		attribute session_bus_type;
 		type system_dbusd_t, session_dbusd_tmp_t, dbusd_exec_t, dbusd_etc_t;
+		type $1_t;
 	')
 
 	##############################
@@ -76,7 +78,7 @@
 	allow $3 $1_dbusd_t:unix_stream_socket connectto;
 
 	# SE-DBus specific permissions
-	allow $3 $1_dbusd_t:dbus { send_msg acquire_svc };
+	allow { dbusd_unconfined $3 } $1_dbusd_t:dbus { send_msg acquire_svc };
 	allow $3 system_dbusd_t:dbus { send_msg acquire_svc };
 
 	allow $1_dbusd_t dbusd_etc_t:dir list_dir_perms;
@@ -88,10 +90,10 @@
 	files_tmp_filetrans($1_dbusd_t, session_dbusd_tmp_t, { file dir })
 
 	domtrans_pattern($3, dbusd_exec_t, $1_dbusd_t)
-	allow $3 $1_dbusd_t:process { sigkill signal };
+	allow $3 $1_dbusd_t:process { signull sigkill signal };
 
 	# cjp: this seems very broken
-	corecmd_bin_domtrans($1_dbusd_t, $3)
+	corecmd_bin_domtrans($1_dbusd_t, $1_t)
 	allow $1_dbusd_t $3:process sigkill;
 	allow $3 $1_dbusd_t:fd use;
 	allow $3 $1_dbusd_t:fifo_file rw_fifo_file_perms;
@@ -127,6 +129,7 @@
 	fs_getattr_romfs($1_dbusd_t)
 	fs_getattr_xattr_fs($1_dbusd_t)
 	fs_list_inotifyfs($1_dbusd_t)
+	fs_dontaudit_list_nfs($1_dbusd_t)
 
 	selinux_get_fs_mount($1_dbusd_t)
 	selinux_validate_context($1_dbusd_t)
@@ -146,20 +149,25 @@
 	seutil_read_config($1_dbusd_t)
 	seutil_read_default_contexts($1_dbusd_t)
 
-	userdom_read_user_home_content_files($1_dbusd_t)
+	term_use_all_terms($1_dbusd_t)
+
+	userdom_dontaudit_search_admin_dir($1_dbusd_t)
+	userdom_manage_user_home_content_dirs($1_dbusd_t)
+	userdom_manage_user_home_content_files($1_dbusd_t)
+	userdom_user_home_dir_filetrans_user_home_content($1_dbusd_t, { dir file })
 
 	ifdef(`hide_broken_symptoms', `
 		dontaudit $3 $1_dbusd_t:netlink_selinux_socket { read write };
 	')
 
 	optional_policy(`
-		hal_dbus_chat($1_dbusd_t)
+		gnome_read_gconf_home_files($1_dbusd_t)
 	')
 
 	optional_policy(`
-		xserver_use_xdm_fds($1_dbusd_t)
-		xserver_rw_xdm_pipes($1_dbusd_t)
+		hal_dbus_chat($1_dbusd_t)
 	')
+
 ')
 
 #######################################
@@ -178,10 +186,12 @@
 		type system_dbusd_t, system_dbusd_t;
 		type system_dbusd_var_run_t, system_dbusd_var_lib_t;
 		class dbus send_msg;
+		attribute dbusd_unconfined;
 	')
 
 	# SE-DBus specific permissions
 	allow $1 { system_dbusd_t self }:dbus send_msg;
+	allow { system_dbusd_t dbusd_unconfined } $1:dbus send_msg;
 
 	read_files_pattern($1, system_dbusd_var_lib_t, system_dbusd_var_lib_t)
 	files_search_var_lib($1)
@@ -256,7 +266,7 @@
 
 ########################################
 ## <summary>
-##	Connect to the the session DBUS
+##	Connect to the system DBUS
 ##	for service (acquire_svc).
 ## </summary>
 ## <param name="domain">
@@ -334,6 +344,34 @@
 
 ########################################
 ## <summary>
+##	Allow a application domain to be started
+##	by the session dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Type to be used as a domain.
+##	</summary>
+## </param>
+## <param name="entry_point">
+##	<summary>
+##	Type of the program to be used as an 
+##	entry point to this domain.
+##	</summary>
+## </param>
+#
+interface(`dbus_session_domain',`
+	gen_require(`
+		attribute session_bus_type;
+	')
+
+	domtrans_pattern(session_bus_type, $2, $1)
+
+	dbus_session_bus_client($1)
+	dbus_connect_session_bus($1)
+')
+
+########################################
+## <summary>
 ##	Create a domain for processes
 ##	which can be started by the system dbus
 ## </summary>
@@ -364,6 +402,25 @@
 	dbus_system_bus_client($1)
 	dbus_connect_system_bus($1)
 
+	init_stream_connect($1)
+
+	ps_process_pattern(system_dbusd_t, $1)
+
+	userdom_dontaudit_search_admin_dir($1)
+	userdom_read_all_users_state($1)
+
+	optional_policy(`
+		abrt_stream_connect($1)
+	')
+
+	optional_policy(`
+		rpm_script_dbus_chat($1)
+	')
+
+	optional_policy(`
+		unconfined_dbus_send($1)
+	')
+
 	ifdef(`hide_broken_symptoms', `
 		dontaudit $1 system_dbusd_t:netlink_selinux_socket { read write };
 	')
@@ -405,3 +462,43 @@
 
 	typeattribute $1 dbusd_unconfined;
 ')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	system dbus lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dbus_manage_lib_files',`
+	gen_require(`
+		type system_dbusd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, system_dbusd_var_lib_t, system_dbusd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Read system dbus lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dbus_read_lib_files',`
+	gen_require(`
+		type system_dbusd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, system_dbusd_var_lib_t, system_dbusd_var_lib_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dbus.te serefpolicy-3.7.19/policy/modules/services/dbus.te
--- nsaserefpolicy/policy/modules/services/dbus.te	2011-03-17 07:21:22.019851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dbus.te	2011-03-17 07:21:04.750851003 +0000
@@ -86,6 +86,7 @@
 dev_read_sysfs(system_dbusd_t)
 
 fs_getattr_all_fs(system_dbusd_t)
+fs_list_inotifyfs(system_dbusd_t)
 fs_search_auto_mountpoints(system_dbusd_t)
 fs_dontaudit_list_nfs(system_dbusd_t)
 
@@ -121,6 +122,8 @@
 
 init_use_fds(system_dbusd_t)
 init_use_script_ptys(system_dbusd_t)
+init_bin_domtrans_spec(system_dbusd_t)
+init_domtrans_script(system_dbusd_t)
 
 logging_send_audit_msgs(system_dbusd_t)
 logging_send_syslog_msg(system_dbusd_t)
@@ -140,6 +143,15 @@
 ')
 
 optional_policy(`
+	gnome_exec_gconf(system_dbusd_t)
+')
+
+optional_policy(`
+	networkmanager_initrc_domtrans(system_dbusd_t)
+')
+
+optional_policy(`
+        policykit_dbus_chat(system_dbusd_t)
 	policykit_domtrans_auth(system_dbusd_t)
 	policykit_search_lib(system_dbusd_t)
 ')
@@ -156,5 +168,12 @@
 #
 # Unconfined access to this module
 #
-
 allow dbusd_unconfined session_bus_type:dbus all_dbus_perms;
+allow dbusd_unconfined dbusd_unconfined:dbus all_dbus_perms;
+allow session_bus_type dbusd_unconfined:dbus send_msg;
+
+optional_policy(`
+	xserver_use_xdm_fds(session_bus_type)
+	xserver_rw_xdm_pipes(session_bus_type)
+	xserver_append_xdm_home_files(session_bus_type)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/denyhosts.fc serefpolicy-3.7.19/policy/modules/services/denyhosts.fc
--- nsaserefpolicy/policy/modules/services/denyhosts.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/denyhosts.fc	2011-03-17 07:21:04.832851001 +0000
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/denyhosts		--		gen_context(system_u:object_r:denyhosts_initrc_exec_t, s0)
+
+/usr/bin/denyhosts\.py				--		gen_context(system_u:object_r:denyhosts_exec_t, s0)
+
+/var/lib/denyhosts(/.*)?					gen_context(system_u:object_r:denyhosts_var_lib_t, s0)
+/var/lock/subsys/denyhosts			--		gen_context(system_u:object_r:denyhosts_var_lock_t, s0)
+/var/log/denyhosts(/.*)?					gen_context(system_u:object_r:denyhosts_var_log_t, s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/denyhosts.if serefpolicy-3.7.19/policy/modules/services/denyhosts.if
--- nsaserefpolicy/policy/modules/services/denyhosts.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/denyhosts.if	2011-03-17 07:21:05.015851000 +0000
@@ -0,0 +1,87 @@
+## <summary>Deny Hosts.</summary>
+## <desc>
+##	<p>
+##		DenyHosts is a script intended to be run by Linux
+##		system administrators to help thwart SSH server attacks
+##		(also known as dictionary based attacks and brute force
+##		attacks).
+##	</p>
+## </desc>
+
+########################################
+## <summary>
+##	Execute a domain transition to run denyhosts.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`denyhosts_domtrans', `
+	gen_require(`
+		type denyhosts_t, denyhosts_exec_t;
+	')
+
+	domtrans_pattern($1, denyhosts_exec_t, denyhosts_t)
+')
+
+########################################
+## <summary>
+##	Execute denyhost server in the denyhost domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`denyhosts_initrc_domtrans', `
+	gen_require(`
+		type denyhosts_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, denyhosts_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an denyhosts environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`denyhosts_admin', `
+	gen_require(`
+		type denyhosts_t, denyhosts_var_lib_t, denyhosts_var_lock_t;
+		type denyhosts_var_log_t, denyhosts_initrc_exec_t;
+	')
+
+	allow $1 denyhosts_t:process { ptrace signal_perms getattr };
+	
+	denyhosts_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 denyhosts_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	kernel_search_proc($1)
+	ps_process_pattern($1, denyhosts_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, denyhosts_var_lib_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, denyhosts_var_log_t)
+
+	files_search_locks($1)
+	admin_pattern($1, denyhosts_var_lock_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/denyhosts.te serefpolicy-3.7.19/policy/modules/services/denyhosts.te
--- nsaserefpolicy/policy/modules/services/denyhosts.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/denyhosts.te	2011-03-17 07:21:03.935851002 +0000
@@ -0,0 +1,81 @@
+
+policy_module(denyhosts, 1.0.0) 
+
+########################################
+#
+# DenyHosts personal declarations.
+#
+
+type denyhosts_t;
+type denyhosts_exec_t;
+init_daemon_domain(denyhosts_t, denyhosts_exec_t)
+
+type denyhosts_initrc_exec_t;
+init_script_file(denyhosts_initrc_exec_t)
+
+type denyhosts_var_lib_t;
+files_type(denyhosts_var_lib_t)
+
+type denyhosts_var_lock_t;
+files_lock_file(denyhosts_var_lock_t)
+
+type denyhosts_var_log_t;
+logging_log_file(denyhosts_var_log_t)
+
+########################################
+#
+# DenyHosts personal policy.
+#
+# Bug #588563
+allow denyhosts_t self:capability sys_tty_config;
+allow denyhosts_t self:netlink_route_socket create_netlink_socket_perms;
+allow denyhosts_t self:tcp_socket create_socket_perms;
+allow denyhosts_t self:udp_socket create_socket_perms;
+
+manage_files_pattern(denyhosts_t, denyhosts_var_lib_t, denyhosts_var_lib_t)
+files_var_lib_filetrans(denyhosts_t, denyhosts_var_lib_t, file)
+
+manage_dirs_pattern(denyhosts_t, denyhosts_var_lock_t, denyhosts_var_lock_t)
+manage_files_pattern(denyhosts_t, denyhosts_var_lock_t, denyhosts_var_lock_t)
+files_lock_filetrans(denyhosts_t, denyhosts_var_lock_t, { dir file })
+
+append_files_pattern(denyhosts_t, denyhosts_var_log_t, denyhosts_var_log_t)
+create_files_pattern(denyhosts_t, denyhosts_var_log_t, denyhosts_var_log_t)
+read_files_pattern(denyhosts_t, denyhosts_var_log_t, denyhosts_var_log_t)
+setattr_files_pattern(denyhosts_t, denyhosts_var_log_t, denyhosts_var_log_t)
+logging_log_filetrans(denyhosts_t, denyhosts_var_log_t, file)
+
+corecmd_exec_bin(denyhosts_t)
+
+corenet_all_recvfrom_unlabeled(denyhosts_t)
+corenet_all_recvfrom_netlabel(denyhosts_t)
+corenet_tcp_sendrecv_generic_if(denyhosts_t)
+corenet_tcp_sendrecv_generic_node(denyhosts_t)
+corenet_tcp_bind_generic_node(denyhosts_t)
+corenet_sendrecv_smtp_client_packets(denyhosts_t)
+corenet_tcp_connect_smtp_port(denyhosts_t)
+corenet_tcp_connect_sype_port(denyhosts_t)
+
+dev_read_urand(denyhosts_t)
+
+kernel_read_system_state(denyhosts_t)
+
+files_read_etc_files(denyhosts_t)
+
+# /var/log/secure
+logging_read_generic_logs(denyhosts_t)
+logging_send_syslog_msg(denyhosts_t)
+
+miscfiles_read_localization(denyhosts_t)
+
+sysnet_dns_name_resolve(denyhosts_t)
+sysnet_manage_config(denyhosts_t)
+sysnet_etc_filetrans_config(denyhosts_t)
+
+optional_policy(`
+	cron_system_entry(denyhosts_t, denyhosts_exec_t)
+')
+
+optional_policy(`
+    gnome_dontaudit_search_config(denyhosts_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/devicekit.fc serefpolicy-3.7.19/policy/modules/services/devicekit.fc
--- nsaserefpolicy/policy/modules/services/devicekit.fc	2011-03-17 07:21:21.650851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/devicekit.fc	2011-03-17 07:21:04.136851001 +0000
@@ -1,8 +1,14 @@
 /usr/libexec/devkit-daemon	--	gen_context(system_u:object_r:devicekit_exec_t,s0)
 /usr/libexec/devkit-disks-daemon --	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
 /usr/libexec/devkit-power-daemon --	gen_context(system_u:object_r:devicekit_power_exec_t,s0)
+/usr/libexec/udisks-daemon	--	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
+/usr/libexec/upowerd		--	gen_context(system_u:object_r:devicekit_power_exec_t,s0)
 
 /var/lib/DeviceKit-.*			gen_context(system_u:object_r:devicekit_var_lib_t,s0)
+/var/lib/upower(/.*)?			gen_context(system_u:object_r:devicekit_var_lib_t,s0)
+/var/lib/udisks(/.*)?			gen_context(system_u:object_r:devicekit_var_lib_t,s0)
 
 /var/run/devkit(/.*)?			gen_context(system_u:object_r:devicekit_var_run_t,s0)
-/var/run/DeviceKit-disk(/.*)?		gen_context(system_u:object_r:devicekit_var_run_t,s0)
+/var/run/DeviceKit-disks(/.*)?		gen_context(system_u:object_r:devicekit_var_run_t,s0)
+/var/run/udisks(/.*)?			gen_context(system_u:object_r:devicekit_var_run_t,s0)
+/var/run/upower(/.*)?			gen_context(system_u:object_r:devicekit_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/devicekit.if serefpolicy-3.7.19/policy/modules/services/devicekit.if
--- nsaserefpolicy/policy/modules/services/devicekit.if	2011-03-17 07:21:22.299851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/devicekit.if	2011-08-10 18:15:43.982523004 +0000
@@ -139,39 +139,69 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an devicekit environment
+##	Manage devicekit var_run files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <param name="role">
-##	<summary>
-##	The role to be allowed to manage the devicekit domain.
-##	</summary>
+#
+interface(`devicekit_manage_var_run',`
+	gen_require(`
+		type devicekit_var_run_t;
+	')
+
+         manage_dirs_pattern($1,devicekit_var_run_t,devicekit_var_run_t)
+         manage_files_pattern($1,devicekit_var_run_t,devicekit_var_run_t)
+         manage_lnk_files_pattern($1,devicekit_var_run_t,devicekit_var_run_t)
+')
+
+#######################################
+## <summary>
+## Dontaudit Send and receive messages from
+## devicekit disk over dbus.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain to not audit.
+## </summary>
 ## </param>
-## <param name="terminal">
+#
+interface(`devicekit_dontaudit_dbus_chat_disk',`
+	gen_require(`
+		type devicekit_disk_t;
+		class dbus send_msg;
+ ')
+
+	dontaudit $1 devicekit_disk_t:dbus send_msg;
+	dontaudit devicekit_disk_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an devicekit environment
+## </summary>
+## <param name="domain">
 ##	<summary>
-##	The type of the user terminal.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`devicekit_admin',`
 	gen_require(`
 		type devicekit_t, devicekit_disk_t, devicekit_power_t;
-		type devicekit_var_run_t;
+		type devicekit_var_lib_t, devicekit_var_run_t, devicekit_tmp_t;
 	')
 
-	allow $1 devicekit_t:process { ptrace signal_perms getattr };
+	allow $1 devicekit_t:process { ptrace signal_perms };
 	ps_process_pattern($1, devicekit_t)
 
-	allow $1 devicekit_disk_t:process { ptrace signal_perms getattr };
+	allow $1 devicekit_disk_t:process { ptrace signal_perms };
 	ps_process_pattern($1, devicekit_disk_t)
 
-	allow $1 devicekit_power_t:process { ptrace signal_perms getattr };
+	allow $1 devicekit_power_t:process { ptrace signal_perms };
 	ps_process_pattern($1, devicekit_power_t)
 
 	admin_pattern($1, devicekit_tmp_t)
@@ -183,3 +213,4 @@
 	admin_pattern($1, devicekit_var_run_t)
 	files_search_pids($1)
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/devicekit.te serefpolicy-3.7.19/policy/modules/services/devicekit.te
--- nsaserefpolicy/policy/modules/services/devicekit.te	2011-03-17 07:21:21.923851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/devicekit.te	2011-03-17 07:21:04.561851003 +0000
@@ -42,6 +42,8 @@
 
 files_read_etc_files(devicekit_t)
 
+kernel_read_system_state(devicekit_t)
+
 miscfiles_read_localization(devicekit_t)
 
 optional_policy(`
@@ -60,8 +62,10 @@
 # DeviceKit disk local policy
 #
 
-allow devicekit_disk_t self:capability { chown dac_override fowner fsetid sys_nice sys_ptrace sys_rawio };
+allow devicekit_disk_t self:capability { chown setuid setgid dac_override fowner fsetid net_admin sys_admin sys_nice sys_ptrace sys_rawio };
+allow devicekit_disk_t self:process { getsched signal_perms };
 allow devicekit_disk_t self:fifo_file rw_fifo_file_perms;
+allow devicekit_disk_t self:netlink_kobject_uevent_socket create_socket_perms;
 
 manage_dirs_pattern(devicekit_disk_t, devicekit_tmp_t, devicekit_tmp_t)
 manage_files_pattern(devicekit_disk_t, devicekit_tmp_t, devicekit_tmp_t)
@@ -71,29 +75,64 @@
 manage_files_pattern(devicekit_disk_t, devicekit_var_lib_t, devicekit_var_lib_t)
 files_var_lib_filetrans(devicekit_disk_t, devicekit_var_lib_t, dir)
 
+allow devicekit_disk_t devicekit_var_run_t:dir mounton;
+manage_dirs_pattern(devicekit_disk_t, devicekit_var_run_t, devicekit_var_run_t)
+manage_files_pattern(devicekit_disk_t, devicekit_var_run_t, devicekit_var_run_t)
+files_pid_filetrans(devicekit_disk_t, devicekit_var_run_t, { file dir })
+
+kernel_list_unlabeled(devicekit_disk_t)
+kernel_getattr_message_if(devicekit_disk_t)
+kernel_read_fs_sysctls(devicekit_disk_t)
+kernel_read_network_state(devicekit_disk_t)
 kernel_read_software_raid_state(devicekit_disk_t)
+kernel_read_system_state(devicekit_disk_t)
+kernel_request_load_module(devicekit_disk_t)
 kernel_setsched(devicekit_disk_t)
 
 corecmd_exec_bin(devicekit_disk_t)
+corecmd_exec_shell(devicekit_disk_t)
+corecmd_getattr_all_executables(devicekit_disk_t)
 
 dev_rw_sysfs(devicekit_disk_t)
 dev_read_urand(devicekit_disk_t)
 dev_getattr_usbfs_dirs(devicekit_disk_t)
-
+dev_manage_generic_files(devicekit_disk_t)
+dev_getattr_all_chr_files(devicekit_disk_t)
+dev_getattr_mtrr_dev(devicekit_disk_t)
+
+domain_getattr_all_pipes(devicekit_disk_t)
+domain_getattr_all_sockets(devicekit_disk_t)
+domain_getattr_all_stream_sockets(devicekit_disk_t)
+domain_read_all_domains_state(devicekit_disk_t)
+
+files_dontaudit_read_all_symlinks(devicekit_disk_t)
+files_getattr_all_sockets(devicekit_disk_t)
+files_getattr_all_dirs(devicekit_disk_t)
+files_getattr_all_files(devicekit_disk_t)
+files_getattr_all_pipes(devicekit_disk_t)
+files_manage_boot_dirs(devicekit_disk_t)
+files_manage_isid_type_dirs(devicekit_disk_t)
 files_manage_mnt_dirs(devicekit_disk_t)
 files_read_etc_files(devicekit_disk_t)
 files_read_etc_runtime_files(devicekit_disk_t)
 files_read_usr_files(devicekit_disk_t)
 
+fs_list_inotifyfs(devicekit_disk_t)
+fs_manage_fusefs_dirs(devicekit_disk_t)
 fs_mount_all_fs(devicekit_disk_t)
 fs_unmount_all_fs(devicekit_disk_t)
-fs_manage_fusefs_dirs(devicekit_disk_t)
+fs_search_all(devicekit_disk_t)
 
 storage_raw_read_fixed_disk(devicekit_disk_t)
 storage_raw_write_fixed_disk(devicekit_disk_t)
 storage_raw_read_removable_device(devicekit_disk_t)
 storage_raw_write_removable_device(devicekit_disk_t)
 
+mls_file_read_all_levels(devicekit_disk_t)
+mls_file_write_to_clearance(devicekit_disk_t)
+
+term_use_all_terms(devicekit_disk_t)
+
 auth_use_nsswitch(devicekit_disk_t)
 
 miscfiles_read_localization(devicekit_disk_t)
@@ -102,6 +141,16 @@
 userdom_search_user_home_dirs(devicekit_disk_t)
 
 optional_policy(`
+	dbus_system_bus_client(devicekit_disk_t)
+
+	allow devicekit_disk_t devicekit_t:dbus send_msg;
+
+	optional_policy(`
+		consolekit_dbus_chat(devicekit_disk_t)
+	')
+')
+
+optional_policy(`
 	fstools_domtrans(devicekit_disk_t)
 ')
 
@@ -110,28 +159,33 @@
 ')
 
 optional_policy(`
+	mount_domtrans(devicekit_disk_t)
+')
+
+optional_policy(`
+	policykit_dbus_chat(devicekit_disk_t)
 	policykit_domtrans_auth(devicekit_disk_t)
 	policykit_read_lib(devicekit_disk_t)
 	policykit_read_reload(devicekit_disk_t)
 ')
 
 optional_policy(`
-	mount_domtrans(devicekit_disk_t)
+	raid_domtrans_mdadm(devicekit_disk_t)
 ')
 
 optional_policy(`
-	dbus_system_bus_client(devicekit_disk_t)
-
-	allow devicekit_disk_t devicekit_t:dbus send_msg;
+	udev_domtrans(devicekit_disk_t)
+	udev_read_db(devicekit_disk_t)
+')
 
-	optional_policy(`
-		consolekit_dbus_chat(devicekit_disk_t)
-	')
+optional_policy(`
+	virt_manage_images(devicekit_disk_t)
 ')
 
 optional_policy(`
-	udev_domtrans(devicekit_disk_t)
-	udev_read_db(devicekit_disk_t)
+	unconfined_domain(devicekit_t)
+	unconfined_domain(devicekit_power_t)
+	unconfined_domain(devicekit_disk_t)
 ')
 
 ########################################
@@ -139,9 +193,11 @@
 # DeviceKit-Power local policy
 #
 
-allow devicekit_power_t self:capability { dac_override sys_tty_config sys_nice sys_ptrace };
+allow devicekit_power_t self:capability { dac_override net_admin sys_admin sys_tty_config sys_nice sys_ptrace };
+allow devicekit_power_t self:process { getsched signal_perms };
 allow devicekit_power_t self:fifo_file rw_fifo_file_perms;
 allow devicekit_power_t self:unix_dgram_socket create_socket_perms;
+allow devicekit_power_t self:netlink_kobject_uevent_socket create_socket_perms;
 
 manage_dirs_pattern(devicekit_power_t, devicekit_var_lib_t, devicekit_var_lib_t)
 manage_files_pattern(devicekit_power_t, devicekit_var_lib_t, devicekit_var_lib_t)
@@ -151,6 +207,8 @@
 kernel_read_system_state(devicekit_power_t)
 kernel_rw_hotplug_sysctls(devicekit_power_t)
 kernel_rw_kernel_sysctl(devicekit_power_t)
+kernel_search_debugfs(devicekit_power_t)
+kernel_write_proc_files(devicekit_power_t)
 
 corecmd_exec_bin(devicekit_power_t)
 corecmd_exec_shell(devicekit_power_t)
@@ -159,7 +217,9 @@
 
 domain_read_all_domains_state(devicekit_power_t)
 
+dev_read_input(devicekit_power_t)
 dev_rw_generic_usb_dev(devicekit_power_t)
+dev_rw_generic_chr_files(devicekit_power_t)
 dev_rw_netcontrol(devicekit_power_t)
 dev_rw_sysfs(devicekit_power_t)
 
@@ -167,12 +227,18 @@
 files_read_etc_files(devicekit_power_t)
 files_read_usr_files(devicekit_power_t)
 
+fs_list_inotifyfs(devicekit_power_t)
+
 term_use_all_terms(devicekit_power_t)
 
 auth_use_nsswitch(devicekit_power_t)
 
 miscfiles_read_localization(devicekit_power_t)
 
+sysnet_read_config(devicekit_power_t)
+sysnet_domtrans_ifconfig(devicekit_power_t)
+sysnet_domtrans_dhcpc(devicekit_power_t)
+
 userdom_read_all_users_state(devicekit_power_t)
 
 optional_policy(`
@@ -180,6 +246,10 @@
 ')
 
 optional_policy(`
+	cron_initrc_domtrans(devicekit_power_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(devicekit_power_t)
 
 	allow devicekit_power_t devicekit_t:dbus send_msg;
@@ -190,6 +260,7 @@
 
 	optional_policy(`
 		networkmanager_dbus_chat(devicekit_power_t)
+		networkmanager_domtrans(devicekit_power_t)
 	')
 
 	optional_policy(`
@@ -203,17 +274,23 @@
 
 optional_policy(`
 	hal_domtrans_mac(devicekit_power_t)
+	hal_manage_log(devicekit_power_t)
 	hal_manage_pid_dirs(devicekit_power_t)
 	hal_manage_pid_files(devicekit_power_t)
 	hal_dbus_chat(devicekit_power_t)
 ')
 
 optional_policy(`
+	policykit_dbus_chat(devicekit_power_t)
 	policykit_domtrans_auth(devicekit_power_t)
 	policykit_read_lib(devicekit_power_t)
 	policykit_read_reload(devicekit_power_t)
 ')
 
 optional_policy(`
+	udev_read_db(devicekit_power_t)
+')
+
+optional_policy(`
 	vbetool_domtrans(devicekit_power_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dhcp.fc serefpolicy-3.7.19/policy/modules/services/dhcp.fc
--- nsaserefpolicy/policy/modules/services/dhcp.fc	2011-03-17 07:21:22.222851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dhcp.fc	2011-09-21 12:14:09.702160001 +0000
@@ -1,4 +1,4 @@
-/etc/rc\.d/init\.d/dhcpd	--	gen_context(system_u:object_r:dhcpd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/dhcpd(6)?	--	gen_context(system_u:object_r:dhcpd_initrc_exec_t,s0)
 
 /usr/sbin/dhcpd.*		--	gen_context(system_u:object_r:dhcpd_exec_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dhcp.if serefpolicy-3.7.19/policy/modules/services/dhcp.if
--- nsaserefpolicy/policy/modules/services/dhcp.if	2011-03-17 07:21:21.875851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dhcp.if	2011-03-17 07:21:04.474851002 +0000
@@ -77,7 +77,7 @@
 #
 interface(`dhcpd_admin',`
 	gen_require(`
-		type dhcpd_t; type dhcpd_tmp_t;	type dhcpd_state_t;
+		type dhcpd_t, dhcpd_tmp_t, dhcpd_state_t;
 		type dhcpd_var_run_t, dhcpd_initrc_exec_t;
 	')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dhcp.te serefpolicy-3.7.19/policy/modules/services/dhcp.te
--- nsaserefpolicy/policy/modules/services/dhcp.te	2011-03-17 07:21:22.277851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dhcp.te	2011-10-26 13:27:27.508395267 +0000
@@ -27,7 +27,7 @@
 # Local policy
 #
 
-allow dhcpd_t self:capability { net_raw sys_resource };
+allow dhcpd_t self:capability { dac_override sys_chroot net_raw setgid setuid sys_resource };
 dontaudit dhcpd_t self:capability { net_admin sys_tty_config };
 allow dhcpd_t self:process signal_perms;
 allow dhcpd_t self:fifo_file rw_fifo_file_perms;
@@ -74,6 +74,8 @@
 corenet_sendrecv_dhcpd_server_packets(dhcpd_t)
 corenet_sendrecv_pxe_server_packets(dhcpd_t)
 corenet_sendrecv_all_client_packets(dhcpd_t)
+corenet_dontaudit_udp_bind_all_reserved_ports(dhcpd_t)
+corenet_udp_bind_all_unreserved_ports(dhcpd_t)
 
 dev_read_sysfs(dhcpd_t)
 dev_read_rand(dhcpd_t)
@@ -112,6 +114,10 @@
 ')
 
 optional_policy(`
+    cobbler_dontaudit_rw_log(dhcpd_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(dhcpd_t)
 	dbus_connect_system_bus(dhcpd_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dirsrv-admin.fc serefpolicy-3.7.19/policy/modules/services/dirsrv-admin.fc
--- nsaserefpolicy/policy/modules/services/dirsrv-admin.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dirsrv-admin.fc	2011-11-09 09:07:34.878755359 +0000
@@ -0,0 +1,14 @@
+/etc/dirsrv/admin-serv(/.*)?		gen_context(system_u:object_r:dirsrvadmin_config_t,s0)
+
+/etc/dirsrv/dsgw(/.*)?	gen_context(system_u:object_r:dirsrvadmin_config_t,s0)
+
+/usr/sbin/restart-ds-admin	--	gen_context(system_u:object_r:dirsrvadmin_exec_t,s0)
+/usr/sbin/start-ds-admin	--	gen_context(system_u:object_r:dirsrvadmin_exec_t,s0)
+/usr/sbin/stop-ds-admin		--	gen_context(system_u:object_r:dirsrvadmin_exec_t,s0)
+
+/usr/lib(64)?/dirsrv/cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_dirsrvadmin_script_exec_t,s0)
+/usr/lib(64)?/dirsrv/dsgw-cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_dirsrvadmin_script_exec_t,s0)
+
+/usr/lib(64)?/dirsrv/cgi-bin/ds_create    --  gen_context(system_u:object_r:dirsrvadmin_unconfined_script_exec_t,s0)
+/usr/lib(64)?/dirsrv/cgi-bin/ds_remove    --  gen_context(system_u:object_r:dirsrvadmin_unconfined_script_exec_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dirsrv-admin.if serefpolicy-3.7.19/policy/modules/services/dirsrv-admin.if
--- nsaserefpolicy/policy/modules/services/dirsrv-admin.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dirsrv-admin.if	2011-11-07 15:45:45.517069693 +0000
@@ -0,0 +1,152 @@
+## <summary>Administration Server for Directory Server, dirsrv-admin.</summary>
+
+########################################
+## <summary>
+##	Exec dirsrv-admin programs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dirsrvadmin_run_exec',`
+	gen_require(`
+		type dirsrvadmin_exec_t;
+	')
+
+	allow $1 dirsrvadmin_exec_t:dir search_dir_perms;
+	can_exec($1, dirsrvadmin_exec_t)
+')
+
+########################################
+## <summary>
+##	Exec cgi programs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dirsrvadmin_run_httpd_script_exec',`
+	gen_require(`
+		type httpd_dirsrvadmin_script_exec_t;
+	')
+
+	allow $1 httpd_dirsrvadmin_script_exec_t:dir search_dir_perms;
+	can_exec($1, httpd_dirsrvadmin_script_exec_t)
+')
+
+########################################
+## <summary>
+##	Manage dirsrv-adminserver configuration files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dirsrvadmin_read_config',`
+	gen_require(`
+		type dirsrvadmin_config_t;
+	')
+
+	read_files_pattern($1, dirsrvadmin_config_t, dirsrvadmin_config_t)
+')
+
+########################################
+## <summary>
+##	Manage dirsrv-adminserver configuration files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dirsrvadmin_manage_config',`
+	gen_require(`
+		type dirsrvadmin_config_t;
+	')
+
+	allow $1 dirsrvadmin_config_t:dir manage_dir_perms;
+	allow $1 dirsrvadmin_config_t:file manage_file_perms;
+')
+
+#######################################
+## <summary>
+##      Read dirsrv-adminserver tmp files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dirsrvadmin_read_tmp',`
+        gen_require(`
+                type dirsrvadmin_tmp_t;
+        ')
+
+        read_files_pattern($1, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+')
+
+######################################
+## <summary>
+##      Write dirsrv-adminserver tmp files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dirsrvadmin_write_tmp',`
+        gen_require(`
+                type dirsrvadmin_tmp_t;
+        ')
+
+        write_files_pattern($1, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+')
+
+########################################
+## <summary>
+##      Manage dirsrv-adminserver tmp files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dirsrvadmin_manage_tmp',`
+        gen_require(`
+                type dirsrvadmin_tmp_t;
+        ')
+
+	manage_files_pattern($1, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+	manage_dirs_pattern($1, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+')
+
+#######################################
+## <summary>
+##  Execute admin cgi programs in caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`dirsrvadmin_domtrans_unconfined_script_t',`
+    gen_require(`
+       type dirsrvadmin_unconfined_script_t;
+        type dirsrvadmin_unconfined_script_exec_t;
+    ')
+
+   domtrans_pattern($1, dirsrvadmin_unconfined_script_exec_t, dirsrvadmin_unconfined_script_t)
+   allow $1 dirsrvadmin_unconfined_script_t:process signal_perms;
+
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dirsrv-admin.te serefpolicy-3.7.19/policy/modules/services/dirsrv-admin.te
--- nsaserefpolicy/policy/modules/services/dirsrv-admin.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dirsrv-admin.te	2011-11-09 09:07:34.879755327 +0000
@@ -0,0 +1,133 @@
+policy_module(dirsrv-admin,1.0.0) 
+
+########################################
+#
+# Declarations for the daemon
+#
+
+type dirsrvadmin_t;
+type dirsrvadmin_exec_t;
+init_daemon_domain(dirsrvadmin_t, dirsrvadmin_exec_t)
+role system_r types dirsrvadmin_t;
+
+type dirsrvadmin_config_t;
+files_type(dirsrvadmin_config_t)
+
+type dirsrvadmin_tmp_t;
+files_tmp_file(dirsrvadmin_tmp_t)
+
+type dirsrvadmin_unconfined_script_t;
+type dirsrvadmin_unconfined_script_exec_t;
+domain_type(dirsrvadmin_unconfined_script_t)
+domain_entry_file(dirsrvadmin_unconfined_script_t, dirsrvadmin_unconfined_script_exec_t)
+corecmd_shell_entry_type(dirsrvadmin_unconfined_script_t)
+role system_r types dirsrvadmin_unconfined_script_t;
+
+########################################
+#
+# Local policy for the daemon
+#
+allow dirsrvadmin_t self:fifo_file rw_fifo_file_perms;
+allow dirsrvadmin_t self:capability { dac_read_search dac_override sys_tty_config };
+
+manage_files_pattern(dirsrvadmin_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+manage_dirs_pattern(dirsrvadmin_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+files_tmp_filetrans(dirsrvadmin_t, dirsrvadmin_tmp_t, { file dir })
+
+kernel_read_system_state(dirsrvadmin_t)
+
+corecmd_exec_bin(dirsrvadmin_t)
+corecmd_read_bin_symlinks(dirsrvadmin_t)
+corecmd_search_bin(dirsrvadmin_t)
+corecmd_shell_entry_type(dirsrvadmin_t)
+
+files_exec_etc_files(dirsrvadmin_t)
+
+logging_search_logs(dirsrvadmin_t)
+
+miscfiles_read_localization(dirsrvadmin_t)
+
+# Needed for stop and restart scripts
+dirsrv_read_var_run(dirsrvadmin_t)
+
+apache_domtrans(dirsrvadmin_t)
+apache_signal(dirsrvadmin_t)
+
+########################################
+#
+# Local policy for the CGIs
+#
+#
+#
+# Create a domain for the CGI scripts
+apache_content_template(dirsrvadmin)
+
+allow httpd_dirsrvadmin_script_t self:process { getsched getpgid };
+allow httpd_dirsrvadmin_script_t self:capability { setuid net_bind_service setgid chown sys_nice kill dac_read_search dac_override };
+allow httpd_dirsrvadmin_script_t self:tcp_socket create_stream_socket_perms;
+allow httpd_dirsrvadmin_script_t self:udp_socket create_socket_perms;
+allow httpd_dirsrvadmin_script_t self:unix_dgram_socket create_socket_perms;
+allow httpd_dirsrvadmin_script_t self:netlink_route_socket r_netlink_socket_perms;
+allow httpd_dirsrvadmin_script_t self:sem create_sem_perms;
+
+kernel_read_kernel_sysctls(httpd_dirsrvadmin_script_t)
+
+corenet_sendrecv_unlabeled_packets(httpd_dirsrvadmin_script_t)
+corenet_tcp_connect_generic_port(httpd_dirsrvadmin_script_t)
+corenet_tcp_connect_ldap_port(httpd_dirsrvadmin_script_t)
+corenet_tcp_connect_http_port(httpd_dirsrvadmin_script_t)
+
+files_search_var_lib(httpd_dirsrvadmin_script_t)
+
+sysnet_read_config(httpd_dirsrvadmin_script_t)
+
+
+manage_files_pattern(httpd_dirsrvadmin_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+manage_dirs_pattern(httpd_dirsrvadmin_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+files_tmp_filetrans(httpd_dirsrvadmin_script_t, dirsrvadmin_tmp_t, { file dir })
+
+# The CGI scripts must be able to manage dirsrv-admin
+dirsrvadmin_run_exec(httpd_dirsrvadmin_script_t)
+dirsrvadmin_manage_config(httpd_dirsrvadmin_script_t)
+dirsrv_domtrans(httpd_dirsrvadmin_script_t)
+dirsrv_signal(httpd_dirsrvadmin_script_t)
+dirsrv_signull(httpd_dirsrvadmin_script_t)
+dirsrv_manage_log(httpd_dirsrvadmin_script_t)
+dirsrv_manage_var_lib(httpd_dirsrvadmin_script_t)
+dirsrv_pid_filetrans(httpd_dirsrvadmin_script_t)
+dirsrv_manage_var_run(httpd_dirsrvadmin_script_t)
+dirsrv_manage_config(httpd_dirsrvadmin_script_t)
+dirsrv_read_share(httpd_dirsrvadmin_script_t)
+dirsrv_manage_lock(httpd_dirsrvadmin_script_t)
+dirsrv_filetrans_lock(httpd_dirsrvadmin_script_t)
+
+optional_policy(`
+	apache_rw_stream_sockets(httpd_dirsrvadmin_script_t)
+')
+
+######################################
+#
+# Local policy for the admin CGIs
+#
+#
+
+manage_files_pattern(dirsrvadmin_unconfined_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+manage_dirs_pattern(dirsrvadmin_unconfined_script_t, dirsrvadmin_tmp_t, dirsrvadmin_tmp_t)
+files_tmp_filetrans(dirsrvadmin_unconfined_script_t, dirsrvadmin_tmp_t, { file dir })
+
+# needed because of filetrans rules
+dirsrvadmin_run_exec(dirsrvadmin_unconfined_script_t)
+dirsrvadmin_manage_config(dirsrvadmin_unconfined_script_t)
+dirsrv_domtrans(dirsrvadmin_unconfined_script_t)
+dirsrv_signal(dirsrvadmin_unconfined_script_t)
+dirsrv_signull(dirsrvadmin_unconfined_script_t)
+dirsrv_manage_log(dirsrvadmin_unconfined_script_t)
+dirsrv_manage_var_lib(dirsrvadmin_unconfined_script_t)
+dirsrv_pid_filetrans(dirsrvadmin_unconfined_script_t)
+dirsrv_manage_var_run(dirsrvadmin_unconfined_script_t)
+dirsrv_manage_config(dirsrvadmin_unconfined_script_t)
+dirsrv_read_share(dirsrvadmin_unconfined_script_t)
+
+optional_policy(`
+   unconfined_domain(dirsrvadmin_unconfined_script_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dirsrv.fc serefpolicy-3.7.19/policy/modules/services/dirsrv.fc
--- nsaserefpolicy/policy/modules/services/dirsrv.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dirsrv.fc	2012-04-03 20:42:21.325715998 +0000
@@ -0,0 +1,23 @@
+/etc/dirsrv(/.*)?		gen_context(system_u:object_r:dirsrv_config_t,s0)
+
+/usr/sbin/ns-slapd			--	gen_context(system_u:object_r:dirsrv_exec_t,s0)
+/usr/sbin/ldap-agent			--	gen_context(system_u:object_r:initrc_exec_t,s0)
+/usr/sbin/ldap-agent-bin		--	gen_context(system_u:object_r:dirsrv_snmp_exec_t,s0)
+/usr/sbin/start-dirsrv			--	gen_context(system_u:object_r:initrc_exec_t,s0)
+/usr/sbin/restart-dirsrv		--	gen_context(system_u:object_r:initrc_exec_t,s0)
+
+/usr/share/dirsrv(/.*)?		gen_context(system_u:object_r:dirsrv_share_t,s0)
+
+/var/run/dirsrv(/.*)?		gen_context(system_u:object_r:dirsrv_var_run_t,s0)
+/var/run/ldap-agent\.pid	gen_context(system_u:object_r:dirsrv_snmp_var_run_t,s0)
+
+/var/lib/dirsrv(/.*)?		gen_context(system_u:object_r:dirsrv_var_lib_t,s0)
+
+/var/lock/subsys/dirsrv	--	gen_context(system_u:object_r:dirsrv_var_lock_t,s0)
+/var/lock/dirsrv(/.*)?		gen_context(system_u:object_r:dirsrv_var_lock_t,s0)
+
+/var/log/dirsrv(/.*)?		gen_context(system_u:object_r:dirsrv_var_log_t,s0)
+
+/var/log/dirsrv/ldap-agent\.log	gen_context(system_u:object_r:dirsrv_snmp_var_log_t,s0)
+
+/var/run/slapd.* -s gen_context(system_u:object_r:dirsrv_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dirsrv.if serefpolicy-3.7.19/policy/modules/services/dirsrv.if
--- nsaserefpolicy/policy/modules/services/dirsrv.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dirsrv.if	2011-11-09 09:07:34.880755295 +0000
@@ -0,0 +1,249 @@
+## <summary>policy for dirsrv</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run dirsrv.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`dirsrv_domtrans',`
+	gen_require(`
+		type dirsrv_t, dirsrv_exec_t;
+	')
+
+	domtrans_pattern($1, dirsrv_exec_t,dirsrv_t)
+
+	ifdef(`hide_broken_symptoms', `
+		dontaudit dirsrv_t $1:socket_class_set { read write };
+	')
+')
+
+
+########################################
+## <summary>
+##  Allow caller to signal dirsrv.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dirsrv_signal',`
+	gen_require(`
+		type dirsrv_t;
+	')
+
+	allow $1 dirsrv_t:process signal;
+')
+
+
+########################################
+## <summary>
+##      Send a null signal to dirsrv.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dirsrv_signull',`
+	gen_require(`
+		type dirsrv_t;
+	')
+
+	allow $1 dirsrv_t:process signull;
+')
+
+#######################################
+## <summary>
+##      Allow a domain to manage dirsrv logs.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`dirsrv_manage_log',`
+	gen_require(`
+		type dirsrv_var_log_t;
+	')
+
+	allow $1 dirsrv_var_log_t:dir manage_dir_perms;
+	allow $1 dirsrv_var_log_t:file manage_file_perms;
+	allow $1 dirsrv_var_log_t:fifo_file manage_fifo_file_perms;
+')
+
+######################################
+## <summary>
+##      Allow a domain to manage dirsrv lock.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`dirsrv_manage_lock',`
+        gen_require(`
+                type dirsrv_var_lock_t;
+        ')
+
+	manage_files_pattern($1, dirsrv_var_lock_t, dirsrv_var_lock_t)
+	manage_dirs_pattern($1, dirsrv_var_lock_t, dirsrv_var_lock_t)
+')
+
+#####################################
+## <summary>
+##      Allow a domain to manage dirsrv logs.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`dirsrv_filetrans_lock',`
+        gen_require(`
+                type dirsrv_var_lock_t;
+        ')
+
+	files_lock_filetrans($1, dirsrv_var_lock_t, file)
+')
+
+#######################################
+## <summary>
+##      Allow a domain to manage dirsrv /var/lib files.
+## </summary>
+## <param name="domain">
+## 	<summary>
+##		Domain allowed access.
+## 	</summary>
+## </param>
+#
+interface(`dirsrv_manage_var_lib',`
+        gen_require(`
+                type dirsrv_var_lib_t;
+        ')
+        allow $1 dirsrv_var_lib_t:dir manage_dir_perms;
+        allow $1 dirsrv_var_lib_t:file manage_file_perms;
+')
+
+#######################################
+## <summary>
+##      Allow a domain to manage dirsrv /var/run files.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`dirsrv_manage_var_run',`
+	gen_require(`
+		type dirsrv_var_run_t;
+	')
+	allow $1 dirsrv_var_run_t:dir manage_dir_perms;
+	allow $1 dirsrv_var_run_t:file manage_file_perms;
+	allow $1 dirsrv_var_run_t:sock_file manage_file_perms;
+')
+
+######################################
+## <summary>
+##      Allow a domain to create dirsrv pid directories.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`dirsrv_pid_filetrans',`
+        gen_require(`
+                type dirsrv_var_run_t;
+        ')
+        # Allow creating a dir in /var/run with this type
+        files_pid_filetrans($1, dirsrv_var_run_t, dir)
+')
+
+#######################################
+## <summary>
+##      Allow a domain to read dirsrv /var/run files.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`dirsrv_read_var_run',`
+        gen_require(`
+                type dirsrv_var_run_t;
+        ')
+        allow $1 dirsrv_var_run_t:dir list_dir_perms;
+        allow $1 dirsrv_var_run_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##      Manage dirsrv configuration files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dirsrv_manage_config',`
+	gen_require(`
+		type dirsrv_config_t;
+	')
+
+	allow $1 dirsrv_config_t:dir manage_dir_perms;
+	allow $1 dirsrv_config_t:file manage_file_perms;
+')
+
+########################################
+## <summary>
+##      Read dirsrv share files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`dirsrv_read_share',`
+	gen_require(`
+		type dirsrv_share_t;
+	')
+
+	allow $1 dirsrv_share_t:dir list_dir_perms;
+	allow $1 dirsrv_share_t:file read_file_perms;
+	allow $1 dirsrv_share_t:lnk_file read;
+')
+
+#######################################
+## <summary>
+##  Connect to dirsrv over an unix stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`dirsrv_stream_connect',`
+    gen_require(`
+        type dirsrv_t, dirsrv_var_run_t;
+    ')
+
+    files_search_pids($1)
+    stream_connect_pattern($1, dirsrv_var_run_t, dirsrv_var_run_t, dirsrv_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dirsrv.te serefpolicy-3.7.19/policy/modules/services/dirsrv.te
--- nsaserefpolicy/policy/modules/services/dirsrv.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dirsrv.te	2012-02-22 22:27:58.180268048 +0000
@@ -0,0 +1,204 @@
+policy_module(dirsrv,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+# main daemon
+type dirsrv_t;
+type dirsrv_exec_t;
+domain_type(dirsrv_t)
+init_daemon_domain(dirsrv_t, dirsrv_exec_t)
+
+type dirsrv_snmp_t;
+type dirsrv_snmp_exec_t;
+domain_type(dirsrv_snmp_t)
+init_daemon_domain(dirsrv_snmp_t, dirsrv_snmp_exec_t)
+
+type dirsrv_var_lib_t;
+files_type(dirsrv_var_lib_t)
+
+type dirsrv_var_log_t;
+logging_log_file(dirsrv_var_log_t)
+
+type dirsrv_snmp_var_log_t;
+logging_log_file(dirsrv_snmp_var_log_t)
+
+type dirsrv_var_run_t;
+files_pid_file(dirsrv_var_run_t)
+
+type dirsrv_snmp_var_run_t;
+files_pid_file(dirsrv_snmp_var_run_t)
+
+type dirsrv_var_lock_t alias dirsrvadmin_lock_t;
+files_lock_file(dirsrv_var_lock_t)
+
+type dirsrv_config_t;
+files_type(dirsrv_config_t)
+
+type dirsrv_tmp_t;
+files_tmp_file(dirsrv_tmp_t)
+
+type dirsrv_tmpfs_t;
+files_tmpfs_file(dirsrv_tmpfs_t)
+
+type dirsrv_share_t;
+files_type(dirsrv_share_t);
+
+########################################
+#
+# dirsrv local policy
+#
+allow dirsrv_t self:process { getsched setsched setfscreate signal_perms};
+allow dirsrv_t self:capability { sys_nice setuid setgid fsetid chown dac_override fowner };
+allow dirsrv_t self:fifo_file manage_fifo_file_perms;
+allow dirsrv_t self:sem create_sem_perms;
+allow dirsrv_t self:tcp_socket create_stream_socket_perms;
+allow dirsrv_t self:netlink_route_socket r_netlink_socket_perms;
+
+manage_files_pattern(dirsrv_t, dirsrv_tmpfs_t, dirsrv_tmpfs_t)
+fs_tmpfs_filetrans(dirsrv_t, dirsrv_tmpfs_t, file)
+
+manage_dirs_pattern(dirsrv_t, dirsrv_var_lib_t, dirsrv_var_lib_t)
+manage_files_pattern(dirsrv_t, dirsrv_var_lib_t, dirsrv_var_lib_t)
+manage_sock_files_pattern(dirsrv_t, dirsrv_var_lib_t, dirsrv_var_lib_t)
+files_var_lib_filetrans(dirsrv_t,dirsrv_var_lib_t, { file dir sock_file })
+
+manage_dirs_pattern(dirsrv_t, dirsrv_var_log_t, dirsrv_var_log_t)
+manage_files_pattern(dirsrv_t, dirsrv_var_log_t, dirsrv_var_log_t)
+manage_fifo_files_pattern(dirsrv_t, dirsrv_var_log_t, dirsrv_var_log_t)
+allow dirsrv_t dirsrv_var_log_t:dir { setattr };
+logging_log_filetrans(dirsrv_t,dirsrv_var_log_t,{ sock_file file dir })
+
+manage_dirs_pattern(dirsrv_t, dirsrv_var_run_t, dirsrv_var_run_t)
+manage_files_pattern(dirsrv_t, dirsrv_var_run_t, dirsrv_var_run_t)
+manage_sock_files_pattern(dirsrv_t, dirsrv_var_run_t, dirsrv_var_run_t)
+files_pid_filetrans(dirsrv_t, dirsrv_var_run_t, { file dir sock_file })
+
+manage_files_pattern(dirsrv_t, dirsrv_var_lock_t, dirsrv_var_lock_t)
+manage_dirs_pattern(dirsrv_t, dirsrv_var_lock_t, dirsrv_var_lock_t)
+files_lock_filetrans(dirsrv_t, dirsrv_var_lock_t, file)
+files_setattr_lock_dirs(dirsrv_t)
+
+manage_files_pattern(dirsrv_t, dirsrv_config_t, dirsrv_config_t)
+manage_dirs_pattern(dirsrv_t, dirsrv_config_t, dirsrv_config_t)
+manage_lnk_files_pattern(dirsrv_t, dirsrv_config_t, dirsrv_config_t)
+
+manage_files_pattern(dirsrv_t, dirsrv_tmp_t, dirsrv_tmp_t)
+manage_dirs_pattern(dirsrv_t, dirsrv_tmp_t, dirsrv_tmp_t)
+files_tmp_filetrans(dirsrv_t, dirsrv_tmp_t, { file dir })
+allow dirsrv_t dirsrv_tmp_t:file relabel_file_perms;
+
+kernel_read_system_state(dirsrv_t)
+kernel_read_kernel_sysctls(dirsrv_t)
+
+corecmd_search_sbin(dirsrv_t)
+
+corenet_all_recvfrom_unlabeled(dirsrv_t)
+corenet_all_recvfrom_netlabel(dirsrv_t)
+corenet_tcp_sendrecv_generic_if(dirsrv_t)
+corenet_tcp_sendrecv_generic_node(dirsrv_t)
+corenet_tcp_sendrecv_all_ports(dirsrv_t)
+corenet_tcp_bind_all_nodes(dirsrv_t)
+corenet_tcp_bind_ldap_port(dirsrv_t)
+corenet_tcp_bind_dogtag_port(dirsrv_t)
+corenet_tcp_bind_all_rpc_ports(dirsrv_t)
+corenet_udp_bind_all_rpc_ports(dirsrv_t)
+corenet_tcp_connect_all_ports(dirsrv_t)
+corenet_sendrecv_ldap_server_packets(dirsrv_t)
+corenet_sendrecv_all_client_packets(dirsrv_t)
+
+dev_read_sysfs(dirsrv_t)
+dev_read_urand(dirsrv_t)
+
+files_read_etc_files(dirsrv_t)
+files_read_usr_symlinks(dirsrv_t)
+
+fs_getattr_all_fs(dirsrv_t)
+
+auth_use_pam(dirsrv_t)
+
+logging_send_syslog_msg(dirsrv_t)
+
+miscfiles_read_localization(dirsrv_t)
+
+sysnet_dns_name_resolve(dirsrv_t)
+
+optional_policy(`
+	apache_dontaudit_leaks(dirsrv_t)
+')
+
+optional_policy(`
+	kerberos_read_config(dirsrv_t)
+	kerberos_dontaudit_write_config(dirsrv_t)
+')
+
+optional_policy(`
+	rpcbind_stream_connect(dirsrv_t)
+')
+
+########################################
+#
+# dirsrv-snmp local policy
+#
+allow dirsrv_snmp_t self:capability { dac_override dac_read_search };
+allow dirsrv_snmp_t self:fifo_file rw_fifo_file_perms;
+
+rw_files_pattern(dirsrv_snmp_t, dirsrv_tmpfs_t, dirsrv_tmpfs_t)
+
+read_files_pattern(dirsrv_snmp_t, dirsrv_var_run_t, dirsrv_var_run_t)
+
+read_files_pattern(dirsrv_snmp_t, dirsrv_config_t, dirsrv_config_t)
+
+manage_files_pattern(dirsrv_snmp_t, dirsrv_snmp_var_run_t, dirsrv_snmp_var_run_t)
+files_pid_filetrans(dirsrv_snmp_t, dirsrv_snmp_var_run_t, { file sock_file })
+search_dirs_pattern(dirsrv_snmp_t, dirsrv_var_run_t, dirsrv_var_run_t)
+
+manage_files_pattern(dirsrv_snmp_t, dirsrv_var_log_t, dirsrv_snmp_var_log_t);
+filetrans_pattern(dirsrv_snmp_t, dirsrv_var_log_t, dirsrv_snmp_var_log_t, file)
+
+corenet_tcp_connect_agentx_port(dirsrv_snmp_t)
+
+dev_read_rand(dirsrv_snmp_t)
+dev_read_urand(dirsrv_snmp_t)
+
+domain_use_interactive_fds(dirsrv_snmp_t)
+
+#files_manage_var_files(dirsrv_snmp_t)
+files_read_etc_files(dirsrv_snmp_t)
+files_read_usr_files(dirsrv_snmp_t)
+
+fs_getattr_tmpfs(dirsrv_snmp_t)
+fs_search_tmpfs(dirsrv_snmp_t)
+
+miscfiles_read_localization(dirsrv_snmp_t)
+
+sysnet_read_config(dirsrv_snmp_t)
+sysnet_dns_name_resolve(dirsrv_snmp_t)
+
+optional_policy(`
+	dirsrvadmin_read_tmp(dirsrv_t)
+	dirsrvadmin_write_tmp(dirsrv_t)
+')
+
+optional_policy(`
+    kerberos_use(dirsrv_t)
+')
+
+optional_policy(`
+	snmp_dontaudit_read_snmp_var_lib_files(dirsrv_snmp_t)
+	snmp_dontaudit_write_snmp_var_lib_files(dirsrv_snmp_t)
+	snmp_manage_var_lib_dirs(dirsrv_snmp_t)
+    snmp_manage_var_lib_files(dirsrv_snmp_t)
+	snmp_stream_connect(dirsrv_snmp_t)
+')
+
+optional_policy(`
+	rpcbind_stream_connect(initrc_t)
+')
+
+# FIPS mode
+optional_policy(`
+       prelink_exec(dirsrv_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/djbdns.if serefpolicy-3.7.19/policy/modules/services/djbdns.if
--- nsaserefpolicy/policy/modules/services/djbdns.if	2011-03-17 07:21:21.718851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/djbdns.if	2011-03-17 07:21:04.241851002 +0000
@@ -26,6 +26,8 @@
 	daemontools_read_svc(djbdns_$1_t)
 
 	allow djbdns_$1_t self:capability { net_bind_service setgid setuid sys_chroot };
+	allow djbdns_$1_t self:process signal;
+	allow djbdns_$1_t self:fifo_file rw_fifo_file_perms;
 	allow djbdns_$1_t self:tcp_socket create_stream_socket_perms;
 	allow djbdns_$1_t self:udp_socket create_socket_perms;
 
@@ -50,3 +52,39 @@
 
 	files_search_var(djbdns_$1_t)
 ')
+
+#####################################
+## <summary>
+##  Allow search the djbdns-tinydns key ring.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`djbdns_search_key_tinydns',`
+    gen_require(`
+        type djbdns_tinydns_t;
+    ')
+
+    allow $1 djbdns_tinydns_t:key search;
+')
+
+#####################################
+## <summary>
+##  Allow link to the djbdns-tinydns key ring.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`djbdns_link_key_tinydns',`
+    gen_require(`
+        type djbdns_tinydn_t;
+    ')
+
+    allow $1 djbdns_tinydn_t:key link;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/djbdns.te serefpolicy-3.7.19/policy/modules/services/djbdns.te
--- nsaserefpolicy/policy/modules/services/djbdns.te	2011-03-17 07:21:22.389851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/djbdns.te	2011-03-17 07:21:05.126851002 +0000
@@ -42,3 +42,11 @@
 files_search_var(djbdns_axfrdns_t)
 
 ucspitcp_service_domain(djbdns_axfrdns_t, djbdns_axfrdns_exec_t)
+
+#####################################
+#
+# Local policy for djbdns_tinydns_t
+#
+
+init_dontaudit_use_script_fds(djbdns_tinydns_t)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dnsmasq.fc serefpolicy-3.7.19/policy/modules/services/dnsmasq.fc
--- nsaserefpolicy/policy/modules/services/dnsmasq.fc	2011-03-17 07:21:21.829851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dnsmasq.fc	2011-03-17 07:21:04.383851002 +0000
@@ -6,5 +6,7 @@
 /var/lib/misc/dnsmasq\.leases	--	gen_context(system_u:object_r:dnsmasq_lease_t,s0)
 /var/lib/dnsmasq(/.*)?			gen_context(system_u:object_r:dnsmasq_lease_t,s0)
 
+/var/log/dnsmasq\.log			gen_context(system_u:object_r:dnsmasq_var_log_t,s0)
+
 /var/run/dnsmasq\.pid		--	gen_context(system_u:object_r:dnsmasq_var_run_t,s0)
 /var/run/libvirt/network(/.*)?		gen_context(system_u:object_r:dnsmasq_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dnsmasq.if serefpolicy-3.7.19/policy/modules/services/dnsmasq.if
--- nsaserefpolicy/policy/modules/services/dnsmasq.if	2011-03-17 07:21:20.955851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dnsmasq.if	2012-05-15 07:33:41.254121686 +0000
@@ -20,6 +20,24 @@
 	domtrans_pattern($1, dnsmasq_exec_t, dnsmasq_t)
 ')
 
+######################################
+## <summary>
+##  Execute dnsmasq server in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`dnsmasq_exec',`
+    gen_require(`
+        type dnsmasq_exec_t;
+    ')
+
+    can_exec($1, dnsmasq_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute the dnsmasq init script in the init script domain.
@@ -111,7 +129,7 @@
 		type dnsmasq_etc_t;
 	')
 
-	allow $1 dnsmasq_etc_t:file read_file_perms;
+	read_files_pattern($1, dnsmasq_etc_t, dnsmasq_etc_t)
 	files_search_etc($1)
 ')
 
@@ -130,7 +148,7 @@
 		type dnsmasq_etc_t;
 	')
 
-	allow $1 dnsmasq_etc_t:file write_file_perms;
+	write_files_pattern($1, dnsmasq_etc_t, dnsmasq_etc_t)
 	files_search_etc($1)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dnsmasq.te serefpolicy-3.7.19/policy/modules/services/dnsmasq.te
--- nsaserefpolicy/policy/modules/services/dnsmasq.te	2011-03-17 07:21:21.970851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dnsmasq.te	2011-11-24 09:56:50.695126408 +0000
@@ -19,6 +19,9 @@
 type dnsmasq_lease_t;
 files_type(dnsmasq_lease_t)
 
+type dnsmasq_var_log_t;
+logging_log_file(dnsmasq_var_log_t)
+
 type dnsmasq_var_run_t;
 files_pid_file(dnsmasq_var_run_t)
 
@@ -27,7 +30,7 @@
 # Local policy
 #
 
-allow dnsmasq_t self:capability { net_admin setgid setuid net_bind_service net_raw };
+allow dnsmasq_t self:capability { chown dac_override net_admin setgid setuid net_bind_service net_raw };
 dontaudit dnsmasq_t self:capability sys_tty_config;
 allow dnsmasq_t self:process { getcap setcap signal_perms };
 allow dnsmasq_t self:fifo_file rw_fifo_file_perms;
@@ -37,17 +40,22 @@
 allow dnsmasq_t self:packet_socket create_socket_perms;
 allow dnsmasq_t self:rawip_socket create_socket_perms;
 
-allow dnsmasq_t dnsmasq_etc_t:file read_file_perms;
+read_files_pattern(dnsmasq_t, dnsmasq_etc_t, dnsmasq_etc_t)
 
 # dhcp leases
 manage_files_pattern(dnsmasq_t, dnsmasq_lease_t, dnsmasq_lease_t)
 files_var_lib_filetrans(dnsmasq_t, dnsmasq_lease_t, file)
 
+manage_files_pattern(dnsmasq_t, dnsmasq_var_log_t, dnsmasq_var_log_t)
+logging_log_filetrans(dnsmasq_t, dnsmasq_var_log_t, file)
+
 manage_files_pattern(dnsmasq_t, dnsmasq_var_run_t, dnsmasq_var_run_t)
 files_pid_filetrans(dnsmasq_t, dnsmasq_var_run_t, file)
 
 kernel_read_kernel_sysctls(dnsmasq_t)
 kernel_read_system_state(dnsmasq_t)
+kernel_read_network_state(dnsmasq_t)
+kernel_request_load_module(dnsmasq_t)
 
 corenet_all_recvfrom_unlabeled(dnsmasq_t)
 corenet_all_recvfrom_netlabel(dnsmasq_t)
@@ -87,6 +95,27 @@
 userdom_dontaudit_search_user_home_dirs(dnsmasq_t)
 
 optional_policy(`
+	cobbler_read_lib_files(dnsmasq_t)
+')
+
+optional_policy(`
+	cron_manage_pid_files(dnsmasq_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(dnsmasq_t)
+	dbus_connect_system_bus(dnsmasq_t)
+')
+
+optional_policy(`
+	networkmanager_read_pid_files(dnsmasq_t)
+')
+
+optional_policy(`
+	ppp_read_pid_files(dnsmasq_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(dnsmasq_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dovecot.fc serefpolicy-3.7.19/policy/modules/services/dovecot.fc
--- nsaserefpolicy/policy/modules/services/dovecot.fc	2011-03-17 07:21:22.229851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dovecot.fc	2011-03-17 07:21:04.960851001 +0000
@@ -3,6 +3,7 @@
 # /etc
 #
 /etc/dovecot\.conf.*			gen_context(system_u:object_r:dovecot_etc_t,s0)
+/etc/dovecot(/.*)?			gen_context(system_u:object_r:dovecot_etc_t,s0)
 /etc/dovecot\.passwd.*			gen_context(system_u:object_r:dovecot_passwd_t,s0)
 
 /etc/pki/dovecot(/.*)?			gen_context(system_u:object_r:dovecot_cert_t,s0)
@@ -23,7 +24,9 @@
 
 ifdef(`distro_redhat', `
 /usr/libexec/dovecot/dovecot-auth --	gen_context(system_u:object_r:dovecot_auth_exec_t,s0)
-/usr/libexec/dovecot/deliver --	gen_context(system_u:object_r:dovecot_deliver_exec_t,s0)
+/usr/libexec/dovecot/auth		  --	gen_context(system_u:object_r:dovecot_auth_exec_t,s0)
+/usr/libexec/dovecot/deliver	  --	gen_context(system_u:object_r:dovecot_deliver_exec_t,s0)
+/usr/libexec/dovecot/dovecot-lda  --	gen_context(system_u:object_r:dovecot_deliver_exec_t,s0)
 ')
 
 #
@@ -34,6 +37,7 @@
 
 /var/lib/dovecot(/.*)?			gen_context(system_u:object_r:dovecot_var_lib_t,s0)
 
+/var/log/dovecot(/.*)?			gen_context(system_u:object_r:dovecot_var_log_t,s0)
 /var/log/dovecot\.log.*			gen_context(system_u:object_r:dovecot_var_log_t,s0)
 
 /var/spool/dovecot(/.*)?		gen_context(system_u:object_r:dovecot_spool_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dovecot.if serefpolicy-3.7.19/policy/modules/services/dovecot.if
--- nsaserefpolicy/policy/modules/services/dovecot.if	2011-03-17 07:21:21.100851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dovecot.if	2012-01-25 17:05:23.279828432 +0000
@@ -1,5 +1,24 @@
 ## <summary>Dovecot POP and IMAP mail server</summary>
 
+######################################
+## <summary>
+##  Connect to dovecot unix domain stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`dovecot_stream_connect',`
+    gen_require(`
+        type dovecot_t, dovecot_var_run_t;
+    ')
+
+    files_search_pids($1)
+    stream_connect_pattern($1, dovecot_var_run_t, dovecot_var_run_t, dovecot_t)
+')
+
 ########################################
 ## <summary>
 ##	Connect to dovecot auth unix domain stream socket.
@@ -74,6 +93,25 @@
 	dontaudit $1 dovecot_var_lib_t:file unlink;
 ')
 
+######################################
+## <summary>
+##     Dontaudit attempts to read and write
+##     dovecot tmp files.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain to not audit.
+##     </summary>
+## </param>
+#
+interface(`dovecot_dontaudit_rw_tmp_files',`
+       gen_require(`
+               type dovecot_tmp_t;
+       ')
+
+       dontaudit $1 dovecot_tmp_t:file { read write };
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
@@ -93,7 +131,7 @@
 #
 interface(`dovecot_admin',`
 	gen_require(`
-		type dovecot_t, dovecot_etc_t, dovecot_log_t;
+		type dovecot_t, dovecot_etc_t;
 		type dovecot_spool_t, dovecot_var_lib_t;
 		type dovecot_var_run_t;
 
@@ -112,9 +150,6 @@
 	files_list_etc($1)
 	admin_pattern($1, dovecot_etc_t)
 
-	logging_list_logs($1)
-	admin_pattern($1, dovecot_log_t)
-
 	files_list_spool($1)
 	admin_pattern($1, dovecot_spool_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/dovecot.te serefpolicy-3.7.19/policy/modules/services/dovecot.te
--- nsaserefpolicy/policy/modules/services/dovecot.te	2011-03-17 07:21:21.930851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/dovecot.te	2012-07-17 12:34:45.895047586 +0000
@@ -9,6 +9,9 @@
 type dovecot_exec_t;
 init_daemon_domain(dovecot_t, dovecot_exec_t)
 
+type dovecot_tmp_t;
+files_tmp_file(dovecot_tmp_t)
+
 type dovecot_auth_t;
 type dovecot_auth_exec_t;
 domain_type(dovecot_auth_t)
@@ -19,7 +22,7 @@
 files_tmp_file(dovecot_auth_tmp_t)
 
 type dovecot_cert_t;
-files_type(dovecot_cert_t)
+miscfiles_cert_type(dovecot_cert_t)
 
 type dovecot_deliver_t;
 type dovecot_deliver_exec_t;
@@ -27,6 +30,9 @@
 domain_entry_file(dovecot_deliver_t, dovecot_deliver_exec_t)
 role system_r types dovecot_deliver_t;
 
+type dovecot_deliver_tmp_t;
+files_tmp_file(dovecot_deliver_tmp_t)
+
 type dovecot_etc_t;
 files_config_file(dovecot_etc_t)
 
@@ -54,35 +60,53 @@
 # dovecot local policy
 #
 
-allow dovecot_t self:capability { dac_override dac_read_search chown net_bind_service setgid setuid sys_chroot };
+allow dovecot_t self:capability { dac_override dac_read_search fsetid chown kill net_bind_service setgid setuid sys_chroot };
 dontaudit dovecot_t self:capability sys_tty_config;
-allow dovecot_t self:process { setrlimit signal_perms getcap setcap };
+allow dovecot_t self:process { setrlimit signal_perms getcap setcap setsched };
 allow dovecot_t self:fifo_file rw_fifo_file_perms;
 allow dovecot_t self:tcp_socket create_stream_socket_perms;
 allow dovecot_t self:unix_dgram_socket create_socket_perms;
 allow dovecot_t self:unix_stream_socket { create_stream_socket_perms connectto };
 
 domtrans_pattern(dovecot_t, dovecot_auth_exec_t, dovecot_auth_t)
+allow dovecot_t dovecot_auth_t:process signal;
 
 allow dovecot_t dovecot_cert_t:dir list_dir_perms;
 read_files_pattern(dovecot_t, dovecot_cert_t, dovecot_cert_t)
 read_lnk_files_pattern(dovecot_t, dovecot_cert_t, dovecot_cert_t)
 
 allow dovecot_t dovecot_etc_t:file read_file_perms;
+read_lnk_files_pattern(dovecot_t, dovecot_etc_t, dovecot_etc_t)
+read_lnk_files_pattern(dovecot_auth_t, dovecot_etc_t, dovecot_etc_t)
+read_lnk_files_pattern(dovecot_deliver_t, dovecot_etc_t, dovecot_etc_t)
+
 files_search_etc(dovecot_t)
 
 can_exec(dovecot_t, dovecot_exec_t)
 
+manage_dirs_pattern(dovecot_t, dovecot_tmp_t, dovecot_tmp_t)
+manage_files_pattern(dovecot_t, dovecot_tmp_t, dovecot_tmp_t)
+files_tmp_filetrans(dovecot_t, dovecot_tmp_t, { file dir })
+
+# Allow dovecot to create and read SSL parameters file
+manage_files_pattern(dovecot_t, dovecot_var_lib_t, dovecot_var_lib_t)
+files_search_var_lib(dovecot_t)
+files_read_var_symlinks(dovecot_t)
+
+manage_dirs_pattern(dovecot_t, dovecot_var_log_t, dovecot_var_log_t)
 manage_files_pattern(dovecot_t, dovecot_var_log_t, dovecot_var_log_t)
-logging_log_filetrans(dovecot_t, dovecot_var_log_t, file)
+logging_log_filetrans(dovecot_t, dovecot_var_log_t, { file dir })
 
 manage_dirs_pattern(dovecot_t, dovecot_spool_t, dovecot_spool_t)
 manage_files_pattern(dovecot_t, dovecot_spool_t, dovecot_spool_t)
 manage_lnk_files_pattern(dovecot_t, dovecot_spool_t, dovecot_spool_t)
 
+manage_dirs_pattern(dovecot_t, dovecot_var_run_t, dovecot_var_run_t)
 manage_files_pattern(dovecot_t, dovecot_var_run_t, dovecot_var_run_t)
+manage_lnk_files_pattern(dovecot_t, dovecot_var_run_t, dovecot_var_run_t)
 manage_sock_files_pattern(dovecot_t, dovecot_var_run_t, dovecot_var_run_t)
-files_pid_filetrans(dovecot_t, dovecot_var_run_t, file)
+manage_fifo_files_pattern(dovecot_t, dovecot_var_run_t, dovecot_var_run_t)
+files_pid_filetrans(dovecot_t, dovecot_var_run_t, { dir file fifo_file })
 
 kernel_read_kernel_sysctls(dovecot_t)
 kernel_read_system_state(dovecot_t)
@@ -93,16 +117,20 @@
 corenet_tcp_sendrecv_generic_node(dovecot_t)
 corenet_tcp_sendrecv_all_ports(dovecot_t)
 corenet_tcp_bind_generic_node(dovecot_t)
+corenet_tcp_bind_mail_port(dovecot_t)
 corenet_tcp_bind_pop_port(dovecot_t)
 corenet_tcp_connect_all_ports(dovecot_t)
 corenet_tcp_connect_postgresql_port(dovecot_t)
 corenet_sendrecv_pop_server_packets(dovecot_t)
 corenet_sendrecv_all_client_packets(dovecot_t)
+corenet_tcp_bind_lmtp_port(dovecot_t)
+corenet_tcp_bind_sieve_port(dovecot_t)
 
 dev_read_sysfs(dovecot_t)
 dev_read_urand(dovecot_t)
 
 fs_getattr_all_fs(dovecot_t)
+fs_getattr_all_dirs(dovecot_t)
 fs_search_auto_mountpoints(dovecot_t)
 fs_list_inotifyfs(dovecot_t)
 
@@ -136,16 +164,32 @@
 userdom_user_home_dir_filetrans_user_home_content(dovecot_t, { dir file lnk_file fifo_file sock_file })
 
 mta_manage_spool(dovecot_t)
+mta_manage_home_rw(dovecot_t)
 
 optional_policy(`
 	kerberos_keytab_template(dovecot, dovecot_t)
 ')
 
 optional_policy(`
+    postfix_manage_private_sockets(dovecot_t)
+    postfix_search_spool(dovecot_t)
+')
+
+
+optional_policy(`
+	postgresql_stream_connect(dovecot_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(dovecot_t)
 ')
 
 optional_policy(`
+    # Handle sieve scripts
+	sendmail_domtrans(dovecot_t)
+')
+
+optional_policy(`
 	squid_dontaudit_search_cache(dovecot_t)
 ')
 
@@ -158,25 +202,22 @@
 # dovecot auth local policy
 #
 
-allow dovecot_auth_t self:capability { chown dac_override setgid setuid };
-allow dovecot_auth_t self:process { signal_perms getcap setcap };
+allow dovecot_auth_t self:capability { chown dac_override ipc_lock setgid setuid sys_nice };
+allow dovecot_auth_t self:process { getsched setsched signal_perms getcap setcap };
 allow dovecot_auth_t self:fifo_file rw_fifo_file_perms;
 allow dovecot_auth_t self:unix_dgram_socket create_socket_perms;
 allow dovecot_auth_t self:unix_stream_socket create_stream_socket_perms;
 
 allow dovecot_auth_t dovecot_t:unix_stream_socket { connectto rw_stream_socket_perms };
 
+read_files_pattern(dovecot_auth_t, dovecot_etc_t, dovecot_etc_t)
+
 read_files_pattern(dovecot_auth_t, dovecot_passwd_t, dovecot_passwd_t)
 
 manage_dirs_pattern(dovecot_auth_t, dovecot_auth_tmp_t, dovecot_auth_tmp_t)
 manage_files_pattern(dovecot_auth_t, dovecot_auth_tmp_t, dovecot_auth_tmp_t)
 files_tmp_filetrans(dovecot_auth_t, dovecot_auth_tmp_t, { file dir })
 
-# Allow dovecot to create and read SSL parameters file
-manage_files_pattern(dovecot_t, dovecot_var_lib_t, dovecot_var_lib_t)
-files_search_var_lib(dovecot_t)
-files_read_var_symlinks(dovecot_t)
-
 allow dovecot_auth_t dovecot_var_run_t:dir list_dir_perms;
 manage_sock_files_pattern(dovecot_auth_t, dovecot_var_run_t, dovecot_var_run_t)
 dovecot_stream_connect_auth(dovecot_auth_t)
@@ -197,11 +238,13 @@
 files_search_pids(dovecot_auth_t)
 files_read_usr_files(dovecot_auth_t)
 files_read_usr_symlinks(dovecot_auth_t)
+files_read_var_lib_files(dovecot_auth_t)
 files_search_tmp(dovecot_auth_t)
-files_read_var_lib_files(dovecot_t)
 
 init_rw_utmp(dovecot_auth_t)
 
+logging_search_logs(dovecot_auth_t)
+
 miscfiles_read_localization(dovecot_auth_t)
 
 seutil_dontaudit_search_config(dovecot_auth_t)
@@ -218,6 +261,9 @@
 optional_policy(`
 	mysql_search_db(dovecot_auth_t)
 	mysql_stream_connect(dovecot_auth_t)
+	mysql_read_config(dovecot_auth_t)
+	mysql_tcp_connect(dovecot_auth_t)
+
 ')
 
 optional_policy(`
@@ -225,6 +271,7 @@
 ')
 
 optional_policy(`
+	postfix_manage_private_sockets(dovecot_auth_t)
 	postfix_search_spool(dovecot_auth_t)
 ')
 
@@ -234,18 +281,39 @@
 #
 allow dovecot_deliver_t self:unix_dgram_socket create_socket_perms;
 
+allow dovecot_deliver_t dovecot_t:process signull;  
+
 allow dovecot_deliver_t dovecot_etc_t:file read_file_perms;
+allow dovecot_deliver_t dovecot_var_log_t:dir search_dir_perms;
+allow dovecot_deliver_t dovecot_var_run_t:dir list_dir_perms;
+
+manage_dirs_pattern(dovecot_deliver_t, dovecot_deliver_tmp_t, dovecot_deliver_tmp_t)
+manage_files_pattern(dovecot_deliver_t, dovecot_deliver_tmp_t, dovecot_deliver_tmp_t)
+files_tmp_filetrans(dovecot_deliver_t, dovecot_deliver_tmp_t, { file dir })
+
+append_files_pattern(dovecot_deliver_t, dovecot_var_log_t, dovecot_var_log_t)
+
+allow dovecot_deliver_t dovecot_cert_t:dir search_dir_perms;
+
 allow dovecot_deliver_t dovecot_var_run_t:dir list_dir_perms;
+read_sock_files_pattern(dovecot_deliver_t, dovecot_var_run_t, dovecot_var_run_t)
+dovecot_stream_connect(dovecot_deliver_t)
+
+can_exec(dovecot_deliver_t, dovecot_deliver_exec_t)
 
 kernel_read_all_sysctls(dovecot_deliver_t)
 kernel_read_system_state(dovecot_deliver_t)
 
+corecmd_exec_bin(dovecot_deliver_t)
+
 files_read_etc_files(dovecot_deliver_t)
 files_read_etc_runtime_files(dovecot_deliver_t)
 
 auth_use_nsswitch(dovecot_deliver_t)
 
 logging_send_syslog_msg(dovecot_deliver_t)
+logging_append_all_logs(dovecot_deliver_t)
+logging_search_logs(dovecot_deliver_t)
 
 miscfiles_read_localization(dovecot_deliver_t)
 
@@ -263,15 +331,35 @@
 userdom_user_home_dir_filetrans_user_home_content(dovecot_deliver_t, { dir file lnk_file fifo_file sock_file })
 
 tunable_policy(`use_nfs_home_dirs',`
+	fs_manage_nfs_dirs(dovecot_deliver_t)
+	fs_manage_nfs_files(dovecot_deliver_t)
+	fs_manage_nfs_symlinks(dovecot_deliver_t)
+	fs_manage_nfs_dirs(dovecot_t)
 	fs_manage_nfs_files(dovecot_t)
 	fs_manage_nfs_symlinks(dovecot_t)
 ')
 
 tunable_policy(`use_samba_home_dirs',`
+	fs_manage_cifs_dirs(dovecot_deliver_t)
+	fs_manage_cifs_files(dovecot_deliver_t)
+	fs_manage_cifs_symlinks(dovecot_deliver_t)
+	fs_manage_cifs_dirs(dovecot_t)
 	fs_manage_cifs_files(dovecot_t)
 	fs_manage_cifs_symlinks(dovecot_t)
 ')
 
 optional_policy(`
+	mta_read_queue(dovecot_deliver_t)
 	mta_manage_spool(dovecot_deliver_t)
+	mta_manage_home_rw(dovecot_deliver_t)
+')
+
+optional_policy(`
+	# Handle sieve scripts
+	allow dovecot_deliver_t self:fifo_file rw_fifo_file_perms;
+	sendmail_domtrans(dovecot_deliver_t)
+')
+
+optional_policy(`
+    postfix_rw_master_pipes(dovecot_deliver_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/drbd.fc serefpolicy-3.7.19/policy/modules/services/drbd.fc
--- nsaserefpolicy/policy/modules/services/drbd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/drbd.fc	2011-07-26 15:27:53.134523004 +0000
@@ -0,0 +1,9 @@
+
+/sbin/drbdadm		--	gen_context(system_u:object_r:drbd_exec_t,s0)
+/sbin/drbdsetup		--	gen_context(system_u:object_r:drbd_exec_t,s0)
+
+/usr/lib/ocf/resource.\d/linbit/drbd -- gen_context(system_u:object_r:drbd_exec_t,s0) 
+
+/var/lib/drbd(/.*)?		gen_context(system_u:object_r:drbd_var_lib_t,s0)
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/drbd.if serefpolicy-3.7.19/policy/modules/services/drbd.if
--- nsaserefpolicy/policy/modules/services/drbd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/drbd.if	2012-03-28 11:39:37.571642617 +0000
@@ -0,0 +1,124 @@
+
+## <summary>policy for drbd</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run drbd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`drbd_domtrans',`
+	gen_require(`
+		type drbd_t, drbd_exec_t;
+	')
+
+	domtrans_pattern($1, drbd_exec_t, drbd_t)
+')
+
+########################################
+## <summary>
+##	Search drbd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`drbd_search_lib',`
+	gen_require(`
+		type drbd_var_lib_t;
+	')
+
+	allow $1 drbd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read drbd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`drbd_read_lib_files',`
+	gen_require(`
+		type drbd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, drbd_var_lib_t, drbd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	drbd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`drbd_manage_lib_files',`
+	gen_require(`
+		type drbd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, drbd_var_lib_t, drbd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage drbd lib dirs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`drbd_manage_lib_dirs',`
+	gen_require(`
+		type drbd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_dirs_pattern($1, drbd_var_lib_t, drbd_var_lib_t)
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an drbd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`drbd_admin',`
+	gen_require(`
+		type drbd_t;
+                type drbd_var_lib_t;
+	')
+
+	allow $1 drbd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, drbd_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, drbd_var_lib_t)
+
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/drbd.te serefpolicy-3.7.19/policy/modules/services/drbd.te
--- nsaserefpolicy/policy/modules/services/drbd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/drbd.te	2012-04-02 19:16:02.759518025 +0000
@@ -0,0 +1,56 @@
+policy_module(drbd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type drbd_t;
+type drbd_exec_t;
+init_daemon_domain(drbd_t, drbd_exec_t)
+
+type drbd_var_lib_t;
+files_type(drbd_var_lib_t)
+
+type drbd_lock_t;
+files_lock_file(drbd_lock_t)
+
+########################################
+#
+# drbd local policy
+#
+
+allow drbd_t self:capability { kill net_admin };
+dontaudit drbd_t self:capability sys_tty_config;
+allow drbd_t self:fifo_file rw_fifo_file_perms;
+allow drbd_t self:unix_stream_socket create_stream_socket_perms;
+allow drbd_t self:netlink_socket create_socket_perms;
+allow drbd_t self:netlink_route_socket rw_netlink_socket_perms;
+
+manage_dirs_pattern(drbd_t, drbd_var_lib_t, drbd_var_lib_t)
+manage_files_pattern(drbd_t, drbd_var_lib_t, drbd_var_lib_t)
+manage_lnk_files_pattern(drbd_t, drbd_var_lib_t, drbd_var_lib_t)
+files_var_lib_filetrans(drbd_t, drbd_var_lib_t, { dir file } )
+
+manage_files_pattern(drbd_t, drbd_lock_t, drbd_lock_t)
+files_lock_filetrans(drbd_t, drbd_lock_t, file)
+
+can_exec(drbd_t, drbd_exec_t)
+
+kernel_read_system_state(drbd_t)
+
+dev_read_sysfs(drbd_t)
+dev_read_rand(drbd_t)
+dev_read_urand(drbd_t)
+
+files_read_etc_files(drbd_t)
+
+storage_raw_read_fixed_disk(drbd_t)
+
+miscfiles_read_localization(drbd_t)
+
+sysnet_dns_name_resolve(drbd_t)
+
+optional_policy(`
+	unconfined_domain(drbd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/exim.fc serefpolicy-3.7.19/policy/modules/services/exim.fc
--- nsaserefpolicy/policy/modules/services/exim.fc	2011-03-17 07:21:21.595851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/exim.fc	2011-03-17 07:21:04.091851002 +0000
@@ -1,3 +1,6 @@
+
+/etc/rc\.d/init\.d/exim        --  gen_context(system_u:object_r:exim_initrc_exec_t,s0)
+
 /usr/sbin/exim[0-9]?		--	gen_context(system_u:object_r:exim_exec_t,s0)
 /var/log/exim[0-9]?(/.*)?		gen_context(system_u:object_r:exim_log_t,s0)
 /var/run/exim[0-9]?\.pid	--	gen_context(system_u:object_r:exim_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/exim.if serefpolicy-3.7.19/policy/modules/services/exim.if
--- nsaserefpolicy/policy/modules/services/exim.if	2011-03-17 07:21:22.286851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/exim.if	2011-03-17 07:21:05.023851003 +0000
@@ -20,6 +20,24 @@
 
 ########################################
 ## <summary>
+##	Execute exim in the exim domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`exim_initrc_domtrans', `
+	gen_require(`
+		type exim_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, exim_initrc_exec_t)
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read, 
 ##	exim tmp files
 ## </summary>
@@ -194,3 +212,46 @@
 	manage_files_pattern($1, exim_spool_t, exim_spool_t)
 	files_search_spool($1)
 ')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an exim environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`exim_admin', `
+	gen_require(`
+		type exim_t, exim_initrc_exec_t, exim_log_t; 
+		type exim_tmp_t, exim_spool_t,  exim_var_run_t;
+	')
+
+	allow $1 exim_t:process { ptrace signal_perms };
+	ps_process_pattern($1, exim_t)
+
+	exim_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 exim_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, exim_log_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, exim_tmp_t)
+
+	files_search_spool($1)
+	admin_pattern($1, exim_spool_t)
+
+	files_search_pids($1)
+	admin_pattern($1, exim_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/exim.te serefpolicy-3.7.19/policy/modules/services/exim.te
--- nsaserefpolicy/policy/modules/services/exim.te	2011-03-17 07:21:21.635851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/exim.te	2011-03-17 07:21:04.125851002 +0000
@@ -36,6 +36,9 @@
 application_executable_file(exim_exec_t)
 mta_agent_executable(exim_exec_t)
 
+type exim_initrc_exec_t;
+init_script_file(exim_initrc_exec_t)
+
 type exim_log_t;
 logging_log_file(exim_log_t)
 
@@ -172,6 +175,10 @@
 ')
 
 optional_policy(`
+    nagios_search_spool(exim_t)
+')
+
+optional_policy(`
 	tunable_policy(`exim_can_connect_db',`
 		mysql_stream_connect(exim_t)
 	')
@@ -185,6 +192,7 @@
 
 optional_policy(`
 	procmail_domtrans(exim_t)
+	procmail_read_home_files(exim_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/fail2ban.if serefpolicy-3.7.19/policy/modules/services/fail2ban.if
--- nsaserefpolicy/policy/modules/services/fail2ban.if	2011-03-17 07:21:20.869851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/fail2ban.if	2011-06-06 11:02:13.680208001 +0000
@@ -138,6 +138,26 @@
 
 ########################################
 ## <summary>
+##	dontaudit read and write an leaked file descriptors
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`fail2ban_dontaudit_leaks',`
+	gen_require(`
+		type fail2ban_t;
+	')
+
+ 	dontaudit $1 fail2ban_t:tcp_socket { read write };
+	dontaudit $1 fail2ban_t:unix_dgram_socket { read write };
+	dontaudit $1 fail2ban_t:unix_stream_socket { read write };
+')
+
+########################################
+## <summary>
 ##	All of the rules required to administrate 
 ##	an fail2ban environment
 ## </summary>
@@ -173,3 +193,22 @@
 	files_list_pids($1)
 	admin_pattern($1, fail2ban_var_run_t)
 ')
+
+######################################
+## <summary>
+##  Read and write inherited temporary files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fail2ban_rw_inherited_tmp_files',`
+    gen_require(`
+        type fail2ban_tmp_t;
+    ')
+
+    files_search_tmp($1)
+    allow $1 fail2ban_tmp_t:file rw_inherited_file_perms;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/fail2ban.te serefpolicy-3.7.19/policy/modules/services/fail2ban.te
--- nsaserefpolicy/policy/modules/services/fail2ban.te	2011-03-17 07:21:22.201851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/fail2ban.te	2011-06-06 16:44:07.484208002 +0000
@@ -24,13 +24,17 @@
 type fail2ban_var_run_t;
 files_pid_file(fail2ban_var_run_t)
 
+type fail2ban_tmp_t;
+files_tmp_file(fail2ban_tmp_t)
+
 ########################################
 #
 # fail2ban local policy
 #
 
-allow fail2ban_t self:capability { sys_tty_config };
+allow fail2ban_t self:capability { dac_read_search dac_override sys_tty_config };
 allow fail2ban_t self:process signal;
+
 allow fail2ban_t self:fifo_file rw_fifo_file_perms;
 allow fail2ban_t self:unix_stream_socket { connectto create_stream_socket_perms };
 allow fail2ban_t self:unix_dgram_socket create_socket_perms;
@@ -51,6 +55,11 @@
 manage_files_pattern(fail2ban_t, fail2ban_var_run_t, fail2ban_var_run_t)
 files_pid_filetrans(fail2ban_t, fail2ban_var_run_t, { dir file sock_file })
 
+manage_dirs_pattern(fail2ban_t, fail2ban_tmp_t, fail2ban_tmp_t)
+manage_files_pattern(fail2ban_t, fail2ban_tmp_t, fail2ban_tmp_t)
+exec_files_pattern(fail2ban_t, fail2ban_tmp_t, fail2ban_tmp_t)
+files_tmp_filetrans(fail2ban_t, fail2ban_tmp_t, { dir file })
+
 kernel_read_system_state(fail2ban_t)
 
 corecmd_exec_bin(fail2ban_t)
@@ -91,9 +100,17 @@
 ')
 
 optional_policy(`
+	bind_read_log(fail2ban_t)
+')
+
+optional_policy(`
 	ftp_read_log(fail2ban_t)
 ')
 
 optional_policy(`
+    gnome_dontaudit_search_config(fail2ban_t)
+')
+
+optional_policy(`
 	iptables_domtrans(fail2ban_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/fcoemon.fc serefpolicy-3.7.19/policy/modules/services/fcoemon.fc
--- nsaserefpolicy/policy/modules/services/fcoemon.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/fcoemon.fc	2011-07-26 15:17:44.990523004 +0000
@@ -0,0 +1,5 @@
+
+/usr/sbin/fcoemon		--	gen_context(system_u:object_r:fcoemon_exec_t,s0)
+
+/var/run/fcm(/.*)?			gen_context(system_u:object_r:fcoemon_var_run_t,s0)
+/var/run/fcoemon\.pid		--	gen_context(system_u:object_r:fcoemon_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/fcoemon.if serefpolicy-3.7.19/policy/modules/services/fcoemon.if
--- nsaserefpolicy/policy/modules/services/fcoemon.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/fcoemon.if	2012-03-28 11:39:10.819272096 +0000
@@ -0,0 +1,85 @@
+
+## <summary>policy for fcoemon</summary>
+
+########################################
+## <summary>
+##	Transition to fcoemon.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`fcoemon_domtrans',`
+	gen_require(`
+		type fcoemon_t, fcoemon_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, fcoemon_exec_t, fcoemon_t)
+')
+
+
+########################################
+## <summary>
+##	Read fcoemon PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fcoemon_read_pid_files',`
+	gen_require(`
+		type fcoemon_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 fcoemon_var_run_t:file read_file_perms;
+')
+
+#######################################
+## <summary>
+##      Send to a fcoemon unix dgram socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`fcoemon_dgram_send',`
+        gen_require(`
+                type fcoemon_t;
+        ')
+
+        allow $1 fcoemon_t:unix_dgram_socket sendto;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an fcoemon environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fcoemon_admin',`
+	gen_require(`
+		type fcoemon_t;
+	type fcoemon_var_run_t;
+	')
+
+	allow $1 fcoemon_t:process { ptrace signal_perms };
+	ps_process_pattern($1, fcoemon_t)
+
+	files_search_pids($1)
+	admin_pattern($1, fcoemon_var_run_t)
+
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/fcoemon.te serefpolicy-3.7.19/policy/modules/services/fcoemon.te
--- nsaserefpolicy/policy/modules/services/fcoemon.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/fcoemon.te	2011-08-30 14:15:01.853160001 +0000
@@ -0,0 +1,49 @@
+policy_module(fcoemon, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type fcoemon_t;
+type fcoemon_exec_t;
+init_daemon_domain(fcoemon_t, fcoemon_exec_t)
+
+type fcoemon_var_run_t;
+files_pid_file(fcoemon_var_run_t)
+
+########################################
+#
+# fcoemon local policy
+#
+
+# dac_override
+# /var/rnn/fcm/fcm_clif socket is owned by root
+allow fcoemon_t self:capability { net_admin dac_override };
+allow fcoemon_t self:capability { kill };
+
+allow fcoemon_t self:fifo_file rw_fifo_file_perms;
+allow fcoemon_t self:unix_stream_socket create_stream_socket_perms;
+allow fcoemon_t self:netlink_socket create_socket_perms;
+allow fcoemon_t self:netlink_route_socket create_netlink_socket_perms;
+
+manage_dirs_pattern(fcoemon_t, fcoemon_var_run_t, fcoemon_var_run_t)
+manage_files_pattern(fcoemon_t, fcoemon_var_run_t, fcoemon_var_run_t)
+manage_sock_files_pattern(fcoemon_t, fcoemon_var_run_t, fcoemon_var_run_t)
+files_pid_filetrans(fcoemon_t, fcoemon_var_run_t, { dir file sock_file })
+
+files_read_etc_files(fcoemon_t)
+
+dev_read_sysfs(fcoemon_t)
+
+logging_send_syslog_msg(fcoemon_t)
+
+miscfiles_read_localization(fcoemon_t)
+
+optional_policy(`
+	lldpad_dgram_send(fcoemon_t)
+')
+
+optional_policy(`
+	unconfined_domain(fcoemon_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/fetchmail.if serefpolicy-3.7.19/policy/modules/services/fetchmail.if
--- nsaserefpolicy/policy/modules/services/fetchmail.if	2011-03-17 07:21:22.098851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/fetchmail.if	2011-03-17 07:21:04.867851002 +0000
@@ -18,6 +18,7 @@
 		type fetchmail_var_run_t;
 	')
 
+	allow $1 fetchmail_t:process { ptrace signal_perms };
 	ps_process_pattern($1, fetchmail_t)
 
 	files_list_etc($1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/fetchmail.te serefpolicy-3.7.19/policy/modules/services/fetchmail.te
--- nsaserefpolicy/policy/modules/services/fetchmail.te	2011-03-17 07:21:20.774851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/fetchmail.te	2011-08-05 09:26:42.276523005 +0000
@@ -88,6 +88,10 @@
 userdom_dontaudit_search_user_home_dirs(fetchmail_t)
 
 optional_policy(`
+    kerberos_use(fetchmail_t)
+')
+
+optional_policy(`
 	procmail_domtrans(fetchmail_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/finger.te serefpolicy-3.7.19/policy/modules/services/finger.te
--- nsaserefpolicy/policy/modules/services/finger.te	2011-03-17 07:21:22.213851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/finger.te	2011-10-31 14:14:12.452529537 +0000
@@ -67,6 +67,7 @@
 term_getattr_all_ptys(fingerd_t)
 
 auth_read_lastlog(fingerd_t)
+auth_use_nsswitch(fingerd_t)
 
 corecmd_exec_bin(fingerd_t)
 corecmd_exec_shell(fingerd_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/fprintd.te serefpolicy-3.7.19/policy/modules/services/fprintd.te
--- nsaserefpolicy/policy/modules/services/fprintd.te	2011-03-17 07:21:22.159851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/fprintd.te	2011-03-17 07:21:04.919851002 +0000
@@ -18,9 +18,9 @@
 # Local policy
 #
 
-allow fprintd_t self:capability sys_ptrace;
+allow fprintd_t self:capability { sys_nice sys_ptrace };
 allow fprintd_t self:fifo_file rw_fifo_file_perms;
-allow fprintd_t self:process { getsched signal };
+allow fprintd_t self:process { getsched setsched signal };
 
 manage_dirs_pattern(fprintd_t, fprintd_var_lib_t, fprintd_var_lib_t)
 manage_files_pattern(fprintd_t, fprintd_var_lib_t, fprintd_var_lib_t)
@@ -41,6 +41,8 @@
 
 auth_use_nsswitch(fprintd_t)
 
+init_dontaudit_leaks(fprintd_t)
+
 miscfiles_read_localization(fprintd_t)
 
 userdom_use_user_ptys(fprintd_t)
@@ -55,4 +57,6 @@
 	policykit_read_lib(fprintd_t)
 	policykit_dbus_chat(fprintd_t)
 	policykit_domtrans_auth(fprintd_t)
+	policykit_dbus_chat_auth(fprintd_t)
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ftp.fc serefpolicy-3.7.19/policy/modules/services/ftp.fc
--- nsaserefpolicy/policy/modules/services/ftp.fc	2011-03-17 07:21:21.919851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ftp.fc	2011-03-17 07:21:04.555851001 +0000
@@ -13,6 +13,8 @@
 
 /usr/kerberos/sbin/ftpd	--	gen_context(system_u:object_r:ftpd_exec_t,s0)
 
+/usr/libexec/webmin/vsftpd/webalizer/xfer_log  --	 gen_context(system_u:object_r:xferlog_t,s0)
+
 /usr/sbin/ftpwho	--	gen_context(system_u:object_r:ftpd_exec_t,s0)
 /usr/sbin/in\.ftpd	--	gen_context(system_u:object_r:ftpd_exec_t,s0)
 /usr/sbin/muddleftpd	--	gen_context(system_u:object_r:ftpd_exec_t,s0)
@@ -22,7 +24,7 @@
 #
 # /var
 #
-/var/run/proftpd(/.*)? 		gen_context(system_u:object_r:ftpd_var_run_t,s0)
+/var/run/proftpd.* 		gen_context(system_u:object_r:ftpd_var_run_t,s0)
 
 /var/log/muddleftpd\.log.* --	gen_context(system_u:object_r:xferlog_t,s0)
 /var/log/proftpd(/.*)?		gen_context(system_u:object_r:xferlog_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ftp.if serefpolicy-3.7.19/policy/modules/services/ftp.if
--- nsaserefpolicy/policy/modules/services/ftp.if	2011-03-17 07:21:21.427851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ftp.if	2011-08-30 14:56:30.765160001 +0000
@@ -1,5 +1,43 @@
 ## <summary>File transfer protocol service</summary>
 
+#####################################
+## <summary>
+##      Execute a domain transition to run ftpd.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`ftp_domtrans',`
+        gen_require(`
+                type ftpd_t, ftpd_exec_t;
+        ')
+
+        corecmd_search_bin($1)
+        domtrans_pattern($1,ftpd_exec_t, ftpd_t)
+
+')
+
+######################################
+## <summary>
+##  Execute ftpd server in the ftpd domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`ftp_initrc_domtrans',`
+    gen_require(`
+        type ftpd_initrc_exec_t;
+    ')
+
+    init_labeled_script_domtrans($1, ftpd_initrc_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Use ftp by connecting over TCP.  (Deprecated)
@@ -115,6 +153,25 @@
 	role $2 types ftpdctl_t;
 ')
 
+#######################################
+## <summary>
+##  Allow domain dyntransition to chroot_user_t domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`ftp_dyntransition_sftpd',`
+    gen_require(`
+        type chroot_user_t;
+    ')
+
+	allow $1 chroot_user_t:process dyntransition;
+	allow chroot_user_t $1:process sigchld;
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ftp.te serefpolicy-3.7.19/policy/modules/services/ftp.te
--- nsaserefpolicy/policy/modules/services/ftp.te	2011-03-17 07:21:21.467851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ftp.te	2012-04-10 12:16:41.646925838 +0000
@@ -41,11 +41,25 @@
 
 ## <desc>
 ## <p>
+## Allow ftp servers to use connect to mysql database
+## </p>
+## </desc>
+gen_tunable(ftpd_connect_db, false)
+
+## <desc>
+## <p>
 ## Allow ftp to read and write files in the user home directories
 ## </p>
 ## </desc>
 gen_tunable(ftp_home_dir, false)
 
+## <desc>
+## <p>
+## Allow ftp servers to use bind to all unreserved ports for passive mode
+## </p>
+## </desc>
+gen_tunable(ftpd_use_passive_mode, false)
+
 type ftpd_t;
 type ftpd_exec_t;
 init_daemon_domain(ftpd_t, ftpd_exec_t)
@@ -78,20 +92,29 @@
 type xferlog_t;
 logging_log_file(xferlog_t)
 
+ifdef(`enable_mcs',`
+	init_ranged_daemon_domain(ftpd_t, ftpd_exec_t, s0 - mcs_systemhigh)
+')
+
+ifdef(`enable_mls',`
+	init_ranged_daemon_domain(ftpd_t, ftpd_exec_t, mls_systemhigh)
+')
+
 ########################################
 #
 # ftpd local policy
 #
 
-allow ftpd_t self:capability { chown fowner fsetid setgid setuid sys_chroot sys_nice sys_resource };
+allow ftpd_t self:capability { chown fowner fsetid ipc_lock setgid setuid sys_chroot sys_admin sys_nice sys_resource };
 dontaudit ftpd_t self:capability sys_tty_config;
-allow ftpd_t self:process signal_perms;
-allow ftpd_t self:process { getcap setcap setsched setrlimit };
+allow ftpd_t self:process { getcap getpgid setcap setsched setrlimit signal_perms };
 allow ftpd_t self:fifo_file rw_fifo_file_perms;
 allow ftpd_t self:unix_dgram_socket { sendto create_socket_perms };
 allow ftpd_t self:unix_stream_socket create_stream_socket_perms;
 allow ftpd_t self:tcp_socket create_stream_socket_perms;
 allow ftpd_t self:udp_socket create_socket_perms;
+allow ftpd_t self:shm create_shm_perms;
+allow ftpd_t self:key manage_key_perms;
 
 allow ftpd_t ftpd_etc_t:file read_file_perms;
 
@@ -121,8 +144,7 @@
 allow ftpd_t ftpdctl_tmp_t:sock_file { getattr unlink };
 
 # Create and modify /var/log/xferlog.
-allow ftpd_t xferlog_t:dir search_dir_perms;
-allow ftpd_t xferlog_t:file manage_file_perms;
+manage_files_pattern(ftpd_t, xferlog_t, xferlog_t)
 logging_log_filetrans(ftpd_t, xferlog_t, file)
 
 kernel_read_kernel_sysctls(ftpd_t)
@@ -160,6 +182,7 @@
 
 fs_search_auto_mountpoints(ftpd_t)
 fs_getattr_all_fs(ftpd_t)
+fs_search_fusefs(ftpd_t)
 
 auth_use_nsswitch(ftpd_t)
 auth_domtrans_chk_passwd(ftpd_t)
@@ -219,10 +242,14 @@
 	# allow access to /home
 	files_list_home(ftpd_t)
 	userdom_read_user_home_content_files(ftpd_t)
-	userdom_manage_user_home_content_dirs(ftpd_t)
-	userdom_manage_user_home_content_files(ftpd_t)
-	userdom_manage_user_home_content_symlinks(ftpd_t)
-	userdom_user_home_dir_filetrans_user_home_content(ftpd_t, { dir file lnk_file })
+	userdom_manage_user_home_content(ftpd_t)
+
+	auth_read_all_dirs_except_shadow(ftpd_t)
+	auth_read_all_files_except_shadow(ftpd_t)
+	auth_read_all_symlinks_except_shadow(ftpd_t)
+', `
+   # Needed for permissive mode, to make sure everything gets labeled correctly
+   userdom_user_home_dir_filetrans_pattern(ftpd_t, { dir file lnk_file })
 ')
 
 tunable_policy(`ftp_home_dir && use_nfs_home_dirs',`
@@ -258,7 +285,30 @@
 ')
 
 optional_policy(`
-	kerberos_read_keytab(ftpd_t)
+	kerberos_keytab_template(ftpd, ftpd_t)
+	kerberos_manage_host_rcache(ftpd_t)
+	selinux_validate_context(ftpd_t)
+')
+
+optional_policy(`
+	tunable_policy(`ftpd_connect_db',`
+		mysql_stream_connect(ftpd_t)
+	')
+')
+
+optional_policy(`
+	tunable_policy(`ftpd_connect_db',`
+		postgresql_stream_connect(ftpd_t)
+	')
+')
+
+tunable_policy(`ftpd_connect_db',`
+	corenet_tcp_connect_mysqld_port(ftpd_t)
+	corenet_tcp_connect_postgresql_port(ftpd_t)
+')
+
+tunable_policy(`ftpd_use_passive_mode',`
+       corenet_tcp_bind_all_unreserved_ports(ftpd_t)
 ')
 
 optional_policy(`
@@ -270,6 +320,14 @@
 ')
 
 optional_policy(`
+	dbus_system_bus_client(ftpd_t)
+	optional_policy(`
+		oddjob_dbus_chat(ftpd_t)
+		oddjob_domtrans_mkhomedir(ftpd_t)
+	')
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(ftpd_t)
 ')
 
@@ -294,3 +352,4 @@
 files_read_etc_files(ftpdctl_t)
 
 userdom_use_user_terminals(ftpdctl_t)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/git.fc serefpolicy-3.7.19/policy/modules/services/git.fc
--- nsaserefpolicy/policy/modules/services/git.fc	2011-03-17 07:21:22.383851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/git.fc	2011-03-17 07:21:05.110851003 +0000
@@ -1,3 +1,12 @@
+HOME_DIR/public_git(/.*)?	gen_context(system_u:object_r:git_session_content_t, s0)
+HOME_DIR/\.gitconfig	--	gen_context(system_u:object_r:git_session_content_t, s0)
+
+/srv/git(/.*)?			gen_context(system_u:object_r:git_system_content_t, s0)
+
+/usr/libexec/git-core/git-daemon	--	gen_context(system_u:object_r:gitd_exec_t, s0)
+
 /var/cache/cgit(/.*)?		gen_context(system_u:object_r:httpd_git_rw_content_t,s0)
-/var/lib/git(/.*)?		gen_context(system_u:object_r:httpd_git_content_t,s0)
+/var/lib/git(/.*)?		gen_context(system_u:object_r:git_system_content_t,s0)
 /var/www/cgi-bin/cgit	--	gen_context(system_u:object_r:httpd_git_script_exec_t,s0)
+/var/www/git(/.*)?		gen_context(system_u:object_r:httpd_git_content_t,s0)
+/var/www/git/gitweb.cgi		gen_context(system_u:object_r:httpd_git_script_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/git.if serefpolicy-3.7.19/policy/modules/services/git.if
--- nsaserefpolicy/policy/modules/services/git.if	2011-03-17 07:21:21.493851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/git.if	2012-01-26 08:30:13.126177579 +0000
@@ -1 +1,544 @@
-## <summary>GIT revision control system</summary>
+## <summary>Fast Version Control System.</summary>
+## <desc>
+##	<p>
+##		A really simple TCP git daemon that normally listens on
+##		port DEFAULT_GIT_PORT aka 9418. It waits for a
+##		connection asking for a service, and will serve that
+##		service if it is enabled.
+##	</p>
+## </desc>
+
+#######################################
+## <summary>
+##	Role access for Git daemon session.
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	User domain for the role.
+##	</summary>
+## </param>
+#
+interface(`git_session_role',`
+	gen_require(`
+		type git_session_t, gitd_exec_t;
+		type git_session_content_t;
+	')
+
+	########################################
+	#
+	# Git daemon session shared declarations.
+	#
+
+	role $1 types git_session_t;
+
+	########################################
+	#
+	# Git daemon session shared policy.
+	#
+
+	domtrans_pattern($2, gitd_exec_t, git_session_t)
+
+	allow $2 git_session_t:process { ptrace signal_perms };
+	ps_process_pattern($2, git_session_t)
+')
+
+########################################
+## <summary>
+##	Create a set of derived types for Git
+##	daemon shared repository content.
+## </summary>
+## <param name="prefix">
+##	<summary>
+##	The prefix to be used for deriving type names.
+##	</summary>
+## </param>
+#
+template(`git_content_template',`
+
+	gen_require(`
+		attribute git_system_content;
+		attribute git_content;
+	')
+
+	########################################
+	#
+	# Git daemon content shared declarations.
+	#
+
+	type git_$1_content_t, git_system_content, git_content;
+	files_type(git_$1_content_t)
+')
+
+########################################
+## <summary>
+##	Create a set of derived types for Git
+##	daemon shared repository roles.
+## </summary>
+## <param name="prefix">
+##	<summary>
+##	The prefix to be used for deriving type names.
+##	</summary>
+## </param>
+#
+template(`git_role_template',`
+
+	gen_require(`
+		class context contains;
+		role system_r;
+	')
+
+	########################################
+	#
+	# Git daemon role shared declarations.
+	#
+
+	attribute $1_usertype;
+
+	type $1_t;
+	userdom_unpriv_usertype($1, $1_t)
+	domain_type($1_t)
+
+	role $1_r types $1_t;
+	allow system_r $1_r;
+
+	########################################
+	#
+	# Git daemon role shared policy.
+	#
+
+	allow $1_t self:context contains;
+	allow $1_t self:fifo_file rw_fifo_file_perms;
+
+	corecmd_exec_bin($1_t)
+	corecmd_bin_entry_type($1_t)
+	corecmd_shell_entry_type($1_t)
+
+	domain_interactive_fd($1_t)
+	domain_user_exemption_target($1_t)
+
+	kernel_read_system_state($1_t)
+
+	files_read_etc_files($1_t)
+	files_dontaudit_search_home($1_t)
+
+	miscfiles_read_localization($1_t)
+
+	git_rwx_generic_system_content($1_t)
+
+	ssh_rw_stream_sockets($1_t)
+
+	tunable_policy(`git_system_use_cifs',`
+		fs_exec_cifs_files($1_t)
+		fs_manage_cifs_dirs($1_t)
+		fs_manage_cifs_files($1_t)
+	')
+
+	tunable_policy(`git_system_use_nfs',`
+		fs_exec_nfs_files($1_t)
+		fs_manage_nfs_dirs($1_t)
+		fs_manage_nfs_files($1_t)
+	')
+
+	optional_policy(`
+		nscd_read_pid($1_t)
+	')
+')
+
+#######################################
+## <summary>
+##	Allow specified domain access to the
+##	specified Git daemon content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="object">
+##	<summary>
+##	Type of the object that access is allowed to.
+##	</summary>
+## </param>
+#
+interface(`git_content_delegation',`
+	gen_require(`
+		type $1, $2;
+	')
+
+	exec_files_pattern($1, $2, $2)
+	manage_dirs_pattern($1, $2, $2)
+	manage_files_pattern($1, $2, $2)
+	files_search_var_lib($1)
+
+	tunable_policy(`git_system_use_cifs',`
+		fs_exec_cifs_files($1)
+		fs_manage_cifs_dirs($1)
+		fs_manage_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_nfs',`
+		fs_exec_nfs_files($1)
+		fs_manage_nfs_dirs($1)
+		fs_manage_nfs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to manage
+##	and execute all Git daemon content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_rwx_all_content',`
+	gen_require(`
+		attribute git_content;
+	')
+
+	exec_files_pattern($1, git_content, git_content)
+	manage_dirs_pattern($1, git_content, git_content)
+	manage_files_pattern($1, git_content, git_content)
+	userdom_search_user_home_dirs($1)
+	files_search_var_lib($1)
+
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_exec_nfs_files($1)
+		fs_manage_nfs_dirs($1)
+		fs_manage_nfs_files($1)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+		fs_exec_cifs_files($1)
+		fs_manage_cifs_dirs($1)
+		fs_manage_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_cifs',`
+		fs_exec_cifs_files($1)
+		fs_manage_cifs_dirs($1)
+		fs_manage_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_nfs',`
+		fs_exec_nfs_files($1)
+		fs_manage_nfs_dirs($1)
+		fs_manage_nfs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to manage
+##	and execute all Git daemon system content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_rwx_all_system_content',`
+	gen_require(`
+		attribute git_system_content;
+	')
+
+	exec_files_pattern($1, git_system_content, git_system_content)
+	manage_dirs_pattern($1, git_system_content, git_system_content)
+	manage_files_pattern($1, git_system_content, git_system_content)
+	files_search_var_lib($1)
+
+	tunable_policy(`git_system_use_cifs',`
+		fs_exec_cifs_files($1)
+		fs_manage_cifs_dirs($1)
+		fs_manage_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_nfs',`
+		fs_exec_nfs_files($1)
+		fs_manage_nfs_dirs($1)
+		fs_manage_nfs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to manage
+##	and execute Git daemon generic system content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_rwx_generic_system_content',`
+	gen_require(`
+		type git_system_content_t;
+	')
+
+	exec_files_pattern($1, git_system_content_t, git_system_content_t)
+	manage_dirs_pattern($1, git_system_content_t, git_system_content_t)
+	manage_files_pattern($1, git_system_content_t, git_system_content_t)
+	files_search_var_lib($1)
+
+	tunable_policy(`git_system_use_cifs',`
+		fs_exec_cifs_files($1)
+		fs_manage_cifs_dirs($1)
+		fs_manage_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_nfs',`
+		fs_exec_nfs_files($1)
+		fs_manage_nfs_dirs($1)
+		fs_manage_nfs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to read
+##	all Git daemon content files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_read_all_content_files',`
+	gen_require(`
+		attribute git_content;
+	')
+
+	list_dirs_pattern($1, git_content, git_content)
+	read_files_pattern($1, git_content, git_content)
+	userdom_search_user_home_dirs($1)
+	files_search_var_lib($1)
+
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_list_nfs($1)
+		fs_read_nfs_files($1)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+		fs_list_cifs($1)
+		fs_read_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_cifs',`
+		fs_list_cifs($1)
+		fs_read_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_nfs',`
+		fs_list_nfs($1)
+		fs_read_nfs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to read
+##	Git daemon session content files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_read_session_content_files',`
+	gen_require(`
+		type git_session_content_t;
+	')
+
+	list_dirs_pattern($1, git_session_content_t, git_session_content_t)
+	read_files_pattern($1, git_session_content_t, git_session_content_t)
+	userdom_search_user_home_dirs($1)
+
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_list_nfs($1)
+		fs_read_nfs_files($1)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+		fs_list_cifs($1)
+		fs_read_cifs_files($1)
+	')
+')
+
+######################################
+## <summary>
+##  Dontaudit the specified domain to read
+##  Git daemon session content files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`git_dontaudit_read_session_content_files',`
+    gen_require(`
+        type git_session_content_t;
+    ')
+
+    dontaudit $1 git_session_content_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to read
+##	all Git daemon system content files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_read_all_system_content_files',`
+	gen_require(`
+		attribute git_system_content;
+	')
+
+	list_dirs_pattern($1, git_system_content, git_system_content)
+	read_files_pattern($1, git_system_content, git_system_content)
+	files_search_var_lib($1)
+
+	tunable_policy(`git_system_use_cifs',`
+		fs_list_cifs($1)
+		fs_read_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_nfs',`
+		fs_list_nfs($1)
+		fs_read_nfs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to read
+##	Git daemon generic system content files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_read_generic_system_content_files',`
+	gen_require(`
+		type git_system_content_t;
+	')
+
+	list_dirs_pattern($1, git_system_content_t, git_system_content_t)
+	read_files_pattern($1, git_system_content_t, git_system_content_t)
+	files_search_var_lib($1)
+
+	tunable_policy(`git_system_use_cifs',`
+		fs_list_cifs($1)
+		fs_read_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_nfs',`
+		fs_list_nfs($1)
+		fs_read_nfs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to relabel
+##	all Git daemon content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_relabel_all_content',`
+	gen_require(`
+		attribute git_content;
+	')
+
+	relabel_dirs_pattern($1, git_content, git_content)
+	relabel_files_pattern($1, git_content, git_content)
+	userdom_search_user_home_dirs($1)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to relabel
+##	all Git daemon system content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_relabel_all_system_content',`
+	gen_require(`
+		attribute git_system_content;
+	')
+
+	relabel_dirs_pattern($1, git_system_content, git_system_content)
+	relabel_files_pattern($1, git_system_content, git_system_content)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to relabel
+##	Git daemon generic system content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_relabel_generic_system_content',`
+	gen_require(`
+		type git_system_content_t;
+	')
+
+	relabel_dirs_pattern($1, git_system_content_t, git_system_content_t)
+	relabel_files_pattern($1, git_system_content_t, git_system_content_t)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to relabel
+##	Git daemon session content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_relabel_session_content',`
+	gen_require(`
+		type git_session_content_t;
+	')
+
+	relabel_dirs_pattern($1, git_session_content_t, git_session_content_t)
+	relabel_files_pattern($1, git_session_content_t, git_session_content_t)
+	userdom_search_user_home_dirs($1)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/git.te serefpolicy-3.7.19/policy/modules/services/git.te
--- nsaserefpolicy/policy/modules/services/git.te	2011-03-17 07:21:22.111851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/git.te	2011-09-16 14:36:35.487160002 +0000
@@ -1,9 +1,205 @@
 
-policy_module(git, 1.0)
+policy_module(git, 1.0.3)
+
+## <desc>
+## <p>
+## Allow Git daemon system to search home directories.
+## </p>
+## </desc>
+gen_tunable(git_system_enable_homedirs, false)
+
+## <desc>
+## <p>
+## Allow Git daemon system to access cifs file systems.
+## </p>
+## </desc>
+gen_tunable(git_system_use_cifs, false)
+
+## <desc>
+## <p>
+## Allow Git daemon system to access nfs file systems.
+## </p>
+## </desc>
+gen_tunable(git_system_use_nfs, false)
+
+## <desc>
+## <p>
+## Allow cgit to access gitosis files.
+## </p>
+## </desc>
+gen_tunable(git_cgit_read_gitosis_content, false)
+
+########################################
+#
+# Git daemon global private declarations.
+#
+
+attribute git_domains;
+attribute git_system_content;
+attribute git_content;
+
+type gitd_exec_t;
+
+########################################
+#
+# Git daemon system private declarations.
+#
+
+type git_system_t, git_domains;
+inetd_service_domain(git_system_t, gitd_exec_t)
+role system_r types git_system_t;
+
+type git_system_content_t, git_system_content, git_content;
+files_type(git_system_content_t)
+typealias git_system_content_t alias git_data_t;
+
+########################################
+#
+# Git daemon session private declarations.
+#
+
+## <desc>
+## <p>
+## Allow Git daemon session to bind
+## tcp sockets to all unreserved ports.
+## </p>
+## </desc>
+gen_tunable(git_session_bind_all_unreserved_ports, false)
+
+type git_session_t, git_domains;
+application_domain(git_session_t, gitd_exec_t)
+ubac_constrained(git_session_t)
+
+type git_session_content_t, git_content;
+userdom_user_home_content(git_session_content_t)
+
+########################################
+#
+# Git daemon global private policy.
+#
+
+allow git_domains self:fifo_file rw_fifo_file_perms;
+allow git_domains self:netlink_route_socket create_netlink_socket_perms;
+allow git_domains self:tcp_socket create_socket_perms;
+allow git_domains self:udp_socket create_socket_perms;
+allow git_domains self:unix_dgram_socket create_socket_perms;
+
+corenet_all_recvfrom_netlabel(git_domains)
+corenet_all_recvfrom_unlabeled(git_domains)
+corenet_tcp_bind_generic_node(git_domains)
+corenet_tcp_sendrecv_generic_if(git_domains)
+corenet_tcp_sendrecv_generic_node(git_domains)
+corenet_tcp_sendrecv_generic_port(git_domains)
+corenet_tcp_bind_git_port(git_domains)
+corenet_sendrecv_git_server_packets(git_domains)
+
+corecmd_exec_bin(git_domains)
+
+files_read_etc_files(git_domains)
+files_read_usr_files(git_domains)
+
+fs_search_auto_mountpoints(git_domains)
+
+kernel_read_system_state(git_domains)
+
+auth_use_nsswitch(git_domains)
+
+logging_send_syslog_msg(git_domains)
+
+miscfiles_read_localization(git_domains)
+
+sysnet_read_config(git_domains)
+
+optional_policy(`
+	automount_dontaudit_getattr_tmp_dirs(git_domains)
+')
+
+optional_policy(`
+	nis_use_ypbind(git_domains)
+')
 
 ########################################
 #
-# Declarations
+# Git daemon system repository private policy.
 #
 
-apache_content_template(git)
+list_dirs_pattern(git_system_t, git_content, git_content)
+read_files_pattern(git_system_t, git_content, git_content)
+files_search_var_lib(git_system_t)
+
+tunable_policy(`git_system_enable_homedirs', `
+	userdom_search_user_home_dirs(git_system_t)
+')
+
+tunable_policy(`git_system_enable_homedirs && use_nfs_home_dirs', `
+	fs_list_nfs(git_system_t)
+	fs_read_nfs_files(git_system_t)
+')
+
+tunable_policy(`git_system_enable_homedirs && use_samba_home_dirs', `
+	fs_list_cifs(git_system_t)
+	fs_read_cifs_files(git_system_t)
+')
+
+tunable_policy(`git_system_use_cifs', `
+	fs_list_cifs(git_system_t)
+	fs_read_cifs_files(git_system_t)
+')
+
+tunable_policy(`git_system_use_nfs', `
+	fs_list_nfs(git_system_t)
+	fs_read_nfs_files(git_system_t)
+')
+
+########################################
+#
+# Git daemon session repository private policy.
+#
+
+allow git_session_t self:tcp_socket { accept listen };
+
+list_dirs_pattern(git_session_t, git_session_content_t, git_session_content_t)
+read_files_pattern(git_session_t, git_session_content_t, git_session_content_t)
+userdom_search_user_home_dirs(git_session_t)
+
+userdom_use_user_terminals(git_session_t)
+
+tunable_policy(`git_session_bind_all_unreserved_ports', `
+	corenet_tcp_bind_all_unreserved_ports(git_session_t)
+	corenet_sendrecv_generic_server_packets(git_session_t)
+')
+
+tunable_policy(`use_nfs_home_dirs', `
+	fs_list_nfs(git_session_t)
+	fs_read_nfs_files(git_session_t)
+')
+
+tunable_policy(`use_samba_home_dirs', `
+	fs_list_cifs(git_session_t)
+	fs_read_cifs_files(git_session_t)
+')
+
+########################################
+#
+# cgi git Declarations
+#
+
+optional_policy(`
+	apache_content_template(git)
+	git_read_all_content_files(httpd_git_script_t)
+	files_dontaudit_getattr_tmp_dirs(httpd_git_script_t)
+	auth_use_nsswitch(httpd_git_script_t)
+
+	tunable_policy(`git_cgit_read_gitosis_content', `
+		gitosis_read_lib_files(httpd_git_script_t)
+	')
+')
+
+########################################
+#
+# Git-shell private policy.
+#
+
+git_role_template(git_shell)
+gen_user(git_shell_u, user, git_shell_r, s0, s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/glance.fc serefpolicy-3.7.19/policy/modules/services/glance.fc
--- nsaserefpolicy/policy/modules/services/glance.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/glance.fc	2012-05-14 15:18:17.610156433 +0000
@@ -0,0 +1,13 @@
+
+/etc/rc\.d/init\.d/openstack-glance-api --	gen_context(system_u:object_r:glance_api_initrc_exec_t,s0)
+
+/etc/rc\.d/init\.d/openstack-glance-registry --	gen_context(system_u:object_r:glance_registry_initrc_exec_t,s0)
+
+/usr/bin/glance-api		--	gen_context(system_u:object_r:glance_api_exec_t,s0)
+/usr/bin/glance-registry	--	gen_context(system_u:object_r:glance_registry_exec_t,s0)
+
+/var/lib/glance(/.*)?		gen_context(system_u:object_r:glance_var_lib_t,s0)
+
+/var/log/glance(/.*)?		gen_context(system_u:object_r:glance_log_t,s0)
+
+/var/run/glance(/.*)?		gen_context(system_u:object_r:glance_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/glance.if serefpolicy-3.7.19/policy/modules/services/glance.if
--- nsaserefpolicy/policy/modules/services/glance.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/glance.if	2012-05-14 15:18:17.610156433 +0000
@@ -0,0 +1,268 @@
+
+## <summary>policy for glance</summary>
+
+########################################
+## <summary>
+##	Transition to glance registry.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`glance_domtrans_registry',`
+	gen_require(`
+		type glance_registry_t, glance_registry_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, glance_registry_exec_t, glance_registry_t)
+')
+
+########################################
+## <summary>
+##	Transition to glance api.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`glance_domtrans_api',`
+	gen_require(`
+		type glance_api_t, glance_api_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, glance_api_exec_t, glance_api_t)
+')
+
+########################################
+## <summary>
+##	Read glance's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`glance_read_log',`
+	gen_require(`
+		type glance_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, glance_log_t, glance_log_t)
+')
+
+########################################
+## <summary>
+##	Append to glance log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glance_append_log',`
+	gen_require(`
+		type glance_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, glance_log_t, glance_log_t)
+')
+
+########################################
+## <summary>
+##	Manage glance log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glance_manage_log',`
+	gen_require(`
+		type glance_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, glance_log_t, glance_log_t)
+	manage_files_pattern($1, glance_log_t, glance_log_t)
+	manage_lnk_files_pattern($1, glance_log_t, glance_log_t)
+')
+
+########################################
+## <summary>
+##	Search glance lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glance_search_lib',`
+	gen_require(`
+		type glance_var_lib_t;
+	')
+
+	allow $1 glance_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read glance lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glance_read_lib_files',`
+	gen_require(`
+		type glance_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, glance_var_lib_t, glance_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage glance lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glance_manage_lib_files',`
+	gen_require(`
+		type glance_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, glance_var_lib_t, glance_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage glance lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glance_manage_lib_dirs',`
+	gen_require(`
+		type glance_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, glance_var_lib_t, glance_var_lib_t)
+')
+
+
+########################################
+## <summary>
+##	Read glance PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glance_read_pid_files',`
+	gen_require(`
+		type glance_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, glance_var_run_t, glance_var_run_t)
+')
+
+########################################
+## <summary>
+##	Manage glance PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`glance_manage_pid_files',`
+	gen_require(`
+		type glance_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_files_pattern($1, glance_var_run_t, glance_var_run_t)
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an glance environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`glance_admin',`
+	gen_require(`
+		type glance_registry_t, glance_api_t, glance_log_t;
+		type glance_var_lib_t, glance_var_run_t;
+		type glance_registry_initrc_exec_t, glance_api_initrc_exec_t;
+	')
+
+	allow $1 glance_registry_t:process signal_perms;
+	ps_process_pattern($1, glance_registry_t)
+	tunable_policy(`deny_ptrace',`',`
+		allow $1 glance_registry_t:process ptrace;
+		allow $1 glance_api_t:process ptrace;
+	')
+
+	allow $1 glance_api_t:process signal_perms;
+	ps_process_pattern($1, glance_api_t)
+
+	init_labeled_script_domtrans($1, glance_registry_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 glance_registry_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	init_labeled_script_domtrans($1, glance_api_initrc_exec_t)
+	role_transition $2 glance_api_initrc_exec_t system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, glance_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, glance_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, glance_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/glance.te serefpolicy-3.7.19/policy/modules/services/glance.te
--- nsaserefpolicy/policy/modules/services/glance.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/glance.te	2012-06-28 13:13:19.314715678 +0000
@@ -0,0 +1,119 @@
+policy_module(glance, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute glance_domain;
+
+type glance_registry_t, glance_domain;
+type glance_registry_exec_t;
+init_daemon_domain(glance_registry_t, glance_registry_exec_t)
+
+type glance_registry_initrc_exec_t;
+init_script_file(glance_registry_initrc_exec_t)
+
+type glance_registry_tmp_t;
+files_tmp_file(glance_registry_tmp_t)
+
+type glance_api_t, glance_domain;
+type glance_api_exec_t;
+init_daemon_domain(glance_api_t, glance_api_exec_t)
+
+type glance_api_initrc_exec_t;
+init_script_file(glance_api_initrc_exec_t)
+
+type glance_log_t;
+logging_log_file(glance_log_t)
+
+type glance_var_lib_t;
+files_type(glance_var_lib_t)
+
+type glance_tmp_t;
+files_tmp_file(glance_tmp_t)
+
+type glance_var_run_t;
+files_pid_file(glance_var_run_t)
+
+#######################################
+#
+# glance general domain local policy
+#
+
+allow glance_domain self:fifo_file rw_fifo_file_perms;
+allow glance_domain self:unix_stream_socket create_stream_socket_perms;
+allow glance_domain self:tcp_socket create_stream_socket_perms;
+
+manage_dirs_pattern(glance_domain, glance_log_t, glance_log_t)
+manage_files_pattern(glance_domain, glance_log_t, glance_log_t)
+
+manage_dirs_pattern(glance_domain, glance_var_lib_t, glance_var_lib_t)
+manage_files_pattern(glance_domain, glance_var_lib_t, glance_var_lib_t)
+
+manage_dirs_pattern(glance_domain, glance_var_run_t, glance_var_run_t)
+manage_files_pattern(glance_domain, glance_var_run_t, glance_var_run_t)
+
+kernel_read_system_state(glance_domain)
+
+corecmd_exec_bin(glance_domain)
+
+dev_read_urand(glance_domain)
+
+files_read_etc_files(glance_domain)
+files_read_usr_files(glance_domain)
+
+miscfiles_read_localization(glance_domain)
+
+optional_policy(`
+	sysnet_dns_name_resolve(glance_domain)
+')
+
+########################################
+#
+# glance-registry local policy
+#
+
+manage_dirs_pattern(glance_registry_t, glance_registry_tmp_t, glance_registry_tmp_t)
+manage_files_pattern(glance_registry_t, glance_registry_tmp_t, glance_registry_tmp_t)
+files_tmp_filetrans(glance_registry_t, glance_registry_tmp_t, { file dir })
+
+corenet_tcp_bind_generic_node(glance_registry_t)
+corenet_tcp_bind_glance_registry_port(glance_registry_t)
+
+logging_send_syslog_msg(glance_registry_t)
+
+
+optional_policy(`
+	mysql_stream_connect(glance_registry_t)
+')
+
+optional_policy(`
+	unconfined_domain(glance_registry_t)
+')
+
+########################################
+#
+# glance-api local policy
+#
+
+manage_dirs_pattern(glance_api_t, glance_tmp_t, glance_tmp_t)
+manage_files_pattern(glance_api_t, glance_tmp_t, glance_tmp_t)
+files_tmp_filetrans(glance_api_t, glance_tmp_t, { dir file })
+can_exec(glance_api_t, glance_tmp_t)
+
+corecmd_exec_shell(glance_api_t)
+
+corenet_tcp_bind_generic_node(glance_api_t)
+corenet_tcp_bind_glance_port(glance_api_t)
+corenet_tcp_connect_glance_registry_port(glance_api_t)
+
+dev_read_urand(glance_api_t)
+
+fs_getattr_xattr_fs(glance_api_t)
+
+libs_exec_ldconfig(glance_api_t)
+
+optional_policy(`
+	unconfined_domain(glance_api_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/gnomeclock.if serefpolicy-3.7.19/policy/modules/services/gnomeclock.if
--- nsaserefpolicy/policy/modules/services/gnomeclock.if	2011-03-17 07:21:21.421851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/gnomeclock.if	2011-03-17 07:21:03.888851001 +0000
@@ -63,3 +63,24 @@
 	allow $1 gnomeclock_t:dbus send_msg;
 	allow gnomeclock_t $1:dbus send_msg;
 ')
+
+########################################
+## <summary>
+##	Do not audit send and receive messages from
+##	gnomeclock over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`gnomeclock_dontaudit_dbus_chat',`
+	gen_require(`
+		type gnomeclock_t;
+		class dbus send_msg;
+	')
+
+	dontaudit $1 gnomeclock_t:dbus send_msg;
+	dontaudit gnomeclock_t $1:dbus send_msg;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/gpm.te serefpolicy-3.7.19/policy/modules/services/gpm.te
--- nsaserefpolicy/policy/modules/services/gpm.te	2011-03-17 07:21:21.990851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/gpm.te	2011-03-17 07:21:04.692851002 +0000
@@ -70,6 +70,7 @@
 
 userdom_dontaudit_use_unpriv_user_fds(gpm_t)
 userdom_dontaudit_search_user_home_dirs(gpm_t)
+userdom_use_user_terminals(gpm_t)
 
 optional_policy(`
 	seutil_sigchld_newrole(gpm_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/gpsd.te serefpolicy-3.7.19/policy/modules/services/gpsd.te
--- nsaserefpolicy/policy/modules/services/gpsd.te	2011-03-17 07:21:22.108851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/gpsd.te	2011-03-17 07:21:04.882851002 +0000
@@ -57,9 +57,14 @@
 miscfiles_read_localization(gpsd_t)
 
 optional_policy(`
+	chronyd_rw_shm(gpsd_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(gpsd_t)
 ')
 
 optional_policy(`
 	ntp_rw_shm(gpsd_t)
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/hal.if serefpolicy-3.7.19/policy/modules/services/hal.if
--- nsaserefpolicy/policy/modules/services/hal.if	2011-03-17 07:21:20.931851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/hal.if	2011-03-17 07:21:03.348851001 +0000
@@ -51,6 +51,7 @@
 		type hald_t;
 	')
 
+	kernel_search_proc($1)
 	ps_process_pattern($1, hald_t)
 ')
 
@@ -367,7 +368,7 @@
 ## </param>
 #
 interface(`hal_read_pid_files',`
-	gen_require(`
+	gen_require(` 
 		type hald_var_run_t;
 	')
 
@@ -377,6 +378,26 @@
 
 ########################################
 ## <summary>
+##	Do not audit attempts to read 
+##	hald PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`hal_dontaudit_read_pid_files',`
+	gen_require(` 
+		type hald_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 hald_var_run_t:file read_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Read/Write hald PID files.
 ## </summary>
 ## <param name="domain">
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/hal.te serefpolicy-3.7.19/policy/modules/services/hal.te
--- nsaserefpolicy/policy/modules/services/hal.te	2011-03-17 07:21:21.986851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/hal.te	2011-10-24 07:48:31.794904003 +0000
@@ -55,6 +55,9 @@
 type hald_var_lib_t;
 files_type(hald_var_lib_t)
 
+typealias hald_log_t alias pmtools_log_t;
+typealias hald_var_run_t alias pmtools_var_run_t;
+
 ########################################
 #
 # Local policy
@@ -63,7 +66,7 @@
 # execute openvt which needs setuid
 allow hald_t self:capability { chown setuid setgid kill net_admin sys_admin sys_nice dac_override dac_read_search mknod sys_rawio sys_tty_config };
 dontaudit hald_t self:capability {sys_ptrace sys_tty_config };
-allow hald_t self:process { getattr signal_perms };
+allow hald_t self:process { getsched getattr signal_perms };
 allow hald_t self:fifo_file rw_fifo_file_perms;
 allow hald_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow hald_t self:unix_dgram_socket create_socket_perms;
@@ -100,6 +103,7 @@
 kernel_rw_irq_sysctls(hald_t)
 kernel_rw_vm_sysctls(hald_t)
 kernel_write_proc_files(hald_t)
+kernel_rw_net_sysctls(hald_t)
 kernel_setsched(hald_t)
 kernel_request_load_module(hald_t)
 
@@ -117,6 +121,7 @@
 corenet_udp_sendrecv_all_ports(hald_t)
 
 dev_rw_usbfs(hald_t)
+dev_read_rand(hald_t)
 dev_read_urand(hald_t)
 dev_read_input(hald_t)
 dev_read_mouse(hald_t)
@@ -124,6 +129,7 @@
 dev_read_lvm_control(hald_t)
 dev_getattr_all_chr_files(hald_t)
 dev_manage_generic_chr_files(hald_t)
+dev_manage_generic_blk_files(hald_t)
 dev_rw_generic_usb_dev(hald_t)
 dev_setattr_generic_usb_dev(hald_t)
 dev_setattr_usbfs_files(hald_t)
@@ -152,6 +158,7 @@
 files_read_kernel_img(hald_t)
 files_rw_lock_dirs(hald_t)
 files_read_generic_pids(hald_t)
+files_read_kernel_modules(hald_t)
 
 fs_getattr_all_fs(hald_t)
 fs_search_all(hald_t)
@@ -161,6 +168,7 @@
 fs_unmount_dos_fs(hald_t)
 fs_manage_dos_files(hald_t)
 fs_manage_fusefs_dirs(hald_t)
+fs_rw_removable_blk_files(hald_t)
 
 files_getattr_all_mountpoints(hald_t)
 
@@ -180,7 +188,7 @@
 
 # hal_probe_serial causes these
 term_setattr_unallocated_ttys(hald_t)
-term_dontaudit_use_unallocated_ttys(hald_t)
+term_use_unallocated_ttys(hald_t)
 
 auth_use_nsswitch(hald_t)
 
@@ -209,10 +217,13 @@
 seutil_read_default_contexts(hald_t)
 seutil_read_file_contexts(hald_t)
 
-sysnet_read_config(hald_t)
+sysnet_delete_dhcpc_pid(hald_t)
 sysnet_domtrans_dhcpc(hald_t)
+sysnet_signal_dhcpc(hald_t)
 sysnet_domtrans_ifconfig(hald_t)
+sysnet_read_config(hald_t)
 sysnet_read_dhcp_config(hald_t)
+sysnet_read_dhcpc_pid(hald_t)
 
 userdom_dontaudit_use_unpriv_user_fds(hald_t)
 userdom_dontaudit_search_user_home_dirs(hald_t)
@@ -266,6 +277,10 @@
 ')
 
 optional_policy(`
+	gnome_read_config(hald_t)
+')
+
+optional_policy(`
 	gpm_dontaudit_getattr_gpmctl(hald_t)
 ')
 
@@ -282,6 +297,10 @@
 ')
 
 optional_policy(`
+	netutils_domtrans(hald_t)
+')
+
+optional_policy(`
 	ntp_domtrans(hald_t)
 ')
 
@@ -295,6 +314,7 @@
 ')
 
 optional_policy(`
+	ppp_domtrans(hald_t)
 	ppp_read_rw_config(hald_t)
 ')
 
@@ -315,11 +335,19 @@
 ')
 
 optional_policy(`
+	shutdown_domtrans(hald_t)
+')    
+
+optional_policy(`
 	udev_domtrans(hald_t)
 	udev_read_db(hald_t)
 ')
 
 optional_policy(`
+	usbmuxd_stream_connect(hald_t)
+')
+
+optional_policy(`
 	updfstab_domtrans(hald_t)
 ')
 
@@ -331,6 +359,10 @@
 	virt_manage_images(hald_t)
 ')
 
+optional_policy(`
+	xserver_read_pid(hald_t)
+')
+
 ########################################
 #
 # Hal acl local policy
@@ -351,6 +383,7 @@
 manage_dirs_pattern(hald_acl_t, hald_var_run_t, hald_var_run_t)
 manage_files_pattern(hald_acl_t, hald_var_run_t, hald_var_run_t)
 files_pid_filetrans(hald_acl_t, hald_var_run_t, { dir file })
+allow hald_t hald_var_run_t:dir mounton;
 
 corecmd_exec_bin(hald_acl_t)
 
@@ -463,6 +496,10 @@
 
 miscfiles_read_localization(hald_keymap_t)
 
+# This is caused by a bug in hald and PolicyKit.  
+# Should be removed when this is fixed
+cron_read_system_job_lib_files(hald_t)
+
 ########################################
 #
 # Local hald dccm policy
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/hddtemp.te serefpolicy-3.7.19/policy/modules/services/hddtemp.te
--- nsaserefpolicy/policy/modules/services/hddtemp.te	2011-03-17 07:21:21.202851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/hddtemp.te	2011-08-31 14:16:40.807160002 +0000
@@ -29,10 +29,15 @@
 
 # read hddtemp db file
 files_read_usr_files(hddtemp_t)
+files_read_etc_files(hddtemp_t)
 
 storage_raw_read_fixed_disk(hddtemp_t)
+storage_raw_read_removable_device(hddtemp_t)
 
 logging_send_syslog_msg(hddtemp_t)
 
 miscfiles_read_localization(hddtemp_t)
 
+optional_policy(`
+    sysnet_dns_name_resolve(hddtemp_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/icecast.if serefpolicy-3.7.19/policy/modules/services/icecast.if
--- nsaserefpolicy/policy/modules/services/icecast.if	2011-03-17 07:21:20.869851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/icecast.if	2011-03-17 07:21:03.253851003 +0000
@@ -173,6 +173,7 @@
 		type icecast_t, icecast_initrc_exec_t;
 	')
 
+	allow $1 icecast_t:process { ptrace signal_perms };
 	ps_process_pattern($1, icecast_t)
 
 	# Allow icecast_t to restart the apache service
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/icecast.te serefpolicy-3.7.19/policy/modules/services/icecast.te
--- nsaserefpolicy/policy/modules/services/icecast.te	2011-03-17 07:21:22.333851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/icecast.te	2011-03-17 07:21:05.070851001 +0000
@@ -6,6 +6,14 @@
 # Declarations
 #
 
+## <desc>
+## <p>
+## Allow icecast to connect to all ports, not just
+## sound ports.
+## </p>
+## </desc>
+gen_tunable(icecast_connect_any, false)
+
 type icecast_t;
 type icecast_exec_t;
 init_daemon_domain(icecast_t, icecast_exec_t)
@@ -38,7 +46,16 @@
 manage_files_pattern(icecast_t, icecast_var_run_t, icecast_var_run_t)
 files_pid_filetrans(icecast_t, icecast_var_run_t, { file dir })
 
+kernel_read_system_state(icecast_t)
+
 corenet_tcp_bind_soundd_port(icecast_t)
+corenet_tcp_connect_soundd_port(icecast_t)
+
+tunable_policy(`icecast_connect_any',`
+        corenet_tcp_connect_all_ports(icecast_t)
+        corenet_tcp_bind_all_ports(icecast_t)
+        corenet_sendrecv_all_packets(icecast_t)
+')
 
 # Init script handling
 domain_use_interactive_fds(icecast_t)
@@ -52,5 +69,9 @@
 sysnet_dns_name_resolve(icecast_t)
 
 optional_policy(`
+	apache_read_sys_content(icecast_t)
+')
+
+optional_policy(`
 	rtkit_scheduled(icecast_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/inetd.if serefpolicy-3.7.19/policy/modules/services/inetd.if
--- nsaserefpolicy/policy/modules/services/inetd.if	2011-03-17 07:21:21.493851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/inetd.if	2011-08-23 14:54:09.163160002 +0000
@@ -37,6 +37,10 @@
 
 	domtrans_pattern(inetd_t, $2, $1)
 	allow inetd_t $1:process { siginh sigkill };
+
+	optional_policy(`
+		abrt_stream_connect($1)
+	')
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/inetd.te serefpolicy-3.7.19/policy/modules/services/inetd.te
--- nsaserefpolicy/policy/modules/services/inetd.te	2011-03-17 07:21:21.919851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/inetd.te	2011-06-06 11:37:58.956208001 +0000
@@ -151,6 +151,8 @@
 mls_socket_read_to_clearance(inetd_t)
 mls_socket_write_to_clearance(inetd_t)
 mls_process_set_level(inetd_t)
+#706086
+mls_net_outbound_all_levels(inetd_t)
 
 sysnet_read_config(inetd_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/inn.if serefpolicy-3.7.19/policy/modules/services/inn.if
--- nsaserefpolicy/policy/modules/services/inn.if	2011-03-17 07:21:21.408851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/inn.if	2011-09-08 14:23:13.501160002 +0000
@@ -13,7 +13,7 @@
 #
 interface(`inn_exec',`
 	gen_require(`
-		type innd_t;
+		type innd_exec_t;
 	')
 
 	can_exec($1, innd_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/inn.te serefpolicy-3.7.19/policy/modules/services/inn.te
--- nsaserefpolicy/policy/modules/services/inn.te	2011-03-17 07:21:21.904851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/inn.te	2011-03-17 07:21:04.524851002 +0000
@@ -106,6 +106,7 @@
 
 userdom_dontaudit_use_unpriv_user_fds(innd_t)
 userdom_dontaudit_search_user_home_dirs(innd_t)
+userdom_dgram_send(innd_t)
 
 mta_send_mail(innd_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/jabber.fc serefpolicy-3.7.19/policy/modules/services/jabber.fc
--- nsaserefpolicy/policy/modules/services/jabber.fc	2011-03-17 07:21:20.847851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/jabber.fc	2011-03-17 07:21:03.235851003 +0000
@@ -2,5 +2,14 @@
 
 /usr/sbin/jabberd	--	gen_context(system_u:object_r:jabberd_exec_t,s0)
 
+# for new version of jabberd
+/usr/bin/router         --      gen_context(system_u:object_r:jabberd_router_exec_t,s0)
+/usr/bin/c2s            --      gen_context(system_u:object_r:jabberd_router_exec_t,s0)
+/usr/bin/s2s            --      gen_context(system_u:object_r:jabberd_exec_t,s0)
+/usr/bin/sm             --      gen_context(system_u:object_r:jabberd_exec_t,s0)
+
+/var/lib/jabberd(/.*)?           gen_context(system_u:object_r:jabberd_var_lib_t,s0)
+
+
 /var/lib/jabber(/.*)?		gen_context(system_u:object_r:jabberd_var_lib_t,s0)
 /var/log/jabber(/.*)?		gen_context(system_u:object_r:jabberd_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/jabber.if serefpolicy-3.7.19/policy/modules/services/jabber.if
--- nsaserefpolicy/policy/modules/services/jabber.if	2011-03-17 07:21:21.761851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/jabber.if	2011-03-17 07:21:04.302851001 +0000
@@ -1,17 +1,96 @@
 ## <summary>Jabber instant messaging server</summary>
 
-########################################
+#######################################
 ## <summary>
-##	Connect to jabber over a TCP socket  (Deprecated)
+##      Execute a domain transition to run jabberd services
 ## </summary>
 ## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
+## <summary>
+##      Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`jabber_domtrans_jabberd',`
+        gen_require(`
+                type jabberd_t, jabberd_exec_t;
+        ')
+
+        domtrans_pattern($1, jabberd_exec_t, jabberd_t)
+')
+
+######################################
+## <summary>
+##      Execute a domain transition to run jabberd router service
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`jabber_domtrans_router',`
+        gen_require(`
+                type jabberd_router_t, jabberd_router_exec_t;
+        ')
+
+        domtrans_pattern($1, jabberd_router_exec_t, jabberd_router_t)
+')
+
+#######################################
+## <summary>
+##      Read jabberd lib files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
 ## </param>
 #
-interface(`jabber_tcp_connect',`
-	refpolicywarn(`$0($*) has been deprecated.')
+interface(`jabberd_read_lib_files',`
+        gen_require(`
+                type jabberd_var_lib_t;
+        ')
+
+        files_search_var_lib($1)
+        read_files_pattern($1, jabberd_var_lib_t, jabberd_var_lib_t)
+')
+
+#######################################
+## <summary>
+##      Dontaudit inherited read jabberd lib files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`jabberd_dontaudit_read_lib_files',`
+        gen_require(`
+                type jabberd_var_lib_t;
+        ')
+
+        dontaudit $1 jabberd_var_lib_t:file read_inherited_file_perms;
+')
+
+#######################################
+## <summary>
+##      Create, read, write, and delete
+##      jabberd lib files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`jabberd_manage_lib_files',`
+        gen_require(`
+                type jabberd_var_lib_t;
+        ')
+
+        files_search_var_lib($1)
+        manage_files_pattern($1, jabberd_var_lib_t, jabberd_var_lib_t)
 ')
 
 ########################################
@@ -35,11 +114,15 @@
 	gen_require(`
 		type jabberd_t, jabberd_log_t, jabberd_var_lib_t;
 		type jabberd_var_run_t, jabberd_initrc_exec_t;
+		type jabberd_router_t;
 	')
 
 	allow $1 jabberd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, jabberd_t)
 
+	allow $1 jabberd_router_t:process { ptrace signal_perms };
+	ps_process_pattern($1, jabberd_router_t)
+
 	init_labeled_script_domtrans($1, jabberd_initrc_exec_t)
 	domain_system_change_exemption($1)
 	role_transition $2 jabberd_initrc_exec_t system_r;
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/jabber.te serefpolicy-3.7.19/policy/modules/services/jabber.te
--- nsaserefpolicy/policy/modules/services/jabber.te	2011-03-17 07:21:21.835851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/jabber.te	2011-08-30 14:18:59.352160002 +0000
@@ -6,13 +6,19 @@
 # Declarations
 #
 
-type jabberd_t;
+attribute jabberd_domain;
+
+type jabberd_t, jabberd_domain;
 type jabberd_exec_t;
 init_daemon_domain(jabberd_t, jabberd_exec_t)
 
 type jabberd_initrc_exec_t;
 init_script_file(jabberd_initrc_exec_t)
 
+type jabberd_router_t, jabberd_domain;
+type jabberd_router_exec_t;
+init_daemon_domain(jabberd_router_t, jabberd_router_exec_t)
+
 type jabberd_log_t;
 logging_log_file(jabberd_log_t)
 
@@ -22,74 +28,93 @@
 type jabberd_var_run_t;
 files_pid_file(jabberd_var_run_t)
 
-########################################
+######################################
 #
-# Local policy
+# Local policy for jabberd router and c2s components
 #
 
-allow jabberd_t self:capability dac_override;
-dontaudit jabberd_t self:capability sys_tty_config;
-allow jabberd_t self:process signal_perms;
-allow jabberd_t self:fifo_file read_fifo_file_perms;
-allow jabberd_t self:tcp_socket create_stream_socket_perms;
-allow jabberd_t self:udp_socket create_socket_perms;
-
-manage_files_pattern(jabberd_t, jabberd_var_lib_t, jabberd_var_lib_t)
-files_var_lib_filetrans(jabberd_t, jabberd_var_lib_t, file)
-
-manage_files_pattern(jabberd_t, jabberd_log_t, jabberd_log_t)
-logging_log_filetrans(jabberd_t, jabberd_log_t, { file dir })
-
-manage_files_pattern(jabberd_t, jabberd_var_run_t, jabberd_var_run_t)
-files_pid_filetrans(jabberd_t, jabberd_var_run_t, file)
-
-kernel_read_kernel_sysctls(jabberd_t)
-kernel_list_proc(jabberd_t)
-kernel_read_proc_symlinks(jabberd_t)
-
-corenet_all_recvfrom_unlabeled(jabberd_t)
-corenet_all_recvfrom_netlabel(jabberd_t)
-corenet_tcp_sendrecv_generic_if(jabberd_t)
-corenet_udp_sendrecv_generic_if(jabberd_t)
-corenet_tcp_sendrecv_generic_node(jabberd_t)
-corenet_udp_sendrecv_generic_node(jabberd_t)
-corenet_tcp_sendrecv_all_ports(jabberd_t)
-corenet_udp_sendrecv_all_ports(jabberd_t)
-corenet_tcp_bind_generic_node(jabberd_t)
-corenet_tcp_bind_jabber_client_port(jabberd_t)
-corenet_tcp_bind_jabber_interserver_port(jabberd_t)
-corenet_sendrecv_jabber_client_server_packets(jabberd_t)
-corenet_sendrecv_jabber_interserver_server_packets(jabberd_t)
+allow jabberd_router_t self:netlink_route_socket r_netlink_socket_perms;
 
-dev_read_sysfs(jabberd_t)
-# For SSL
-dev_read_rand(jabberd_t)
+corenet_tcp_bind_jabber_client_port(jabberd_router_t)
+corenet_tcp_bind_jabber_router_port(jabberd_router_t)
+corenet_tcp_connect_jabber_router_port(jabberd_router_t)
+corenet_sendrecv_jabber_router_server_packets(jabberd_router_t)
+corenet_sendrecv_jabber_client_server_packets(jabberd_router_t)
 
-domain_use_interactive_fds(jabberd_t)
+fs_getattr_all_fs(jabberd_router_t)
 
-files_read_etc_files(jabberd_t)
-files_read_etc_runtime_files(jabberd_t)
+miscfiles_read_certs(jabberd_router_t)
 
-fs_getattr_all_fs(jabberd_t)
-fs_search_auto_mountpoints(jabberd_t)
+optional_policy(`
+        kerberos_use(jabberd_router_t)
+')
 
-logging_send_syslog_msg(jabberd_t)
+optional_policy(`
+		nis_use_ypbind(jabberd_router_t)
+')
 
-miscfiles_read_localization(jabberd_t)
+#####################################
+#
+# Local policy for other jabberd components
+#
 
-sysnet_read_config(jabberd_t)
+corenet_tcp_bind_jabber_interserver_port(jabberd_t)
+corenet_tcp_connect_jabber_router_port(jabberd_t)
 
 userdom_dontaudit_use_unpriv_user_fds(jabberd_t)
 userdom_dontaudit_search_user_home_dirs(jabberd_t)
 
 optional_policy(`
-	nis_use_ypbind(jabberd_t)
+       seutil_sigchld_newrole(jabberd_t)
 ')
 
 optional_policy(`
-	seutil_sigchld_newrole(jabberd_t)
+       udev_read_db(jabberd_t)
 ')
 
-optional_policy(`
-	udev_read_db(jabberd_t)
-')
+#######################################
+#
+# Local policy for jabberd domains
+#
+
+allow jabberd_domain self:process signal_perms;
+allow jabberd_domain self:fifo_file read_fifo_file_perms;
+allow jabberd_domain self:tcp_socket create_stream_socket_perms;
+allow jabberd_domain self:udp_socket create_socket_perms;
+
+manage_files_pattern(jabberd_domain, jabberd_var_lib_t, jabberd_var_lib_t)
+manage_dirs_pattern(jabberd_domain, jabberd_var_lib_t, jabberd_var_lib_t)
+
+# log and pid files are moved into /var/lib/jabberd in the newer version of jabberd
+manage_files_pattern(jabberd_domain, jabberd_log_t, jabberd_log_t)
+logging_log_filetrans(jabberd_domain, jabberd_log_t, { file dir })
+
+manage_files_pattern(jabberd_domain, jabberd_var_run_t, jabberd_var_run_t)
+files_pid_filetrans(jabberd_domain, jabberd_var_run_t, file)
+
+kernel_read_system_state(jabberd_domain)
+
+corenet_all_recvfrom_unlabeled(jabberd_domain)
+corenet_all_recvfrom_netlabel(jabberd_domain)
+corenet_tcp_sendrecv_generic_if(jabberd_domain)
+corenet_udp_sendrecv_generic_if(jabberd_domain)
+corenet_tcp_sendrecv_generic_node(jabberd_domain)
+corenet_udp_sendrecv_generic_node(jabberd_domain)
+corenet_tcp_sendrecv_all_ports(jabberd_domain)
+corenet_udp_sendrecv_all_ports(jabberd_domain)
+corenet_tcp_bind_generic_node(jabberd_domain)
+
+# For SSL
+dev_read_rand(jabberd_domain)
+dev_read_urand(jabberd_domain)
+dev_read_sysfs(jabberd_domain)
+
+files_read_etc_files(jabberd_domain)
+files_read_etc_runtime_files(jabberd_domain)
+
+logging_send_syslog_msg(jabberd_domain)
+
+miscfiles_read_localization(jabberd_domain)
+
+sysnet_read_config(jabberd_domain)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/kerberos.fc serefpolicy-3.7.19/policy/modules/services/kerberos.fc
--- nsaserefpolicy/policy/modules/services/kerberos.fc	2011-03-17 07:21:21.438851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/kerberos.fc	2011-07-26 12:53:53.820523005 +0000
@@ -8,7 +8,7 @@
 /etc/krb5kdc/kadm5\.keytab 	--	gen_context(system_u:object_r:krb5_keytab_t,s0)
 /etc/krb5kdc/principal.*		gen_context(system_u:object_r:krb5kdc_principal_t,s0)
 
-/etc/rc\.d/init\.d/kadmind	--	gen_context(system_u:object_r:kerberos_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/kadmin	--	gen_context(system_u:object_r:kerberos_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/kprop	--	gen_context(system_u:object_r:kerberos_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/krb524d	--	gen_context(system_u:object_r:kerberos_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/krb5kdc	--	gen_context(system_u:object_r:kerberos_initrc_exec_t,s0)
@@ -21,6 +21,7 @@
 /usr/local/var/krb5kdc(/.*)?		gen_context(system_u:object_r:krb5kdc_conf_t,s0)
 /usr/local/var/krb5kdc/principal.*	gen_context(system_u:object_r:krb5kdc_principal_t,s0)
 
+/var/cache/krb5rcache(/.*)?		gen_context(system_u:object_r:krb5_host_rcache_t,s0)
 /var/kerberos/krb5kdc(/.*)?		gen_context(system_u:object_r:krb5kdc_conf_t,s0)
 /var/kerberos/krb5kdc/from_master.*	gen_context(system_u:object_r:krb5kdc_lock_t,s0)
 /var/kerberos/krb5kdc/kadm5\.keytab --	gen_context(system_u:object_r:krb5_keytab_t,s0)
@@ -31,3 +32,4 @@
 /var/log/kadmin(d)?\.log		gen_context(system_u:object_r:kadmind_log_t,s0)
 
 /var/tmp/host_0			-- 	gen_context(system_u:object_r:krb5_host_rcache_t,s0)
+/var/tmp/HTTP_23  		--  gen_context(system_u:object_r:krb5_host_rcache_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/kerberos.if serefpolicy-3.7.19/policy/modules/services/kerberos.if
--- nsaserefpolicy/policy/modules/services/kerberos.if	2011-03-17 07:21:21.826851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/kerberos.if	2011-09-15 16:36:03.755160000 +0000
@@ -74,7 +74,7 @@
 	')
 
 	files_search_etc($1)
-	allow $1 krb5_conf_t:file read_file_perms;
+	read_files_pattern($1, krb5_conf_t, krb5_conf_t)
 	dontaudit $1 krb5_conf_t:file write;
 	dontaudit $1 krb5kdc_conf_t:dir list_dir_perms;
 	dontaudit $1 krb5kdc_conf_t:file rw_file_perms;
@@ -84,6 +84,10 @@
 	selinux_dontaudit_validate_context($1)
 	seutil_dontaudit_read_file_contexts($1)
 
+	optional_policy(`
+		sssd_read_public_files($1)
+	')
+
 	tunable_policy(`allow_kerberos',`
 		allow $1 self:tcp_socket create_socket_perms;
 		allow $1 self:udp_socket create_socket_perms;
@@ -103,7 +107,7 @@
 		corenet_sendrecv_kerberos_client_packets($1)
 		corenet_sendrecv_ocsp_client_packets($1)
 
-		allow $1 krb5_host_rcache_t:file getattr;
+		allow $1 krb5_host_rcache_t:file getattr_file_perms;
 	')
 
 	optional_policy(`
@@ -212,6 +216,25 @@
 	allow $1 krb5_keytab_t:file rw_file_perms;
 ')
 
+#######################################
+## <summary>
+##  Create keytab file in /etc
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`kerberos_etc_filetrans_keytab',`
+    gen_require(`
+        type krb5_keytab_t;
+    ')
+
+    allow $1 krb5_keytab_t:file manage_file_perms;
+    files_etc_filetrans($1, krb5_keytab_t, file)
+')
+
 ########################################
 ## <summary>
 ##	Create a derived type for kerberos keytab
@@ -285,7 +308,8 @@
 
 		seutil_read_file_contexts($1)
 
-		allow $1 krb5_host_rcache_t:file manage_file_perms;
+		files_rw_generic_tmp_dir($1)
+		manage_files_pattern($1, krb5_host_rcache_t, krb5_host_rcache_t)
 		files_search_tmp($1)
 	')
 ')
@@ -374,3 +398,41 @@
 
 	admin_pattern($1, krb5kdc_var_run_t)
 ')
+
+#######################################
+## <summary>
+##     Type transition files created in /tmp
+##     to the krb5_host_rcache type.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`mta_tmp_filetrans_host_rcache',`
+       gen_require(`
+               type krb5_host_rcache_t;
+       ')
+
+       files_tmp_filetrans($1, krb5_host_rcache_t, file)
+')
+
+########################################
+## <summary>
+##     read kerberos homedir content (.k5login)
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+template(`kerberos_read_home_content',`
+       gen_require(`
+               type krb5_home_t;
+       ')
+
+       userdom_search_user_home_dirs($1)
+       read_files_pattern($1, krb5_home_t, krb5_home_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/kerberos.te serefpolicy-3.7.19/policy/modules/services/kerberos.te
--- nsaserefpolicy/policy/modules/services/kerberos.te	2011-03-17 07:21:21.219851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/kerberos.te	2011-04-26 10:31:18.898000005 +0000
@@ -36,12 +36,12 @@
 domain_obj_id_change_exemption(kpropd_t)
 
 type krb5_conf_t;
-files_type(krb5_conf_t)
+files_config_file(krb5_conf_t)
 
 type krb5_home_t;
 userdom_user_home_content(krb5_home_t)
 
-type krb5_host_rcache_t;
+type krb5_host_rcache_t alias saslauthd_tmp_t;
 files_tmp_file(krb5_host_rcache_t)
 
 # types for general configuration files in /etc
@@ -50,10 +50,10 @@
 
 # types for KDC configs and principal file(s)
 type krb5kdc_conf_t;
-files_type(krb5kdc_conf_t)
+files_config_file(krb5kdc_conf_t)
 
 type krb5kdc_lock_t;
-files_type(krb5kdc_lock_t)
+files_lock_file(krb5kdc_lock_t)
 
 # types for KDC principal file(s)
 type krb5kdc_principal_t;
@@ -81,7 +81,7 @@
 # Use capabilities. Surplus capabilities may be allowed.
 allow kadmind_t self:capability { setuid setgid chown fowner dac_override sys_nice };
 dontaudit kadmind_t self:capability sys_tty_config;
-allow kadmind_t self:process { setfscreate signal_perms };
+allow kadmind_t self:process { setfscreate setsched signal_perms };
 allow kadmind_t self:netlink_route_socket r_netlink_socket_perms;
 allow kadmind_t self:unix_dgram_socket { connect create write };
 allow kadmind_t self:tcp_socket connected_stream_socket_perms;
@@ -94,9 +94,9 @@
 dontaudit kadmind_t krb5_conf_t:file write;
 
 read_files_pattern(kadmind_t, krb5kdc_conf_t, krb5kdc_conf_t)
-dontaudit kadmind_t krb5kdc_conf_t:file { write setattr };
+dontaudit kadmind_t krb5kdc_conf_t:file { write_file_perms setattr_file_perms };
 
-allow kadmind_t krb5kdc_lock_t:file { rw_file_perms setattr };
+allow kadmind_t krb5kdc_lock_t:file { rw_file_perms setattr_file_perms };
 
 allow kadmind_t krb5kdc_principal_t:file manage_file_perms;
 filetrans_pattern(kadmind_t, krb5kdc_conf_t, krb5kdc_principal_t, file)
@@ -112,6 +112,7 @@
 
 kernel_read_kernel_sysctls(kadmind_t)
 kernel_list_proc(kadmind_t)
+kernel_read_network_state(kadmind_t)
 kernel_read_proc_symlinks(kadmind_t)
 kernel_read_system_state(kadmind_t)
 
@@ -126,10 +127,13 @@
 corenet_tcp_bind_generic_node(kadmind_t)
 corenet_udp_bind_generic_node(kadmind_t)
 corenet_tcp_bind_kerberos_admin_port(kadmind_t)
+corenet_tcp_bind_kerberos_password_port(kadmind_t)
 corenet_udp_bind_kerberos_admin_port(kadmind_t)
+corenet_udp_bind_kerberos_password_port(kadmind_t)
 corenet_tcp_bind_reserved_port(kadmind_t)
 corenet_dontaudit_tcp_bind_all_reserved_ports(kadmind_t)
 corenet_sendrecv_kerberos_admin_server_packets(kadmind_t)
+corenet_sendrecv_kerberos_password_server_packets(kadmind_t)
 
 dev_read_sysfs(kadmind_t)
 dev_read_rand(kadmind_t)
@@ -149,6 +153,7 @@
 
 logging_send_syslog_msg(kadmind_t)
 
+miscfiles_read_certs(kadmind_t)
 miscfiles_read_localization(kadmind_t)
 
 seutil_read_file_contexts(kadmind_t)
@@ -160,6 +165,14 @@
 userdom_dontaudit_search_user_home_dirs(kadmind_t)
 
 optional_policy(`
+   ldap_stream_connect(kadmind_t)
+')
+
+optional_policy(`
+   dirsrv_stream_connect(kadmind_t)
+')
+
+optional_policy(`
 	nis_use_ypbind(kadmind_t)
 ')
 
@@ -193,13 +206,12 @@
 read_files_pattern(krb5kdc_t, krb5kdc_conf_t, krb5kdc_conf_t)
 dontaudit krb5kdc_t krb5kdc_conf_t:file write;
 
-allow krb5kdc_t krb5kdc_lock_t:file { rw_file_perms setattr };
+allow krb5kdc_t krb5kdc_lock_t:file { rw_file_perms setattr_file_perms };
 
 allow krb5kdc_t krb5kdc_log_t:file manage_file_perms;
 logging_log_filetrans(krb5kdc_t, krb5kdc_log_t, file)
 
-allow krb5kdc_t krb5kdc_principal_t:file read_file_perms;
-dontaudit krb5kdc_t krb5kdc_principal_t:file write;
+allow krb5kdc_t krb5kdc_principal_t:file rw_file_perms;
 
 manage_dirs_pattern(krb5kdc_t, krb5kdc_tmp_t, krb5kdc_tmp_t)
 manage_files_pattern(krb5kdc_t, krb5kdc_tmp_t, krb5kdc_tmp_t)
@@ -249,6 +261,7 @@
 
 logging_send_syslog_msg(krb5kdc_t)
 
+miscfiles_read_certs(krb5kdc_t)
 miscfiles_read_localization(krb5kdc_t)
 
 seutil_read_file_contexts(krb5kdc_t)
@@ -260,6 +273,14 @@
 userdom_dontaudit_search_user_home_dirs(krb5kdc_t)
 
 optional_policy(`
+   ldap_stream_connect(krb5kdc_t)
+')
+
+optional_policy(`
+   dirsrv_stream_connect(krb5kdc_t)
+')
+
+optional_policy(`
 	nis_use_ypbind(krb5kdc_t)
 ')
 
@@ -283,7 +304,7 @@
 allow kpropd_t self:unix_stream_socket create_stream_socket_perms;
 allow kpropd_t self:tcp_socket create_stream_socket_perms;
 
-allow kpropd_t krb5_host_rcache_t:file rw_file_perms;
+allow kpropd_t krb5_host_rcache_t:file manage_file_perms;
 
 allow kpropd_t krb5_keytab_t:file read_file_perms;
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/keystone.fc serefpolicy-3.7.19/policy/modules/services/keystone.fc
--- nsaserefpolicy/policy/modules/services/keystone.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/keystone.fc	2012-05-14 15:01:15.794199304 +0000
@@ -0,0 +1,9 @@
+/etc/rc\.d/init\.d/keystone --  gen_context(system_u:object_r:keystone_initrc_exec_t,s0)
+
+/usr/bin/keystone-all		--	gen_context(system_u:object_r:keystone_exec_t,s0)
+
+/var/lib/keystone(/.*)?		gen_context(system_u:object_r:keystone_var_lib_t,s0)
+
+/var/log/keystone(/.*)?		gen_context(system_u:object_r:keystone_log_t,s0)
+
+/var/run/keystone(/.*)?		gen_context(system_u:object_r:keystone_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/keystone.if serefpolicy-3.7.19/policy/modules/services/keystone.if
--- nsaserefpolicy/policy/modules/services/keystone.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/keystone.if	2012-05-14 15:03:23.244200434 +0000
@@ -0,0 +1,201 @@
+
+## <summary>policy for keystone</summary>
+
+########################################
+## <summary>
+##	Transition to keystone.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`keystone_domtrans',`
+	gen_require(`
+		type keystone_t, keystone_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, keystone_exec_t, keystone_t)
+')
+########################################
+## <summary>
+##	Read keystone's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`keystone_read_log',`
+	gen_require(`
+		type keystone_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, keystone_log_t, keystone_log_t)
+')
+
+########################################
+## <summary>
+##	Append to keystone log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`keystone_append_log',`
+	gen_require(`
+		type keystone_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, keystone_log_t, keystone_log_t)
+')
+
+########################################
+## <summary>
+##	Manage keystone log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`keystone_manage_log',`
+	gen_require(`
+		type keystone_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, keystone_log_t, keystone_log_t)
+	manage_files_pattern($1, keystone_log_t, keystone_log_t)
+	manage_lnk_files_pattern($1, keystone_log_t, keystone_log_t)
+')
+
+########################################
+## <summary>
+##	Search keystone lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`keystone_search_lib',`
+	gen_require(`
+		type keystone_var_lib_t;
+	')
+
+	allow $1 keystone_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read keystone lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`keystone_read_lib_files',`
+	gen_require(`
+		type keystone_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, keystone_var_lib_t, keystone_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage keystone lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`keystone_manage_lib_files',`
+	gen_require(`
+		type keystone_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, keystone_var_lib_t, keystone_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage keystone lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`keystone_manage_lib_dirs',`
+	gen_require(`
+		type keystone_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, keystone_var_lib_t, keystone_var_lib_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an keystone environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`keystone_admin',`
+	gen_require(`
+		type keystone_t;
+		type keystone_log_t;
+		type keystone_var_lib_t;
+		type keystone_var_run_t;
+		type keystone_initrc_exec_t;
+	')
+
+    init_labeled_script_domtrans($1, keystone_initrc_exec_t)
+    domain_system_change_exemption($1)
+    role_transition $2 keystone_initrc_exec_t system_r;
+    allow $2 system_r;
+
+	allow $1 keystone_t:process { ptrace signal_perms };
+	ps_process_pattern($1, keystone_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, keystone_log_t)
+
+	files_list_pids($1)
+    admin_pattern($1, keystone_var_run_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, keystone_var_lib_t)
+
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/keystone.te serefpolicy-3.7.19/policy/modules/services/keystone.te
--- nsaserefpolicy/policy/modules/services/keystone.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/keystone.te	2012-05-14 22:45:05.958368176 +0000
@@ -0,0 +1,81 @@
+policy_module(keystone, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type keystone_t;
+type keystone_exec_t;
+init_daemon_domain(keystone_t, keystone_exec_t)
+
+type keystone_initrc_exec_t;
+init_script_file(keystone_initrc_exec_t)
+
+type keystone_log_t;
+logging_log_file(keystone_log_t)
+
+type keystone_var_lib_t;
+files_type(keystone_var_lib_t)
+
+type keystone_var_run_t;
+files_pid_file(keystone_var_run_t)
+
+type keystone_tmp_t;
+files_tmp_file(keystone_tmp_t)
+
+
+########################################
+#
+# keystone local policy
+#
+allow keystone_t self:fifo_file rw_fifo_file_perms;
+allow keystone_t self:unix_stream_socket create_stream_socket_perms;
+allow keystone_t self:tcp_socket create_stream_socket_perms;
+
+manage_dirs_pattern(keystone_t, keystone_log_t, keystone_log_t)
+manage_files_pattern(keystone_t, keystone_log_t, keystone_log_t)
+logging_log_filetrans(keystone_t, keystone_log_t, { dir file })
+
+manage_files_pattern(keystone_t, keystone_var_run_t, keystone_var_run_t)
+manage_dirs_pattern(keystone_t, keystone_var_run_t,keystone_var_run_t)
+files_pid_filetrans(keystone_t, keystone_var_run_t, { file dir })
+
+manage_dirs_pattern(keystone_t, keystone_tmp_t, keystone_tmp_t)
+manage_files_pattern(keystone_t, keystone_tmp_t, keystone_tmp_t)
+manage_lnk_files_pattern(keystone_t, keystone_tmp_t, keystone_tmp_t)
+files_tmp_filetrans(keystone_t, keystone_tmp_t, { file dir lnk_file })
+can_exec(keystone_t, keystone_tmp_t)
+
+manage_dirs_pattern(keystone_t, keystone_var_lib_t, keystone_var_lib_t)
+manage_files_pattern(keystone_t, keystone_var_lib_t, keystone_var_lib_t)
+files_var_lib_filetrans(keystone_t, keystone_var_lib_t, { dir file })
+
+kernel_read_system_state(keystone_t)
+
+corecmd_exec_bin(keystone_t)
+corecmd_exec_shell(keystone_t)
+
+corenet_tcp_connect_commplex_port(keystone_t)
+corenet_tcp_bind_generic_node(keystone_t)
+
+dev_read_urand(keystone_t)
+
+domain_use_interactive_fds(keystone_t)
+
+files_read_etc_files(keystone_t)
+files_read_usr_files(keystone_t)
+
+auth_use_pam(keystone_t)
+
+libs_exec_ldconfig(keystone_t)
+
+miscfiles_read_localization(keystone_t)
+
+optional_policy(`
+	mysql_stream_connect(keystone_t)
+')
+
+optional_policy(`
+	unconfined_domain(keystone_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ksmtuned.fc serefpolicy-3.7.19/policy/modules/services/ksmtuned.fc
--- nsaserefpolicy/policy/modules/services/ksmtuned.fc	2011-03-17 07:21:21.913851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ksmtuned.fc	2011-03-17 07:21:04.549851002 +0000
@@ -3,3 +3,5 @@
 /usr/sbin/ksmtuned		--	gen_context(system_u:object_r:ksmtuned_exec_t,s0)
 
 /var/run/ksmtune\.pid		--	gen_context(system_u:object_r:ksmtuned_var_run_t,s0)
+
+/var/log/ksmtuned.*			gen_context(system_u:object_r:ksmtuned_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ksmtuned.if serefpolicy-3.7.19/policy/modules/services/ksmtuned.if
--- nsaserefpolicy/policy/modules/services/ksmtuned.if	2011-03-17 07:21:21.963851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ksmtuned.if	2011-03-17 07:21:04.617851001 +0000
@@ -59,8 +59,8 @@
 		type ksmtuned_initrc_exec_t;
 	')
 
-	allow $1 ksmtuned_t:process { ptrace signal_perms };
-	ps_process_pattern(ksmtumed_t)
+	allow $1 ksmtuned_t:process { ptrace signal_perms getattr };
+    read_files_pattern($1, ksmtuned_t, ksmtuned_t)
 
 	files_list_pids($1)
 	admin_pattern($1, ksmtuned_var_run_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ksmtuned.te serefpolicy-3.7.19/policy/modules/services/ksmtuned.te
--- nsaserefpolicy/policy/modules/services/ksmtuned.te	2011-03-17 07:21:21.574851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ksmtuned.te	2011-03-17 07:21:04.064851001 +0000
@@ -10,6 +10,9 @@
 type ksmtuned_exec_t;
 init_daemon_domain(ksmtuned_t, ksmtuned_exec_t)
 
+type ksmtuned_log_t;
+logging_log_file(ksmtuned_log_t)
+
 type ksmtuned_initrc_exec_t;
 init_script_file(ksmtuned_initrc_exec_t)
 
@@ -24,6 +27,10 @@
 allow ksmtuned_t self:capability { sys_ptrace sys_tty_config };
 allow ksmtuned_t self:fifo_file rw_file_perms;
 
+manage_dirs_pattern(ksmtuned_t, ksmtuned_log_t, ksmtuned_log_t)
+manage_files_pattern(ksmtuned_t, ksmtuned_log_t, ksmtuned_log_t)
+logging_log_filetrans(ksmtuned_t, ksmtuned_log_t, { file dir })
+
 manage_files_pattern(ksmtuned_t, ksmtuned_var_run_t, ksmtuned_var_run_t)
 files_pid_filetrans(ksmtuned_t, ksmtuned_var_run_t, file)
 
@@ -32,9 +39,17 @@
 dev_rw_sysfs(ksmtuned_t)
 
 domain_read_all_domains_state(ksmtuned_t)
+domain_dontaudit_read_all_domains_state(ksmtuned_t)
 
 corecmd_exec_bin(ksmtuned_t)
 
 files_read_etc_files(ksmtuned_t)
 
+mls_file_read_to_clearance(ksmtuned_t)
+
+term_use_all_terms(ksmtuned_t)
+
+logging_send_syslog_msg(ksmtuned_t)
+
 miscfiles_read_localization(ksmtuned_t)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ldap.fc serefpolicy-3.7.19/policy/modules/services/ldap.fc
--- nsaserefpolicy/policy/modules/services/ldap.fc	2011-03-17 07:21:21.863851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ldap.fc	2012-04-03 20:40:55.931725279 +0000
@@ -1,6 +1,8 @@
 
 /etc/ldap/slapd\.conf	--	gen_context(system_u:object_r:slapd_etc_t,s0)
-/etc/rc\.d/init\.d/ldap	--	gen_context(system_u:object_r:slapd_initrc_exec_t,s0)
+/etc/openldap/slapd\.d(/.*)?	gen_context(system_u:object_r:slapd_db_t,s0)
+
+/etc/rc\.d/init\.d/slapd	--	gen_context(system_u:object_r:slapd_initrc_exec_t,s0)
 
 /usr/sbin/slapd		--	gen_context(system_u:object_r:slapd_exec_t,s0)
 
@@ -15,3 +17,4 @@
 /var/run/openldap(/.*)?		gen_context(system_u:object_r:slapd_var_run_t,s0)
 /var/run/slapd\.args	--	gen_context(system_u:object_r:slapd_var_run_t,s0)
 /var/run/slapd\.pid	--	gen_context(system_u:object_r:slapd_var_run_t,s0)
+#/var/run/slapd.*	-s	gen_context(system_u:object_r:slapd_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ldap.if serefpolicy-3.7.19/policy/modules/services/ldap.if
--- nsaserefpolicy/policy/modules/services/ldap.if	2011-03-17 07:21:21.898851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ldap.if	2011-03-17 07:21:04.518851002 +0000
@@ -1,5 +1,43 @@
 ## <summary>OpenLDAP directory server</summary>
 
+#######################################
+## <summary>
+##      Execute OpenLDAP in the ldap domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`ldap_domtrans',`
+        gen_require(`
+                type slapd_t, slapd_exec_t;
+        ')
+
+        domtrans_pattern($1, slapd_exec_t, slapd_t)
+
+')
+
+#######################################
+## <summary>
+##      Execute OpenLDAP server in the ldap domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`ldap_initrc_domtrans',`
+        gen_require(`
+                type slapd_initrc_exec_t;
+        ')
+
+        init_labeled_script_domtrans($1, slapd_initrc_exec_t)
+')
+
+
 ########################################
 ## <summary>
 ##	Read the contents of the OpenLDAP
@@ -21,6 +59,25 @@
 
 ########################################
 ## <summary>
+##	Read the contents of the OpenLDAP
+##	database files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ldap_read_db_files',`
+	gen_require(`
+		type slapd_db_t;
+	')
+
+	read_files_pattern($1, slapd_db_t, slapd_db_t)
+')
+
+########################################
+## <summary>
 ##	Read the OpenLDAP configuration files.
 ## </summary>
 ## <param name="domain">
@@ -69,8 +126,30 @@
 	')
 
 	files_search_pids($1)
-	allow $1 slapd_var_run_t:sock_file write;
-	allow $1 slapd_t:unix_stream_socket connectto;
+	stream_connect_pattern($1, slapd_var_run_t, slapd_var_run_t, slapd_t)
+
+	optional_policy(`
+		ldap_stream_connect_dirsrv($1)	
+	')
+')
+
+########################################
+## <summary>
+##	Connect to dirsrv over an unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ldap_stream_connect_dirsrv',`
+	gen_require(`
+		type dirsrv_t, dirsrv_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, dirsrv_var_run_t, dirsrv_var_run_t, dirsrv_t)
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ldap.te serefpolicy-3.7.19/policy/modules/services/ldap.te
--- nsaserefpolicy/policy/modules/services/ldap.te	2011-03-17 07:21:22.195851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ldap.te	2011-10-31 13:44:04.677166496 +0000
@@ -11,7 +11,7 @@
 init_daemon_domain(slapd_t, slapd_exec_t)
 
 type slapd_cert_t;
-files_type(slapd_cert_t)
+miscfiles_cert_type(slapd_cert_t)
 
 type slapd_db_t;
 files_type(slapd_db_t)
@@ -28,9 +28,15 @@
 type slapd_replog_t;
 files_type(slapd_replog_t)
 
+type slapd_log_t;
+logging_log_file(slapd_log_t)
+
 type slapd_tmp_t;
 files_tmp_file(slapd_tmp_t)
 
+type slapd_tmpfs_t;
+files_tmpfs_file(slapd_tmpfs_t)
+
 type slapd_var_run_t;
 files_pid_file(slapd_var_run_t)
 
@@ -68,10 +74,17 @@
 manage_files_pattern(slapd_t, slapd_replog_t, slapd_replog_t)
 manage_lnk_files_pattern(slapd_t, slapd_replog_t, slapd_replog_t)
 
+manage_dirs_pattern(slapd_t, slapd_log_t, slapd_log_t)
+manage_files_pattern(slapd_t, slapd_log_t, slapd_log_t)
+logging_log_filetrans(slapd_t, slapd_log_t, { file dir })
+
 manage_dirs_pattern(slapd_t, slapd_tmp_t, slapd_tmp_t)
 manage_files_pattern(slapd_t, slapd_tmp_t, slapd_tmp_t)
 files_tmp_filetrans(slapd_t, slapd_tmp_t, { file dir })
 
+manage_files_pattern(slapd_t, slapd_tmpfs_t, slapd_tmpfs_t)
+fs_tmpfs_filetrans(slapd_t, slapd_tmpfs_t,file)
+
 manage_files_pattern(slapd_t, slapd_var_run_t, slapd_var_run_t)
 manage_sock_files_pattern(slapd_t, slapd_var_run_t, slapd_var_run_t)
 files_pid_filetrans(slapd_t, slapd_var_run_t, { file sock_file })
@@ -107,6 +120,7 @@
 files_list_var_lib(slapd_t)
 
 auth_use_nsswitch(slapd_t)
+auth_rw_cache(slapd_t)
 
 logging_send_syslog_msg(slapd_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/likewise.te serefpolicy-3.7.19/policy/modules/services/likewise.te
--- nsaserefpolicy/policy/modules/services/likewise.te	2011-03-17 07:21:21.626851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/likewise.te	2011-09-20 12:55:54.679160001 +0000
@@ -138,7 +138,7 @@
 seutil_read_config(lsassd_t)
 seutil_read_default_contexts(lsassd_t)
 seutil_read_file_contexts(lsassd_t)
-seutil_run_semanage(lsassd_t, lsassd_t)
+seutil_run_semanage(lsassd_t, system_r)
 
 sysnet_use_ldap(lsassd_t)
 sysnet_read_config(lsassd_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/lircd.te serefpolicy-3.7.19/policy/modules/services/lircd.te
--- nsaserefpolicy/policy/modules/services/lircd.te	2011-03-17 07:21:21.109851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/lircd.te	2011-08-10 09:33:19.115523004 +0000
@@ -24,8 +24,11 @@
 # lircd local policy
 #
 
-allow lircd_t self:process signal;
+allow lircd_t self:capability { chown kill sys_admin };
+allow lircd_t self:process { fork signal };
 allow lircd_t self:unix_dgram_socket create_socket_perms;
+allow lircd_t self:fifo_file rw_fifo_file_perms;
+allow lircd_t self:tcp_socket create_stream_socket_perms;
 
 # etc file
 read_files_pattern(lircd_t, lircd_etc_t, lircd_etc_t)
@@ -34,21 +37,33 @@
 manage_files_pattern(lircd_t, lircd_var_run_t, lircd_var_run_t)
 manage_sock_files_pattern(lircd_t, lircd_var_run_t, lircd_var_run_t)
 files_pid_filetrans(lircd_t, lircd_var_run_t, { dir file })
-# /dev/lircd socket
-dev_filetrans(lircd_t, lircd_var_run_t, sock_file)
 
-dev_read_generic_usb_dev(lircd_t)
+corenet_tcp_bind_generic_node(lircd_t)
+corenet_tcp_bind_lirc_port(lircd_t)
+corenet_tcp_connect_lirc_port(lircd_t)
+corenet_tcp_sendrecv_all_ports(lircd_t)
+corenet_tcp_sendrecv_generic_if(lircd_t)
+
+# /dev/lircd socket
+dev_filetrans(lircd_t, lircd_var_run_t, sock_file )
+dev_rw_generic_usb_dev(lircd_t)
+dev_read_mouse(lircd_t)
 dev_filetrans_lirc(lircd_t)
 dev_rw_lirc(lircd_t)
 dev_rw_input_dev(lircd_t)
+dev_read_sysfs(lircd_t)
 
-files_read_etc_files(lircd_t)
 files_list_var(lircd_t)
 files_manage_generic_locks(lircd_t)
 files_read_all_locks(lircd_t)
+files_read_etc_files(lircd_t)
 
 term_use_ptmx(lircd_t)
+term_use_unallocated_ttys(lircd_t)    
 
 logging_send_syslog_msg(lircd_t)
 
 miscfiles_read_localization(lircd_t)
+
+sysnet_dns_name_resolve(lircd_t)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/lldpad.fc serefpolicy-3.7.19/policy/modules/services/lldpad.fc
--- nsaserefpolicy/policy/modules/services/lldpad.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/lldpad.fc	2011-07-26 15:20:53.216523005 +0000
@@ -0,0 +1,8 @@
+
+/etc/rc\.d/init\.d/lldpad	--	gen_context(system_u:object_r:lldpad_initrc_exec_t,s0)
+
+/usr/sbin/lldpad		--	gen_context(system_u:object_r:lldpad_exec_t,s0)
+
+/var/lib/lldpad(/.*)?		gen_context(system_u:object_r:lldpad_var_lib_t,s0)
+
+/var/run/lldpad\.pid		--	gen_context(system_u:object_r:lldpad_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/lldpad.if serefpolicy-3.7.19/policy/modules/services/lldpad.if
--- nsaserefpolicy/policy/modules/services/lldpad.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/lldpad.if	2011-08-10 16:46:20.495523004 +0000
@@ -0,0 +1,198 @@
+
+## <summary>policy for lldpad</summary>
+
+########################################
+## <summary>
+##	Transition to lldpad.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`lldpad_domtrans',`
+	gen_require(`
+		type lldpad_t, lldpad_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, lldpad_exec_t, lldpad_t)
+')
+
+
+########################################
+## <summary>
+##	Execute lldpad server in the lldpad domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lldpad_initrc_domtrans',`
+	gen_require(`
+		type lldpad_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, lldpad_initrc_exec_t)
+')
+
+
+########################################
+## <summary>
+##	Search lldpad lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lldpad_search_lib',`
+	gen_require(`
+		type lldpad_var_lib_t;
+	')
+
+	allow $1 lldpad_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read lldpad lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lldpad_read_lib_files',`
+	gen_require(`
+		type lldpad_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, lldpad_var_lib_t, lldpad_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage lldpad lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lldpad_manage_lib_files',`
+	gen_require(`
+		type lldpad_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, lldpad_var_lib_t, lldpad_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage lldpad lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lldpad_manage_lib_dirs',`
+	gen_require(`
+		type lldpad_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, lldpad_var_lib_t, lldpad_var_lib_t)
+')
+
+
+########################################
+## <summary>
+##	Read lldpad PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lldpad_read_pid_files',`
+	gen_require(`
+		type lldpad_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 lldpad_var_run_t:file read_file_perms;
+')
+
+#####################################
+## <summary>
+##      Send to a lldpad unix dgram socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`lldpad_dgram_send',`
+        gen_require(`
+                type lldpad_t;
+        ')
+
+        allow $1 lldpad_t:unix_dgram_socket sendto;
+		allow lldpad_t $1 :unix_dgram_socket sendto;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an lldpad environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`lldpad_admin',`
+	gen_require(`
+		type lldpad_t;
+	type lldpad_initrc_exec_t;
+	type lldpad_var_lib_t;
+	type lldpad_var_run_t;
+	')
+
+	allow $1 lldpad_t:process { ptrace signal_perms };
+	ps_process_pattern($1, lldpad_t)
+
+	lldpad_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 lldpad_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, lldpad_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, lldpad_var_run_t)
+
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/lldpad.te serefpolicy-3.7.19/policy/modules/services/lldpad.te
--- nsaserefpolicy/policy/modules/services/lldpad.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/lldpad.te	2011-08-30 14:20:32.481160001 +0000
@@ -0,0 +1,78 @@
+policy_module(lldpad, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type lldpad_t;
+type lldpad_exec_t;
+init_daemon_domain(lldpad_t, lldpad_exec_t)
+
+type lldpad_initrc_exec_t;
+init_script_file(lldpad_initrc_exec_t)
+
+type lldpad_tmpfs_t;
+files_tmpfs_file(lldpad_tmpfs_t)
+
+type lldpad_var_lib_t;
+files_type(lldpad_var_lib_t)
+
+type lldpad_var_run_t;
+files_pid_file(lldpad_var_run_t)
+
+########################################
+#
+# lldpad local policy
+#
+
+allow lldpad_t self:capability { net_admin net_raw };
+
+allow lldpad_t self:shm create_shm_perms;
+allow lldpad_t self:fifo_file rw_fifo_file_perms;
+
+allow lldpad_t self:unix_stream_socket create_stream_socket_perms;
+allow lldpad_t self:netlink_route_socket create_netlink_socket_perms;
+allow lldpad_t self:packet_socket create_socket_perms;
+allow lldpad_t self:udp_socket create_socket_perms;
+
+manage_files_pattern(lldpad_t,lldpad_tmpfs_t,lldpad_tmpfs_t)
+fs_tmpfs_filetrans(lldpad_t,lldpad_tmpfs_t,file)
+
+manage_dirs_pattern(lldpad_t, lldpad_var_lib_t, lldpad_var_lib_t)
+manage_files_pattern(lldpad_t, lldpad_var_lib_t, lldpad_var_lib_t)
+
+manage_dirs_pattern(lldpad_t, lldpad_var_run_t, lldpad_var_run_t)
+manage_files_pattern(lldpad_t, lldpad_var_run_t, lldpad_var_run_t)
+manage_sock_files_pattern(lldpad_t, lldpad_var_run_t, lldpad_var_run_t)
+# this needs to be fixed in lldpad package
+# bug: #
+files_pid_filetrans(lldpad_t, lldpad_var_run_t, { dir file sock_file })
+
+kernel_read_all_sysctls(lldpad_t)
+kernel_read_network_state(lldpad_t)
+kernel_request_load_module(lldpad_t)
+
+dev_read_sysfs(lldpad_t)
+
+files_read_etc_files(lldpad_t)
+
+logging_send_syslog_msg(lldpad_t)
+
+miscfiles_read_localization(lldpad_t)
+
+userdom_dgram_send(lldpad_t)
+
+ifdef(`hide_broken_symptoms',`
+
+    # caused by some bogus kernel code
+	dontaudit lldpad_t self:capability sys_module;
+')
+
+optional_policy(`
+	fcoemon_dgram_send(lldpad_t)
+')
+
+optional_policy(`
+	unconfined_domain(lldpad_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/lpd.if serefpolicy-3.7.19/policy/modules/services/lpd.if
--- nsaserefpolicy/policy/modules/services/lpd.if	2011-03-17 07:21:21.240851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/lpd.if	2011-03-17 07:21:03.771851000 +0000
@@ -153,7 +153,7 @@
 	')
 
 	files_search_spool($1)
-	allow $1 print_spool_t:file { relabelto relabelfrom };
+	allow $1 print_spool_t:file relabel_file_perms;
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mailman.if serefpolicy-3.7.19/policy/modules/services/mailman.if
--- nsaserefpolicy/policy/modules/services/mailman.if	2011-03-17 07:21:21.134851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mailman.if	2012-01-11 11:38:12.321073993 +0000
@@ -74,7 +74,7 @@
 	corecmd_exec_all_executables(mailman_$1_t)
 
 	files_exec_etc_files(mailman_$1_t)
-	files_list_usr(mailman_$1_t)
+	files_read_usr_files(mailman_$1_t)
 	files_list_var(mailman_$1_t)
 	files_list_var_lib(mailman_$1_t)
 	files_read_var_lib_symlinks(mailman_$1_t)
@@ -108,6 +108,31 @@
 	domtrans_pattern($1, mailman_mail_exec_t, mailman_mail_t)
 ')
 
+########################################
+## <summary>
+##	Execute the mailman program in the mailman domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to allow the mailman domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`mailman_run',`
+	gen_require(`
+		type mailman_mail_t;
+	')
+
+	mailman_domtrans($1)
+	role $2 types mailman_mail_t;
+')
+
 #######################################
 ## <summary>
 ##	Execute mailman CGI scripts in the 
@@ -115,7 +140,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mailman.te serefpolicy-3.7.19/policy/modules/services/mailman.te
--- nsaserefpolicy/policy/modules/services/mailman.te	2011-03-17 07:21:20.793851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mailman.te	2011-08-31 14:26:52.815160001 +0000
@@ -70,6 +70,10 @@
 manage_files_pattern(mailman_mail_t, mailman_archive_t, mailman_archive_t)
 manage_lnk_files_pattern(mailman_mail_t, mailman_archive_t, mailman_archive_t)
 
+# make NNTP gateway working
+corenet_tcp_connect_innd_port(mailman_mail_t)
+corenet_tcp_connect_spamd_port(mailman_mail_t)
+
 files_search_spool(mailman_mail_t)
 
 fs_rw_anon_inodefs_files(mailman_mail_t)
@@ -87,6 +91,7 @@
 
 optional_policy(`
 	postfix_search_spool(mailman_mail_t)
+	postfix_rw_master_pipes(mailman_mail_t)
 ')
 
 ########################################
@@ -105,6 +110,8 @@
 
 kernel_read_proc_symlinks(mailman_queue_t)
 
+corenet_tcp_connect_innd_port(mailman_queue_t)
+
 auth_domtrans_chk_passwd(mailman_queue_t)
 
 files_dontaudit_search_pids(mailman_queue_t)
@@ -121,9 +128,13 @@
 ')
 
 optional_policy(`
+    gnome_dontaudit_search_config(mailman_mail_t)
+')
+
+optional_policy(`
 	cron_system_entry(mailman_queue_t, mailman_queue_exec_t)
 ')
 
 optional_policy(`
 	su_exec(mailman_queue_t)
-')
\ No newline at end of file
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/matahari.fc serefpolicy-3.7.19/policy/modules/services/matahari.fc
--- nsaserefpolicy/policy/modules/services/matahari.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/matahari.fc	2012-05-08 20:35:16.812359548 +0000
@@ -0,0 +1,32 @@
+/etc/rc\.d/init\.d/matahari-broker		--	gen_context(system_u:object_r:matahari_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/matahari-host		--	gen_context(system_u:object_r:matahari_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/matahari-net			--	gen_context(system_u:object_r:matahari_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/matahari-network		--	gen_context(system_u:object_r:matahari_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/matahari-rpc			--	gen_context(system_u:object_r:matahari_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/matahari-service		--	gen_context(system_u:object_r:matahari_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/matahari-sysconfig		--	gen_context(system_u:object_r:matahari_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/matahari-sysconfig-console		--	gen_context(system_u:object_r:matahari_initrc_exec_t,s0)
+
+/usr/sbin/matahari-hostd					--	gen_context(system_u:object_r:matahari_hostd_exec_t,s0)
+/usr/sbin/matahari-dbus-hostd				--	gen_context(system_u:object_r:matahari_hostd_exec_t,s0)
+/usr/sbin/matahari-qmf-hostd				--	gen_context(system_u:object_r:matahari_hostd_exec_t,s0)
+
+/usr/sbin/matahari-qmf-sysconfigd			--	gen_context(system_u:object_r:matahari_sysconfigd_exec_t,s0)
+/usr/sbin/matahari-dbus-sysconfigd			--	gen_context(system_u:object_r:matahari_sysconfigd_exec_t,s0)
+/usr/sbin/matahari-qmf-sysconfig-consoled	--	gen_context(system_u:object_r:matahari_sysconfigd_exec_t,s0)
+
+/usr/sbin/matahari-netd						--	gen_context(system_u:object_r:matahari_netd_exec_t,s0)
+/usr/sbin/matahari-dbus-networkd			--	gen_context(system_u:object_r:matahari_netd_exec_t,s0)
+/usr/sbin/matahari-qmf-networkd				--	gen_context(system_u:object_r:matahari_netd_exec_t,s0)
+
+/usr/sbin/matahari-qmf-rpcd     			--  gen_context(system_u:object_r:matahari_rpcd_exec_t,s0)
+
+/usr/sbin/matahari-dbus-serviced			--	gen_context(system_u:object_r:matahari_serviced_exec_t,s0)
+/usr/sbin/matahari-qmf-serviced				--	gen_context(system_u:object_r:matahari_serviced_exec_t,s0)
+/usr/sbin/matahari-serviced					--	gen_context(system_u:object_r:matahari_serviced_exec_t,s0)
+
+/var/lib/matahari(/.*)?							gen_context(system_u:object_r:matahari_var_lib_t,s0)
+
+/var/run/matahari(/.*)?							gen_context(system_u:object_r:matahari_var_run_t,s0)
+/var/run/matahari\.pid						--	gen_context(system_u:object_r:matahari_var_run_t,s0)
+/var/run/matahari-broker\.pid				--	gen_context(system_u:object_r:matahari_var_run_t,s0)
Binary files nsaserefpolicy/policy/modules/services/.matahari.fc.swp and serefpolicy-3.7.19/policy/modules/services/.matahari.fc.swp differ
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/matahari.if serefpolicy-3.7.19/policy/modules/services/matahari.if
--- nsaserefpolicy/policy/modules/services/matahari.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/matahari.if	2012-02-28 14:17:19.381233308 +0000
@@ -0,0 +1,244 @@
+## <summary>policy for matahari</summary>
+
+######################################
+## <summary>
+##      Creates types and rules for a basic
+##      matahari init daemon domain.
+## </summary>
+## <param name="prefix">
+##      <summary>
+##      Prefix for the domain.
+##      </summary>
+## </param>
+#
+template(`matahari_domain_template',`
+        gen_require(`
+                attribute matahari_domain;
+        ')
+
+	##############################
+	#        
+	#  Declarations
+	#                        
+
+        type matahari_$1_t, matahari_domain;
+        type matahari_$1_exec_t;
+        init_daemon_domain(matahari_$1_t, matahari_$1_exec_t)
+')		
+
+########################################
+## <summary>
+##	Search matahari lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`matahari_search_lib',`
+	gen_require(`
+		type matahari_var_lib_t;
+	')
+
+	allow $1 matahari_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read matahari lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`matahari_read_lib_files',`
+	gen_require(`
+		type matahari_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, matahari_var_lib_t, matahari_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	matahari lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`matahari_manage_lib_files',`
+	gen_require(`
+		type matahari_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, matahari_var_lib_t, matahari_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage matahari lib dirs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`matahari_manage_lib_dirs',`
+	gen_require(`
+		type matahari_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_dirs_pattern($1, matahari_var_lib_t, matahari_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Read matahari PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`matahari_read_pid_files',`
+	gen_require(`
+		type matahari_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 matahari_var_run_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Read matahari PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`matahari_manage_pid_files',`
+	gen_require(`
+		type matahari_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_files_pattern($1, matahari_var_run_t, matahari_var_run_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run matahari_hostd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`matahari_hostd_domtrans',`
+	gen_require(`
+		type matahari_hostd_t, matahari_hostd_exec_t;
+	')
+
+	domtrans_pattern($1, matahari_hostd_exec_t, matahari_hostd_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run matahari_netd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`matahari_netd_domtrans',`
+	gen_require(`
+		type matahari_netd_t, matahari_netd_exec_t;
+	')
+
+	domtrans_pattern($1, matahari_netd_exec_t, matahari_netd_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run matahari_serviced.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`matahari_serviced_domtrans',`
+	gen_require(`
+		type matahari_serviced_t, matahari_serviced_exec_t;
+	')
+
+	domtrans_pattern($1, matahari_serviced_exec_t, matahari_serviced_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an matahari environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`matahari_admin',`
+	gen_require(`
+		type matahari_initrc_exec_t, matahari_hostd_t;
+		type matahari_netd_t, matahari_serviced_t, matahari_sysconfigd_t;
+		type matahari_var_lib_t, matahari_var_run_t;
+	')
+
+	init_labeled_script_domtrans($1, matahari_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 matahari_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	allow $1 matahari_netd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, matahari_netd_t)
+
+	allow $1 matahari_hostd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, matahari_hostd_t)
+
+	allow $1 matahari_serviced_t:process { ptrace signal_perms };
+	ps_process_pattern($1, matahari_serviced_t)
+
+	allow $1 matahari_sysconfigd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, matahari_sysconfigd_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, matahari_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, matahari_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/matahari.te serefpolicy-3.7.19/policy/modules/services/matahari.te
--- nsaserefpolicy/policy/modules/services/matahari.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/matahari.te	2012-03-14 18:40:26.853470522 +0000
@@ -0,0 +1,109 @@
+policy_module(matahari,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute matahari_domain;
+
+matahari_domain_template(hostd)
+matahari_domain_template(netd)
+matahari_domain_template(rpcd)
+matahari_domain_template(serviced)
+matahari_domain_template(sysconfigd)
+
+type matahari_initrc_exec_t;
+init_script_file(matahari_initrc_exec_t)
+
+type matahari_var_lib_t;
+files_type(matahari_var_lib_t)
+
+type matahari_var_run_t;
+files_pid_file(matahari_var_run_t)
+
+########################################
+#
+# matahari_hostd local policy
+#
+
+dontaudit matahari_hostd_t self:capability sys_ptrace;
+
+dev_read_sysfs(matahari_hostd_t)
+dev_rw_mtrr(matahari_hostd_t)
+
+domain_use_interactive_fds(matahari_hostd_t)
+domain_read_all_domains_state(matahari_hostd_t)
+
+optional_policy(`
+	dbus_system_bus_client(matahari_hostd_t)
+')
+
+########################################
+#
+# matahari_netd local policy
+#
+
+domain_use_interactive_fds(matahari_netd_t)
+
+optional_policy(`
+	dbus_system_bus_client(matahari_netd_t)
+')
+
+######################################
+#
+# matahari_rpcd local policy
+#
+
+corecmd_exec_bin(matahari_rpcd_t)
+
+#auth_read_passwd(matahari_rpcd_t)
+
+files_read_usr_files(matahari_rpcd_t)
+
+########################################
+#
+# matahari_serviced local policy
+#
+allow matahari_serviced_t self:process setpgid;
+
+dev_read_sysfs(matahari_serviced_t)
+
+domain_use_interactive_fds(matahari_serviced_t)
+
+init_spec_domtrans_script(matahari_serviced_t)
+#init_domtrans_script(matahari_serviced_t)
+
+
+########################################
+#
+# matahari_sysconfigd local policy
+#
+dev_read_sysfs(matahari_sysconfigd_t)
+
+#######################################
+#
+# matahari domain local policy
+#
+
+allow matahari_domain self:capability sys_nice;
+allow matahari_domain self:process setsched;
+allow matahari_domain self:process signal;
+allow matahari_domain self:fifo_file rw_fifo_file_perms;
+allow matahari_domain self:unix_stream_socket create_stream_socket_perms;
+
+kernel_read_system_state(matahari_domain)
+kernel_read_network_state(matahari_domain)
+
+corenet_tcp_connect_matahari_port(matahari_domain)
+
+dev_read_urand(matahari_domain)
+
+files_read_etc_files(matahari_domain)
+files_read_etc_runtime_files(matahari_domain)
+
+logging_send_syslog_msg(matahari_domain)
+
+miscfiles_read_localization(matahari_domain)
+
+sysnet_dns_name_resolve(matahari_domain)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/memcached.fc serefpolicy-3.7.19/policy/modules/services/memcached.fc
--- nsaserefpolicy/policy/modules/services/memcached.fc	2011-03-17 07:21:22.225851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/memcached.fc	2012-01-25 17:03:05.544069292 +0000
@@ -3,3 +3,5 @@
 /usr/bin/memcached		--	gen_context(system_u:object_r:memcached_exec_t,s0)
 
 /var/run/memcached(/.*)?		gen_context(system_u:object_r:memcached_var_run_t,s0)
+
+/var/run/ipa_memcached(/.*)?        gen_context(system_u:object_r:memcached_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/memcached.if serefpolicy-3.7.19/policy/modules/services/memcached.if
--- nsaserefpolicy/policy/modules/services/memcached.if	2011-03-17 07:21:22.016851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/memcached.if	2012-02-23 16:04:27.927736112 +0000
@@ -59,6 +59,7 @@
 	gen_require(`
 		type memcached_t;
 		type memcached_initrc_exec_t;
+		type memcached_var_run_t;
 	')
 
 	allow $1 memcached_t:process { ptrace signal_perms };
@@ -69,5 +70,44 @@
 	role_transition $2 memcached_initrc_exec_t system_r;
 	allow $2 system_r;
 
+	files_search_pids($1)
 	admin_pattern($1, memcached_var_run_t)
 ')
+
+#######################################
+## <summary>
+##  Manage memcached PID files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`memcached_manage_pid_files',`
+    gen_require(`
+        type memcached_var_run_t;
+    ')
+
+    files_search_pids($1)
+    manage_files_pattern($1, memcached_var_run_t, memcached_var_run_t)
+')
+
+#######################################
+## <summary>
+##  Connect to memcached over a unix stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`memcached_stream_connect',`
+    gen_require(`
+        type memcached_t, memcached_var_run_t;
+    ')
+
+    files_search_pids($1)
+    stream_connect_pattern($1, memcached_var_run_t, memcached_var_run_t, memcached_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/memcached.te serefpolicy-3.7.19/policy/modules/services/memcached.te
--- nsaserefpolicy/policy/modules/services/memcached.te	2011-03-17 07:21:21.608851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/memcached.te	2012-01-25 17:02:54.895319852 +0000
@@ -21,7 +21,7 @@
 # memcached local policy
 #
 
-allow memcached_t self:capability { setuid setgid };
+allow memcached_t self:capability { setuid setgid sys_resource };
 dontaudit memcached_t self:capability sys_tty_config;
 allow memcached_t self:process { setrlimit signal_perms };
 allow memcached_t self:tcp_socket create_stream_socket_perms;
@@ -43,7 +43,8 @@
 
 manage_dirs_pattern(memcached_t, memcached_var_run_t, memcached_var_run_t)
 manage_files_pattern(memcached_t, memcached_var_run_t, memcached_var_run_t)
-files_pid_filetrans(memcached_t, memcached_var_run_t, { file dir })
+manage_sock_files_pattern(memcached_t, memcached_var_run_t, memcached_var_run_t)
+files_pid_filetrans(memcached_t, memcached_var_run_t, { file dir sock_file })
 
 kernel_read_kernel_sysctls(memcached_t)
 kernel_read_system_state(memcached_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/milter.fc serefpolicy-3.7.19/policy/modules/services/milter.fc
--- nsaserefpolicy/policy/modules/services/milter.fc	2011-03-17 07:21:22.126851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/milter.fc	2011-03-17 07:21:04.897851003 +0000
@@ -1,10 +1,15 @@
+/etc/mail/dkim-milter/keys(/.*)?        gen_context(system_u:object_r:dkim_milter_private_key_t,s0)
+
+/usr/sbin/dkim-filter           --      gen_context(system_u:object_r:dkim_milter_exec_t,s0)
 /usr/sbin/milter-greylist	--	gen_context(system_u:object_r:greylist_milter_exec_t,s0)
 /usr/sbin/milter-regex				--	gen_context(system_u:object_r:regex_milter_exec_t,s0)
 /usr/sbin/spamass-milter	--	gen_context(system_u:object_r:spamass_milter_exec_t,s0)
 
+/var/lib/dkim-milter(/.*)?			gen_context(system_u:object_r:dkim_milter_data_t,s0)
 /var/lib/milter-greylist(/.*)?		gen_context(system_u:object_r:greylist_milter_data_t,s0)
 /var/lib/spamass-milter(/.*)?		gen_context(system_u:object_r:spamass_milter_state_t,s0)
 
+/var/run/dkim-milter(/.*)?              gen_context(system_u:object_r:dkim_milter_data_t,s0)
 /var/run/milter-greylist(/.*)?		gen_context(system_u:object_r:greylist_milter_data_t,s0)
 /var/run/milter-greylist\.pid	--	gen_context(system_u:object_r:greylist_milter_data_t,s0)
 /var/run/spamass-milter(/.*)?		gen_context(system_u:object_r:spamass_milter_data_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/milter.if serefpolicy-3.7.19/policy/modules/services/milter.if
--- nsaserefpolicy/policy/modules/services/milter.if	2011-03-17 07:21:21.441851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/milter.if	2011-03-17 07:21:03.909851003 +0000
@@ -37,6 +37,8 @@
 
 	files_read_etc_files($1_milter_t)
 
+	kernel_dontaudit_read_system_state($1_milter_t)
+
 	miscfiles_read_localization($1_milter_t)
 
 	logging_send_syslog_msg($1_milter_t)
@@ -82,6 +84,24 @@
 
 ########################################
 ## <summary>
+##	Allow setattr of milter dirs
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`milter_setattr_all_dirs',`
+	gen_require(`
+		attribute milter_data_type;
+	')
+
+	setattr_dirs_pattern($1, milter_data_type, milter_data_type)
+')
+
+########################################
+## <summary>
 ##	Manage spamassassin milter state
 ## </summary>
 ## <param name="domain">
@@ -100,3 +120,22 @@
 	manage_dirs_pattern($1, spamass_milter_state_t, spamass_milter_state_t)
 	manage_lnk_files_pattern($1, spamass_milter_state_t, spamass_milter_state_t)
 ')
+
+#######################################
+## <summary>
+##      Delete dkim-milter PID files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`milter_delete_dkim_pid_files',`
+        gen_require(`
+                type dkim_milter_data_t;
+        ')
+
+        files_search_pids($1)
+        delete_files_pattern($1, dkim_milter_data_t, dkim_milter_data_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/milter.te serefpolicy-3.7.19/policy/modules/services/milter.te
--- nsaserefpolicy/policy/modules/services/milter.te	2011-03-17 07:21:21.199851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/milter.te	2011-03-17 07:21:03.712851003 +0000
@@ -10,6 +10,13 @@
 attribute milter_domains;
 attribute milter_data_type;
 
+# support for dkim-milter - domainKeys Identified Mail sender authentication sendmail milter
+milter_template(dkim)
+
+# type for the private key of dkim-milter
+type dkim_milter_private_key_t;
+files_type(dkim_milter_private_key_t)
+
 # currently-supported milters are milter-greylist, milter-regex and spamass-milter
 milter_template(greylist)
 milter_template(regex)
@@ -21,6 +28,23 @@
 type spamass_milter_state_t;
 files_type(spamass_milter_state_t)
 
+#######################################
+#
+# dkim-milter local policy
+#
+
+allow dkim_milter_t self:capability { kill setgid setuid };
+
+allow dkim_milter_t self:unix_stream_socket create_stream_socket_perms;
+
+read_files_pattern(dkim_milter_t, dkim_milter_private_key_t, dkim_milter_private_key_t)
+
+auth_use_nsswitch(dkim_milter_t)
+
+sysnet_dns_name_resolve(dkim_milter_t)
+
+mta_read_config(dkim_milter_t)
+
 ########################################
 #
 # milter-greylist local policy
@@ -39,6 +63,12 @@
 
 kernel_read_kernel_sysctls(greylist_milter_t)
 
+corecmd_exec_bin(greylist_milter_t)
+corecmd_exec_shell(greylist_milter_t)
+
+corenet_tcp_bind_movaz_ssc_port(greylist_milter_t)
+corenet_tcp_connect_movaz_ssc_port(greylist_milter_t)
+
 # Allow the milter to read a GeoIP database in /usr/share
 files_read_usr_files(greylist_milter_t)
 # The milter runs from /var/lib/milter-greylist and maintains files there
@@ -81,13 +111,11 @@
 allow spamass_milter_t spamass_milter_state_t:dir search_dir_perms;
 files_search_var_lib(spamass_milter_t)
 
-kernel_read_system_state(spamass_milter_t)
-
 # When used with -b or -B options, the milter invokes sendmail to send mail
-# to a spamtrap address, using popen()
-corecmd_exec_shell(spamass_milter_t)
+# to a spamtrap address, and with the -x option, it invokes sendmail to do
+# alias expansion. Since the sendmail binary is managed using alternatives,
+# it's a symlink that we need to be able to read.
 corecmd_read_bin_symlinks(spamass_milter_t)
-corecmd_search_bin(spamass_milter_t)
 
 mta_send_mail(spamass_milter_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/modemmanager.te serefpolicy-3.7.19/policy/modules/services/modemmanager.te
--- nsaserefpolicy/policy/modules/services/modemmanager.te	2011-03-17 07:21:21.933851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/modemmanager.te	2011-03-17 07:21:04.579851001 +0000
@@ -16,8 +16,8 @@
 #
 # ModemManager local policy
 #
-
-allow modemmanager_t self:process signal;
+allow modemmanager_t self:capability { net_admin sys_admin sys_tty_config };
+allow modemmanager_t self:process { getsched signal };  
 allow modemmanager_t self:fifo_file rw_file_perms;
 allow modemmanager_t self:unix_stream_socket create_stream_socket_perms;
 allow modemmanager_t self:netlink_kobject_uevent_socket create_socket_perms;
@@ -29,6 +29,7 @@
 
 files_read_etc_files(modemmanager_t)
 
+term_use_generic_ptys(modemmanager_t)
 term_use_unallocated_ttys(modemmanager_t)
 
 miscfiles_read_localization(modemmanager_t)
@@ -38,5 +39,13 @@
 networkmanager_dbus_chat(modemmanager_t)
 
 optional_policy(`
+	devicekit_dbus_chat_power(modemmanager_t)
+')
+
+optional_policy(`
+	policykit_dbus_chat(modemmanager_t)
+')
+
+optional_policy(`
 	udev_read_db(modemmanager_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mpd.fc serefpolicy-3.7.19/policy/modules/services/mpd.fc
--- nsaserefpolicy/policy/modules/services/mpd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mpd.fc	2011-03-17 07:21:03.643851002 +0000
@@ -0,0 +1,11 @@
+
+
+/etc/mpd\.conf		--	gen_context(system_u:object_r:mpd_etc_t,s0)	
+
+/etc/rc\.d/init\.d/mpd	--	gen_context(system_u:object_r:mpd_initrc_exec_t,s0)
+
+/usr/bin/mpd		--	gen_context(system_u:object_r:mpd_exec_t,s0)
+
+/var/lib/mpd(/.*)?		gen_context(system_u:object_r:mpd_var_lib_t,s0)
+/var/lib/mpd/music(/.*)?       gen_context(system_u:object_r:mpd_data_t,s0)    
+/var/lib/mpd/playlists(/.*)?   gen_context(system_u:object_r:mpd_data_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mpd.if serefpolicy-3.7.19/policy/modules/services/mpd.if
--- nsaserefpolicy/policy/modules/services/mpd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mpd.if	2011-03-17 07:21:05.060851001 +0000
@@ -0,0 +1,295 @@
+
+## <summary>policy for daemon for playing music</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run mpd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`mpd_domtrans',`
+	gen_require(`
+		type mpd_t, mpd_exec_t;
+	')
+
+	domtrans_pattern($1, mpd_exec_t, mpd_t)
+')
+
+
+########################################
+## <summary>
+##	Execute mpd server in the mpd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mpd_initrc_domtrans',`
+	gen_require(`
+		type mpd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, mpd_initrc_exec_t)
+')
+
+#######################################
+## <summary>
+##      Read mpd data files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`mpd_read_data_files',`
+        gen_require(`
+                type mpd_data_t;
+        ')
+
+		mpd_search_lib($1)
+        read_files_pattern($1, mpd_data_t, mpd_data_t)
+')
+
+#######################################
+## <summary>
+##      Read mpd tmpfs files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`mpd_read_tmpfs_files',`
+        gen_require(`
+                type mpd_tmpfs_t;
+        ')
+
+		fs_search_tmpfs($1)
+        read_files_pattern($1, mpd_tmpfs_t, mpd_tmpfs_t)
+')
+
+###################################
+## <summary>
+##      Manage mpd tmpfs files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`mpd_manage_tmpfs_files',`
+        gen_require(`
+                type mpd_tmpfs_t;
+        ')
+
+	fs_search_tmpfs($1)
+	manage_files_pattern($1, mpd_tmpfs_t, mpd_tmpfs_t)
+	manage_lnk_files_pattern($1, mpd_tmpfs_t, mpd_tmpfs_t)
+')
+
+######################################
+## <summary>
+##      Manage mpd data files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`mpd_manage_data_files',`
+        gen_require(`
+                type mpd_data_t;
+        ')
+
+        files_search_var_lib($1)
+        mpd_search_lib($1)
+        manage_files_pattern($1, mpd_data_t, mpd_data_t)
+')
+
+########################################
+## <summary>
+##	Search mpd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mpd_search_lib',`
+	gen_require(`
+		type mpd_var_lib_t;
+	')
+
+	allow $1 mpd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read mpd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mpd_read_lib_files',`
+	gen_require(`
+		type mpd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, mpd_var_lib_t, mpd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	mpd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mpd_manage_lib_files',`
+	gen_require(`
+		type mpd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, mpd_var_lib_t, mpd_var_lib_t)
+')
+
+#######################################
+## <summary>
+##      Create an object in the root directory, with a private
+##      type using a type transition.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+## <param name="private type">
+##      <summary>
+##      The type of the object to be created.
+##      </summary>
+## </param>
+## <param name="object">
+##      <summary>
+##      The object class of the object being created.
+##      </summary>
+## </param>
+#
+interface(`mpd_var_lib_filetrans',`
+    gen_require(`
+        type mpd_var_lib_t;
+    ')
+
+    filetrans_pattern($1, mpd_var_lib_t, $2, $3)
+')
+
+########################################
+## <summary>
+##	Manage mpd lib dirs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mpd_manage_lib_dirs',`
+	gen_require(`
+		type mpd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_dirs_pattern($1, mpd_var_lib_t, mpd_var_lib_t)
+')
+
+#######################################
+## <summary>
+##  Send and receive messages from
+##  mpd over dbus.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`mpd_dbus_chat',`
+    gen_require(`
+        type mpd_t;
+        class dbus send_msg;
+    ')
+
+    allow $1 mpd_t:dbus send_msg;
+    allow mpd_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an mpd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`mpd_admin',`
+	gen_require(`
+		type mpd_t;
+		type mpd_initrc_exec_t;
+		type mpd_data_t;
+		type mpd_etc_t;
+		type mpd_log_t;
+		type mpd_tmpfs_t;
+        type mpd_var_lib_t;
+	')
+
+	allow $1 mpd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, mpd_t)
+
+	mpd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 mpd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	admin_pattern($1, mpd_etc_t)
+	files_search_etc($1)
+
+	files_search_var_lib($1)
+	admin_pattern($1, mpd_var_lib_t)
+	
+	mpd_search_lib($1)
+	admin_pattern($1, mpd_data_t)
+
+	admin_pattern($1, mpd_log_t)
+
+	fs_search_tmpfs($1)
+	admin_pattern($1, mpd_tmpfs_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mpd.te serefpolicy-3.7.19/policy/modules/services/mpd.te
--- nsaserefpolicy/policy/modules/services/mpd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mpd.te	2011-08-30 14:20:06.185160002 +0000
@@ -0,0 +1,139 @@
+
+policy_module(mpd,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type mpd_t;
+type mpd_exec_t;
+init_daemon_domain(mpd_t, mpd_exec_t)
+
+type mpd_initrc_exec_t;
+init_script_file(mpd_initrc_exec_t)
+
+type mpd_etc_t;
+files_config_file(mpd_etc_t)
+
+# type for music content
+type mpd_data_t;
+files_type(mpd_data_t)
+
+type mpd_log_t;
+logging_log_file(mpd_log_t)
+
+type mpd_tmp_t;
+files_tmp_file(mpd_tmp_t)
+
+type mpd_tmpfs_t;
+files_tmpfs_file(mpd_tmpfs_t)
+
+type mpd_var_lib_t;
+files_type(mpd_var_lib_t)
+
+########################################
+#
+# mpd local policy
+#
+
+#cjp: dac_override bug in mpd relating to mpd.log file
+allow mpd_t self:capability { dac_override kill setgid setuid };
+allow mpd_t self:process { getsched setsched setrlimit signal signull };
+
+allow mpd_t self:fifo_file rw_fifo_file_perms;
+allow mpd_t self:unix_stream_socket { connectto create_stream_socket_perms };
+allow mpd_t self:tcp_socket create_stream_socket_perms;
+allow mpd_t self:netlink_kobject_uevent_socket create_socket_perms;
+allow mpd_t self:unix_dgram_socket { create_socket_perms sendto };
+
+read_files_pattern(mpd_t, mpd_etc_t, mpd_etc_t)
+
+manage_dirs_pattern(mpd_t, mpd_data_t, mpd_data_t)
+manage_files_pattern(mpd_t, mpd_data_t, mpd_data_t)
+manage_lnk_files_pattern(mpd_t, mpd_data_t, mpd_data_t)
+
+manage_dirs_pattern(mpd_t, mpd_tmp_t, mpd_tmp_t)
+manage_files_pattern(mpd_t, mpd_tmp_t, mpd_tmp_t)
+manage_sock_files_pattern(mpd_t, mpd_tmp_t, mpd_tmp_t)
+files_tmp_filetrans(mpd_t, mpd_tmp_t, { dir file sock_file })
+
+manage_files_pattern(mpd_t, mpd_tmpfs_t, mpd_tmpfs_t)
+manage_dirs_pattern(mpd_t, mpd_tmpfs_t, mpd_tmpfs_t)
+fs_tmpfs_filetrans(mpd_t, mpd_tmpfs_t, file )
+
+manage_dirs_pattern(mpd_t, mpd_var_lib_t, mpd_var_lib_t)
+manage_files_pattern(mpd_t, mpd_var_lib_t, mpd_var_lib_t)
+manage_lnk_files_pattern(mpd_t, mpd_var_lib_t, mpd_var_lib_t)
+files_var_lib_filetrans(mpd_t, mpd_var_lib_t, { dir file lnk_file })
+
+# needed by pulseaudio
+kernel_getattr_proc(mpd_t)
+kernel_read_system_state(mpd_t)
+kernel_read_kernel_sysctls(mpd_t)
+
+corecmd_exec_bin(mpd_t)
+
+corenet_sendrecv_pulseaudio_client_packets(mpd_t)
+corenet_tcp_connect_http_port(mpd_t)
+corenet_tcp_connect_http_cache_port(mpd_t)
+corenet_tcp_connect_pulseaudio_port(mpd_t)
+corenet_tcp_bind_mpd_port(mpd_t)
+corenet_tcp_bind_soundd_port(mpd_t)
+
+dev_read_sound(mpd_t)
+dev_write_sound(mpd_t)
+dev_read_sysfs(mpd_t)
+
+files_read_usr_files(mpd_t)
+
+fs_getattr_tmpfs(mpd_t)
+fs_list_inotifyfs(mpd_t)
+fs_rw_anon_inodefs_files(mpd_t)
+
+auth_use_nsswitch(mpd_t)
+
+logging_send_syslog_msg(mpd_t)
+
+miscfiles_read_localization(mpd_t)
+
+userdom_read_home_audio_files(mpd_t)
+userdom_read_user_tmpfs_files(mpd_t)
+
+tunable_policy(`use_samba_home_dirs',`
+    fs_read_cifs_files(mpd_t)
+    fs_read_cifs_symlinks(mpd_t)
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+    fs_read_nfs_files(mpd_t)
+    fs_read_nfs_symlinks(mpd_t)
+')
+
+optional_policy(`
+    consolekit_dbus_chat(mpd_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(mpd_t)
+')
+
+optional_policy(`
+		pulseaudio_exec(mpd_t)
+    	pulseaudio_stream_connect(mpd_t)
+    	pulseaudio_signull(mpd_t)
+')
+
+optional_policy(`
+    rtkit_daemon_dontaudit_dbus_chat(mpd_t)
+')
+
+optional_policy(`
+        udev_read_db(mpd_t)
+')
+
+
+optional_policy(`
+	xserver_dontaudit_stream_connect(mpd_t)
+	xserver_dontaudit_read_xdm_pid(mpd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mta.fc serefpolicy-3.7.19/policy/modules/services/mta.fc
--- nsaserefpolicy/policy/modules/services/mta.fc	2011-03-17 07:21:21.016851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mta.fc	2012-03-19 17:46:22.268050560 +0000
@@ -1,4 +1,7 @@
-HOME_DIR/\.forward	--	gen_context(system_u:object_r:mail_forward_t,s0)
+HOME_DIR/\.forward[^/]*	--	gen_context(system_u:object_r:mail_home_t,s0)
+HOME_DIR/dead.letter	--	gen_context(system_u:object_r:mail_home_t,s0)
+HOME_DIR/.mailrc    --  gen_context(system_u:object_r:mail_home_t,s0)
+HOME_DIR/Maildir(/.*)?         gen_context(system_u:object_r:mail_home_rw_t,s0)
 
 /bin/mail(x)?		--	gen_context(system_u:object_r:sendmail_exec_t,s0)
 
@@ -13,6 +16,10 @@
 
 /usr/bin/esmtp			-- gen_context(system_u:object_r:sendmail_exec_t,s0)
 
+/root/\.forward		--	gen_context(system_u:object_r:mail_forward_t,s0)
+/root/.mailrc       --  gen_context(system_u:object_r:mail_home_t,s0)
+/root/Maildir(/.*)?            gen_context(system_u:object_r:mail_home_rw_t,s0)
+
 /usr/lib(64)?/sendmail	--	gen_context(system_u:object_r:sendmail_exec_t,s0)
 /usr/lib/courier/bin/sendmail	--	gen_context(system_u:object_r:sendmail_exec_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mta.if serefpolicy-3.7.19/policy/modules/services/mta.if
--- nsaserefpolicy/policy/modules/services/mta.if	2011-03-17 07:21:21.496851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mta.if	2012-07-17 12:36:37.015433184 +0000
@@ -104,6 +104,7 @@
 
 	optional_policy(`
 		postfix_domtrans_user_mail_handler($1_mail_t)
+		postfix_rw_master_pipes($1_mail_t)
 	')
 
 	optional_policy(`
@@ -144,6 +145,30 @@
 	')
 ')
 
+#######################################
+## <summary>
+## 	Type transition files created in calling dir 
+## 	to the mail address aliases type.
+## </summary>
+## 	<param name="domain">
+## 	<summary>
+## 	Domain allowed access.
+## 	</summary>
+## </param>
+## <param name="domain">
+## 	<summary>
+## 	Directory to transition on.
+## 	</summary>
+## </param>
+#
+interface(`mta_filetrans_aliases',`
+	    gen_require(`
+       		type etc_aliases_t;
+    ')
+
+	filetrans_pattern($1, $2, etc_aliases_t, file)
+')
+
 ########################################
 ## <summary>
 ##	Role access for mta
@@ -176,6 +201,47 @@
 	allow mta_user_agent $2:fifo_file { read write };
 ')
 
+######################################
+## <summary>
+##  ALlow domain to read mail content in the homedir 
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`mta_read_home',`
+    gen_require(`
+        type mail_home_t;
+    ')
+
+    userdom_search_user_home_dirs($1)
+    userdom_search_admin_dir($1)
+    read_files_pattern($1, mail_home_t, mail_home_t)
+')
+
+###################################
+## <summary>
+##      Allow domain to manage mail content in the homedir
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`mta_manage_home_rw',`
+        gen_require(`
+                type mail_home_rw_t;
+        ')
+
+	userdom_search_user_home_dirs($1)
+    manage_files_pattern($1, mail_home_rw_t, mail_home_rw_t)
+    manage_dirs_pattern($1, mail_home_rw_t, mail_home_rw_t)
+    read_lnk_files_pattern($1, mail_home_rw_t, mail_home_rw_t)
+')
+
 ########################################
 ## <summary>
 ##	Make the specified domain usable for a mail server.
@@ -220,6 +286,25 @@
 	application_executable_file($1)
 ')
 
+######################################
+## <summary>
+##  Dontaudit read and write an leaked file descriptors
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`mta_dontaudit_leaks_system_mail',`
+    gen_require(`
+        type system_mail_t;
+    ')
+
+    dontaudit $1 system_mail_t:fifo_file write;
+    dontaudit $1 system_mail_t:tcp_socket { read write };
+')
+
 ########################################
 ## <summary>
 ##	Make the specified type by a system MTA.
@@ -335,6 +420,7 @@
 		# apache should set close-on-exec
 		apache_dontaudit_rw_stream_sockets($1)
 		apache_dontaudit_rw_sys_script_stream_sockets($1)
+		apache_append_log($1)
 	')
 ')
 
@@ -356,11 +442,35 @@
 	')
 
 	allow $1 mta_exec_type:lnk_file read_lnk_file_perms;
+	corecmd_read_bin_symlinks($1)
 	domtrans_pattern($1, mta_exec_type, system_mail_t)
 
 	allow mta_user_agent $1:fd use;
 	allow mta_user_agent $1:process sigchld;
 	allow mta_user_agent $1:fifo_file rw_fifo_file_perms;
+
+	ifdef(`hide_broken_symptoms', `
+		dontaudit system_mail_t $1:socket_class_set { read write };
+	')
+')
+
+########################################
+## <summary>
+##	Send mail client a signal
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+#
+interface(`mta_signal',`
+	gen_require(`
+		type system_mail_t;
+	')
+
+	allow $1 system_mail_t:process signal;
 ')
 
 ########################################
@@ -390,12 +500,55 @@
 #
 interface(`mta_sendmail_domtrans',`
 	gen_require(`
-		type sendmail_exec_t;
+		attribute mta_exec_type;
+		attribute mta_user_agent;
 	')
 
-	files_search_usr($1)
-	corecmd_read_bin_symlinks($1)
-	domain_auto_trans($1, sendmail_exec_t, $2)
+		files_search_usr($1)
+		allow $1 mta_exec_type:lnk_file read_lnk_file_perms;
+		corecmd_read_bin_symlinks($1)
+
+		allow $2 mta_exec_type:file entrypoint;
+		domtrans_pattern($1, mta_exec_type, $2)
+		allow mta_user_agent $1:fd use;
+		allow mta_user_agent $1:process sigchld;
+		allow mta_user_agent $1:fifo_file { read write };
+')
+
+#######################################
+## <summary>
+##      Send system mail client a signal
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`mta_signal_system_mail',`
+        gen_require(`
+                type system_mail_t;
+        ')
+
+        allow $1 system_mail_t:process signal;
+')
+
+#######################################
+## <summary>
+##      Send system mail client a kill signal
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`mta_kill_system_mail',`
+        gen_require(`
+                type system_mail_t;
+        ')
+
+        allow $1 system_mail_t:process sigkill;
 ')
 
 ########################################
@@ -454,7 +607,8 @@
 		type etc_mail_t;
 	')
 
-	write_files_pattern($1, etc_mail_t, etc_mail_t)
+	manage_files_pattern($1, etc_mail_t, etc_mail_t)
+	allow $1 etc_mail_t:file setattr;
 ')
 
 ########################################
@@ -678,7 +832,7 @@
 	files_search_spool($1)
 	allow $1 mail_spool_t:dir list_dir_perms;
 	allow $1 mail_spool_t:file setattr;
-	rw_files_pattern($1, mail_spool_t, mail_spool_t)
+	manage_files_pattern($1, mail_spool_t, mail_spool_t)
 	read_lnk_files_pattern($1, mail_spool_t, mail_spool_t)
 ')
 
@@ -765,6 +919,25 @@
 
 #######################################
 ## <summary>
+##	List the mail queue.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mta_list_queue',`
+	gen_require(`
+		type mqueue_spool_t;
+	')
+
+	allow $1 mqueue_spool_t:dir list_dir_perms;
+	files_search_spool($1)
+')
+
+#######################################
+## <summary>
 ##	Read the mail queue.
 ## </summary>
 ## <param name="domain">
@@ -823,6 +996,36 @@
 	manage_files_pattern($1, mqueue_spool_t, mqueue_spool_t)
 ')
 
+######################################
+## <summary>
+##  Type transition files created in calling dir 
+##  to the mail address aliases type.
+## </summary>
+##  <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="private_type">
+##  <summary>
+##  Directory to transition on.
+##  </summary>
+## </param>
+## <param name="object">
+##  <summary>
+##  The object class of the object being created.
+##  </summary>
+## </param>
+#
+interface(`mta_spool_filetrans_queue',`
+        gen_require(`
+            type mqueue_spool_t;
+    ')
+
+	files_search_spool($1)
+    filetrans_pattern($1, mqueue_spool_t, $2, $3)
+')
+
 #######################################
 ## <summary>
 ##	Read sendmail binary.
@@ -860,3 +1063,21 @@
 
 	allow $1 user_mail_domain:unix_stream_socket rw_socket_perms;
 ')
+
+#######################################
+## <summary>
+##	Send all user mail client a signal
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mta_signal_user_agent',`
+	gen_require(`
+		attribute mta_user_agent;
+	')
+
+	allow $1 mta_user_agent:process signal;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mta.te serefpolicy-3.7.19/policy/modules/services/mta.te
--- nsaserefpolicy/policy/modules/services/mta.te	2011-03-17 07:21:21.390851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mta.te	2012-05-16 10:08:48.410175820 +0000
@@ -21,8 +21,11 @@
 type etc_mail_t;
 files_config_file(etc_mail_t)
 
-type mail_forward_t;
-files_type(mail_forward_t)
+type mail_home_t alias mail_forward_t;
+userdom_user_home_content(mail_home_t)
+
+type mail_home_rw_t;
+userdom_user_home_content(mail_home_rw_t)
 
 type mqueue_spool_t;
 files_mountpoint(mqueue_spool_t)
@@ -51,21 +54,24 @@
 
 # newalias required this, not sure if it is needed in 'if' file
 allow system_mail_t self:capability { dac_override fowner };
+allow system_mail_t self:process setsched;
+
 allow system_mail_t self:fifo_file rw_fifo_file_perms;
 
 read_files_pattern(system_mail_t, etc_mail_t, etc_mail_t)
 
 read_files_pattern(system_mail_t, mailcontent_type, mailcontent_type)
 
-allow system_mail_t mail_forward_t:file read_file_perms;
+append_files_pattern(system_mail_t, mail_home_t, mail_home_t)
+
+allow system_mail_t mail_home_t:file read_file_perms;
 
 allow system_mail_t mta_exec_type:file entrypoint;
 
 can_exec(system_mail_t, mta_exec_type)
 
-kernel_read_system_state(system_mail_t)
-kernel_read_network_state(system_mail_t)
-kernel_request_load_module(system_mail_t)
+files_read_all_tmp_files(system_mail_t)
+files_read_usr_files(system_mail_t)
 
 dev_read_sysfs(system_mail_t)
 dev_read_rand(system_mail_t)
@@ -75,10 +81,18 @@
 
 selinux_getattr_fs(system_mail_t)
 
+term_dontaudit_use_unallocated_ttys(system_mail_t)
+
 init_use_script_ptys(system_mail_t)
 
 userdom_use_user_terminals(system_mail_t)
 userdom_dontaudit_search_user_home_dirs(system_mail_t)
+userdom_dontaudit_list_admin_dir(system_mail_t)
+
+manage_dirs_pattern(system_mail_t, mail_home_rw_t, mail_home_rw_t)
+manage_files_pattern(system_mail_t, mail_home_rw_t, mail_home_rw_t)
+
+logging_append_all_logs(system_mail_t)
 
 optional_policy(`
 	apache_read_squirrelmail_data(system_mail_t)
@@ -89,6 +103,7 @@
 	apache_dontaudit_rw_stream_sockets(system_mail_t)
 	apache_dontaudit_rw_tcp_sockets(system_mail_t)
 	apache_dontaudit_rw_sys_script_stream_sockets(system_mail_t)
+	apache_dontaudit_rw_tmp_files(system_mail_t)
 ')
 
 optional_policy(`
@@ -100,13 +115,25 @@
 ')
 
 optional_policy(`
+	bugzilla_search_dirs(system_mail_t)
+	bugzilla_dontaudit_rw_script_stream_sockets(system_mail_t)
+')
+
+optional_policy(`
 	clamav_stream_connect(system_mail_t)
 	clamav_append_log(system_mail_t)
 ')
 
 optional_policy(`
+    courier_stream_connect_authdaemon(system_mail_t)
+')
+
+optional_policy(`
 	cron_read_system_job_tmp_files(system_mail_t)
 	cron_dontaudit_write_pipes(system_mail_t)
+	cron_rw_system_job_stream_sockets(system_mail_t)
+	cron_rw_inherited_spool_files(system_mail_t)
+	cron_rw_inherited_user_spool_files(system_mail_t)
 ')
 
 optional_policy(`
@@ -120,12 +147,9 @@
 ')
 
 optional_policy(`
-	exim_domtrans(system_mail_t)
-	exim_manage_log(system_mail_t)
-')
-
-optional_policy(`
 	fail2ban_append_log(system_mail_t)
+	fail2ban_dontaudit_leaks(system_mail_t)
+	fail2ban_rw_inherited_tmp_files(system_mail_t)
 ')
 
 optional_policy(`
@@ -142,7 +166,12 @@
 ')
 
 optional_policy(`
+	munin_dontaudit_leaks(system_mail_t)
+')
+
+optional_policy(`
 	nagios_read_tmp_files(system_mail_t)
+	nagios_dontaudit_rw_log(system_mail_t)
 ')
 
 optional_policy(`
@@ -154,22 +183,13 @@
 	files_etc_filetrans(system_mail_t, etc_aliases_t, { file lnk_file sock_file fifo_file })
 
 	domain_use_interactive_fds(system_mail_t)
-
-	# postfix needs this for newaliases
-	files_getattr_tmp_dirs(system_mail_t)
-
-	postfix_exec_master(system_mail_t)
-	postfix_read_config(system_mail_t)
-	postfix_search_spool(system_mail_t)
-
-	ifdef(`distro_redhat',`
-		# compatability for old default main.cf
-		postfix_config_filetrans(system_mail_t, etc_aliases_t, { dir file lnk_file sock_file fifo_file })
-	')
 ')
 
 optional_policy(`
 	qmail_domtrans_inject(system_mail_t)
+	qmail_manage_spool_dirs(system_mail_t)
+	qmail_manage_spool_files(system_mail_t)
+	qmail_rw_spool_pipes(system_mail_t)
 ')
 
 optional_policy(`
@@ -185,6 +205,10 @@
 ')
 
 optional_policy(`
+	spamd_stream_connect(system_mail_t)
+')
+
+optional_policy(`
 	smartmon_read_tmp_files(system_mail_t)
 ')
 
@@ -216,10 +240,14 @@
 create_lnk_files_pattern(mailserver_delivery, mail_spool_t, mail_spool_t)
 read_lnk_files_pattern(mailserver_delivery, mail_spool_t, mail_spool_t)
 
-read_files_pattern(mailserver_delivery, mail_forward_t, mail_forward_t)
+userdom_search_admin_dir(mailserver_delivery)
+read_files_pattern(mailserver_delivery, mail_home_t, mail_home_t)
 
 read_files_pattern(mailserver_delivery, system_mail_tmp_t, system_mail_tmp_t)
 
+manage_dirs_pattern(mailserver_delivery, mail_home_rw_t, mail_home_rw_t)
+manage_files_pattern(mailserver_delivery, mail_home_rw_t, mail_home_rw_t)
+
 tunable_policy(`use_samba_home_dirs',`
 	fs_manage_cifs_dirs(mailserver_delivery)
 	fs_manage_cifs_files(mailserver_delivery)
@@ -238,6 +266,10 @@
 ')
 
 optional_policy(`
+	logwatch_search_cache_dir(mailserver_delivery)
+')
+
+optional_policy(`
 	# so MTA can access /var/lib/mailman/mail/wrapper
 	files_search_var_lib(mailserver_delivery)
 
@@ -245,6 +277,10 @@
 	mailman_read_data_symlinks(mailserver_delivery)
 ')
 
+optional_policy(`
+	uucp_domtrans_uux(mailserver_delivery)
+')
+
 ########################################
 #
 # User send mail local policy
@@ -252,6 +288,12 @@
 
 domain_use_interactive_fds(user_mail_t)
 
+append_files_pattern(user_mail_domain, mail_home_t, mail_home_t)
+read_files_pattern(user_mail_domain, mail_home_t, mail_home_t)
+
+manage_dirs_pattern(user_mail_domain, mail_home_rw_t, mail_home_rw_t)
+manage_files_pattern(user_mail_domain, mail_home_rw_t, mail_home_rw_t)
+
 userdom_use_user_terminals(user_mail_t)
 # Write to the user domain tty. cjp: why?
 userdom_use_user_terminals(mta_user_agent)
@@ -279,6 +321,10 @@
 ')
 
 optional_policy(`
+	read_lnk_files_pattern(user_mail_t, mail_spool_t, mail_spool_t)
+')
+
+optional_policy(`
 	allow user_mail_t self:capability dac_override;
 
 	# Read user temporary files.
@@ -288,3 +334,47 @@
 	postfix_read_config(user_mail_t)
 	postfix_list_spool(user_mail_t)
 ')
+
+#######################################
+#
+# Common user_mail_domain policy
+#
+
+read_files_pattern(user_mail_domain, etc_aliases_t, etc_aliases_t)
+
+# Write to /var/spool/mail and /var/spool/mqueue.
+manage_files_pattern(user_mail_domain, mail_spool_t, mail_spool_t)
+manage_files_pattern(user_mail_domain, mqueue_spool_t, mqueue_spool_t)
+read_lnk_files_pattern(user_mail_domain, mail_spool_t, mail_spool_t)
+read_lnk_files_pattern(user_mail_domain, mqueue_spool_t, mqueue_spool_t)
+
+kernel_read_system_state(user_mail_domain)
+kernel_read_network_state(user_mail_domain)
+kernel_request_load_module(user_mail_domain)
+
+dev_read_urand(user_mail_domain)
+
+optional_policy(`
+	courier_manage_spool_dirs(user_mail_domain)
+	courier_manage_spool_files(user_mail_domain)
+	courier_rw_spool_pipes(user_mail_domain)
+')
+
+optional_policy(`
+	# postfix needs this for newaliases
+	files_getattr_tmp_dirs(user_mail_domain)
+
+    postfix_exec_master(user_mail_domain)
+    postfix_read_config(user_mail_domain)
+    postfix_search_spool(user_mail_domain)
+
+    ifdef(`distro_redhat',`
+			# compatability for old default main.cf
+			postfix_config_filetrans(user_mail_domain, etc_aliases_t, { dir file lnk_file sock_file fifo_file })
+        ')
+')
+
+optional_policy(`
+    exim_domtrans(user_mail_domain)
+    exim_manage_log(user_mail_domain)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/munin.fc serefpolicy-3.7.19/policy/modules/services/munin.fc
--- nsaserefpolicy/policy/modules/services/munin.fc	2011-03-17 07:21:21.626851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/munin.fc	2012-01-26 14:46:57.097316414 +0000
@@ -6,6 +6,69 @@
 /usr/share/munin/munin-.*	--	gen_context(system_u:object_r:munin_exec_t,s0)
 /usr/share/munin/plugins/.*	--	gen_context(system_u:object_r:munin_exec_t,s0)
 
+# disk plugins
+/usr/share/munin/plugins/diskstat.* --  gen_context(system_u:object_r:munin_disk_plugin_exec_t,s0)
+/usr/share/munin/plugins/df.*		--	gen_context(system_u:object_r:munin_disk_plugin_exec_t,s0)
+/usr/share/munin/plugins/hddtemp.*	--	gen_context(system_u:object_r:munin_disk_plugin_exec_t,s0)
+/usr/share/munin/plugins/smart_.*	--	gen_context(system_u:object_r:munin_disk_plugin_exec_t,s0)
+
+# mail plugins
+/usr/share/munin/plugins/courier_mta_.*	--	gen_context(system_u:object_r:munin_mail_plugin_exec_t,s0)
+/usr/share/munin/plugins/exim_mail.*	--	gen_context(system_u:object_r:munin_mail_plugin_exec_t,s0)
+/usr/share/munin/plugins/mailman		--	gen_context(system_u:object_r:munin_mail_plugin_exec_t,s0)
+/usr/share/munin/plugins/mailscanner	--	gen_context(system_u:object_r:munin_mail_plugin_exec_t,s0)
+/usr/share/munin/plugins/postfix_mail.*	--	gen_context(system_u:object_r:munin_mail_plugin_exec_t,s0)
+/usr/share/munin/plugins/sendmail_.*    --	gen_context(system_u:object_r:munin_mail_plugin_exec_t,s0)
+/usr/share/munin/plugins/qmail.* 		--	gen_context(system_u:object_r:munin_mail_plugin_exec_t,s0)
+
+# selinux plugins
+/usr/share/munin/plugins/selinux_avcstat    --  gen_context(system_u:object_r:munin_selinux_plugin_exec_t,s0)
+
+# services plugins
+/usr/share/munin/plugins/apache_.*		--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/asterisk_.*	--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/http_loadtime	--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/fail2ban		--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/lpstat			--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/mysql_.*		--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/named			--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/ntp_.*			--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/nut.*         	--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/openvpn		--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/ping_ 	        --	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/postgres_.*	--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/samba			--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/slapd_.*		--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/snmp_.*     	--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/squid_.*     	--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/tomcat_.*     	--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+/usr/share/munin/plugins/varnish_.*		--	gen_context(system_u:object_r:munin_services_plugin_exec_t,s0)
+
+# system plugins
+/usr/share/munin/plugins/acpi		--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/cpu.*		--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/forks   	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/if_.* 		--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/iostat.*   --	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/interrupts --	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/irqstats   --	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/load	    --	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/memory		--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/munin_*	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/netstat	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/nfs.*	 	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/open_files	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/proc_pri	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/processes 	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/swap		--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/threads 	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/uptime		--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/users	 	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+/usr/share/munin/plugins/yum      	--	gen_context(system_u:object_r:munin_system_plugin_exec_t,s0)
+
 /var/lib/munin(/.*)?			gen_context(system_u:object_r:munin_var_lib_t,s0)
+/var/lib/munin/plugin-state(/.*)?   gen_context(system_u:object_r:munin_plugin_state_t,s0)
 /var/log/munin.*			gen_context(system_u:object_r:munin_log_t,s0)
 /var/run/munin(/.*)?			gen_context(system_u:object_r:munin_var_run_t,s0)
+/var/www/html/munin(/.*)?		gen_context(system_u:object_r:httpd_munin_content_t,s0)
+/var/www/html/munin/cgi(/.*)?		gen_context(system_u:object_r:httpd_munin_script_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/munin.if serefpolicy-3.7.19/policy/modules/services/munin.if
--- nsaserefpolicy/policy/modules/services/munin.if	2011-03-17 07:21:21.547851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/munin.if	2012-01-26 13:57:37.520953900 +0000
@@ -16,8 +16,7 @@
 		type munin_var_run_t, munin_t;
 	')
 
-	allow $1 munin_t:unix_stream_socket connectto;
-	allow $1 munin_var_run_t:sock_file { getattr write };
+	stream_connect_pattern($1, munin_var_run_t, munin_var_run_t, munin_t)
 	files_search_pids($1)
 ')
 
@@ -43,6 +42,24 @@
 	files_search_etc($1)
 ')
 
+######################################
+## <summary>
+##  dontaudit read and write an leaked file descriptors
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`munin_dontaudit_leaks',`
+    gen_require(`
+        type munin_t;
+    ')
+
+    dontaudit $1 munin_t:tcp_socket { read write };
+')
+
 #######################################
 ## <summary>
 ##	Append to the munin log.
@@ -102,6 +119,47 @@
 	dontaudit $1 munin_var_lib_t:dir search_dir_perms;
 ')
 
+######################################
+## <summary>
+##  Create a set of derived types for various
+##  munin plugins,
+## </summary>
+## <param name="plugins_group_name">
+##  <summary>
+##  The name to be used for deriving type names.
+##  </summary>
+## </param>
+#
+template(`munin_plugin_template',`
+
+	gen_require(`
+		type munin_t, munin_exec_t;
+		type munin_etc_t;
+        attribute munin_plugin_domain;
+	')
+
+	type munin_$1_plugin_t, munin_plugin_domain;
+	type munin_$1_plugin_exec_t;
+	application_domain(munin_$1_plugin_t, munin_$1_plugin_exec_t)
+	role system_r types munin_$1_plugin_t;
+
+	type munin_$1_plugin_tmp_t;
+	files_tmp_file(munin_$1_plugin_tmp_t)
+
+	allow munin_t munin_$1_plugin_t:process signal;
+
+	allow munin_$1_plugin_t self:fifo_file rw_fifo_file_perms;
+
+	manage_files_pattern(munin_$1_plugin_t, munin_$1_plugin_tmp_t, munin_$1_plugin_tmp_t)
+	manage_dirs_pattern(munin_$1_plugin_t, munin_$1_plugin_tmp_t, munin_$1_plugin_tmp_t)
+	files_tmp_filetrans(munin_$1_plugin_t, munin_$1_plugin_tmp_t, { dir file })
+
+	# automatic transition rules from munin domain
+	# to specific munin plugin domain
+	domtrans_pattern(munin_t, munin_$1_plugin_exec_t, munin_$1_plugin_t)
+	allow munin_t munin_$1_plugin_t:process signal_perms;
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/munin.te serefpolicy-3.7.19/policy/modules/services/munin.te
--- nsaserefpolicy/policy/modules/services/munin.te	2011-03-17 07:21:21.574851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/munin.te	2012-08-08 01:37:12.441409853 +0000
@@ -6,6 +6,8 @@
 # Declarations
 #
 
+attribute munin_plugin_domain;
+
 type munin_t alias lrrd_t;
 type munin_exec_t alias lrrd_exec_t;
 init_daemon_domain(munin_t, munin_exec_t)
@@ -28,12 +30,23 @@
 type munin_var_run_t alias lrrd_var_run_t;
 files_pid_file(munin_var_run_t)
 
+type munin_plugin_state_t;
+files_type(munin_plugin_state_t)
+
+# munin plugins declaration
+
+munin_plugin_template(disk)
+munin_plugin_template(mail)
+munin_plugin_template(selinux)
+munin_plugin_template(services)
+munin_plugin_template(system)
+
 ########################################
 #
 # Local policy
 #
 
-allow munin_t self:capability { chown dac_override setgid setuid };
+allow munin_t self:capability { chown dac_override setgid setuid sys_rawio };
 dontaudit munin_t self:capability sys_tty_config;
 allow munin_t self:process { getsched setsched signal_perms };
 allow munin_t self:unix_stream_socket { create_stream_socket_perms connectto };
@@ -55,7 +68,8 @@
 
 manage_dirs_pattern(munin_t, munin_tmp_t, munin_tmp_t)
 manage_files_pattern(munin_t, munin_tmp_t, munin_tmp_t)
-files_tmp_filetrans(munin_t, munin_tmp_t, { file dir })
+manage_sock_files_pattern(munin_t, munin_tmp_t, munin_tmp_t)
+files_tmp_filetrans(munin_t, munin_tmp_t, { file dir sock_file })
 
 # Allow access to the munin databases
 manage_dirs_pattern(munin_t, munin_var_lib_t, munin_var_lib_t)
@@ -67,6 +81,8 @@
 manage_sock_files_pattern(munin_t, munin_var_run_t, munin_var_run_t)
 files_pid_filetrans(munin_t, munin_var_run_t, file)
 
+read_files_pattern(munin_t, munin_plugin_state_t, munin_plugin_state_t)
+
 kernel_read_system_state(munin_t)
 kernel_read_network_state(munin_t)
 kernel_read_all_sysctls(munin_t)
@@ -108,6 +124,7 @@
 
 miscfiles_read_fonts(munin_t)
 miscfiles_read_localization(munin_t)
+miscfiles_setattr_fonts_cache_dirs(munin_t) 
 
 sysnet_exec_ifconfig(munin_t)
 
@@ -131,8 +148,13 @@
 ')
 
 optional_policy(`
+	lpd_domtrans_lpr(munin_t)
+')
+
+optional_policy(`
 	mta_read_config(munin_t)
 	mta_send_mail(munin_t)
+	mta_list_queue(munin_t)
 	mta_read_queue(munin_t)
 ')
 
@@ -147,6 +169,7 @@
 
 optional_policy(`
 	postfix_list_spool(munin_t)
+	postfix_getattr_spool_files(munin_t)
 ')
 
 optional_policy(`
@@ -164,3 +187,185 @@
 optional_policy(`
 	udev_read_db(munin_t)
 ')
+
+###################################
+#
+# local policy for disk plugins 
+#
+
+allow munin_disk_plugin_t self:capability { sys_admin sys_rawio };
+
+allow munin_disk_plugin_t self:tcp_socket create_stream_socket_perms;
+
+rw_files_pattern(munin_disk_plugin_t, munin_var_lib_t, munin_var_lib_t)
+
+corenet_tcp_connect_hddtemp_port(munin_disk_plugin_t)
+
+corecmd_exec_shell(munin_disk_plugin_t)
+
+files_read_etc_runtime_files(munin_disk_plugin_t)
+
+dev_getattr_lvm_control(munin_disk_plugin_t)
+dev_read_sysfs(munin_disk_plugin_t)
+dev_read_urand(munin_disk_plugin_t)
+
+storage_raw_read_fixed_disk(munin_disk_plugin_t)
+storage_getattr_fixed_disk_dev(munin_disk_plugin_t)
+
+sysnet_read_config(munin_disk_plugin_t)
+
+optional_policy(`
+    hddtemp_exec(munin_disk_plugin_t)
+')
+
+optional_policy(`
+    fstools_exec(munin_disk_plugin_t)
+')
+
+####################################
+#
+# local policy for mail plugins 
+#
+
+allow munin_mail_plugin_t self:capability dac_override;
+
+rw_files_pattern(munin_mail_plugin_t, munin_var_lib_t, munin_var_lib_t)
+
+dev_read_urand(munin_mail_plugin_t)
+
+logging_read_generic_logs(munin_mail_plugin_t)
+
+mta_read_config(munin_mail_plugin_t)
+mta_send_mail(munin_mail_plugin_t)
+mta_list_queue(munin_mail_plugin_t)
+mta_read_queue(munin_mail_plugin_t)
+
+optional_policy(`
+	exim_read_log(munin_mail_plugin_t)
+')
+
+optional_policy(`
+    postfix_read_config(munin_mail_plugin_t)
+    postfix_list_spool(munin_mail_plugin_t)
+    postfix_getattr_spool_files(munin_mail_plugin_t)
+')
+
+optional_policy(`
+    sendmail_read_log(munin_mail_plugin_t)
+')
+
+#################################
+#
+# local policy for selinux plugins
+#
+selinux_get_enforce_mode(munin_selinux_plugin_t)
+
+###################################
+#
+# local policy for service plugins 
+#
+
+allow munin_services_plugin_t self:sem create_sem_perms;
+allow munin_services_plugin_t self:tcp_socket create_stream_socket_perms;
+allow munin_services_plugin_t self:udp_socket create_socket_perms;
+allow munin_services_plugin_t self:netlink_route_socket r_netlink_socket_perms;
+
+corenet_tcp_connect_all_ports(munin_services_plugin_t)
+corenet_tcp_connect_http_port(munin_services_plugin_t)
+
+dev_read_urand(munin_services_plugin_t)
+dev_read_rand(munin_services_plugin_t)
+
+sysnet_read_config(munin_services_plugin_t)
+
+optional_policy(`
+	cups_read_config(munin_services_plugin_t)
+    cups_stream_connect(munin_services_plugin_t)
+')
+
+optional_policy(`
+    lpd_exec_lpr(munin_services_plugin_t)
+')
+
+optional_policy(`
+    mysql_read_config(munin_services_plugin_t)
+    mysql_stream_connect(munin_services_plugin_t)
+')
+
+optional_policy(`
+    netutils_domtrans_ping(munin_services_plugin_t)
+')
+
+optional_policy(`
+    postgresql_stream_connect(munin_services_plugin_t)
+')
+
+optional_policy(`
+    snmp_read_snmp_var_lib_files(munin_services_plugin_t)
+')
+
+optional_policy(`
+    varnishd_read_lib_files(munin_services_plugin_t)
+')
+
+##################################
+#
+# local policy for system plugins 
+#
+
+allow munin_system_plugin_t self:udp_socket create_socket_perms;
+
+rw_files_pattern(munin_system_plugin_t, munin_var_lib_t, munin_var_lib_t)
+
+# needed by munin_* plugins
+allow munin_system_plugin_t munin_log_t:file read_file_perms;
+logging_search_logs(munin_system_plugin_t)
+
+kernel_read_network_state(munin_system_plugin_t)
+kernel_read_all_sysctls(munin_system_plugin_t)
+
+dev_read_sysfs(munin_system_plugin_t)
+dev_read_urand(munin_system_plugin_t)
+
+domain_read_all_domains_state(munin_system_plugin_t)
+
+# needed by users plugin
+init_read_utmp(munin_system_plugin_t)
+
+sysnet_exec_ifconfig(munin_system_plugin_t)
+
+term_getattr_unallocated_ttys(munin_system_plugin_t)
+term_getattr_all_ttys(munin_system_plugin_t)
+term_getattr_all_ptys(munin_system_plugin_t)
+
+auth_use_nsswitch(munin_system_plugin_t)
+
+###############################
+#
+# local policy for munin plugin domains
+#
+
+allow munin_plugin_domain munin_exec_t:file read_file_perms;
+allow munin_plugin_domain munin_t:tcp_socket rw_socket_perms;
+
+# creates plugin state files
+manage_files_pattern(munin_plugin_domain, munin_plugin_state_t, munin_plugin_state_t)
+
+read_lnk_files_pattern(munin_plugin_domain, munin_etc_t, munin_etc_t)
+
+kernel_read_system_state(munin_plugin_domain)
+
+corecmd_exec_bin(munin_plugin_domain)
+corecmd_exec_shell(munin_plugin_domain)
+
+files_search_var_lib(munin_plugin_domain)
+files_read_etc_files(munin_plugin_domain)
+files_read_usr_files(munin_plugin_domain)
+
+fs_getattr_all_fs(munin_plugin_domain)
+
+miscfiles_read_localization(munin_plugin_domain)
+
+optional_policy(`
+    nscd_socket_use(munin_plugin_domain)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mysql.fc serefpolicy-3.7.19/policy/modules/services/mysql.fc
--- nsaserefpolicy/policy/modules/services/mysql.fc	2011-03-17 07:21:21.864851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mysql.fc	2011-07-20 09:36:55.764523004 +0000
@@ -28,3 +28,5 @@
 
 /var/run/mysqld(/.*)?		gen_context(system_u:object_r:mysqld_var_run_t,s0)
 /var/run/mysqld/mysqlmanager.* -- gen_context(system_u:object_r:mysqlmanagerd_var_run_t,s0)
+
+/var/lib/squeezeboxserver(/.*)?		gen_context(system_u:object_r:mysqld_db_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mysql.if serefpolicy-3.7.19/policy/modules/services/mysql.if
--- nsaserefpolicy/policy/modules/services/mysql.if	2011-03-17 07:21:22.377851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mysql.if	2012-05-02 12:57:50.975863885 +0000
@@ -18,6 +18,42 @@
 	domtrans_pattern($1, mysqld_exec_t, mysqld_t)
 ')
 
+######################################
+## <summary>
+##     Execute MySQL in the coller domain.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`mysql_exec',`
+       gen_require(`
+               type  mysqld_exec_t;
+       ')
+
+       can_exec($1, mysqld_exec_t)
+')
+
+######################################
+## <summary>
+##     Execute MySQL_safe in the coller domain.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`mysql_safe_exec',`
+       gen_require(`
+               type  mysqld_safe_exec_t;
+       ')
+
+       can_exec($1, mysqld_safe_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Send a generic signal to MySQL.
@@ -73,6 +109,7 @@
 		type mysqld_t, mysqld_var_run_t, mysqld_db_t;
 	')
 
+	files_search_pids($1)
 	stream_connect_pattern($1, mysqld_var_run_t, mysqld_var_run_t, mysqld_t)
 	stream_connect_pattern($1, mysqld_db_t, mysqld_var_run_t, mysqld_t)
 ')
@@ -122,6 +159,26 @@
 
 ########################################
 ## <summary>
+##     List the directories that contain MySQL
+##     database storage.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`mysql_list_db',`
+       gen_require(`
+               type mysqld_db_t;
+       ')
+
+       files_search_var_lib($1)
+       allow $1 mysqld_db_t:dir list_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Read and write to the MySQL database directory.
 ## </summary>
 ## <param name="domain">
@@ -352,4 +409,6 @@
 	admin_pattern($1, mysqld_log_t)
 
 	admin_pattern($1, mysqld_tmp_t)
+
+	mysql_stream_connect($1)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/mysql.te serefpolicy-3.7.19/policy/modules/services/mysql.te
--- nsaserefpolicy/policy/modules/services/mysql.te	2011-03-17 07:21:21.194851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/mysql.te	2011-12-07 10:12:36.197493860 +0000
@@ -65,6 +65,7 @@
 
 manage_dirs_pattern(mysqld_t, mysqld_db_t, mysqld_db_t)
 manage_files_pattern(mysqld_t, mysqld_db_t, mysqld_db_t)
+manage_sock_files_pattern(mysqld_t, mysqld_db_t, mysqld_db_t)
 manage_lnk_files_pattern(mysqld_t, mysqld_db_t, mysqld_db_t)
 files_var_lib_filetrans(mysqld_t, mysqld_db_t, { dir file lnk_file })
 
@@ -86,6 +87,9 @@
 kernel_read_system_state(mysqld_t)
 kernel_read_kernel_sysctls(mysqld_t)
 
+corecmd_exec_bin(mysqld_t)
+corecmd_exec_shell(mysqld_t)
+
 corenet_all_recvfrom_unlabeled(mysqld_t)
 corenet_all_recvfrom_netlabel(mysqld_t)
 corenet_tcp_sendrecv_generic_if(mysqld_t)
@@ -157,8 +161,10 @@
 allow mysqld_safe_t self:capability { chown dac_override fowner kill };
 dontaudit mysqld_safe_t self:capability sys_ptrace;
 allow mysqld_safe_t self:fifo_file rw_fifo_file_perms;
+allow mysqld_safe_t self:process { setsched getsched setrlimit };
 
 read_lnk_files_pattern(mysqld_safe_t, mysqld_db_t, mysqld_db_t)
+delete_sock_files_pattern(mysqld_safe_t, mysqld_db_t, mysqld_db_t)
 
 domtrans_pattern(mysqld_safe_t, mysqld_exec_t, mysqld_t)
 
@@ -176,6 +182,7 @@
 
 domain_read_all_domains_state(mysqld_safe_t)
 
+files_dontaudit_search_all_mountpoints(mysqld_safe_t)
 files_read_etc_files(mysqld_safe_t)
 files_read_usr_files(mysqld_safe_t)
 files_dontaudit_getattr_all_dirs(mysqld_safe_t)
@@ -184,6 +191,8 @@
 
 hostname_exec(mysqld_safe_t)
 
+logging_send_syslog_msg(mysqld_safe_t)
+
 miscfiles_read_localization(mysqld_safe_t)
 
 mysql_manage_db_files(mysqld_safe_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nagios.fc serefpolicy-3.7.19/policy/modules/services/nagios.fc
--- nsaserefpolicy/policy/modules/services/nagios.fc	2011-03-17 07:21:21.820851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nagios.fc	2012-03-12 16:47:45.184474952 +0000
@@ -1,16 +1,92 @@
 /etc/nagios(/.*)?			gen_context(system_u:object_r:nagios_etc_t,s0)
 /etc/nagios/nrpe\.cfg		--	gen_context(system_u:object_r:nrpe_etc_t,s0)
+/etc/rc\.d/init\.d/nagios	--	gen_context(system_u:object_r:nagios_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/nrpe	--	gen_context(system_u:object_r:nagios_initrc_exec_t,s0)
 
-/usr/bin/nagios			--	gen_context(system_u:object_r:nagios_exec_t,s0)
-/usr/bin/nrpe			--	gen_context(system_u:object_r:nrpe_exec_t,s0)
+/usr/s?bin/nagios		--	gen_context(system_u:object_r:nagios_exec_t,s0)
+/usr/s?bin/nrpe			--	gen_context(system_u:object_r:nrpe_exec_t,s0)
 
-/usr/lib(64)?/cgi-bin/netsaint/.+ --	gen_context(system_u:object_r:nagios_cgi_exec_t,s0)
-/usr/lib(64)?/nagios/cgi/.+	--	gen_context(system_u:object_r:nagios_cgi_exec_t,s0)
+/usr/lib(64)?/cgi-bin/netsaint(/.*)?	gen_context(system_u:object_r:httpd_nagios_script_exec_t,s0)
+/usr/lib(64)?/nagios/cgi(/.*)?		gen_context(system_u:object_r:httpd_nagios_script_exec_t,s0)
+#/usr/lib(64)?/nagios/plugins(/.*)?	gen_context(system_u:object_r:nagios_plugin_exec_t,s0)
 
 /var/log/nagios(/.*)?			gen_context(system_u:object_r:nagios_log_t,s0)
 /var/log/netsaint(/.*)?			gen_context(system_u:object_r:nagios_log_t,s0)
 
+/var/run/nagios.*			gen_context(system_u:object_r:nagios_var_run_t,s0)
+
+/var/spool/nagios(/.*)?			gen_context(system_u:object_r:nagios_spool_t,s0)
+
 ifdef(`distro_debian',`
 /usr/sbin/nagios		--	gen_context(system_u:object_r:nagios_exec_t,s0)
-/usr/lib/cgi-bin/nagios/.+	--	gen_context(system_u:object_r:nagios_cgi_exec_t,s0)
 ')
+/usr/lib(64)?/cgi-bin/nagios(/.+)?	gen_context(system_u:object_r:httpd_nagios_script_exec_t,s0)
+/usr/lib(64)?/nagios/cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_nagios_script_exec_t,s0)
+
+# admin plugins
+/usr/lib(64)?/nagios/plugins/check_file_age     --      gen_context(system_u:object_r:nagios_admin_plugin_exec_t,s0)
+
+# check disk plugins
+/usr/lib(64)?/nagios/plugins/check_disk			--		gen_context(system_u:object_r:nagios_checkdisk_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_disk_smb		--		gen_context(system_u:object_r:nagios_checkdisk_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_ide_smart		--		gen_context(system_u:object_r:nagios_checkdisk_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_linux_raid		--		gen_context(system_u:object_r:nagios_checkdisk_plugin_exec_t,s0)
+
+# mail plugins
+/usr/lib(64)?/nagios/plugins/check_mailq        --      gen_context(system_u:object_r:nagios_mail_plugin_exec_t,s0)
+
+# system plugins
+/usr/lib(64)?/nagios/plugins/check_breeze		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_dummy		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_flexlm		--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_ifoperstatus	--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_ifstatus		--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_load			--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_log			--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_mrtg			--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_mrtgtraf		--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_nagios		--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_nwstat		--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_overcr		--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_procs		--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_sensors		--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_swap			--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_users		--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_wave			--		gen_context(system_u:object_r:nagios_system_plugin_exec_t,s0)
+
+# services plugins
+/usr/lib(64)?/nagios/plugins/check_cluster		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_dhcp			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_dig			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_dns			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_game			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_fping		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_hpjd			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_http			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_icmp			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_ircd			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_ldap			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_mysql		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_mysql_query 	--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_nrpe			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_nt			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_ntp.*		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_oracle		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_pgsql		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_ping			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_radius		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_real			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_rpc			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_tcp			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_time			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_sip			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_smtp			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_snmp.*		--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_ssh			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+/usr/lib(64)?/nagios/plugins/check_ups			--		gen_context(system_u:object_r:nagios_services_plugin_exec_t,s0)
+
+# unconfined plugins
+/usr/lib(64)?/nagios/plugins/check_by_ssh       --      gen_context(system_u:object_r:nagios_unconfined_plugin_exec_t,s0)
+
+# eventhandlers
+/usr/lib(64)?/nagios/plugins/eventhandlers(/.*)?  gen_context(system_u:object_r:nagios_eventhandler_plugin_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nagios.if serefpolicy-3.7.19/policy/modules/services/nagios.if
--- nsaserefpolicy/policy/modules/services/nagios.if	2011-03-17 07:21:21.112851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nagios.if	2012-04-16 10:38:20.651057284 +0000
@@ -64,8 +64,8 @@
 
 ########################################
 ## <summary>
-##	Execute the nagios CGI with
-##	a domain transition.
+##	Allow the specified domain to read
+##	nagios temporary files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -73,12 +73,13 @@
 ##	</summary>
 ## </param>
 #
-interface(`nagios_domtrans_cgi',`
+interface(`nagios_rw_inerited_tmp_files',`
 	gen_require(`
-		type nagios_cgi_t, nagios_cgi_exec_t;
+		type nagios_tmp_t;
 	')
 
-	domtrans_pattern($1, nagios_cgi_exec_t, nagios_cgi_t)
+	allow $1 nagios_tmp_t:file rw_inherited_file_perms;
+	files_search_tmp($1)
 ')
 
 ########################################
@@ -99,3 +100,181 @@
 
 	domtrans_pattern($1, nrpe_exec_t, nrpe_t)
 ')
+
+########################################
+## <summary>
+##	Search nagios spool directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nagios_search_spool',`
+	gen_require(`
+		type nagios_spool_t;
+	')
+
+	allow $1 nagios_spool_t:dir search_dir_perms;
+	files_search_spool($1)
+')
+
+######################################
+## <summary>
+##	Read nagios logs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nagios_read_log',`
+	gen_require(`
+		type nagios_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, nagios_log_t, nagios_log_t)
+')
+
+####################################
+## <summary>
+##      dontaudit Read and write nagios logs.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`nagios_dontaudit_rw_log',`
+        gen_require(`
+                type nagios_log_t;
+        ')
+
+        dontaudit $1 nagios_log_t:file { read write };
+')
+
+########################################
+## <summary>
+##      Create a set of derived types for various
+##      nagios plugins,
+## </summary>
+## <param name="plugins_group_name">
+##      <summary>
+##      The name to be used for deriving type names.
+##      </summary>
+## </param>
+#
+template(`nagios_plugin_template',`
+
+    	gen_require(`
+        	type nagios_t, nrpe_t;
+			type nagios_log_t;
+    	')
+
+		type nagios_$1_plugin_t, nagios_plugin_domain;
+		type nagios_$1_plugin_exec_t;
+		application_domain(nagios_$1_plugin_t, nagios_$1_plugin_exec_t)
+		role system_r types nagios_$1_plugin_t;
+
+		allow nagios_$1_plugin_t self:fifo_file rw_fifo_file_perms;
+
+		allow nrpe_t nagios_$1_plugin_t:process { signal sigkill };
+
+
+        # automatic transition rules from nrpe domain
+        # to specific nagios plugin domain
+        domtrans_pattern(nrpe_t, nagios_$1_plugin_exec_t, nagios_$1_plugin_t)
+
+        # needed by command.cfg
+        domtrans_pattern(nagios_t, nagios_$1_plugin_exec_t, nagios_$1_plugin_t)
+		allow nagios_t nagios_$1_plugin_exec_t:file ioctl;
+   
+        allow nagios_t nagios_$1_plugin_t:process signal_perms;
+
+        # cjp: leaked file descriptor
+        dontaudit nagios_$1_plugin_t nrpe_t:tcp_socket { read write };
+		dontaudit nagios_$1_plugin_t nagios_log_t:file { read write };
+
+		kernel_read_system_state(nagios_$1_plugin_t)
+
+		files_read_usr_files(nagios_$1_plugin_t)
+
+		userdom_use_inherited_user_ptys(nagios_$1_plugin_t)
+		userdom_use_inherited_user_ttys(nagios_$1_plugin_t)
+
+        miscfiles_read_localization(nagios_$1_plugin_t)
+')
+
+#######################################
+## <summary>
+## Do not audit attempts to write nrpe daemon unnamed pipes.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`nrpe_dontaudit_write_pipes',`
+ gen_require(`
+		type nrpe_t;
+	')
+
+	dontaudit $1 nrpe_t:fifo_file write;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an nagios environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed to manage the nagios domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`nagios_admin',`
+	gen_require(`
+		type nagios_t, nrpe_t;
+		type nagios_tmp_t, nagios_log_t;
+		type nagios_etc_t, nrpe_etc_t;
+		type nagios_spool_t, nagios_var_run_t;
+		type nagios_initrc_exec_t;
+	')
+
+	allow $1 nagios_t:process { ptrace signal_perms };
+	ps_process_pattern($1, nagios_t)
+
+	init_labeled_script_domtrans($1, nagios_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 nagios_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_list_tmp($1)
+	admin_pattern($1, nagios_tmp_t)
+
+	logging_list_logs($1)
+	admin_pattern($1, nagios_log_t)
+
+	files_list_etc($1)
+	admin_pattern($1, nagios_etc_t)
+
+	files_list_spool($1)
+	admin_pattern($1, nagios_spool_t)
+
+	files_list_pids($1)
+	admin_pattern($1, nagios_var_run_t)
+
+	admin_pattern($1, nrpe_etc_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nagios.te serefpolicy-3.7.19/policy/modules/services/nagios.te
--- nsaserefpolicy/policy/modules/services/nagios.te	2011-03-17 07:21:21.392851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nagios.te	2012-05-23 12:44:16.805013918 +0000
@@ -6,17 +6,18 @@
 # Declarations
 #
 
+attribute nagios_plugin_domain;
+
 type nagios_t;
 type nagios_exec_t;
 init_daemon_domain(nagios_t, nagios_exec_t)
 
-type nagios_cgi_t;
-type nagios_cgi_exec_t;
-init_system_domain(nagios_cgi_t, nagios_cgi_exec_t)
-
 type nagios_etc_t;
 files_config_file(nagios_etc_t)
 
+type nagios_initrc_exec_t;
+init_script_file(nagios_initrc_exec_t)
+
 type nagios_log_t;
 logging_log_file(nagios_log_t)
 
@@ -26,6 +27,9 @@
 type nagios_var_run_t;
 files_pid_file(nagios_var_run_t)
 
+type nagios_spool_t;
+files_type(nagios_spool_t)
+
 type nrpe_t;
 type nrpe_exec_t;
 init_daemon_domain(nrpe_t, nrpe_exec_t)
@@ -33,6 +37,43 @@
 type nrpe_etc_t;
 files_config_file(nrpe_etc_t)
 
+type nrpe_var_run_t;
+files_pid_file(nrpe_var_run_t)
+
+# creates nagios_admin_plugin_exec_t for executable
+# and nagios_admin_plugin_t for domain
+nagios_plugin_template(admin)
+
+# creates nagios_checkdisk_plugin_exec_t for executable
+# and nagios_checkdisk_plugin_t for domain
+nagios_plugin_template(checkdisk)
+
+# creates nagios_mail_plugin_exec_t for executable
+# and nagios_mail_plugin_t for domain
+nagios_plugin_template(mail)
+
+# creates nagios_services_plugin_exec_t for executable
+# and nagios_services_plugin_t for domain
+nagios_plugin_template(services)
+
+# creates nagios_system_plugin_exec_t for executable
+# and nagios_system_plugin_t for domain
+nagios_plugin_template(system)
+
+type nagios_system_plugin_tmp_t;
+files_tmp_file(nagios_system_plugin_tmp_t)
+
+nagios_plugin_template(unconfined)
+
+optional_policy(`
+	unconfined_domain(nagios_unconfined_plugin_t)
+')
+
+nagios_plugin_template(eventhandler)
+
+type nagios_eventhandler_plugin_tmp_t;
+files_tmp_file(nagios_eventhandler_plugin_tmp_t)
+
 ########################################
 #
 # Nagios local policy
@@ -60,8 +101,12 @@
 manage_files_pattern(nagios_t, nagios_var_run_t, nagios_var_run_t)
 files_pid_filetrans(nagios_t, nagios_var_run_t, file)
 
+manage_fifo_files_pattern(nagios_t, nagios_spool_t, nagios_spool_t)
+files_spool_filetrans(nagios_t, nagios_spool_t, fifo_file)
+
 kernel_read_system_state(nagios_t)
 kernel_read_kernel_sysctls(nagios_t)
+kernel_read_software_raid_state(nagios_t)
 
 corecmd_exec_bin(nagios_t)
 corecmd_exec_shell(nagios_t)
@@ -76,6 +121,9 @@
 corenet_udp_sendrecv_all_ports(nagios_t)
 corenet_tcp_connect_all_ports(nagios_t)
 
+corenet_dontaudit_tcp_bind_all_reserved_ports(nagios_t)
+corenet_dontaudit_udp_bind_all_reserved_ports(nagios_t)    
+
 dev_read_sysfs(nagios_t)
 dev_read_urand(nagios_t)
 
@@ -86,13 +134,12 @@
 files_read_etc_files(nagios_t)
 files_read_etc_runtime_files(nagios_t)
 files_read_kernel_symbol_table(nagios_t)
+files_search_spool(nagios_t)
+files_read_usr_files(nagios_t)
 
 fs_getattr_all_fs(nagios_t)
 fs_search_auto_mountpoints(nagios_t)
 
-# for who
-init_read_utmp(nagios_t)
-
 auth_use_nsswitch(nagios_t)
 
 logging_send_syslog_msg(nagios_t)
@@ -103,12 +150,13 @@
 userdom_dontaudit_search_user_home_dirs(nagios_t)
 
 mta_send_mail(nagios_t)
+mta_kill_system_mail(nagios_t)
+mta_signal_system_mail(nagios_t)
 
 optional_policy(`
-	netutils_domtrans_ping(nagios_t)
-	netutils_signal_ping(nagios_t)
 	netutils_kill_ping(nagios_t)
-')
+ ')
+
 
 optional_policy(`
 	seutil_sigchld_newrole(nagios_t)
@@ -118,61 +166,63 @@
 	udev_read_db(nagios_t)
 ')
 
-# cjp: leaked file descriptors:
-# for open file handles
-#dontaudit system_mail_t nagios_etc_t:file read;
-#dontaudit system_mail_t nagios_log_t:fifo_file read;
-
 ########################################
 #
 # Nagios CGI local policy
 #
+apache_content_template(nagios)
+typealias httpd_nagios_script_t alias nagios_cgi_t;
+typealias httpd_nagios_script_exec_t alias nagios_cgi_exec_t;
 
-allow nagios_cgi_t self:process signal_perms;
-allow nagios_cgi_t self:fifo_file rw_fifo_file_perms;
-
-read_files_pattern(nagios_cgi_t, nagios_t, nagios_t)
-read_lnk_files_pattern(nagios_cgi_t, nagios_t, nagios_t)
+allow httpd_nagios_script_t self:process signal_perms;
 
-allow nagios_cgi_t nagios_etc_t:dir list_dir_perms;
-read_files_pattern(nagios_cgi_t, nagios_etc_t, nagios_etc_t)
-read_lnk_files_pattern(nagios_cgi_t, nagios_etc_t, nagios_etc_t)
+read_files_pattern(httpd_nagios_script_t, nagios_t, nagios_t)
+read_lnk_files_pattern(httpd_nagios_script_t, nagios_t, nagios_t)
 
-allow nagios_cgi_t nagios_log_t:dir list_dir_perms;
-read_files_pattern(nagios_cgi_t, nagios_etc_t, nagios_log_t)
-read_lnk_files_pattern(nagios_cgi_t, nagios_etc_t, nagios_log_t)
+files_search_spool(httpd_nagios_script_t)
+rw_fifo_files_pattern(httpd_nagios_script_t, nagios_spool_t, nagios_spool_t)
 
-kernel_read_system_state(nagios_cgi_t)
+allow httpd_nagios_script_t nagios_etc_t:dir list_dir_perms;
+read_files_pattern(httpd_nagios_script_t, nagios_etc_t, nagios_etc_t)
+read_lnk_files_pattern(httpd_nagios_script_t, nagios_etc_t, nagios_etc_t)
 
-corecmd_exec_bin(nagios_cgi_t)
+allow httpd_nagios_script_t nagios_log_t:dir list_dir_perms;
+read_files_pattern(httpd_nagios_script_t, nagios_etc_t, nagios_log_t)
+read_lnk_files_pattern(httpd_nagios_script_t, nagios_etc_t, nagios_log_t)
 
-domain_dontaudit_read_all_domains_state(nagios_cgi_t)
+kernel_read_system_state(httpd_nagios_script_t)
 
-files_read_etc_files(nagios_cgi_t)
-files_read_etc_runtime_files(nagios_cgi_t)
-files_read_kernel_symbol_table(nagios_cgi_t)
+domain_dontaudit_read_all_domains_state(httpd_nagios_script_t)
 
-logging_send_syslog_msg(nagios_cgi_t)
-logging_search_logs(nagios_cgi_t)
+files_read_etc_runtime_files(httpd_nagios_script_t)
+files_read_kernel_symbol_table(httpd_nagios_script_t)
 
-miscfiles_read_localization(nagios_cgi_t)
-
-optional_policy(`
-	apache_append_log(nagios_cgi_t)
-')
+logging_send_syslog_msg(httpd_nagios_script_t)
 
 ########################################
 #
 # Nagios remote plugin executor local policy
 #
 
-dontaudit nrpe_t self:capability sys_tty_config;
-allow nrpe_t self:process { setpgid signal_perms };
+allow nrpe_t self:capability { setuid setgid };
+dontaudit nrpe_t self:capability {sys_tty_config sys_resource};
+allow nrpe_t self:process { setpgid signal_perms setsched setrlimit };
 allow nrpe_t self:fifo_file rw_fifo_file_perms;
+allow nrpe_t self:tcp_socket create_stream_socket_perms;
+
+domtrans_pattern(nrpe_t, nagios_checkdisk_plugin_exec_t, nagios_checkdisk_plugin_t)
 
-allow nrpe_t nrpe_etc_t:file read_file_perms;
+read_files_pattern(nrpe_t, nagios_etc_t, nagios_etc_t)
 files_search_etc(nrpe_t)
 
+manage_files_pattern(nrpe_t, nrpe_var_run_t, nrpe_var_run_t)
+files_pid_filetrans(nrpe_t,nrpe_var_run_t,file)
+files_read_etc_files(nrpe_t)
+
+corenet_tcp_bind_generic_node(nrpe_t)
+corenet_tcp_bind_inetd_child_port(nrpe_t)
+corenet_sendrecv_unlabeled_packets(nrpe_t)
+
 kernel_read_system_state(nrpe_t)
 kernel_read_kernel_sysctls(nrpe_t)
 
@@ -183,11 +233,15 @@
 dev_read_urand(nrpe_t)
 
 domain_use_interactive_fds(nrpe_t)
+domain_read_all_domains_state(nrpe_t)
 
 files_read_etc_runtime_files(nrpe_t)
 
+fs_getattr_all_fs(nrpe_t)
 fs_search_auto_mountpoints(nrpe_t)
 
+auth_use_nsswitch(nrpe_t)
+
 logging_send_syslog_msg(nrpe_t)
 
 miscfiles_read_localization(nrpe_t)
@@ -199,6 +253,11 @@
 ')
 
 optional_policy(`
+	mta_send_mail(nrpe_t)
+	mta_dontaudit_leaks_system_mail(nrpe_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(nrpe_t)
 ')
 
@@ -209,3 +268,177 @@
 optional_policy(`
 	udev_read_db(nrpe_t)
 ')
+
+#####################################
+#
+# local policy for admin check plugins 
+#
+
+corecmd_read_bin_files(nagios_admin_plugin_t)
+corecmd_read_bin_symlinks(nagios_admin_plugin_t)
+
+dev_read_urand(nagios_admin_plugin_t)
+
+files_read_etc_files(nagios_admin_plugin_t)
+
+# for check_file_age plugin
+files_getattr_all_dirs(nagios_admin_plugin_t)
+files_getattr_all_files(nagios_admin_plugin_t)
+files_getattr_all_symlinks(nagios_admin_plugin_t)
+files_getattr_all_pipes(nagios_admin_plugin_t)
+files_getattr_all_sockets(nagios_admin_plugin_t)
+files_getattr_all_file_type_fs(nagios_admin_plugin_t)
+dev_getattr_all_chr_files(nagios_admin_plugin_t)
+dev_getattr_all_blk_files(nagios_admin_plugin_t)
+
+######################################
+#
+# local policy for mail check plugins 
+#
+
+allow nagios_mail_plugin_t self:capability { setuid setgid dac_override };
+
+allow nagios_mail_plugin_t self:netlink_route_socket r_netlink_socket_perms;
+allow nagios_mail_plugin_t self:tcp_socket create_stream_socket_perms;
+allow nagios_mail_plugin_t self:udp_socket create_socket_perms;
+
+kernel_read_kernel_sysctls(nagios_mail_plugin_t)
+
+corecmd_read_bin_files(nagios_mail_plugin_t)
+corecmd_read_bin_symlinks(nagios_mail_plugin_t)
+
+dev_read_urand(nagios_mail_plugin_t)
+
+files_read_etc_files(nagios_mail_plugin_t)
+
+libs_use_shared_libs(nagios_mail_plugin_t)
+libs_use_ld_so(nagios_mail_plugin_t) 
+
+logging_send_syslog_msg(nagios_mail_plugin_t)
+
+sysnet_read_config(nagios_mail_plugin_t)
+
+nscd_dontaudit_search_pid(nagios_mail_plugin_t) 
+
+optional_policy(`
+	mta_send_mail(nagios_mail_plugin_t)
+') 
+
+optional_policy(`
+	postfix_stream_connect_master(nagios_mail_plugin_t)
+	postfix_exec_postqueue(nagios_mail_plugin_t)
+')
+
+######################################
+#
+# local policy for disk check plugins 
+#
+
+# needed by ioctl()
+allow nagios_checkdisk_plugin_t self:capability { sys_admin sys_rawio };
+
+kernel_read_software_raid_state(nagios_checkdisk_plugin_t)
+
+files_getattr_all_dirs(nagios_checkdisk_plugin_t)
+files_read_etc_runtime_files(nagios_checkdisk_plugin_t)
+
+fs_getattr_all_fs(nagios_checkdisk_plugin_t)
+
+storage_raw_read_fixed_disk(nagios_checkdisk_plugin_t)
+
+
+#######################################
+#
+# local policy for service check plugins 
+#
+
+allow nagios_services_plugin_t self:capability { setuid net_bind_service net_raw };
+allow nagios_services_plugin_t self:process { signal sigkill };
+allow nagios_services_plugin_t self:tcp_socket create_stream_socket_perms;
+allow nagios_services_plugin_t self:udp_socket create_socket_perms;
+allow nagios_services_plugin_t self:rawip_socket create_socket_perms;
+
+corecmd_exec_bin(nagios_services_plugin_t)
+
+corenet_tcp_connect_all_ports(nagios_services_plugin_t)
+corenet_udp_bind_dhcpc_port(nagios_services_plugin_t)
+
+auth_use_nsswitch(nagios_services_plugin_t)
+
+domain_read_all_domains_state(nagios_services_plugin_t)
+
+files_read_usr_files(nagios_services_plugin_t)
+
+optional_policy(`
+	netutils_domtrans_ping(nagios_services_plugin_t)
+	netutils_signal_ping(nagios_services_plugin_t)
+	netutils_kill_ping(nagios_services_plugin_t)
+')
+
+optional_policy(`
+	mysql_stream_connect(nagios_services_plugin_t)
+')
+
+optional_policy(`
+    snmp_read_snmp_var_lib_files(nagios_services_plugin_t)
+')
+
+######################################
+#
+# local policy for system check plugins 
+#
+
+allow nagios_system_plugin_t self:capability dac_override;
+dontaudit nagios_system_plugin_t self:capability { setuid setgid };
+
+# check_log
+manage_files_pattern(nagios_system_plugin_t, nagios_system_plugin_tmp_t, nagios_system_plugin_tmp_t)
+manage_dirs_pattern(nagios_system_plugin_t, nagios_system_plugin_tmp_t, nagios_system_plugin_tmp_t)
+files_tmp_filetrans(nagios_system_plugin_t, nagios_system_plugin_tmp_t, { dir file })
+
+read_files_pattern(nagios_system_plugin_t, nagios_log_t, nagios_log_t)
+
+corecmd_exec_bin(nagios_system_plugin_t)
+corecmd_exec_shell(nagios_system_plugin_t)
+
+kernel_read_system_state(nagios_system_plugin_t)
+kernel_read_kernel_sysctls(nagios_system_plugin_t)
+
+files_read_etc_files(nagios_system_plugin_t)
+
+dev_read_sysfs(nagios_system_plugin_t)
+
+domain_read_all_domains_state(nagios_system_plugin_t)
+
+files_read_etc_files(nagios_system_plugin_t)
+
+fs_getattr_all_fs(nagios_system_plugin_t)
+
+# needed by check_users plugin
+optional_policy(`
+	init_read_utmp(nagios_system_plugin_t)
+')
+
+######################################
+#
+# Event handler plugin plugin policy
+#
+
+manage_files_pattern(nagios_system_plugin_t, nagios_eventhandler_plugin_tmp_t, nagios_eventhandler_plugin_tmp_t)
+manage_dirs_pattern(nagios_eventhandler_plugin_t, nagios_eventhandler_plugin_tmp_t, nagios_eventhandler_plugin_tmp_t)
+files_tmp_filetrans(nagios_eventhandler_plugin_t, nagios_eventhandler_plugin_tmp_t, { dir file })
+
+corecmd_exec_bin(nagios_eventhandler_plugin_t)
+corecmd_exec_shell(nagios_eventhandler_plugin_t)
+
+init_domtrans_script(nagios_eventhandler_plugin_t)
+
+allow nagios_t nagios_eventhandler_plugin_exec_t:dir list_dir_perms;
+
+optional_policy(`
+    unconfined_domain(nagios_eventhandler_plugin_t)
+')
+
+
+dev_read_urand(nagios_plugin_domain)
+dev_read_rand(nagios_plugin_domain)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/networkmanager.fc serefpolicy-3.7.19/policy/modules/services/networkmanager.fc
--- nsaserefpolicy/policy/modules/services/networkmanager.fc	2011-03-17 07:21:22.405851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/networkmanager.fc	2011-03-17 07:21:05.154851001 +0000
@@ -1,12 +1,33 @@
+/etc/rc\.d/init\.d/wicd		--	gen_context(system_u:object_r:NetworkManager_initrc_exec_t, s0)
+/etc/NetworkManager/dispatcher\.d(/.*)	gen_context(system_u:object_r:NetworkManager_initrc_exec_t,s0)
+/etc/wicd/manager-settings.conf -- gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
+/etc/wicd/wireless-settings.conf -- gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
+/etc/wicd/wired-settings.conf -- gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
+
+/usr/libexec/nm-dispatcher.action --	gen_context(system_u:object_r:NetworkManager_initrc_exec_t,s0)
+
 /sbin/wpa_cli			--	gen_context(system_u:object_r:wpa_cli_exec_t,s0)
 /sbin/wpa_supplicant		--	gen_context(system_u:object_r:NetworkManager_exec_t,s0)
 
 /usr/s?bin/NetworkManager	--	gen_context(system_u:object_r:NetworkManager_exec_t,s0)
+/usr/sbin/wicd 			-- 	gen_context(system_u:object_r:NetworkManager_exec_t, s0)
 /usr/s?bin/wpa_supplicant	--	gen_context(system_u:object_r:NetworkManager_exec_t,s0)
+/usr/sbin/NetworkManagerDispatcher	--	gen_context(system_u:object_r:NetworkManager_exec_t,s0)
+/usr/sbin/nm-system-settings	--	gen_context(system_u:object_r:NetworkManager_exec_t,s0)
+
+/var/lib/wicd(/.*)? 			gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
+/var/lib/NetworkManager(/.*)? 		gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
 
+/etc/NetworkManager/system-connections(/.*)? 	gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
+/etc/NetworkManager(/.*)? 	gen_context(system_u:object_r:NetworkManager_var_lib_t, s0)
+
+/var/log/wicd(/.*)? 			gen_context(system_u:object_r:NetworkManager_log_t,s0)
+/var/log/wicd\.log		--		gen_context(system_u:object_r:NetworkManager_log_t,s0)
 /var/log/wpa_supplicant.*	--	gen_context(system_u:object_r:NetworkManager_log_t,s0)
 
 /var/run/NetworkManager\.pid	--	gen_context(system_u:object_r:NetworkManager_var_run_t,s0)
 /var/run/NetworkManager(/.*)?		gen_context(system_u:object_r:NetworkManager_var_run_t,s0)
 /var/run/wpa_supplicant(/.*)?		gen_context(system_u:object_r:NetworkManager_var_run_t,s0)
 /var/run/wpa_supplicant-global	-s	gen_context(system_u:object_r:NetworkManager_var_run_t,s0)
+/var/run/nm-dhclient.*			gen_context(system_u:object_r:NetworkManager_var_run_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/networkmanager.if serefpolicy-3.7.19/policy/modules/services/networkmanager.if
--- nsaserefpolicy/policy/modules/services/networkmanager.if	2011-03-17 07:21:22.049851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/networkmanager.if	2011-03-17 07:21:04.790851001 +0000
@@ -100,6 +100,27 @@
 
 ########################################
 ## <summary>
+##	Send and receive messages from
+##	NetworkManager over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`networkmanager_dontaudit_dbus_chat',`
+	gen_require(`
+		type NetworkManager_t;
+		class dbus send_msg;
+	')
+
+	dontaudit $1 NetworkManager_t:dbus send_msg;
+	dontaudit NetworkManager_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
 ##	Send a generic signal to NetworkManager
 ## </summary>
 ## <param name="domain">
@@ -118,6 +139,24 @@
 
 ########################################
 ## <summary>
+##	Execute NetworkManager scripts with an automatic domain transition to initrc.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`networkmanager_initrc_domtrans',`
+	gen_require(`
+		type NetworkManager_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, NetworkManager_initrc_exec_t)
+')
+
+########################################
+## <summary>
 ##	Read NetworkManager PID files.
 ## </summary>
 ## <param name="domain">
@@ -134,3 +173,89 @@
 	files_search_pids($1)
 	allow $1 NetworkManager_var_run_t:file read_file_perms;
 ')
+
+########################################
+## <summary>
+##	Read NetworkManager PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`networkmanager_read_var_lib_files',`
+	gen_require(`
+		type NetworkManager_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	list_dirs_pattern($1, NetworkManager_var_lib_t, NetworkManager_var_lib_t)
+	read_files_pattern($1, NetworkManager_var_lib_t, NetworkManager_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Execute NetworkManager in the NetworkManager domain, and
+##	allow the specified role the NetworkManager domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the NetworkManager domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`networkmanager_run',`
+	gen_require(`
+		type NetworkManager_t, NetworkManager_exec_t;
+	')
+
+	networkmanager_domtrans($1)
+	role $2 types NetworkManager_t;
+')
+
+#######################################
+## <summary>
+## Allow caller to relabel tun_socket
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`networkmanager_attach_tun_iface',`
+	gen_require(`
+		type NetworkManager_t;
+	')
+
+	allow $1 NetworkManager_t:tun_socket relabelfrom;    
+	allow $1 self:tun_socket relabelto;
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to append
+##	to Network Manager log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`networkmanager_append_log',`
+	gen_require(`
+		type NetworkManager_log_t;
+	')
+
+	logging_search_logs($1)
+	allow $1 NetworkManager_log_t:dir list_dir_perms;
+	append_files_pattern($1, NetworkManager_log_t, NetworkManager_log_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/networkmanager.te serefpolicy-3.7.19/policy/modules/services/networkmanager.te
--- nsaserefpolicy/policy/modules/services/networkmanager.te	2011-03-17 07:21:20.818851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/networkmanager.te	2011-12-14 15:47:20.319598476 +0000
@@ -19,6 +19,9 @@
 type NetworkManager_tmp_t;
 files_tmp_file(NetworkManager_tmp_t)
 
+type NetworkManager_var_lib_t;
+files_type(NetworkManager_var_lib_t)
+
 type NetworkManager_var_run_t;
 files_pid_file(NetworkManager_var_run_t)
 
@@ -33,14 +36,19 @@
 
 # networkmanager will ptrace itself if gdb is installed
 # and it receives a unexpected signal (rh bug #204161) 
-allow NetworkManager_t self:capability { kill setgid setuid dac_override net_admin net_raw net_bind_service ipc_lock };
+allow NetworkManager_t self:capability { chown fsetid kill setgid setuid sys_admin sys_nice sys_ptrace dac_override net_admin net_raw net_bind_service ipc_lock };
 dontaudit NetworkManager_t self:capability { sys_tty_config sys_ptrace };
-allow NetworkManager_t self:process { ptrace setcap setpgid getsched signal_perms };
+#bug in kernel
+dontaudit NetworkManager_t self:capability sys_module;
+allow NetworkManager_t self:process { ptrace getcap setcap setpgid getsched setsched signal_perms };
 allow NetworkManager_t self:fifo_file rw_fifo_file_perms;
 allow NetworkManager_t self:unix_dgram_socket { sendto create_socket_perms };
 allow NetworkManager_t self:unix_stream_socket create_stream_socket_perms;
 allow NetworkManager_t self:netlink_route_socket create_netlink_socket_perms;
+allow NetworkManager_t self:netlink_socket create_socket_perms;
+allow NetworkManager_t self:netlink_kobject_uevent_socket create_socket_perms;
 allow NetworkManager_t self:tcp_socket create_stream_socket_perms;
+allow NetworkManager_t self:tun_socket { create_socket_perms relabelfrom relabelto };
 allow NetworkManager_t self:udp_socket create_socket_perms;
 allow NetworkManager_t self:packet_socket create_socket_perms;
 
@@ -51,8 +59,14 @@
 manage_files_pattern(NetworkManager_t, NetworkManager_log_t, NetworkManager_log_t)
 logging_log_filetrans(NetworkManager_t, NetworkManager_log_t, file)
 
-rw_sock_files_pattern(NetworkManager_t, NetworkManager_tmp_t, NetworkManager_tmp_t)
-files_search_tmp(NetworkManager_t)
+can_exec(NetworkManager_t, NetworkManager_tmp_t)
+manage_files_pattern(NetworkManager_t, NetworkManager_tmp_t, NetworkManager_tmp_t)
+manage_sock_files_pattern(NetworkManager_t, NetworkManager_tmp_t, NetworkManager_tmp_t)
+files_tmp_filetrans(NetworkManager_t, NetworkManager_tmp_t, { sock_file file })
+
+manage_dirs_pattern(NetworkManager_t, NetworkManager_var_lib_t, NetworkManager_var_lib_t)
+manage_files_pattern(NetworkManager_t, NetworkManager_var_lib_t, NetworkManager_var_lib_t)
+files_var_lib_filetrans(NetworkManager_t, NetworkManager_var_lib_t, dir)
 
 manage_dirs_pattern(NetworkManager_t, NetworkManager_var_run_t, NetworkManager_var_run_t)
 manage_files_pattern(NetworkManager_t, NetworkManager_var_run_t, NetworkManager_var_run_t)
@@ -62,7 +76,9 @@
 kernel_read_system_state(NetworkManager_t)
 kernel_read_network_state(NetworkManager_t)
 kernel_read_kernel_sysctls(NetworkManager_t)
-kernel_load_module(NetworkManager_t)
+kernel_request_load_module(NetworkManager_t)
+kernel_read_debugfs(NetworkManager_t)
+kernel_rw_net_sysctls(NetworkManager_t)
 
 corenet_all_recvfrom_unlabeled(NetworkManager_t)
 corenet_all_recvfrom_netlabel(NetworkManager_t)
@@ -81,13 +97,18 @@
 corenet_sendrecv_isakmp_server_packets(NetworkManager_t)
 corenet_sendrecv_dhcpc_server_packets(NetworkManager_t)
 corenet_sendrecv_all_client_packets(NetworkManager_t)
+corenet_rw_tun_tap_dev(NetworkManager_t)
+corenet_getattr_ppp_dev(NetworkManager_t)
 
-dev_read_sysfs(NetworkManager_t)
 dev_read_rand(NetworkManager_t)
 dev_read_urand(NetworkManager_t)
+dev_rw_sysfs(NetworkManager_t)
+dev_dontaudit_getattr_generic_blk_files(NetworkManager_t)
+dev_getattr_all_chr_files(NetworkManager_t)
 
 fs_getattr_all_fs(NetworkManager_t)
 fs_search_auto_mountpoints(NetworkManager_t)
+fs_list_inotifyfs(NetworkManager_t)
 
 mls_file_read_all_levels(NetworkManager_t)
 
@@ -98,15 +119,20 @@
 
 domain_use_interactive_fds(NetworkManager_t)
 domain_read_confined_domains_state(NetworkManager_t)
-domain_dontaudit_read_all_domains_state(NetworkManager_t)
 
 files_read_etc_files(NetworkManager_t)
 files_read_etc_runtime_files(NetworkManager_t)
 files_read_usr_files(NetworkManager_t)
+files_read_usr_src_files(NetworkManager_t)
+
+storage_getattr_fixed_disk_dev(NetworkManager_t)
 
 init_read_utmp(NetworkManager_t)
+init_dontaudit_write_utmp(NetworkManager_t)
 init_domtrans_script(NetworkManager_t)
 
+auth_use_nsswitch(NetworkManager_t)
+
 logging_send_syslog_msg(NetworkManager_t)
 
 miscfiles_read_localization(NetworkManager_t)
@@ -116,25 +142,43 @@
 
 seutil_read_config(NetworkManager_t)
 
-sysnet_domtrans_ifconfig(NetworkManager_t)
-sysnet_domtrans_dhcpc(NetworkManager_t)
-sysnet_signal_dhcpc(NetworkManager_t)
-sysnet_read_dhcpc_pid(NetworkManager_t)
+sysnet_etc_filetrans_config(NetworkManager_t)
 sysnet_delete_dhcpc_pid(NetworkManager_t)
-sysnet_search_dhcp_state(NetworkManager_t)
-# in /etc created by NetworkManager will be labelled net_conf_t.
+sysnet_domtrans_dhcpc(NetworkManager_t)
+sysnet_domtrans_ifconfig(NetworkManager_t)
+sysnet_kill_dhcpc(NetworkManager_t)
 sysnet_manage_config(NetworkManager_t)
-sysnet_etc_filetrans_config(NetworkManager_t)
+sysnet_read_dhcp_config(NetworkManager_t)
+sysnet_read_dhcpc_pid(NetworkManager_t)
+sysnet_delete_dhcpc_state(NetworkManager_t)
+sysnet_read_dhcpc_state(NetworkManager_t)
+sysnet_signal_dhcpc(NetworkManager_t)
+sysnet_signull_dhcpc(NetworkManager_t)
 
+userdom_stream_connect(NetworkManager_t)
 userdom_dontaudit_use_unpriv_user_fds(NetworkManager_t)
 userdom_dontaudit_use_user_ttys(NetworkManager_t)
 # Read gnome-keyring
+userdom_read_home_certs(NetworkManager_t)
 userdom_read_user_home_content_files(NetworkManager_t)
+userdom_dgram_send(NetworkManager_t)
+
+cron_read_system_job_lib_files(NetworkManager_t)
+
+optional_policy(`
+	avahi_domtrans(NetworkManager_t)
+	avahi_kill(NetworkManager_t)
+	avahi_signal(NetworkManager_t)
+	avahi_signull(NetworkManager_t)
+	avahi_dbus_chat(NetworkManager_t)
+')
 
 optional_policy(`
 	bind_domtrans(NetworkManager_t)
 	bind_manage_cache(NetworkManager_t)
+	bind_kill(NetworkManager_t)
 	bind_signal(NetworkManager_t)
+	bind_signull(NetworkManager_t)
 ')
 
 optional_policy(`
@@ -142,12 +186,31 @@
 ')
 
 optional_policy(`
-	consoletype_exec(NetworkManager_t)
+	consoletype_domtrans(NetworkManager_t)
 ')
 
 optional_policy(`
-	dbus_system_bus_client(NetworkManager_t)
-	dbus_connect_system_bus(NetworkManager_t)
+	dbus_system_domain(NetworkManager_t, NetworkManager_exec_t)
+
+	init_dbus_chat(NetworkManager_t)
+
+	optional_policy(`
+		consolekit_dbus_chat(NetworkManager_t)
+	')
+')
+
+optional_policy(`
+	dnsmasq_read_pid_files(NetworkManager_t)
+	dnsmasq_delete_pid_files(NetworkManager_t)
+	dnsmasq_domtrans(NetworkManager_t)
+	dnsmasq_initrc_domtrans(NetworkManager_t)
+	dnsmasq_kill(NetworkManager_t)
+	dnsmasq_signal(NetworkManager_t)
+	dnsmasq_signull(NetworkManager_t)
+')
+
+optional_policy(`
+	hal_write_log(NetworkManager_t)
 ')
 
 optional_policy(`
@@ -155,23 +218,62 @@
 ')
 
 optional_policy(`
-	nis_use_ypbind(NetworkManager_t)
+	ipsec_domtrans_mgmt(NetworkManager_t)
+	ipsec_mgmt_kill(NetworkManager_t)
+	ipsec_mgmt_signal(NetworkManager_t)
+	ipsec_mgmt_signull(NetworkManager_t)
+') 
+
+optional_policy(`
+	iptables_domtrans(NetworkManager_t)
+')
+
+optional_policy(`
+    netutils_exec_ping(NetworkManager_t)
 ')
 
 optional_policy(`
-	nscd_socket_use(NetworkManager_t)
+	nscd_domtrans(NetworkManager_t)
 	nscd_signal(NetworkManager_t)
+	nscd_signull(NetworkManager_t)
+	nscd_kill(NetworkManager_t)
+	nscd_initrc_domtrans(NetworkManager_t)
+')
+
+optional_policy(`
+	# Dispatcher starting and stoping ntp
+	ntp_initrc_domtrans(NetworkManager_t)
 ')
 
 optional_policy(`
 	openvpn_domtrans(NetworkManager_t)
+	openvpn_kill(NetworkManager_t)
 	openvpn_signal(NetworkManager_t)
+	openvpn_signull(NetworkManager_t)
 ')
 
 optional_policy(`
+        policykit_dbus_chat(NetworkManager_t)
+	policykit_domtrans_auth(NetworkManager_t)
+	policykit_read_lib(NetworkManager_t)
+	policykit_read_reload(NetworkManager_t)
+	userdom_read_all_users_state(NetworkManager_t)
+')
+
+optional_policy(`
+	ppp_initrc_domtrans(NetworkManager_t)
 	ppp_domtrans(NetworkManager_t)
-	ppp_read_pid_files(NetworkManager_t)
+	ppp_manage_pid_files(NetworkManager_t)
+	ppp_kill(NetworkManager_t)
 	ppp_signal(NetworkManager_t)
+	ppp_signull(NetworkManager_t)
+	ppp_read_config(NetworkManager_t)
+')
+
+optional_policy(`
+	rpm_exec(NetworkManager_t)
+	rpm_read_db(NetworkManager_t)
+	rpm_dontaudit_manage_db(NetworkManager_t)
 ')
 
 optional_policy(`
@@ -179,12 +281,16 @@
 ')
 
 optional_policy(`
+	udev_exec(NetworkManager_t)
 	udev_read_db(NetworkManager_t)
 ')
 
 optional_policy(`
 	vpn_domtrans(NetworkManager_t)
+	vpn_kill(NetworkManager_t)
 	vpn_signal(NetworkManager_t)
+	vpn_signull(NetworkManager_t)
+	vpn_relabelfrom_tun_socket(NetworkManager_t)
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nis.fc serefpolicy-3.7.19/policy/modules/services/nis.fc
--- nsaserefpolicy/policy/modules/services/nis.fc	2011-03-17 07:21:21.097851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nis.fc	2011-03-17 07:21:03.588851001 +0000
@@ -1,4 +1,7 @@
-
+/etc/rc\.d/init\.d/ypbind		--	gen_context(system_u:object_r:ypbind_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/yppasswdd	--	gen_context(system_u:object_r:nis_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/ypserv		--	gen_context(system_u:object_r:nis_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/ypxfrd		--	gen_context(system_u:object_r:nis_initrc_exec_t,s0)
 /etc/ypserv\.conf	--	gen_context(system_u:object_r:ypserv_conf_t,s0)
 
 /sbin/ypbind		--	gen_context(system_u:object_r:ypbind_exec_t,s0)
@@ -8,6 +11,12 @@
 
 /usr/sbin/rpc\.yppasswdd --	gen_context(system_u:object_r:yppasswdd_exec_t,s0)
 /usr/sbin/rpc\.ypxfrd	--	gen_context(system_u:object_r:ypxfr_exec_t,s0)
+/usr/sbin/ypbind	--	gen_context(system_u:object_r:ypbind_exec_t,s0)
 /usr/sbin/ypserv	--	gen_context(system_u:object_r:ypserv_exec_t,s0)
 
 /var/yp(/.*)?			gen_context(system_u:object_r:var_yp_t,s0)
+
+/var/run/ypxfrd.*	--	gen_context(system_u:object_r:ypxfr_var_run_t,s0)
+/var/run/ypbind.*	--	gen_context(system_u:object_r:ypbind_var_run_t,s0)
+/var/run/ypserv.*	--	gen_context(system_u:object_r:ypserv_var_run_t,s0)
+/var/run/yppass.*	--	gen_context(system_u:object_r:yppasswdd_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nis.if serefpolicy-3.7.19/policy/modules/services/nis.if
--- nsaserefpolicy/policy/modules/services/nis.if	2011-03-17 07:21:21.844851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nis.if	2012-02-28 09:12:16.250897641 +0000
@@ -28,7 +28,7 @@
 		type var_yp_t;
 	')
 
-	dontaudit $1 self:capability net_bind_service;
+	allow $1 self:capability net_bind_service;
 
 	allow $1 self:tcp_socket create_stream_socket_perms;
 	allow $1 self:udp_socket create_socket_perms;
@@ -38,27 +38,28 @@
 	allow $1 var_yp_t:file read_file_perms;
 
 	corenet_all_recvfrom_unlabeled($1)
-	corenet_all_recvfrom_netlabel($1)
-	corenet_tcp_sendrecv_generic_if($1)
-	corenet_udp_sendrecv_generic_if($1)
-	corenet_tcp_sendrecv_generic_node($1)
-	corenet_udp_sendrecv_generic_node($1)
-	corenet_tcp_sendrecv_all_ports($1)
-	corenet_udp_sendrecv_all_ports($1)
-	corenet_tcp_bind_generic_node($1)
-	corenet_udp_bind_generic_node($1)
-	corenet_tcp_bind_generic_port($1)
-	corenet_udp_bind_generic_port($1)
-	corenet_dontaudit_tcp_bind_all_reserved_ports($1)
-	corenet_dontaudit_udp_bind_all_reserved_ports($1)
-	corenet_dontaudit_tcp_bind_all_ports($1)
-	corenet_dontaudit_udp_bind_all_ports($1)
-	corenet_tcp_connect_portmap_port($1)
-	corenet_tcp_connect_reserved_port($1)
-	corenet_tcp_connect_generic_port($1)
-	corenet_dontaudit_tcp_connect_all_ports($1)
-	corenet_sendrecv_portmap_client_packets($1)
-	corenet_sendrecv_generic_client_packets($1)
+    corenet_all_recvfrom_netlabel($1)
+    corenet_tcp_sendrecv_generic_if($1)
+    corenet_udp_sendrecv_generic_if($1)
+    corenet_tcp_sendrecv_generic_node($1)
+    corenet_udp_sendrecv_generic_node($1)
+    corenet_tcp_sendrecv_all_ports($1)
+    corenet_udp_sendrecv_all_ports($1)
+    corenet_tcp_bind_generic_node($1)
+    corenet_udp_bind_generic_node($1)
+    corenet_tcp_bind_generic_port($1)
+    corenet_udp_bind_generic_port($1)
+    corenet_tcp_bind_all_rpc_ports($1)
+    corenet_udp_bind_all_rpc_ports($1)
+    corenet_dontaudit_tcp_bind_all_ports($1)
+    corenet_dontaudit_udp_bind_all_ports($1)
+    corenet_tcp_connect_portmap_port($1)
+    corenet_tcp_connect_all_reserved_ports($1)
+    corenet_tcp_connect_generic_port($1)
+	# Attempt to see if this is actually needed
+    # corenet_dontaudit_tcp_connect_all_ports($1)
+    corenet_sendrecv_portmap_client_packets($1)
+    corenet_sendrecv_generic_client_packets($1)
 	corenet_sendrecv_generic_server_packets($1)
 
 	sysnet_read_config($1)
@@ -133,11 +134,37 @@
 
 ########################################
 ## <summary>
+##	Execute ypbind in the ypbind domain, and
+##	allow the specified role the ypbind domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the ypbind domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`nis_run_ypbind',`
+	gen_require(`
+		type ypbind_t;
+	')
+
+	nis_domtrans_ypbind($1)
+	role $2 types ypbind_t;
+')
+
+########################################
+## <summary>
 ##	Send generic signals to ypbind.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -155,7 +182,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -174,7 +201,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -274,7 +301,44 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
+##	Execute nis server in the nis domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+#
+interface(`nis_initrc_domtrans',`
+	gen_require(`
+		type nis_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, nis_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Execute nis server in the nis domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nis_initrc_domtrans_ypbind',`
+	gen_require(`
+		type ypbind_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, ypbind_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
 ##	an nis environment
 ## </summary>
 ## <param name="domain">
@@ -294,6 +358,7 @@
 		type ypbind_t, yppasswdd_t, ypserv_t, ypxfr_t;
 		type ypbind_tmp_t, ypserv_tmp_t, ypserv_conf_t;
 		type ypbind_var_run_t, yppasswdd_var_run_t, ypserv_var_run_t;
+		type ypbind_initrc_exec_t, nis_initrc_exec_t;
 	')
 
 	allow $1 ypbind_t:process { ptrace signal_perms };
@@ -308,6 +373,13 @@
 	allow $1 ypxfr_t:process { ptrace signal_perms };
 	ps_process_pattern($1, ypxfr_t)
 
+	nis_initrc_domtrans($1)
+	nis_initrc_domtrans_ypbind($1)
+	domain_system_change_exemption($1)
+	role_transition $2 nis_initrc_exec_t system_r;
+	role_transition $2 ypbind_initrc_exec_t system_r;
+	allow $2 system_r;
+
 	files_list_tmp($1)
 	admin_pattern($1, ypbind_tmp_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nis.te serefpolicy-3.7.19/policy/modules/services/nis.te
--- nsaserefpolicy/policy/modules/services/nis.te	2011-03-17 07:21:20.965851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nis.te	2011-09-21 14:59:07.650160002 +0000
@@ -1,11 +1,14 @@
 
-policy_module(nis, 1.9.0)
+policy_module(nis, 1.10.0)
 
 ########################################
 #
 # Declarations
 #
 
+type nis_initrc_exec_t;
+init_script_file(nis_initrc_exec_t)
+
 type var_yp_t;
 files_type(var_yp_t)
 
@@ -13,6 +16,9 @@
 type ypbind_exec_t;
 init_daemon_domain(ypbind_t, ypbind_exec_t)
 
+type ypbind_initrc_exec_t;
+init_script_file(ypbind_initrc_exec_t)
+
 type ypbind_tmp_t;
 files_tmp_file(ypbind_tmp_t)
 
@@ -44,6 +50,9 @@
 type ypxfr_exec_t;
 init_daemon_domain(ypxfr_t, ypxfr_exec_t)
 
+type ypxfr_var_run_t;
+files_pid_file(ypxfr_var_run_t)
+
 ########################################
 #
 # ypbind local policy
@@ -65,9 +74,8 @@
 
 manage_files_pattern(ypbind_t, var_yp_t, var_yp_t)
 
+kernel_read_system_state(ypbind_t)
 kernel_read_kernel_sysctls(ypbind_t)
-kernel_list_proc(ypbind_t)
-kernel_read_proc_symlinks(ypbind_t)
 
 corenet_all_recvfrom_unlabeled(ypbind_t)
 corenet_all_recvfrom_netlabel(ypbind_t)
@@ -136,7 +144,7 @@
 allow yppasswdd_t self:capability dac_override;
 dontaudit yppasswdd_t self:capability sys_tty_config;
 allow yppasswdd_t self:fifo_file rw_fifo_file_perms;
-allow yppasswdd_t self:process { setfscreate signal_perms };
+allow yppasswdd_t self:process { getsched setfscreate signal_perms };
 allow yppasswdd_t self:unix_dgram_socket create_socket_perms;
 allow yppasswdd_t self:unix_stream_socket create_stream_socket_perms;
 allow yppasswdd_t self:netlink_route_socket r_netlink_socket_perms;
@@ -204,6 +212,10 @@
 ')
 
 optional_policy(`
+	mta_send_mail(yppasswdd_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(yppasswdd_t)
 ')
 
@@ -250,6 +262,8 @@
 corenet_udp_sendrecv_all_ports(ypserv_t)
 corenet_tcp_bind_generic_node(ypserv_t)
 corenet_udp_bind_generic_node(ypserv_t)
+corenet_tcp_bind_reserved_port(ypserv_t)
+corenet_udp_bind_reserved_port(ypserv_t)
 corenet_tcp_bind_all_rpc_ports(ypserv_t)
 corenet_udp_bind_all_rpc_ports(ypserv_t)
 corenet_dontaudit_tcp_bind_all_reserved_ports(ypserv_t)
@@ -305,6 +319,9 @@
 
 allow ypxfr_t ypserv_conf_t:file read_file_perms;
 
+manage_files_pattern(ypxfr_t, ypxfr_var_run_t, ypxfr_var_run_t)
+files_pid_filetrans(ypxfr_t, ypxfr_var_run_t, file)
+
 corenet_all_recvfrom_unlabeled(ypxfr_t)
 corenet_all_recvfrom_netlabel(ypxfr_t)
 corenet_tcp_sendrecv_generic_if(ypxfr_t)
@@ -315,6 +332,8 @@
 corenet_udp_sendrecv_all_ports(ypxfr_t)
 corenet_tcp_bind_generic_node(ypxfr_t)
 corenet_udp_bind_generic_node(ypxfr_t)
+corenet_tcp_bind_reserved_port(ypxfr_t)
+corenet_udp_bind_reserved_port(ypxfr_t)
 corenet_tcp_bind_all_rpc_ports(ypxfr_t)
 corenet_udp_bind_all_rpc_ports(ypxfr_t)
 corenet_dontaudit_tcp_bind_all_reserved_ports(ypxfr_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nova.fc serefpolicy-3.7.19/policy/modules/services/nova.fc
--- nsaserefpolicy/policy/modules/services/nova.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nova.fc	2012-05-15 09:30:05.570783919 +0000
@@ -0,0 +1,31 @@
+
+/etc/rc\.d/etc/init\.d/openstack-nova-api	--	gen_context(system_u:object_r:nova_api_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-cert	--	gen_context(system_u:object_r:nova_cert_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-console	--	gen_context(system_u:object_r:nova_console_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-consoleauth	--	gen_context(system_u:object_r:nova_console_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-direct-api	--	gen_context(system_u:object_r:nova_direct_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-metadata-api	--	gen_context(system_u:object_r:nova_api_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-network	--	gen_context(system_u:object_r:nova_network_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-objectstore	--	gen_context(system_u:object_r:nova_objectstore_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-scheduler	--	gen_context(system_u:object_r:nova_scheduler_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-volume	--	gen_context(system_u:object_r:nova_volume_initrc_exec_t,s0)
+/etc/rc\.d/etc/init\.d/openstack-nova-xvpvncproxy	--	gen_context(system_u:object_r:nova_vncproxy_initrc_exec_t,s0)
+
+/usr/bin/nova-ajax-console-proxy	--	gen_context(system_u:object_r:nova_ajax_exec_t,s0)
+/usr/bin/nova-console.*		--	gen_context(system_u:object_r:nova_console_exec_t,s0)
+/usr/bin/nova-direct-api	--  gen_context(system_u:object_r:nova_direct_exec_t,s0)
+/usr/bin/nova-api			--  gen_context(system_u:object_r:nova_api_exec_t,s0)
+/usr/bin/nova-cert           --  gen_context(system_u:object_r:nova_cert_exec_t,s0)
+/usr//bin/nova-api-metadata	--	gen_context(system_u:object_r:nova_api_exec_t,s0)
+/usr/bin/nova-network       --  gen_context(system_u:object_r:nova_network_exec_t,s0)
+/usr/bin/nova-objectstore       --  gen_context(system_u:object_r:nova_objectstore_exec_t,s0)
+/usr/bin/nova-scheduler     --  gen_context(system_u:object_r:nova_scheduler_exec_t,s0)
+/usr/bin/nova-vncproxy      --  gen_context(system_u:object_r:nova_vncproxy_exec_t,s0)
+/usr/bin/nova-volume        --  gen_context(system_u:object_r:nova_volume_exec_t,s0)
+/usr//bin/nova-xvpvncproxy	--	gen_context(system_u:object_r:nova_vncproxy_exec_t,s0)
+
+/var/lib/nova(/.*)?     gen_context(system_u:object_r:nova_var_lib_t,s0)
+
+/var/log/nova(/.*)?     gen_context(system_u:object_r:nova_log_t,s0)
+
+/var/run/nova(/.*)?     gen_context(system_u:object_r:nova_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nova.if serefpolicy-3.7.19/policy/modules/services/nova.if
--- nsaserefpolicy/policy/modules/services/nova.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nova.if	2012-05-14 14:44:39.354645062 +0000
@@ -0,0 +1,33 @@
+## <summary>openstack-nova</summary>
+
+#######################################
+## <summary>
+##  Creates types and rules for a basic
+##  openstack-nova systemd daemon domain.
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+template(`nova_domain_template',`
+	gen_require(`
+		attribute nova_domain;
+	')
+
+	type nova_$1_t, nova_domain;
+	type nova_$1_exec_t;
+	init_daemon_domain(nova_$1_t, nova_$1_exec_t)
+
+	type nova_$1_initrc_exec_t;
+	init_script_file(nova_$1_initrc_exec_t)
+
+	type nova_$1_tmp_t;
+	files_tmp_file(nova_$1_tmp_t)
+
+	manage_dirs_pattern(nova_$1_t, nova_$1_tmp_t, nova_$1_tmp_t)
+	manage_files_pattern(nova_$1_t, nova_$1_tmp_t, nova_$1_tmp_t)
+	files_tmp_filetrans(nova_$1_t, nova_$1_tmp_t, { file dir })
+	can_exec(nova_$1_t, nova_$1_tmp_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nova.te serefpolicy-3.7.19/policy/modules/services/nova.te
--- nsaserefpolicy/policy/modules/services/nova.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nova.te	2012-05-14 14:56:19.983159588 +0000
@@ -0,0 +1,335 @@
+policy_module(nova, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+#
+# nova-stack daemons contain security issue with using sudo in the code
+# we make this policy as unconfined until this issue is fixed
+#
+
+attribute nova_domain;
+
+nova_domain_template(ajax)
+nova_domain_template(api)
+nova_domain_template(cert)
+nova_domain_template(compute)
+nova_domain_template(console)
+nova_domain_template(direct)
+nova_domain_template(network)
+nova_domain_template(objectstore)
+nova_domain_template(scheduler)
+nova_domain_template(vncproxy)
+nova_domain_template(volume)
+
+type nova_log_t;
+logging_log_file(nova_log_t)
+
+type nova_var_lib_t;
+files_type(nova_var_lib_t)
+
+type nova_var_run_t;
+files_pid_file(nova_var_run_t)
+
+
+######################################
+#
+# nova general domain local policy
+#
+
+allow nova_domain self:fifo_file rw_fifo_file_perms;
+allow nova_domain self:tcp_socket create_stream_socket_perms;
+allow nova_domain self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(nova_domain, nova_log_t, nova_log_t)
+manage_files_pattern(nova_domain, nova_log_t, nova_log_t)
+
+manage_dirs_pattern(nova_domain, nova_var_lib_t, nova_var_lib_t)
+manage_files_pattern(nova_domain, nova_var_lib_t, nova_var_lib_t)
+
+manage_dirs_pattern(nova_domain, nova_var_run_t, nova_var_run_t)
+manage_files_pattern(nova_domain, nova_var_run_t, nova_var_run_t)
+
+kernel_read_system_state(nova_domain)
+
+corenet_tcp_connect_amqp_port(nova_domain)
+
+corecmd_exec_bin(nova_domain)
+corecmd_exec_shell(nova_domain)
+
+dev_read_urand(nova_domain)
+
+fs_getattr_xattr_fs(nova_domain)
+
+files_read_usr_files(nova_domain)
+
+libs_exec_ldconfig(nova_domain)
+
+files_read_etc_files(nova_domain)
+
+miscfiles_read_localization(nova_domain)
+
+optional_policy(`
+	sysnet_read_config(nova_domain)
+')
+
+######################################
+#
+# nova ajax local policy
+#
+
+optional_policy(`
+	unconfined_domain(nova_ajax_t)
+')
+
+#######################################
+#
+# nova api local policy
+#
+
+allow nova_api_t self:process setfscreate;
+
+allow nova_api_t self:key write;
+
+allow nova_api_t self:netlink_route_socket r_netlink_socket_perms;
+
+allow nova_api_t self:udp_socket create_socket_perms;
+
+kernel_read_kernel_sysctls(nova_api_t)
+
+corenet_tcp_bind_generic_node(nova_api_t)
+corenet_udp_bind_generic_node(nova_api_t)
+# should be add to booleans
+corenet_tcp_connect_all_ports(nova_api_t)
+corenet_tcp_bind_all_unreserved_ports(nova_api_t)
+
+logging_send_syslog_msg(nova_api_t)
+
+miscfiles_read_certs(nova_api_t)
+
+ifdef(`hide_broken_symptoms',`
+	optional_policy(`
+		sudo_exec(nova_api_t)
+		allow nova_api_t self:capability { setuid sys_resource setgid };
+		allow nova_api_t self:process { setsched setrlimit };
+		logging_send_audit_msgs(nova_api_t)
+	')
+')
+
+optional_policy(`
+	iptables_domtrans(nova_api_t)
+')
+
+optional_policy(`
+	ssh_exec_keygen(nova_api_t)
+')
+
+optional_policy(`
+	unconfined_domain(nova_api_t)
+')
+
+######################################
+#
+# nova cert local policy
+#
+
+allow nova_cert_t self:process setfscreate;
+
+allow nova_cert_t self:udp_socket create_socket_perms;
+
+miscfiles_read_certs(nova_cert_t)
+
+optional_policy(`
+	mysql_stream_connect(nova_cert_t)
+')
+
+optional_policy(`
+	unconfined_domain(nova_cert_t)
+')
+#######################################
+#
+# nova compute local policy
+#
+
+# needs to be re-write since now runs as virtd_t
+
+allow nova_compute_t self:udp_socket create_socket_perms;
+
+kernel_read_network_state(nova_compute_t)
+
+dev_read_rand(nova_compute_t)
+
+dev_read_sysfs(nova_compute_t)
+
+optional_policy(`
+	virt_getattr_exec(nova_compute_t)
+	virt_stream_connect(nova_compute_t)
+')
+
+optional_policy(`
+	unconfined_domain(nova_compute_t)
+')
+
+######################################
+#
+# nova console local policy
+#
+
+allow nova_console_t self:udp_socket create_socket_perms;
+
+auth_use_nsswitch(nova_console_t)
+
+optional_policy(`
+	unconfined_domain(nova_console_t)
+')
+
+#######################################
+#
+# nova direct local policy
+#
+
+optional_policy(`
+	unconfined_domain(nova_direct_t)
+')
+
+#######################################
+#
+# nova network local policy
+#
+
+allow nova_network_t self:capability { dac_override net_admin net_bind_service };
+allow nova_network_t self:process { getcap setcap };
+
+allow nova_network_t self:netlink_route_socket r_netlink_socket_perms;
+allow nova_network_t self:udp_socket create_socket_perms;
+
+kernel_read_network_state(nova_network_t)
+kernel_read_kernel_sysctls(nova_network_t)
+
+# should be added to boolean or fixed in the code
+# dnsmasq domtrans does not work since then dnsmasq_t wants
+# to do some stuff with nova_lib, nova_tmp
+# nova-dhcpbridge runs in dnsmasq domain
+corenet_all_recvfrom_unlabeled(nova_network_t)
+corenet_all_recvfrom_netlabel(nova_network_t)
+corenet_tcp_sendrecv_generic_if(nova_network_t)
+corenet_udp_sendrecv_generic_if(nova_network_t)
+corenet_raw_sendrecv_generic_if(nova_network_t)
+corenet_tcp_sendrecv_generic_node(nova_network_t)
+corenet_udp_sendrecv_generic_node(nova_network_t)
+corenet_raw_sendrecv_generic_node(nova_network_t)
+corenet_tcp_sendrecv_all_ports(nova_network_t)
+corenet_udp_sendrecv_all_ports(nova_network_t)
+corenet_tcp_bind_generic_node(nova_network_t)
+corenet_udp_bind_generic_node(nova_network_t)
+corenet_tcp_bind_dns_port(nova_network_t)
+corenet_udp_bind_all_ports(nova_network_t)
+corenet_sendrecv_dns_server_packets(nova_network_t)
+corenet_sendrecv_dhcpd_server_packets(nova_network_t)
+
+libs_exec_ldconfig(nova_network_t)
+
+logging_send_syslog_msg(nova_network_t)
+
+ifdef(`hide_broken_symptoms',`
+    optional_policy(`
+        sudo_exec(nova_network_t)
+        allow nova_network_t self:capability { setuid sys_resource setgid };
+        allow nova_network_t self:process { setsched setrlimit };
+        logging_send_audit_msgs(nova_network_t)
+    ')
+')
+
+optional_policy(`
+	brctl_domtrans(nova_network_t)
+')
+
+optional_policy(`
+	dnsmasq_exec(nova_network_t)
+#	dnsmasq_domtrans(nova_network_t)
+')
+
+optional_policy(`
+    iptables_domtrans(nova_network_t)
+')
+
+optional_policy(`
+	sysnet_domtrans_ifconfig(nova_network_t)
+')
+
+optional_policy(`
+	unconfined_domain(nova_network_t)
+')
+
+#######################################
+#
+# nova object store local policy
+#
+
+allow nova_objectstore_t self:udp_socket create_socket_perms;
+
+corenet_tcp_bind_generic_node(nova_objectstore_t)
+corenet_udp_bind_generic_node(nova_objectstore_t)
+
+optional_policy(`
+    unconfined_domain(nova_objectstore_t)
+')
+
+#######################################
+#
+# nova scheduler local policy
+#
+
+allow nova_scheduler_t self:netlink_route_socket r_netlink_socket_perms;
+allow nova_scheduler_t self:udp_socket create_socket_perms;
+
+optional_policy(`
+	unconfined_domain(nova_scheduler_t)
+')
+
+#######################################
+#
+# nova vncproxy local policy
+#
+
+optional_policy(`
+	unconfined_domain(nova_vncproxy_t)
+')
+
+#######################################
+#
+# nova volume local policy
+#
+
+allow nova_volume_t self:netlink_route_socket r_netlink_socket_perms;
+
+allow nova_volume_t self:udp_socket create_socket_perms;
+
+kernel_read_kernel_sysctls(nova_volume_t)
+
+logging_send_syslog_msg(nova_volume_t)
+
+optional_policy(`
+	lvm_domtrans(nova_volume_t)
+')
+
+ifdef(`hide_broken_symptoms',`
+	require {
+		type sudo_exec_t;
+	}
+
+	allow nova_volume_t sudo_exec_t:file { read execute open execute_no_trans };
+
+	allow nova_volume_t self:capability { setuid sys_resource setgid audit_write };
+	allow nova_volume_t self:process { setsched setrlimit };
+
+	logging_send_audit_msgs(nova_volume_t)
+
+')
+
+optional_policy(`
+    unconfined_domain(nova_volume_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nscd.if serefpolicy-3.7.19/policy/modules/services/nscd.if
--- nsaserefpolicy/policy/modules/services/nscd.if	2011-03-17 07:21:21.409851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nscd.if	2011-03-17 07:21:03.864851003 +0000
@@ -112,11 +112,33 @@
 	allow $1 self:unix_stream_socket create_socket_perms;
 
 	allow $1 nscd_t:nscd { getpwd getgrp gethost };
+
+	ps_process_pattern(nscd_t, $1)
+
 	dontaudit $1 nscd_t:fd use;
 	dontaudit $1 nscd_t:nscd { getserv shmempwd shmemgrp shmemhost shmemserv };
 	files_search_pids($1)
 	stream_connect_pattern($1, nscd_var_run_t, nscd_var_run_t, nscd_t)
 	dontaudit $1 nscd_var_run_t:file { getattr read };
+
+')
+
+########################################
+## <summary>
+##	Use nscd services
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nscd_use',`
+	tunable_policy(`nscd_use_shm',`
+		nscd_shm_use($1)
+	',`
+		nscd_socket_use($1)
+	')
 ')
 
 ########################################
@@ -168,7 +190,7 @@
 		type nscd_var_run_t;
 	')
 
-	dontaudit $1 nscd_var_run_t:dir search;
+	dontaudit $1 nscd_var_run_t:dir search_dir_perms;
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nscd.te serefpolicy-3.7.19/policy/modules/services/nscd.te
--- nsaserefpolicy/policy/modules/services/nscd.te	2011-03-17 07:21:20.902851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nscd.te	2011-03-17 07:21:03.289851003 +0000
@@ -1,10 +1,17 @@
 
-policy_module(nscd, 1.10.0)
+policy_module(nscd, 1.10.1)
 
 gen_require(`
 	class nscd all_nscd_perms;
 ')
 
+## <desc>
+## <p>
+## Allow confined applications to use nscd shared memory.
+## </p>
+## </desc>
+gen_tunable(nscd_use_shm, false)
+
 ########################################
 #
 # Declarations
@@ -31,7 +38,7 @@
 # Local policy
 #
 
-allow nscd_t self:capability { kill setgid setuid };
+allow nscd_t self:capability { kill setgid setuid sys_ptrace };
 dontaudit nscd_t self:capability sys_tty_config;
 allow nscd_t self:process { getattr getcap setcap setsched signal_perms };
 allow nscd_t self:fifo_file read_fifo_file_perms;
@@ -91,6 +98,7 @@
 selinux_compute_relabel_context(nscd_t)
 selinux_compute_user_contexts(nscd_t)
 domain_use_interactive_fds(nscd_t)
+domain_search_all_domains_state(nscd_t)
 
 files_read_etc_files(nscd_t)
 files_read_generic_tmp_symlinks(nscd_t)
@@ -113,6 +121,10 @@
 userdom_dontaudit_search_user_home_dirs(nscd_t)
 
 optional_policy(`
+	accountsd_dontaudit_rw_fifo_file(nscd_t)
+')
+
+optional_policy(`
 	cron_read_system_job_tmp_files(nscd_t)
 ')
 
@@ -128,3 +140,16 @@
 	xen_dontaudit_rw_unix_stream_sockets(nscd_t)
 	xen_append_log(nscd_t)
 ')
+
+optional_policy(`
+	tunable_policy(`samba_domain_controller',`
+		samba_append_log(nscd_t)
+		samba_dontaudit_use_fds(nscd_t)
+	')
+	samba_read_config(nscd_t)
+	samba_read_var_files(nscd_t)
+')
+
+optional_policy(`
+	unconfined_dontaudit_rw_packet_sockets(nscd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nslcd.if serefpolicy-3.7.19/policy/modules/services/nslcd.if
--- nsaserefpolicy/policy/modules/services/nslcd.if	2011-03-17 07:21:22.236851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nslcd.if	2011-03-17 07:21:04.967851001 +0000
@@ -106,9 +106,9 @@
 	role_transition $2 nslcd_initrc_exec_t system_r;
 	allow $2 system_r;
 
-	manage_files_pattern($1, nslcd_conf_t, nslcd_conf_t)
+	files_search_etc($1)
+	admin_pattern($1, nslcd_conf_t)
 
-	manage_dirs_pattern($1, nslcd_var_run_t, nslcd_var_run_t)
-	manage_files_pattern($1, nslcd_var_run_t, nslcd_var_run_t)
-	manage_lnk_files_pattern($1, nslcd_var_run_t, nslcd_var_run_t)
+	files_search_pids($1)
+	admin_pattern($1, nslcd_var_run_t, nslcd_var_run_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nslcd.te serefpolicy-3.7.19/policy/modules/services/nslcd.te
--- nsaserefpolicy/policy/modules/services/nslcd.te	2011-03-17 07:21:21.132851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nslcd.te	2012-03-20 22:05:47.769848664 +0000
@@ -1,4 +1,3 @@
-
 policy_module(nslcd, 1.0.1)
 
 ########################################
@@ -17,7 +16,7 @@
 files_pid_file(nslcd_var_run_t)
 
 type nslcd_conf_t;
-files_type(nslcd_conf_t)
+files_config_file(nslcd_conf_t)
 
 ########################################
 #
@@ -25,7 +24,7 @@
 #
 
 allow nslcd_t self:capability { setgid setuid dac_override };
-allow nslcd_t self:process signal;
+allow nslcd_t self:process { setsched signal };
 allow nslcd_t self:unix_stream_socket create_stream_socket_perms;
 
 allow nslcd_t nslcd_conf_t:file read_file_perms;
@@ -35,10 +34,24 @@
 manage_sock_files_pattern(nslcd_t, nslcd_var_run_t, nslcd_var_run_t)
 files_pid_filetrans(nslcd_t, nslcd_var_run_t, { file dir })
 
+kernel_read_system_state(nslcd_t)
+
 files_read_etc_files(nslcd_t)
+files_read_usr_symlinks(nslcd_t)
+files_list_tmp(nslcd_t)
 
 auth_use_nsswitch(nslcd_t)
 
 logging_send_syslog_msg(nslcd_t)
 
 miscfiles_read_localization(nslcd_t)
+
+userdom_read_user_tmp_files(nslcd_t)
+
+optional_policy(`
+    dirsrv_stream_connect(nslcd_t)
+')
+
+optional_policy(`
+    ldap_stream_connect(nslcd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ntop.if serefpolicy-3.7.19/policy/modules/services/ntop.if
--- nsaserefpolicy/policy/modules/services/ntop.if	2011-03-17 07:21:20.860851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ntop.if	2011-03-17 07:21:03.238851003 +0000
@@ -1 +1,157 @@
 ## <summary>Network Top</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run ntop.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`ntop_domtrans',`
+	gen_require(`
+		type ntop_t, ntop_exec_t;
+	')
+
+	domtrans_pattern($1, ntop_exec_t, ntop_t)
+')
+
+########################################
+## <summary>
+##	Execute ntop server in the ntop domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`ntop_initrc_domtrans',`
+	gen_require(`
+		type ntop_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, ntop_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Read ntop content in /etc
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ntop_read_config',`
+	gen_require(`
+		type ntop_etc_t;
+	')
+
+	read_files_pattern($1, ntop_etc_t, ntop_etc_t);
+	files_search_etc($1)
+')
+
+########################################
+## <summary>
+##	Search ntop dirs in /var/lib
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ntop_search_lib',`
+	gen_require(`
+		type ntop_var_lib_t;
+	')
+
+	search_dirs_pattern($1, ntop_var_lib_t, ntop_var_lib_t)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read ntop files in /var/lib
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ntop_read_lib_files',`
+	gen_require(`
+		type ntop_var_lib_t;
+	')
+
+	read_files_pattern($1, ntop_var_lib_t, ntop_var_lib_t)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Manage ntop files in /var/lib
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ntop_manage_lib_files',`
+	gen_require(`
+		type ntop_var_lib_t;
+	')
+
+	manage_files_pattern($1, ntop_var_lib_t, ntop_var_lib_t)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an ntop environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`ntop_admin',`
+	gen_require(`
+		type ntop_t, ntop_var_lib_t, ntop_var_run_t;
+		type ntop_etc_t, ntop_initrc_exec_t;
+		type ntop_tmp_t;
+	')
+
+	allow $1 ntop_t:process { ptrace signal_perms getattr };
+	read_files_pattern($1, ntop_t, ntop_t)
+
+	files_search_etc($1)
+	admin_pattern($1, ntop_etc_t)
+
+	files_list_var_lib($1)
+	admin_pattern($1, ntop_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, ntop_var_run_t)
+
+	admin_pattern($1, ntop_tmp_t)
+
+	ntop_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 ntop_initrc_exec_t system_r;
+	allow $2 system_r;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ntop.te serefpolicy-3.7.19/policy/modules/services/ntop.te
--- nsaserefpolicy/policy/modules/services/ntop.te	2011-03-17 07:21:20.941851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ntop.te	2011-03-17 07:21:03.381851002 +0000
@@ -11,12 +11,12 @@
 init_daemon_domain(ntop_t, ntop_exec_t)
 application_domain(ntop_t, ntop_exec_t)
 
+type ntop_initrc_exec_t;
+init_script_file(ntop_initrc_exec_t)
+
 type ntop_etc_t;
 files_config_file(ntop_etc_t)
 
-type ntop_http_content_t;
-files_type(ntop_http_content_t)
-
 type ntop_tmp_t;
 files_tmp_file(ntop_tmp_t)
 
@@ -37,26 +37,28 @@
 allow ntop_t self:fifo_file rw_fifo_file_perms;
 allow ntop_t self:tcp_socket create_stream_socket_perms;
 allow ntop_t self:udp_socket create_socket_perms;
+allow ntop_t self:unix_dgram_socket create_socket_perms;
+allow ntop_t self:unix_stream_socket create_stream_socket_perms;
 allow ntop_t self:packet_socket create_socket_perms;
+allow ntop_t self:socket create_socket_perms;
 
 allow ntop_t ntop_etc_t:dir list_dir_perms;
 read_files_pattern(ntop_t, ntop_etc_t, ntop_etc_t)
 read_lnk_files_pattern(ntop_t, ntop_etc_t, ntop_etc_t)
 
-allow ntop_t ntop_http_content_t:dir list_dir_perms;
-read_files_pattern(ntop_t, ntop_http_content_t, ntop_http_content_t)
-
 manage_dirs_pattern(ntop_t, ntop_tmp_t, ntop_tmp_t)
 manage_files_pattern(ntop_t, ntop_tmp_t, ntop_tmp_t)
 files_tmp_filetrans(ntop_t, ntop_tmp_t, { file dir })
 
-create_dirs_pattern(ntop_t, ntop_var_lib_t, ntop_var_lib_t)
+manage_dirs_pattern(ntop_t, ntop_var_lib_t, ntop_var_lib_t)
 manage_files_pattern(ntop_t, ntop_var_lib_t, ntop_var_lib_t)
-files_var_lib_filetrans(ntop_t, ntop_var_lib_t, file)
+files_var_lib_filetrans(ntop_t, ntop_var_lib_t, { file dir } )
 
 manage_files_pattern(ntop_t, ntop_var_run_t, ntop_var_run_t)
 files_pid_filetrans(ntop_t, ntop_var_run_t, file)
 
+kernel_request_load_module(ntop_t)
+kernel_read_system_state(ntop_t)
 kernel_read_network_state(ntop_t)
 kernel_read_kernel_sysctls(ntop_t)
 kernel_list_proc(ntop_t)
@@ -72,26 +74,36 @@
 corenet_raw_sendrecv_generic_node(ntop_t)
 corenet_tcp_sendrecv_all_ports(ntop_t)
 corenet_udp_sendrecv_all_ports(ntop_t)
+corenet_tcp_bind_ntop_port(ntop_t)
+corenet_tcp_connect_ntop_port(ntop_t)
+corenet_tcp_connect_http_port(ntop_t)
 
 dev_read_sysfs(ntop_t)
+dev_rw_generic_usb_dev(ntop_t)
 
 domain_use_interactive_fds(ntop_t)
 
 files_read_etc_files(ntop_t)
+files_read_usr_files(ntop_t)
 
 fs_getattr_all_fs(ntop_t)
 fs_search_auto_mountpoints(ntop_t)
 
+auth_use_nsswitch(ntop_t)
+
 logging_send_syslog_msg(ntop_t)
 
 miscfiles_read_localization(ntop_t)
-
-sysnet_read_config(ntop_t)
+miscfiles_read_fonts(ntop_t)
 
 userdom_dontaudit_use_unpriv_user_fds(ntop_t)
 userdom_dontaudit_search_user_home_dirs(ntop_t)
 
 optional_policy(`
+	apache_read_sys_content(ntop_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(ntop_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ntp.if serefpolicy-3.7.19/policy/modules/services/ntp.if
--- nsaserefpolicy/policy/modules/services/ntp.if	2011-03-17 07:21:21.562851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ntp.if	2011-03-17 07:21:04.045851001 +0000
@@ -144,7 +144,7 @@
 		type ntpd_initrc_exec_t;
 	')
 
-	allow $1 ntpd_t:process { ptrace signal_perms getattr };
+	allow $1 ntpd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, ntpd_t)
 
 	init_labeled_script_domtrans($1, ntpd_initrc_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ntp.te serefpolicy-3.7.19/policy/modules/services/ntp.te
--- nsaserefpolicy/policy/modules/services/ntp.te	2011-03-17 07:21:22.068851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ntp.te	2011-08-23 12:27:25.635160002 +0000
@@ -97,11 +97,15 @@
 dev_read_sysfs(ntpd_t)
 # for SSP
 dev_read_urand(ntpd_t)
+dev_rw_realtime_clock(ntpd_t)
 
 fs_getattr_all_fs(ntpd_t)
 fs_search_auto_mountpoints(ntpd_t)
+# Necessary to communicate with gpsd devices
+fs_rw_tmpfs_files(ntpd_t)
 
 term_use_ptmx(ntpd_t)
+term_use_unallocated_ttys(ntpd_t)
 
 auth_use_nsswitch(ntpd_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nut.te serefpolicy-3.7.19/policy/modules/services/nut.te
--- nsaserefpolicy/policy/modules/services/nut.te	2011-03-17 07:21:21.192851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nut.te	2011-06-10 13:13:41.553221001 +0000
@@ -31,6 +31,8 @@
 
 allow nut_upsd_t self:capability { setgid setuid dac_override };
 
+allow nut_upsd_t self:process signal;
+
 allow nut_upsd_t self:unix_dgram_socket { create_socket_perms sendto };
 allow nut_upsd_t self:tcp_socket connected_stream_socket_perms;
 
@@ -67,13 +69,15 @@
 allow nut_upsmon_t self:fifo_file rw_fifo_file_perms;
 allow nut_upsmon_t self:unix_dgram_socket { create_socket_perms sendto };
 allow nut_upsmon_t self:tcp_socket create_socket_perms;
+allow nut_upsmon_t self:unix_stream_socket { create_socket_perms connectto };
 
 read_files_pattern(nut_upsmon_t, nut_conf_t, nut_conf_t)
 
 # pid file
 manage_files_pattern(nut_upsmon_t, nut_var_run_t, nut_var_run_t)
 manage_dirs_pattern(nut_upsmon_t, nut_var_run_t, nut_var_run_t)
-files_pid_filetrans(nut_upsmon_t, nut_var_run_t, file)
+manage_sock_files_pattern(nut_upsmon_t, nut_var_run_t, nut_var_run_t)
+files_pid_filetrans(nut_upsmon_t, nut_var_run_t, { file sock_file })
 
 kernel_read_kernel_sysctls(nut_upsmon_t)
 kernel_read_system_state(nut_upsmon_t)
@@ -104,6 +108,10 @@
 
 mta_send_mail(nut_upsmon_t)
 
+optional_policy(`
+	shutdown_domtrans(nut_upsmon_t)
+')
+
 ########################################
 #
 # Local policy for upsdrvctl
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nx.fc serefpolicy-3.7.19/policy/modules/services/nx.fc
--- nsaserefpolicy/policy/modules/services/nx.fc	2011-03-17 07:21:20.944851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nx.fc	2011-03-17 07:21:03.384851002 +0000
@@ -1,7 +1,15 @@
 /opt/NX/bin/nxserver		--	gen_context(system_u:object_r:nx_server_exec_t,s0)
 
-/opt/NX/home/nx/\.ssh(/.*)?		gen_context(system_u:object_r:nx_server_ssh_home_t,s0)
-
+/opt/NX/home(/.*)?				gen_context(system_u:object_r:nx_server_var_lib_t,s0)
+/opt/NX/home/nx/\.ssh(/.*)?		gen_context(system_u:object_r:nx_server_home_ssh_t,s0)
 /opt/NX/var(/.*)?			gen_context(system_u:object_r:nx_server_var_run_t,s0)
 
+/usr/NX/bin/nxserver		--	gen_context(system_u:object_r:nx_server_exec_t,s0)
+
+/usr/NX/home(/.*)?			gen_context(system_u:object_r:nx_server_var_lib_t,s0)
+/usr/NX/home/nx/\.ssh(/.*)?		gen_context(system_u:object_r:nx_server_home_ssh_t,s0)
+
+/var/lib/nxserver/home/.ssh(/.*)?  	gen_context(system_u:object_r:nx_server_home_ssh_t,s0)
+/var/lib/nxserver(/.*)? 		gen_context(system_u:object_r:nx_server_var_lib_t,s0)
+
 /usr/libexec/nx/nxserver	--	gen_context(system_u:object_r:nx_server_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nx.if serefpolicy-3.7.19/policy/modules/services/nx.if
--- nsaserefpolicy/policy/modules/services/nx.if	2011-03-17 07:21:22.362851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nx.if	2011-03-17 07:21:05.093851002 +0000
@@ -17,3 +17,70 @@
 
 	spec_domtrans_pattern($1, nx_server_exec_t, nx_server_t)
 ')
+
+########################################
+## <summary>
+##	Read nx home directory content
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nx_read_home_files',`
+	gen_require(`
+		type nx_server_home_ssh_t, nx_server_var_lib_t;
+	')
+
+	allow $1  nx_server_var_lib_t:dir search_dir_perms;
+	read_files_pattern($1, nx_server_home_ssh_t, nx_server_home_ssh_t)
+	read_lnk_files_pattern($1, nx_server_home_ssh_t, nx_server_home_ssh_t)
+')
+
+########################################
+## <summary>
+##	Read nx home directory content
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`nx_search_var_lib',`
+	gen_require(`
+		type nx_server_var_lib_t;
+	')
+
+	allow $1  nx_server_var_lib_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Create an object in the root directory, with a private
+##	type using a type transition.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="private type">
+##	<summary>
+##	The type of the object to be created.
+##	</summary>
+## </param>
+## <param name="object">
+##	<summary>
+##	The object class of the object being created.
+##	</summary>
+## </param>
+#
+interface(`nx_var_lib_filetrans',`
+	gen_require(`
+		type nx_server_var_lib_t;
+	')
+
+	filetrans_pattern($1, nx_server_var_lib_t, $2, $3)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/nx.te serefpolicy-3.7.19/policy/modules/services/nx.te
--- nsaserefpolicy/policy/modules/services/nx.te	2011-03-17 07:21:22.077851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/nx.te	2011-03-17 07:21:04.825851003 +0000
@@ -25,6 +25,12 @@
 type nx_server_var_run_t;
 files_pid_file(nx_server_var_run_t)
 
+type nx_server_var_lib_t;
+files_type(nx_server_var_lib_t)
+
+type nx_server_home_ssh_t;
+files_type(nx_server_home_ssh_t)
+
 ########################################
 #
 # NX server local policy
@@ -37,6 +43,10 @@
 allow nx_server_t nx_server_devpts_t:chr_file { rw_chr_file_perms setattr };
 term_create_pty(nx_server_t, nx_server_devpts_t)
 
+manage_files_pattern(nx_server_t, nx_server_var_lib_t,nx_server_var_lib_t)
+manage_dirs_pattern(nx_server_t, nx_server_var_lib_t,nx_server_var_lib_t)
+files_var_lib_filetrans(nx_server_t,nx_server_var_lib_t, { file dir })
+
 manage_dirs_pattern(nx_server_t, nx_server_tmp_t, nx_server_tmp_t)
 manage_files_pattern(nx_server_t, nx_server_tmp_t, nx_server_tmp_t)
 files_tmp_filetrans(nx_server_t, nx_server_tmp_t, { file dir })
@@ -44,6 +54,9 @@
 manage_files_pattern(nx_server_t, nx_server_var_run_t, nx_server_var_run_t)
 files_pid_filetrans(nx_server_t, nx_server_var_run_t, file)
 
+manage_dirs_pattern(nx_server_t, nx_server_home_ssh_t, nx_server_home_ssh_t)
+manage_files_pattern(nx_server_t, nx_server_home_ssh_t, nx_server_home_ssh_t)
+
 kernel_read_system_state(nx_server_t)
 kernel_read_kernel_sysctls(nx_server_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/oddjob.fc serefpolicy-3.7.19/policy/modules/services/oddjob.fc
--- nsaserefpolicy/policy/modules/services/oddjob.fc	2011-03-17 07:21:21.358851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/oddjob.fc	2011-03-17 07:21:03.819851001 +0000
@@ -1,4 +1,5 @@
 /usr/lib(64)?/oddjob/mkhomedir	--	gen_context(system_u:object_r:oddjob_mkhomedir_exec_t,s0)
+/usr/libexec/oddjob/mkhomedir	--	gen_context(system_u:object_r:oddjob_mkhomedir_exec_t,s0)
 
 /usr/sbin/oddjobd		--	gen_context(system_u:object_r:oddjob_exec_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/oddjob.if serefpolicy-3.7.19/policy/modules/services/oddjob.if
--- nsaserefpolicy/policy/modules/services/oddjob.if	2011-03-17 07:21:21.156851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/oddjob.if	2011-09-08 14:24:00.734160001 +0000
@@ -22,6 +22,25 @@
 	domtrans_pattern($1, oddjob_exec_t, oddjob_t)
 ')
 
+######################################
+## <summary>
+##      Do not audit attempts to read and write 
+##      oddjob fifo file.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`oddjob_dontaudit_rw_fifo_file',`
+        gen_require(`
+                type oddjob_t;
+        ')
+
+        dontaudit $1 oddjob_t:fifo_file rw_inherited_fifo_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Make the specified program domain accessable
@@ -44,6 +63,7 @@
 	')
 
 	domtrans_pattern(oddjob_t, $2, $1)
+	domain_user_exemption_target($1)
 ')
 
 ########################################
@@ -67,6 +87,24 @@
 	allow oddjob_t $1:dbus send_msg;
 ')
 
+#####################################
+## <summary>
+##      Send a SIGCHLD signal to oddjob.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`oddjob_sigchld',`
+        gen_require(`
+                type oddjob_t;
+        ')
+
+        allow $1 oddjob_t:process sigchld;
+')
+
 ########################################
 ## <summary>
 ##	Execute a domain transition to run oddjob_mkhomedir.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/oddjob.te serefpolicy-3.7.19/policy/modules/services/oddjob.te
--- nsaserefpolicy/policy/modules/services/oddjob.te	2011-03-17 07:21:21.966851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/oddjob.te	2011-03-17 07:21:04.621851001 +0000
@@ -100,8 +100,7 @@
 
 # Add/remove user home directories
 userdom_home_filetrans_user_home_dir(oddjob_mkhomedir_t)
-userdom_manage_user_home_content_dirs(oddjob_mkhomedir_t)
-userdom_manage_user_home_content_files(oddjob_mkhomedir_t)
 userdom_manage_user_home_dirs(oddjob_mkhomedir_t)
-userdom_user_home_dir_filetrans_user_home_content(oddjob_mkhomedir_t, notdevfile_class_set)
+userdom_manage_user_home_content_dirs(oddjob_mkhomedir_t)
+userdom_manage_user_home_content(oddjob_mkhomedir_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/oident.te serefpolicy-3.7.19/policy/modules/services/oident.te
--- nsaserefpolicy/policy/modules/services/oident.te	2011-03-17 07:21:20.821851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/oident.te	2011-03-17 07:21:03.230851001 +0000
@@ -49,6 +49,7 @@
 kernel_read_network_state(oidentd_t)
 kernel_read_network_state_symlinks(oidentd_t)
 kernel_read_sysctl(oidentd_t)
+kernel_request_load_module(oidentd_t)
 
 logging_send_syslog_msg(oidentd_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/openvpn.te serefpolicy-3.7.19/policy/modules/services/openvpn.te
--- nsaserefpolicy/policy/modules/services/openvpn.te	2011-03-17 07:21:21.125851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/openvpn.te	2011-11-29 13:30:07.555258530 +0000
@@ -25,6 +25,9 @@
 type openvpn_etc_rw_t;
 files_config_file(openvpn_etc_rw_t)
 
+type openvpn_tmp_t;
+files_tmp_file(openvpn_tmp_t)
+
 type openvpn_initrc_exec_t;
 init_script_file(openvpn_initrc_exec_t)
 
@@ -41,15 +44,15 @@
 # openvpn local policy
 #
 
-allow openvpn_t self:capability { dac_read_search dac_override ipc_lock net_bind_service net_admin setgid setuid sys_chroot sys_tty_config };
-allow openvpn_t self:process { signal getsched };
-allow openvpn_t self:fifo_file rw_fifo_file_perms;
+allow openvpn_t self:capability { dac_read_search dac_override ipc_lock net_bind_service net_admin setgid setuid sys_chroot sys_tty_config sys_nice };
+allow openvpn_t self:process { signal getsched setsched };
 
+allow openvpn_t self:fifo_file rw_fifo_file_perms;
 allow openvpn_t self:unix_dgram_socket { create_socket_perms sendto };
 allow openvpn_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow openvpn_t self:udp_socket create_socket_perms;
 allow openvpn_t self:tcp_socket server_stream_socket_perms;
-allow openvpn_t self:tun_socket create;
+allow openvpn_t self:tun_socket { create relabelfrom };
 allow openvpn_t self:netlink_route_socket rw_netlink_socket_perms;
 
 can_exec(openvpn_t, openvpn_etc_t)
@@ -59,6 +62,9 @@
 manage_files_pattern(openvpn_t, openvpn_etc_t, openvpn_etc_rw_t)
 filetrans_pattern(openvpn_t, openvpn_etc_t, openvpn_etc_rw_t, file)
 
+manage_files_pattern(openvpn_t, openvpn_tmp_t, openvpn_tmp_t)
+files_tmp_filetrans(openvpn_t, openvpn_tmp_t, file)
+
 allow openvpn_t openvpn_var_log_t:file manage_file_perms;
 logging_log_filetrans(openvpn_t, openvpn_var_log_t, file)
 
@@ -69,6 +75,7 @@
 kernel_read_net_sysctls(openvpn_t)
 kernel_read_network_state(openvpn_t)
 kernel_read_system_state(openvpn_t)
+kernel_request_load_module(openvpn_t)
 
 corecmd_exec_bin(openvpn_t)
 corecmd_exec_shell(openvpn_t)
@@ -89,6 +96,7 @@
 corenet_tcp_connect_openvpn_port(openvpn_t)
 corenet_tcp_connect_http_port(openvpn_t)
 corenet_tcp_connect_http_cache_port(openvpn_t)
+corenet_tcp_connect_tor_socks_port(openvpn_t)
 corenet_rw_tun_tap_dev(openvpn_t)
 corenet_sendrecv_openvpn_server_packets(openvpn_t)
 corenet_sendrecv_openvpn_client_packets(openvpn_t)
@@ -103,6 +111,9 @@
 
 auth_use_pam(openvpn_t)
 
+init_read_utmp(openvpn_t)
+init_dontaudit_write_utmp(openvpn_t)
+
 logging_send_syslog_msg(openvpn_t)
 
 miscfiles_read_localization(openvpn_t)
@@ -114,6 +125,8 @@
 sysnet_etc_filetrans_config(openvpn_t)
 
 userdom_use_user_terminals(openvpn_t)
+userdom_search_user_home_content(openvpn_t)
+userdom_read_home_certs(openvpn_t)
 
 tunable_policy(`openvpn_enable_homedirs',`
 	userdom_read_user_home_content_files(openvpn_t)
@@ -139,3 +152,7 @@
 
 	networkmanager_dbus_chat(openvpn_t)
 ')
+
+optional_policy(`
+        unconfined_attach_tun_iface(openvpn_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/pads.if serefpolicy-3.7.19/policy/modules/services/pads.if
--- nsaserefpolicy/policy/modules/services/pads.if	2011-03-17 07:21:22.013851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/pads.if	2011-03-17 07:21:04.744851002 +0000
@@ -39,6 +39,9 @@
 	role_transition $2 pads_initrc_exec_t system_r;
 	allow $2 system_r;
 
+	files_search_pids($1)
 	admin_pattern($1, pads_var_run_t)
+
+	files_search_etc($1)
 	admin_pattern($1, pads_config_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/pads.te serefpolicy-3.7.19/policy/modules/services/pads.te
--- nsaserefpolicy/policy/modules/services/pads.te	2011-03-17 07:21:21.773851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/pads.te	2011-03-17 07:21:04.320851003 +0000
@@ -49,6 +49,7 @@
 
 dev_read_rand(pads_t)
 dev_read_urand(pads_t)
+dev_read_sysfs(pads_t)
 
 files_read_etc_files(pads_t)
 files_search_spool(pads_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/passenger.fc serefpolicy-3.7.19/policy/modules/services/passenger.fc
--- nsaserefpolicy/policy/modules/services/passenger.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/passenger.fc	2011-09-07 17:18:41.227160001 +0000
@@ -0,0 +1,16 @@
+
+/usr/lib/ruby/gems/.*/passenger-.*/ext/apache2/ApplicationPoolServerExecutable -- gen_context(system_u:object_r:passenger_exec_t,s0)
+
+/usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerWatchdog -- gen_context(system_u:object_r:passenger_exec_t,s0)
+
+/usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerLoggingAgent -- gen_context(system_u:object_r:passenger_exec_t,s0)
+
+/usr/lib/ruby/gems/.*/passenger-.*/agents/apache2/PassengerHelperAgent -- gen_context(system_u:object_r:passenger_exec_t,s0)
+
+
+/var/log/passenger(/.*)?           gen_context(system_u:object_r:passenger_log_t,s0)
+/var/log/passenger.*        --      gen_context(system_u:object_r:passenger_log_t,s0)
+
+/var/lib/passenger(/.*)?           gen_context(system_u:object_r:passenger_var_lib_t,s0)
+
+/var/run/passenger(/.*)?           gen_context(system_u:object_r:passenger_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/passenger.if serefpolicy-3.7.19/policy/modules/services/passenger.if
--- nsaserefpolicy/policy/modules/services/passenger.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/passenger.if	2011-03-17 07:21:03.751851001 +0000
@@ -0,0 +1,67 @@
+## <summary>Passenger policy</summary>
+
+######################################
+## <summary>
+##	Execute passenger in the passenger domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`passenger_domtrans',`
+	gen_require(`
+		type passenger_t, passenger_exec_t;
+	')
+
+	allow $1 self:capability { fowner fsetid };
+
+	allow $1 passenger_t:process signal;
+
+	domtrans_pattern($1, passenger_exec_t, passenger_t)
+	allow $1 passenger_t:unix_stream_socket { read write connectto shutdown };
+	allow passenger_t $1:unix_stream_socket { read write };
+')
+
+######################################
+## <summary>
+##	Manage passenger var_run content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`passenger_manage_pid_content',`
+	gen_require(`
+		type passenger_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_dirs_pattern($1, passenger_var_run_t, passenger_var_run_t)
+	manage_files_pattern($1, passenger_var_run_t, passenger_var_run_t)
+	manage_fifo_files_pattern($1, passenger_var_run_t, passenger_var_run_t)
+	manage_sock_files_pattern($1, passenger_var_run_t, passenger_var_run_t)
+')
+
+########################################
+## <summary>
+##	Read passenger lib files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`passenger_read_lib_files',`
+	gen_require(`
+		type passenger_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, passenger_var_lib_t, passenger_var_lib_t)
+	read_lnk_files_pattern($1, passenger_var_lib_t, passenger_var_lib_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/passenger.te serefpolicy-3.7.19/policy/modules/services/passenger.te
--- nsaserefpolicy/policy/modules/services/passenger.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/passenger.te	2011-09-29 13:01:50.589160002 +0000
@@ -0,0 +1,88 @@
+policy_module(passenger, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type passenger_t;
+type passenger_exec_t;
+domain_type(passenger_t)
+domain_entry_file(passenger_t, passenger_exec_t)
+role system_r types passenger_t;
+
+type passenger_tmp_t;
+files_tmp_file(passenger_tmp_t)
+
+type passenger_log_t;
+logging_log_file(passenger_log_t)
+
+type passenger_var_lib_t;
+files_type(passenger_var_lib_t)
+
+type passenger_var_run_t;
+files_pid_file(passenger_var_run_t)
+
+########################################
+#
+# passanger local policy
+#
+
+allow passenger_t self:capability { chown dac_override fsetid fowner kill setuid setgid sys_nice };
+allow passenger_t self:process { setpgid setsched sigkill signal };
+
+allow passenger_t self:fifo_file rw_fifo_file_perms;
+allow passenger_t self:unix_stream_socket { create_stream_socket_perms connectto };
+
+manage_dirs_pattern(passenger_t, passenger_log_t, passenger_log_t)
+manage_files_pattern(passenger_t, passenger_log_t, passenger_log_t)
+logging_log_filetrans(passenger_t, passenger_log_t, file)
+
+files_search_var_lib(passenger_t)
+manage_dirs_pattern(passenger_t, passenger_var_lib_t, passenger_var_lib_t)
+manage_files_pattern(passenger_t, passenger_var_lib_t, passenger_var_lib_t)
+
+manage_dirs_pattern(passenger_t, passenger_var_run_t, passenger_var_run_t)
+manage_files_pattern(passenger_t, passenger_var_run_t, passenger_var_run_t)
+manage_fifo_files_pattern(passenger_t, passenger_var_run_t, passenger_var_run_t)
+manage_sock_files_pattern(passenger_t, passenger_var_run_t, passenger_var_run_t)
+files_pid_filetrans(passenger_t, passenger_var_run_t, { file dir sock_file })
+
+#needed by puppet
+manage_dirs_pattern(passenger_t, passenger_tmp_t, passenger_tmp_t)
+manage_files_pattern(passenger_t, passenger_tmp_t, passenger_tmp_t)
+files_tmp_filetrans(passenger_t, passenger_tmp_t, { file dir })
+
+can_exec(passenger_t, passenger_exec_t)
+
+kernel_read_system_state(passenger_t)
+kernel_read_kernel_sysctls(passenger_t)
+
+corenet_tcp_connect_http_port(passenger_t)
+
+corecmd_exec_bin(passenger_t)
+corecmd_exec_shell(passenger_t)
+
+dev_read_urand(passenger_t)
+
+files_read_etc_files(passenger_t)
+files_read_usr_files(passenger_t)
+
+auth_use_nsswitch(passenger_t)
+
+logging_send_syslog_msg(passenger_t)
+
+miscfiles_read_localization(passenger_t)
+
+userdom_dontaudit_use_user_terminals(passenger_t)
+
+optional_policy(`
+	apache_append_log(passenger_t)
+	apache_read_sys_content(passenger_t)
+')
+
+optional_policy(`
+    puppet_manage_lib(passenger_t)
+    puppet_search_log(passenger_t)
+    puppet_search_pid(passenger_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/pcscd.te serefpolicy-3.7.19/policy/modules/services/pcscd.te
--- nsaserefpolicy/policy/modules/services/pcscd.te	2011-03-17 07:21:20.917851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/pcscd.te	2011-03-17 07:21:03.341851002 +0000
@@ -26,6 +26,7 @@
 allow pcscd_t self:unix_stream_socket create_stream_socket_perms;
 allow pcscd_t self:unix_dgram_socket create_socket_perms;
 allow pcscd_t self:tcp_socket create_stream_socket_perms;
+allow pcscd_t self:netlink_kobject_uevent_socket create_socket_perms;
 
 manage_dirs_pattern(pcscd_t, pcscd_var_run_t, pcscd_var_run_t)
 manage_files_pattern(pcscd_t, pcscd_var_run_t, pcscd_var_run_t)
@@ -42,6 +43,7 @@
 corenet_tcp_sendrecv_all_ports(pcscd_t)
 corenet_tcp_connect_http_port(pcscd_t)
 
+dev_read_sysfs(pcscd_t)
 dev_rw_generic_usb_dev(pcscd_t)
 dev_rw_smartcard(pcscd_t)
 dev_rw_usbfs(pcscd_t)
@@ -78,3 +80,7 @@
 optional_policy(`
 	rpm_use_script_fds(pcscd_t)
 ')
+
+optional_policy(`
+       udev_read_db(pcscd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/pegasus.te serefpolicy-3.7.19/policy/modules/services/pegasus.te
--- nsaserefpolicy/policy/modules/services/pegasus.te	2011-03-17 07:21:21.892851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/pegasus.te	2012-08-08 10:16:02.125942531 +0000
@@ -30,7 +30,7 @@
 # Local policy
 #
 
-allow pegasus_t self:capability { chown sys_nice setuid setgid dac_override net_bind_service };
+allow pegasus_t self:capability { chown ipc_lock kill sys_nice setuid setgid dac_override net_bind_service };
 dontaudit pegasus_t self:capability sys_tty_config;
 allow pegasus_t self:process signal;
 allow pegasus_t self:fifo_file rw_fifo_file_perms;
@@ -39,7 +39,7 @@
 allow pegasus_t self:tcp_socket create_stream_socket_perms;
 
 allow pegasus_t pegasus_conf_t:dir rw_dir_perms;
-allow pegasus_t pegasus_conf_t:file { read_file_perms link unlink };
+allow pegasus_t pegasus_conf_t:file { read_file_perms link delete_file_perms rename_file_perms };
 allow pegasus_t pegasus_conf_t:lnk_file read_lnk_file_perms;
 
 manage_dirs_pattern(pegasus_t, pegasus_data_t, pegasus_data_t)
@@ -57,15 +57,18 @@
 manage_files_pattern(pegasus_t, pegasus_tmp_t, pegasus_tmp_t)
 files_tmp_filetrans(pegasus_t, pegasus_tmp_t, { file dir })
 
-allow pegasus_t pegasus_var_run_t:sock_file { create setattr unlink };
+allow pegasus_t pegasus_var_run_t:sock_file { create_sock_file_perms setattr_sock_file_perms delete_sock_file_perms };
 manage_files_pattern(pegasus_t, pegasus_var_run_t, pegasus_var_run_t)
 files_pid_filetrans(pegasus_t, pegasus_var_run_t, file)
 
+kernel_read_network_state(pegasus_t)
 kernel_read_kernel_sysctls(pegasus_t)
 kernel_read_fs_sysctls(pegasus_t)
 kernel_read_system_state(pegasus_t)
 kernel_search_vm_sysctl(pegasus_t)
 kernel_read_net_sysctls(pegasus_t)
+kernel_read_xen_state(pegasus_t)
+kernel_write_xen_state(pegasus_t)
 
 corenet_all_recvfrom_unlabeled(pegasus_t)
 corenet_all_recvfrom_netlabel(pegasus_t)
@@ -96,13 +99,12 @@
 
 auth_use_nsswitch(pegasus_t)
 auth_domtrans_chk_passwd(pegasus_t)
+auth_read_shadow(pegasus_t)
 
 domain_use_interactive_fds(pegasus_t)
 domain_read_all_domains_state(pegasus_t)
 
-files_read_etc_files(pegasus_t)
-files_list_var_lib(pegasus_t)
-files_read_var_lib_files(pegasus_t)
+files_read_all_files(pegasus_t)
 files_read_var_lib_symlinks(pegasus_t)
 
 hostname_exec(pegasus_t)
@@ -115,17 +117,28 @@
 
 miscfiles_read_localization(pegasus_t)
 
-sysnet_read_config(pegasus_t)
 sysnet_domtrans_ifconfig(pegasus_t)
 
 userdom_dontaudit_use_unpriv_user_fds(pegasus_t)
 userdom_dontaudit_search_user_home_dirs(pegasus_t)
 
 optional_policy(`
+    lldpad_dgram_send(pegasus_t)
+')
+
+optional_policy(`
 	rpm_exec(pegasus_t)
 ')
 
 optional_policy(`
+	samba_manage_config(pegasus_t)
+')
+
+optional_policy(`
+	ssh_exec(pegasus_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(pegasus_t)
 	seutil_dontaudit_read_config(pegasus_t)
 ')
@@ -137,3 +150,14 @@
 optional_policy(`
 	unconfined_signull(pegasus_t)
 ')
+
+optional_policy(`
+	virt_domtrans(pegasus_t)
+	virt_stream_connect(pegasus_t)
+	virt_manage_config(pegasus_t)
+')
+
+optional_policy(`
+	xen_stream_connect(pegasus_t)
+	xen_stream_connect_xenstore(pegasus_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/piranha.fc serefpolicy-3.7.19/policy/modules/services/piranha.fc
--- nsaserefpolicy/policy/modules/services/piranha.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/piranha.fc	2011-10-18 11:44:34.708041981 +0000
@@ -0,0 +1,28 @@
+
+/etc/rc\.d/init\.d/pulse	--	gen_context(system_u:object_r:piranha_pulse_initrc_exec_t,s0)
+
+# RHEL6
+/etc/sysconfig/ha/lvs\.cf	--	gen_context(system_u:object_r:piranha_etc_rw_t,s0)
+
+/etc/piranha/lvs\.cf		--	gen_context(system_u:object_r:piranha_etc_rw_t,s0)
+
+/usr/bin/paster         --      gen_context(system_u:object_r:piranha_web_exec_t,s0)
+
+/usr/sbin/fos               --  gen_context(system_u:object_r:piranha_fos_exec_t,s0)
+/usr/sbin/lvsd				--	gen_context(system_u:object_r:piranha_lvs_exec_t,s0)
+/usr/sbin/piranha_gui		--	gen_context(system_u:object_r:piranha_web_exec_t,s0)
+/usr/sbin/pulse       		--  gen_context(system_u:object_r:piranha_pulse_exec_t,s0)
+
+/var/lib/luci(/.*)?             gen_context(system_u:object_r:piranha_web_data_t,s0)
+/var/lib/luci/cert(/.*)?        gen_context(system_u:object_r:piranha_web_conf_t,s0)
+/var/lib/luci/etc(/.*)?         gen_context(system_u:object_r:piranha_web_conf_t,s0)
+
+/var/log/piranha(/.*)?			gen_context(system_u:object_r:piranha_log_t,s0)
+
+/var/run/fos\.pid           --  gen_context(system_u:object_r:piranha_fos_var_run_t,s0)
+/var/run/luci(/.*)?				gen_context(system_u:object_r:piranha_web_var_run_t,s0)
+/var/run/lvs\.pid			--	gen_context(system_u:object_r:piranha_lvs_var_run_t,s0)
+/var/run/piranha-httpd\.pid --	gen_context(system_u:object_r:piranha_web_var_run_t,s0)
+/var/run/pulse\.pid         --  gen_context(system_u:object_r:piranha_pulse_var_run_t,s0)
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/piranha.if serefpolicy-3.7.19/policy/modules/services/piranha.if
--- nsaserefpolicy/policy/modules/services/piranha.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/piranha.if	2011-10-05 07:26:48.866160000 +0000
@@ -0,0 +1,175 @@
+
+## <summary>policy for piranha</summary>
+
+#######################################
+## <summary>
+##  Creates types and rules for a basic
+##  cluster init daemon domain.
+## </summary>
+## <param name="prefix">
+##  <summary>
+##  Prefix for the domain.
+##  </summary>
+## </param>
+#
+template(`piranha_domain_template',`
+
+    gen_require(`
+        attribute piranha_domain;        
+    ')
+
+	##############################
+	#   
+	#  piranha_$1_t declarations
+	#            
+
+	type piranha_$1_t, piranha_domain;
+	type piranha_$1_exec_t;
+	init_daemon_domain(piranha_$1_t, piranha_$1_exec_t)
+
+	# pid files
+    type piranha_$1_var_run_t;
+    files_pid_file(piranha_$1_var_run_t)
+
+	##############################
+	#   
+	#  piranha_$1_t local policy
+	#            
+
+    manage_files_pattern(piranha_$1_t, piranha_$1_var_run_t, piranha_$1_var_run_t)
+	manage_dirs_pattern(piranha_$1_t, piranha_$1_var_run_t, piranha_$1_var_run_t)
+    files_pid_filetrans(piranha_$1_t, piranha_$1_var_run_t, { dir file })
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run fos.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`piranha_domtrans_fos',`
+	gen_require(`
+		type piranha_fos_t, piranha_fos_exec_t;
+	')
+
+	domtrans_pattern($1, piranha_fos_exec_t, piranha_fos_t)
+')
+
+#######################################
+## <summary>
+##  Execute a domain transition to run lvsd.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`piranha_domtrans_lvs',`
+    gen_require(`
+        type piranha_lvs_t, piranha_lvs_exec_t;
+    ')
+
+    domtrans_pattern($1, piranha_lvs_exec_t, piranha_lvs_t)
+')
+
+#######################################
+## <summary>
+##  Execute a domain transition to run pulse.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`piranha_domtrans_pulse',`
+    gen_require(`
+        type piranha_pulse_t, piranha_pulse_exec_t;
+    ')
+
+    domtrans_pattern($1, piranha_pulse_exec_t, piranha_pulse_t)
+')
+
+#######################################
+## <summary>
+##  Execute pulse server in the pulse domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`piranha_pulse_initrc_domtrans',`
+    gen_require(`
+        type piranha_pulse_initrc_exec_t;
+    ')
+
+    init_labeled_script_domtrans($1, piranha_pulse_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to read piranha's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`piranha_read_log',`
+	gen_require(`
+		type piranha_log_t;
+	')
+
+	logging_search_logs($1)
+    read_files_pattern($1, piranha_log_t, piranha_log_t)
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to append
+##	piranha log files.
+## </summary>
+## <param name="domain">
+## 	<summary>
+##	Domain allowed to transition.
+## 	</summary>
+## </param>
+#
+interface(`piranha_append_log',`
+	gen_require(`
+		type piranha_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, piranha_log_t, piranha_log_t)
+')
+
+########################################
+## <summary>
+##	Allow domain to manage piranha log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`piranha_manage_log',`
+	gen_require(`
+		type piranha_log_t;
+	')
+
+	logging_search_logs($1)
+    manage_dirs_pattern($1, piranha_log_t, piranha_log_t)
+    manage_files_pattern($1, piranha_log_t, piranha_log_t)
+    manage_lnk_files_pattern($1, piranha_log_t, piranha_log_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/piranha.te serefpolicy-3.7.19/policy/modules/services/piranha.te
--- nsaserefpolicy/policy/modules/services/piranha.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/piranha.te	2012-08-08 01:29:18.202568494 +0000
@@ -0,0 +1,310 @@
+
+policy_module(piranha,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+## <p>
+## Allow piranha-lvs domain to connect to the network using TCP.
+## </p>
+## </desc>
+gen_tunable(piranha_lvs_can_network_connect, false)
+
+attribute piranha_domain;
+
+piranha_domain_template(fos)
+
+piranha_domain_template(lvs)
+
+piranha_domain_template(pulse)
+
+type piranha_pulse_initrc_exec_t;
+init_script_file(piranha_pulse_initrc_exec_t)
+
+piranha_domain_template(web)
+
+type piranha_web_tmpfs_t;
+files_tmpfs_file(piranha_web_tmpfs_t)
+
+type piranha_web_conf_t;
+files_type(piranha_web_conf_t)
+
+type piranha_web_data_t;
+files_type(piranha_web_data_t)
+
+type piranha_web_tmp_t;
+files_tmp_file(piranha_web_tmp_t)
+
+type piranha_etc_rw_t;
+files_type(piranha_etc_rw_t)
+
+type piranha_log_t;
+logging_log_file(piranha_log_t)
+
+#######################################
+#
+# piranha-fos local policy
+#
+
+kernel_read_kernel_sysctls(piranha_fos_t)
+
+domain_read_all_domains_state(piranha_fos_t)
+
+consoletype_exec(piranha_fos_t)
+
+# start and stop services
+init_domtrans_script(piranha_fos_t)
+
+########################################
+#
+# piranha-gui local policy
+#
+
+# bug #584451
+allow piranha_web_t self:capability dac_override;
+
+allow piranha_web_t self:capability { setuid sys_nice kill setgid };
+allow piranha_web_t self:process { getsched setsched signal signull ptrace };
+allow piranha_web_t self:rawip_socket create_socket_perms;
+
+allow piranha_web_t self:netlink_route_socket r_netlink_socket_perms;
+allow piranha_web_t self:sem create_sem_perms;
+allow piranha_web_t self:shm create_shm_perms;
+
+rw_files_pattern(piranha_web_t, piranha_etc_rw_t, piranha_etc_rw_t)
+
+manage_files_pattern(piranha_web_t, piranha_web_data_t, piranha_web_data_t)
+manage_dirs_pattern(piranha_web_t, piranha_web_data_t, piranha_web_data_t)
+files_var_lib_filetrans(piranha_web_t, piranha_web_data_t, file)
+
+read_files_pattern(piranha_web_t, piranha_web_conf_t, piranha_web_conf_t)
+
+manage_dirs_pattern(piranha_web_t, piranha_log_t, piranha_log_t)
+manage_files_pattern(piranha_web_t, piranha_log_t, piranha_log_t)
+logging_log_filetrans(piranha_web_t, piranha_log_t, { dir file } )
+
+can_exec(piranha_web_t, piranha_web_tmp_t)
+manage_dirs_pattern(piranha_web_t, piranha_web_tmp_t, piranha_web_tmp_t)
+manage_files_pattern(piranha_web_t, piranha_web_tmp_t, piranha_web_tmp_t)
+files_tmp_filetrans(piranha_web_t, piranha_web_tmp_t, { file dir })
+
+manage_dirs_pattern(piranha_web_t, piranha_web_tmpfs_t, piranha_web_tmpfs_t)
+manage_files_pattern(piranha_web_t, piranha_web_tmpfs_t, piranha_web_tmpfs_t)
+fs_tmpfs_filetrans(piranha_web_t, piranha_web_tmpfs_t, { dir file })
+
+#cjp: adds luci.ini file
+#bug: 684198
+create_files_pattern(piranha_web_t, piranha_web_conf_t, piranha_web_conf_t)
+allow piranha_web_t  piranha_web_conf_t:file write;
+
+piranha_pulse_initrc_domtrans(piranha_web_t)
+
+kernel_read_kernel_sysctls(piranha_web_t)
+
+corenet_tcp_bind_http_cache_port(piranha_web_t)
+corenet_tcp_bind_luci_port(piranha_web_t)
+corenet_tcp_bind_piranha_port(piranha_web_t)
+corenet_tcp_connect_ricci_port(piranha_web_t)
+
+dev_read_urand(piranha_web_t)
+dev_read_rand(piranha_web_t)
+
+domain_read_all_domains_state(piranha_web_t)
+
+files_read_usr_files(piranha_web_t)
+
+consoletype_exec(piranha_web_t)
+
+auth_use_nsswitch(piranha_web_t)
+
+libs_exec_ldconfig(piranha_web_t)
+
+optional_policy(`
+	apache_read_config(piranha_web_t)
+	apache_getattr_suexec(piranha_web_t)
+	apache_exec_modules(piranha_web_t)
+	apache_exec(piranha_web_t)
+')
+
+optional_policy(`
+	gnome_dontaudit_search_config(piranha_web_t)
+')
+
+optional_policy(`
+	sasl_connect(piranha_web_t)
+')
+
+######################################
+#
+# piranha-lvs local policy
+#
+
+# neede by nanny
+allow piranha_lvs_t self:capability { net_raw sys_nice };
+
+allow piranha_lvs_t self:process signal;
+
+allow piranha_lvs_t self:unix_dgram_socket create_socket_perms;
+allow piranha_lvs_t self:rawip_socket create_socket_perms;
+
+kernel_read_kernel_sysctls(piranha_lvs_t)
+
+# needed by nanny
+corenet_tcp_connect_ftp_port(piranha_lvs_t)
+corenet_tcp_connect_http_port(piranha_lvs_t)
+corenet_tcp_connect_smtp_port(piranha_lvs_t)
+
+sysnet_dns_name_resolve(piranha_lvs_t)
+
+# needed by nanny
+tunable_policy(`piranha_lvs_can_network_connect',`
+    corenet_tcp_connect_all_ports(piranha_lvs_t)
+')
+
+# needed by ipvsadm
+optional_policy(`
+	iptables_domtrans(piranha_lvs_t)
+')
+
+#######################################
+#
+# piranha-pulse local policy
+#
+
+allow piranha_pulse_t self:capability net_admin;
+
+allow piranha_pulse_t self:packet_socket create_socket_perms;
+
+# pulse starts fos and lvs daemon
+domtrans_pattern(piranha_pulse_t, piranha_fos_exec_t, piranha_fos_t)
+allow piranha_pulse_t piranha_fos_t:process signal;
+
+domtrans_pattern(piranha_pulse_t, piranha_lvs_exec_t, piranha_lvs_t)
+allow piranha_pulse_t piranha_lvs_t:process signal;
+
+kernel_read_kernel_sysctls(piranha_pulse_t)
+kernel_read_rpc_sysctls(piranha_pulse_t)
+kernel_read_system_state(piranha_pulse_t)
+kernel_rw_rpc_sysctls(piranha_pulse_t)
+kernel_search_debugfs(piranha_pulse_t)
+kernel_search_network_state(piranha_pulse_t)
+
+corecmd_exec_bin(piranha_pulse_t)
+corecmd_exec_shell(piranha_pulse_t)
+consoletype_exec(piranha_pulse_t)
+
+corenet_udp_bind_apertus_ldp_port(piranha_pulse_t)
+corenet_udp_bind_cma_port(piranha_pulse_t)
+
+domain_read_all_domains_state(piranha_pulse_t)
+domain_getattr_all_domains(piranha_pulse_t)
+#domain_dontaudit_ptrace_all_domains(piranha_pulse_t)
+
+fs_getattr_all_fs(piranha_pulse_t)
+
+sysnet_dns_name_resolve(piranha_pulse_t)
+
+auth_use_nsswitch(piranha_pulse_t)
+
+logging_send_syslog_msg(piranha_pulse_t)
+
+miscfiles_read_localization(piranha_pulse_t)
+
+optional_policy(`
+    apache_domtrans(piranha_pulse_t)
+    apache_signal(piranha_pulse_t)
+')
+
+optional_policy(`
+    ftp_domtrans(piranha_pulse_t)
+    ftp_initrc_domtrans(piranha_pulse_t)
+')
+
+optional_policy(`
+    hostname_exec(piranha_pulse_t)
+')
+
+optional_policy(`
+    ldap_initrc_domtrans(piranha_pulse_t)
+    ldap_domtrans(piranha_pulse_t)
+')
+
+optional_policy(`
+    mysql_domtrans_mysql_safe(piranha_pulse_t)
+    mysql_stream_connect(piranha_pulse_t)
+')
+
+optional_policy(`
+    netutils_domtrans(piranha_pulse_t)
+    netutils_domtrans_ping(piranha_pulse_t)
+')
+
+optional_policy(`
+    postgresql_domtrans(piranha_pulse_t)
+    postgresql_signal(piranha_pulse_t)
+')
+
+optional_policy(`
+    samba_initrc_domtrans(piranha_pulse_t)
+    samba_domtrans_smbd(piranha_pulse_t)
+    samba_domtrans_nmbd(piranha_pulse_t)
+    samba_manage_var_files(piranha_pulse_t)
+    samba_rw_config(piranha_pulse_t)
+    samba_signal_smbd(piranha_pulse_t)
+    samba_signal_nmbd(piranha_pulse_t)
+')
+
+optional_policy(`
+    sysnet_domtrans_ifconfig(piranha_pulse_t)
+')
+
+optional_policy(`
+    udev_read_db(piranha_pulse_t)
+')
+
+#optional_policy(`
+#       unconfined_domain(piranha_pulse_t)
+#')
+
+####################################
+#
+# piranha domains common policy
+#
+
+allow piranha_domain self:fifo_file rw_fifo_file_perms;
+allow piranha_domain self:tcp_socket create_stream_socket_perms;
+allow piranha_domain self:udp_socket create_socket_perms;
+allow piranha_domain self:unix_stream_socket create_stream_socket_perms;
+
+read_files_pattern(piranha_domain, piranha_etc_rw_t, piranha_etc_rw_t)
+
+kernel_read_system_state(piranha_domain)
+kernel_read_network_state(piranha_domain)
+
+corenet_all_recvfrom_unlabeled(piranha_domain)
+corenet_all_recvfrom_netlabel(piranha_domain)
+corenet_tcp_sendrecv_generic_if(piranha_domain)
+corenet_udp_sendrecv_generic_if(piranha_domain)
+corenet_tcp_sendrecv_generic_node(piranha_domain)
+corenet_udp_sendrecv_generic_node(piranha_domain)
+corenet_tcp_sendrecv_all_ports(piranha_domain)
+corenet_udp_sendrecv_all_ports(piranha_domain)
+corenet_tcp_bind_generic_node(piranha_domain)
+corenet_udp_bind_generic_node(piranha_domain)
+
+files_read_etc_files(piranha_domain)
+
+corecmd_exec_bin(piranha_domain)
+corecmd_exec_shell(piranha_domain)
+
+libs_use_ld_so(piranha_domain)
+libs_use_shared_libs(piranha_domain)
+
+logging_send_syslog_msg(piranha_domain)
+
+miscfiles_read_localization(piranha_domain)
+
+sysnet_read_config(piranha_domain)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/plymouthd.fc serefpolicy-3.7.19/policy/modules/services/plymouthd.fc
--- nsaserefpolicy/policy/modules/services/plymouthd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/plymouthd.fc	2011-03-17 07:21:03.822851003 +0000
@@ -0,0 +1,9 @@
+/bin/plymouth				--	gen_context(system_u:object_r:plymouth_exec_t, s0)
+
+/sbin/plymouthd				--	gen_context(system_u:object_r:plymouthd_exec_t, s0)
+
+/var/spool/plymouth(/.*)?			gen_context(system_u:object_r:plymouthd_spool_t, s0)
+
+/var/lib/plymouth(/.*)?				gen_context(system_u:object_r:plymouthd_var_lib_t, s0)
+
+/var/run/plymouth(/.*)?				gen_context(system_u:object_r:plymouthd_var_run_t, s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/plymouthd.if serefpolicy-3.7.19/policy/modules/services/plymouthd.if
--- nsaserefpolicy/policy/modules/services/plymouthd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/plymouthd.if	2011-08-10 18:17:40.943523004 +0000
@@ -0,0 +1,320 @@
+## <summary>policy for plymouthd</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run plymouthd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`plymouthd_domtrans', `
+	gen_require(`
+		type plymouthd_t, plymouthd_exec_t;
+	')
+
+	domtrans_pattern($1, plymouthd_exec_t, plymouthd_t)
+')
+
+########################################
+## <summary>
+##	Execute the plymoth daemon in the current domain
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`plymouthd_exec', `
+	gen_require(`
+		type plymouthd_exec_t;
+	')
+
+	can_exec($1, plymouthd_exec_t)
+')
+
+########################################
+## <summary>
+##	Execute the plymoth command in the current domain
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`plymouthd_exec_plymouth', `
+	gen_require(`
+		type plymouth_exec_t;
+	')
+
+	can_exec($1, plymouth_exec_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run plymouthd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`plymouthd_domtrans_plymouth', `
+	gen_require(`
+		type plymouth_t, plymouth_exec_t;
+	')
+
+	domtrans_pattern($1, plymouth_exec_t, plymouth_t)
+')
+
+
+########################################
+## <summary>
+##	Read plymouthd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_read_pid_files', `
+	gen_require(`
+		type plymouthd_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 plymouthd_var_run_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Manage plymouthd var_run files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_manage_var_run', `
+	gen_require(`
+		type plymouthd_var_run_t;
+	')
+
+         manage_dirs_pattern($1, plymouthd_var_run_t, plymouthd_var_run_t)
+         manage_files_pattern($1, plymouthd_var_run_t, plymouthd_var_run_t)
+         manage_lnk_files_pattern($1, plymouthd_var_run_t, plymouthd_var_run_t)
+')
+
+
+########################################
+## <summary>
+##	Search plymouthd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_search_lib', `
+	gen_require(`
+		type plymouthd_var_lib_t;
+	')
+
+	allow $1 plymouthd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read plymouthd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_read_lib_files', `
+	gen_require(`
+		type plymouthd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, plymouthd_var_lib_t, plymouthd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	plymouthd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_manage_lib_files', `
+	gen_require(`
+		type plymouthd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, plymouthd_var_lib_t,  plymouthd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage plymouthd var_lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_manage_var_lib', `
+	gen_require(`
+		type plymouthd_var_lib_t;
+	')
+
+         manage_dirs_pattern($1, plymouthd_var_lib_t, plymouthd_var_lib_t)
+         manage_files_pattern($1, plymouthd_var_lib_t, plymouthd_var_lib_t)
+         manage_lnk_files_pattern($1, plymouthd_var_lib_t, plymouthd_var_lib_t)
+')
+
+
+########################################
+## <summary>
+##	Search plymouthd spool directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_search_spool', `
+	gen_require(`
+		type plymouthd_spool_t;
+	')
+
+	allow $1 plymouthd_spool_t:dir search_dir_perms;
+	files_search_spool($1)
+')
+
+########################################
+## <summary>
+##	Read plymouthd spool files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_read_spool_files', `
+	gen_require(`
+		type plymouthd_spool_t;
+	')
+
+	files_search_spool($1)
+        read_files_pattern($1, plymouthd_spool_t, plymouthd_spool_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	plymouthd spool files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_manage_spool_files', `
+	gen_require(`
+		type plymouthd_spool_t;
+	')
+
+	files_search_spool($1)
+        manage_files_pattern($1, plymouthd_spool_t, plymouthd_spool_t)
+')
+
+########################################
+## <summary>
+##	Allow domain to manage plymouthd spool files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`plymouthd_manage_spool', `
+	gen_require(`
+		type plymouthd_spool_t;
+	')
+
+         manage_dirs_pattern($1, plymouthd_spool_t, plymouthd_spool_t)
+         manage_files_pattern($1, plymouthd_spool_t, plymouthd_spool_t)
+         manage_lnk_files_pattern($1, plymouthd_spool_t, plymouthd_spool_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an plymouthd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`plymouthd_admin', `
+	gen_require(`
+		type plymouthd_t, plymouthd_spool_t, plymouthd_var_lib_t;
+		type plymouthd_var_run_t;
+	')
+
+	allow $1 plymouthd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, plymouthd_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, plymouthd_spool_t)
+
+	admin_pattern($1, plymouthd_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, plymouthd_var_run_t)	
+
+')
+
+########################################
+## <summary>
+##      Allow domain to Stream socket connect
+##	to Plymouth daemon.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`plymouthd_stream_connect', `
+	gen_require(`
+		type plymouthd_t;
+	')
+
+	allow $1 plymouthd_t:unix_stream_socket connectto;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/plymouthd.te serefpolicy-3.7.19/policy/modules/services/plymouthd.te
--- nsaserefpolicy/policy/modules/services/plymouthd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/plymouthd.te	2011-03-17 07:21:04.244851002 +0000
@@ -0,0 +1,109 @@
+policy_module(plymouthd, 1.0.0)
+
+########################################
+#
+# Plymouthd private declarations
+#
+
+type plymouthd_t;
+type plymouthd_exec_t;
+init_daemon_domain(plymouthd_t, plymouthd_exec_t)
+
+type plymouthd_var_run_t;
+files_pid_file(plymouthd_var_run_t)
+
+type plymouthd_var_lib_t;
+files_type(plymouthd_var_lib_t)
+
+type plymouthd_spool_t;
+files_type(plymouthd_spool_t)
+
+########################################
+#
+# Plymouth private declarations
+#
+
+type plymouth_t;
+type plymouth_exec_t;
+application_domain(plymouth_t, plymouth_exec_t)
+
+########################################
+#
+# Plymouthd private policy
+#
+
+allow plymouthd_t self:capability { sys_admin sys_tty_config };
+dontaudit plymouthd_t self:capability dac_override;
+allow plymouthd_t self:process signal;
+allow plymouthd_t self:fifo_file rw_fifo_file_perms;
+allow plymouthd_t self:unix_stream_socket create_stream_socket_perms;
+
+kernel_read_system_state(plymouthd_t)
+kernel_request_load_module(plymouthd_t)
+kernel_change_ring_buffer_level(plymouthd_t)
+
+dev_rw_dri(plymouthd_t)
+dev_read_sysfs(plymouthd_t)
+dev_read_framebuffer(plymouthd_t)
+dev_write_framebuffer(plymouthd_t)
+
+domain_use_interactive_fds(plymouthd_t)
+
+files_read_etc_files(plymouthd_t)
+files_read_usr_files(plymouthd_t)
+
+term_use_unallocated_ttys(plymouthd_t)
+
+miscfiles_read_localization(plymouthd_t)
+miscfiles_read_fonts(plymouthd_t)
+miscfiles_manage_fonts_cache(plymouthd_t)
+
+manage_dirs_pattern(plymouthd_t, plymouthd_var_run_t,  plymouthd_var_run_t)
+manage_files_pattern(plymouthd_t, plymouthd_var_run_t,  plymouthd_var_run_t)
+files_pid_filetrans(plymouthd_t,plymouthd_var_run_t, { file dir })
+
+manage_dirs_pattern(plymouthd_t, plymouthd_var_lib_t,  plymouthd_var_lib_t)
+manage_files_pattern(plymouthd_t, plymouthd_var_lib_t,  plymouthd_var_lib_t)
+files_var_lib_filetrans(plymouthd_t, plymouthd_var_lib_t, { file dir })
+
+manage_dirs_pattern(plymouthd_t, plymouthd_spool_t,  plymouthd_spool_t)
+manage_files_pattern(plymouthd_t, plymouthd_spool_t,  plymouthd_spool_t)
+manage_sock_files_pattern(plymouthd_t, plymouthd_spool_t,  plymouthd_spool_t)
+files_spool_filetrans(plymouthd_t,plymouthd_spool_t, { file dir sock_file })
+
+userdom_read_admin_home_files(plymouthd_t)
+
+########################################
+#
+# Plymouth private policy
+#
+
+allow plymouth_t self:process { signal };
+allow plymouth_t self:fifo_file rw_file_perms;
+allow plymouth_t self:unix_stream_socket create_stream_socket_perms;
+
+kernel_read_system_state(plymouth_t)
+kernel_stream_connect(plymouth_t)
+
+domain_use_interactive_fds(plymouth_t)
+
+files_read_etc_files(plymouth_t)
+
+miscfiles_read_localization(plymouth_t)
+
+sysnet_read_config(plymouth_t)
+
+term_use_ptmx(plymouth_t)
+
+plymouthd_stream_connect(plymouth_t)
+
+optional_policy(`
+	lvm_domtrans(plymouth_t)
+')
+
+ifdef(`hide_broken_symptoms', `
+optional_policy(`
+	hal_dontaudit_write_log(plymouth_t)
+	hal_dontaudit_rw_pipes(plymouth_t)
+')
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/policykit.fc serefpolicy-3.7.19/policy/modules/services/policykit.fc
--- nsaserefpolicy/policy/modules/services/policykit.fc	2011-03-17 07:21:21.638851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/policykit.fc	2011-03-17 07:21:04.129851001 +0000
@@ -6,10 +6,13 @@
 /usr/libexec/polkit-read-auth-helper	--	gen_context(system_u:object_r:policykit_auth_exec_t,s0)
 /usr/libexec/polkit-grant-helper.*	--	gen_context(system_u:object_r:policykit_grant_exec_t,s0)
 /usr/libexec/polkit-resolve-exe-helper.* --	gen_context(system_u:object_r:policykit_resolve_exec_t,s0)
-/usr/libexec/polkitd			--	gen_context(system_u:object_r:policykit_exec_t,s0)
+/usr/libexec/polkitd.*			--	gen_context(system_u:object_r:policykit_exec_t,s0)
+/usr/libexec/polkit-1/polkit-agent-helper-1 --	gen_context(system_u:object_r:policykit_auth_exec_t,s0)
+/usr/libexec/polkit-1/polkitd.*		--	gen_context(system_u:object_r:policykit_exec_t,s0)
 
 /var/lib/misc/PolicyKit.reload			gen_context(system_u:object_r:policykit_reload_t,s0)
 /var/lib/PolicyKit(/.*)?			gen_context(system_u:object_r:policykit_var_lib_t,s0)
+/var/lib/polkit-1(/.*)?			gen_context(system_u:object_r:policykit_var_lib_t,s0)
 /var/lib/PolicyKit-public(/.*)?			gen_context(system_u:object_r:policykit_var_lib_t,s0)
 /var/run/PolicyKit(/.*)?			gen_context(system_u:object_r:policykit_var_run_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/policykit.if serefpolicy-3.7.19/policy/modules/services/policykit.if
--- nsaserefpolicy/policy/modules/services/policykit.if	2011-03-17 07:21:21.470851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/policykit.if	2011-03-17 07:21:03.925851003 +0000
@@ -17,12 +17,37 @@
 		class dbus send_msg;
 	')
 
+	ps_process_pattern(policykit_t, $1)
+
 	allow $1 policykit_t:dbus send_msg;
 	allow policykit_t $1:dbus send_msg;
 ')
 
 ########################################
 ## <summary>
+##	Send and receive messages from
+##	policykit over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`policykit_dbus_chat_auth',`
+	gen_require(`
+		type policykit_auth_t;
+		class dbus send_msg;
+	')
+
+	ps_process_pattern(policykit_auth_t, $1)
+
+	allow $1 policykit_auth_t:dbus send_msg;
+	allow policykit_auth_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
 ##	Execute a domain transition to run polkit_auth.
 ## </summary>
 ## <param name="domain">
@@ -62,6 +87,9 @@
 
 	policykit_domtrans_auth($1)
 	role $2 types policykit_auth_t;
+
+	allow $1 policykit_auth_t:process signal;
+	ps_process_pattern(policykit_auth_t, $1)
 ')
 
 ########################################
@@ -206,4 +234,47 @@
 
 	files_search_var_lib($1)
 	read_files_pattern($1, policykit_var_lib_t, policykit_var_lib_t)
+
+	# Broken placement
+	cron_read_system_job_lib_files($1)
+')
+
+#######################################
+## <summary>
+##	The per role template for the policykit module.
+## </summary>
+## <param name="user_role">
+##	<summary>
+##	Role allowed access
+##	</summary>
+## </param>
+## <param name="user_domain">
+##	<summary>
+##	User domain for the role
+##	</summary>
+## </param>
+#
+template(`policykit_role',`
+	policykit_run_auth($2, $1)
+	policykit_run_grant($2, $1)
+	policykit_read_lib($2)
+	policykit_read_reload($2)
+	policykit_dbus_chat($2)
+')
+########################################
+## <summary>
+##	Send generic signal to policy_auth
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`policykit_signal_auth',`
+	gen_require(`
+		type policykit_auth_t;
+	')
+
+	allow $1 policykit_auth_t:process signal;
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/policykit.te serefpolicy-3.7.19/policy/modules/services/policykit.te
--- nsaserefpolicy/policy/modules/services/policykit.te	2011-03-17 07:21:21.235851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/policykit.te	2011-03-17 07:21:03.764851000 +0000
@@ -25,6 +25,9 @@
 type policykit_reload_t alias polkit_reload_t;
 files_type(policykit_reload_t)
 
+type policykit_tmp_t;
+files_tmp_file(policykit_tmp_t)
+
 type policykit_var_lib_t alias polkit_var_lib_t;
 files_type(policykit_var_lib_t)
 
@@ -36,11 +39,12 @@
 # policykit local policy
 #
 
-allow policykit_t self:capability { setgid setuid };
-allow policykit_t self:process getattr;
-allow policykit_t self:fifo_file rw_file_perms;
+allow policykit_t self:capability { dac_override dac_read_search setgid setuid sys_ptrace };
+allow policykit_t self:process { getsched getattr signal };
+allow policykit_t self:fifo_file rw_fifo_file_perms;
+
 allow policykit_t self:unix_dgram_socket create_socket_perms;
-allow policykit_t self:unix_stream_socket create_stream_socket_perms;
+allow policykit_t self:unix_stream_socket { create_stream_socket_perms connectto };
 
 policykit_domtrans_auth(policykit_t)
 
@@ -57,10 +61,16 @@
 manage_files_pattern(policykit_t, policykit_var_run_t, policykit_var_run_t)
 files_pid_filetrans(policykit_t, policykit_var_run_t, { file dir })
 
+kernel_read_system_state(policykit_t)
 kernel_read_kernel_sysctls(policykit_t)
 
+domain_read_all_domains_state(policykit_t)
+
 files_read_etc_files(policykit_t)
 files_read_usr_files(policykit_t)
+files_dontaudit_search_all_mountpoints(policykit_t)
+
+fs_list_inotifyfs(policykit_t)
 
 auth_use_nsswitch(policykit_t)
 
@@ -68,45 +78,82 @@
 
 miscfiles_read_localization(policykit_t)
 
+userdom_getattr_all_users(policykit_t)
 userdom_read_all_users_state(policykit_t)
+userdom_dontaudit_search_admin_dir(policykit_t)
+
+optional_policy(`
+	dbus_system_domain(policykit_t, policykit_exec_t)
+
+	optional_policy(`
+		consolekit_dbus_chat(policykit_t)
+	')
+
+	optional_policy(`
+		rpm_dbus_chat(policykit_t)
+	')
+')
+
+optional_policy(`
+	gnome_read_config(policykit_t)
+')
 
 ########################################
 #
 # polkit_auth local policy
 #
 
-allow policykit_auth_t self:capability setgid;
-allow policykit_auth_t self:process getattr;
-allow policykit_auth_t self:fifo_file rw_file_perms;
+allow policykit_auth_t self:capability { ipc_lock setgid setuid };
+dontaudit policykit_auth_t self:capability sys_tty_config;
+allow policykit_auth_t self:process { getattr getsched signal };
+allow policykit_auth_t self:fifo_file rw_fifo_file_perms;
+
 allow policykit_auth_t self:unix_dgram_socket create_socket_perms;
 allow policykit_auth_t self:unix_stream_socket create_stream_socket_perms;
 
+policykit_dbus_chat(policykit_auth_t)
+
 can_exec(policykit_auth_t, policykit_auth_exec_t)
-corecmd_search_bin(policykit_auth_t)
+corecmd_exec_bin(policykit_auth_t)
 
 rw_files_pattern(policykit_auth_t, policykit_reload_t, policykit_reload_t)
 
+manage_dirs_pattern(policykit_auth_t, policykit_tmp_t, policykit_tmp_t)
+manage_files_pattern(policykit_auth_t, policykit_tmp_t, policykit_tmp_t)
+files_tmp_filetrans(policykit_auth_t, policykit_tmp_t, { file dir })
+
 manage_files_pattern(policykit_auth_t, policykit_var_lib_t, policykit_var_lib_t)
 
 manage_dirs_pattern(policykit_auth_t, policykit_var_run_t, policykit_var_run_t)
 manage_files_pattern(policykit_auth_t, policykit_var_run_t, policykit_var_run_t)
 files_pid_filetrans(policykit_auth_t, policykit_var_run_t, { file dir })
 
-kernel_read_system_state(policykit_auth_t)
+kernel_dontaudit_search_kernel_sysctl(policykit_auth_t)
+
+dev_read_video_dev(policykit_auth_t)
 
 files_read_etc_files(policykit_auth_t)
 files_read_usr_files(policykit_auth_t)
+files_search_home(policykit_auth_t)
+
+fs_getattr_all_fs(polkit_auth_t)
+fs_search_tmpfs(polkit_auth_t)
 
 auth_use_nsswitch(policykit_auth_t)
+auth_domtrans_chk_passwd(policykit_auth_t)
 
 logging_send_syslog_msg(policykit_auth_t)
 
 miscfiles_read_localization(policykit_auth_t)
+miscfiles_read_fonts(policykit_auth_t)
+miscfiles_setattr_fonts_cache_dirs(policykit_auth_t)
 
 userdom_dontaudit_read_user_home_content_files(policykit_auth_t)
+userdom_dontaudit_write_user_tmp_files(policykit_auth_t)
+userdom_read_admin_home_files(policykit_auth_t)
 
 optional_policy(`
-	dbus_system_bus_client(policykit_auth_t)
+	dbus_system_domain( policykit_auth_t, policykit_auth_exec_t)
 	dbus_session_bus_client(policykit_auth_t)
 
 	optional_policy(`
@@ -119,6 +166,14 @@
 	hal_read_state(policykit_auth_t)
 ')
 
+optional_policy(`
+	xserver_stream_connect(policykit_auth_t)
+	xserver_xdm_append_log(policykit_auth_t)
+	xserver_read_xdm_pid(policykit_auth_t)
+	xserver_search_xdm_lib(policykit_auth_t)
+	xserver_create_xdm_tmp_sockets(policykit_auth_t)
+')
+
 ########################################
 #
 # polkit_grant local policy
@@ -126,7 +181,8 @@
 
 allow policykit_grant_t self:capability setuid;
 allow policykit_grant_t self:process getattr;
-allow policykit_grant_t self:fifo_file rw_file_perms;
+allow policykit_grant_t self:fifo_file rw_fifo_file_perms;
+
 allow policykit_grant_t self:unix_dgram_socket create_socket_perms;
 allow policykit_grant_t self:unix_stream_socket create_stream_socket_perms;
 
@@ -156,9 +212,12 @@
 userdom_read_all_users_state(policykit_grant_t)
 
 optional_policy(`
-	dbus_system_bus_client(policykit_grant_t)
+	cron_manage_system_job_lib_files(policykit_grant_t)
+')
 
 	optional_policy(`
+	dbus_system_bus_client(policykit_grant_t)
+	optional_policy(`
 		consolekit_dbus_chat(policykit_grant_t)
 	')
 ')
@@ -170,7 +229,8 @@
 
 allow policykit_resolve_t self:capability { setuid sys_nice sys_ptrace };
 allow policykit_resolve_t self:process getattr;
-allow policykit_resolve_t self:fifo_file rw_file_perms;
+allow policykit_resolve_t self:fifo_file rw_fifo_file_perms;
+
 allow policykit_resolve_t self:unix_dgram_socket create_socket_perms;
 allow policykit_resolve_t self:unix_stream_socket create_stream_socket_perms;
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/portreserve.fc serefpolicy-3.7.19/policy/modules/services/portreserve.fc
--- nsaserefpolicy/policy/modules/services/portreserve.fc	2011-03-17 07:21:20.863851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/portreserve.fc	2011-03-17 07:21:03.241851003 +0000
@@ -1,3 +1,6 @@
+
+/etc/rc\.d/init\.d/portreserve    --  gen_context(system_u:object_r:portreserve_initrc_exec_t,s0)
+
 /etc/portreserve(/.*)?			gen_context(system_u:object_r:portreserve_etc_t,s0)
 
 /sbin/portreserve		--	gen_context(system_u:object_r:portreserve_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/portreserve.if serefpolicy-3.7.19/policy/modules/services/portreserve.if
--- nsaserefpolicy/policy/modules/services/portreserve.if	2011-03-17 07:21:21.865851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/portreserve.if	2011-03-17 07:21:04.436851003 +0000
@@ -18,6 +18,24 @@
 	domtrans_pattern($1, portreserve_exec_t, portreserve_t)
 ')
 
+########################################
+## <summary>
+##	Execute portreserve in the portreserve domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`portreserve_initrc_domtrans', `
+	gen_require(`
+		type portreserve_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, portreserve_initrc_exec_t)
+')
+
 #######################################
 ## <summary>
 ##	Allow the specified domain to read
@@ -64,3 +82,40 @@
 	manage_files_pattern($1, portreserve_etc_t, portreserve_etc_t)
 	read_lnk_files_pattern($1, portreserve_etc_t, portreserve_etc_t)
 ')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an portreserve environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`portreserve_admin', `
+	gen_require(`
+		type portreserve_t, portreserve_etc_t;
+		type portreserve_initrc_exec_t, portreserve_var_run_t;
+	')
+
+	allow $1 portreserve_t:process { ptrace signal_perms };
+	ps_process_pattern($1, portreserve_t)
+	
+	portreserve_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 portreserve_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, portreserve_etc_t)
+
+	files_search_pids($1)
+	admin_pattern($1, portreserve_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/portreserve.te serefpolicy-3.7.19/policy/modules/services/portreserve.te
--- nsaserefpolicy/policy/modules/services/portreserve.te	2011-03-17 07:21:21.464851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/portreserve.te	2011-03-17 07:21:03.922851002 +0000
@@ -10,6 +10,9 @@
 type portreserve_exec_t;
 init_daemon_domain(portreserve_t, portreserve_exec_t)
 
+type portreserve_initrc_exec_t;
+init_script_file(portreserve_initrc_exec_t)
+
 type portreserve_etc_t;
 files_type(portreserve_etc_t)
 
@@ -48,3 +51,5 @@
 corenet_udp_bind_all_ports(portreserve_t)
 
 files_read_etc_files(portreserve_t)
+
+userdom_dontaudit_search_user_home_content(portreserve_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/postfix.fc serefpolicy-3.7.19/policy/modules/services/postfix.fc
--- nsaserefpolicy/policy/modules/services/postfix.fc	2011-03-17 07:21:21.745851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/postfix.fc	2011-07-14 10:26:10.787029999 +0000
@@ -1,5 +1,6 @@
 # postfix
-/etc/postfix(/.*)?		gen_context(system_u:object_r:postfix_etc_t,s0)
+/etc/rc\.d/init\.d/postfix    --  gen_context(system_u:object_r:postfix_initrc_exec_t,s0)
+/etc/postfix.*		      	gen_context(system_u:object_r:postfix_etc_t,s0)
 ifdef(`distro_redhat', `
 /usr/libexec/postfix/.*	--	gen_context(system_u:object_r:postfix_exec_t,s0)
 /usr/libexec/postfix/cleanup --	gen_context(system_u:object_r:postfix_cleanup_exec_t,s0)
@@ -29,7 +30,6 @@
 /usr/lib/postfix/smtpd	--	gen_context(system_u:object_r:postfix_smtpd_exec_t,s0)
 /usr/lib/postfix/bounce	--	gen_context(system_u:object_r:postfix_bounce_exec_t,s0)
 /usr/lib/postfix/pipe	--	gen_context(system_u:object_r:postfix_pipe_exec_t,s0)
-/usr/lib/postfix/virtual --	gen_context(system_u:object_r:postfix_virtual_exec_t,s0)
 ')
 /etc/postfix/postfix-script.* -- gen_context(system_u:object_r:postfix_exec_t,s0)
 /etc/postfix/prng_exch	--	gen_context(system_u:object_r:postfix_prng_t,s0)
@@ -44,9 +44,11 @@
 /usr/sbin/postqueue	--	gen_context(system_u:object_r:postfix_postqueue_exec_t,s0)
 /usr/sbin/postsuper	--	gen_context(system_u:object_r:postfix_master_exec_t,s0)
 
-/var/lib/postfix(/.*)?		gen_context(system_u:object_r:postfix_data_t,s0)
+/var/lib/postfix.*		gen_context(system_u:object_r:postfix_data_t,s0)
 
-/var/spool/postfix(/.*)?		gen_context(system_u:object_r:postfix_spool_t,s0)
+/var/spool/postfix.*		gen_context(system_u:object_r:postfix_spool_t,s0)
+/var/spool/postfix/deferred(/.*)? gen_context(system_u:object_r:postfix_spool_maildrop_t,s0)
+/var/spool/postfix/defer(/.*)? 	  gen_context(system_u:object_r:postfix_spool_maildrop_t,s0)
 /var/spool/postfix/maildrop(/.*)? gen_context(system_u:object_r:postfix_spool_maildrop_t,s0)
 /var/spool/postfix/pid/.*	gen_context(system_u:object_r:postfix_var_run_t,s0)
 /var/spool/postfix/private(/.*)? gen_context(system_u:object_r:postfix_private_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/postfix.if serefpolicy-3.7.19/policy/modules/services/postfix.if
--- nsaserefpolicy/policy/modules/services/postfix.if	2011-03-17 07:21:20.870851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/postfix.if	2012-07-17 09:13:04.618785312 +0000
@@ -34,11 +34,13 @@
 	domain_entry_file(postfix_$1_t, postfix_$1_exec_t)
 	role system_r types postfix_$1_t;
 
+	allow postfix_$1_t self:capability { sys_nice sys_chroot };
 	dontaudit postfix_$1_t self:capability sys_tty_config;
-	allow postfix_$1_t self:process { signal_perms setpgid };
+	allow postfix_$1_t self:process { signal_perms setpgid setsched };
 	allow postfix_$1_t self:unix_dgram_socket create_socket_perms;
 	allow postfix_$1_t self:unix_stream_socket create_stream_socket_perms;
 	allow postfix_$1_t self:unix_stream_socket connectto;
+	allow postfix_$1_t self:fifo_file rw_fifo_file_perms;
 
 	allow postfix_master_t postfix_$1_t:process signal;
 	#https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=244456
@@ -46,10 +48,11 @@
 
 	allow postfix_$1_t postfix_etc_t:dir list_dir_perms;
 	read_files_pattern(postfix_$1_t, postfix_etc_t, postfix_etc_t)
+	read_lnk_files_pattern(postfix_$1_t, postfix_etc_t, postfix_etc_t)
 
 	can_exec(postfix_$1_t, postfix_$1_exec_t)
 
-	allow postfix_$1_t postfix_exec_t:file { mmap_file_perms lock ioctl };
+	allow postfix_$1_t postfix_exec_t:file { mmap_file_perms lock };
 
 	allow postfix_$1_t postfix_master_t:process sigchld;
 
@@ -76,9 +79,11 @@
 
 	files_read_etc_files(postfix_$1_t)
 	files_read_etc_runtime_files(postfix_$1_t)
+	files_read_usr_files(postfix_$1_t)
 	files_read_usr_symlinks(postfix_$1_t)
 	files_search_spool(postfix_$1_t)
 	files_getattr_tmp_dirs(postfix_$1_t)
+	files_search_all_mountpoints(postfix_$1_t)
 
 	init_dontaudit_use_fds(postfix_$1_t)
 	init_sigchld(postfix_$1_t)
@@ -110,11 +115,18 @@
 template(`postfix_server_domain_template',`
 	postfix_domain_template($1)
 
-	allow postfix_$1_t self:capability { setuid setgid dac_override };
+	type postfix_$1_tmp_t;
+	files_tmp_file(postfix_$1_tmp_t)
+
+	allow postfix_$1_t self:capability { setuid setgid sys_chroot dac_override };
 	allow postfix_$1_t postfix_master_t:unix_stream_socket { connectto rw_stream_socket_perms };
 	allow postfix_$1_t self:tcp_socket create_socket_perms;
 	allow postfix_$1_t self:udp_socket create_socket_perms;
 
+	manage_dirs_pattern(postfix_$1_t, postfix_$1_tmp_t, postfix_$1_tmp_t)
+	manage_files_pattern(postfix_$1_t, postfix_$1_tmp_t, postfix_$1_tmp_t)
+	files_tmp_filetrans(postfix_$1_t, postfix_$1_tmp_t, { file dir })
+
 	domtrans_pattern(postfix_master_t, postfix_$1_exec_t, postfix_$1_t)
 
 	corenet_all_recvfrom_unlabeled(postfix_$1_t)
@@ -156,6 +168,8 @@
 	domtrans_pattern(postfix_user_domtrans, postfix_$1_exec_t, postfix_$1_t)
 
 	domain_use_interactive_fds(postfix_$1_t)
+
+	application_domain(postfix_$1_t, postfix_$1_exec_t)
 ')
 
 ########################################
@@ -174,9 +188,8 @@
 		type postfix_etc_t;
 	')
 
-	allow $1 postfix_etc_t:dir list_dir_perms;
-	allow $1 postfix_etc_t:file read_file_perms;
-	allow $1 postfix_etc_t:lnk_file read_lnk_file_perms;
+	read_files_pattern($1, postfix_etc_t, postfix_etc_t)
+	read_lnk_files_pattern($1, postfix_etc_t, postfix_etc_t)
 	files_search_etc($1)
 ')
 
@@ -232,11 +245,30 @@
 
 ########################################
 ## <summary>
+##	Allow read/write postfix local pipes
+##	TCP sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postfix_rw_local_pipes',`
+	gen_require(`
+		type postfix_local_t;
+	')
+
+	allow $1 postfix_local_t:fifo_file rw_fifo_file_perms;
+')
+
+########################################
+## <summary>
 ##	Allow domain to read postfix local process state
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -245,7 +277,8 @@
 		type postfix_local_t;
 	')
 
-	read_files_pattern($1, postfix_local_t, postfix_local_t)
+	kernel_search_proc($1)
+	ps_process_pattern($1, postfix_local_t)
 ')
 
 ########################################
@@ -254,7 +287,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -263,7 +296,27 @@
 		type postfix_master_t;
 	')
 
-	read_files_pattern($1, postfix_master_t, postfix_master_t)
+	kernel_search_proc($1)
+	ps_process_pattern($1, postfix_master_t)
+')
+
+########################################
+## <summary>
+##	Use postfix master process file
+##	file descriptors.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postfix_use_fds_master',`
+	gen_require(`
+		type postfix_master_t;
+	')
+
+	allow $1 postfix_master_t:fd use;
 ')
 
 ########################################
@@ -292,7 +345,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -311,12 +364,12 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed the postfix_map domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -337,7 +390,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -349,6 +402,25 @@
 	domtrans_pattern($1, postfix_master_exec_t, postfix_master_t)
 ')
 
+
+########################################
+## <summary>
+##	Execute the master postfix in the postfix master domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postfix_initrc_domtrans',`
+	gen_require(`
+		type postfix_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, postfix_initrc_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute the master postfix program in the
@@ -368,6 +440,98 @@
 	can_exec($1, postfix_master_exec_t)
 ')
 
+#######################################
+## <summary>
+##	Connect to postfix master process using a unix domain stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postfix_stream_connect_master',`
+	gen_require(`
+		type postfix_master_t, postfix_public_t;
+	')
+
+	stream_connect_pattern($1, postfix_public_t, postfix_public_t, postfix_master_t)
+')
+
+########################################
+## <summary>
+##	Allow read/write postfix master pipes
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postfix_rw_master_pipes',`
+	gen_require(`
+		type postfix_master_t;
+	')
+
+	allow $1 postfix_master_t:fifo_file rw_inherited_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	Execute the master postdrop in the
+##	postfix_postdrop domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`postfix_domtrans_postdrop',`
+	gen_require(`
+		type postfix_postdrop_t, postfix_postdrop_exec_t;
+	')
+
+	domtrans_pattern($1, postfix_postdrop_exec_t, postfix_postdrop_t)
+')
+
+########################################
+## <summary>
+##	Execute the master postqueue in the
+##	postfix_postqueue domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`postfix_domtrans_postqueue',`
+	gen_require(`
+		type postfix_postqueue_t, postfix_postqueue_exec_t;
+	')
+
+	domtrans_pattern($1, postfix_postqueue_exec_t, postfix_postqueue_t)
+')
+
+#######################################
+## <summary>
+##	Execute the master postqueue in the caller domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postfix_exec_postqueue',`
+	gen_require(`
+		type postfix_postqueue_exec_t;
+	')
+
+	can_exec($1, postfix_postqueue_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Create a named socket in a postfix private directory.
@@ -378,7 +542,7 @@
 ##	</summary>
 ## </param>
 #
-interface(`postfix_create_pivate_sockets',`
+interface(`postfix_create_private_sockets',`
 	gen_require(`
 		type postfix_private_t;
 	')
@@ -389,12 +553,31 @@
 
 ########################################
 ## <summary>
+##	manage named socket in a postfix private directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postfix_manage_private_sockets',`
+	gen_require(`
+		type postfix_private_t;
+	')
+
+	allow $1 postfix_private_t:dir list_dir_perms;
+	manage_sock_files_pattern($1, postfix_private_t, postfix_private_t)
+')
+
+########################################
+## <summary>
 ##	Execute the master postfix program in the
 ##	postfix_master domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -408,6 +591,25 @@
 
 ########################################
 ## <summary>
+##	Getattr postfix mail spool files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postfix_getattr_spool_files',`
+	gen_require(`
+		attribute postfix_spool_type;
+	')
+
+	files_search_spool($1)
+	getattr_files_pattern($1, postfix_spool_type, postfix_spool_type)
+')
+
+########################################
+## <summary>
 ##	Search postfix mail spool directories.
 ## </summary>
 ## <param name="domain">
@@ -418,10 +620,10 @@
 #
 interface(`postfix_search_spool',`
 	gen_require(`
-		type postfix_spool_t;
+		attribute postfix_spool_type;
 	')
 
-	allow $1 postfix_spool_t:dir search_dir_perms;
+	allow $1 postfix_spool_type:dir search_dir_perms;
 	files_search_spool($1)
 ')
 
@@ -437,10 +639,10 @@
 #
 interface(`postfix_list_spool',`
 	gen_require(`
-		type postfix_spool_t;
+		attribute postfix_spool_type;
 	')
 
-	allow $1 postfix_spool_t:dir list_dir_perms;
+	allow $1 postfix_spool_type:dir list_dir_perms;
 	files_search_spool($1)
 ')
 
@@ -456,11 +658,11 @@
 #
 interface(`postfix_read_spool_files',`
 	gen_require(`
-		type postfix_spool_t;
+		attribute postfix_spool_type;
 	')
 
 	files_search_spool($1)
-	read_files_pattern($1, postfix_spool_t, postfix_spool_t)
+	read_files_pattern($1, postfix_spool_type, postfix_spool_type)
 ')
 
 ########################################
@@ -475,11 +677,11 @@
 #
 interface(`postfix_manage_spool_files',`
 	gen_require(`
-		type postfix_spool_t;
+		attribute postfix_spool_type;
 	')
 
 	files_search_spool($1)
-	manage_files_pattern($1, postfix_spool_t, postfix_spool_t)
+	manage_files_pattern($1, postfix_spool_type, postfix_spool_type)
 ')
 
 ########################################
@@ -500,3 +702,108 @@
 
 	typeattribute $1 postfix_user_domtrans;
 ')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an postfix environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`postfix_admin',`
+	gen_require(`
+		attribute postfix_spool_type;
+		type postfix_bounce_t, postfix_cleanup_t, postfix_local_t;
+		type postfix_master_t, postfix_pickup_t, postfix_qmgr_t;
+		type postfix_initrc_exec_t, postfix_data_t, postfix_etc_t;
+		type postfix_map_tmp_t, postfix_prng_t, postfix_public_t;
+		type postfix_smtpd_t, postfix_var_run_t;
+	')
+
+	allow $1 postfix_bounce_t:process { ptrace signal_perms };
+	ps_process_pattern($1, postfix_bounce_t)
+
+	allow $1 postfix_cleanup_t:process { ptrace signal_perms };
+	ps_process_pattern($1, postfix_cleanup_t)
+
+	allow $1 postfix_local_t:process { ptrace signal_perms };
+	ps_process_pattern($1, postfix_local_t)
+
+	allow $1 postfix_master_t:process { ptrace signal_perms };
+	ps_process_pattern($1, postfix_master_t)
+
+	allow $1 postfix_pickup_t:process { ptrace signal_perms };
+	ps_process_pattern($1, postfix_pickup_t)
+
+	allow $1 postfix_qmgr_t:process { ptrace signal_perms };
+	ps_process_pattern($1, postfix_qmgr_t)
+
+	allow $1 postfix_smtpd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, postfix_smtpd_t)
+
+	postfix_run_map($1, $2)
+	postfix_run_postdrop($1, $2)
+
+	postfix_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 postfix_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	admin_pattern($1, postfix_data_t) 
+
+	files_list_etc($1)
+	admin_pattern($1, postfix_etc_t)
+
+	files_list_spool($1)
+	admin_pattern($1, postfix_spool_type)
+
+	admin_pattern($1, postfix_var_run_t)
+
+	files_list_tmp($1)
+	admin_pattern($1, postfix_map_tmp_t)
+	
+	admin_pattern($1, postfix_prng_t)
+
+	admin_pattern($1, postfix_public_t)
+')
+
+########################################
+## <summary>
+##	Execute the master postdrop in the
+##	postfix_postdrop domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##  <summary>
+##  The role to be allowed the iptables domain.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`postfix_run_postdrop',`
+	gen_require(`
+		type postfix_postdrop_t;
+	')
+
+	postfix_domtrans_postdrop($1)
+	role $2 types postfix_postdrop_t;
+	allow postfix_postdrop_t $1:unix_stream_socket { read write getattr };
+
+	ifdef(`hide_broken_symptoms', `
+        dontaudit postfix_postdrop_t $1:socket_class_set { getattr read write };
+    ')
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/postfix.te serefpolicy-3.7.19/policy/modules/services/postfix.te
--- nsaserefpolicy/policy/modules/services/postfix.te	2011-03-17 07:21:20.938851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/postfix.te	2012-02-27 13:34:42.136356833 +0000
@@ -6,6 +6,14 @@
 # Declarations
 #
 
+## <desc>
+## <p>
+## Allow postfix_local domain full write access to mail_spool directories
+## </p>
+## </desc>
+gen_tunable(allow_postfix_local_write_mail_spool, true)
+
+attribute postfix_spool_type;
 attribute postfix_user_domains;
 # domains that transition to the
 # postfix user domains
@@ -13,13 +21,13 @@
 
 postfix_server_domain_template(bounce)
 
-type postfix_spool_bounce_t;
+type postfix_spool_bounce_t, postfix_spool_type;
 files_type(postfix_spool_bounce_t)
 
 postfix_server_domain_template(cleanup)
 
 type postfix_etc_t;
-files_type(postfix_etc_t)
+files_config_file(postfix_etc_t)
 
 type postfix_exec_t;
 application_executable_file(postfix_exec_t)
@@ -27,13 +35,11 @@
 postfix_server_domain_template(local)
 mta_mailserver_delivery(postfix_local_t)
 
-type postfix_local_tmp_t;
-files_tmp_file(postfix_local_tmp_t)
-
 # Program for creating database files
 type postfix_map_t;
 type postfix_map_exec_t;
 application_domain(postfix_map_t, postfix_map_exec_t)
+role system_r types postfix_map_t;
 
 type postfix_map_tmp_t;
 files_tmp_file(postfix_map_tmp_t)
@@ -44,6 +50,9 @@
 # generation macro work
 mta_mailserver(postfix_t, postfix_master_exec_t)
 
+type postfix_initrc_exec_t;
+init_script_file(postfix_initrc_exec_t)
+
 postfix_server_domain_template(pickup)
 
 postfix_server_domain_template(pipe)
@@ -52,6 +61,7 @@
 mta_mailserver_user_agent(postfix_postdrop_t)
 
 postfix_user_domain_template(postqueue)
+mta_mailserver_user_agent(postfix_postqueue_t)
 
 type postfix_private_t;
 files_type(postfix_private_t)
@@ -68,13 +78,13 @@
 
 postfix_server_domain_template(smtpd)
 
-type postfix_spool_t;
+type postfix_spool_t, postfix_spool_type;
 files_type(postfix_spool_t)
 
-type postfix_spool_maildrop_t;
+type postfix_spool_maildrop_t, postfix_spool_type;
 files_type(postfix_spool_maildrop_t)
 
-type postfix_spool_flush_t;
+type postfix_spool_flush_t, postfix_spool_type;
 files_type(postfix_spool_flush_t)
 
 type postfix_public_t;
@@ -90,9 +100,6 @@
 postfix_server_domain_template(virtual)
 mta_mailserver_delivery(postfix_virtual_t)
 
-type postfix_virtual_tmp_t;
-files_tmp_file(postfix_virtual_tmp_t)
-
 ########################################
 #
 # Postfix master process local policy
@@ -100,22 +107,25 @@
 
 # chown is to set the correct ownership of queue dirs
 allow postfix_master_t self:capability { chown dac_override kill setgid setuid net_bind_service sys_tty_config };
+allow postfix_master_t self:process setrlimit;
 allow postfix_master_t self:fifo_file rw_fifo_file_perms;
 allow postfix_master_t self:tcp_socket create_stream_socket_perms;
 allow postfix_master_t self:udp_socket create_socket_perms;
 
+allow postfix_master_t postfix_etc_t:dir rw_dir_perms;
 allow postfix_master_t postfix_etc_t:file rw_file_perms;
+mta_filetrans_aliases(postfix_master_t, postfix_etc_t)
 
 can_exec(postfix_master_t, postfix_exec_t)
 
 allow postfix_master_t postfix_data_t:dir manage_dir_perms;
 allow postfix_master_t postfix_data_t:file manage_file_perms;
 
-allow postfix_master_t postfix_map_exec_t:file { mmap_file_perms ioctl lock };
+allow postfix_master_t postfix_map_exec_t:file { mmap_file_perms lock };
 
-allow postfix_master_t postfix_postdrop_exec_t:file getattr;
+allow postfix_master_t postfix_postdrop_exec_t:file getattr_file_perms;
 
-allow postfix_master_t postfix_postqueue_exec_t:file getattr;
+allow postfix_master_t postfix_postqueue_exec_t:file getattr_file_perms;
 
 manage_fifo_files_pattern(postfix_master_t, postfix_private_t, postfix_private_t)
 manage_sock_files_pattern(postfix_master_t, postfix_private_t, postfix_private_t)
@@ -132,9 +142,10 @@
 # allow access to deferred queue and allow removing bogus incoming entries
 manage_dirs_pattern(postfix_master_t, postfix_spool_t, postfix_spool_t)
 manage_files_pattern(postfix_master_t, postfix_spool_t, postfix_spool_t)
+files_spool_filetrans(postfix_master_t, postfix_spool_t, dir)
 
 allow postfix_master_t postfix_spool_bounce_t:dir manage_dir_perms;
-allow postfix_master_t postfix_spool_bounce_t:file getattr;
+allow postfix_master_t postfix_spool_bounce_t:file getattr_file_perms;
 
 manage_dirs_pattern(postfix_master_t, postfix_spool_flush_t, postfix_spool_flush_t)
 manage_files_pattern(postfix_master_t, postfix_spool_flush_t, postfix_spool_flush_t)
@@ -142,6 +153,8 @@
 
 delete_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 rename_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+rw_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+setattr_dirs_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 
 kernel_read_all_sysctls(postfix_master_t)
 
@@ -153,6 +166,9 @@
 corenet_udp_sendrecv_generic_node(postfix_master_t)
 corenet_tcp_sendrecv_all_ports(postfix_master_t)
 corenet_udp_sendrecv_all_ports(postfix_master_t)
+corenet_udp_bind_generic_node(postfix_master_t)
+corenet_udp_bind_all_unreserved_ports(postfix_master_t)
+corenet_dontaudit_udp_bind_all_ports(postfix_master_t)
 corenet_tcp_bind_generic_node(postfix_master_t)
 corenet_tcp_bind_amavisd_send_port(postfix_master_t)
 corenet_tcp_bind_smtp_port(postfix_master_t)
@@ -170,6 +186,10 @@
 domain_use_interactive_fds(postfix_master_t)
 
 files_read_usr_files(postfix_master_t)
+files_search_var_lib(postfix_master_t)
+files_search_tmp(postfix_master_t)
+
+mcs_file_read_all(postfix_master_t)
 
 term_dontaudit_search_ptys(postfix_master_t)
 
@@ -181,6 +201,7 @@
 
 mta_rw_aliases(postfix_master_t)
 mta_read_sendmail_bin(postfix_master_t)
+mta_getattr_spool(postfix_master_t)
 
 ifdef(`distro_redhat',`
 	# for newer main.cf that uses /etc/aliases
@@ -193,6 +214,10 @@
 ')
 
 optional_policy(`
+	kerberos_keytab_template(postfix, postfix_t)
+')
+
+optional_policy(`
 #	for postalias
 	mailman_manage_data_files(postfix_master_t)
 ')
@@ -202,6 +227,10 @@
 ')
 
 optional_policy(`
+	postgrey_search_spool(postfix_master_t)
+')
+
+optional_policy(`
 	sendmail_signal(postfix_master_t)
 ')
 
@@ -214,16 +243,23 @@
 allow postfix_bounce_t self:tcp_socket create_socket_perms;
 
 allow postfix_bounce_t postfix_public_t:sock_file write;
-allow postfix_bounce_t postfix_public_t:dir search;
+allow postfix_bounce_t postfix_public_t:dir search_dir_perms;
 
 manage_dirs_pattern(postfix_bounce_t, postfix_spool_t, postfix_spool_t)
 manage_files_pattern(postfix_bounce_t, postfix_spool_t, postfix_spool_t)
 manage_lnk_files_pattern(postfix_bounce_t, postfix_spool_t, postfix_spool_t)
+files_spool_filetrans(postfix_bounce_t, postfix_spool_t, dir)
+
+manage_files_pattern(postfix_bounce_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+manage_dirs_pattern(postfix_bounce_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+allow postfix_bounce_t postfix_spool_maildrop_t:lnk_file read_lnk_file_perms;
 
 manage_dirs_pattern(postfix_bounce_t, postfix_spool_bounce_t, postfix_spool_bounce_t)
 manage_files_pattern(postfix_bounce_t, postfix_spool_bounce_t, postfix_spool_bounce_t)
 manage_lnk_files_pattern(postfix_bounce_t, postfix_spool_bounce_t, postfix_spool_bounce_t)
 
+allow postfix_bounce_t postfix_spool_maildrop_t:dir search_dir_perms;
+
 ########################################
 #
 # Postfix cleanup local policy
@@ -236,26 +272,35 @@
 
 rw_fifo_files_pattern(postfix_cleanup_t, postfix_public_t, postfix_public_t)
 write_sock_files_pattern(postfix_cleanup_t, postfix_public_t, postfix_public_t)
+allow postfix_cleanup_t postfix_smtpd_t:unix_stream_socket rw_socket_perms;
 
 manage_dirs_pattern(postfix_cleanup_t, postfix_spool_t, postfix_spool_t)
 manage_files_pattern(postfix_cleanup_t, postfix_spool_t, postfix_spool_t)
 manage_lnk_files_pattern(postfix_cleanup_t, postfix_spool_t, postfix_spool_t)
+files_spool_filetrans(postfix_cleanup_t, postfix_spool_t, dir)
+
+allow postfix_cleanup_t postfix_spool_maildrop_t:dir list_dir_perms;
+allow postfix_cleanup_t postfix_spool_maildrop_t:file read_file_perms;
+allow postfix_cleanup_t postfix_spool_maildrop_t:lnk_file read_lnk_file_perms;
 
 allow postfix_cleanup_t postfix_spool_bounce_t:dir list_dir_perms;
 
 corecmd_exec_bin(postfix_cleanup_t)
 
+mta_read_aliases(postfix_cleanup_t)
+
+optional_policy(`
+	mailman_read_data_files(postfix_cleanup_t)
+	milter_stream_connect_all(postfix_cleanup_t)
+')
+
 ########################################
 #
 # Postfix local local policy
 #
 
-allow postfix_local_t self:fifo_file rw_fifo_file_perms;
 allow postfix_local_t self:process { setsched setrlimit };
-
-manage_dirs_pattern(postfix_local_t, postfix_local_tmp_t, postfix_local_tmp_t)
-manage_files_pattern(postfix_local_t, postfix_local_tmp_t, postfix_local_tmp_t)
-files_tmp_filetrans(postfix_local_t, postfix_local_tmp_t, { file dir })
+allow postfix_local_t self:fifo_file rw_fifo_file_perms;
 
 # connect to master process
 stream_connect_pattern(postfix_local_t, postfix_public_t, postfix_public_t, postfix_master_t)
@@ -263,6 +308,8 @@
 # for .forward - maybe we need a new type for it?
 rw_sock_files_pattern(postfix_local_t, postfix_private_t, postfix_private_t)
 
+domtrans_pattern(postfix_local_t, postfix_postdrop_exec_t, postfix_postdrop_t)
+
 allow postfix_local_t postfix_spool_t:file rw_file_perms;
 
 corecmd_exec_shell(postfix_local_t)
@@ -270,30 +317,60 @@
 
 files_read_etc_files(postfix_local_t)
 
+logging_dontaudit_search_logs(postfix_local_t)
+
 mta_read_aliases(postfix_local_t)
 mta_delete_spool(postfix_local_t)
 # For reading spamassasin
 mta_read_config(postfix_local_t)
+# Handle vacation script
+mta_send_mail(postfix_local_t)
+
+userdom_read_user_home_content_files(postfix_local_t)
+userdom_exec_user_bin_files(postfix_local_t)
+
+tunable_policy(`allow_postfix_local_write_mail_spool',`
+   mta_manage_spool(postfix_local_t)
+')
 
 optional_policy(`
 	clamav_search_lib(postfix_local_t)
+	clamav_exec_clamscan(postfix_local_t)
+')
+
+optional_policy(`
+	dovecot_domtrans_deliver(postfix_local_t)
 ')
 
 optional_policy(`
 #	for postalias
 	mailman_manage_data_files(postfix_local_t)
+	mailman_append_log(postfix_local_t)
+	mailman_read_log(postfix_local_t)
+')
+
+optional_policy(`
+	nagios_search_spool(postfix_local_t)
 ')
 
 optional_policy(`
 	procmail_domtrans(postfix_local_t)
 ')
 
+optional_policy(`
+	sendmail_rw_pipes(postfix_local_t)
+')
+
+optional_policy(`
+    zarafa_domtrans_deliver(postfix_local_t)
+    zarafa_stream_connect_server(postfix_local_t)
+')
+
 ########################################
 #
 # Postfix map local policy
 #
-
-allow postfix_map_t self:capability setgid;
+allow postfix_map_t self:capability { dac_override setgid setuid };
 allow postfix_map_t self:unix_stream_socket create_stream_socket_perms;
 allow postfix_map_t self:unix_dgram_socket create_socket_perms;
 allow postfix_map_t self:tcp_socket create_stream_socket_perms;
@@ -340,19 +417,21 @@
 
 miscfiles_read_localization(postfix_map_t)
 
-seutil_read_config(postfix_map_t)
-
-userdom_use_user_terminals(postfix_map_t)
-
 optional_policy(`
 	locallogin_dontaudit_use_fds(postfix_map_t)
 ')
 
+optional_policy(`
+#	for postalias
+	mailman_manage_data_files(postfix_map_t)
+')
+
 ########################################
 #
 # Postfix pickup local policy
 #
 
+allow postfix_pickup_t self:fifo_file rw_fifo_file_perms;
 allow postfix_pickup_t self:tcp_socket create_socket_perms;
 
 stream_connect_pattern(postfix_pickup_t, postfix_private_t, postfix_private_t, postfix_master_t)
@@ -362,15 +441,23 @@
 
 postfix_list_spool(postfix_pickup_t)
 
+allow postfix_pickup_t postfix_spool_t:dir list_dir_perms;
+read_files_pattern(postfix_pickup_t, postfix_spool_t, postfix_spool_t)
+delete_files_pattern(postfix_pickup_t, postfix_spool_t, postfix_spool_t)
+
 allow postfix_pickup_t postfix_spool_maildrop_t:dir list_dir_perms;
 read_files_pattern(postfix_pickup_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 delete_files_pattern(postfix_pickup_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 
+mcs_file_read_all(postfix_pickup_t)
+mcs_file_write_all(postfix_pickup_t)
+
 ########################################
 #
 # Postfix pipe local policy
 #
 
+allow postfix_pipe_t self:process setrlimit;
 allow postfix_pipe_t self:fifo_file rw_fifo_file_perms;
 
 write_sock_files_pattern(postfix_pipe_t, postfix_private_t, postfix_private_t)
@@ -379,6 +466,14 @@
 
 rw_files_pattern(postfix_pipe_t, postfix_spool_t, postfix_spool_t)
 
+domtrans_pattern(postfix_pipe_t, postfix_postdrop_exec_t, postfix_postdrop_t)
+
+corecmd_exec_bin(postfix_pipe_t)
+
+optional_policy(`
+	dovecot_domtrans_deliver(postfix_pipe_t)
+')
+
 optional_policy(`
 	procmail_domtrans(postfix_pipe_t)
 ')
@@ -388,6 +483,16 @@
 ')
 
 optional_policy(`
+	mta_manage_spool(postfix_pipe_t)
+	mta_send_mail(postfix_pipe_t)
+')
+
+optional_policy(`
+	spamassassin_domtrans_client(postfix_pipe_t)
+	spamassassin_kill_client(postfix_pipe_t)
+')
+
+optional_policy(`
 	uucp_domtrans_uux(postfix_pipe_t)
 ')
 
@@ -401,11 +506,17 @@
 allow postfix_postdrop_t self:tcp_socket create;
 allow postfix_postdrop_t self:udp_socket create_socket_perms;
 
+# Might be a leak, but I need a postfix expert to explain
+allow postfix_postdrop_t postfix_local_t:unix_stream_socket { read write };
+
 rw_fifo_files_pattern(postfix_postdrop_t, postfix_public_t, postfix_public_t)
 
 postfix_list_spool(postfix_postdrop_t)
 manage_files_pattern(postfix_postdrop_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 
+mcs_file_read_all(postfix_postdrop_t)
+mcs_file_write_all(postfix_postdrop_t)
+
 corenet_udp_sendrecv_generic_if(postfix_postdrop_t)
 corenet_udp_sendrecv_generic_node(postfix_postdrop_t)
 
@@ -415,6 +526,10 @@
 mta_rw_user_mail_stream_sockets(postfix_postdrop_t)
 
 optional_policy(`
+	apache_dontaudit_rw_fifo_file(postfix_postdrop_t)
+')
+
+optional_policy(`
 	cron_system_entry(postfix_postdrop_t, postfix_postdrop_exec_t)
 ')
 
@@ -424,8 +539,11 @@
 ')
 
 optional_policy(`
-	ppp_use_fds(postfix_postqueue_t)
-	ppp_sigchld(postfix_postqueue_t)
+	sendmail_rw_unix_stream_sockets(postfix_postdrop_t)
+')
+
+optional_policy(`
+	uucp_manage_spool(postfix_postdrop_t)
 ')
 
 #######################################
@@ -451,12 +569,25 @@
 init_sigchld_script(postfix_postqueue_t)
 init_use_script_fds(postfix_postqueue_t)
 
+mta_mailserver_user_agent(postfix_postqueue_t)
+
+optional_policy(`
+	cron_system_entry(postfix_postqueue_t, postfix_postqueue_exec_t)
+')
+
+optional_policy(`
+	ppp_use_fds(postfix_postqueue_t)
+	ppp_sigchld(postfix_postqueue_t)
+')
+
 ########################################
 #
 # Postfix qmgr local policy
 #
 
-stream_connect_pattern(postfix_qmgr_t, { postfix_private_t postfix_public_t }, { postfix_private_t postfix_public_t },postfix_master_t)
+allow postfix_qmgr_t self:fifo_file rw_fifo_file_perms;
+
+stream_connect_pattern(postfix_qmgr_t, { postfix_private_t postfix_public_t }, { postfix_private_t postfix_public_t }, postfix_master_t)
 
 rw_fifo_files_pattern(postfix_qmgr_t, postfix_public_t, postfix_public_t)
 
@@ -464,10 +595,15 @@
 manage_dirs_pattern(postfix_qmgr_t, postfix_spool_t, postfix_spool_t)
 manage_files_pattern(postfix_qmgr_t, postfix_spool_t, postfix_spool_t)
 manage_lnk_files_pattern(postfix_qmgr_t, postfix_spool_t, postfix_spool_t)
+files_spool_filetrans(postfix_qmgr_t, postfix_spool_t, dir)
 
 allow postfix_qmgr_t postfix_spool_bounce_t:dir list_dir_perms;
 allow postfix_qmgr_t postfix_spool_bounce_t:file read_file_perms;
-allow postfix_qmgr_t postfix_spool_bounce_t:lnk_file { getattr read };
+allow postfix_qmgr_t postfix_spool_bounce_t:lnk_file read_lnk_file_perms;
+
+manage_files_pattern(postfix_qmgr_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+manage_dirs_pattern(postfix_qmgr_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+allow postfix_qmgr_t postfix_spool_maildrop_t:lnk_file read_lnk_file_perms;
 
 corecmd_exec_bin(postfix_qmgr_t)
 
@@ -487,7 +623,9 @@
 
 allow postfix_showq_t postfix_spool_maildrop_t:dir list_dir_perms;
 allow postfix_showq_t postfix_spool_maildrop_t:file read_file_perms;
-allow postfix_showq_t postfix_spool_maildrop_t:lnk_file { getattr read };
+allow postfix_showq_t postfix_spool_maildrop_t:lnk_file read_lnk_file_perms;
+
+mcs_file_read_all(postfix_showq_t)
 
 # to write the mailq output, it really should not need read access!
 term_use_all_ptys(postfix_showq_t)
@@ -499,20 +637,29 @@
 #
 
 # connect to master process
-stream_connect_pattern(postfix_smtp_t, { postfix_private_t postfix_public_t }, { postfix_private_t postfix_public_t },postfix_master_t)
+allow postfix_smtp_t self:capability sys_chroot;
+stream_connect_pattern(postfix_smtp_t, { postfix_private_t postfix_public_t }, { postfix_private_t postfix_public_t }, postfix_master_t)
 
 allow postfix_smtp_t postfix_prng_t:file rw_file_perms;
 
 allow postfix_smtp_t postfix_spool_t:file rw_file_perms;
 
-files_dontaudit_getattr_home_dir(postfix_smtp_t)
+rw_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
+
+files_search_all_mountpoints(postfix_smtp_t)
 
 optional_policy(`
 	cyrus_stream_connect(postfix_smtp_t)
 ')
 
 optional_policy(`
+    dovecot_stream_connect(postfix_smtp_t)
+')
+
+optional_policy(`
 	milter_stream_connect_all(postfix_smtp_t)
+	spamassassin_read_pid_files(postfix_smtpd_t)
+	spamd_stream_connect(postfix_smtpd_t)
 ')
 
 ########################################
@@ -522,23 +669,36 @@
 allow postfix_smtpd_t postfix_master_t:tcp_socket rw_stream_socket_perms;
 
 # connect to master process
-stream_connect_pattern(postfix_smtpd_t, { postfix_private_t postfix_public_t }, { postfix_private_t postfix_public_t },postfix_master_t)
+stream_connect_pattern(postfix_smtpd_t, { postfix_private_t postfix_public_t }, { postfix_private_t postfix_public_t }, postfix_master_t)
 
 # Connect to policy server
 corenet_tcp_connect_postfix_policyd_port(postfix_smtpd_t)
 
 # for prng_exch
-allow postfix_smtpd_t postfix_spool_t:file rw_file_perms;
+manage_dirs_pattern(postfix_smtpd_t, postfix_spool_t, postfix_spool_t)
+manage_files_pattern(postfix_smtpd_t, postfix_spool_t, postfix_spool_t)
+manage_lnk_files_pattern(postfix_smtpd_t, postfix_spool_t, postfix_spool_t)
 allow postfix_smtpd_t postfix_prng_t:file rw_file_perms;
 
 corecmd_exec_bin(postfix_smtpd_t)
 
 # for OpenSSL certificates
 files_read_usr_files(postfix_smtpd_t)
+
+# postfix checks the size of all mounted file systems
+fs_getattr_all_dirs(postfix_smtpd_t)
+fs_getattr_all_fs(postfix_smtpd_t)
+
 mta_read_aliases(postfix_smtpd_t)
 
 optional_policy(`
+	dovecot_stream_connect_auth(postfix_smtpd_t)
+	dovecot_stream_connect(postfix_smtpd_t)
+')
+
+optional_policy(`
 	mailman_read_data_files(postfix_smtpd_t)
+	milter_stream_connect_all(postfix_smtpd_t)
 ')
 
 optional_policy(`
@@ -554,25 +714,27 @@
 # Postfix virtual local policy
 #
 
-allow postfix_virtual_t self:fifo_file rw_fifo_file_perms;
 allow postfix_virtual_t self:process { setsched setrlimit };
+allow postfix_virtual_t self:fifo_file rw_fifo_file_perms;
 
 allow postfix_virtual_t postfix_spool_t:file rw_file_perms;
 
-manage_dirs_pattern(postfix_virtual_t, postfix_virtual_tmp_t, postfix_virtual_tmp_t)
-manage_files_pattern(postfix_virtual_t, postfix_virtual_tmp_t, postfix_virtual_tmp_t)
-files_tmp_filetrans(postfix_virtual_t, postfix_virtual_tmp_t, { file dir })
-
 # connect to master process
-stream_connect_pattern(postfix_virtual_t, postfix_public_t, postfix_public_t, postfix_master_t)
+stream_connect_pattern(postfix_virtual_t, { postfix_private_t postfix_public_t }, { postfix_private_t postfix_public_t }, postfix_master_t)
 
 corecmd_exec_shell(postfix_virtual_t)
 corecmd_exec_bin(postfix_virtual_t)
 
 files_read_etc_files(postfix_virtual_t)
+files_read_usr_files(postfix_virtual_t)
 
 mta_read_aliases(postfix_virtual_t)
 mta_delete_spool(postfix_virtual_t)
 # For reading spamassasin
 mta_read_config(postfix_virtual_t)
 mta_manage_spool(postfix_virtual_t)
+
+userdom_manage_user_home_dirs(postfix_virtual_t)
+userdom_manage_user_home_content(postfix_virtual_t)
+userdom_home_filetrans_user_home_dir(postfix_virtual_t)
+userdom_user_home_dir_filetrans_user_home_content(postfix_virtual_t, {file dir })
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/postgresql.fc serefpolicy-3.7.19/policy/modules/services/postgresql.fc
--- nsaserefpolicy/policy/modules/services/postgresql.fc	2011-03-17 07:21:21.644851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/postgresql.fc	2012-04-02 12:07:15.065878939 +0000
@@ -45,4 +45,4 @@
 
 /var/run/postgresql(/.*)?		gen_context(system_u:object_r:postgresql_var_run_t,s0)
 
-/var/run/postmaster.*			gen_context(system_u:object_r:postgresql_var_run_t,s0)
+#/var/run/postmaster.*			gen_context(system_u:object_r:postgresql_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/postgresql.if serefpolicy-3.7.19/policy/modules/services/postgresql.if
--- nsaserefpolicy/policy/modules/services/postgresql.if	2011-03-17 07:21:21.954851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/postgresql.if	2012-01-11 12:18:26.254275241 +0000
@@ -10,7 +10,7 @@
 ##	</summary>
 ## </param>
 ## <param name="user_domain">
-## 	<summary>
+##	<summary>
 ##	The type of the user domain.
 ##	</summary>
 ## </param>
@@ -18,18 +18,24 @@
 interface(`postgresql_role',`
 	gen_require(`
 		class db_database all_db_database_perms;
+		class db_schema all_db_schema_perms;
 		class db_table all_db_table_perms;
+		class db_sequence all_db_sequence_perms;
+		class db_view all_db_view_perms;
 		class db_procedure all_db_procedure_perms;
+		class db_language all_db_language_perms;
 		class db_column all_db_column_perms;
 		class db_tuple all_db_tuple_perms;
 		class db_blob all_db_blob_perms;
 
 		attribute sepgsql_client_type, sepgsql_database_type;
-		attribute sepgsql_sysobj_table_type;
+		attribute sepgsql_schema_type, sepgsql_sysobj_table_type;
 
 		type sepgsql_trusted_proc_exec_t, sepgsql_trusted_proc_t;
 		type user_sepgsql_blob_t, user_sepgsql_proc_exec_t;
+		type user_sepgsql_schema_t, user_sepgsql_seq_t;
 		type user_sepgsql_sysobj_t, user_sepgsql_table_t;
+		type user_sepgsql_view_t;
 	')
 
 	########################################
@@ -45,30 +51,44 @@
 	# Client local policy
 	#
 
-	tunable_policy(`sepgsql_enable_users_ddl',`
-		allow $2 user_sepgsql_table_t:db_table { create drop setattr };
-		allow $2 user_sepgsql_table_t:db_column { create drop setattr };
 
-		allow $2 user_sepgsql_sysobj_t:db_tuple { update insert delete };
-		allow $2 user_sepgsql_proc_exec_t:db_procedure { create drop setattr };
-	')
+	allow $2 user_sepgsql_schema_t:db_schema { getattr search add_name remove_name };
+	type_transition $2 sepgsql_database_type:db_schema user_sepgsql_schema_t;
 
 	allow $2 user_sepgsql_table_t:db_table	{ getattr use select update insert delete lock };
 	allow $2 user_sepgsql_table_t:db_column { getattr use select update insert };
 	allow $2 user_sepgsql_table_t:db_tuple	{ use select update insert delete };
-	type_transition $2 sepgsql_database_type:db_table user_sepgsql_table_t;
+	type_transition $2 sepgsql_database_type:db_table user_sepgsql_table_t;		# deprecated
+	type_transition $2 sepgsql_schema_type:db_table user_sepgsql_table_t;
 
 	allow $2 user_sepgsql_sysobj_t:db_tuple	{ use select };
 	type_transition $2 sepgsql_sysobj_table_type:db_tuple user_sepgsql_sysobj_t;
 
+	allow $2 user_sepgsql_seq_t:db_sequence { getattr get_value next_value };
+	type_transition $2 sepgsql_schema_type:db_sequence user_sepgsql_seq_t;
+
+	allow $2 user_sepgsql_view_t:db_view { getattr expand };
+	type_transition $2 sepgsql_schema_type:db_view user_sepgsql_view_t;
+
 	allow $2 user_sepgsql_proc_exec_t:db_procedure { getattr execute };
-	type_transition $2 sepgsql_database_type:db_procedure user_sepgsql_proc_exec_t;
+	type_transition $2 sepgsql_database_type:db_procedure user_sepgsql_proc_exec_t;	# deprecated
+	type_transition $2 sepgsql_schema_type:db_procedure user_sepgsql_proc_exec_t;
 
 	allow $2 user_sepgsql_blob_t:db_blob { create drop getattr setattr read write import export };
 	type_transition $2 sepgsql_database_type:db_blob user_sepgsql_blob_t;
 
 	allow $2 sepgsql_trusted_proc_t:process transition;
 	type_transition $2 sepgsql_trusted_proc_exec_t:process sepgsql_trusted_proc_t;
+
+	tunable_policy(`sepgsql_enable_users_ddl',`
+		allow $2 user_sepgsql_schema_t:db_schema { create drop setattr };
+		allow $2 user_sepgsql_table_t:db_table { create drop setattr };
+		allow $2 user_sepgsql_table_t:db_column { create drop setattr };
+		allow $2 user_sepgsql_sysobj_t:db_tuple { update insert delete };
+		allow $2 user_sepgsql_seq_t:db_sequence { create drop setattr set_value };
+		allow $2 user_sepgsql_view_t:db_view { create drop setattr };
+		allow $2 user_sepgsql_proc_exec_t:db_procedure { create drop setattr };
+	')
 ')
 
 ########################################
@@ -109,6 +129,24 @@
 
 ########################################
 ## <summary>
+##	Marks as a SE-PostgreSQL schema object type
+## </summary>
+## <param name="type">
+##	<summary>
+##	Type marked as a schema object type.
+##	</summary>
+## </param>
+#
+interface(`postgresql_schema_object',`
+	gen_require(`
+		attribute sepgsql_schema_type;
+	')
+
+	typeattribute $1 sepgsql_schema_type;
+')
+
+########################################
+## <summary>
 ##	Marks as a SE-PostgreSQL table/column/tuple object type
 ## </summary>
 ## <param name="type">
@@ -146,6 +184,42 @@
 
 ########################################
 ## <summary>
+##	Marks as a SE-PostgreSQL sequence type
+## </summary>
+## <param name="type">
+##	<summary>
+##	Type marked as a sequence type.
+##	</summary>
+## </param>
+#
+interface(`postgresql_sequence_object',`
+	gen_require(`
+		attribute sepgsql_sequence_type;
+	')
+
+	typeattribute $1 sepgsql_sequence_type;
+')
+
+########################################
+## <summary>
+##	Marks as a SE-PostgreSQL view object type
+## </summary>
+## <param name="type">
+##	<summary>
+##	Type marked as a view object type.
+##	</summary>
+## </param>
+#
+interface(`postgresql_view_object',`
+	gen_require(`
+		attribute sepgsql_view_type;
+	')
+
+	typeattribute $1 sepgsql_view_type;
+')
+
+########################################
+## <summary>
 ##	Marks as a SE-PostgreSQL procedure object type
 ## </summary>
 ## <param name="type">
@@ -164,6 +238,24 @@
 
 ########################################
 ## <summary>
+##	Marks as a SE-PostgreSQL procedural language object type
+## </summary>
+## <param name="type">
+##	<summary>
+##	Type marked as a procedural language object type.
+##	</summary>
+## </param>
+#
+interface(`postgresql_language_object',`
+	gen_require(`
+		attribute sepgsql_language_type;
+	')
+
+	typeattribute $1 sepgsql_language_type;
+')
+
+########################################
+## <summary>
 ##	Marks as a SE-PostgreSQL binary large object type
 ## </summary>
 ## <param name="type">
@@ -195,7 +287,7 @@
 		type postgresql_db_t;
 	')
 
-	allow $1 postgresql_db_t:dir search;
+	allow $1 postgresql_db_t:dir search_dir_perms;
 ')
 
 ########################################
@@ -207,6 +299,7 @@
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
+#
 interface(`postgresql_manage_db',`
 	gen_require(`
 		type postgresql_db_t;
@@ -214,7 +307,7 @@
 
 	allow $1 postgresql_db_t:dir rw_dir_perms;
 	allow $1 postgresql_db_t:file rw_file_perms;
-	allow $1 postgresql_db_t:lnk_file { getattr read };
+	allow $1 postgresql_db_t:lnk_file read_lnk_file_perms;
 ')
 
 ########################################
@@ -223,7 +316,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -237,11 +330,29 @@
 
 ######################################
 ## <summary>
+##     Execute Postgresql in the caller domain.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`postgresql_exec',`
+       gen_require(`
+               type  postgresql_exec_t;
+       ')
+
+       can_exec($1, postgresql_exec_t)
+')
+
+######################################
+## <summary>
 ##	Allow domain to signal postgresql
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -304,7 +415,6 @@
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`postgresql_stream_connect',`
 	gen_require(`
@@ -312,10 +422,8 @@
 	')
 
 	files_search_pids($1)
-	allow $1 postgresql_t:unix_stream_socket connectto;
-	allow $1 postgresql_var_run_t:sock_file write;
-	# Some versions of postgresql put the sock file in /tmp
-	allow $1 postgresql_tmp_t:sock_file write;
+	files_search_tmp($1)
+	stream_connect_pattern($1, { postgresql_var_run_t postgresql_tmp_t }, { postgresql_var_run_t postgresql_tmp_t }, postgresql_t)
 ')
 
 ########################################
@@ -332,18 +440,25 @@
 interface(`postgresql_unpriv_client',`
 	gen_require(`
 		class db_database all_db_database_perms;
+		class db_schema all_db_schema_perms;
 		class db_table all_db_table_perms;
+		class db_sequence all_db_sequence_perms;
+		class db_view all_db_view_perms;
 		class db_procedure all_db_procedure_perms;
+		class db_language all_db_language_perms;
 		class db_column all_db_column_perms;
 		class db_tuple all_db_tuple_perms;
 		class db_blob all_db_blob_perms;
 
 		attribute sepgsql_client_type;
-		attribute sepgsql_database_type, sepgsql_sysobj_table_type;
+		attribute sepgsql_database_type, sepgsql_schema_type;
+		attribute sepgsql_sysobj_table_type;
 
 		type sepgsql_trusted_proc_t, sepgsql_trusted_proc_exec_t;
 		type unpriv_sepgsql_blob_t, unpriv_sepgsql_proc_exec_t;
+		type unpriv_sepgsql_schema_t, unpriv_sepgsql_seq_t;
 		type unpriv_sepgsql_sysobj_t, unpriv_sepgsql_table_t;
+		type unpriv_sepgsql_view_t;
 	')
 
 	########################################
@@ -362,25 +477,40 @@
 	allow $1 sepgsql_trusted_proc_t:process transition;
 
 	tunable_policy(`sepgsql_enable_users_ddl',`
+		allow $1 unpriv_sepgsql_schema_t:db_schema { create drop setattr };
 		allow $1 unpriv_sepgsql_table_t:db_table { create drop setattr };
 		allow $1 unpriv_sepgsql_table_t:db_column { create drop setattr };
 		allow $1 unpriv_sepgsql_sysobj_t:db_tuple { update insert delete };
+		allow $1 unpriv_sepgsql_seq_t:db_sequence { create drop setattr };
+		allow $1 unpriv_sepgsql_view_t:db_view { create drop setattr };
 		allow $1 unpriv_sepgsql_proc_exec_t:db_procedure { create drop setattr };
 	')
 
+	allow $1 unpriv_sepgsql_schema_t:db_schema { getattr add_name remove_name };
+	type_transition $1 sepgsql_database_type:db_schema unpriv_sepgsql_schema_t;
+
 	allow $1 unpriv_sepgsql_table_t:db_table { getattr use select update insert delete lock };
 	allow $1 unpriv_sepgsql_table_t:db_column { getattr use select update insert };
 	allow $1 unpriv_sepgsql_table_t:db_tuple { use select update insert delete };
-	type_transition $1 sepgsql_database_type:db_table unpriv_sepgsql_table_t;
+	type_transition $1 sepgsql_database_type:db_table unpriv_sepgsql_table_t;	# deprecated
+	type_transition $1 sepgsql_schema_type:db_table unpriv_sepgsql_table_t;
+
+	allow $1 unpriv_sepgsql_seq_t:db_sequence { getattr get_value next_value set_value };
+	type_transition $1 sepgsql_schema_type:db_sequence unpriv_sepgsql_seq_t;
+
+	allow $1 unpriv_sepgsql_view_t:db_view { getattr expand };
+	type_transition $1 sepgsql_schema_type:db_view unpriv_sepgsql_view_t;
 
 	allow $1 unpriv_sepgsql_sysobj_t:db_tuple { use select };
 	type_transition $1 sepgsql_sysobj_table_type:db_tuple unpriv_sepgsql_sysobj_t;
 
 	allow $1 unpriv_sepgsql_proc_exec_t:db_procedure { getattr execute };
-	type_transition $1 sepgsql_database_type:db_procedure unpriv_sepgsql_proc_exec_t;
+	type_transition $1 sepgsql_database_type:db_procedure unpriv_sepgsql_proc_exec_t; # deprecated
+	type_transition $1 sepgsql_schema_type:db_procedure unpriv_sepgsql_proc_exec_t;
 
 	allow $1 unpriv_sepgsql_blob_t:db_blob { create drop getattr setattr read write import export };
 	type_transition $1 sepgsql_database_type:db_blob unpriv_sepgsql_blob_t;
+
 ')
 
 ########################################
@@ -420,13 +550,10 @@
 #
 interface(`postgresql_admin',`
 	gen_require(`
-		attribute sepgsql_admin_type;
-		attribute sepgsql_client_type;
-
-		type postgresql_t, postgresql_var_run_t;
-		type postgresql_tmp_t, postgresql_db_t;
-		type postgresql_etc_t, postgresql_log_t;
-		type postgresql_initrc_exec_t;
+		attribute sepgsql_admin_type, sepgsql_client_type;
+		type postgresql_t, postgresql_var_run_t, postgresql_initrc_exec_t;
+		type postgresql_tmp_t, postgresql_db_t, postgresql_log_t;
+		type postgresql_etc_t;
 	')
 
 	typeattribute $1 sepgsql_admin_type;
@@ -439,14 +566,19 @@
 	role_transition $2 postgresql_initrc_exec_t system_r;
 	allow $2 system_r;
 
+	files_list_pids($1)
 	admin_pattern($1, postgresql_var_run_t)
 
+	files_list_var_lib($1)
 	admin_pattern($1, postgresql_db_t)
 
+	files_list_etc($1)
 	admin_pattern($1, postgresql_etc_t)
 
+	logging_list_logs($1)
 	admin_pattern($1, postgresql_log_t)
 
+	files_list_tmp($1)
 	admin_pattern($1, postgresql_tmp_t)
 
 	postgresql_tcp_connect($1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/postgresql.te serefpolicy-3.7.19/policy/modules/services/postgresql.te
--- nsaserefpolicy/policy/modules/services/postgresql.te	2011-03-17 07:21:22.039851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/postgresql.te	2012-03-02 10:39:10.822342999 +0000
@@ -1,5 +1,4 @@
-
-policy_module(postgresql, 1.10.2)
+policy_module(postgresql, 1.12.1)
 
 gen_require(`
 	class db_database all_db_database_perms;
@@ -8,6 +7,10 @@
 	class db_column all_db_column_perms;
 	class db_tuple all_db_tuple_perms;
 	class db_blob all_db_blob_perms;
+	class db_schema all_db_schema_perms;
+	class db_view all_db_view_perms;
+	class db_sequence all_db_sequence_perms;
+	class db_language all_db_language_perms;
 ')
 
 #################################
@@ -16,16 +19,16 @@
 #
 
 ## <desc>
-## <p>
-## Allow unprived users to execute DDL statement
-## </p>
+##	<p>
+##	Allow unprivileged users to execute DDL statement
+##	</p>
 ## </desc>
 gen_tunable(sepgsql_enable_users_ddl, true)
 
 ## <desc>
-## <p>
-## Allow database admins to execute DML statement
-## </p>
+##	<p>
+##	Allow database admins to execute DML statement
+##	</p>
 ## </desc>
 gen_tunable(sepgsql_unconfined_dbadm, true)
 
@@ -61,9 +64,13 @@
 
 # database objects attribute
 attribute sepgsql_database_type;
+attribute sepgsql_schema_type;
 attribute sepgsql_table_type;
 attribute sepgsql_sysobj_table_type;
+attribute sepgsql_sequence_type;
+attribute sepgsql_view_type;
 attribute sepgsql_procedure_type;
+attribute sepgsql_language_type;
 attribute sepgsql_blob_type;
 attribute sepgsql_module_type;
 
@@ -77,6 +84,12 @@
 type sepgsql_fixed_table_t;
 postgresql_table_object(sepgsql_fixed_table_t)
 
+type sepgsql_lang_t;
+postgresql_language_object(sepgsql_lang_t)
+
+type sepgsql_priv_lang_t;
+postgresql_language_object(sepgsql_priv_lang_t)
+
 type sepgsql_proc_exec_t;
 typealias sepgsql_proc_exec_t alias sepgsql_proc_t;
 postgresql_procedure_object(sepgsql_proc_exec_t)
@@ -87,12 +100,21 @@
 type sepgsql_ro_table_t;
 postgresql_table_object(sepgsql_ro_table_t)
 
+type sepgsql_safe_lang_t;
+postgresql_language_object(sepgsql_safe_lang_t)
+
+type sepgsql_schema_t;
+postgresql_schema_object(sepgsql_schema_t)
+
 type sepgsql_secret_blob_t;
 postgresql_blob_object(sepgsql_secret_blob_t)
 
 type sepgsql_secret_table_t;
 postgresql_table_object(sepgsql_secret_table_t)
 
+type sepgsql_seq_t;
+postgresql_sequence_object(sepgsql_seq_t)
+
 type sepgsql_sysobj_t;
 postgresql_system_table_object(sepgsql_sysobj_t)
 
@@ -102,6 +124,9 @@
 type sepgsql_trusted_proc_exec_t;
 postgresql_procedure_object(sepgsql_trusted_proc_exec_t)
 
+type sepgsql_view_t;
+postgresql_view_object(sepgsql_view_t)
+
 # Trusted Procedure Domain
 type sepgsql_trusted_proc_t;
 domain_type(sepgsql_trusted_proc_t)
@@ -115,12 +140,21 @@
 type unpriv_sepgsql_proc_exec_t;
 postgresql_procedure_object(unpriv_sepgsql_proc_exec_t)
 
+type unpriv_sepgsql_schema_t;
+postgresql_schema_object(unpriv_sepgsql_schema_t);
+
+type unpriv_sepgsql_seq_t;
+postgresql_sequence_object(unpriv_sepgsql_seq_t)
+
 type unpriv_sepgsql_sysobj_t;
 postgresql_system_table_object(unpriv_sepgsql_sysobj_t)
 
 type unpriv_sepgsql_table_t;
 postgresql_table_object(unpriv_sepgsql_table_t)
 
+type unpriv_sepgsql_view_t;
+postgresql_view_object(unpriv_sepgsql_view_t)
+
 # Types for UBAC
 type user_sepgsql_blob_t;
 typealias user_sepgsql_blob_t alias { staff_sepgsql_blob_t sysadm_sepgsql_blob_t };
@@ -132,6 +166,16 @@
 typealias user_sepgsql_proc_exec_t alias { auditadm_sepgsql_proc_exec_t secadm_sepgsql_proc_exec_t };
 postgresql_procedure_object(user_sepgsql_proc_exec_t)
 
+type user_sepgsql_schema_t;
+typealias user_sepgsql_schema_t alias { staff_sepgsql_schema_t sysadm_sepgsql_schema_t };
+typealias user_sepgsql_schema_t alias { auditadm_sepgsql_schema_t secadm_sepgsql_schema_t };
+postgresql_schema_object(user_sepgsql_schema_t)
+
+type user_sepgsql_seq_t;
+typealias user_sepgsql_seq_t alias { staff_sepgsql_seq_t sysadm_sepgsql_seq_t };
+typealias user_sepgsql_seq_t alias { auditadm_sepgsql_seq_t secadm_sepgsql_seq_t };
+postgresql_sequence_object(user_sepgsql_seq_t)
+
 type user_sepgsql_sysobj_t;
 typealias user_sepgsql_sysobj_t alias { staff_sepgsql_sysobj_t sysadm_sepgsql_sysobj_t };
 typealias user_sepgsql_sysobj_t alias { auditadm_sepgsql_sysobj_t secadm_sepgsql_sysobj_t };
@@ -142,6 +186,11 @@
 typealias user_sepgsql_table_t alias { auditadm_sepgsql_table_t secadm_sepgsql_table_t };
 postgresql_table_object(user_sepgsql_table_t)
 
+type user_sepgsql_view_t;
+typealias user_sepgsql_view_t alias { staff_sepgsql_view_t sysadm_sepgsql_view_t };
+typealias user_sepgsql_view_t alias { auditadm_sepgsql_view_t secadm_sepgsql_view_t };
+postgresql_view_object(user_sepgsql_view_t)
+
 ########################################
 #
 # postgresql Local policy
@@ -156,7 +205,7 @@
 allow postgresql_t self:tcp_socket create_stream_socket_perms;
 allow postgresql_t self:udp_socket create_stream_socket_perms;
 allow postgresql_t self:unix_dgram_socket create_socket_perms;
-allow postgresql_t self:unix_stream_socket create_stream_socket_perms;
+allow postgresql_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow postgresql_t self:netlink_selinux_socket create_socket_perms;
 
 allow postgresql_t sepgsql_database_type:db_database *;
@@ -166,9 +215,15 @@
 # Database/Loadable module
 allow sepgsql_database_type sepgsql_module_type:db_database load_module;
 
+allow postgresql_t sepgsql_schema_type:db_schema *;
+
 allow postgresql_t sepgsql_table_type:{ db_table db_column db_tuple } *;
 type_transition postgresql_t sepgsql_database_type:db_table sepgsql_sysobj_t;
 
+allow postgresql_t sepgsql_sequence_type:db_sequence *;
+
+allow postgresql_t sepgsql_view_type:db_view *;
+
 allow postgresql_t sepgsql_procedure_type:db_procedure *;
 type_transition postgresql_t sepgsql_database_type:db_procedure sepgsql_proc_exec_t;
 
@@ -186,7 +241,7 @@
 read_files_pattern(postgresql_t, postgresql_etc_t, postgresql_etc_t)
 read_lnk_files_pattern(postgresql_t, postgresql_etc_t, postgresql_etc_t)
 
-allow postgresql_t postgresql_exec_t:lnk_file { getattr read };
+allow postgresql_t postgresql_exec_t:lnk_file read_lnk_file_perms;
 can_exec(postgresql_t, postgresql_exec_t )
 
 allow postgresql_t postgresql_lock_t:file manage_file_perms;
@@ -203,9 +258,10 @@
 files_tmp_filetrans(postgresql_t, postgresql_tmp_t, { dir file sock_file })
 fs_tmpfs_filetrans(postgresql_t, postgresql_tmp_t, { dir file lnk_file sock_file fifo_file })
 
+manage_dirs_pattern(postgresql_t, postgresql_var_run_t, postgresql_var_run_t)
 manage_files_pattern(postgresql_t, postgresql_var_run_t, postgresql_var_run_t)
 manage_sock_files_pattern(postgresql_t, postgresql_var_run_t, postgresql_var_run_t)
-files_pid_filetrans(postgresql_t, postgresql_var_run_t, file)
+files_pid_filetrans(postgresql_t, postgresql_var_run_t, { dir file })
 
 kernel_read_kernel_sysctls(postgresql_t)
 kernel_read_system_state(postgresql_t)
@@ -251,8 +307,7 @@
 domain_use_interactive_fds(postgresql_t)
 
 files_dontaudit_search_home(postgresql_t)
-files_manage_etc_files(postgresql_t)
-files_search_etc(postgresql_t)
+files_read_etc_files(postgresql_t)
 files_read_etc_runtime_files(postgresql_t)
 files_read_usr_files(postgresql_t)
 
@@ -314,6 +369,8 @@
 allow sepgsql_client_type sepgsql_db_t:db_database { getattr access get_param set_param };
 type_transition sepgsql_client_type sepgsql_client_type:db_database sepgsql_db_t;
 
+allow sepgsql_client_type sepgsql_schema_t:db_schema { getattr search };
+
 allow sepgsql_client_type sepgsql_fixed_table_t:db_table { getattr use select insert lock };
 allow sepgsql_client_type sepgsql_fixed_table_t:db_column { getattr use select insert };
 allow sepgsql_client_type sepgsql_fixed_table_t:db_tuple { use select insert };
@@ -333,9 +390,22 @@
 allow sepgsql_client_type sepgsql_sysobj_t:db_column { getattr use select };
 allow sepgsql_client_type sepgsql_sysobj_t:db_tuple { use select };
 
+allow sepgsql_client_type sepgsql_seq_t:db_sequence { getattr get_value next_value };
+
+allow sepgsql_client_type sepgsql_view_t:db_view { getattr expand };
+
 allow sepgsql_client_type sepgsql_proc_exec_t:db_procedure { getattr execute install };
 allow sepgsql_client_type sepgsql_trusted_proc_exec_t:db_procedure { getattr execute entrypoint };
 
+allow sepgsql_client_type sepgsql_lang_t:db_language { getattr };
+allow sepgsql_client_type sepgsql_safe_lang_t:db_language { getattr execute };
+
+# Only DBA can implement SQL procedures using `unsafe' procedural languages.
+# The `unsafe' one provides a capability to access internal data structure,
+# so we don't allow user-defined function being implemented using `unsafe' one.
+allow sepgsql_proc_exec_t sepgsql_lang_t:db_language { implement };
+allow sepgsql_procedure_type sepgsql_safe_lang_t:db_language { implement };
+
 allow sepgsql_client_type sepgsql_blob_t:db_blob { create drop getattr setattr read write };
 allow sepgsql_client_type sepgsql_ro_blob_t:db_blob { getattr read };
 allow sepgsql_client_type sepgsql_secret_blob_t:db_blob getattr;
@@ -353,6 +423,12 @@
 # Therefore, the following rule is applied for any domains which can connect SE-PostgreSQL.
 dontaudit { postgresql_t sepgsql_admin_type sepgsql_client_type sepgsql_unconfined_type } { sepgsql_table_type -sepgsql_sysobj_table_type }:db_tuple { use select update insert delete };
 
+# Note that permission of creation/deletion are eventually controlled by
+# create or drop permission of individual objects within shared schemas.
+# So, it just allows to create/drop user specific types.
+tunable_policy(`sepgsql_enable_users_ddl',`
+	allow sepgsql_client_type sepgsql_schema_t:db_schema { add_name remove_name };
+')
 
 ########################################
 #
@@ -362,16 +438,33 @@
 allow sepgsql_admin_type sepgsql_database_type:db_database { create drop getattr setattr relabelfrom relabelto access };
 type_transition sepgsql_admin_type sepgsql_admin_type:db_database sepgsql_db_t;
 
+allow sepgsql_admin_type sepgsql_schema_type:db_schema { create drop getattr setattr relabelfrom relabelto search add_name remove_name };
+type_transition sepgsql_admin_type sepgsql_database_type:db_schema sepgsql_schema_t;
+
 allow sepgsql_admin_type sepgsql_table_type:db_table { create drop getattr setattr relabelfrom relabelto lock };
 allow sepgsql_admin_type sepgsql_table_type:db_column { create drop getattr setattr relabelfrom relabelto };
 allow sepgsql_admin_type sepgsql_sysobj_table_type:db_tuple { relabelfrom relabelto select update insert delete };
 
-type_transition sepgsql_admin_type sepgsql_database_type:db_table sepgsql_table_t;
+type_transition sepgsql_admin_type sepgsql_database_type:db_table sepgsql_table_t;	# deprecated
+type_transition sepgsql_admin_type sepgsql_schema_type:db_table sepgsql_table_t;
+
+allow sepgsql_admin_type sepgsql_sequence_type:db_sequence { create drop getattr setattr relabelfrom relabelto get_value next_value set_value };
+
+type_transition sepgsql_admin_type sepgsql_schema_type:db_schema sepgsql_seq_t;
+
+allow sepgsql_admin_type sepgsql_view_type:db_view { create drop getattr setattr relabelfrom relabelto expand };
+
+type_transition sepgsql_admin_type sepgsql_view_type:db_view sepgsql_view_t;
 
 allow sepgsql_admin_type sepgsql_procedure_type:db_procedure { create drop getattr relabelfrom relabelto };
 allow sepgsql_admin_type sepgsql_proc_exec_t:db_procedure execute;
 
-type_transition sepgsql_admin_type sepgsql_database_type:db_procedure sepgsql_proc_exec_t;
+type_transition sepgsql_admin_type sepgsql_database_type:db_procedure sepgsql_proc_exec_t;	# deprecated
+type_transition sepgsql_admin_type sepgsql_schema_type:db_procedure sepgsql_proc_exec_t;
+
+allow sepgsql_admin_type sepgsql_language_type:db_language { create drop getattr setattr relabelfrom relabelto execute };
+
+type_transition sepgsql_admin_type sepgsql_database_type:db_language sepgsql_lang_t;
 
 allow sepgsql_admin_type sepgsql_blob_type:db_blob { create drop getattr setattr relabelfrom relabelto };
 
@@ -384,12 +477,18 @@
 tunable_policy(`sepgsql_unconfined_dbadm',`
 	allow sepgsql_admin_type sepgsql_database_type:db_database *;
 
+	allow sepgsql_admin_type sepgsql_schema_type:db_schema *;
+
 	allow sepgsql_admin_type sepgsql_table_type:{ db_table db_column db_tuple } *;
+	allow sepgsql_admin_type sepgsql_sequence_type:db_sequence *;
+	allow sepgsql_admin_type sepgsql_view_type:db_view *;
 
 	allow sepgsql_admin_type sepgsql_proc_exec_t:db_procedure *;
 	allow sepgsql_admin_type sepgsql_trusted_proc_exec_t:db_procedure ~install;
 	allow sepgsql_admin_type sepgsql_procedure_type:db_procedure ~{ execute install };
 
+	allow sepgsql_admin_type sepgsql_language_type:db_language ~implement;
+
 	allow sepgsql_admin_type sepgsql_blob_type:db_blob *;
 ')
 
@@ -401,11 +500,21 @@
 allow sepgsql_unconfined_type sepgsql_database_type:db_database *;
 type_transition sepgsql_unconfined_type sepgsql_unconfined_type:db_database sepgsql_db_t;
 
-type_transition sepgsql_unconfined_type sepgsql_database_type:db_table sepgsql_table_t;
-type_transition sepgsql_unconfined_type sepgsql_database_type:db_procedure sepgsql_proc_exec_t;
+allow sepgsql_unconfined_type sepgsql_schema_type:db_schema *;
+type_transition sepgsql_unconfined_type sepgsql_database_type:db_schema sepgsql_schema_t;
+
+type_transition sepgsql_unconfined_type sepgsql_database_type:db_table sepgsql_table_t;		# deprecated
+type_transition sepgsql_unconfined_type sepgsql_database_type:db_procedure sepgsql_proc_exec_t;	# deprecated
+type_transition sepgsql_unconfined_type sepgsql_schema_type:db_table sepgsql_table_t;
+type_transition sepgsql_unconfined_type sepgsql_schema_type:db_sequence sepgsql_seq_t;
+type_transition sepgsql_unconfined_type sepgsql_schema_type:db_view sepgsql_view_t;
+type_transition sepgsql_unconfined_type sepgsql_schema_type:db_procedure sepgsql_proc_exec_t;
+type_transition sepgsql_unconfined_type sepgsql_database_type:db_language sepgsql_lang_t;
 type_transition sepgsql_unconfined_type sepgsql_database_type:db_blob sepgsql_blob_t;
 
 allow sepgsql_unconfined_type sepgsql_table_type:{ db_table db_column db_tuple } *;
+allow sepgsql_unconfined_type sepgsql_sequence_type:db_sequence *;
+allow sepgsql_unconfined_type sepgsql_view_type:db_view *;
 
 # unconfined domain is not allowed to invoke user defined procedure directly.
 # They have to confirm and relabel it at first.
@@ -413,6 +522,8 @@
 allow sepgsql_unconfined_type sepgsql_trusted_proc_exec_t:db_procedure ~install;
 allow sepgsql_unconfined_type sepgsql_procedure_type:db_procedure ~{ execute install };
 
+allow sepgsql_unconfined_type sepgsql_language_type:db_language ~implement;
+
 allow sepgsql_unconfined_type sepgsql_blob_type:db_blob *;
 
 allow sepgsql_unconfined_type sepgsql_module_type:db_database install_module;
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ppp.fc serefpolicy-3.7.19/policy/modules/services/ppp.fc
--- nsaserefpolicy/policy/modules/services/ppp.fc	2011-03-17 07:21:21.551851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ppp.fc	2011-07-26 16:01:51.444523004 +0000
@@ -16,6 +16,7 @@
 #
 # /sbin
 #
+/sbin/pppoe-server      --  gen_context(system_u:object_r:pppd_exec_t,s0)
 /sbin/ppp-watch			--	gen_context(system_u:object_r:pppd_exec_t,s0)
 
 #
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ppp.if serefpolicy-3.7.19/policy/modules/services/ppp.if
--- nsaserefpolicy/policy/modules/services/ppp.if	2011-03-17 07:21:21.967851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ppp.if	2011-03-17 07:21:04.630851003 +0000
@@ -281,7 +281,7 @@
 		type pppd_var_run_t;
 	')
 
-	allow $1 pppd_var_run_t:file read_file_perms;
+	read_files_pattern($1, pppd_var_run_t, pppd_var_run_t)
 ')
 
 ########################################
@@ -348,6 +348,11 @@
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
+## <param name="role">
+## 	<summary>
+##	 Role allowed access.
+##	</summary>
+## </param>
 ## <rolecap/>
 #
 interface(`ppp_admin',`
@@ -360,7 +365,7 @@
  		type pppd_initrc_exec_t;
 	')
 
-	allow $1 pppd_t:process { ptrace signal_perms getattr };
+	allow $1 pppd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, pppd_t)
 
 	ppp_initrc_domtrans($1)
@@ -386,7 +391,7 @@
 	files_list_pids($1)
 	admin_pattern($1, pppd_var_run_t)
 
-	allow $1 pptp_t:process { ptrace signal_perms getattr };
+	allow $1 pptp_t:process { ptrace signal_perms };
 	ps_process_pattern($1, pptp_t)
 
 	admin_pattern($1, pptp_log_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ppp.te serefpolicy-3.7.19/policy/modules/services/ppp.te
--- nsaserefpolicy/policy/modules/services/ppp.te	2011-03-17 07:21:22.007851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ppp.te	2011-09-20 13:28:20.897160001 +0000
@@ -71,9 +71,9 @@
 # PPPD Local policy
 #
 
-allow pppd_t self:capability { kill net_admin setuid setgid fsetid fowner net_raw dac_override };
+allow pppd_t self:capability { kill net_admin setuid setgid sys_admin fsetid fowner net_raw dac_override };
 dontaudit pppd_t self:capability sys_tty_config;
-allow pppd_t self:process { getsched signal };
+allow pppd_t self:process { getsched setsched signal };
 allow pppd_t self:fifo_file rw_fifo_file_perms;
 allow pppd_t self:socket create_socket_perms;
 allow pppd_t self:unix_dgram_socket create_socket_perms;
@@ -167,6 +167,9 @@
 init_signal_script(pppd_t)
 
 auth_use_nsswitch(pppd_t)
+auth_domtrans_chk_passwd(pppd_t)
+auth_write_login_records(pppd_t)
+
 
 logging_send_syslog_msg(pppd_t)
 logging_send_audit_msgs(pppd_t)
@@ -195,6 +198,8 @@
 
 optional_policy(`
 	mta_send_mail(pppd_t)
+	mta_system_content(pppd_etc_t)
+	mta_system_content(pppd_etc_rw_t)
 ')
 
 optional_policy(`
@@ -252,6 +257,7 @@
 kernel_read_kernel_sysctls(pptp_t)
 kernel_read_proc_symlinks(pptp_t)
 kernel_read_system_state(pptp_t)
+kernel_signal(pptp_t)
 
 dev_read_sysfs(pptp_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/prelude.if serefpolicy-3.7.19/policy/modules/services/prelude.if
--- nsaserefpolicy/policy/modules/services/prelude.if	2011-03-17 07:21:22.071851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/prelude.if	2011-03-17 07:21:04.822851003 +0000
@@ -136,9 +136,15 @@
 	allow $2 system_r;
 
 	admin_pattern($1, prelude_spool_t)
+	
+	files_search_var_lib($1)
 	admin_pattern($1, prelude_var_lib_t)
+
+	files_search_pids($1)
 	admin_pattern($1, prelude_var_run_t)
 	admin_pattern($1, prelude_audisp_var_run_t)
+	
+	files_search_tmp($1)
 	admin_pattern($1, prelude_lml_tmp_t)
 	admin_pattern($1, prelude_lml_var_run_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/privoxy.if serefpolicy-3.7.19/policy/modules/services/privoxy.if
--- nsaserefpolicy/policy/modules/services/privoxy.if	2011-03-17 07:21:22.241851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/privoxy.if	2011-03-17 07:21:04.972851002 +0000
@@ -24,7 +24,7 @@
 		type privoxy_initrc_exec_t;
 	')
 
-	allow $1 privoxy_t:process { ptrace signal_perms getattr };
+	allow $1 privoxy_t:process { ptrace signal_perms };
 	ps_process_pattern($1, privoxy_t)
 
 	init_labeled_script_domtrans($1, privoxy_initrc_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/privoxy.te serefpolicy-3.7.19/policy/modules/services/privoxy.te
--- nsaserefpolicy/policy/modules/services/privoxy.te	2011-03-17 07:21:22.207851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/privoxy.te	2011-11-29 13:30:25.491836490 +0000
@@ -62,6 +62,7 @@
 corenet_tcp_connect_ftp_port(privoxy_t)
 corenet_tcp_connect_pgpkeyserver_port(privoxy_t)
 corenet_tcp_connect_tor_port(privoxy_t)
+corenet_tcp_connect_tor_socks_port(privoxy_t)
 corenet_sendrecv_http_cache_client_packets(privoxy_t)
 corenet_sendrecv_http_cache_server_packets(privoxy_t)
 corenet_sendrecv_http_client_packets(privoxy_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/procmail.fc serefpolicy-3.7.19/policy/modules/services/procmail.fc
--- nsaserefpolicy/policy/modules/services/procmail.fc	2011-03-17 07:21:21.189851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/procmail.fc	2011-03-17 07:21:03.698851001 +0000
@@ -1,3 +1,5 @@
+HOME_DIR/\.procmailrc -- gen_context(system_u:object_r:procmail_home_t, s0)
+/root/\.procmailrc -- gen_context(system_u:object_r:procmail_home_t, s0)
 
 /usr/bin/procmail	--	gen_context(system_u:object_r:procmail_exec_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/procmail.if serefpolicy-3.7.19/policy/modules/services/procmail.if
--- nsaserefpolicy/policy/modules/services/procmail.if	2011-03-17 07:21:21.623851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/procmail.if	2011-03-17 07:21:04.107851002 +0000
@@ -77,3 +77,22 @@
 	files_search_tmp($1)
 	rw_files_pattern($1, procmail_tmp_t, procmail_tmp_t)
 ')
+
+########################################
+## <summary>
+##	Read procmail home directory content
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`procmail_read_home_files',`
+	gen_require(`
+		type procmail_home_t;
+	')
+
+        userdom_search_user_home_dirs($1)
+	read_files_pattern($1, procmail_home_t, procmail_home_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/procmail.te serefpolicy-3.7.19/policy/modules/services/procmail.te
--- nsaserefpolicy/policy/modules/services/procmail.te	2011-03-17 07:21:21.694851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/procmail.te	2012-07-25 13:41:49.588750370 +0000
@@ -11,6 +11,9 @@
 application_domain(procmail_t, procmail_exec_t)
 role system_r types procmail_t;
 
+type procmail_home_t;
+userdom_user_home_content(procmail_home_t)
+
 type procmail_log_t;
 logging_log_file(procmail_log_t) 
 
@@ -22,7 +25,7 @@
 # Local policy
 #
 
-allow procmail_t self:capability { sys_nice chown setuid setgid dac_override };
+allow procmail_t self:capability { sys_nice chown fsetid setuid setgid dac_override };
 allow procmail_t self:process { setsched signal signull };
 allow procmail_t self:fifo_file rw_fifo_file_perms;
 allow procmail_t self:unix_stream_socket create_socket_perms;
@@ -33,7 +36,7 @@
 can_exec(procmail_t, procmail_exec_t)
 
 # Write log to /var/log/procmail.log or /var/log/procmail/.*
-allow procmail_t procmail_log_t:dir setattr;
+allow procmail_t procmail_log_t:dir setattr_dir_perms;
 create_files_pattern(procmail_t, procmail_log_t, procmail_log_t)
 append_files_pattern(procmail_t, procmail_log_t, procmail_log_t)
 read_lnk_files_pattern(procmail_t, procmail_log_t, procmail_log_t)
@@ -68,7 +71,6 @@
 
 corecmd_exec_bin(procmail_t)
 corecmd_exec_shell(procmail_t)
-corecmd_read_bin_symlinks(procmail_t)
 
 files_read_etc_files(procmail_t)
 files_read_etc_runtime_files(procmail_t)
@@ -76,10 +78,20 @@
 # for spamassasin
 files_read_usr_files(procmail_t)
 
+application_exec_all(procmail_t)
+
+init_read_utmp(procmail_t)
+
 logging_send_syslog_msg(procmail_t)
+logging_append_all_logs(procmail_t)
 
 miscfiles_read_localization(procmail_t)
 
+list_dirs_pattern(procmail_t, procmail_home_t, procmail_home_t)
+read_files_pattern(procmail_t, procmail_home_t, procmail_home_t)
+userdom_search_user_home_dirs(procmail_t)
+userdom_search_admin_dir(procmail_t)
+
 # only works until we define a different type for maildir
 userdom_manage_user_home_content_dirs(procmail_t)
 userdom_manage_user_home_content_files(procmail_t)
@@ -88,10 +100,11 @@
 userdom_manage_user_home_content_sockets(procmail_t)
 userdom_user_home_dir_filetrans_user_home_content(procmail_t, { dir file lnk_file fifo_file sock_file })
 
-# Do not audit attempts to access /root.
-userdom_dontaudit_search_user_home_dirs(procmail_t)
+# Execute user executables
+userdom_exec_user_bin_files(procmail_t)
 
 mta_manage_spool(procmail_t)
+mta_read_queue(procmail_t)
 
 ifdef(`hide_broken_symptoms',`
 	mta_dontaudit_rw_queue(procmail_t)
@@ -115,6 +128,11 @@
 ')
 
 optional_policy(`
+	cyrus_stream_connect(procmail_t)
+')
+
+
+optional_policy(`
 	munin_dontaudit_search_lib(procmail_t)
 ')
 
@@ -125,6 +143,11 @@
 	postfix_read_spool_files(procmail_t)
 	postfix_read_local_state(procmail_t)
 	postfix_read_master_state(procmail_t)
+	postfix_rw_master_pipes(procmail_t)
+')
+
+optional_policy(`
+	nagios_search_spool(procmail_t)
 ')
 
 optional_policy(`
@@ -134,10 +157,11 @@
 
 optional_policy(`
 	mta_read_config(procmail_t)
+	mta_manage_home_rw(procmail_t)
 	sendmail_domtrans(procmail_t)
 	sendmail_signal(procmail_t)
-	sendmail_rw_tcp_sockets(procmail_t)
-	sendmail_rw_unix_stream_sockets(procmail_t)
+	sendmail_dontaudit_rw_tcp_sockets(procmail_t)
+	sendmail_dontaudit_rw_unix_stream_sockets(procmail_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/psad.if serefpolicy-3.7.19/policy/modules/services/psad.if
--- nsaserefpolicy/policy/modules/services/psad.if	2011-03-17 07:21:21.205851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/psad.if	2011-03-17 07:21:03.728851003 +0000
@@ -174,6 +174,26 @@
 	append_files_pattern($1, psad_var_log_t, psad_var_log_t)
 ')
 
+#######################################
+## <summary>
+## Allow the specified domain to write to psad's log files.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+## <rolecap/>
+#
+interface(`psad_write_log',`
+	gen_require(`
+		type psad_var_log_t;
+	')
+
+	logging_search_logs($1)
+	write_files_pattern($1, psad_var_log_t, psad_var_log_t)
+')
+      
 ########################################
 ## <summary>
 ##	Read and write psad fifo files.
@@ -186,7 +206,7 @@
 #
 interface(`psad_rw_fifo_file',`
 	gen_require(`
-		type psad_t;
+		type psad_t, psad_var_lib_t;
 	')
 
 	files_search_var_lib($1)
@@ -232,9 +252,9 @@
 #
 interface(`psad_admin',`
 	gen_require(`
-		type psad_t, psad_var_run_t, psad_var_log_t;
-		type psad_initrc_exec_t, psad_var_lib_t;
-		type psad_tmp_t;
+		type psad_t, psad_initrc_exec_t, psad_etc_t;
+		type psad_var_lib_t, psad_var_log_t;
+		type psad_var_run_t, psad_tmp_t;
 	')
 
 	allow $1 psad_t:process { ptrace signal_perms };
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/psad.te serefpolicy-3.7.19/policy/modules/services/psad.te
--- nsaserefpolicy/policy/modules/services/psad.te	2011-03-17 07:21:21.841851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/psad.te	2011-07-25 13:30:01.575523004 +0000
@@ -41,6 +41,7 @@
 allow psad_t self:capability { net_admin net_raw setuid setgid dac_override };
 dontaudit psad_t self:capability sys_tty_config;
 allow psad_t self:process signull;
+allow psad_t self:process signal_perms;
 allow psad_t self:fifo_file rw_fifo_file_perms;
 allow psad_t self:rawip_socket create_socket_perms;
 
@@ -86,6 +87,7 @@
 dev_read_urand(psad_t)
 
 files_read_etc_runtime_files(psad_t)
+files_read_usr_files(psad_t)
 
 fs_getattr_all_fs(psad_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/puppet.if serefpolicy-3.7.19/policy/modules/services/puppet.if
--- nsaserefpolicy/policy/modules/services/puppet.if	2011-03-17 07:21:21.791851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/puppet.if	2012-08-08 01:33:44.417304568 +0000
@@ -26,6 +26,82 @@
 		type puppet_tmp_t;
 	')
 
-	allow $1 puppet_tmp_t:file rw_file_perms;
+	allow $1 puppet_tmp_t:file rw_inherited_file_perms;
 	files_search_tmp($1)
 ')
+
+###############################################
+## <summary>
+##  Read Puppet lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`puppet_read_lib',`
+    gen_require(`
+        type puppet_var_lib_t;
+    ')
+
+    read_files_pattern($1, puppet_var_lib_t, puppet_var_lib_t)
+    files_search_var_lib($1)
+')
+
+##############################################
+## <summary>
+##  Manage Puppet lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`puppet_manage_lib',`
+    gen_require(`
+        type puppet_var_lib_t;
+    ')
+
+    manage_files_pattern($1, puppet_var_lib_t, puppet_var_lib_t)
+    files_search_var_lib($1)
+')
+
+#####################################
+## <summary>
+##  Allow the specified domain to search puppet's log files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`puppet_search_log',`
+    gen_require(`
+        type puppet_log_t;
+    ')
+
+    logging_search_logs($1)
+    allow $1 puppet_log_t:dir search_dir_perms;
+')
+
+####################################
+## <summary>
+##  Allow the specified domain to search puppet's pid files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`puppet_search_pid',`
+    gen_require(`
+        type puppet_var_run_t;
+    ')
+
+    files_search_pids($1)
+    allow $1 puppet_var_run_t:dir search_dir_perms;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/puppet.te serefpolicy-3.7.19/policy/modules/services/puppet.te
--- nsaserefpolicy/policy/modules/services/puppet.te	2011-03-17 07:21:21.501851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/puppet.te	2012-02-28 16:31:01.374479453 +0000
@@ -14,6 +14,13 @@
 ## </desc>
 gen_tunable(puppet_manage_all_files, false)
 
+## <desc>
+## <p>
+## Allow Puppet master to use connect to mysql and postgresql database
+## </p>
+## </desc>
+gen_tunable(puppetmaster_use_db, false)
+
 type puppet_t;
 type puppet_exec_t;
 init_daemon_domain(puppet_t, puppet_exec_t)
@@ -141,10 +148,18 @@
 ')
 
 optional_policy(`
+    cfengine_read_lib_files(puppet_t)
+')
+
+optional_policy(`
 	hostname_exec(puppet_t)
 ')
 
 optional_policy(`
+	mount_domtrans(puppet_t)
+')
+
+optional_policy(`
 	files_rw_var_files(puppet_t)
 
 	rpm_domtrans(puppet_t)
@@ -183,16 +198,29 @@
 
 manage_dirs_pattern(puppetmaster_t, puppet_var_lib_t, puppet_var_lib_t)
 manage_files_pattern(puppetmaster_t, puppet_var_lib_t, puppet_var_lib_t)
+allow puppetmaster_t puppet_var_lib_t:dir relabel_dir_perms;
+allow puppetmaster_t puppet_var_lib_t:file relabel_file_perms;
 
 setattr_dirs_pattern(puppetmaster_t, puppet_var_run_t, puppet_var_run_t)
 manage_files_pattern(puppetmaster_t, puppet_var_run_t, puppet_var_run_t)
 files_pid_filetrans(puppetmaster_t, puppet_var_run_t, { file dir })
+allow puppetmaster_t puppet_var_run_t:dir relabel_dir_perms;
 
 manage_dirs_pattern(puppetmaster_t, puppetmaster_tmp_t, puppetmaster_tmp_t)
 manage_files_pattern(puppetmaster_t, puppetmaster_tmp_t, puppetmaster_tmp_t)
 files_tmp_filetrans(puppetmaster_t, puppetmaster_tmp_t, { file dir })
+allow puppetmaster_t puppet_tmp_t:dir relabel_dir_perms;
+
+allow puppetmaster_t puppet_log_t:file relabel_file_perms;
+allow puppetmaster_t puppet_var_lib_t:dir relabel_dir_perms;
+
+selinux_validate_context(puppetmaster_t)
+seutil_read_file_contexts(puppetmaster_t)   
+
+auth_use_nsswitch(puppetmaster_t)
 
 kernel_dontaudit_search_kernel_sysctl(puppetmaster_t)
+kernel_read_kernel_sysctls(puppetmaster_t)
 kernel_read_system_state(puppetmaster_t)
 kernel_read_crypto_sysctls(puppetmaster_t)
 
@@ -207,21 +235,45 @@
 corenet_tcp_bind_puppet_port(puppetmaster_t)
 corenet_sendrecv_puppet_server_packets(puppetmaster_t)
 
+# This needs investigation. Puppermasterd is confirmed to bind udp#  sockets to random high ports.
+corenet_udp_bind_generic_node(puppetmaster_t)
+corenet_udp_bind_generic_port(puppetmaster_t)
+
 dev_read_rand(puppetmaster_t)
 dev_read_urand(puppetmaster_t)
+dev_search_sysfs(puppetmaster_t)
 
+domain_obj_id_change_exemption(puppetmaster_t)
 domain_read_all_domains_state(puppetmaster_t)
 
 files_read_etc_files(puppetmaster_t)
+files_read_usr_files(puppetmaster_t)
 files_search_var_lib(puppetmaster_t)
+files_relabel_config_dirs(puppetmaster_t)
+files_relabel_config_files(puppetmaster_t)
 
 logging_send_syslog_msg(puppetmaster_t)
 
 miscfiles_read_localization(puppetmaster_t)
+miscfiles_read_certs(puppetmaster_t)
 
 sysnet_dns_name_resolve(puppetmaster_t)
 sysnet_run_ifconfig(puppetmaster_t, system_r)
 
+mta_send_mail(puppetmaster_t)
+
+optional_policy(`
+    tunable_policy(`puppetmaster_use_db',`
+        mysql_stream_connect(puppetmaster_t)
+    ')
+')
+
+optional_policy(`
+    tunable_policy(`puppetmaster_use_db',`
+        postgresql_stream_connect(puppetmaster_t)
+    ')
+')
+
 optional_policy(`
 	hostname_exec(puppetmaster_t)
 ')
@@ -232,3 +284,14 @@
 	rpm_exec(puppetmaster_t)
 	rpm_read_db(puppetmaster_t)
 ')
+
+optional_policy(`
+    usermanage_access_check_groupadd(puppetmaster_t)
+    usermanage_access_check_passwd(puppetmaster_t)
+    usermanage_access_check_useradd(puppetmaster_t)
+')
+
+#optional_policy(`
+#	usermanage_domtrans_groupadd(puppetmaster_t)
+#	usermanage_domtrans_useradd(puppetmaster_t)
+#')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/pyzor.fc serefpolicy-3.7.19/policy/modules/services/pyzor.fc
--- nsaserefpolicy/policy/modules/services/pyzor.fc	2011-03-17 07:21:20.882851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/pyzor.fc	2012-05-08 20:22:43.277089882 +0000
@@ -1,9 +1,13 @@
-/etc/pyzor(/.*)?		gen_context(system_u:object_r:pyzor_etc_t, s0)
+#/etc/pyzor(/.*)?		gen_context(system_u:object_r:pyzor_etc_t, s0)
+#/etc/rc\.d/init\.d/pyzord	--	gen_context(system_u:object_r:pyzord_initrc_exec_t,s0)
 
-HOME_DIR/\.pyzor(/.*)?		gen_context(system_u:object_r:pyzor_home_t,s0)
+#HOME_DIR/\.pyzor(/.*)?		gen_context(system_u:object_r:pyzor_home_t,s0)
+#HOME_DIR/\.spamd(/.*)?		gen_context(system_u:object_r:pyzor_home_t,s0)
+#/root/\.pyzor(/.*)?		gen_context(system_u:object_r:pyzor_home_t,s0)
+#/root/\.spamd(/.*)?		gen_context(system_u:object_r:pyzor_home_t,s0)
 
-/usr/bin/pyzor		--	gen_context(system_u:object_r:pyzor_exec_t,s0)
-/usr/bin/pyzord		--	gen_context(system_u:object_r:pyzord_exec_t,s0)
+#/usr/bin/pyzor		--	gen_context(system_u:object_r:pyzor_exec_t,s0)
+#/usr/bin/pyzord		--	gen_context(system_u:object_r:pyzord_exec_t,s0)
 
-/var/lib/pyzord(/.*)?		gen_context(system_u:object_r:pyzor_var_lib_t,s0)
-/var/log/pyzord\.log	--	gen_context(system_u:object_r:pyzord_log_t,s0)
+#/var/lib/pyzord(/.*)?		gen_context(system_u:object_r:pyzor_var_lib_t,s0)
+#/var/log/pyzord\.log	--	gen_context(system_u:object_r:pyzord_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/pyzor.if serefpolicy-3.7.19/policy/modules/services/pyzor.if
--- nsaserefpolicy/policy/modules/services/pyzor.if	2011-03-17 07:21:22.283851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/pyzor.if	2011-03-17 07:21:05.023851003 +0000
@@ -88,3 +88,50 @@
 	corecmd_search_bin($1)
 	can_exec($1, pyzor_exec_t)
 ')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an pyzor environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed to manage the pyzor domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`pyzor_admin',`
+	gen_require(`
+		type pyzord_t, pyzor_tmp_t, pyzord_log_t;
+		type pyzor_etc_t, pyzor_var_lib_t;
+		type pyzord_initrc_exec_t;
+	')
+
+	allow $1 pyzord_t:process { ptrace signal_perms };
+	ps_process_pattern($1, pyzord_t)
+	        
+	init_labeled_script_domtrans($1, pyzord_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 pyzord_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_list_tmp($1)
+	admin_pattern($1, pyzor_tmp_t)
+
+	logging_list_logs($1)
+	admin_pattern($1, pyzord_log_t)
+
+	files_list_etc($1)
+	admin_pattern($1, pyzor_etc_t)
+
+	files_list_var_lib($1)
+	admin_pattern($1, pyzor_var_lib_t)
+')
+
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/pyzor.te serefpolicy-3.7.19/policy/modules/services/pyzor.te
--- nsaserefpolicy/policy/modules/services/pyzor.te	2011-03-17 07:21:21.748851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/pyzor.te	2012-05-08 20:21:18.593082455 +0000
@@ -6,6 +6,38 @@
 # Declarations
 #
 
+
+ifdef(`distro_redhat',`
+
+	gen_require(`
+		type spamc_t;
+		type spamc_exec_t;
+		type spamd_t;
+		type spamd_initrc_exec_t;
+		type spamd_exec_t;
+		type spamc_tmp_t;
+		type spamd_log_t;
+		type spamd_var_lib_t;
+		type spamd_etc_t;
+		type spamc_tmp_t;
+		type spamc_home_t;
+	')
+
+	typealias spamc_t alias pyzor_t;
+	typealias spamc_exec_t alias pyzor_exec_t;
+	typealias spamd_t alias pyzord_t;
+	typealias spamd_initrc_exec_t alias pyzord_initrc_exec_t;
+	typealias spamd_exec_t alias pyzord_exec_t;
+	typealias spamc_tmp_t alias pyzor_tmp_t;
+	typealias spamd_log_t alias pyzor_log_t;
+	typealias spamd_log_t alias pyzord_log_t;
+	typealias spamd_var_lib_t alias pyzor_var_lib_t;
+	typealias spamd_etc_t alias pyzor_etc_t;
+	typealias spamc_home_t alias pyzor_home_t;
+	typealias spamc_home_t alias user_pyzor_home_t;
+
+',`
+
 type pyzor_t;
 type pyzor_exec_t;
 typealias pyzor_t alias { user_pyzor_t staff_pyzor_t sysadm_pyzor_t };
@@ -40,6 +72,7 @@
 
 type pyzord_log_t;
 logging_log_file(pyzord_log_t)
+')
 
 ########################################
 #
@@ -77,12 +110,16 @@
 
 dev_read_urand(pyzor_t)
 
+fs_getattr_xattr_fs(pyzor_t)
+
 files_read_etc_files(pyzor_t)
 
 auth_use_nsswitch(pyzor_t)
 
 miscfiles_read_localization(pyzor_t)
 
+mta_read_queue(pyzor_t)
+
 userdom_dontaudit_search_user_home_dirs(pyzor_t)
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/qmail.fc serefpolicy-3.7.19/policy/modules/services/qmail.fc
--- nsaserefpolicy/policy/modules/services/qmail.fc	2011-03-17 07:21:21.808851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/qmail.fc	2011-08-29 09:49:03.706160001 +0000
@@ -17,6 +17,7 @@
 /var/qmail/bin/tcp-env		--	gen_context(system_u:object_r:qmail_tcp_env_exec_t,s0)
 
 /var/qmail/control(/.*)?		gen_context(system_u:object_r:qmail_etc_t,s0)
+/var/qmail/owners(/.*)?        gen_context(system_u:object_r:qmail_etc_t,s0)
 
 /var/qmail/queue(/.*)?			gen_context(system_u:object_r:qmail_spool_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/qmail.if serefpolicy-3.7.19/policy/modules/services/qmail.if
--- nsaserefpolicy/policy/modules/services/qmail.if	2011-03-17 07:21:21.583851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/qmail.if	2011-10-12 18:27:38.131160001 +0000
@@ -149,3 +149,59 @@
 
 	domtrans_pattern(qmail_smtpd_t, $2, $1)
 ')
+
+########################################
+## <summary>
+##      Create, read, write, and delete qmail
+##      spool directories.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`qmail_manage_spool_dirs',`
+        gen_require(`
+                type qmail_spool_t;
+        ')
+
+        manage_dirs_pattern($1, qmail_spool_t, qmail_spool_t)
+')
+
+########################################
+## <summary>
+##      Create, read, write, and delete qmail
+##      spool files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`qmail_manage_spool_files',`
+        gen_require(`
+                type qmail_spool_t;
+        ')
+
+        manage_files_pattern($1, qmail_spool_t, qmail_spool_t)
+')
+
+########################################
+## <summary>
+##      Read and write to qmail spool pipes.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`qmail_rw_spool_pipes',`
+        gen_require(`
+                type qmail_spool_t;
+        ')
+
+        allow $1 qmail_spool_t:fifo_file rw_fifo_file_perms;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/qmail.te serefpolicy-3.7.19/policy/modules/services/qmail.te
--- nsaserefpolicy/policy/modules/services/qmail.te	2011-03-17 07:21:21.428851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/qmail.te	2011-03-17 07:21:03.893851002 +0000
@@ -125,6 +125,10 @@
 	spamassassin_domtrans_client(qmail_local_t)
 ')
 
+optional_policy(`
+	uucp_domtrans(qmail_local_t)
+')
+
 ########################################
 #
 # qmail-lspawn local policy
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/qpidd.fc serefpolicy-3.7.19/policy/modules/services/qpidd.fc
--- nsaserefpolicy/policy/modules/services/qpidd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/qpidd.fc	2011-03-17 07:21:04.879851002 +0000
@@ -0,0 +1,9 @@
+
+/usr/sbin/qpidd	--	gen_context(system_u:object_r:qpidd_exec_t,s0)
+
+/etc/rc\.d/init\.d/qpidd	--	gen_context(system_u:object_r:qpidd_initrc_exec_t,s0)
+
+/var/lib/qpidd(/.*)?			gen_context(system_u:object_r:qpidd_var_lib_t,s0)
+
+/var/run/qpidd(/.*)?			gen_context(system_u:object_r:qpidd_var_run_t,s0)
+/var/run/qpidd\.pid			gen_context(system_u:object_r:qpidd_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/qpidd.if serefpolicy-3.7.19/policy/modules/services/qpidd.if
--- nsaserefpolicy/policy/modules/services/qpidd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/qpidd.if	2012-01-25 19:59:49.956552289 +0000
@@ -0,0 +1,234 @@
+
+## <summary>policy for qpidd</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run qpidd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`qpidd_domtrans',`
+	gen_require(`
+		type qpidd_t, qpidd_exec_t;
+	')
+
+	domtrans_pattern($1, qpidd_exec_t, qpidd_t)
+')
+
+
+########################################
+## <summary>
+##	Execute qpidd server in the qpidd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`qpidd_initrc_domtrans',`
+	gen_require(`
+		type qpidd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, qpidd_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Read qpidd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`qpidd_read_pid_files',`
+	gen_require(`
+		type qpidd_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 qpidd_var_run_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Manage qpidd var_run files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`qpidd_manage_var_run',`
+	gen_require(`
+		type qpidd_var_run_t;
+	')
+
+         manage_dirs_pattern($1, qpidd_var_run_t, qpidd_var_run_t)
+         manage_files_pattern($1, qpidd_var_run_t, qpidd_var_run_t)
+         manage_lnk_files_pattern($1, qpidd_var_run_t, qpidd_var_run_t)
+')
+
+
+########################################
+## <summary>
+##	Search qpidd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`qpidd_search_lib',`
+	gen_require(`
+		type qpidd_var_lib_t;
+	')
+
+	allow $1 qpidd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read qpidd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`qpidd_read_lib_files',`
+	gen_require(`
+		type qpidd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        read_files_pattern($1, qpidd_var_lib_t, qpidd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	qpidd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`qpidd_manage_lib_files',`
+	gen_require(`
+		type qpidd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+        manage_files_pattern($1, qpidd_var_lib_t,  qpidd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage qpidd var_lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`qpidd_manage_var_lib',`
+	gen_require(`
+		type qpidd_var_lib_t;
+	')
+
+         manage_dirs_pattern($1, qpidd_var_lib_t, qpidd_var_lib_t)
+         manage_files_pattern($1, qpidd_var_lib_t, qpidd_var_lib_t)
+         manage_lnk_files_pattern($1, qpidd_var_lib_t, qpidd_var_lib_t)
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an qpidd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`qpidd_admin',`
+	gen_require(`
+		type qpidd_t, qpidd_initrc_exec_t;
+	')
+
+	allow $1 qpidd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, qpidd_t)
+
+	# Allow qpidd_t to restart the apache service
+	qpidd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 qpidd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	qpidd_manage_var_run($1)
+
+	qpidd_manage_var_lib($1)
+
+')
+
+#####################################
+## <summary>
+##      Allow read and write access to qpidd semaphores.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`qpidd_rw_semaphores',`
+        gen_require(`
+                type qpidd_t;
+        ')
+
+        allow $1 qpidd_t:sem rw_sem_perms;
+')
+
+########################################
+## <summary>
+##      Read and write to qpidd shared memory.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`qpidd_rw_shm',`
+        gen_require(`
+                type qpidd_t, qpidd_tmpfs_t;
+        ')
+
+        allow $1 qpidd_t:shm rw_shm_perms;
+
+	    fs_search_tmpfs($1)
+	    manage_files_pattern($1, qpidd_tmpfs_t, qpidd_tmpfs_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/qpidd.te serefpolicy-3.7.19/policy/modules/services/qpidd.te
--- nsaserefpolicy/policy/modules/services/qpidd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/qpidd.te	2012-03-06 13:26:05.767885019 +0000
@@ -0,0 +1,83 @@
+policy_module(qpidd,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type qpidd_t;
+type qpidd_exec_t;
+init_daemon_domain(qpidd_t, qpidd_exec_t)
+
+type qpidd_initrc_exec_t;
+init_script_file(qpidd_initrc_exec_t)
+
+type qpidd_tmpfs_t;
+files_tmpfs_file(qpidd_tmpfs_t)
+
+type qpidd_var_run_t;
+files_pid_file(qpidd_var_run_t)
+
+type qpidd_var_lib_t;
+files_type(qpidd_var_lib_t)
+
+########################################
+#
+# qpidd local policy
+#
+
+allow qpidd_t self:process { getsched setsched signull };
+allow qpidd_t self:fifo_file rw_fifo_file_perms;
+allow qpidd_t self:sem create_sem_perms;
+allow qpidd_t self:shm create_shm_perms;
+allow qpidd_t self:tcp_socket create_stream_socket_perms;
+allow qpidd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(qpidd_t, qpidd_tmpfs_t, qpidd_tmpfs_t)
+manage_files_pattern(qpidd_t, qpidd_tmpfs_t, qpidd_tmpfs_t)
+fs_tmpfs_filetrans(qpidd_t, qpidd_tmpfs_t, { dir file })
+
+manage_dirs_pattern(qpidd_t, qpidd_var_lib_t,  qpidd_var_lib_t)
+manage_files_pattern(qpidd_t, qpidd_var_lib_t,  qpidd_var_lib_t)
+files_var_lib_filetrans(qpidd_t, qpidd_var_lib_t, { file dir } )
+
+manage_dirs_pattern(qpidd_t, qpidd_var_run_t,  qpidd_var_run_t)
+manage_files_pattern(qpidd_t, qpidd_var_run_t,  qpidd_var_run_t)
+files_pid_filetrans(qpidd_t, qpidd_var_run_t, { file dir })
+
+kernel_read_system_state(qpidd_t)
+
+corenet_all_recvfrom_unlabeled(qpidd_t)
+corenet_all_recvfrom_netlabel(qpidd_t)
+corenet_tcp_bind_generic_node(qpidd_t)
+corenet_tcp_sendrecv_generic_if(qpidd_t)
+corenet_tcp_sendrecv_generic_node(qpidd_t)
+corenet_tcp_sendrecv_all_ports(qpidd_t)
+corenet_tcp_bind_amqp_port(qpidd_t)
+corenet_tcp_bind_matahari_port(qpidd_t)
+corenet_tcp_connect_amqp_port(qpidd_t)
+corenet_tcp_connect_matahari_port(qpidd_t)
+
+dev_read_sysfs(qpidd_t)
+dev_read_urand(qpidd_t)
+
+files_read_etc_files(qpidd_t)
+files_read_usr_files(qpidd_t)
+# needed by ssl
+files_list_tmp(qpidd_t)
+
+logging_send_syslog_msg(qpidd_t)
+
+miscfiles_read_localization(qpidd_t)
+
+sysnet_dns_name_resolve(qpidd_t)
+
+optional_policy(`
+	corosync_stream_connect(qpidd_t)
+')
+
+optional_policy(`
+	matahari_manage_lib_files(qpidd_t)
+	matahari_manage_pid_files(qpidd_t)
+')
+ 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/quantum.fc serefpolicy-3.7.19/policy/modules/services/quantum.fc
--- nsaserefpolicy/policy/modules/services/quantum.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/quantum.fc	2012-05-14 23:42:35.052212567 +0000
@@ -0,0 +1,13 @@
+
+/etc/rc\.d/init\.d/quantum-server --  gen_context(system_u:object_r:quantum_initrc_exec_t,s0)
+
+/usr/bin/quantum-server			--	gen_context(system_u:object_r:quantum_exec_t,s0)
+/usr/bin/quantum-openvswitch-agent	--	gen_context(system_u:object_r:quantum_exec_t,s0)
+/usr/bin/quantum-linuxbridge-agent	--	gen_context(system_u:object_r:quantum_exec_t,s0)
+/usr/bin/quantum-ryu-agent		--	gen_context(system_u:object_r:quantum_exec_t,s0)
+
+/var/lib/quantum(/.*)?		gen_context(system_u:object_r:quantum_var_lib_t,s0)
+
+/var/log/quantum(/.*)?		gen_context(system_u:object_r:quantum_log_t,s0)
+
+/var/run/quantum(/.*)?		gen_context(system_u:object_r:quantum_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/quantum.if serefpolicy-3.7.19/policy/modules/services/quantum.if
--- nsaserefpolicy/policy/modules/services/quantum.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/quantum.if	2012-05-14 23:45:06.875640233 +0000
@@ -0,0 +1,191 @@
+## <summary>Quantum is a virtual network service for Openstack</summary>
+
+########################################
+## <summary>
+##	Transition to quantum.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`quantum_domtrans',`
+	gen_require(`
+		type quantum_t, quantum_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, quantum_exec_t, quantum_t)
+')
+
+########################################
+## <summary>
+##	Read quantum's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`quantum_read_log',`
+	gen_require(`
+		type quantum_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, quantum_log_t, quantum_log_t)
+')
+
+########################################
+## <summary>
+##	Append to quantum log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`quantum_append_log',`
+	gen_require(`
+		type quantum_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, quantum_log_t, quantum_log_t)
+')
+
+########################################
+## <summary>
+##	Manage quantum log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`quantum_manage_log',`
+	gen_require(`
+		type quantum_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, quantum_log_t, quantum_log_t)
+	manage_files_pattern($1, quantum_log_t, quantum_log_t)
+	manage_lnk_files_pattern($1, quantum_log_t, quantum_log_t)
+')
+
+########################################
+## <summary>
+##	Search quantum lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`quantum_search_lib',`
+	gen_require(`
+		type quantum_var_lib_t;
+	')
+
+	allow $1 quantum_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read quantum lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`quantum_read_lib_files',`
+	gen_require(`
+		type quantum_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, quantum_var_lib_t, quantum_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage quantum lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`quantum_manage_lib_files',`
+	gen_require(`
+		type quantum_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, quantum_var_lib_t, quantum_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage quantum lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`quantum_manage_lib_dirs',`
+	gen_require(`
+		type quantum_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, quantum_var_lib_t, quantum_var_lib_t)
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an quantum environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`quantum_admin',`
+	gen_require(`
+		type quantum_t;
+		type quantum_log_t;
+		type quantum_var_lib_t;
+	')
+
+	allow $1 quantum_t:process { ptrace signal_perms };
+	ps_process_pattern($1, quantum_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, quantum_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, quantum_var_lib_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/quantum.te serefpolicy-3.7.19/policy/modules/services/quantum.te
--- nsaserefpolicy/policy/modules/services/quantum.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/quantum.te	2012-05-15 07:36:48.918706015 +0000
@@ -0,0 +1,94 @@
+policy_module(quantum, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type quantum_t;
+type quantum_exec_t;
+init_daemon_domain(quantum_t, quantum_exec_t)
+
+type quantum_log_t;
+logging_log_file(quantum_log_t)
+
+type quantum_tmp_t;
+files_tmp_file(quantum_tmp_t)
+
+type quantum_var_lib_t;
+files_type(quantum_var_lib_t)
+
+type quantum_initrc_exec_t;
+init_script_file(quantum_initrc_exec_t)
+
+type quantum_var_run_t;
+files_pid_file(quantum_var_run_t)
+
+########################################
+#
+# quantum local policy
+#
+
+allow quantum_t self:capability { setuid sys_resource setgid audit_write };
+allow quantum_t self:process { setsched setrlimit };
+allow quantum_t self:key manage_key_perms;
+
+allow quantum_t self:fifo_file rw_fifo_file_perms;
+allow quantum_t self:unix_stream_socket create_stream_socket_perms;
+allow quantum_t self:tcp_socket create_stream_socket_perms;
+
+manage_dirs_pattern(quantum_t, quantum_log_t, quantum_log_t)
+manage_files_pattern(quantum_t, quantum_log_t, quantum_log_t)
+logging_log_filetrans(quantum_t, quantum_log_t, { dir file })
+
+manage_files_pattern(quantum_t, quantum_tmp_t, quantum_tmp_t)
+files_tmp_filetrans(quantum_t, quantum_tmp_t, file)
+can_exec(quantum_t, quantum_tmp_t)
+
+manage_dirs_pattern(quantum_t, quantum_var_lib_t, quantum_var_lib_t)
+manage_files_pattern(quantum_t, quantum_var_lib_t, quantum_var_lib_t)
+files_var_lib_filetrans(quantum_t, quantum_var_lib_t, { dir file })
+
+manage_dirs_pattern(quantum_t, quantum_var_run_t, quantum_var_run_t)
+manage_files_pattern(quantum_t, quantum_var_run_t, quantum_var_run_t)
+
+kernel_read_kernel_sysctls(quantum_t)
+kernel_read_system_state(quantum_t)
+
+corecmd_exec_shell(quantum_t)
+corecmd_exec_bin(quantum_t)
+
+corenet_tcp_bind_generic_node(quantum_t)
+corenet_tcp_bind_quantum_port(quantum_t)
+corenet_tcp_connect_mysqld_port(quantum_t)
+
+dev_read_urand(quantum_t)
+dev_list_sysfs(quantum_t)
+
+domain_use_interactive_fds(quantum_t)
+
+files_read_etc_files(quantum_t)
+files_read_usr_files(quantum_t)
+
+auth_use_nsswitch(quantum_t)
+
+libs_exec_ldconfig(quantum_t)
+
+logging_send_audit_msgs(quantum_t)
+logging_send_syslog_msg(quantum_t)
+
+miscfiles_read_localization(quantum_t)
+
+sysnet_domtrans_ifconfig(quantum_t)
+
+optional_policy(`
+	brctl_domtrans(quantum_t)
+')
+
+optional_policy(`
+	sudo_exec(quantum_t)
+')
+
+optional_policy(`
+	unconfined_domain(quantum_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/radius.if serefpolicy-3.7.19/policy/modules/services/radius.if
--- nsaserefpolicy/policy/modules/services/radius.if	2011-03-17 07:21:20.919851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/radius.if	2011-03-17 07:21:03.343851003 +0000
@@ -38,7 +38,7 @@
 		type radiusd_initrc_exec_t;
 	')
 
-	allow $1 radiusd_t:process { ptrace signal_perms getattr };
+	allow $1 radiusd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, radiusd_t)
 
 	init_labeled_script_domtrans($1, radiusd_initrc_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/radius.te serefpolicy-3.7.19/policy/modules/services/radius.te
--- nsaserefpolicy/policy/modules/services/radius.te	2011-03-17 07:21:20.931851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/radius.te	2011-09-15 16:21:11.888160000 +0000
@@ -37,7 +37,7 @@
 # gzip also needs chown access to preserve GID for radwtmp files
 allow radiusd_t self:capability { chown dac_override fsetid kill setgid setuid sys_resource sys_tty_config };
 dontaudit radiusd_t self:capability sys_tty_config;
-allow radiusd_t self:process { getsched setsched sigkill signal };
+allow radiusd_t self:process { getsched setsched setrlimit sigkill signal };
 allow radiusd_t self:fifo_file rw_fifo_file_perms;
 allow radiusd_t self:unix_stream_socket create_stream_socket_perms;
 allow radiusd_t self:tcp_socket create_stream_socket_perms;
@@ -60,8 +60,10 @@
 manage_files_pattern(radiusd_t, radiusd_var_lib_t, radiusd_var_lib_t)
 
 manage_sock_files_pattern(radiusd_t, radiusd_var_run_t, radiusd_var_run_t)
+manage_dirs_pattern(radiusd_t, radiusd_var_run_t, radiusd_var_run_t)
 manage_files_pattern(radiusd_t, radiusd_var_run_t, radiusd_var_run_t)
-files_pid_filetrans(radiusd_t, radiusd_var_run_t, { file sock_file })
+files_pid_filetrans(radiusd_t, radiusd_var_run_t, { file sock_file dir })
+files_dontaudit_list_tmp(radiusd_t)
 
 kernel_read_kernel_sysctls(radiusd_t)
 kernel_read_system_state(radiusd_t)
@@ -79,6 +81,7 @@
 corenet_udp_bind_radius_port(radiusd_t)
 corenet_tcp_connect_mysqld_port(radiusd_t)
 corenet_tcp_connect_snmp_port(radiusd_t)
+corenet_tcp_connect_postgresql_port(radiusd_t)
 corenet_sendrecv_radius_server_packets(radiusd_t)
 corenet_sendrecv_radacct_server_packets(radiusd_t)
 corenet_sendrecv_mysqld_client_packets(radiusd_t)
@@ -130,6 +133,7 @@
 ')
 
 optional_policy(`
+	samba_domtrans_winbind_helper(radiusd_t)
 	samba_read_var_files(radiusd_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/razor.fc serefpolicy-3.7.19/policy/modules/services/razor.fc
--- nsaserefpolicy/policy/modules/services/razor.fc	2011-03-17 07:21:21.165851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/razor.fc	2012-05-08 20:22:51.346900001 +0000
@@ -1,8 +1,9 @@
-HOME_DIR/\.razor(/.*)?		gen_context(system_u:object_r:razor_home_t,s0)
+#/root/\.razor(/.*)?		gen_context(system_u:object_r:razor_home_t,s0)
+#HOME_DIR/\.razor(/.*)?		gen_context(system_u:object_r:razor_home_t,s0)
 
-/etc/razor(/.*)?		gen_context(system_u:object_r:razor_etc_t,s0)
+#/etc/razor(/.*)?		gen_context(system_u:object_r:razor_etc_t,s0)
 
-/usr/bin/razor.*	--	gen_context(system_u:object_r:razor_exec_t,s0)
+#/usr/bin/razor.*	--	gen_context(system_u:object_r:razor_exec_t,s0)
 
-/var/lib/razor(/.*)?		gen_context(system_u:object_r:razor_var_lib_t,s0)
-/var/log/razor-agent\.log --	gen_context(system_u:object_r:razor_log_t,s0)
+#/var/lib/razor(/.*)?		gen_context(system_u:object_r:razor_var_lib_t,s0)
+#/var/log/razor-agent\.log --	gen_context(system_u:object_r:razor_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/razor.if serefpolicy-3.7.19/policy/modules/services/razor.if
--- nsaserefpolicy/policy/modules/services/razor.if	2011-03-17 07:21:21.619851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/razor.if	2011-03-17 07:21:04.104851002 +0000
@@ -157,3 +157,44 @@
 
 	domtrans_pattern($1, razor_exec_t, razor_t)
 ')
+
+########################################
+## <summary>
+##	Create, read, write, and delete razor files
+##	in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+template(`razor_manage_user_home_files',`
+	gen_require(`
+		type razor_home_t;
+	')
+
+	userdom_search_user_home_dirs($1)
+	manage_files_pattern($1, razor_home_t, razor_home_t)
+	read_lnk_files_pattern($1, razor_home_t, razor_home_t)
+')
+
+########################################
+## <summary>
+##	read razor lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`razor_read_lib_files',`
+	gen_require(`
+		type razor_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, razor_var_lib_t, razor_var_lib_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/razor.te serefpolicy-3.7.19/policy/modules/services/razor.te
--- nsaserefpolicy/policy/modules/services/razor.te	2011-03-17 07:21:21.980851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/razor.te	2011-03-17 07:21:04.649851001 +0000
@@ -6,6 +6,32 @@
 # Declarations
 #
 
+ifdef(`distro_redhat',`
+
+	gen_require(`
+		type spamc_t;
+		type spamc_exec_t;
+		type spamd_log_t;
+		type spamd_spool_t;
+		type spamd_var_lib_t;
+		type spamd_etc_t;
+		type spamc_home_t;
+		type spamc_tmp_t;
+	')
+
+	typealias spamc_t alias razor_t;
+	typealias spamc_exec_t alias razor_exec_t;
+	typealias spamd_log_t alias razor_log_t;
+	typealias spamd_var_lib_t alias razor_var_lib_t;
+	typealias spamd_etc_t alias razor_etc_t;
+	typealias spamc_home_t alias razor_home_t;
+	typealias spamc_home_t alias { user_razor_home_t staff_razor_home_t sysadm_razor_home_t };
+	typealias spamc_home_t alias { auditadm_razor_home_t secadm_razor_home_t };
+	typealias spamc_tmp_t alias { user_razor_tmp_t staff_razor_tmp_t sysadm_razor_tmp_t };
+	typealias spamc_tmp_t alias { auditadm_razor_tmp_t secadm_razor_tmp_t };
+
+',`
+
 type razor_exec_t;
 corecmd_executable_file(razor_exec_t)
 
@@ -102,6 +128,8 @@
 manage_files_pattern(razor_t, razor_tmp_t, razor_tmp_t)
 files_tmp_filetrans(razor_t, razor_tmp_t, { file dir })
 
+auth_use_nsswitch(razor_t)
+
 logging_send_syslog_msg(razor_t)
 
 userdom_search_user_home_dirs(razor_t)
@@ -120,5 +148,7 @@
 ')
 
 optional_policy(`
-	nscd_socket_use(razor_t)
+	milter_manage_spamass_state(razor_t)
+')
+
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/remotelogin.te serefpolicy-3.7.19/policy/modules/services/remotelogin.te
--- nsaserefpolicy/policy/modules/services/remotelogin.te	2011-03-17 07:21:21.168851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/remotelogin.te	2011-03-18 14:14:07.250630000 +0000
@@ -50,6 +50,8 @@
 fs_search_auto_mountpoints(remote_login_t)
 
 term_relabel_all_ptys(remote_login_t)
+term_setattr_all_ptys(remote_login_t)
+term_use_all_ptys(remote_login_t)
 
 auth_rw_login_records(remote_login_t)
 auth_rw_faillog(remote_login_t)
@@ -88,6 +90,7 @@
 # since very weak authentication is used.
 userdom_signal_unpriv_users(remote_login_t)
 userdom_spec_domtrans_unpriv_users(remote_login_t)
+userdom_rw_user_tmp_files(remote_login_t)
 
 # Search for mail spool file.
 mta_getattr_spool(remote_login_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/resmgr.if serefpolicy-3.7.19/policy/modules/services/resmgr.if
--- nsaserefpolicy/policy/modules/services/resmgr.if	2011-03-17 07:21:20.692851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/resmgr.if	2011-03-17 07:21:03.108851002 +0000
@@ -16,7 +16,6 @@
 		type resmgrd_var_run_t, resmgrd_t;
 	')
 
-	allow $1 resmgrd_t:unix_stream_socket connectto;
-	allow $1 resmgrd_var_run_t:sock_file { getattr write };
 	files_search_pids($1)
+	stream_connect_pattern($1, resmgrd_var_run_t, resmgrd_var_run_t, resmgrd_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rgmanager.fc serefpolicy-3.7.19/policy/modules/services/rgmanager.fc
--- nsaserefpolicy/policy/modules/services/rgmanager.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rgmanager.fc	2011-03-17 07:21:03.533851002 +0000
@@ -0,0 +1,10 @@
+
+/etc/rc\.d/init\.d/rgmanager          --  gen_context(system_u:object_r:rgmanager_initrc_exec_t,s0)
+
+/usr/sbin/rgmanager                    --      gen_context(system_u:object_r:rgmanager_exec_t,s0)
+
+/var/log/cluster/rgmanager\.log        --      gen_context(system_u:object_r:rgmanager_var_log_t,s0)
+
+/var/run/rgmanager\.pid                --      gen_context(system_u:object_r:rgmanager_var_run_t,s0)
+
+/var/run/cluster/rgmanager\.sk        -s      gen_context(system_u:object_r:rgmanager_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rgmanager.if serefpolicy-3.7.19/policy/modules/services/rgmanager.if
--- nsaserefpolicy/policy/modules/services/rgmanager.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rgmanager.if	2011-03-17 07:21:04.924851001 +0000
@@ -0,0 +1,141 @@
+## <summary>SELinux policy for rgmanager</summary>
+
+#######################################
+## <summary>
+##      Execute a domain transition to run rgmanager.
+## </summary>
+## <param name="domain">
+## <summary>
+##      Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`rgmanager_domtrans',`
+        gen_require(`
+                type rgmanager_t, rgmanager_exec_t;
+        ')
+
+        corecmd_search_bin($1)
+        domtrans_pattern($1,rgmanager_exec_t,rgmanager_t)
+
+')
+
+#######################################
+## <summary>
+##      Allow read and write access to rgmanager semaphores.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`rgmanager_rw_semaphores',`
+        gen_require(`
+                type rgmanager_t;
+        ')
+
+        allow $1 rgmanager_t:sem { unix_read unix_write associate read write };
+')
+
+########################################
+## <summary>
+##	Connect to rgmanager over an unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rgmanager_stream_connect',`
+	gen_require(`
+		type rgmanager_t, rgmanager_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, rgmanager_var_run_t, rgmanager_var_run_t, rgmanager_t)
+')
+
+######################################
+## <summary>
+##      Allow manage rgmanager tmpfs files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`rgmanager_manage_tmpfs_files',`
+    gen_require(`
+        type rgmanager_tmpfs_t;
+    ')
+
+    fs_search_tmpfs($1)
+	manage_files_pattern($1, rgmanager_tmpfs_t, rgmanager_tmpfs_t)
+    manage_lnk_files_pattern($1, rgmanager_tmpfs_t, rgmanager_tmpfs_t)
+')
+
+######################################
+## <summary>
+##      Allow manage rgmanager tmp files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      The type of the process performing this action.
+##      </summary>
+## </param>
+#
+interface(`rgmanager_manage_tmp_files',`
+    gen_require(`
+        type rgmanager_tmp_t;
+    ')
+
+    files_search_tmp($1)
+    manage_files_pattern($1, rgmanager_tmp_t, rgmanager_tmp_t)
+    manage_lnk_files_pattern($1, rgmanager_tmp_t, rgmanager_tmp_t)
+')
+
+######################################
+## <summary>
+##	All of the rules required to administrate 
+##	an rgmanager environment
+## </summary>
+## <param name="domain">
+## 	<summary>
+##	Domain allowed access.
+##	 </summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed to manage the rgmanager domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`rgmanager_admin',`
+	gen_require(`
+		type rgmanager_t, rgmanager_initrc_exec_t, rgmanager_tmp_t; 
+		type rgmanager_tmpfs_t, rgmanager_var_log_t, rgmanager_var_run_t;
+        ')
+
+	allow $1 rgmanager_t:process { ptrace signal_perms };
+	ps_process_pattern($1, rgmanager_t)
+
+	init_labeled_script_domtrans($1, rgmanager_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 rgmanager_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_tmp($1)
+	admin_pattern($1, rgmanager_tmp_t)
+
+	admin_pattern($1, rgmanager_tmpfs_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, rgmanager_var_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, rgmanager_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rgmanager.te serefpolicy-3.7.19/policy/modules/services/rgmanager.te
--- nsaserefpolicy/policy/modules/services/rgmanager.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rgmanager.te	2011-07-20 09:14:40.210523004 +0000
@@ -0,0 +1,231 @@
+
+policy_module(rgmanager, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+## <p>
+## Allow rgmanager domain to connect to the network using TCP.
+## </p>
+## </desc>
+gen_tunable(rgmanager_can_network_connect, false)
+
+type rgmanager_t;
+type rgmanager_exec_t;
+domain_type(rgmanager_t)
+init_daemon_domain(rgmanager_t, rgmanager_exec_t)
+
+type rgmanager_initrc_exec_t;
+init_script_file(rgmanager_initrc_exec_t)
+
+type rgmanager_tmp_t;
+files_tmp_file(rgmanager_tmp_t)
+
+type rgmanager_tmpfs_t;
+files_tmpfs_file(rgmanager_tmpfs_t)
+
+type rgmanager_var_log_t;
+logging_log_file(rgmanager_var_log_t)
+
+type rgmanager_var_run_t;
+files_pid_file(rgmanager_var_run_t)
+
+########################################
+#
+# rgmanager local policy
+#
+
+allow rgmanager_t self:capability { dac_override net_raw sys_resource sys_admin sys_nice ipc_lock };
+dontaudit rgmanager_t self:capability { sys_ptrace };
+allow rgmanager_t self:process { setsched signal };
+dontaudit rgmanager_t self:process { ptrace };
+
+allow rgmanager_t self:fifo_file rw_fifo_file_perms;
+allow rgmanager_t self:unix_stream_socket { create_stream_socket_perms };
+allow rgmanager_t self:unix_dgram_socket create_socket_perms;
+allow rgmanager_t self:tcp_socket create_stream_socket_perms;
+
+# tmp files
+manage_dirs_pattern(rgmanager_t, rgmanager_tmp_t, rgmanager_tmp_t)
+manage_files_pattern(rgmanager_t, rgmanager_tmp_t, rgmanager_tmp_t)
+files_tmp_filetrans(rgmanager_t, rgmanager_tmp_t, { file dir })
+
+manage_dirs_pattern(rgmanager_t, rgmanager_tmpfs_t, rgmanager_tmpfs_t)
+manage_files_pattern(rgmanager_t, rgmanager_tmpfs_t, rgmanager_tmpfs_t)
+fs_tmpfs_filetrans(rgmanager_t, rgmanager_tmpfs_t, { dir file })
+
+# log files
+manage_files_pattern(rgmanager_t, rgmanager_var_log_t, rgmanager_var_log_t)
+logging_log_filetrans(rgmanager_t, rgmanager_var_log_t, { file })
+
+# pid file
+manage_files_pattern(rgmanager_t, rgmanager_var_run_t, rgmanager_var_run_t)
+manage_sock_files_pattern(rgmanager_t, rgmanager_var_run_t, rgmanager_var_run_t)
+files_pid_filetrans(rgmanager_t, rgmanager_var_run_t, { file sock_file })
+
+corecmd_exec_bin(rgmanager_t)
+corecmd_exec_shell(rgmanager_t)
+consoletype_exec(rgmanager_t)
+
+kernel_kill(rgmanager_t)
+kernel_read_kernel_sysctls(rgmanager_t)
+kernel_read_rpc_sysctls(rgmanager_t)
+kernel_read_system_state(rgmanager_t)
+kernel_rw_rpc_sysctls(rgmanager_t)
+kernel_search_debugfs(rgmanager_t)
+kernel_search_network_state(rgmanager_t)
+
+fs_getattr_xattr_fs(rgmanager_t)
+
+# need to write to /dev/misc/dlm-control 
+dev_rw_dlm_control(rgmanager_t)
+dev_setattr_dlm_control(rgmanager_t)
+dev_search_sysfs(rgmanager_t)
+
+domain_read_all_domains_state(rgmanager_t)
+domain_getattr_all_domains(rgmanager_t)
+domain_dontaudit_ptrace_all_domains(rgmanager_t)
+
+storage_raw_read_fixed_disk(rgmanager_t)
+storage_getattr_fixed_disk_dev(rgmanager_t)
+
+# needed by resources scripts
+auth_read_all_files_except_shadow(rgmanager_t)
+auth_dontaudit_getattr_shadow(rgmanager_t)
+
+files_create_var_run_dirs(rgmanager_t)
+files_getattr_all_symlinks(rgmanager_t)
+files_list_all(rgmanager_t)
+files_manage_mnt_dirs(rgmanager_t)
+files_manage_mnt_files(rgmanager_t)
+files_manage_mnt_symlinks(rgmanager_t)
+files_manage_isid_type_files(rgmanager_t)
+files_manage_isid_type_dirs(rgmanager_t)
+
+fs_getattr_all_fs(rgmanager_t)
+
+term_getattr_pty_fs(rgmanager_t)
+#term_use_ptmx(rgmanager_t)
+
+auth_use_nsswitch(rgmanager_t)
+
+init_domtrans_script(rgmanager_t)
+
+logging_send_syslog_msg(rgmanager_t)
+
+miscfiles_read_localization(rgmanager_t)
+
+mount_domtrans(rgmanager_t)
+
+userdom_kill_all_users(rgmanager_t)
+
+tunable_policy(`rgmanager_can_network_connect',`
+        corenet_tcp_connect_all_ports(rgmanager_t)
+')
+
+# rgmanager can run resource scripts
+optional_policy(`
+	aisexec_stream_connect(rgmanager_t)
+	corosync_stream_connect(rgmanager_t)
+')
+
+optional_policy(`
+        apache_domtrans(rgmanager_t)
+        apache_signal(rgmanager_t)
+')
+
+optional_policy(`
+    dbus_system_bus_client(rgmanager_t)
+')
+
+optional_policy(`
+        fstools_domtrans(rgmanager_t)
+')
+
+optional_policy(`
+	rhcs_stream_connect_groupd(rgmanager_t)
+')
+
+optional_policy(`
+        hostname_exec(rgmanager_t)
+')
+
+optional_policy(`
+	ccs_manage_config(rgmanager_t)
+	ccs_stream_connect(rgmanager_t)
+	rhcs_stream_connect_gfs_controld(rgmanager_t)
+')
+
+optional_policy(`
+	lvm_domtrans(rgmanager_t)
+')
+
+optional_policy(`
+	ldap_initrc_domtrans(rgmanager_t)
+	ldap_domtrans(rgmanager_t)
+')
+
+optional_policy(`
+	mysql_domtrans_mysql_safe(rgmanager_t)
+	mysql_stream_connect(rgmanager_t)
+')
+
+optional_policy(`
+        netutils_domtrans(rgmanager_t)
+        netutils_domtrans_ping(rgmanager_t)
+')
+
+optional_policy(`
+        postgresql_domtrans(rgmanager_t)
+        postgresql_signal(rgmanager_t)
+')
+
+optional_policy(`
+        rdisc_exec(rgmanager_t)
+')
+
+optional_policy(`
+    ricci_dontaudit_rw_modcluster_pipes(rgmanager_t)
+')
+
+optional_policy(`
+	rpc_initrc_domtrans_nfsd(rgmanager_t)
+	rpc_initrc_domtrans_rpcd(rgmanager_t)
+
+	rpc_domtrans_nfsd(rgmanager_t)
+	rpc_domtrans_rpcd(rgmanager_t)
+	rpc_manage_nfs_state_data(rgmanager_t)
+')
+
+optional_policy(`
+        samba_initrc_domtrans(rgmanager_t)
+        samba_domtrans_smbd(rgmanager_t)
+        samba_domtrans_nmbd(rgmanager_t)
+        samba_manage_var_files(rgmanager_t)
+        samba_rw_config(rgmanager_t)
+        samba_signal_smbd(rgmanager_t)
+        samba_signal_nmbd(rgmanager_t)
+')
+
+optional_policy(`
+	sysnet_domtrans_ifconfig(rgmanager_t)
+')
+
+optional_policy(`
+	udev_read_db(rgmanager_t)
+')
+
+optional_policy(`
+       virt_stream_connect(rgmanager_t)
+')
+
+optional_policy(`
+       unconfined_domain(rgmanager_t)
+')
+
+optional_policy(`
+	xen_domtrans_xm(rgmanager_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rhcs.fc serefpolicy-3.7.19/policy/modules/services/rhcs.fc
--- nsaserefpolicy/policy/modules/services/rhcs.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rhcs.fc	2011-09-27 12:40:12.301160002 +0000
@@ -0,0 +1,28 @@
+/usr/sbin/dlm_controld                  --      gen_context(system_u:object_r:dlm_controld_exec_t,s0)
+/usr/sbin/fenced                        --      gen_context(system_u:object_r:fenced_exec_t,s0)
+/usr/sbin/fence_node                    --      gen_context(system_u:object_r:fenced_exec_t,s0)
+/usr/sbin/fence_tool					--      gen_context(system_u:object_r:fenced_exec_t,s0)
+/usr/sbin/foghorn               		--      gen_context(system_u:object_r:foghorn_exec_t,s0)
+/usr/sbin/gfs_controld                  --      gen_context(system_u:object_r:gfs_controld_exec_t,s0)
+/usr/sbin/groupd                        --      gen_context(system_u:object_r:groupd_exec_t,s0)
+/usr/sbin/qdiskd                       	--      gen_context(system_u:object_r:qdiskd_exec_t,s0)
+
+/var/lock/fence_manual\.lock  		--	gen_context(system_u:object_r:fenced_lock_t,s0)
+
+/var/lib/cluster(/.*)?                           gen_context(system_u:object_r:cluster_var_lib_t,s0)
+/var/lib/qdiskd(/.*)?                          	gen_context(system_u:object_r:qdiskd_var_lib_t,s0)
+
+/var/log/cluster/.*\.*log			<<none>>
+/var/log/cluster/dlm_controld\.log.*   --      	gen_context(system_u:object_r:dlm_controld_var_log_t,s0)
+/var/log/cluster/fenced\.log.*         --      	gen_context(system_u:object_r:fenced_var_log_t,s0)
+/var/log/cluster/gfs_controld\.log.*   --      	gen_context(system_u:object_r:gfs_controld_var_log_t,s0)
+/var/log/cluster/qdiskd\.log.*         --      	gen_context(system_u:object_r:qdiskd_var_log_t,s0)
+
+/var/run/cluster/fenced_override		--      	gen_context(system_u:object_r:fenced_var_run_t,s0)
+/var/run/cluster/fence_scsi.*			--       gen_context(system_u:object_r:fenced_var_run_t,s0)
+/var/run/dlm_controld\.pid             --      	gen_context(system_u:object_r:dlm_controld_var_run_t,s0)
+/var/run/fenced\.pid                   --      	gen_context(system_u:object_r:fenced_var_run_t,s0)
+/var/run/gfs_controld\.pid             --      	gen_context(system_u:object_r:gfs_controld_var_run_t,s0)
+/var/run/groupd\.pid                   --      	gen_context(system_u:object_r:groupd_var_run_t,s0)
+/var/run/qdiskd\.pid                   --      	gen_context(system_u:object_r:qdiskd_var_run_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rhcs.if serefpolicy-3.7.19/policy/modules/services/rhcs.if
--- nsaserefpolicy/policy/modules/services/rhcs.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rhcs.if	2011-08-31 13:16:08.875160002 +0000
@@ -0,0 +1,515 @@
+## <summary>RHCS - Red Hat Cluster Suite</summary>
+
+#######################################
+## <summary>
+##	Creates types and rules for a basic
+##	rhcs init daemon domain.
+## </summary>
+## <param name="prefix">
+##	<summary>
+##	Prefix for the domain.
+##	</summary>
+## </param>
+#
+template(`rhcs_domain_template',`
+	gen_require(`
+		attribute cluster_domain;
+		attribute cluster_tmpfs;
+		attribute cluster_pid;
+	')
+
+	##############################
+	#
+	# Declarations
+	#
+
+	type $1_t, cluster_domain;
+	type $1_exec_t;
+	init_daemon_domain($1_t, $1_exec_t)
+
+	type $1_tmpfs_t, cluster_tmpfs;
+	files_tmpfs_file($1_tmpfs_t)
+
+	type $1_var_log_t;
+	logging_log_file($1_var_log_t)
+
+	type $1_var_run_t, cluster_pid;
+	files_pid_file($1_var_run_t)
+
+	##############################
+	#
+	# Local policy
+	#
+
+	manage_dirs_pattern($1_t, $1_tmpfs_t, $1_tmpfs_t)
+	manage_files_pattern($1_t, $1_tmpfs_t, $1_tmpfs_t)
+	fs_tmpfs_filetrans($1_t, $1_tmpfs_t, { dir file })
+
+	manage_files_pattern($1_t, $1_var_log_t, $1_var_log_t)
+	manage_sock_files_pattern($1_t, $1_var_log_t, $1_var_log_t)
+	logging_log_filetrans($1_t, $1_var_log_t, { file sock_file })
+
+	manage_files_pattern($1_t, $1_var_run_t, $1_var_run_t)
+	manage_fifo_files_pattern($1_t, $1_var_run_t, $1_var_run_t)
+	manage_sock_files_pattern($1_t, $1_var_run_t, $1_var_run_t)
+	files_pid_filetrans($1_t, $1_var_run_t, { file fifo_file })
+
+')
+
+######################################
+## <summary>
+##	Execute a domain transition to run dlm_controld.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`rhcs_domtrans_dlm_controld',`
+	gen_require(`
+	type dlm_controld_t, dlm_controld_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, dlm_controld_exec_t, dlm_controld_t)
+')
+
+#####################################
+## <summary>
+##	Connect to dlm_controld over a unix domain
+##	stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_stream_connect_dlm_controld',`
+	gen_require(`
+		type dlm_controld_t, dlm_controld_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, dlm_controld_var_run_t, dlm_controld_var_run_t, dlm_controld_t)
+')
+
+#####################################
+## <summary>
+##	Allow read and write access to dlm_controld semaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_rw_dlm_controld_semaphores',`
+	gen_require(`
+		type dlm_controld_t, dlm_controld_tmpfs_t;
+	')
+
+	allow $1 dlm_controld_t:sem { rw_sem_perms destroy };
+
+	fs_search_tmpfs($1)
+	manage_files_pattern($1, dlm_controld_tmpfs_t, dlm_controld_tmpfs_t)
+')
+
+######################################
+## <summary>
+##	Execute a domain transition to run fenced.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_domtrans_fenced',`
+	gen_require(`
+		type fenced_t, fenced_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, fenced_exec_t, fenced_t)
+')
+
+####################################
+## <summary>
+##  Allow a domain to getattr on fenced executable.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`rhcs_getattr_fenced',`
+    gen_require(`
+        type fenced_t, fenced_exec_t;
+    ')
+
+    allow $1 fenced_exec_t:file getattr;
+')
+
+######################################
+## <summary>
+##	Allow read and write access to fenced semaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_rw_fenced_semaphores',`
+	gen_require(`
+		type fenced_t, fenced_tmpfs_t;
+	')
+
+	allow $1 fenced_t:sem { rw_sem_perms destroy };
+
+	fs_search_tmpfs($1)
+	manage_files_pattern($1, fenced_tmpfs_t, fenced_tmpfs_t)
+')
+
+######################################
+## <summary>
+##	Connect to fenced over an unix domain stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_stream_connect_fenced',`
+	gen_require(`
+		type fenced_var_run_t, fenced_t;
+	')
+
+	allow $1 fenced_t:unix_stream_socket connectto;
+	allow $1 fenced_var_run_t:sock_file { getattr write };
+	files_search_pids($1)
+')
+
+#####################################
+## <summary>
+##	Execute a domain transition to run gfs_controld.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_domtrans_gfs_controld',`
+	gen_require(`
+	type gfs_controld_t, gfs_controld_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, gfs_controld_exec_t, gfs_controld_t)
+')
+
+####################################
+## <summary>
+##	Allow read and write access to gfs_controld semaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_rw_gfs_controld_semaphores',`
+	gen_require(`
+		type gfs_controld_t, gfs_controld_tmpfs_t;
+	')
+
+	allow $1 gfs_controld_t:sem { rw_sem_perms destroy };
+
+	fs_search_tmpfs($1)
+	manage_files_pattern($1, gfs_controld_tmpfs_t, gfs_controld_tmpfs_t)
+')
+
+########################################
+## <summary>
+##	Read and write to gfs_controld_t shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_rw_gfs_controld_shm',`
+	gen_require(`
+		type gfs_controld_t, gfs_controld_tmpfs_t;
+	')
+
+	allow $1 gfs_controld_t:shm { rw_shm_perms destroy };
+
+	fs_search_tmpfs($1)
+	manage_files_pattern($1, gfs_controld_tmpfs_t, gfs_controld_tmpfs_t)
+')
+
+#####################################
+## <summary>
+##	Connect to gfs_controld_t over an unix domain stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_stream_connect_gfs_controld',`
+	gen_require(`
+		type gfs_controld_t, gfs_controld_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, gfs_controld_var_run_t, gfs_controld_var_run_t, gfs_controld_t)
+')
+
+######################################
+## <summary>
+##	Execute a domain transition to run groupd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`rhcs_domtrans_groupd',`
+	gen_require(`
+		type groupd_t, groupd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, groupd_exec_t, groupd_t)
+')
+
+#####################################
+## <summary>
+##	Connect to groupd over a unix domain
+##	stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_stream_connect_groupd',`
+	gen_require(`
+		type groupd_t, groupd_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, groupd_var_run_t, groupd_var_run_t, groupd_t)
+')
+
+#####################################
+## <summary>
+##	Allow read and write access to groupd semaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_rw_groupd_semaphores',`
+	gen_require(`
+		type groupd_t, groupd_tmpfs_t;
+	')
+
+	allow $1 groupd_t:sem { rw_sem_perms destroy };
+
+	fs_search_tmpfs($1)
+	manage_files_pattern($1, groupd_tmpfs_t, groupd_tmpfs_t)
+')
+
+########################################
+## <summary>
+##	Read and write to group shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_rw_groupd_shm',`
+	gen_require(`
+		type groupd_t, groupd_tmpfs_t;
+	')
+
+	allow $1 groupd_t:shm { rw_shm_perms destroy };
+
+	fs_search_tmpfs($1)
+	manage_files_pattern($1, groupd_tmpfs_t, groupd_tmpfs_t)
+')
+
+########################################
+## <summary>
+##	Read and write to cluster domains shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_rw_cluster_shm',`
+	gen_require(`
+		attribute cluster_domain;
+		attribute cluster_tmpfs;
+	')
+
+	allow $1 cluster_domain:shm { rw_shm_perms destroy };
+
+	fs_search_tmpfs($1)
+	manage_files_pattern($1, cluster_tmpfs, cluster_tmpfs)
+	manage_lnk_files_pattern($1, cluster_tmpfs, cluster_tmpfs)
+')
+
+
+
+####################################
+## <summary>
+##      Read and write access to cluster domains semaphores.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`rhcs_rw_cluster_semaphores',`
+        gen_require(`
+                attribute cluster_domain;
+        ')
+
+        allow $1 cluster_domain:sem { rw_sem_perms destroy };
+')
+
+#####################################
+## <summary>
+##	Connect to cluster domains over a unix domain
+##	stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_stream_connect_cluster',`
+	gen_require(`
+		attribute cluster_domain;
+		attribute cluster_pid;
+	')
+
+    files_search_pids($1)
+    stream_connect_pattern($1, cluster_pid, cluster_pid, cluster_domain)
+')
+
+######################################
+## <summary>
+##	Execute a domain transition to run qdiskd.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_domtrans_qdiskd',`
+	gen_require(`
+		type qdiskd_t, qdiskd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, qdiskd_exec_t, qdiskd_t)
+')
+
+########################################
+## <summary>
+##	Allow domain to read qdiskd tmpfs files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_read_qdiskd_tmpfs_files',`
+	gen_require(`
+		type qdiskd_tmpfs_t;
+	')
+
+	allow $1 qdiskd_tmpfs_t:file read_file_perms;
+')
+
+#######################################
+## <summary>
+##      Allow domain to read cluster lib files
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`rhcs_read_cluster_lib_files',`
+    gen_require(`
+        type cluster_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    read_files_pattern($1, cluster_var_lib_t, cluster_var_lib_t)
+')
+
+####################################
+## <summary>
+##  Allow domain to manage cluster lib files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rhcs_manage_cluster_lib_files',`
+    gen_require(`
+        type cluster_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    manage_files_pattern($1, cluster_var_lib_t, cluster_var_lib_t)
+')
+
+###################################
+## <summary>
+##  Allow domain to relabel cluster lib files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rhcs_relabel_cluster_lib_files',`
+    gen_require(`
+        type cluster_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    relabelto_files_pattern($1, cluster_var_lib_t, cluster_var_lib_t)
+    relabelfrom_files_pattern($1, cluster_var_lib_t, cluster_var_lib_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rhcs.te serefpolicy-3.7.19/policy/modules/services/rhcs.te
--- nsaserefpolicy/policy/modules/services/rhcs.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rhcs.te	2012-05-23 12:17:43.271509039 +0000
@@ -0,0 +1,329 @@
+
+policy_module(rhcs,1.1.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+## <p>
+## Allow fenced domain to connect to the network using TCP.
+## </p>
+## </desc>
+gen_tunable(fenced_can_network_connect, false)
+
+## <desc>
+##  <p>
+##  Allow fenced domain to execute ssh.
+##  </p>
+## </desc>
+gen_tunable(fenced_can_ssh, false)
+
+attribute cluster_domain;
+attribute cluster_tmpfs;
+attribute cluster_pid;
+
+rhcs_domain_template(dlm_controld)
+
+rhcs_domain_template(fenced)
+
+# tmp files
+type fenced_tmp_t;
+files_tmp_file(fenced_tmp_t)
+
+type fenced_lock_t;
+files_lock_file(fenced_lock_t)
+
+rhcs_domain_template(foghorn)
+
+rhcs_domain_template(gfs_controld)
+
+rhcs_domain_template(groupd)
+
+rhcs_domain_template(qdiskd)
+
+# var/lib files
+type qdiskd_var_lib_t;
+files_type(qdiskd_var_lib_t)
+
+# type for generic cluster lib files
+type cluster_var_lib_t;
+files_type(cluster_var_lib_t)
+
+#####################################
+#
+# dlm_controld local policy
+#
+
+allow dlm_controld_t self:capability { net_admin sys_admin sys_resource };
+
+allow dlm_controld_t self:netlink_kobject_uevent_socket create_socket_perms;
+
+stream_connect_pattern(dlm_controld_t, fenced_var_run_t, fenced_var_run_t, fenced_t)
+stream_connect_pattern(dlm_controld_t, groupd_var_run_t, groupd_var_run_t, groupd_t)
+
+kernel_read_system_state(dlm_controld_t)
+kernel_rw_net_sysctls(dlm_controld_t)
+
+dev_rw_dlm_control(dlm_controld_t)
+dev_rw_sysfs(dlm_controld_t)
+
+fs_manage_configfs_files(dlm_controld_t)
+fs_manage_configfs_dirs(dlm_controld_t)
+
+init_rw_script_tmp_files(dlm_controld_t)
+
+#######################################
+#
+# fenced local policy
+#
+
+allow fenced_t self:capability { sys_rawio sys_resource };
+allow fenced_t self:process { getsched signal_perms };
+
+allow fenced_t self:tcp_socket create_stream_socket_perms;
+allow fenced_t self:udp_socket create_socket_perms;
+allow fenced_t self:unix_stream_socket connectto;
+
+can_exec(fenced_t,fenced_exec_t)
+
+# tmp files
+manage_dirs_pattern(fenced_t, fenced_tmp_t, fenced_tmp_t)
+manage_files_pattern(fenced_t, fenced_tmp_t, fenced_tmp_t)
+manage_fifo_files_pattern(fenced_t, fenced_tmp_t, fenced_tmp_t)
+files_tmp_filetrans(fenced_t, fenced_tmp_t, { file fifo_file dir })
+
+manage_files_pattern(fenced_t, fenced_lock_t, fenced_lock_t)
+files_lock_filetrans(fenced_t,fenced_lock_t,file)
+
+stream_connect_pattern(fenced_t, groupd_var_run_t, groupd_var_run_t, groupd_t)
+
+kernel_read_system_state(fenced_t)
+
+corecmd_exec_bin(fenced_t)
+corecmd_exec_shell(fenced_t)
+
+corenet_udp_bind_ionixnetmon_port(fenced_t)
+corenet_tcp_bind_zented_port(fenced_t)
+corenet_tcp_connect_http_port(fenced_t)
+
+dev_read_sysfs(fenced_t)
+dev_read_urand(fenced_t)
+
+files_read_usr_files(fenced_t)
+files_read_usr_symlinks(fenced_t)
+
+storage_raw_read_fixed_disk(fenced_t)
+storage_raw_write_fixed_disk(fenced_t)
+storage_raw_read_removable_device(fenced_t)
+
+term_getattr_pty_fs(fenced_t)
+term_use_ptmx(fenced_t)
+term_use_generic_ptys(fenced_t)
+
+auth_use_nsswitch(fenced_t)
+
+files_read_usr_symlinks(fenced_t)
+
+tunable_policy(`fenced_can_network_connect',`
+	corenet_tcp_connect_all_ports(fenced_t)
+')
+
+optional_policy(`
+    tunable_policy(`fenced_can_ssh',`
+
+        allow fenced_t self:capability { setuid setgid };
+
+        corenet_tcp_connect_ssh_port(fenced_t)
+
+        ssh_exec(fenced_t)
+        ssh_read_user_home_files(fenced_t)
+    ')
+')
+
+optional_policy(`
+	gnome_read_generic_data_home_files(fenced_t)
+')
+
+optional_policy(`
+	ccs_read_config(fenced_t)
+	ccs_stream_connect(cluster_domain)
+')
+
+# needed by fence_scsi
+optional_policy(`
+	corosync_exec(fenced_t)
+')
+
+optional_policy(`
+	lvm_domtrans(fenced_t)
+	lvm_read_config(fenced_t)
+')
+
+optional_policy(`
+    snmp_manage_var_lib_files(fenced_t)
+	snmp_manage_var_lib_dirs(fenced_t)
+')
+
+######################################
+#
+# foghorn local policy
+#
+
+allow foghorn_t self:process { signal };
+allow foghorn_t self:tcp_socket create_stream_socket_perms;
+allow foghorn_t self:udp_socket create_socket_perms;
+
+corenet_tcp_connect_agentx_port(foghorn_t)
+
+dev_read_urand(foghorn_t)
+
+files_read_etc_files(foghorn_t)
+files_read_usr_files(foghorn_t)
+
+optional_policy(`
+        dbus_connect_system_bus(foghorn_t)
+')
+
+optional_policy(`
+        snmp_read_snmp_var_lib_files(foghorn_t)
+		snmp_stream_connect(foghorn_t)
+')
+
+optional_policy(`
+    unconfined_domain(foghorn_t)
+')
+
+######################################
+#
+# gfs_controld local policy
+#
+
+allow gfs_controld_t self:capability { net_admin sys_resource };
+
+allow gfs_controld_t self:shm create_shm_perms;
+allow gfs_controld_t self:netlink_kobject_uevent_socket create_socket_perms;
+
+stream_connect_pattern(gfs_controld_t, dlm_controld_var_run_t, dlm_controld_var_run_t, dlm_controld_t)
+stream_connect_pattern(gfs_controld_t, fenced_var_run_t, fenced_var_run_t, fenced_t)
+stream_connect_pattern(gfs_controld_t, groupd_var_run_t, groupd_var_run_t, groupd_t)
+
+kernel_read_system_state(gfs_controld_t)
+
+storage_getattr_removable_dev(gfs_controld_t)
+
+dev_rw_dlm_control(gfs_controld_t)
+dev_setattr_dlm_control(gfs_controld_t)
+
+dev_rw_sysfs(gfs_controld_t)
+
+init_rw_script_tmp_files(gfs_controld_t)
+
+optional_policy(`
+	lvm_exec(gfs_controld_t)
+	dev_rw_lvm_control(gfs_controld_t)
+')
+
+#######################################
+#
+# groupd local policy
+#
+
+allow groupd_t self:capability { sys_nice sys_resource };
+allow groupd_t self:process setsched;
+
+allow groupd_t self:shm create_shm_perms;
+
+domtrans_pattern(groupd_t, fenced_exec_t, fenced_t)
+
+dev_list_sysfs(groupd_t)
+
+files_read_etc_files(groupd_t)
+
+init_rw_script_tmp_files(groupd_t)
+
+######################################
+#
+# qdiskd local policy
+#
+
+allow qdiskd_t self:capability { ipc_lock sys_boot };
+
+allow qdiskd_t self:tcp_socket create_stream_socket_perms;
+allow qdiskd_t self:udp_socket create_socket_perms;
+
+manage_files_pattern(qdiskd_t, qdiskd_var_lib_t,qdiskd_var_lib_t)
+manage_dirs_pattern(qdiskd_t, qdiskd_var_lib_t,qdiskd_var_lib_t)
+manage_sock_files_pattern(qdiskd_t, qdiskd_var_lib_t,qdiskd_var_lib_t)
+files_var_lib_filetrans(qdiskd_t,qdiskd_var_lib_t, { file dir sock_file })
+
+corecmd_getattr_bin_files(qdiskd_t)
+corecmd_exec_shell(qdiskd_t)
+
+kernel_read_system_state(qdiskd_t)
+kernel_read_software_raid_state(qdiskd_t)
+kernel_getattr_core_if(qdiskd_t)
+
+dev_read_sysfs(qdiskd_t)
+dev_list_all_dev_nodes(qdiskd_t)
+dev_getattr_all_blk_files(qdiskd_t)
+dev_getattr_all_chr_files(qdiskd_t)
+dev_manage_generic_blk_files(qdiskd_t)
+dev_manage_generic_chr_files(qdiskd_t)
+
+storage_raw_read_removable_device(qdiskd_t)
+storage_raw_write_removable_device(qdiskd_t)
+storage_raw_read_fixed_disk(qdiskd_t)
+storage_raw_write_fixed_disk(qdiskd_t)
+
+domain_dontaudit_getattr_all_pipes(qdiskd_t)
+domain_dontaudit_getattr_all_sockets(qdiskd_t)
+
+files_dontaudit_getattr_all_sockets(qdiskd_t)
+files_dontaudit_getattr_all_pipes(qdiskd_t)
+
+fs_list_hugetlbfs(qdiskd_t)
+
+auth_use_nsswitch(qdiskd_t)
+
+files_read_etc_files(qdiskd_t)
+
+optional_policy(`
+	netutils_domtrans_ping(qdiskd_t)
+')
+
+optional_policy(`
+	udev_read_db(qdiskd_t)
+')
+
+#####################################
+#
+# rhcs domains common policy
+#
+
+allow cluster_domain self:capability { sys_nice };
+allow cluster_domain self:process setsched;
+
+allow cluster_domain self:sem create_sem_perms;
+allow cluster_domain self:fifo_file rw_fifo_file_perms;
+allow cluster_domain self:unix_stream_socket create_stream_socket_perms;
+allow cluster_domain self:unix_dgram_socket create_socket_perms;
+
+manage_files_pattern(cluster_domain, cluster_var_lib_t, cluster_var_lib_t)
+manage_dirs_pattern(cluster_domain, cluster_var_lib_t, cluster_var_lib_t)
+
+libs_use_ld_so(cluster_domain)
+libs_use_shared_libs(cluster_domain)
+
+logging_send_syslog_msg(cluster_domain)
+
+miscfiles_read_localization(cluster_domain)
+
+optional_policy(`
+	corosync_stream_connect(cluster_domain)
+')
+
+optional_policy(`
+	dbus_system_bus_client(cluster_domain)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rhev.fc serefpolicy-3.7.19/policy/modules/services/rhev.fc
--- nsaserefpolicy/policy/modules/services/rhev.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rhev.fc	2011-06-20 15:10:03.712029999 +0000
@@ -0,0 +1,6 @@
+/usr/share/rhev-agent/rhev-agentd\.py	--	gen_context(system_u:object_r:rhev_agentd_exec_t,s0)
+/usr/share/rhev-agent/LockActiveSession\.py	--	gen_context(system_u:object_r:rhev_agentd_exec_t,s0)
+
+/var/run/rhev-agentd\.pid		--	gen_context(system_u:object_r:rhev_agentd_var_run_t,s0)
+
+/var/log/rhev-agent(/.*)?			gen_context(system_u:object_r:rhev_agentd_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rhev.if serefpolicy-3.7.19/policy/modules/services/rhev.if
--- nsaserefpolicy/policy/modules/services/rhev.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rhev.if	2011-06-29 13:23:29.091029999 +0000
@@ -0,0 +1,76 @@
+## <summary>rhev polic module contains policies for rhev apps</summary>
+
+#####################################
+## <summary>
+##  Execute rhev-agentd in the rhev_agentd domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rhev_domtrans_agentd',`
+    gen_require(`
+        type rhev_agentd_t, rhev_agentd_exec_t;
+    ')
+
+    domtrans_pattern($1, rhev_agentd_exec_t, rhev_agentd_t)
+')
+
+####################################
+## <summary>
+##  Read rhev-agentd PID files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rhev_read_pid_files_agentd',`
+    gen_require(`
+        type rhev_agentd_var_run_t;
+    ')
+
+	files_search_pids($1)
+    read_files_pattern($1, rhev_agentd_var_run_t, rhev_agentd_var_run_t)
+')
+
+#####################################
+## <summary>
+##      Connect to rhev_agentd over a unix domain
+##      stream socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`rhev_stream_connect_agentd',`
+        gen_require(`
+                type rhev_agentd_var_run_t, rhev_agentd_t;
+        ')
+
+        files_search_pids($1)
+        stream_connect_pattern($1, rhev_agentd_var_run_t, rhev_agentd_var_run_t, rhev_agentd_t)
+')
+
+#######################################
+## <summary>
+##  Send sigchld to rhev-agentd
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+#
+interface(`rhev_sigchld_agentd',`
+    gen_require(`
+              type rhev_agentd_t;
+    ')
+
+    allow $1 rhev_agentd_t:process sigchld;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rhev.te serefpolicy-3.7.19/policy/modules/services/rhev.te
--- nsaserefpolicy/policy/modules/services/rhev.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rhev.te	2011-12-05 11:25:27.127553296 +0000
@@ -0,0 +1,114 @@
+policy_module(rhev,1.0)
+
+########################################
+#
+# Declarations
+#
+
+type rhev_agentd_t;
+type rhev_agentd_exec_t;
+init_daemon_domain(rhev_agentd_t, rhev_agentd_exec_t)
+
+type rhev_agentd_var_run_t;
+files_pid_file(rhev_agentd_var_run_t)
+
+# WHY IS USED /TMP DIRECTORY
+type rhev_agentd_tmp_t;
+files_tmp_file(rhev_agentd_tmp_t)
+
+type rhev_agentd_log_t;
+logging_log_file(rhev_agentd_log_t)
+
+########################################
+#
+# rhev_agentd_t local policy
+#
+
+allow rhev_agentd_t self:capability sys_nice;
+allow rhev_agentd_t self:process setsched;
+
+allow rhev_agentd_t self:fifo_file rw_fifo_file_perms;
+allow rhev_agentd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(rhev_agentd_t, rhev_agentd_var_run_t, rhev_agentd_var_run_t)
+manage_files_pattern(rhev_agentd_t, rhev_agentd_var_run_t, rhev_agentd_var_run_t)
+manage_sock_files_pattern(rhev_agentd_t, rhev_agentd_var_run_t, rhev_agentd_var_run_t)
+files_pid_filetrans(rhev_agentd_t, rhev_agentd_var_run_t, { dir file sock_file })
+
+manage_files_pattern(rhev_agentd_t, rhev_agentd_log_t, rhev_agentd_log_t)
+
+manage_dirs_pattern(rhev_agentd_t, rhev_agentd_tmp_t, rhev_agentd_tmp_t)
+manage_files_pattern(rhev_agentd_t, rhev_agentd_tmp_t, rhev_agentd_tmp_t)
+files_tmp_filetrans(rhev_agentd_t, rhev_agentd_tmp_t, { file dir })
+can_exec(rhev_agentd_t, rhev_agentd_tmp_t)
+
+kernel_read_system_state(rhev_agentd_t)
+kernel_read_kernel_sysctls(rhev_agentd_t)
+kernel_read_network_state(rhev_agentd_t)
+
+corecmd_exec_bin(rhev_agentd_t)
+corecmd_exec_shell(rhev_agentd_t)
+
+dev_read_urand(rhev_agentd_t)
+
+term_use_virtio_console(rhev_agentd_t)
+
+fs_getattr_all_fs(rhev_agentd_t)
+
+files_getattr_all_mountpoints(rhev_agentd_t)
+files_read_usr_files(rhev_agentd_t)
+
+auth_use_nsswitch(rhev_agentd_t)
+
+init_read_utmp(rhev_agentd_t)
+
+libs_exec_ldconfig(rhev_agentd_t)
+logging_send_syslog_msg(rhev_agentd_t)
+
+miscfiles_read_localization(rhev_agentd_t)
+
+optional_policy(`
+	rpm_read_db(rhev_agentd_t)
+	rpm_dontaudit_manage_db(rhev_agentd_t)
+')
+
+optional_policy(`
+	ssh_signull(rhev_agentd_t)
+')
+
+optional_policy(`
+    dbus_system_bus_client(rhev_agentd_t)
+    dbus_connect_system_bus(rhev_agentd_t)
+')
+
+optional_policy(`
+   xserver_dbus_chat_xdm(rhev_agentd_t)
+')
+
+#######################################
+#
+# rhev_agentd_t consolehelper local policy
+#
+
+optional_policy(`
+
+	userhelper_console_role_template(rhev_agentd, system_r, rhev_agentd_t)
+
+	allow rhev_agentd_consolehelper_t rhev_agentd_log_t:file append;
+	allow rhev_agentd_consolehelper_t rhev_agentd_tmp_t:file { read write };
+
+	can_exec(rhev_agentd_consolehelper_t, rhev_agentd_exec_t)
+	
+	kernel_read_system_state(rhev_agentd_consolehelper_t)
+
+	term_use_virtio_console(rhev_agentd_consolehelper_t)
+
+	optional_policy(`
+		dbus_session_bus_client(rhev_agentd_consolehelper_t)
+	')
+
+	optional_policy(`
+		unconfined_dbus_chat(rhev_agentd_consolehelper_t)
+		unconfined_dbus_stream_connect(rhev_agentd_consolehelper_t)
+	')
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rhsmcertd.fc serefpolicy-3.7.19/policy/modules/services/rhsmcertd.fc
--- nsaserefpolicy/policy/modules/services/rhsmcertd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rhsmcertd.fc	2012-07-17 14:18:00.748285799 +0000
@@ -0,0 +1,14 @@
+
+/etc/rc\.d/init\.d/rhsmcertd	--	gen_context(system_u:object_r:rhsmcertd_initrc_exec_t,s0)
+
+/usr/bin/rhsmcertd		--	gen_context(system_u:object_r:rhsmcertd_exec_t,s0)
+/usr/sbin/rhnsd                        --      gen_context(system_u:object_r:rhsmcertd_exec_t,s0)
+
+/var/lib/rhsm(/.*)?		gen_context(system_u:object_r:rhsmcertd_var_lib_t,s0)
+
+/var/log/rhsm(/.*)?		gen_context(system_u:object_r:rhsmcertd_log_t,s0)
+
+/var/lock/subsys/rhsmcertd	--	gen_context(system_u:object_r:rhsmcertd_lock_t,s0)
+
+/var/run/rhsm(/.*)?		gen_context(system_u:object_r:rhsmcertd_var_run_t,s0)
+/var/run/rhnsd\.pid            --      gen_context(system_u:object_r:rhsmcertd_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rhsmcertd.if serefpolicy-3.7.19/policy/modules/services/rhsmcertd.if
--- nsaserefpolicy/policy/modules/services/rhsmcertd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rhsmcertd.if	2011-06-30 16:56:40.975029999 +0000
@@ -0,0 +1,305 @@
+
+## <summary>Subscription Management Certificate Daemon policy</summary>
+
+########################################
+## <summary>
+##	Transition to rhsmcertd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`rhsmcertd_domtrans',`
+	gen_require(`
+		type rhsmcertd_t, rhsmcertd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, rhsmcertd_exec_t, rhsmcertd_t)
+')
+
+
+########################################
+## <summary>
+##	Execute rhsmcertd server in the rhsmcertd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhsmcertd_initrc_domtrans',`
+	gen_require(`
+		type rhsmcertd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, rhsmcertd_initrc_exec_t)
+')
+
+
+########################################
+## <summary>
+##	Read rhsmcertd's log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`rhsmcertd_read_log',`
+	gen_require(`
+		type rhsmcertd_log_t;
+	')
+
+	logging_search_logs($1)
+	read_files_pattern($1, rhsmcertd_log_t, rhsmcertd_log_t)
+')
+
+########################################
+## <summary>
+##	Append to rhsmcertd log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhsmcertd_append_log',`
+	gen_require(`
+		type rhsmcertd_log_t;
+	')
+
+	logging_search_logs($1)
+	append_files_pattern($1, rhsmcertd_log_t, rhsmcertd_log_t)
+')
+
+########################################
+## <summary>
+##	Manage rhsmcertd log files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhsmcertd_manage_log',`
+	gen_require(`
+		type rhsmcertd_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_dirs_pattern($1, rhsmcertd_log_t, rhsmcertd_log_t)
+	manage_files_pattern($1, rhsmcertd_log_t, rhsmcertd_log_t)
+	manage_lnk_files_pattern($1, rhsmcertd_log_t, rhsmcertd_log_t)
+')
+
+########################################
+## <summary>
+##	Search rhsmcertd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhsmcertd_search_lib',`
+	gen_require(`
+		type rhsmcertd_var_lib_t;
+	')
+
+	allow $1 rhsmcertd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read rhsmcertd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhsmcertd_read_lib_files',`
+	gen_require(`
+		type rhsmcertd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, rhsmcertd_var_lib_t, rhsmcertd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage rhsmcertd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhsmcertd_manage_lib_files',`
+	gen_require(`
+		type rhsmcertd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, rhsmcertd_var_lib_t, rhsmcertd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage rhsmcertd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhsmcertd_manage_lib_dirs',`
+	gen_require(`
+		type rhsmcertd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, rhsmcertd_var_lib_t, rhsmcertd_var_lib_t)
+')
+
+
+########################################
+## <summary>
+##	Read rhsmcertd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhsmcertd_read_pid_files',`
+	gen_require(`
+		type rhsmcertd_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 rhsmcertd_var_run_t:file read_file_perms;
+')
+
+####################################
+## <summary>
+##  Connect to rhsmcertd over a unix domain
+##  stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rhsmcertd_stream_connect',`
+	gen_require(`
+		type rhsmcertd_t, rhsmcertd_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, rhsmcertd_var_run_t, rhsmcertd_var_run_t, rhsmcertd_t)
+')
+
+#######################################
+## <summary>
+##  Send and receive messages from
+##  rhsmcertd over dbus.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rhsmcertd_dbus_chat',`
+	gen_require(`
+		type rhsmcertd_t;
+		class dbus send_msg;
+	')
+
+	allow $1 rhsmcertd_t:dbus send_msg;
+	allow rhsmcertd_t $1:dbus send_msg;
+')
+
+######################################
+## <summary>
+##  Dontaudit Send and receive messages from
+##  rhsmcertd over dbus.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`rhsmcertd_dontaudit_dbus_chat',`
+    gen_require(`
+        type rhsmcertd_t;
+        class dbus send_msg;
+    ')
+
+    dontaudit $1 rhsmcertd_t:dbus send_msg;
+    dontaudit rhsmcertd_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an rhsmcertd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`rhsmcertd_admin',`
+	gen_require(`
+		type rhsmcertd_t;
+	type rhsmcertd_initrc_exec_t;
+	type rhsmcertd_log_t;
+	type rhsmcertd_var_lib_t;
+	type rhsmcertd_var_run_t;
+	')
+
+	allow $1 rhsmcertd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, rhsmcertd_t)
+
+	rhsmcertd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 rhsmcertd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, rhsmcertd_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, rhsmcertd_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, rhsmcertd_var_run_t)
+
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rhsmcertd.te serefpolicy-3.7.19/policy/modules/services/rhsmcertd.te
--- nsaserefpolicy/policy/modules/services/rhsmcertd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rhsmcertd.te	2011-08-30 14:18:13.882160002 +0000
@@ -0,0 +1,68 @@
+policy_module(rhsmcertd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type rhsmcertd_t;
+type rhsmcertd_exec_t;
+init_daemon_domain(rhsmcertd_t, rhsmcertd_exec_t)
+
+type rhsmcertd_initrc_exec_t;
+init_script_file(rhsmcertd_initrc_exec_t)
+
+type rhsmcertd_log_t;
+logging_log_file(rhsmcertd_log_t)
+
+type rhsmcertd_lock_t;
+files_lock_file(rhsmcertd_lock_t)
+
+type rhsmcertd_var_lib_t;
+files_type(rhsmcertd_var_lib_t)
+
+type rhsmcertd_var_run_t;
+files_pid_file(rhsmcertd_var_run_t)
+
+########################################
+#
+# rhsmcertd local policy
+#
+
+allow rhsmcertd_t self:capability sys_nice;
+allow rhsmcertd_t self:process { signal signull getsched setsched };
+
+allow rhsmcertd_t self:fifo_file rw_fifo_file_perms;
+allow rhsmcertd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(rhsmcertd_t, rhsmcertd_log_t, rhsmcertd_log_t)
+manage_files_pattern(rhsmcertd_t, rhsmcertd_log_t, rhsmcertd_log_t)
+
+manage_files_pattern(rhsmcertd_t, rhsmcertd_lock_t, rhsmcertd_lock_t)
+files_lock_filetrans(rhsmcertd_t, rhsmcertd_lock_t, file)
+
+manage_dirs_pattern(rhsmcertd_t, rhsmcertd_var_lib_t, rhsmcertd_var_lib_t)
+manage_files_pattern(rhsmcertd_t, rhsmcertd_var_lib_t, rhsmcertd_var_lib_t)
+
+manage_dirs_pattern(rhsmcertd_t, rhsmcertd_var_run_t, rhsmcertd_var_run_t)
+manage_files_pattern(rhsmcertd_t, rhsmcertd_var_run_t, rhsmcertd_var_run_t)
+
+kernel_read_system_state(rhsmcertd_t)
+
+corecmd_exec_bin(rhsmcertd_t)
+
+dev_read_urand(rhsmcertd_t)
+
+files_read_etc_files(rhsmcertd_t)
+files_read_usr_files(rhsmcertd_t)
+
+miscfiles_read_localization(rhsmcertd_t)
+miscfiles_read_certs(rhsmcertd_t)
+
+optional_policy(`
+    sysnet_dns_name_resolve(rhsmcertd_t)
+')
+
+optional_policy(`
+	unconfined_domain(rhsmcertd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ricci.fc serefpolicy-3.7.19/policy/modules/services/ricci.fc
--- nsaserefpolicy/policy/modules/services/ricci.fc	2011-03-17 07:21:22.406851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ricci.fc	2011-03-17 07:21:05.157851001 +0000
@@ -1,3 +1,6 @@
+
+/etc/rc\.d/init\.d/ricci    --  gen_context(system_u:object_r:ricci_initrc_exec_t,s0)
+
 /usr/libexec/modcluster		--	gen_context(system_u:object_r:ricci_modcluster_exec_t,s0)
 /usr/libexec/ricci-modlog	--	gen_context(system_u:object_r:ricci_modlog_exec_t,s0)
 /usr/libexec/ricci-modrpm	--	gen_context(system_u:object_r:ricci_modrpm_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ricci.if serefpolicy-3.7.19/policy/modules/services/ricci.if
--- nsaserefpolicy/policy/modules/services/ricci.if	2011-03-17 07:21:22.359851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ricci.if	2011-08-10 18:09:18.134523004 +0000
@@ -18,6 +18,24 @@
 	domtrans_pattern($1, ricci_exec_t, ricci_t)
 ')
 
+#######################################
+## <summary>
+##  Execute ricci server in the ricci domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`ricci_initrc_domtrans', `
+    gen_require(`
+        type ricci_initrc_exec_t;
+    ')
+
+    init_labeled_script_domtrans($1, ricci_initrc_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute a domain transition to run ricci_modcluster.
@@ -90,10 +108,28 @@
 	')
 
 	files_search_pids($1)
-	allow $1 ricci_modcluster_var_run_t:sock_file write;
-	allow $1 ricci_modclusterd_t:unix_stream_socket connectto;
+	stream_connect_pattern($1, ricci_modcluster_var_run_t, ricci_modcluster_var_run_t, ricci_modclusterd_t)
 ')
 
+#######################################
+## <summary>
+## Read and write to ricci_modclusterd temporary file system.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`ricci_rw_modclusterd_tmpfs_files',`
+        gen_require(`
+				type ricci_modclusterd_tmpfs_t;
+        ')
+
+        allow $1 ricci_modclusterd_tmpfs_t:file rw_file_perms;
+        allow $1 ricci_modclusterd_tmpfs_t:file unlink;
+')    
+
 ########################################
 ## <summary>
 ##	Execute a domain transition to run ricci_modlog.
@@ -165,3 +201,87 @@
 
 	domtrans_pattern($1, ricci_modstorage_exec_t, ricci_modstorage_t)
 ')
+
+######################################
+## <summary>
+##      Allow the specified domain to read ricci's lib files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`ricci_read_lib_files',`
+    gen_require(`
+        type ricci_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+	list_dirs_pattern($1, ricci_var_lib_t, ricci_var_lib_t)
+    read_files_pattern($1, ricci_var_lib_t, ricci_var_lib_t)
+')
+
+#####################################
+## <summary>
+##      Allow the specified domain to manage ricci's lib files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`ricci_manage_lib_files',`
+    gen_require(`
+        type ricci_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+	manage_dirs_pattern($1, ricci_var_lib_t, ricci_var_lib_t)
+    manage_files_pattern($1, ricci_var_lib_t, ricci_var_lib_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an ricci environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`ricci_admin',`
+	gen_require(`
+		type ricci_t, ricci_initrc_exec_t, ricci_tmp_t;
+		type ricci_var_lib_t, ricci_var_log_t, ricci_var_run_t;
+	')
+
+	allow $1 ricci_t:process { ptrace signal_perms getattr };
+	read_files_pattern($1, ricci_t, ricci_t)
+
+	init_labeled_script_domtrans($1, ricci_initrc_exec_t)
+    domain_system_change_exemption($1)
+    role_transition $2 ricci_initrc_exec_t system_r;
+    allow $2 system_r;
+
+	files_search_tmp($1)
+	admin_pattern($1, ricci_tmp_t)
+	
+	files_search_var_lib($1)
+	admin_pattern($1, ricci_var_lib_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, ricci_var_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, ricci_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ricci.te serefpolicy-3.7.19/policy/modules/services/ricci.te
--- nsaserefpolicy/policy/modules/services/ricci.te	2011-03-17 07:21:21.857851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ricci.te	2011-10-05 07:10:39.246160003 +0000
@@ -11,6 +11,9 @@
 domain_type(ricci_t)
 init_daemon_domain(ricci_t, ricci_exec_t)
 
+type ricci_initrc_exec_t;
+init_script_file(ricci_initrc_exec_t)
+
 # tmp files
 type ricci_tmp_t;
 files_tmp_file(ricci_tmp_t)
@@ -50,6 +53,9 @@
 domain_type(ricci_modclusterd_t)
 init_daemon_domain(ricci_modclusterd_t, ricci_modclusterd_exec_t)
 
+type ricci_modclusterd_tmpfs_t;
+files_tmpfs_file(ricci_modclusterd_tmpfs_t)
+
 type ricci_modlog_t;
 type ricci_modlog_exec_t;
 domain_type(ricci_modlog_t)
@@ -117,6 +123,7 @@
 files_pid_filetrans(ricci_t, ricci_var_run_t, { file sock_file })
 
 kernel_read_kernel_sysctls(ricci_t)
+kernel_read_system_state(ricci_t)
 
 corecmd_exec_bin(ricci_t)
 
@@ -182,6 +189,10 @@
 ')
 
 optional_policy(`
+        shutdown_domtrans(ricci_t)
+')
+
+optional_policy(`
 	unconfined_use_fds(ricci_t)
 ')
 
@@ -194,12 +205,21 @@
 # ricci_modcluster local policy
 #
 
-allow ricci_modcluster_t self:capability sys_nice;
+manage_dirs_pattern(ricci_modclusterd_t, ricci_modclusterd_tmpfs_t, ricci_modclusterd_tmpfs_t)
+manage_files_pattern(ricci_modclusterd_t, ricci_modclusterd_tmpfs_t,ricci_modclusterd_tmpfs_t)
+fs_tmpfs_filetrans(ricci_modclusterd_t, ricci_modclusterd_tmpfs_t, { dir file })
+
+allow ricci_modcluster_t self:capability { net_bind_service sys_nice };
 allow ricci_modcluster_t self:process setsched;
 allow ricci_modcluster_t self:fifo_file rw_fifo_file_perms;
 
 kernel_read_kernel_sysctls(ricci_modcluster_t)
 kernel_read_system_state(ricci_modcluster_t)
+kernel_request_load_module(ricci_modclusterd_t)
+
+corenet_tcp_bind_cluster_port(ricci_modclusterd_t)
+corenet_tcp_bind_reserved_port(ricci_modclusterd_t)
+corenet_tcp_connect_generic_port(ricci_modclusterd_t)
 
 corecmd_exec_shell(ricci_modcluster_t)
 corecmd_exec_bin(ricci_modcluster_t)
@@ -227,6 +247,11 @@
 ricci_stream_connect_modclusterd(ricci_modcluster_t)
 
 optional_policy(`
+	aisexec_stream_connect(ricci_modcluster_t)
+	corosync_stream_connect(ricci_modcluster_t)
+')
+
+optional_policy(`
 	ccs_stream_connect(ricci_modcluster_t)
 	ccs_domtrans(ricci_modcluster_t)
 	ccs_manage_config(ricci_modcluster_t)
@@ -245,6 +270,10 @@
 ')
 
 optional_policy(`
+        rgmanager_stream_connect(ricci_modclusterd_t)
+')
+
+optional_policy(`
 	# XXX This has got to go.
 	unconfined_domain(ricci_modcluster_t)
 ')
@@ -259,11 +288,11 @@
 allow ricci_modclusterd_t self:fifo_file rw_fifo_file_perms;
 allow ricci_modclusterd_t self:unix_stream_socket create_stream_socket_perms;
 allow ricci_modclusterd_t self:tcp_socket create_stream_socket_perms;
-allow ricci_modclusterd_t self:netlink_route_socket r_netlink_socket_perms;
 # cjp: this needs to be fixed for a specific socket type:
 allow ricci_modclusterd_t self:socket create_socket_perms;
 
 allow ricci_modclusterd_t ricci_modcluster_t:unix_stream_socket connectto;
+allow ricci_modclusterd_t ricci_modcluster_t:fifo_file rw_file_perms;
 
 # log files
 allow ricci_modclusterd_t ricci_modcluster_var_log_t:dir setattr;
@@ -284,6 +313,7 @@
 corenet_tcp_sendrecv_generic_if(ricci_modclusterd_t)
 corenet_tcp_sendrecv_all_ports(ricci_modclusterd_t)
 corenet_tcp_bind_generic_node(ricci_modclusterd_t)
+corenet_tcp_bind_all_rpc_ports(ricci_modclusterd_t)
 corenet_tcp_bind_ricci_modcluster_port(ricci_modclusterd_t)
 corenet_tcp_connect_ricci_modcluster_port(ricci_modclusterd_t)
 
@@ -294,6 +324,8 @@
 
 fs_getattr_xattr_fs(ricci_modclusterd_t)
 
+auth_use_nsswitch(ricci_modclusterd_t)
+
 init_stream_connect_script(ricci_modclusterd_t)
 
 locallogin_dontaudit_use_fds(ricci_modclusterd_t)
@@ -303,7 +335,11 @@
 miscfiles_read_localization(ricci_modclusterd_t)
 
 sysnet_domtrans_ifconfig(ricci_modclusterd_t)
-sysnet_dns_name_resolve(ricci_modclusterd_t)
+
+optional_policy(`
+	aisexec_stream_connect(ricci_modclusterd_t)
+	corosync_stream_connect(ricci_modclusterd_t)
+')
 
 optional_policy(`
 	ccs_domtrans(ricci_modclusterd_t)
@@ -312,6 +348,10 @@
 ')
 
 optional_policy(`
+	rgmanager_stream_connect(ricci_modclusterd_t)
+')
+
+optional_policy(`
 	unconfined_use_fds(ricci_modclusterd_t)
 ')
 
@@ -394,6 +434,8 @@
 
 init_domtrans_script(ricci_modservice_t)
 
+logging_send_syslog_msg(ricci_modservice_t)
+
 miscfiles_read_localization(ricci_modservice_t)
 
 optional_policy(`
@@ -440,6 +482,12 @@
 files_read_usr_files(ricci_modstorage_t)
 files_read_kernel_modules(ricci_modstorage_t)
 
+files_create_default_dir(ricci_modstorage_t)
+files_root_filetrans_default(ricci_modstorage_t, dir)
+files_mounton_default(ricci_modstorage_t)
+files_manage_default_dirs(ricci_modstorage_t)
+files_manage_default_files(ricci_modstorage_t)
+
 storage_raw_read_fixed_disk(ricci_modstorage_t)
 
 term_dontaudit_use_console(ricci_modstorage_t)
@@ -457,6 +505,11 @@
 mount_domtrans(ricci_modstorage_t)
 
 optional_policy(`
+	aisexec_stream_connect(ricci_modstorage_t)
+	corosync_stream_connect(ricci_modstorage_t)
+')
+
+optional_policy(`
 	ccs_stream_connect(ricci_modstorage_t)
 	ccs_read_config(ricci_modstorage_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rlogin.fc serefpolicy-3.7.19/policy/modules/services/rlogin.fc
--- nsaserefpolicy/policy/modules/services/rlogin.fc	2011-03-17 07:21:21.083851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rlogin.fc	2011-03-17 07:21:03.558851002 +0000
@@ -1,4 +1,7 @@
 HOME_DIR/\.rlogin		--	gen_context(system_u:object_r:rlogind_home_t,s0)
+HOME_DIR/\.rhosts		--	gen_context(system_u:object_r:rlogind_home_t,s0)
+/root/\.rlogin			--	gen_context(system_u:object_r:rlogind_home_t,s0)
+/root/\.rhosts		--	gen_context(system_u:object_r:rlogind_home_t,s0)
 
 /usr/kerberos/sbin/klogind	--	gen_context(system_u:object_r:rlogind_exec_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rlogin.if serefpolicy-3.7.19/policy/modules/services/rlogin.if
--- nsaserefpolicy/policy/modules/services/rlogin.if	2011-03-17 07:21:21.957851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rlogin.if	2012-03-28 11:37:14.614006346 +0000
@@ -23,19 +23,13 @@
 ## <summary>
 ##	read rlogin homedir content (.config)
 ## </summary>
-## <param name="userdomain_prefix">
-##	<summary>
-##	The prefix of the user domain (e.g., user
-##	is the prefix for user_t).
-##	</summary>
-## </param>
-## <param name="user_domain">
-##	<summary>
-##	The type of the user domain.
-##	</summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
 ## </param>
 #
-template(`rlogin_read_home_content',`
+interface(`rlogin_read_home_content',`
 	gen_require(`
 		type rlogind_home_t;
 	')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rlogin.te serefpolicy-3.7.19/policy/modules/services/rlogin.te
--- nsaserefpolicy/policy/modules/services/rlogin.te	2011-03-17 07:21:22.365851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rlogin.te	2011-03-17 07:21:05.094851002 +0000
@@ -69,6 +69,7 @@
 fs_getattr_xattr_fs(rlogind_t)
 fs_search_auto_mountpoints(rlogind_t)
 
+auth_login_pgm_domain(rlogind_t)
 auth_domtrans_chk_passwd(rlogind_t)
 auth_rw_login_records(rlogind_t)
 auth_use_nsswitch(rlogind_t)
@@ -89,6 +90,7 @@
 userdom_setattr_user_ptys(rlogind_t)
 # cjp: this is egregious
 userdom_read_user_home_content_files(rlogind_t)
+userdom_search_admin_dir(rlogind_t)
 
 remotelogin_domtrans(rlogind_t)
 remotelogin_signal(rlogind_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rpcbind.fc serefpolicy-3.7.19/policy/modules/services/rpcbind.fc
--- nsaserefpolicy/policy/modules/services/rpcbind.fc	2011-03-17 07:21:22.141851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rpcbind.fc	2011-03-17 07:21:04.918851001 +0000
@@ -2,6 +2,7 @@
 
 /sbin/rpcbind		--	gen_context(system_u:object_r:rpcbind_exec_t,s0)
 
+/var/cache/rpcbind(/.*)?      gen_context(system_u:object_r:rpcbind_var_lib_t,s0)
 /var/lib/rpcbind(/.*)?		gen_context(system_u:object_r:rpcbind_var_lib_t,s0)
 
 /var/run/rpc.statd\.pid	--	gen_context(system_u:object_r:rpcbind_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rpcbind.if serefpolicy-3.7.19/policy/modules/services/rpcbind.if
--- nsaserefpolicy/policy/modules/services/rpcbind.if	2011-03-17 07:21:22.377851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rpcbind.if	2011-03-17 07:21:05.095851002 +0000
@@ -34,8 +34,7 @@
 	')
 
 	files_search_pids($1)
-	allow $1 rpcbind_var_run_t:sock_file write;
-	allow $1 rpcbind_t:unix_stream_socket connectto;
+	stream_connect_pattern($1, rpcbind_var_run_t, rpcbind_var_run_t, rpcbind_t)
 ')
 
 ########################################
@@ -141,8 +140,14 @@
 	allow $1 rpcbind_t:process { ptrace signal_perms };
 	ps_process_pattern($1, rpcbind_t)
 
-	init_labeled_script_domtrans($1, rbcbind_initrc_exec_t)
+	init_labeled_script_domtrans($1, rpcbind_initrc_exec_t)
 	domain_system_change_exemption($1)
 	role_transition $2 rpcbind_initrc_exec_t system_r;
 	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, rpcbind_var_lib_t)
+	
+	files_search_pids($1)
+	admin_pattern($1, rpcbind_var_run_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rpcbind.te serefpolicy-3.7.19/policy/modules/services/rpcbind.te
--- nsaserefpolicy/policy/modules/services/rpcbind.te	2011-03-17 07:21:21.782851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rpcbind.te	2011-03-17 07:21:04.330851002 +0000
@@ -44,6 +44,8 @@
 kernel_read_network_state(rpcbind_t)
 kernel_request_load_module(rpcbind_t)
 
+corecmd_exec_shell(rpcbind_t)
+
 corenet_all_recvfrom_unlabeled(rpcbind_t)
 corenet_all_recvfrom_netlabel(rpcbind_t)
 corenet_tcp_sendrecv_generic_if(rpcbind_t)
@@ -72,3 +74,7 @@
 ifdef(`hide_broken_symptoms',`
 	dontaudit rpcbind_t self:udp_socket listen;
 ')
+
+optional_policy(`
+	nis_use_ypbind(rpcbind_t)
+') 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rpc.if serefpolicy-3.7.19/policy/modules/services/rpc.if
--- nsaserefpolicy/policy/modules/services/rpc.if	2011-03-17 07:21:21.429851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rpc.if	2011-03-17 07:21:03.894851002 +0000
@@ -246,6 +246,32 @@
 	allow rpcd_t $1:process signal;
 ')
 
+########################################
+## <summary>
+##	Execute rpcd in the rcpd domain, and
+##	allow the specified role the rpcd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`rpc_run_rpcd',`
+	gen_require(`
+		type rpcd_t;
+	')
+
+	rpc_domtrans_rpcd($1)
+	role $2 types rpcd_t;
+')
+
 #######################################
 ## <summary>
 ##	Execute domain in rpcd domain.
@@ -414,4 +440,5 @@
 
 	files_search_var_lib($1)
 	manage_files_pattern($1, var_lib_nfs_t, var_lib_nfs_t)
+	allow $1 var_lib_nfs_t:file relabel_file_perms;
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rpc.te serefpolicy-3.7.19/policy/modules/services/rpc.te
--- nsaserefpolicy/policy/modules/services/rpc.te	2011-03-17 07:21:22.038851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rpc.te	2012-05-14 23:51:49.457167687 +0000
@@ -13,15 +13,6 @@
 ## </desc>
 gen_tunable(allow_gssd_read_tmp, true)
 
-## <desc>
-## <p>
-## Allow nfs servers to modify public files
-## used for public file transfer services.  Files/Directories must be
-## labeled public_content_rw_t.
-## </p>
-## </desc>
-gen_tunable(allow_nfsd_anon_write, false)
-
 type exports_t;
 files_config_file(exports_t)
 
@@ -80,14 +71,19 @@
 
 corecmd_exec_bin(rpcd_t)
 
+files_read_default_files(rpcd_t)
 files_manage_mounttab(rpcd_t)
 files_getattr_all_dirs(rpcd_t)
+files_list_all_mountpoints(rpcd_t)
+files_read_usr_files(rpcd_t)
 
 fs_list_rpc(rpcd_t)
 fs_read_rpc_files(rpcd_t)
 fs_read_rpc_symlinks(rpcd_t)
 fs_rw_rpc_sockets(rpcd_t)
 fs_get_all_fs_quotas(rpcd_t)
+fs_read_nfsd_files(rpcd_t)
+fs_set_xattr_fs_quotas(rpcd_t)
 fs_getattr_all_fs(rpcd_t)
 
 storage_getattr_fixed_disk_dev(rpcd_t)
@@ -98,15 +94,30 @@
 
 seutil_dontaudit_search_config(rpcd_t)
 
+userdom_signal_unpriv_users(rpcd_t)
+userdom_read_user_home_content_files(rpcd_t)
+
 optional_policy(`
 	automount_signal(rpcd_t)
 	automount_dontaudit_write_pipes(rpcd_t)
 ')
 
 optional_policy(`
+	domain_unconfined_signal(rpcd_t)
+')
+
+optional_policy(`
 	nis_read_ypserv_config(rpcd_t)
 ')
 
+optional_policy(`
+	quota_read_db(rpcd_t)
+')
+
+optional_policy(`
+	rgmanager_manage_tmp_files(rpcd_t)
+')
+
 ########################################
 #
 # NFSD local policy
@@ -120,8 +131,11 @@
 # for /proc/fs/nfs/exports - should we have a new type?
 kernel_read_system_state(nfsd_t)
 kernel_read_network_state(nfsd_t)
+kernel_setsched(nfsd_t)
 kernel_dontaudit_getattr_core_if(nfsd_t)
 
+corecmd_getattr_bin_files(nfsd_t)
+
 corenet_tcp_bind_all_rpc_ports(nfsd_t)
 corenet_udp_bind_all_rpc_ports(nfsd_t)
 
@@ -136,6 +150,8 @@
 # cjp: this should really have its own type
 files_manage_mounttab(nfsd_t)
 files_read_etc_runtime_files(nfsd_t)
+files_list_all_mountpoints(nfsd_t)
+files_read_usr_files(nfsd_t)
 
 fs_mount_nfsd_fs(nfsd_t)
 fs_search_nfsd_fs(nfsd_t)
@@ -150,30 +166,33 @@
 miscfiles_read_public_files(nfsd_t)
 
 # Write access to public_content_t and public_content_rw_t
-tunable_policy(`allow_nfsd_anon_write',`
-	miscfiles_manage_public_files(nfsd_t)
-')
-
-tunable_policy(`nfs_export_all_rw',`
-	dev_getattr_all_blk_files(nfsd_t)
-	dev_getattr_all_chr_files(nfsd_t)
-
-	fs_read_noxattr_fs_files(nfsd_t)
-	auth_manage_all_files_except_shadow(nfsd_t)
-')
-
-tunable_policy(`nfs_export_all_ro',`
-	dev_getattr_all_blk_files(nfsd_t)
-	dev_getattr_all_chr_files(nfsd_t)
-
-	files_getattr_all_pipes(nfsd_t)
-	files_getattr_all_sockets(nfsd_t)
-
-	fs_read_noxattr_fs_files(nfsd_t)
-
-	auth_read_all_dirs_except_shadow(nfsd_t)
-	auth_read_all_files_except_shadow(nfsd_t)
-')
+#tunable_policy(`allow_nfsd_anon_write',`
+#	miscfiles_manage_public_files(nfsd_t)
+#')
+
+#tunable_policy(`nfs_export_all_rw',`
+#	dev_getattr_all_blk_files(nfsd_t)
+#	dev_getattr_all_chr_files(nfsd_t)
+
+#	fs_read_noxattr_fs_files(nfsd_t)
+#	auth_manage_all_files_except_shadow(nfsd_t)
+#')
+userdom_user_home_dir_filetrans_user_home_content(nfsd_t, { file dir })
+userdom_list_user_tmp(nfsd_t)
+
+#tunable_policy(`nfs_export_all_ro',`
+dev_getattr_all_blk_files(nfsd_t)
+dev_getattr_all_chr_files(nfsd_t)
+
+files_getattr_all_pipes(nfsd_t)
+files_getattr_all_sockets(nfsd_t)
+
+fs_read_noxattr_fs_files(nfsd_t)
+
+auth_read_all_dirs_except_shadow(nfsd_t)
+auth_read_all_files_except_shadow(nfsd_t)
+auth_read_all_symlinks_except_shadow(nfsd_t)
+#')
 
 ########################################
 #
@@ -219,6 +238,8 @@
 	userdom_list_user_tmp(gssd_t)
 	userdom_read_user_tmp_files(gssd_t)
 	userdom_read_user_tmp_symlinks(gssd_t)
+	userdom_write_user_tmp_files(gssd_t)
+	files_read_generic_tmp_files(gssd_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rsync.if serefpolicy-3.7.19/policy/modules/services/rsync.if
--- nsaserefpolicy/policy/modules/services/rsync.if	2011-03-17 07:21:22.117851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rsync.if	2011-03-17 07:21:04.889851001 +0000
@@ -119,25 +119,68 @@
 		type rsync_etc_t;
 	')
 
-	allow $1 rsync_etc_t:file read_file_perms;
+	read_files_pattern($1, rsync_etc_t, rsync_etc_t)
 	files_search_etc($1)
 ')
 
-########################################
+#######################################
 ## <summary>
-##	Write to rsync config files.
+##  Write to rsync config files.
 ## </summary>
 ## <param name="domain">
 ## <summary>
-##	Domain allowed.
+##  Domain allowed.
 ## </summary>
 ## </param>
 #
 interface(`rsync_write_config',`
-	gen_require(`
-		type rsync_etc_t;
-	')
+    gen_require(`
+        type rsync_etc_t;
+    ')
 
-	allow $1 rsync_etc_t:file read_file_perms;
-	files_search_etc($1)
+    write_files_pattern($1, rsync_etc_t, rsync_etc_t)
+    files_search_etc($1)
+')
+
+#######################################
+## <summary>
+##      Manage rsync config files.
+## </summary>
+## <param name="domain">
+## 	<summary>
+##      Domain allowed.
+## 	</summary>
+## </param>
+#
+interface(`rsync_manage_config',`
+       gen_require(`
+               type rsync_etc_t;
+       ')
+
+       manage_files_pattern($1, rsync_etc_t, rsync_etc_t)
+       files_search_etc($1)
+')
+
+#######################################
+## <summary>
+##  Create objects in the amavis spool directories
+##  with a private type.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="object_class">
+##  <summary>
+##  Class of the object being created.
+##  </summary>
+## </param>
+#
+interface(`rsync_filetrans_config',`
+    gen_require(`
+        type rsync_etc_t;
+    ')
+
+    files_etc_filetrans($1, rsync_etc_t, $2)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rsync.te serefpolicy-3.7.19/policy/modules/services/rsync.te
--- nsaserefpolicy/policy/modules/services/rsync.te	2011-03-17 07:21:21.741851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rsync.te	2012-02-21 08:39:16.191156560 +0000
@@ -8,6 +8,13 @@
 
 ## <desc>
 ## <p>
+## Allow rsync to run as a client
+## </p>
+## </desc>
+gen_tunable(rsync_client, false)
+
+## <desc>
+## <p>
 ## Allow rsync to export any files/directories read only.
 ## </p>
 ## </desc>
@@ -22,9 +29,22 @@
 ## </desc>
 gen_tunable(allow_rsync_anon_write, false)
 
+## <desc>
+## <p>
+## Allow rsync servers to share cifs files systems
+## </p>
+## </desc>
+gen_tunable(rsync_use_cifs, false)
+
+## <desc>
+## <p>
+## Allow rsync servers to share nfs files systems
+## </p>
+## </desc>
+gen_tunable(rsync_use_nfs, false)
+
 type rsync_t;
 type rsync_exec_t;
-init_daemon_domain(rsync_t, rsync_exec_t)
 application_executable_file(rsync_exec_t)
 role system_r types rsync_t;
 
@@ -60,7 +80,7 @@
 allow rsync_t self:netlink_tcpdiag_socket r_netlink_socket_perms;
 #end for identd
 
-allow rsync_t rsync_etc_t:file read_file_perms;
+read_files_pattern(rsync_t, rsync_etc_t, rsync_etc_t)
 
 allow rsync_t rsync_data_t:dir list_dir_perms;
 read_files_pattern(rsync_t, rsync_data_t, rsync_data_t)
@@ -122,7 +142,20 @@
 	inetd_service_domain(rsync_t, rsync_exec_t)
 ')
 
+tunable_policy(`rsync_use_cifs',`
+       fs_list_cifs(rsync_t)
+       fs_read_cifs_files(rsync_t)
+       fs_read_cifs_symlinks(rsync_t)
+')
+
+tunable_policy(`rsync_use_nfs',`
+       fs_list_nfs(rsync_t)
+       fs_read_nfs_files(rsync_t)
+       fs_read_nfs_symlinks(rsync_t)
+')
+
 tunable_policy(`rsync_export_all_ro',`
+	files_getattr_all_pipes(rsync_t)
 	fs_read_noxattr_fs_files(rsync_t) 
 	fs_read_nfs_files(rsync_t)
 	fs_read_cifs_files(rsync_t)
@@ -131,4 +164,19 @@
 	auth_read_all_symlinks_except_shadow(rsync_t)
 	auth_tunable_read_shadow(rsync_t)
 ')
+
+tunable_policy(`rsync_client',`
+	corenet_tcp_connect_rsync_port(rsync_t)
+	corenet_tcp_connect_ssh_port(rsync_t)
+	manage_dirs_pattern(rsync_t, rsync_data_t, rsync_data_t)
+	manage_files_pattern(rsync_t, rsync_data_t, rsync_data_t)
+	manage_lnk_files_pattern(rsync_t, rsync_data_t, rsync_data_t)
+')
+
+optional_policy(`
+	tunable_policy(`rsync_client',`
+		ssh_exec(rsync_t) 
+	')
+')
+
 auth_can_read_shadow_passwords(rsync_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rtkit.if serefpolicy-3.7.19/policy/modules/services/rtkit.if
--- nsaserefpolicy/policy/modules/services/rtkit.if	2011-03-17 07:21:21.954851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rtkit.if	2011-03-17 07:21:04.600851002 +0000
@@ -41,6 +41,27 @@
 
 ########################################
 ## <summary>
+##	Do not audit send and receive messages from
+##	rtkit_daemon over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rtkit_daemon_dontaudit_dbus_chat',`
+	gen_require(`
+		type rtkit_daemon_t;
+		class dbus send_msg;
+	')
+
+	dontaudit $1 rtkit_daemon_t:dbus send_msg;
+	dontaudit rtkit_daemon_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
 ##	Allow rtkit to control scheduling for your process
 ## </summary>
 ## <param name="domain">
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rtkit.te serefpolicy-3.7.19/policy/modules/services/rtkit.te
--- nsaserefpolicy/policy/modules/services/rtkit.te	2011-03-17 07:21:21.997851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rtkit.te	2011-03-17 07:21:04.702851002 +0000
@@ -32,5 +32,9 @@
 miscfiles_read_localization(rtkit_daemon_t)
 
 optional_policy(`
+	mpd_dbus_chat(rtkit_daemon_t)
+')
+
+optional_policy(`
 	policykit_dbus_chat(rtkit_daemon_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/rwho.te serefpolicy-3.7.19/policy/modules/services/rwho.te
--- nsaserefpolicy/policy/modules/services/rwho.te	2011-03-17 07:21:21.586851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/rwho.te	2011-03-17 07:21:04.081851002 +0000
@@ -56,6 +56,8 @@
 init_read_utmp(rwho_t)
 init_dontaudit_write_utmp(rwho_t)
 
+logging_send_syslog_msg(rwho_t)
+
 miscfiles_read_localization(rwho_t)
 
 sysnet_dns_name_resolve(rwho_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/samba.fc serefpolicy-3.7.19/policy/modules/services/samba.fc
--- nsaserefpolicy/policy/modules/services/samba.fc	2011-03-17 07:21:22.059851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/samba.fc	2011-03-17 07:21:04.800851002 +0000
@@ -36,13 +36,16 @@
 
 /var/log/samba(/.*)?			gen_context(system_u:object_r:samba_log_t,s0)
 
-/var/run/samba/brlock\.tdb	--	gen_context(system_u:object_r:smbd_var_run_t,s0)
+/var/run/nmbd\.pid    			--  gen_context(system_u:object_r:nmbd_var_run_t,s0)
+/var/run/smbd\.pid    			--  gen_context(system_u:object_r:smbd_var_run_t,s0)
+
+/var/run/samba/brlock\.tdb		--	gen_context(system_u:object_r:smbd_var_run_t,s0)
 /var/run/samba/connections\.tdb	--	gen_context(system_u:object_r:smbd_var_run_t,s0)
 /var/run/samba/gencache\.tdb	--	gen_context(system_u:object_r:smbd_var_run_t,s0)
 /var/run/samba/locking\.tdb 	--	gen_context(system_u:object_r:smbd_var_run_t,s0)
 /var/run/samba/messages\.tdb	--	gen_context(system_u:object_r:nmbd_var_run_t,s0)
 /var/run/samba/namelist\.debug	--	gen_context(system_u:object_r:nmbd_var_run_t,s0)
-/var/run/samba/nmbd\.pid	--	gen_context(system_u:object_r:nmbd_var_run_t,s0)
+/var/run/samba/nmbd\.pid		--	gen_context(system_u:object_r:nmbd_var_run_t,s0)
 /var/run/samba/sessionid\.tdb	--	gen_context(system_u:object_r:smbd_var_run_t,s0)
 /var/run/samba/share_info\.tdb	--	gen_context(system_u:object_r:smbd_var_run_t,s0)
 /var/run/samba/smbd\.pid	--	gen_context(system_u:object_r:smbd_var_run_t,s0)
@@ -51,3 +54,7 @@
 /var/run/winbindd(/.*)?			gen_context(system_u:object_r:winbind_var_run_t,s0)
 
 /var/spool/samba(/.*)?			gen_context(system_u:object_r:samba_var_t,s0)
+
+ifndef(`enable_mls',`
+/var/lib/samba/scripts(/.*)?		gen_context(system_u:object_r:samba_unconfined_script_exec_t,s0)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/samba.if serefpolicy-3.7.19/policy/modules/services/samba.if
--- nsaserefpolicy/policy/modules/services/samba.if	2011-03-17 07:21:21.152851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/samba.if	2012-02-28 09:19:57.150052896 +0000
@@ -62,6 +62,25 @@
 
 ########################################
 ## <summary>
+##	Execute samba net in the samba_unconfined_net domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`samba_domtrans_unconfined_net',`
+	gen_require(`
+		type samba_unconfined_net_t, samba_net_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, samba_net_exec_t, samba_unconfined_net_t)
+')
+
+########################################
+## <summary>
 ##	Execute samba net in the samba_net domain, and
 ##	allow the specified role the samba_net domain.
 ## </summary>
@@ -86,6 +105,50 @@
 	role $2 types samba_net_t;
 ')
 
+#######################################
+## <summary>
+##	The role for the samba module.
+## </summary>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the samba_net domain.
+##	</summary>
+## </param>
+#
+template(`samba_role_notrans',`
+	gen_require(`
+		type smbd_t;
+	')
+
+	role $1 types smbd_t;
+')
+
+########################################
+## <summary>
+##	Execute samba net in the samba_unconfined_net domain, and
+##	allow the specified role the samba_unconfined_net domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the samba_unconfined_net domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`samba_run_unconfined_net',`
+	gen_require(`
+		type samba_unconfined_net_t;
+	')
+
+	samba_domtrans_unconfined_net($1)
+	role $2 types samba_unconfined_net_t;
+')
+
 ########################################
 ## <summary>
 ##	Execute smbmount in the smbmount domain.
@@ -395,6 +458,7 @@
 	files_search_var($1)
 	files_search_var_lib($1)
 	manage_files_pattern($1, samba_var_t, samba_var_t)
+	manage_lnk_files_pattern($1, samba_var_t, samba_var_t)
 ')
 
 ########################################
@@ -530,6 +594,7 @@
 	')
 
 	domtrans_pattern($1, winbind_helper_exec_t, winbind_helper_t)
+	allow $1 winbind_helper_t:process signal;
 ')
 
 ########################################
@@ -577,6 +642,40 @@
 	allow $1 winbind_var_run_t:file read_file_perms;
 ')
 
+#######################################
+## <summary>
+##     Allow domain to signal samba
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`samba_signal_nmbd',`
+        gen_require(`
+                type nmbd_t;
+        ')
+        allow $1 nmbd_t:process signal;
+')
+
+######################################
+## <summary>
+##     Allow domain to signal samba
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`samba_signal_smbd',`
+        gen_require(`
+                type smbd_t;
+        ')
+        allow $1 smbd_t:process signal;
+')
+
 ########################################
 ## <summary>
 ##	Connect to winbind.
@@ -610,6 +709,37 @@
 
 ########################################
 ## <summary>
+##	Create a set of derived types for apache
+##	web content.
+## </summary>
+## <param name="prefix">
+##	<summary>
+##	The prefix to be used for deriving type names.
+##	</summary>
+## </param>
+#
+template(`samba_helper_template',`
+	gen_require(`
+		type smbd_t;
+		role system_r;
+	')
+	#This type is for samba helper scripts
+	type samba_$1_script_t;
+	domain_type(samba_$1_script_t)
+	role system_r types samba_$1_script_t;
+
+	# This type is used for executable scripts files
+	type samba_$1_script_exec_t;
+	corecmd_shell_entry_type(samba_$1_script_t)
+	domain_entry_file(samba_$1_script_t, samba_$1_script_exec_t)
+
+	domtrans_pattern(smbd_t, samba_$1_script_exec_t, samba_$1_script_t)
+	allow smbd_t samba_$1_script_exec_t:file ioctl;
+
+')
+
+########################################
+## <summary>
 ##	All of the rules required to administrate 
 ##	an samba environment
 ## </summary>
@@ -640,6 +770,7 @@
 		type winbind_var_run_t, winbind_tmp_t;
 		type winbind_log_t;
 
+		type samba_unconfined_script_t, samba_unconfined_script_exec_t;
 		type samba_initrc_exec_t;
 	')
 
@@ -649,10 +780,13 @@
 	allow $1 nmbd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, nmbd_t)
 
-	samba_run_smbcontrol($1, $2, $3)
-	samba_run_winbind_helper($1, $2, $3)
-	samba_run_smbmount($1, $2, $3)
-	samba_run_net($1, $2, $3)
+	allow $1 samba_unconfined_script_t:process { ptrace signal_perms };
+	ps_process_pattern($1, samba_unconfined_script_t)
+	        
+	samba_run_smbcontrol($1, $2)
+	samba_run_winbind_helper($1, $2)
+	samba_run_smbmount($1, $2)
+	samba_run_net($1, $2)
 
 	init_labeled_script_domtrans($1, samba_initrc_exec_t)
 	domain_system_change_exemption($1)
@@ -689,4 +823,5 @@
 	admin_pattern($1, winbind_tmp_t)
 
 	admin_pattern($1, winbind_var_run_t)
+	admin_pattern($1, samba_unconfined_script_exec_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/samba.te serefpolicy-3.7.19/policy/modules/services/samba.te
--- nsaserefpolicy/policy/modules/services/samba.te	2011-03-17 07:21:21.048851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/samba.te	2012-07-24 14:08:04.780639526 +0000
@@ -66,6 +66,13 @@
 ## </desc>
 gen_tunable(samba_share_nfs, false)
 
+## <desc>
+## <p>
+## Allow samba to export ntfs/fusefs volumes.
+## </p>
+## </desc>
+gen_tunable(samba_share_fusefs, false)
+
 type nmbd_t;
 type nmbd_exec_t;
 init_daemon_domain(nmbd_t, nmbd_exec_t)
@@ -146,8 +153,8 @@
 type winbind_log_t;
 logging_log_file(winbind_log_t)
 
-type winbind_tmp_t;
-files_tmp_file(winbind_tmp_t)
+#type winbind_tmp_t;
+#files_tmp_file(winbind_tmp_t)
 
 type winbind_var_run_t;
 files_pid_file(winbind_var_run_t)
@@ -156,7 +163,7 @@
 #
 # Samba net local policy
 #
-allow samba_net_t self:capability { sys_nice dac_read_search dac_override };
+allow samba_net_t self:capability { sys_chroot sys_nice dac_read_search dac_override };
 allow samba_net_t self:process { getsched setsched };
 allow samba_net_t self:unix_dgram_socket create_socket_perms;
 allow samba_net_t self:unix_stream_socket create_stream_socket_perms;
@@ -178,6 +185,7 @@
 
 kernel_read_proc_symlinks(samba_net_t)
 kernel_read_system_state(samba_net_t)
+kernel_read_network_state(samba_net_t)
 
 corenet_all_recvfrom_unlabeled(samba_net_t)
 corenet_all_recvfrom_netlabel(samba_net_t)
@@ -201,14 +209,16 @@
 files_read_usr_symlinks(samba_net_t)
 
 auth_use_nsswitch(samba_net_t)
-auth_read_cache(samba_net_t)
+auth_manage_cache(samba_net_t)
 
 logging_send_syslog_msg(samba_net_t)
 
 miscfiles_read_localization(samba_net_t) 
 
+samba_read_var_files(samba_net_t) 
+
 userdom_use_user_terminals(samba_net_t)
-userdom_dontaudit_search_user_home_dirs(samba_net_t)
+userdom_list_user_home_dirs(samba_net_t)
 
 optional_policy(`
 	pcscd_read_pub_files(samba_net_t)
@@ -216,13 +226,15 @@
 
 optional_policy(`
 	kerberos_use(samba_net_t)
+	kerberos_etc_filetrans_keytab(samba_net_t)
 ')
 
 ########################################
 #
 # smbd Local policy
 #
-allow smbd_t self:capability { chown fowner setgid setuid sys_nice sys_resource lease dac_override dac_read_search };
+
+allow smbd_t self:capability { chown fowner fsetid kill setgid setuid sys_chroot sys_nice sys_admin sys_resource lease dac_override dac_read_search };
 dontaudit smbd_t self:capability sys_tty_config;
 allow smbd_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow smbd_t self:process setrlimit;
@@ -255,7 +267,7 @@
 manage_dirs_pattern(smbd_t, samba_share_t, samba_share_t)
 manage_files_pattern(smbd_t, samba_share_t, samba_share_t)
 manage_lnk_files_pattern(smbd_t, samba_share_t, samba_share_t)
-allow smbd_t samba_share_t:filesystem getattr;
+allow smbd_t samba_share_t:filesystem { getattr quotaget };
 
 manage_dirs_pattern(smbd_t, samba_var_t, samba_var_t)
 manage_files_pattern(smbd_t, samba_var_t, samba_var_t)
@@ -271,10 +283,14 @@
 manage_dirs_pattern(smbd_t, smbd_var_run_t, smbd_var_run_t)
 manage_files_pattern(smbd_t, smbd_var_run_t, smbd_var_run_t)
 manage_sock_files_pattern(smbd_t, smbd_var_run_t, smbd_var_run_t)
-files_pid_filetrans(smbd_t, smbd_var_run_t, file)
+files_pid_filetrans(smbd_t, smbd_var_run_t, { dir file })
+
+allow smbd_t swat_t:process signal;
 
 allow smbd_t winbind_var_run_t:sock_file rw_sock_file_perms;
 
+allow smbd_t winbind_t:process { signal signull };
+
 kernel_getattr_core_if(smbd_t)
 kernel_getattr_message_if(smbd_t)
 kernel_read_network_state(smbd_t)
@@ -306,16 +322,23 @@
 dev_read_urand(smbd_t)
 dev_getattr_mtrr_dev(smbd_t)
 dev_dontaudit_getattr_usbfs_dirs(smbd_t)
+dev_getattr_all_blk_files(smbd_t)
+dev_getattr_all_chr_files(smbd_t)
 
 fs_getattr_all_fs(smbd_t)
+fs_getattr_all_dirs(smbd_t)
 fs_get_xattr_fs_quotas(smbd_t)
 fs_search_auto_mountpoints(smbd_t)
 fs_getattr_rpc_dirs(smbd_t)
+fs_get_all_fs_quotas(smbd_t)
 fs_list_inotifyfs(smbd_t)
 
 auth_use_nsswitch(smbd_t)
 auth_domtrans_chk_passwd(smbd_t)
 auth_domtrans_upd_passwd(smbd_t)
+auth_manage_cache(smbd_t)
+# FIXME
+auth_write_login_records(smbd_t)
 
 domain_use_interactive_fds(smbd_t)
 domain_dontaudit_list_all_domains_state(smbd_t)
@@ -325,8 +348,12 @@
 files_read_etc_runtime_files(smbd_t)
 files_read_usr_files(smbd_t)
 files_search_spool(smbd_t)
+# smbd seems to getattr all mountpoints
+files_dontaudit_getattr_all_dirs(smbd_t)
+files_dontaudit_list_all_mountpoints(smbd_t)
 # Allow samba to list mnt_t for potential mounted dirs
 files_list_mnt(smbd_t)
+files_search_all_mountpoints(smbd_t)
 
 init_rw_utmp(smbd_t)
 
@@ -337,10 +364,13 @@
 miscfiles_read_public_files(smbd_t)
 
 userdom_use_unpriv_users_fds(smbd_t)
-userdom_dontaudit_search_user_home_dirs(smbd_t)
+userdom_search_user_home_content(smbd_t)
+userdom_signal_all_users(smbd_t)
 
 usermanage_read_crack_db(smbd_t)
 
+term_use_ptmx(smbd_t)
+
 ifdef(`hide_broken_symptoms', `
 	files_dontaudit_getattr_default_dirs(smbd_t)
 	files_dontaudit_getattr_boot_dirs(smbd_t)
@@ -352,19 +382,19 @@
 ') 
 
 tunable_policy(`samba_domain_controller',`
+	gen_require(`
+		class passwd passwd;
+	')
+
 	usermanage_domtrans_passwd(smbd_t)
 	usermanage_kill_passwd(smbd_t)
 	usermanage_domtrans_useradd(smbd_t)
 	usermanage_domtrans_groupadd(smbd_t)
+	allow smbd_t self:passwd passwd;
 ')
 
 tunable_policy(`samba_enable_home_dirs',`
-	userdom_manage_user_home_content_dirs(smbd_t)
-	userdom_manage_user_home_content_files(smbd_t)
-	userdom_manage_user_home_content_symlinks(smbd_t)
-	userdom_manage_user_home_content_sockets(smbd_t)
-	userdom_manage_user_home_content_pipes(smbd_t)
-	userdom_user_home_dir_filetrans_user_home_content(smbd_t, { dir file lnk_file sock_file fifo_file })
+	userdom_manage_user_home_content(smbd_t)
 ')
 
 # Support Samba sharing of NFS mount points
@@ -376,6 +406,19 @@
 	fs_manage_nfs_named_sockets(smbd_t)
 ')
 
+# Support Samba sharing of ntfs/fusefs mount points
+tunable_policy(`samba_share_fusefs',`
+	fs_manage_fusefs_dirs(smbd_t)
+	fs_manage_fusefs_files(smbd_t)
+',`
+	fs_search_fusefs(smbd_t)
+')
+
+optional_policy(`
+    ctdbd_stream_connect(smbd_t)
+    ctdbd_manage_lib_files(smbd_t)
+')
+
 optional_policy(`
 	cups_read_rw_config(smbd_t)
 	cups_stream_connect(smbd_t)
@@ -387,10 +430,20 @@
 ')
 
 optional_policy(`
+    ldap_stream_connect(smbd_t)
+    dirsrv_stream_connect(smbd_t)
+')
+
+optional_policy(`
 	lpd_exec_lpr(smbd_t)
 ')
 
 optional_policy(`
+	qemu_manage_tmp_dirs(smbd_t)
+	qemu_manage_tmp_files(smbd_t)
+')
+
+optional_policy(`
 	rpc_search_nfs_state_data(smbd_t)
 ')
 
@@ -405,13 +458,15 @@
 tunable_policy(`samba_create_home_dirs',`
 	allow smbd_t self:capability chown;
 	userdom_create_user_home_dirs(smbd_t)
-	userdom_home_filetrans_user_home_dir(smbd_t)
 ')
+userdom_home_filetrans_user_home_dir(smbd_t)
 
 tunable_policy(`samba_export_all_ro',`
 	fs_read_noxattr_fs_files(smbd_t) 
+	auth_read_all_dirs_except_shadow(smbd_t)
 	auth_read_all_files_except_shadow(smbd_t)
 	fs_read_noxattr_fs_files(nmbd_t) 
+	auth_read_all_dirs_except_shadow(nmbd_t)
 	auth_read_all_files_except_shadow(nmbd_t)
 ')
 
@@ -420,8 +475,8 @@
 	auth_manage_all_files_except_shadow(smbd_t)
 	fs_read_noxattr_fs_files(nmbd_t) 
 	auth_manage_all_files_except_shadow(nmbd_t)
-	userdom_user_home_dir_filetrans_user_home_content(nmbd_t, { file dir })
 ')
+userdom_user_home_dir_filetrans_user_home_content(nmbd_t, { file dir })
 
 ########################################
 #
@@ -442,8 +497,9 @@
 allow nmbd_t self:unix_dgram_socket { create_socket_perms sendto };
 allow nmbd_t self:unix_stream_socket { create_stream_socket_perms connectto };
 
+manage_dirs_pattern(nmbd_t, nmbd_var_run_t, nmbd_var_run_t)
 manage_files_pattern(nmbd_t, nmbd_var_run_t, nmbd_var_run_t)
-files_pid_filetrans(nmbd_t, nmbd_var_run_t, file)
+files_pid_filetrans(nmbd_t, nmbd_var_run_t, { dir file })
 
 read_files_pattern(nmbd_t, samba_etc_t, samba_etc_t)
 read_lnk_files_pattern(nmbd_t, samba_etc_t, samba_etc_t)
@@ -501,6 +557,11 @@
 userdom_dontaudit_search_user_home_dirs(nmbd_t)
 
 optional_policy(`
+	ctdbd_stream_connect(nmbd_t)
+	ctdbd_manage_lib_files(nmbd_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(nmbd_t)
 ')
 
@@ -513,18 +574,19 @@
 # smbcontrol local policy
 #
 
+allow smbcontrol_t self:process signal;
 # internal communication is often done using fifo and unix sockets.
 allow smbcontrol_t self:fifo_file rw_file_perms;
 allow smbcontrol_t self:unix_stream_socket create_stream_socket_perms;
 
 allow smbcontrol_t nmbd_t:process { signal signull };
+read_files_pattern(smbcontrol_t, nmbd_var_run_t, nmbd_var_run_t)
 
-allow smbcontrol_t nmbd_var_run_t:file { read lock };
-
-allow smbcontrol_t smbd_t:process signal;
-
+allow smbcontrol_t smbd_t:process { signal signull };
+read_files_pattern(smbcontrol_t, smbd_var_run_t, smbd_var_run_t)
 allow smbcontrol_t winbind_t:process { signal signull };
 
+files_search_var_lib(smbcontrol_t)
 samba_read_config(smbcontrol_t)
 samba_rw_var_files(smbcontrol_t)
 samba_search_var(smbcontrol_t)
@@ -532,10 +594,22 @@
 
 domain_use_interactive_fds(smbcontrol_t)
 
+dev_read_urand(smbcontrol_t)
+
+term_use_console(smbcontrol_t)
+
+init_dontaudit_leaks(smbcontrol_t)
+
 files_read_etc_files(smbcontrol_t)
 
 miscfiles_read_localization(smbcontrol_t)
 
+userdom_use_user_terminals(smbcontrol_t)
+
+optional_policy(`
+ ctdbd_stream_connect(smbcontrol_t)
+')
+
 ########################################
 #
 # smbmount Local policy
@@ -618,7 +692,7 @@
 # SWAT Local policy
 #
 
-allow swat_t self:capability { setuid setgid sys_resource };
+allow swat_t self:capability { dac_override setuid setgid sys_resource };
 allow swat_t self:process { setrlimit signal_perms };
 allow swat_t self:fifo_file rw_fifo_file_perms;
 allow swat_t self:netlink_tcpdiag_socket r_netlink_socket_perms;
@@ -626,38 +700,50 @@
 allow swat_t self:udp_socket create_socket_perms;
 allow swat_t self:unix_stream_socket connectto;
 
+samba_domtrans_smbd(swat_t)
+allow swat_t smbd_t:process { signal signull };
+allow smbd_t swat_t:process signal;
+
+samba_domtrans_nmbd(swat_t)
 allow swat_t nmbd_t:process { signal signull };
+allow nmbd_t swat_t:process signal;
 
-allow swat_t nmbd_exec_t:file mmap_file_perms;
-can_exec(swat_t, nmbd_exec_t)
+allow swat_t nmbd_var_run_t:file read_file_perms;
 
-allow swat_t nmbd_var_run_t:file { lock read unlink };
+allow swat_t smbd_port_t:tcp_socket name_bind;
 
-samba_domtrans_smbd(swat_t)
-allow swat_t smbd_t:process { signal signull };
-
-allow swat_t smbd_var_run_t:file { lock unlink };
+allow swat_t nmbd_port_t:udp_socket name_bind;
 
 rw_files_pattern(swat_t, samba_etc_t, samba_etc_t)
 read_lnk_files_pattern(swat_t, samba_etc_t, samba_etc_t)
 
-append_files_pattern(swat_t, samba_log_t, samba_log_t)
+manage_dirs_pattern(swat_t, samba_log_t, samba_log_t)
+manage_files_pattern(swat_t, samba_log_t, samba_log_t)
+
+manage_files_pattern(swat_t, samba_etc_t, samba_secrets_t)
+
+manage_files_pattern(swat_t, samba_var_t, samba_var_t)
+files_list_var_lib(swat_t)
 
 allow swat_t smbd_exec_t:file mmap_file_perms ;
 
 allow swat_t smbd_t:process signull;
 
 allow swat_t smbd_var_run_t:file read_file_perms;
+allow swat_t smbd_var_run_t:file { lock unlink };
+stream_connect_pattern(swat_t, nmbd_var_run_t, nmbd_var_run_t, nmbd_t)
 
 manage_dirs_pattern(swat_t, swat_tmp_t, swat_tmp_t)
 manage_files_pattern(swat_t, swat_tmp_t, swat_tmp_t)
 files_tmp_filetrans(swat_t, swat_tmp_t, { file dir })
 
+read_files_pattern(swat_t, winbind_var_run_t, winbind_var_run_t)
 manage_files_pattern(swat_t, swat_var_run_t, swat_var_run_t)
 files_pid_filetrans(swat_t, swat_var_run_t, file)
 
 allow swat_t winbind_exec_t:file mmap_file_perms;
-can_exec(swat_t, winbind_exec_t)
+domtrans_pattern(swat_t, winbind_exec_t, winbind_t)
+allow swat_t winbind_t:process { signal signull };
 
 allow swat_t winbind_var_run_t:dir { write add_name remove_name };
 allow swat_t winbind_var_run_t:sock_file { create unlink };
@@ -694,12 +780,17 @@
 auth_domtrans_chk_passwd(swat_t)
 auth_use_nsswitch(swat_t)
 
+init_read_utmp(swat_t)
+init_dontaudit_write_utmp(swat_t)
+
 logging_send_syslog_msg(swat_t)
 logging_send_audit_msgs(swat_t)
 logging_search_logs(swat_t)
 
 miscfiles_read_localization(swat_t)
 
+userdom_dontaudit_search_admin_dir(swat_t)
+
 optional_policy(`
 	cups_read_rw_config(swat_t)
 	cups_stream_connect(swat_t)
@@ -718,7 +809,7 @@
 # Winbind local policy
 #
 
-allow winbind_t self:capability { dac_override ipc_lock setuid };
+allow winbind_t self:capability { sys_nice dac_override ipc_lock setuid };
 dontaudit winbind_t self:capability sys_tty_config;
 allow winbind_t self:process { signal_perms getsched setsched };
 allow winbind_t self:fifo_file rw_fifo_file_perms;
@@ -728,6 +819,7 @@
 allow winbind_t self:udp_socket create_socket_perms;
 
 allow winbind_t nmbd_t:process { signal signull };
+allow winbind_t smbd_t:process { signal signull };
 
 allow winbind_t nmbd_var_run_t:file read_file_perms;
 
@@ -752,17 +844,22 @@
 allow winbind_t winbind_log_t:file manage_file_perms;
 logging_log_filetrans(winbind_t, winbind_log_t, file)
 
-manage_dirs_pattern(winbind_t, winbind_tmp_t, winbind_tmp_t)
-manage_files_pattern(winbind_t, winbind_tmp_t, winbind_tmp_t)
-manage_sock_files_pattern(winbind_t, winbind_tmp_t, winbind_tmp_t)
-files_tmp_filetrans(winbind_t, winbind_tmp_t, { file dir })
+#manage_dirs_pattern(winbind_t, winbind_tmp_t, winbind_tmp_t)
+#manage_files_pattern(winbind_t, winbind_tmp_t, winbind_tmp_t)
+#manage_sock_files_pattern(winbind_t, winbind_tmp_t, winbind_tmp_t)
+#files_tmp_filetrans(winbind_t, winbind_tmp_t, { file dir })
+userdom_manage_user_tmp_dirs(winbind_t)
+userdom_manage_user_tmp_files(winbind_t)
+userdom_tmp_filetrans_user_tmp(winbind_t, { file dir })
 
+manage_dirs_pattern(winbind_t, winbind_var_run_t, winbind_var_run_t)
 manage_files_pattern(winbind_t, winbind_var_run_t, winbind_var_run_t)
 manage_sock_files_pattern(winbind_t, winbind_var_run_t, winbind_var_run_t)
-files_pid_filetrans(winbind_t, winbind_var_run_t, file)
+files_pid_filetrans(winbind_t, winbind_var_run_t, { dir file })
 
 kernel_read_kernel_sysctls(winbind_t)
 kernel_read_system_state(winbind_t)
+kernel_read_network_state(winbind_t)
 
 corecmd_exec_bin(winbind_t)
 
@@ -779,6 +876,9 @@
 corenet_tcp_bind_generic_node(winbind_t)
 corenet_udp_bind_generic_node(winbind_t)
 corenet_tcp_connect_smbd_port(winbind_t)
+corenet_tcp_connect_smbd_port(winbind_t)
+corenet_tcp_connect_epmap_port(winbind_t)
+corenet_tcp_connect_all_unreserved_ports(winbind_t)
 
 dev_read_sysfs(winbind_t)
 dev_read_urand(winbind_t)
@@ -788,16 +888,18 @@
 
 auth_domtrans_chk_passwd(winbind_t)
 auth_use_nsswitch(winbind_t)
-auth_rw_cache(winbind_t)
+auth_manage_cache(winbind_t)
 
 domain_use_interactive_fds(winbind_t)
 
+files_list_var_lib(winbind_t)
 files_read_etc_files(winbind_t)
 files_read_usr_symlinks(winbind_t)
 
 logging_send_syslog_msg(winbind_t)
 
 miscfiles_read_localization(winbind_t)
+miscfiles_read_certs(winbind_t)
 
 userdom_dontaudit_use_unpriv_user_fds(winbind_t)
 userdom_manage_user_home_content_dirs(winbind_t)
@@ -808,6 +910,11 @@
 userdom_user_home_dir_filetrans_user_home_content(winbind_t, { dir file lnk_file fifo_file sock_file })
 
 optional_policy(`
+	ctdbd_stream_connect(winbind_t)
+	ctdbd_manage_lib_files(winbind_t)
+')
+
+optional_policy(`
 	kerberos_use(winbind_t)
 ')
 
@@ -816,6 +923,10 @@
 ')
 
 optional_policy(`
+	sysnet_use_ldap(winbind_t)
+')
+
+optional_policy(`
 	udev_read_db(winbind_t)
 ')
 
@@ -866,6 +977,18 @@
 #
 
 optional_policy(`
+	type samba_unconfined_net_t;
+	domain_type(samba_unconfined_net_t)
+	domain_entry_file(samba_unconfined_net_t, samba_net_exec_t)
+	role system_r types samba_unconfined_net_t;
+
+	unconfined_domain(samba_unconfined_net_t)
+
+	manage_files_pattern(samba_unconfined_net_t, samba_etc_t, samba_secrets_t)
+	filetrans_pattern(samba_unconfined_net_t, samba_etc_t, samba_secrets_t, file)
+	userdom_use_user_terminals(samba_unconfined_net_t)
+')
+
 	type samba_unconfined_script_t;
 	type samba_unconfined_script_exec_t;
 	domain_type(samba_unconfined_script_t)
@@ -876,9 +999,12 @@
 	allow smbd_t samba_unconfined_script_exec_t:dir search_dir_perms;
 	allow smbd_t samba_unconfined_script_exec_t:file ioctl;
 
+optional_policy(`
 	unconfined_domain(samba_unconfined_script_t)
+')
 
 	tunable_policy(`samba_run_unconfined',`
 		domtrans_pattern(smbd_t, samba_unconfined_script_exec_t, samba_unconfined_script_t)
-	')
+',`
+	can_exec(smbd_t, samba_unconfined_script_exec_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sanlock.fc serefpolicy-3.7.19/policy/modules/services/sanlock.fc
--- nsaserefpolicy/policy/modules/services/sanlock.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sanlock.fc	2011-06-29 13:56:00.678029998 +0000
@@ -0,0 +1,8 @@
+
+/etc/rc\.d/init\.d/sanlock	--	gen_context(system_u:object_r:sanlock_initrc_exec_t,s0)
+
+/var/run/sanlock(/.*)?			gen_context(system_u:object_r:sanlock_var_run_t,s0)
+
+/var/log/sanlock\.log			gen_context(system_u:object_r:sanlock_log_t,s0)
+
+/usr/sbin/sanlock		--	gen_context(system_u:object_r:sanlock_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sanlock.if serefpolicy-3.7.19/policy/modules/services/sanlock.if
--- nsaserefpolicy/policy/modules/services/sanlock.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sanlock.if	2011-06-29 13:56:00.733029999 +0000
@@ -0,0 +1,110 @@
+
+## <summary>policy for sanlock</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run sanlock.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`sanlock_domtrans',`
+	gen_require(`
+		type sanlock_t, sanlock_exec_t;
+	')
+
+	domtrans_pattern($1, sanlock_exec_t, sanlock_t)
+')
+
+
+########################################
+## <summary>
+##	Execute sanlock server in the sanlock domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`sanlock_initrc_domtrans',`
+	gen_require(`
+		type sanlock_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, sanlock_initrc_exec_t)
+')
+
+######################################
+## <summary>
+##	Create, read, write, and delete sanlock PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sanlock_manage_pid_files',`
+	gen_require(`
+		type sanlock_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_files_pattern($1, sanlock_var_run_t, sanlock_var_run_t)
+')
+
+########################################
+## <summary>
+##      Connect to sanlock over an unix stream socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`sanlock_stream_connect',`
+        gen_require(`
+                type sanlock_t, sanlock_var_run_t;
+        ')
+
+        files_search_pids($1)
+        stream_connect_pattern($1, sanlock_var_run_t, sanlock_var_run_t, sanlock_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an sanlock environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`sanlock_admin',`
+	gen_require(`
+		type sanlock_t;
+		type sanlock_initrc_exec_t;
+	')
+
+	allow $1 sanlock_t:process { ptrace signal_perms };
+	ps_process_pattern($1, sanlock_t)
+
+	sanlock_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 sanlock_initrc_exec_t system_r;
+	allow $2 system_r;
+
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sanlock.te serefpolicy-3.7.19/policy/modules/services/sanlock.te
--- nsaserefpolicy/policy/modules/services/sanlock.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sanlock.te	2012-08-08 01:38:50.421104451 +0000
@@ -0,0 +1,102 @@
+policy_module(sanlock,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+##  <p>
+##  Allow sanlock to manage nfs files
+##  </p>
+## </desc>
+gen_tunable(sanlock_use_nfs, false)
+
+## <desc>
+##  <p>
+##  Allow sanlock to manage cifs files
+##  </p>
+## </desc>
+gen_tunable(sanlock_use_samba, false)
+
+type sanlock_t;
+type sanlock_exec_t;
+init_daemon_domain(sanlock_t, sanlock_exec_t)
+
+type sanlock_var_run_t;
+files_pid_file(sanlock_var_run_t)
+
+type sanlock_log_t;
+logging_log_file(sanlock_log_t)
+
+type sanlock_initrc_exec_t;
+init_script_file(sanlock_initrc_exec_t)
+
+ifdef(`enable_mcs',`
+	init_ranged_daemon_domain(sanlock_t, sanlock_exec_t, s0 - mcs_systemhigh)
+')
+
+ifdef(`enable_mls',`
+	init_ranged_daemon_domain(sanlock_t, sanlock_exec_t, s0 - mls_systemhigh)
+')
+
+########################################
+#
+# sanlock local policy
+#
+allow sanlock_t self:capability { chown dac_override ipc_lock kill setgid setuid sys_nice sys_resource };
+allow sanlock_t self:process { setrlimit setsched signull signal sigkill };
+
+allow sanlock_t self:fifo_file rw_fifo_file_perms;
+allow sanlock_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(sanlock_t, sanlock_log_t, sanlock_log_t)
+logging_log_filetrans(sanlock_t, sanlock_log_t, file)
+
+manage_dirs_pattern(sanlock_t, sanlock_var_run_t, sanlock_var_run_t)
+manage_files_pattern(sanlock_t, sanlock_var_run_t, sanlock_var_run_t)
+manage_sock_files_pattern(sanlock_t, sanlock_var_run_t, sanlock_var_run_t)
+files_pid_filetrans(sanlock_t, sanlock_var_run_t, { file dir sock_file })
+
+kernel_read_system_state(sanlock_t)
+kernel_read_kernel_sysctls(sanlock_t)
+
+domain_use_interactive_fds(sanlock_t)
+
+
+storage_raw_rw_fixed_disk(sanlock_t)
+
+dev_read_urand(sanlock_t)
+
+auth_use_nsswitch(sanlock_t)
+
+init_read_utmp(sanlock_t)
+init_dontaudit_write_utmp(sanlock_t)
+
+logging_send_syslog_msg(sanlock_t)
+
+miscfiles_read_localization(sanlock_t)
+
+tunable_policy(`sanlock_use_nfs',`
+    fs_manage_nfs_dirs(sanlock_t)
+    fs_manage_nfs_files(sanlock_t)
+    fs_manage_nfs_named_sockets(sanlock_t)
+    fs_read_nfs_symlinks(sanlock_t)
+')
+
+tunable_policy(`sanlock_use_samba',`
+    fs_manage_cifs_dirs(sanlock_t)
+    fs_manage_cifs_files(sanlock_t)
+    fs_manage_cifs_named_sockets(sanlock_t)
+    fs_read_cifs_symlinks(sanlock_t)
+')
+
+optional_policy(`
+	wdmd_stream_connect(sanlock_t)
+')
+
+optional_policy(`
+	virt_kill_svirt(sanlock_t)
+	virt_manage_lib_files(sanlock_t)
+	virt_signal_svirt(sanlock_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sasl.fc serefpolicy-3.7.19/policy/modules/services/sasl.fc
--- nsaserefpolicy/policy/modules/services/sasl.fc	2011-03-17 07:21:22.080851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sasl.fc	2011-03-17 07:21:04.829851002 +0000
@@ -1,4 +1,4 @@
-/etc/rc\.d/init\.d/sasl	--	gen_context(system_u:object_r:saslauthd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/saslauthd	--	gen_context(system_u:object_r:saslauthd_initrc_exec_t,s0)
 
 #
 # /usr
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sasl.if serefpolicy-3.7.19/policy/modules/services/sasl.if
--- nsaserefpolicy/policy/modules/services/sasl.if	2011-03-17 07:21:22.181851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sasl.if	2011-03-17 07:21:04.922851001 +0000
@@ -38,11 +38,11 @@
 #
 interface(`sasl_admin',`
 	gen_require(`
-		type saslauthd_t, saslauthd_tmp_t, saslauthd_var_run_t;
+		type saslauthd_t, saslauthd_var_run_t;
 		type saslauthd_initrc_exec_t;
 	')
 
-	allow $1 saslauthd_t:process { ptrace signal_perms getattr };
+	allow $1 saslauthd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, saslauthd_t)
 
 	init_labeled_script_domtrans($1, saslauthd_initrc_exec_t)
@@ -50,9 +50,6 @@
 	role_transition $2 saslauthd_initrc_exec_t system_r;
 	allow $2 system_r;
 
-	files_list_tmp($1)
-	admin_pattern($1, saslauthd_tmp_t)
-
 	files_list_pids($1)
 	admin_pattern($1, saslauthd_var_run_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sasl.te serefpolicy-3.7.19/policy/modules/services/sasl.te
--- nsaserefpolicy/policy/modules/services/sasl.te	2011-03-17 07:21:21.079851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sasl.te	2012-08-08 01:44:31.859070571 +0000
@@ -20,8 +20,8 @@
 type saslauthd_initrc_exec_t;
 init_script_file(saslauthd_initrc_exec_t)
 
-type saslauthd_tmp_t;
-files_tmp_file(saslauthd_tmp_t)
+#type saslauthd_tmp_t;
+#files_tmp_file(saslauthd_tmp_t)
 
 type saslauthd_var_run_t;
 files_pid_file(saslauthd_var_run_t)
@@ -31,17 +31,17 @@
 # Local policy
 #
 
-allow saslauthd_t self:capability { setgid setuid };
+allow saslauthd_t self:capability { setgid setuid sys_nice };
 dontaudit saslauthd_t self:capability sys_tty_config;
-allow saslauthd_t self:process signal_perms;
+allow saslauthd_t self:process { setsched signal_perms };
 allow saslauthd_t self:fifo_file rw_fifo_file_perms;
 allow saslauthd_t self:unix_dgram_socket create_socket_perms;
 allow saslauthd_t self:unix_stream_socket create_stream_socket_perms;
 allow saslauthd_t self:tcp_socket create_socket_perms;
 
-allow saslauthd_t saslauthd_tmp_t:dir setattr;
-manage_files_pattern(saslauthd_t, saslauthd_tmp_t, saslauthd_tmp_t)
-files_tmp_filetrans(saslauthd_t, saslauthd_tmp_t, file)
+#allow saslauthd_t saslauthd_tmp_t:dir setattr;
+#manage_files_pattern(saslauthd_t, saslauthd_tmp_t, saslauthd_tmp_t)
+#files_tmp_filetrans(saslauthd_t, saslauthd_tmp_t, file)
 
 manage_files_pattern(saslauthd_t, saslauthd_var_run_t, saslauthd_var_run_t)
 manage_sock_files_pattern(saslauthd_t, saslauthd_var_run_t, saslauthd_var_run_t)
@@ -50,12 +50,16 @@
 kernel_read_kernel_sysctls(saslauthd_t)
 kernel_read_system_state(saslauthd_t)
 
+#577519
+corecmd_exec_bin(saslauthd_t)
+
 corenet_all_recvfrom_unlabeled(saslauthd_t)
 corenet_all_recvfrom_netlabel(saslauthd_t)
 corenet_tcp_sendrecv_generic_if(saslauthd_t)
 corenet_tcp_sendrecv_generic_node(saslauthd_t)
 corenet_tcp_sendrecv_all_ports(saslauthd_t)
 corenet_tcp_connect_pop_port(saslauthd_t)
+corenet_tcp_connect_zarafa_port(saslauthd_t)
 corenet_sendrecv_pop_client_packets(saslauthd_t)
 
 dev_read_urand(saslauthd_t)
@@ -90,11 +94,13 @@
 # cjp: typeattribute doesnt work in conditionals
 auth_can_read_shadow_passwords(saslauthd_t)
 tunable_policy(`allow_saslauthd_read_shadow',`
+	allow saslauthd_t self:capability dac_override;
 	auth_tunable_read_shadow(saslauthd_t) 
 ')
 
 optional_policy(`
 	kerberos_keytab_template(saslauthd, saslauthd_t)
+	kerberos_manage_host_rcache(saslauthd_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sblim.fc serefpolicy-3.7.19/policy/modules/services/sblim.fc
--- nsaserefpolicy/policy/modules/services/sblim.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sblim.fc	2011-08-02 08:59:19.266523005 +0000
@@ -0,0 +1,6 @@
+
+/usr/sbin/gatherd		--	gen_context(system_u:object_r:sblim_gatherd_exec_t,s0)
+
+/usr/sbin/reposd		--	gen_context(system_u:object_r:sblim_reposd_exec_t,s0)
+
+/var/run/gather(/.*)?		gen_context(system_u:object_r:sblim_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sblim.if serefpolicy-3.7.19/policy/modules/services/sblim.if
--- nsaserefpolicy/policy/modules/services/sblim.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sblim.if	2012-04-17 12:51:55.960507978 +0000
@@ -0,0 +1,71 @@
+
+## <summary> policy for SBLIM Gatherer </summary>
+
+########################################
+## <summary>
+##	Transition to gatherd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`sblim_gatherd_domtrans',`
+	gen_require(`
+		type sblim_gatherd_t, sblim_gatherd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, sblim_gatherd_exec_t, sblim_gatherd_t)
+')
+
+
+########################################
+## <summary>
+##	Read gatherd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sblim_read_pid_files',`
+	gen_require(`
+		type sblim_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 sblim_var_run_t:file read_file_perms;
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an gatherd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sblim_admin',`
+	gen_require(`
+		type sblim_gatherd_t;
+		type sblim_reposd_t;
+		type sblim_var_run_t;
+	')
+
+	allow $1 sblim_gatherd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, sblim_gatherd_t)
+
+	allow $1 sblim_reposd_t:process { ptrace signal_perms };
+    ps_process_pattern($1, sblim_reposd_t)
+
+	files_search_pids($1)
+	admin_pattern($1, sblim_var_run_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sblim.te serefpolicy-3.7.19/policy/modules/services/sblim.te
--- nsaserefpolicy/policy/modules/services/sblim.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sblim.te	2011-09-20 16:05:12.265160002 +0000
@@ -0,0 +1,115 @@
+policy_module(sblim, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute sblim_domain;
+
+type sblim_gatherd_t, sblim_domain;
+type sblim_gatherd_exec_t;
+init_daemon_domain(sblim_gatherd_t, sblim_gatherd_exec_t)
+
+type sblim_reposd_t, sblim_domain;
+type sblim_reposd_exec_t;
+init_daemon_domain(sblim_reposd_t, sblim_reposd_exec_t)
+
+type sblim_var_run_t;
+files_pid_file(sblim_var_run_t)
+
+########################################
+#
+# sblim_gatherd local policy
+#
+
+#needed by ps
+allow sblim_gatherd_t self:capability { sys_ptrace kill dac_override };
+allow sblim_gatherd_t self:process signal;
+
+allow sblim_gatherd_t self:fifo_file rw_fifo_file_perms;
+allow sblim_gatherd_t self:unix_stream_socket create_stream_socket_perms;
+
+kernel_read_fs_sysctls(sblim_gatherd_t)
+kernel_read_kernel_sysctls(sblim_gatherd_t)
+
+corecmd_exec_bin(sblim_gatherd_t)
+corecmd_exec_shell(sblim_gatherd_t)
+
+corenet_tcp_connect_repository_port(sblim_gatherd_t)
+
+dev_read_rand(sblim_gatherd_t)
+dev_read_urand(sblim_gatherd_t)
+
+domain_read_all_domains_state(sblim_gatherd_t)
+
+fs_getattr_all_fs(sblim_gatherd_t)
+
+term_getattr_pty_fs(sblim_gatherd_t)
+
+init_read_utmp(sblim_gatherd_t)
+
+userdom_signull_unpriv_users(sblim_gatherd_t)
+
+optional_policy(`
+    locallogin_signull(sblim_gatherd_t)
+')
+
+optional_policy(`
+    rpc_search_nfs_state_data(sblim_gatherd_t)
+')
+
+optional_policy(`
+	ssh_signull(sblim_gatherd_t)
+    sysnet_dns_name_resolve(sblim_gatherd_t)
+')
+
+optional_policy(`
+	virt_stream_connect(sblim_gatherd_t)
+	virt_getattr_exec(sblim_gatherd_t)
+')
+
+optional_policy(`
+    xen_stream_connect(sblim_gatherd_t)
+    xen_stream_connect_xenstore(sblim_gatherd_t)
+')
+
+optional_policy(`
+	unconfined_domain(sblim_gatherd_t)
+')
+
+#######################################
+#
+# sblim_reposd local policy
+#
+
+domtrans_pattern(sblim_gatherd_t, sblim_reposd_exec_t, sblim_reposd_t)
+
+corenet_tcp_bind_all_nodes(sblim_reposd_t)
+corenet_tcp_bind_repository_port(sblim_reposd_t)
+
+optional_policy(`
+    unconfined_domain(sblim_reposd_t)
+')
+
+######################################
+#
+# sblim_domain local policy
+#
+
+allow sblim_domain self:tcp_socket create_stream_socket_perms;
+
+manage_dirs_pattern(sblim_domain, sblim_var_run_t, sblim_var_run_t)
+manage_files_pattern(sblim_domain, sblim_var_run_t, sblim_var_run_t)
+manage_sock_files_pattern(sblim_domain, sblim_var_run_t, sblim_var_run_t)
+
+kernel_read_network_state(sblim_domain)
+kernel_read_system_state(sblim_domain)
+
+dev_read_sysfs(sblim_domain)
+
+logging_send_syslog_msg(sblim_domain)
+
+files_read_etc_files(sblim_domain)
+
+miscfiles_read_localization(sblim_domain)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sendmail.fc serefpolicy-3.7.19/policy/modules/services/sendmail.fc
--- nsaserefpolicy/policy/modules/services/sendmail.fc	2011-03-17 07:21:21.811851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sendmail.fc	2011-03-17 07:21:04.358851002 +0000
@@ -1,4 +1,6 @@
 
+/etc/rc\.d/init\.d/sendmail --  gen_context(system_u:object_r:sendmail_initrc_exec_t,s0)
+
 /var/log/sendmail\.st		--	gen_context(system_u:object_r:sendmail_log_t,s0)
 /var/log/mail(/.*)?			gen_context(system_u:object_r:sendmail_log_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sendmail.if serefpolicy-3.7.19/policy/modules/services/sendmail.if
--- nsaserefpolicy/policy/modules/services/sendmail.if	2011-03-17 07:21:21.735851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sendmail.if	2011-03-17 07:21:04.265851001 +0000
@@ -51,10 +51,24 @@
 	')
 
 	mta_sendmail_domtrans($1, sendmail_t)
+')
+
+#######################################
+## <summary>
+##  Execute sendmail in the sendmail domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`sendmail_initrc_domtrans', `
+    gen_require(`
+        type sendmail_initrc_exec_t;
+    ')
 
-	allow sendmail_t $1:fd use;
-	allow sendmail_t $1:fifo_file rw_file_perms;
-	allow sendmail_t $1:process sigchld;
+    init_labeled_script_domtrans($1, sendmail_initrc_exec_t)
 ')
 
 ########################################
@@ -152,7 +166,7 @@
 		type sendmail_t;
 	')
 
-	allow $1 sendmail_t:unix_stream_socket { getattr read write ioctl };
+	allow $1 sendmail_t:unix_stream_socket rw_socket_perms;
 ')
 
 ########################################
@@ -171,7 +185,7 @@
 		type sendmail_t;
 	')
 
-	dontaudit $1 sendmail_t:unix_stream_socket { getattr read write ioctl };
+	dontaudit $1 sendmail_t:unix_stream_socket rw_socket_perms;
 ')
 
 ########################################
@@ -277,3 +291,70 @@
 	sendmail_domtrans_unconfined($1)
 	role $2 types unconfined_sendmail_t;
 ')
+
+########################################
+## <summary>
+##	Execute sendmail in the unconfined sendmail domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sendmail_domtrans_unconfined',`
+	gen_require(`
+		type unconfined_sendmail_t, sendmail_exec_t;
+	')
+
+	domtrans_pattern($1, sendmail_exec_t, unconfined_sendmail_t)
+')
+
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an sendmail environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`sendmail_admin',`
+	gen_require(`
+		type sendmail_t, sendmail_initrc_exec_t, sendmail_log_t; 
+		type sendmail_tmp_t, sendmail_var_run_t, unconfined_sendmail_t;
+		type mail_spool_t;
+	')
+
+	allow $1 sendmail_t:process { ptrace signal_perms };
+	ps_process_pattern($1, sendmail_t)
+
+	allow $1 unconfined_sendmail_t:process { ptrace signal_perms };
+	ps_process_pattern($1, unconfined_sendmail_t)
+
+    init_labeled_script_domtrans($1, sendmail_initrc_exec_t)
+    domain_system_change_exemption($1)
+    role_transition $2 sendmail_initrc_exec_t system_r;
+    allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, sendmail_log_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, sendmail_tmp_t)
+
+	files_search_pids($1)
+	admin_pattern($1, sendmail_var_run_t)
+
+	files_search_spool($1)
+	admin_pattern($1, mail_spool_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sendmail.te serefpolicy-3.7.19/policy/modules/services/sendmail.te
--- nsaserefpolicy/policy/modules/services/sendmail.te	2011-03-17 07:21:22.132851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sendmail.te	2012-01-25 17:05:48.078244938 +0000
@@ -20,6 +20,9 @@
 mta_mailserver_delivery(sendmail_t)
 mta_mailserver_sender(sendmail_t)
 
+type sendmail_initrc_exec_t;
+init_script_file(sendmail_initrc_exec_t)
+
 type unconfined_sendmail_t;
 application_domain(unconfined_sendmail_t, sendmail_exec_t)
 role system_r types unconfined_sendmail_t;
@@ -30,7 +33,7 @@
 #
 
 allow sendmail_t self:capability { dac_override setuid setgid net_bind_service sys_nice chown sys_tty_config };
-allow sendmail_t self:process { setrlimit signal signull };
+allow sendmail_t self:process { setsched setpgid setrlimit signal signull };
 allow sendmail_t self:fifo_file rw_fifo_file_perms;
 allow sendmail_t self:unix_stream_socket create_stream_socket_perms;
 allow sendmail_t self:unix_dgram_socket create_socket_perms;
@@ -72,6 +75,7 @@
 fs_rw_anon_inodefs_files(sendmail_t)
 
 term_dontaudit_use_console(sendmail_t)
+term_dontaudit_use_generic_ptys(sendmail_t)
 
 # for piping mail to a command
 corecmd_exec_shell(sendmail_t)
@@ -84,12 +88,14 @@
 files_search_spool(sendmail_t)
 # for piping mail to a command
 files_read_etc_runtime_files(sendmail_t)
+files_read_all_tmp_files(sendmail_t)
 
 init_use_fds(sendmail_t)
 init_use_script_ptys(sendmail_t)
 # sendmail wants to read /var/run/utmp if the controlling tty is /dev/console
 init_read_utmp(sendmail_t)
 init_dontaudit_write_utmp(sendmail_t)
+init_rw_script_tmp_files(sendmail_t)
 
 auth_use_nsswitch(sendmail_t)
 
@@ -103,7 +109,7 @@
 miscfiles_read_localization(sendmail_t)
 
 userdom_dontaudit_use_unpriv_user_fds(sendmail_t)
-userdom_dontaudit_search_user_home_dirs(sendmail_t)
+userdom_read_user_home_content_files(sendmail_t)
 
 mta_read_config(sendmail_t)
 mta_etc_filetrans_aliases(sendmail_t)
@@ -115,6 +121,10 @@
 mta_sendmail_exec(sendmail_t)
 
 optional_policy(`
+	amanda_append_lib_files(sendmail_t)
+')
+
+optional_policy(`
 	cron_read_pipes(sendmail_t)
 ')
 
@@ -133,6 +143,7 @@
 
 optional_policy(`
 	fail2ban_read_lib_files(sendmail_t)
+	fail2ban_rw_stream_sockets(sendmail_t)
 ')
 
 optional_policy(`
@@ -148,7 +159,10 @@
 ')
 
 optional_policy(`
+	postfix_domtrans_postdrop(sendmail_t)
 	postfix_domtrans_master(sendmail_t)
+	postfix_domtrans_postqueue(sendmail_t)
+	postfix_rw_local_pipes(sendmail_t)
 	postfix_read_config(sendmail_t)
 	postfix_search_spool(sendmail_t)
 ')
@@ -163,10 +177,18 @@
 ')
 
 optional_policy(`
+       dovecot_dontaudit_rw_tmp_files(sendmail_t)
+')
+
+optional_policy(`
 	sasl_connect(sendmail_t)
 ')
 
 optional_policy(`
+	spamd_stream_connect(sendmail_t)
+')
+
+optional_policy(`
 	udev_read_db(sendmail_t)
 ')
 
@@ -182,5 +204,6 @@
 
 optional_policy(`
 	mta_etc_filetrans_aliases(unconfined_sendmail_t)
-	unconfined_domain(unconfined_sendmail_t)
+	unconfined_domain_noaudit(unconfined_sendmail_t)
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/setroubleshoot.fc serefpolicy-3.7.19/policy/modules/services/setroubleshoot.fc
--- nsaserefpolicy/policy/modules/services/setroubleshoot.fc	2011-03-17 07:21:20.971851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/setroubleshoot.fc	2011-03-17 07:21:03.410851001 +0000
@@ -5,3 +5,5 @@
 /var/log/setroubleshoot(/.*)?		gen_context(system_u:object_r:setroubleshoot_var_log_t,s0)
 
 /var/lib/setroubleshoot(/.*)?		gen_context(system_u:object_r:setroubleshoot_var_lib_t,s0)
+
+/usr/share/setroubleshoot/SetroubleshootFixit\.py* 	--	gen_context(system_u:object_r:setroubleshoot_fixit_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/setroubleshoot.if serefpolicy-3.7.19/policy/modules/services/setroubleshoot.if
--- nsaserefpolicy/policy/modules/services/setroubleshoot.if	2011-03-17 07:21:21.205851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/setroubleshoot.if	2011-08-10 18:18:06.444523004 +0000
@@ -16,8 +16,8 @@
 	')
 
 	files_search_pids($1)
-	allow $1 setroubleshoot_var_run_t:sock_file write;
-	allow $1 setroubleshootd_t:unix_stream_socket connectto;
+	stream_connect_pattern($1, setroubleshoot_var_run_t, setroubleshoot_var_run_t, setroubleshootd_t)
+	allow $1 setroubleshoot_var_run_t:sock_file read;
 ')
 
 ########################################
@@ -36,6 +36,118 @@
 		type setroubleshootd_t, setroubleshoot_var_run_t;
 	')
 
-	dontaudit $1 setroubleshoot_var_run_t:sock_file write;
+	dontaudit $1 setroubleshoot_var_run_t:sock_file rw_sock_file_perms;
 	dontaudit $1 setroubleshootd_t:unix_stream_socket connectto;
 ')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	setroubleshoot over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`setroubleshoot_dbus_chat',`
+	gen_require(`
+		type setroubleshootd_t;
+		class dbus send_msg;
+	')
+
+	allow $1 setroubleshootd_t:dbus send_msg;
+	allow setroubleshootd_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	dontaudit send and receive messages from
+##	setroubleshoot over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`setroubleshoot_dontaudit_dbus_chat',`
+	gen_require(`
+		type setroubleshootd_t;
+		class dbus send_msg;
+	')
+
+	dontaudit $1 setroubleshootd_t:dbus send_msg;
+	dontaudit setroubleshootd_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	setroubleshoot over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`setroubleshoot_dbus_chat_fixit',`
+	gen_require(`
+		type setroubleshoot_fixit_t;
+		class dbus send_msg;
+	')
+
+	allow $1 setroubleshoot_fixit_t:dbus send_msg;
+	allow setroubleshoot_fixit_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Dontaudit read/write to a setroubleshoot leaked sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`setroubleshoot_fixit_dontaudit_leaks',`
+	gen_require(`
+		type setroubleshoot_fixit_t;
+	')
+
+	dontaudit $1 setroubleshoot_fixit_t:unix_dgram_socket { read write };
+	dontaudit $1 setroubleshoot_fixit_t:unix_stream_socket { read write };
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an setroubleshoot environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`setroubleshoot_admin',`
+	gen_require(`
+		type setroubleshootd_t, setroubleshoot_var_log_t;
+		type setroubleshoot_var_lib_t, setroubleshoot_var_run_t;
+	')
+
+	allow $1 setroubleshootd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, setroubleshootd_t)
+		
+	logging_list_logs($1)
+	admin_pattern($1, setroubleshoot_var_log_t)
+
+	files_list_var_lib($1)
+	admin_pattern($1, setroubleshoot_var_lib_t)
+
+	files_list_pids($1)
+	admin_pattern($1, setroubleshoot_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/setroubleshoot.te serefpolicy-3.7.19/policy/modules/services/setroubleshoot.te
--- nsaserefpolicy/policy/modules/services/setroubleshoot.te	2011-03-17 07:21:21.521851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/setroubleshoot.te	2012-06-18 09:04:57.169883532 +0000
@@ -11,6 +11,10 @@
 domain_type(setroubleshootd_t)
 init_daemon_domain(setroubleshootd_t, setroubleshootd_exec_t)
 
+type setroubleshoot_fixit_t;
+type setroubleshoot_fixit_exec_t;
+dbus_system_domain(setroubleshoot_fixit_t, setroubleshoot_fixit_exec_t)
+
 type setroubleshoot_var_lib_t;
 files_type(setroubleshoot_var_lib_t)
 
@@ -27,8 +31,10 @@
 # setroubleshootd local policy
 #
 
-allow setroubleshootd_t self:capability { dac_override sys_tty_config };
-allow setroubleshootd_t self:process { signull signal getattr getsched };
+allow setroubleshootd_t self:capability { dac_override sys_nice sys_tty_config };
+allow setroubleshootd_t self:process { getattr getsched setsched sigkill signull signal };
+# if bad library causes setroubleshoot to require these, we want to give it so setroubleshoot can continue to run
+allow setroubleshootd_t self:process { execmem execstack };
 allow setroubleshootd_t self:fifo_file rw_fifo_file_perms;
 allow setroubleshootd_t self:tcp_socket create_stream_socket_perms;
 allow setroubleshootd_t self:unix_stream_socket { create_stream_socket_perms connectto };
@@ -46,16 +52,21 @@
 logging_log_filetrans(setroubleshootd_t, setroubleshoot_var_log_t, { file dir })
 
 # pid file
+manage_dirs_pattern(setroubleshootd_t, setroubleshoot_var_run_t, setroubleshoot_var_run_t)
 manage_files_pattern(setroubleshootd_t, setroubleshoot_var_run_t, setroubleshoot_var_run_t)
 manage_sock_files_pattern(setroubleshootd_t, setroubleshoot_var_run_t, setroubleshoot_var_run_t)
-files_pid_filetrans(setroubleshootd_t, setroubleshoot_var_run_t, { file sock_file })
+files_pid_filetrans(setroubleshootd_t, setroubleshoot_var_run_t, { file sock_file dir })
 
 kernel_read_kernel_sysctls(setroubleshootd_t)
 kernel_read_system_state(setroubleshootd_t)
+kernel_read_net_sysctls(setroubleshootd_t)
 kernel_read_network_state(setroubleshootd_t)
+kernel_dontaudit_list_all_proc(setroubleshootd_t)
+kernel_read_unlabeled_state(setroubleshootd_t)
 
 corecmd_exec_bin(setroubleshootd_t)
 corecmd_exec_shell(setroubleshootd_t)
+corecmd_read_all_executables(setroubleshootd_t)
 
 corenet_all_recvfrom_unlabeled(setroubleshootd_t)
 corenet_all_recvfrom_netlabel(setroubleshootd_t)
@@ -68,16 +79,27 @@
 
 dev_read_urand(setroubleshootd_t)
 dev_read_sysfs(setroubleshootd_t)
+dev_getattr_all_blk_files(setroubleshootd_t)
+dev_getattr_all_chr_files(setroubleshootd_t)
 
 domain_dontaudit_search_all_domains_state(setroubleshootd_t)
+domain_signull_all_domains(setroubleshootd_t)
 
 files_read_usr_files(setroubleshootd_t)
 files_read_etc_files(setroubleshootd_t)
-files_getattr_all_dirs(setroubleshootd_t)
+files_list_all(setroubleshootd_t)
 files_getattr_all_files(setroubleshootd_t)
+files_getattr_all_pipes(setroubleshootd_t)
+files_getattr_all_sockets(setroubleshootd_t)
+files_read_all_symlinks(setroubleshootd_t)
+files_read_mnt_files(setroubleshootd_t)
 
 fs_getattr_all_dirs(setroubleshootd_t)
 fs_getattr_all_files(setroubleshootd_t)
+fs_read_fusefs_symlinks(setroubleshootd_t)
+fs_list_inotifyfs(setroubleshootd_t)
+fs_dontaudit_read_nfs_files(setroubleshootd_t)
+fs_dontaudit_read_cifs_files(setroubleshootd_t)
 
 selinux_get_enforce_mode(setroubleshootd_t)
 selinux_validate_context(setroubleshootd_t)
@@ -90,27 +112,88 @@
 init_read_utmp(setroubleshootd_t)
 init_dontaudit_write_utmp(setroubleshootd_t)
 
+libs_exec_ld_so(setroubleshootd_t)
+
 miscfiles_read_localization(setroubleshootd_t)
 
 locallogin_dontaudit_use_fds(setroubleshootd_t)
 
+logging_send_audit_msgs(setroubleshootd_t)
 logging_send_syslog_msg(setroubleshootd_t)
 logging_stream_connect_dispatcher(setroubleshootd_t)
 
+modutils_read_module_config(setroubleshootd_t)
+
 seutil_read_config(setroubleshootd_t)
 seutil_read_file_contexts(setroubleshootd_t)
-
-sysnet_read_config(setroubleshootd_t)
+seutil_read_bin_policy(setroubleshootd_t)
 
 userdom_dontaudit_read_user_home_content_files(setroubleshootd_t)
 
 optional_policy(`
-	dbus_system_bus_client(setroubleshootd_t)
-	dbus_connect_system_bus(setroubleshootd_t)
+	locate_read_lib_files(setroubleshootd_t)
 ')
 
 optional_policy(`
+	dbus_system_domain(setroubleshootd_t, setroubleshootd_exec_t)
+')
+
+optional_policy(`
+	rpm_exec(setroubleshootd_t)
+	rpm_signull(setroubleshootd_t)
 	rpm_read_db(setroubleshootd_t)
 	rpm_dontaudit_manage_db(setroubleshootd_t)
 	rpm_use_script_fds(setroubleshootd_t)
 ')
+
+########################################
+#
+# setroubleshoot_fixit local policy
+#
+allow setroubleshoot_fixit_t self:capability sys_nice;
+allow setroubleshoot_fixit_t self:process { setsched getsched };
+allow setroubleshoot_fixit_t self:fifo_file rw_fifo_file_perms;
+allow setroubleshoot_fixit_t self:unix_dgram_socket create_socket_perms;
+
+allow setroubleshoot_fixit_t setroubleshootd_t:process signull;
+
+setroubleshoot_dbus_chat(setroubleshoot_fixit_t)
+setroubleshoot_stream_connect(setroubleshoot_fixit_t)
+
+kernel_read_system_state(setroubleshoot_fixit_t)
+
+corecmd_exec_bin(setroubleshoot_fixit_t)
+corecmd_exec_shell(setroubleshoot_fixit_t)
+
+seutil_domtrans_setfiles(setroubleshoot_fixit_t)
+seutil_domtrans_setsebool(setroubleshoot_fixit_t)
+
+files_read_usr_files(setroubleshoot_fixit_t)
+files_read_etc_files(setroubleshoot_fixit_t)
+files_list_tmp(setroubleshoot_fixit_t)
+
+auth_use_nsswitch(setroubleshoot_fixit_t)
+
+logging_send_audit_msgs(setroubleshoot_fixit_t)
+logging_send_syslog_msg(setroubleshoot_fixit_t)
+
+miscfiles_read_localization(setroubleshoot_fixit_t)
+
+userdom_dontaudit_search_admin_dir(setroubleshoot_fixit_t)
+userdom_signull_unpriv_users(setroubleshoot_fixit_t)
+
+optional_policy(`
+	gnome_dontaudit_search_config(setroubleshoot_fixit_t)
+')
+
+optional_policy(`
+	rpm_signull(setroubleshoot_fixit_t)
+	rpm_read_db(setroubleshoot_fixit_t)
+	rpm_dontaudit_manage_db(setroubleshoot_fixit_t)
+	rpm_use_script_fds(setroubleshoot_fixit_t)
+')
+
+optional_policy(`
+	policykit_dbus_chat(setroubleshoot_fixit_t)
+	userdom_read_all_users_state(setroubleshoot_fixit_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sge.fc serefpolicy-3.7.19/policy/modules/services/sge.fc
--- nsaserefpolicy/policy/modules/services/sge.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sge.fc	2012-02-28 16:28:21.986229786 +0000
@@ -0,0 +1,6 @@
+
+/usr/bin/sge_execd	--	gen_context(system_u:object_r:sge_execd_exec_t,s0)
+/usr/bin/sge_shepherd  --  gen_context(system_u:object_r:sge_shepherd_exec_t,s0)
+
+/var/spool/gridengine(/.*)?       gen_context(system_u:object_r:sge_spool_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sge.if serefpolicy-3.7.19/policy/modules/services/sge.if
--- nsaserefpolicy/policy/modules/services/sge.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sge.if	2012-02-28 16:28:21.986229786 +0000
@@ -0,0 +1,2 @@
+## <summary>Policy for gridengine MPI jobs</summary>
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sge.te serefpolicy-3.7.19/policy/modules/services/sge.te
--- nsaserefpolicy/policy/modules/services/sge.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sge.te	2012-05-22 15:26:34.912833381 +0000
@@ -0,0 +1,197 @@
+policy_module(sge, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+## <p>
+## Allow sge to access nfs file systems.
+## </p>
+## </desc>
+gen_tunable(sge_use_nfs, false)
+
+## <desc>
+## <p>
+## Allow sge to connect to the network using any TCP port
+## </p>
+## </desc>
+gen_tunable(sge_domain_can_network_connect, false)
+
+attribute sge_domain;
+
+type sge_execd_t, sge_domain;
+type sge_execd_exec_t;
+init_daemon_domain(sge_execd_t, sge_execd_exec_t)
+
+type sge_spool_t;
+files_type(sge_spool_t)
+
+type sge_tmp_t;
+files_tmp_file(sge_tmp_t)
+
+type sge_shepherd_t, sge_domain;
+type sge_shepherd_exec_t;
+application_domain(sge_shepherd_t, sge_shepherd_exec_t)
+role system_r types sge_shepherd_t;
+
+type sge_job_t, sge_domain;
+type sge_job_exec_t;
+application_domain(sge_job_t, sge_job_exec_t)
+corecmd_shell_entry_type(sge_job_t)
+role system_r types sge_job_t;
+
+#######################################
+#
+# sge_execd local policy
+#
+
+allow sge_execd_t self:capability { dac_override setuid chown setgid };
+allow sge_execd_t self:process { setsched signal setpgid };
+
+allow sge_execd_t sge_shepherd_t:process signal;
+
+kernel_read_kernel_sysctls(sge_execd_t)
+
+dev_read_sysfs(sge_execd_t)
+
+files_exec_usr_files(sge_execd_t)
+files_search_spool(sge_execd_t)
+
+auth_use_nsswitch(sge_execd_t)
+
+init_read_utmp(sge_execd_t)
+
+optional_policy(`
+    sendmail_domtrans(sge_execd_t)
+')
+
+optional_policy(`
+	unconfined_domain(sge_execd_t)
+')
+
+######################################
+#
+# sge_shepherd local policy
+#
+
+allow sge_shepherd_t self:capability { setuid sys_nice chown kill setgid dac_override };
+allow sge_shepherd_t self:process { setsched setrlimit setpgid };
+allow sge_shepherd_t self:process signal_perms;
+
+domtrans_pattern(sge_execd_t, sge_shepherd_exec_t, sge_shepherd_t)
+
+kernel_read_sysctl(sge_shepherd_t)
+kernel_read_kernel_sysctls(sge_shepherd_t)
+
+dev_read_sysfs(sge_shepherd_t)
+
+fs_getattr_all_fs(sge_shepherd_t)
+
+optional_policy(`
+	mta_send_mail(sge_shepherd_t)
+')
+
+optional_policy(`
+    ssh_domtrans(sge_shepherd_t)
+')
+
+optional_policy(`
+    unconfined_domain(sge_shepherd_t)
+')
+
+#####################################
+#
+# sge_job local policy
+#
+
+allow sge_shepherd_t sge_job_t:process signal_perms;
+
+corecmd_shell_domtrans(sge_shepherd_t, sge_job_t)
+
+kernel_read_kernel_sysctls(sge_job_t)
+
+term_use_all_terms(sge_job_t)
+
+optional_policy(`
+	ssh_basic_client_template(sge_job, sge_job_t, system_r)
+	ssh_domtrans(sge_job_t)
+
+	allow sge_job_t sge_job_ssh_t:process sigkill;
+	allow sge_shepherd_t sge_job_ssh_t:process sigkill;
+
+	xserver_exec_xauth(sge_job_ssh_t)
+
+        tunable_policy(`sge_use_nfs',`
+            fs_list_auto_mountpoints(sge_job_ssh_t)
+            fs_manage_nfs_dirs(sge_job_ssh_t)
+            fs_manage_nfs_files(sge_job_ssh_t)
+            fs_read_nfs_symlinks(sge_job_ssh_t)
+        ')
+	')
+
+optional_policy(`
+	xserver_domtrans_xauth(sge_job_t)
+')
+
+optional_policy(`
+	unconfined_domain(sge_job_t)
+')
+
+#####################################
+#
+# sge_domain local policy
+#
+
+allow sge_domain self:fifo_file rw_fifo_file_perms;
+allow sge_domain self:tcp_socket create_stream_socket_perms;
+
+manage_dirs_pattern(sge_domain, sge_spool_t, sge_spool_t)
+manage_files_pattern(sge_domain, sge_spool_t, sge_spool_t)
+manage_lnk_files_pattern(sge_domain, sge_spool_t, sge_spool_t)
+
+manage_files_pattern(sge_domain, sge_tmp_t, sge_tmp_t)
+manage_dirs_pattern(sge_domain, sge_tmp_t, sge_tmp_t)
+files_tmp_filetrans(sge_domain, sge_tmp_t, { file dir })
+
+kernel_read_network_state(sge_domain)
+kernel_read_system_state(sge_domain)
+
+corecmd_exec_bin(sge_domain)
+corecmd_exec_shell(sge_domain)
+
+domain_read_all_domains_state(sge_domain)
+
+files_read_etc_files(sge_domain)
+files_read_usr_files(sge_domain)
+
+dev_read_urand(sge_domain)
+
+logging_send_syslog_msg(sge_domain)
+
+miscfiles_read_localization(sge_domain)
+
+tunable_policy(`sge_domain_can_network_connect',`
+    corenet_tcp_connect_all_ports(sge_domain)
+')
+
+tunable_policy(`sge_use_nfs',`
+    fs_list_auto_mountpoints(sge_domain)
+	fs_manage_nfs_dirs(sge_domain)
+	fs_manage_nfs_files(sge_domain)
+	fs_read_nfs_symlinks(sge_domain)
+	fs_exec_nfs_files(sge_domain)
+')
+
+optional_policy(`
+	sysnet_dns_name_resolve(sge_domain)
+')
+
+optional_policy(`
+    hostname_exec(sge_domain)
+')
+
+optional_policy(`
+	nslcd_stream_connect(sge_domain)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/smartmon.if serefpolicy-3.7.19/policy/modules/services/smartmon.if
--- nsaserefpolicy/policy/modules/services/smartmon.if	2011-03-17 07:21:21.132851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/smartmon.if	2011-03-17 07:21:03.632851003 +0000
@@ -15,6 +15,7 @@
 		type fsdaemon_tmp_t;
 	')
 
+	files_search_tmp($1)
 	allow $1 fsdaemon_tmp_t:file read_file_perms;
 ')
 
@@ -41,7 +42,7 @@
 		type fsdaemon_initrc_exec_t;
 	')
 
-	allow $1 fsdaemon_t:process { ptrace signal_perms getattr };
+	allow $1 fsdaemon_t:process { ptrace signal_perms };
 	ps_process_pattern($1, fsdaemon_t)
 
 	init_labeled_script_domtrans($1, fsdaemon_initrc_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/smartmon.te serefpolicy-3.7.19/policy/modules/services/smartmon.te
--- nsaserefpolicy/policy/modules/services/smartmon.te	2011-03-17 07:21:21.073851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/smartmon.te	2011-09-26 11:21:01.500160002 +0000
@@ -36,7 +36,7 @@
 # Local policy
 #
 
-allow fsdaemon_t self:capability { setpcap setgid sys_rawio sys_admin };
+allow fsdaemon_t self:capability { dac_override setpcap setgid sys_rawio sys_admin };
 dontaudit fsdaemon_t self:capability sys_tty_config;
 allow fsdaemon_t self:process { getcap setcap signal_perms };
 allow fsdaemon_t self:fifo_file rw_fifo_file_perms;
@@ -73,9 +73,11 @@
 files_read_etc_runtime_files(fsdaemon_t)
 # for config
 files_read_etc_files(fsdaemon_t)
+files_read_usr_files(fsdaemon_t)
 
 fs_getattr_all_fs(fsdaemon_t)
 fs_search_auto_mountpoints(fsdaemon_t)
+fs_read_removable_files(fsdaemon_t)
 
 mls_file_read_all_levels(fsdaemon_t)
 #mls_rangetrans_target(fsdaemon_t)
@@ -83,9 +85,14 @@
 storage_raw_read_fixed_disk(fsdaemon_t)
 storage_raw_write_fixed_disk(fsdaemon_t)
 storage_raw_read_removable_device(fsdaemon_t)
+storage_read_scsi_generic(fsdaemon_t)
+storage_write_scsi_generic(fsdaemon_t)
+storage_create_fixed_disk_dev(fsdaemon_t)
 
 term_dontaudit_search_ptys(fsdaemon_t)
 
+init_read_utmp(fsdaemon_t)
+
 libs_exec_ld_so(fsdaemon_t)
 libs_exec_lib_files(fsdaemon_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/smokeping.te serefpolicy-3.7.19/policy/modules/services/smokeping.te
--- nsaserefpolicy/policy/modules/services/smokeping.te	2011-03-17 07:21:22.274851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/smokeping.te	2011-03-17 07:21:05.008851000 +0000
@@ -24,6 +24,7 @@
 # smokeping local policy
 #
 
+dontaudit smokeping_t self:capability { dac_read_search dac_override };    
 allow smokeping_t self:fifo_file rw_fifo_file_perms;
 allow smokeping_t self:udp_socket create_socket_perms;
 allow smokeping_t self:unix_stream_socket create_stream_socket_perms;
@@ -45,6 +46,7 @@
 files_search_tmp(smokeping_t)
 
 auth_use_nsswitch(smokeping_t)
+auth_dontaudit_read_shadow(smokeping_t)
 
 logging_send_syslog_msg(smokeping_t)
 
@@ -65,6 +67,7 @@
 	allow httpd_smokeping_cgi_script_t self:udp_socket create_socket_perms;
 
 	manage_files_pattern(httpd_smokeping_cgi_script_t, smokeping_var_lib_t, smokeping_var_lib_t)
+	manage_dirs_pattern(httpd_smokeping_cgi_script_t, smokeping_var_lib_t, smokeping_var_lib_t)
 
 	getattr_files_pattern(httpd_smokeping_cgi_script_t, smokeping_var_run_t, smokeping_var_run_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/snmp.if serefpolicy-3.7.19/policy/modules/services/snmp.if
--- nsaserefpolicy/policy/modules/services/snmp.if	2011-03-17 07:21:20.962851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/snmp.if	2011-03-17 07:21:03.404851001 +0000
@@ -62,11 +62,71 @@
 		type snmpd_var_lib_t;
 	')
 
+	files_search_var_lib($1)
 	allow $1 snmpd_var_lib_t:dir list_dir_perms;
 	read_files_pattern($1, snmpd_var_lib_t, snmpd_var_lib_t)
 	read_lnk_files_pattern($1, snmpd_var_lib_t, snmpd_var_lib_t)
 ')
 
+######################################
+## <summary>
+##  Manage snmpd libraries directories
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`snmp_manage_var_lib_dirs',`
+    gen_require(`
+        type snmpd_var_lib_t;
+    ')
+
+    allow $1 snmpd_var_lib_t:dir manage_dir_perms;
+    files_var_lib_filetrans($1, snmpd_var_lib_t, dir)
+')
+
+#######################################
+## <summary>
+##  Append snmpd libraries.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`snmp_append_snmp_var_lib_files',`
+    gen_require(`
+        type snmpd_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    allow $1 snmpd_var_lib_t:dir list_dir_perms;
+    append_files_pattern($1, snmpd_var_lib_t, snmpd_var_lib_t)
+')
+
+#####################################
+## <summary>
+##  Manage snmpd libraries files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`snmp_manage_var_lib_files',`
+    gen_require(`
+        type snmpd_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    allow $1 snmpd_var_lib_t:dir list_dir_perms;
+    manage_files_pattern($1, snmpd_var_lib_t, snmpd_var_lib_t)
+')
+
 ########################################
 ## <summary>
 ##	dontaudit Read snmpd libraries.
@@ -83,7 +143,7 @@
 	')
 	dontaudit $1 snmpd_var_lib_t:dir list_dir_perms;
 	dontaudit $1 snmpd_var_lib_t:file read_file_perms;
-	dontaudit $1 snmpd_var_lib_t:lnk_file { getattr read };
+	dontaudit $1 snmpd_var_lib_t:lnk_file read_lnk_file_perms;
 ')
 
 ########################################
@@ -128,7 +188,7 @@
 		type snmpd_initrc_exec_t;
 	')
 
-	allow $1 snmpd_t:process { ptrace signal_perms getattr };
+	allow $1 snmpd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, snmpd_t)
 
 	init_labeled_script_domtrans($1, snmpd_initrc_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/snmp.te serefpolicy-3.7.19/policy/modules/services/snmp.te
--- nsaserefpolicy/policy/modules/services/snmp.te	2011-03-17 07:21:21.875851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/snmp.te	2012-07-17 10:18:53.784863242 +0000
@@ -25,14 +25,15 @@
 #
 # Local policy
 #
-allow snmpd_t self:capability { chown dac_override kill ipc_lock sys_ptrace net_admin sys_nice sys_tty_config };
+allow snmpd_t self:capability { chown dac_override kill ipc_lock setgid setuid sys_ptrace net_admin sys_nice sys_tty_config };
 dontaudit snmpd_t self:capability { sys_module sys_tty_config };
 allow snmpd_t self:process { signal_perms getsched setsched };
 allow snmpd_t self:fifo_file rw_fifo_file_perms;
 allow snmpd_t self:unix_dgram_socket create_socket_perms;
-allow snmpd_t self:unix_stream_socket create_stream_socket_perms;
 allow snmpd_t self:tcp_socket create_stream_socket_perms;
 allow snmpd_t self:udp_socket connected_stream_socket_perms;
+allow snmpd_t self:unix_stream_socket { create_stream_socket_perms connectto };
+
 
 allow snmpd_t snmpd_log_t:file manage_file_perms;
 logging_log_filetrans(snmpd_t, snmpd_log_t, file)
@@ -42,7 +43,7 @@
 manage_sock_files_pattern(snmpd_t, snmpd_var_lib_t, snmpd_var_lib_t)
 files_usr_filetrans(snmpd_t, snmpd_var_lib_t, file)
 files_var_filetrans(snmpd_t, snmpd_var_lib_t, { file dir sock_file })
-files_var_lib_filetrans(snmpd_t, snmpd_var_lib_t, file)
+files_var_lib_filetrans(snmpd_t, snmpd_var_lib_t, { dir file })
 
 manage_files_pattern(snmpd_t, snmpd_var_run_t, snmpd_var_run_t)
 files_pid_filetrans(snmpd_t, snmpd_var_run_t, file)
@@ -98,6 +99,7 @@
 
 storage_dontaudit_read_fixed_disk(snmpd_t)
 storage_dontaudit_read_removable_device(snmpd_t)
+storage_dontaudit_write_removable_device(snmpd_t)
 
 auth_use_nsswitch(snmpd_t)
 auth_read_all_dirs_except_shadow(snmpd_t)
@@ -141,6 +143,10 @@
 ')
 
 optional_policy(`
+    ricci_stream_connect_modclusterd(snmpd_t)
+')
+
+optional_policy(`
 	rpc_search_nfs_state_data(snmpd_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/snort.if serefpolicy-3.7.19/policy/modules/services/snort.if
--- nsaserefpolicy/policy/modules/services/snort.if	2011-03-17 07:21:21.577851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/snort.if	2011-03-17 07:21:04.067851001 +0000
@@ -5,9 +5,9 @@
 ##	Execute a domain transition to run snort.
 ## </summary>
 ## <param name="domain">
-## <summary>
+## 	<summary>
 ##	Domain allowed to transition.
-## </summary>
+## 	</summary>
 ## </param>
 #
 interface(`snort_domtrans',`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/snort.te serefpolicy-3.7.19/policy/modules/services/snort.te
--- nsaserefpolicy/policy/modules/services/snort.te	2011-03-17 07:21:20.824851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/snort.te	2011-03-17 07:21:03.232851003 +0000
@@ -62,6 +62,7 @@
 kernel_read_proc_symlinks(snort_t)
 kernel_request_load_module(snort_t)
 kernel_dontaudit_read_system_state(snort_t)
+kernel_read_network_state(snort_t)
 
 corenet_all_recvfrom_unlabeled(snort_t)
 corenet_all_recvfrom_netlabel(snort_t)
@@ -78,8 +79,7 @@
 dev_read_sysfs(snort_t)
 dev_read_rand(snort_t)
 dev_read_urand(snort_t)
-# Red Hat bug 559861: Snort wants read, write, and ioctl on /dev/usbmon
-# Snort uses libpcap, which can also monitor USB traffic. Maybe this is a side effect?
+dev_read_usbmon_dev(snort_t)
 dev_rw_generic_usb_dev(snort_t)
 
 domain_use_interactive_fds(snort_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/spamassassin.fc serefpolicy-3.7.19/policy/modules/services/spamassassin.fc
--- nsaserefpolicy/policy/modules/services/spamassassin.fc	2011-03-17 07:21:21.455851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/spamassassin.fc	2012-05-08 20:23:08.197503514 +0000
@@ -1,15 +1,53 @@
-HOME_DIR/\.spamassassin(/.*)?	gen_context(system_u:object_r:spamassassin_home_t,s0)
+HOME_DIR/\.spamassassin(/.*)?	gen_context(system_u:object_r:spamc_home_t,s0)
+/root/\.spamassassin(/.*)?	gen_context(system_u:object_r:spamc_home_t,s0)
+
+/etc/rc\.d/init\.d/spamd	--	gen_context(system_u:object_r:spamd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/spamassassin	--  gen_context(system_u:object_r:spamd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/mimedefang.*	--	gen_context(system_u:object_r:spamd_initrc_exec_t,s0)
 
 /usr/bin/sa-learn	--	gen_context(system_u:object_r:spamc_exec_t,s0)
-/usr/bin/spamassassin	--	gen_context(system_u:object_r:spamassassin_exec_t,s0)
+/usr/bin/spamassassin	--	gen_context(system_u:object_r:spamc_exec_t,s0)
 /usr/bin/spamc		--	gen_context(system_u:object_r:spamc_exec_t,s0)
 /usr/bin/spamd		--	gen_context(system_u:object_r:spamd_exec_t,s0)
 
 /usr/sbin/spamd		--	gen_context(system_u:object_r:spamd_exec_t,s0)
+/usr/bin/mimedefang     --  gen_context(system_u:object_r:spamd_exec_t,s0)
+/usr/bin/mimedefang-multiplexor --	gen_context(system_u:object_r:spamd_exec_t,s0)
 
 /var/lib/spamassassin(/.*)?	gen_context(system_u:object_r:spamd_var_lib_t,s0)
+/var/lib/spamassassin/compiled(/.*)?	gen_context(system_u:object_r:spamd_compiled_t,s0)
+
+/var/log/spamd\.log	--	gen_context(system_u:object_r:spamd_log_t,s0)
+/var/log/mimedefang	--	gen_context(system_u:object_r:spamd_log_t,s0)
 
 /var/run/spamassassin(/.*)?	gen_context(system_u:object_r:spamd_var_run_t,s0)
 
 /var/spool/spamassassin(/.*)?	gen_context(system_u:object_r:spamd_spool_t,s0)
 /var/spool/spamd(/.*)?		gen_context(system_u:object_r:spamd_spool_t,s0)
+/var/spool/MD-Quarantine(/.*)?	gen_context(system_u:object_r:spamd_var_run_t,s0)
+/var/spool/MIMEDefang(/.*)?	gen_context(system_u:object_r:spamd_var_run_t,s0)
+
+
+/root/\.razor(/.*)?     gen_context(system_u:object_r:spamc_home_t,s0)
+HOME_DIR/\.razor(/.*)?      gen_context(system_u:object_r:spamc_home_t,s0)
+
+/etc/razor(/.*)?        gen_context(system_u:object_r:spamd_etc_t,s0)
+
+/usr/bin/razor.*    --  gen_context(system_u:object_r:spamc_exec_t,s0)
+
+/var/lib/razor(/.*)?        gen_context(system_u:object_r:spamd_var_lib_t,s0)
+/var/log/razor-agent\.log --    gen_context(system_u:object_r:spamd_log_t,s0)
+
+/etc/pyzor(/.*)?        gen_context(system_u:object_r:spamd_etc_t, s0)
+/etc/rc\.d/init\.d/pyzord   --  gen_context(system_u:object_r:spamd_initrc_exec_t,s0)
+
+HOME_DIR/\.pyzor(/.*)?      gen_context(system_u:object_r:spamc_home_t,s0)
+HOME_DIR/\.spamd(/.*)?      gen_context(system_u:object_r:spamc_home_t,s0)
+/root/\.pyzor(/.*)?     gen_context(system_u:object_r:spamc_home_t,s0)
+/root/\.spamd(/.*)?     gen_context(system_u:object_r:spamc_home_t,s0)
+
+/usr/bin/pyzor     --  gen_context(system_u:object_r:spamc_exec_t,s0)
+/usr/bin/pyzord        --  gen_context(system_u:object_r:spamd_exec_t,s0)
+
+/var/lib/pyzord(/.*)?       gen_context(system_u:object_r:spamd_var_lib_t,s0)
+/var/log/pyzord\.log    --  gen_context(system_u:object_r:spamd_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/spamassassin.if serefpolicy-3.7.19/policy/modules/services/spamassassin.if
--- nsaserefpolicy/policy/modules/services/spamassassin.if	2011-03-17 07:21:20.931851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/spamassassin.if	2011-12-05 14:30:14.069682587 +0000
@@ -14,6 +14,7 @@
 ##	User domain for the role
 ##	</summary>
 ## </param>
+## <rolecap/>
 #
 interface(`spamassassin_role',`
 	gen_require(`
@@ -25,9 +26,13 @@
 	role $1 types { spamc_t spamassassin_t };
 
 	domtrans_pattern($2, spamassassin_exec_t, spamassassin_t)
+
+	allow $2 spamassassin_t:process { ptrace signal_perms };
 	ps_process_pattern($2, spamassassin_t)
 
 	domtrans_pattern($2, spamc_exec_t, spamc_t)
+
+	allow $2 spamc_t:process { ptrace signal_perms };
 	ps_process_pattern($2, spamc_t)
 
 	manage_dirs_pattern($2, spamassassin_home_t, spamassassin_home_t)
@@ -111,6 +116,46 @@
 	')
 
 	domtrans_pattern($1, spamc_exec_t, spamc_t)
+	allow $1 spamc_exec_t:file ioctl;
+')
+
+########################################
+## <summary>
+##	Send kill signal to spamassassin client
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`spamassassin_kill_client',`
+	gen_require(`
+		type spamc_t;
+	')
+
+	allow $1 spamc_t:process sigkill;
+')
+
+########################################
+## <summary>
+##	Manage spamc home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`spamassassin_manage_home_client',`
+	gen_require(`
+		type spamc_home_t;
+	')
+
+	userdom_search_user_home_dirs($1)
+	manage_dirs_pattern($1, spamc_home_t, spamc_home_t)
+	manage_files_pattern($1, spamc_home_t, spamc_home_t)
+	manage_lnk_files_pattern($1, spamc_home_t, spamc_home_t)
 ')
 
 ########################################
@@ -166,7 +211,9 @@
 	')
 
 	files_search_var_lib($1)
+	list_dirs_pattern($1, spamd_var_lib_t, spamd_var_lib_t)
 	read_files_pattern($1, spamd_var_lib_t, spamd_var_lib_t)
+	read_lnk_files_pattern($1, spamd_var_lib_t, spamd_var_lib_t)
 ')
 
 ########################################
@@ -204,6 +251,7 @@
 		type spamd_tmp_t;
 	')
 
+	files_search_tmp($1)
 	allow $1 spamd_tmp_t:file read_file_perms;
 ')
 
@@ -223,5 +271,91 @@
 		type spamd_tmp_t;
 	')
 
-	dontaudit $1 spamd_tmp_t:sock_file getattr;
+	dontaudit $1 spamd_tmp_t:sock_file getattr_sock_file_perms;
+')
+
+########################################
+## <summary>
+##	Connect to run spamd.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to connect.
+##	</summary>
+## </param>
+#
+interface(`spamd_stream_connect',`
+	gen_require(`
+		type spamd_t, spamd_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, spamd_var_run_t, spamd_var_run_t, spamd_t)
+')
+
+#######################################
+## <summary>
+##  Read spamd pid file.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to connect.
+##  </summary>
+## </param>
+#
+interface(`spamassassin_read_pid_files',`
+    gen_require(`
+        type spamd_var_run_t;
+    ')
+
+    files_search_pids($1)
+    read_files_pattern($1, spamd_var_run_t, spamd_var_run_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an spamassassin environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed to manage the spamassassin domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`spamassassin_spamd_admin',`
+	gen_require(`
+		type spamd_t, spamd_tmp_t, spamd_log_t;
+		type spamd_spool_t, spamd_var_lib_t, spamd_var_run_t;
+		type spamd_initrc_exec_t;
+	')
+
+	allow $1 spamd_t:process { ptrace signal_perms getattr };
+	read_files_pattern($1, spamd_t, spamd_t)
+		
+	init_labeled_script_domtrans($1, spamd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 spamd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_list_tmp($1)
+	admin_pattern($1, spamd_tmp_t)
+
+	logging_list_logs($1)
+	admin_pattern($1, spamd_log_t)
+
+	files_list_spool($1)
+	admin_pattern($1, spamd_spool_t)
+
+	files_list_var_lib($1)
+	admin_pattern($1, spamd_var_lib_t)
+
+	files_list_pids($1)
+	admin_pattern($1, spamd_var_run_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/spamassassin.te serefpolicy-3.7.19/policy/modules/services/spamassassin.te
--- nsaserefpolicy/policy/modules/services/spamassassin.te	2011-03-17 07:21:21.716851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/spamassassin.te	2011-11-21 11:06:10.696101626 +0000
@@ -20,6 +20,35 @@
 ## </desc>
 gen_tunable(spamd_enable_home_dirs, true)
 
+ifdef(`distro_redhat',`
+# spamassassin client executable
+type spamc_t;
+type spamc_exec_t;
+application_domain(spamc_t, spamc_exec_t)
+role system_r types spamc_t;
+
+type spamd_etc_t;
+files_config_file(spamd_etc_t)
+
+typealias spamc_exec_t  alias spamassassin_exec_t;
+typealias spamc_t alias spamassassin_t;
+
+type spamc_home_t;
+userdom_user_home_content(spamc_home_t)
+typealias spamc_home_t alias { spamassassin_home_t user_spamassassin_home_t staff_spamassassin_home_t sysadm_spamassassin_home_t };
+typealias spamc_home_t alias { auditadm_spamassassin_home_t secadm_spamassassin_home_t };
+typealias spamc_home_t alias { user_spamc_home_t staff_spamc_home_t sysadm_spamc_home_t };
+typealias spamc_home_t alias { auditadm_spamc_home_t secadm_spamc_home_t };
+
+type spamc_tmp_t;
+files_tmp_file(spamc_tmp_t)
+typealias spamc_tmp_t alias spamassassin_tmp_t;
+typealias spamc_tmp_t alias { user_spamassassin_tmp_t staff_spamassassin_tmp_t sysadm_spamassassin_tmp_t };
+typealias spamc_tmp_t alias { auditadm_spamassassin_tmp_t secadm_spamassassin_tmp_t };
+
+typealias spamc_tmp_t alias { user_spamc_tmp_t staff_spamc_tmp_t sysadm_spamc_tmp_t };
+typealias spamc_tmp_t alias { auditadm_spamc_tmp_t secadm_spamc_tmp_t };
+', `
 type spamassassin_t;
 type spamassassin_exec_t;
 typealias spamassassin_t alias { user_spamassassin_t staff_spamassassin_t sysadm_spamassassin_t };
@@ -51,10 +80,21 @@
 typealias spamc_tmp_t alias { auditadm_spamc_tmp_t secadm_spamc_tmp_t };
 files_tmp_file(spamc_tmp_t)
 ubac_constrained(spamc_tmp_t)
+')
 
 type spamd_t;
 type spamd_exec_t;
 init_daemon_domain(spamd_t, spamd_exec_t)
+can_exec(spamd_t, spamd_exec_t)
+
+type spamd_compiled_t;
+files_type(spamd_compiled_t)
+
+type spamd_initrc_exec_t;
+init_script_file(spamd_initrc_exec_t)
+
+type spamd_log_t;
+logging_log_file(spamd_log_t)
 
 type spamd_spool_t;
 files_type(spamd_spool_t)
@@ -110,6 +150,7 @@
 dev_read_urand(spamassassin_t)
 
 fs_search_auto_mountpoints(spamassassin_t)
+fs_getattr_all_fs(spamassassin_t)
 
 # this should probably be removed
 corecmd_list_bin(spamassassin_t)
@@ -150,6 +191,9 @@
 	corenet_udp_sendrecv_all_ports(spamassassin_t)
 	corenet_tcp_connect_all_ports(spamassassin_t)
 	corenet_sendrecv_all_client_packets(spamassassin_t)
+	corenet_udp_bind_generic_node(spamassassin_t)
+	corenet_udp_bind_generic_port(spamassassin_t)
+	corenet_dontaudit_udp_bind_all_ports(spamassassin_t)
 
 	sysnet_read_config(spamassassin_t)
 ')
@@ -186,6 +230,8 @@
 optional_policy(`
 	mta_read_config(spamassassin_t)
 	sendmail_stub(spamassassin_t)
+	sendmail_dontaudit_rw_unix_stream_sockets(spamassassin_t)
+	sendmail_dontaudit_rw_tcp_sockets(spamassassin_t)
 ')
 
 ########################################
@@ -207,16 +253,35 @@
 allow spamc_t self:unix_stream_socket connectto;
 allow spamc_t self:tcp_socket create_stream_socket_perms;
 allow spamc_t self:udp_socket create_socket_perms;
+corenet_all_recvfrom_unlabeled(spamc_t)
+corenet_all_recvfrom_netlabel(spamc_t)
+corenet_tcp_sendrecv_generic_if(spamc_t)
+corenet_tcp_sendrecv_generic_node(spamc_t)
+corenet_tcp_connect_spamd_port(spamc_t)
+
+can_exec(spamc_t, spamc_exec_t)
 
 manage_dirs_pattern(spamc_t, spamc_tmp_t, spamc_tmp_t)
 manage_files_pattern(spamc_t, spamc_tmp_t, spamc_tmp_t)
 files_tmp_filetrans(spamc_t, spamc_tmp_t, { file dir })
 
+manage_dirs_pattern(spamc_t, spamc_home_t, spamc_home_t)
+manage_files_pattern(spamc_t, spamc_home_t, spamc_home_t)
+manage_lnk_files_pattern(spamc_t, spamc_home_t, spamc_home_t)
+manage_fifo_files_pattern(spamc_t, spamc_home_t, spamc_home_t)
+manage_sock_files_pattern(spamc_t, spamc_home_t, spamc_home_t)
+userdom_user_home_dir_filetrans(spamc_t, spamc_home_t, { dir file lnk_file sock_file fifo_file })
+userdom_append_user_home_content_files(spamc_t)
+
 # Allow connecting to a local spamd
 allow spamc_t spamd_t:unix_stream_socket connectto;
 allow spamc_t spamd_tmp_t:sock_file rw_sock_file_perms;
+spamd_stream_connect(spamc_t)
 
 kernel_read_kernel_sysctls(spamc_t)
+kernel_read_system_state(spamc_t)
+
+corecmd_exec_bin(spamc_t)
 
 corenet_all_recvfrom_unlabeled(spamc_t)
 corenet_all_recvfrom_netlabel(spamc_t)
@@ -246,9 +311,16 @@
 files_dontaudit_search_var(spamc_t)
 # cjp: this may be removable:
 files_list_home(spamc_t)
+files_list_var_lib(spamc_t)
+list_dirs_pattern(spamc_t, spamd_var_lib_t, spamd_var_lib_t)
+read_files_pattern(spamc_t, spamd_var_lib_t, spamd_var_lib_t)
+
+fs_search_auto_mountpoints(spamc_t)
 
 logging_send_syslog_msg(spamc_t)
 
+auth_use_nsswitch(spamc_t)
+
 miscfiles_read_localization(spamc_t)
 
 # cjp: this should probably be removed:
@@ -256,27 +328,45 @@
 
 sysnet_read_config(spamc_t)
 
+tunable_policy(`use_nfs_home_dirs',`
+	fs_manage_nfs_dirs(spamc_t)
+	fs_manage_nfs_files(spamc_t)
+	fs_manage_nfs_symlinks(spamc_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+	fs_manage_cifs_dirs(spamc_t)
+	fs_manage_cifs_files(spamc_t)
+	fs_manage_cifs_symlinks(spamc_t)
+')
+	
 optional_policy(`
-	# Allow connection to spamd socket above
-	evolution_stream_connect(spamc_t)
+	abrt_stream_connect(spamc_t)
 ')
 
 optional_policy(`
-	# Needed for pyzor/razor called from spamd
-	milter_manage_spamass_state(spamc_t)
+	# Allow connection to spamd socket above
+	evolution_stream_connect(spamc_t)
 ')
 
 optional_policy(`
-	nis_use_ypbind(spamc_t)
+	milter_manage_spamass_state(spamc_t)
 ')
 
 optional_policy(`
-	nscd_socket_use(spamc_t)
+	postfix_domtrans_postdrop(spamc_t)
+	postfix_search_spool(spamc_t)
+	postfix_rw_local_pipes(spamc_t)
+	postfix_rw_master_pipes(spamc_t)
 ')
 
 optional_policy(`
+	mta_send_mail(spamc_t)
 	mta_read_config(spamc_t)
+	mta_read_queue(spamc_t)
 	sendmail_stub(spamc_t)
+	sendmail_rw_pipes(spamc_t)
+	sendmail_dontaudit_rw_tcp_sockets(spamc_t)
 ')
 
 ########################################
@@ -288,7 +378,7 @@
 # setuids to the user running spamc.  Comment this if you are not
 # using this ability.
 
-allow spamd_t self:capability { setuid setgid dac_override sys_tty_config };
+allow spamd_t self:capability { kill setuid setgid dac_override sys_tty_config };
 dontaudit spamd_t self:capability sys_tty_config;
 allow spamd_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow spamd_t self:fd use;
@@ -304,10 +394,17 @@
 allow spamd_t self:unix_stream_socket connectto;
 allow spamd_t self:tcp_socket create_stream_socket_perms;
 allow spamd_t self:udp_socket create_socket_perms;
-allow spamd_t self:netlink_route_socket r_netlink_socket_perms;
+
+can_exec(spamd_t, spamd_compiled_t)
+manage_dirs_pattern(spamd_t, spamd_compiled_t, spamd_compiled_t)
+manage_files_pattern(spamd_t, spamd_compiled_t, spamd_compiled_t)
+
+manage_files_pattern(spamd_t, spamd_log_t, spamd_log_t)
+logging_log_filetrans(spamd_t, spamd_log_t, file)
 
 manage_dirs_pattern(spamd_t, spamd_spool_t, spamd_spool_t)
 manage_files_pattern(spamd_t, spamd_spool_t, spamd_spool_t)
+manage_sock_files_pattern(spamd_t, spamd_spool_t, spamd_spool_t)
 files_spool_filetrans(spamd_t, spamd_spool_t, { file dir })
 
 manage_dirs_pattern(spamd_t, spamd_tmp_t, spamd_tmp_t)
@@ -316,10 +413,12 @@
 
 # var/lib files for spamd
 allow spamd_t spamd_var_lib_t:dir list_dir_perms;
-read_files_pattern(spamd_t, spamd_var_lib_t, spamd_var_lib_t)
+manage_files_pattern(spamd_t, spamd_var_lib_t, spamd_var_lib_t)
+manage_lnk_files_pattern(spamd_t, spamd_var_lib_t, spamd_var_lib_t)
 
 manage_dirs_pattern(spamd_t, spamd_var_run_t, spamd_var_run_t)
 manage_files_pattern(spamd_t, spamd_var_run_t, spamd_var_run_t)
+manage_sock_files_pattern(spamd_t, spamd_var_run_t, spamd_var_run_t)
 files_pid_filetrans(spamd_t, spamd_var_run_t, { dir file })
 
 kernel_read_all_sysctls(spamd_t)
@@ -369,22 +468,31 @@
 
 init_dontaudit_rw_utmp(spamd_t)
 
+auth_use_nsswitch(spamd_t)
+
 logging_send_syslog_msg(spamd_t)
 
 miscfiles_read_localization(spamd_t)
 
-sysnet_read_config(spamd_t)
-sysnet_use_ldap(spamd_t)
-sysnet_dns_name_resolve(spamd_t)
-
 userdom_use_unpriv_users_fds(spamd_t)
 userdom_search_user_home_dirs(spamd_t)
 
+optional_policy(`
+	clamav_stream_connect(spamd_t)
+')
+
+optional_policy(`
+	exim_manage_spool_dirs(spamd_t)
+	exim_manage_spool_files(spamd_t)
+')
+
 tunable_policy(`use_nfs_home_dirs',`
+	fs_manage_nfs_dirs(spamd_t)
 	fs_manage_nfs_files(spamd_t)
 ')
 
 tunable_policy(`use_samba_home_dirs',`
+	fs_manage_cifs_dirs(spamd_t)
 	fs_manage_cifs_files(spamd_t)
 ')
 
@@ -397,16 +505,22 @@
 ')
 
 optional_policy(`
-	daemontools_service_domain(spamd_t, spamd_exec_t)
+	corenet_tcp_connect_postgresql_port(spamd_t)
+	corenet_sendrecv_postgresql_client_packets(spamd_t)
+
+	postgresql_stream_connect(spamd_t)
 ')
 
+
 optional_policy(`
-	dcc_domtrans_client(spamd_t)
-	dcc_stream_connect_dccifd(spamd_t)
+	daemontools_service_domain(spamd_t, spamd_exec_t)
 ')
 
 optional_policy(`
-	milter_manage_spamass_state(spamd_t)
+	dcc_domtrans_cdcc(spamd_t)
+	dcc_domtrans_client(spamd_t)
+	dcc_signal_client(spamd_t)
+	dcc_stream_connect_dccifd(spamd_t)
 ')
 
 optional_policy(`
@@ -415,10 +529,6 @@
 ')
 
 optional_policy(`
-	nis_use_ypbind(spamd_t)
-')
-
-optional_policy(`
 	postfix_read_config(spamd_t)
 ')
 
@@ -433,6 +543,10 @@
 
 optional_policy(`
 	razor_domtrans(spamd_t)
+	razor_read_lib_files(spamd_t)
+	tunable_policy(`spamd_enable_home_dirs',`
+		razor_manage_user_home_files(spamd_t)
+	')
 ')
 
 optional_policy(`
@@ -445,5 +559,9 @@
 ')
 
 optional_policy(`
+	milter_manage_spamass_state(spamd_t)
+')
+
+optional_policy(`
 	udev_read_db(spamd_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/squid.if serefpolicy-3.7.19/policy/modules/services/squid.if
--- nsaserefpolicy/policy/modules/services/squid.if	2011-03-17 07:21:21.075851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/squid.if	2011-03-17 07:21:03.536851001 +0000
@@ -71,7 +71,7 @@
 		type squid_t;
 	')
 
-	allow $1 squid_t:unix_stream_socket { getattr read write };
+	allow $1 squid_t:unix_stream_socket rw_socket_perms;
 ')
 
 ########################################
@@ -83,7 +83,6 @@
 ##	Domain to not audit.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`squid_dontaudit_search_cache',`
 	gen_require(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/squid.te serefpolicy-3.7.19/policy/modules/services/squid.te
--- nsaserefpolicy/policy/modules/services/squid.te	2011-03-17 07:21:21.880851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/squid.te	2011-11-29 10:53:00.297077603 +0000
@@ -14,6 +14,13 @@
 ## </desc>
 gen_tunable(squid_connect_any, false)
 
+## <desc>
+## <p>
+## Allow squid to run as a transparent proxy (TPROXY)
+## </p>
+## </desc>
+gen_tunable(squid_use_tproxy, false)
+
 type squid_t;
 type squid_exec_t;
 init_daemon_domain(squid_t, squid_exec_t)
@@ -67,7 +74,9 @@
 
 can_exec(squid_t, squid_exec_t)
 
+manage_dirs_pattern(squid_t, squid_log_t, squid_log_t)
 manage_files_pattern(squid_t, squid_log_t, squid_log_t)
+manage_lnk_files_pattern(squid_t, squid_log_t, squid_log_t)
 logging_log_filetrans(squid_t, squid_log_t, { file dir })
 
 manage_files_pattern(squid_t, squid_var_run_t, squid_var_run_t)
@@ -75,6 +84,7 @@
 
 kernel_read_kernel_sysctls(squid_t)
 kernel_read_system_state(squid_t)
+kernel_read_network_state(squid_t)
 
 files_dontaudit_getattr_boot_dirs(squid_t)
 
@@ -118,6 +128,8 @@
 
 fs_getattr_all_fs(squid_t)
 fs_search_auto_mountpoints(squid_t)
+#squid requires the following when run in diskd mode, the recommended setting
+fs_rw_tmpfs_files(squid_t)
 fs_list_inotifyfs(squid_t)
 
 selinux_dontaudit_getattr_dir(squid_t)
@@ -157,6 +169,11 @@
 	corenet_sendrecv_all_packets(squid_t)
 ')
 
+tunable_policy(`squid_use_tproxy',`
+	allow squid_t self:capability net_admin;
+	corenet_tcp_bind_netport_port(squid_t)
+')
+
 optional_policy(`
 	apache_content_template(squid)
 
@@ -165,6 +182,7 @@
 	corenet_all_recvfrom_unlabeled(httpd_squid_script_t)
 	corenet_all_recvfrom_netlabel(httpd_squid_script_t)
 	corenet_tcp_connect_http_cache_port(httpd_squid_script_t)
+	corenet_tcp_connect_squid_port(httpd_squid_script_t)
 
 	sysnet_dns_name_resolve(httpd_squid_script_t)
 
@@ -187,7 +205,6 @@
 	udev_read_db(squid_t)
 ')
 
-ifdef(`TODO',`
-#squid requires the following when run in diskd mode, the recommended setting
-allow squid_t tmpfs_t:file { read write };
-') dnl end TODO
+optional_policy(`
+	kerberos_manage_host_rcache(squid_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ssh.fc serefpolicy-3.7.19/policy/modules/services/ssh.fc
--- nsaserefpolicy/policy/modules/services/ssh.fc	2011-03-17 07:21:21.507851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ssh.fc	2012-08-08 10:09:20.859384150 +0000
@@ -1,9 +1,18 @@
 HOME_DIR/\.ssh(/.*)?			gen_context(system_u:object_r:ssh_home_t,s0)
+HOME_DIR/\.shosts			gen_context(system_u:object_r:ssh_home_t,s0)
+
+/var/lib/amanda/\.ssh(/.*)?			gen_context(system_u:object_r:ssh_home_t,s0)
+/var/lib/gitolite(3)?/\.ssh(/.*)?       gen_context(system_u:object_r:ssh_home_t,s0)
+
+/etc/rc\.d/init\.d/sshd        --  gen_context(system_u:object_r:sshd_initrc_exec_t,s0)
 
 /etc/ssh/primes			--	gen_context(system_u:object_r:sshd_key_t,s0)
 /etc/ssh/ssh_host_key 		--	gen_context(system_u:object_r:sshd_key_t,s0)
 /etc/ssh/ssh_host_dsa_key	--	gen_context(system_u:object_r:sshd_key_t,s0)
 /etc/ssh/ssh_host_rsa_key	--	gen_context(system_u:object_r:sshd_key_t,s0)
+/etc/ssh/ssh_host_key.pub       --  gen_context(system_u:object_r:sshd_key_t,s0)
+/etc/ssh/ssh_host_dsa_key.pub   --  gen_context(system_u:object_r:sshd_key_t,s0)
+/etc/ssh/ssh_host_rsa_key.pub   --  gen_context(system_u:object_r:sshd_key_t,s0)
 
 /usr/bin/ssh			--	gen_context(system_u:object_r:ssh_exec_t,s0)
 /usr/bin/ssh-agent		--	gen_context(system_u:object_r:ssh_agent_exec_t,s0)
@@ -14,3 +23,6 @@
 /usr/sbin/sshd			--	gen_context(system_u:object_r:sshd_exec_t,s0)
 
 /var/run/sshd\.init\.pid	--	gen_context(system_u:object_r:sshd_var_run_t,s0)
+
+/root/\.ssh(/.*)?			gen_context(system_u:object_r:ssh_home_t,s0)
+/root/\.shosts				gen_context(system_u:object_r:ssh_home_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ssh.if serefpolicy-3.7.19/policy/modules/services/ssh.if
--- nsaserefpolicy/policy/modules/services/ssh.if	2011-03-17 07:21:20.997851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ssh.if	2012-05-15 07:31:12.540620863 +0000
@@ -36,6 +36,7 @@
 	gen_require(`
 		attribute ssh_server;
 		type ssh_exec_t, sshd_key_t, sshd_tmp_t;
+		type ssh_home_t;
 	')
 
 	##############################
@@ -47,10 +48,6 @@
 	application_domain($1_ssh_t, ssh_exec_t)
 	role $3 types $1_ssh_t;
 
-	type $1_ssh_home_t;
-	files_type($1_ssh_home_t)
-	typealias $1_ssh_home_t alias $1_home_ssh_t;
-
 	##############################
 	#
 	# Client local policy
@@ -93,18 +90,18 @@
 	ps_process_pattern($2, $1_ssh_t)
 
 	# user can manage the keys and config
-	manage_files_pattern($2, $1_ssh_home_t, $1_ssh_home_t)
-	manage_lnk_files_pattern($2, $1_ssh_home_t, $1_ssh_home_t)
-	manage_sock_files_pattern($2, $1_ssh_home_t, $1_ssh_home_t)
+	manage_files_pattern($2, ssh_home_t, ssh_home_t)
+	manage_lnk_files_pattern($2, ssh_home_t, ssh_home_t)
+	manage_sock_files_pattern($2, ssh_home_t, ssh_home_t)
 
 	# ssh client can manage the keys and config
-	manage_files_pattern($1_ssh_t, $1_ssh_home_t, $1_ssh_home_t)
-	read_lnk_files_pattern($1_ssh_t, $1_ssh_home_t, $1_ssh_home_t)
+	manage_files_pattern($1_ssh_t, ssh_home_t, ssh_home_t)
+	read_lnk_files_pattern($1_ssh_t, ssh_home_t, ssh_home_t)
 
 	# ssh servers can read the user keys and config
-	allow ssh_server $1_ssh_home_t:dir list_dir_perms;
-	read_files_pattern(ssh_server, $1_ssh_home_t, $1_ssh_home_t)
-	read_lnk_files_pattern(ssh_server, $1_ssh_home_t, $1_ssh_home_t)
+	allow ssh_server ssh_home_t:dir list_dir_perms;
+	read_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
+	read_lnk_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
 
 	kernel_read_kernel_sysctls($1_ssh_t)
 	kernel_read_system_state($1_ssh_t)
@@ -116,7 +113,10 @@
 	corenet_tcp_sendrecv_all_ports($1_ssh_t)
 	corenet_tcp_connect_ssh_port($1_ssh_t)
 	corenet_sendrecv_ssh_client_packets($1_ssh_t)
+	corenet_tcp_bind_generic_node($1_ssh_t)
+	corenet_tcp_bind_all_unreserved_ports($1_ssh_t)
 
+	dev_read_rand($1_ssh_t)
 	dev_read_urand($1_ssh_t)
 
 	fs_getattr_all_fs($1_ssh_t)
@@ -181,16 +181,17 @@
 	type $1_var_run_t;
 	files_pid_file($1_var_run_t)
 
-	allow $1_t self:capability { kill sys_chroot sys_resource chown dac_override fowner fsetid setgid setuid sys_tty_config };
+	allow $1_t self:capability { kill sys_chroot sys_nice sys_resource chown dac_override fowner fsetid net_admin setgid setuid sys_tty_config };
 	allow $1_t self:fifo_file rw_fifo_file_perms;
-	allow $1_t self:process { signal getsched setsched setrlimit setexec setkeycreate };
+	allow $1_t self:process { signal getcap getsched setsched setrlimit setexec };
 	allow $1_t self:tcp_socket create_stream_socket_perms;
 	allow $1_t self:udp_socket create_socket_perms;
+	allow $1_t self:tun_socket { create_socket_perms relabelfrom relabelto };
 	# ssh agent connections:
 	allow $1_t self:unix_stream_socket create_stream_socket_perms;
 	allow $1_t self:shm create_shm_perms;
 
-	allow $1_t $1_devpts_t:chr_file { rw_chr_file_perms setattr getattr relabelfrom };
+	allow $1_t $1_devpts_t:chr_file { rw_chr_file_perms setattr_chr_file_perms getattr_chr_file_perms relabelfrom };
 	term_create_pty($1_t, $1_devpts_t)
 
 	manage_files_pattern($1_t, $1_tmpfs_t, $1_tmpfs_t)
@@ -206,6 +207,7 @@
 
 	kernel_read_kernel_sysctls($1_t)
 	kernel_read_network_state($1_t)
+	kernel_request_load_module($1_t)
 
 	corenet_all_recvfrom_unlabeled($1_t)
 	corenet_all_recvfrom_netlabel($1_t)
@@ -221,7 +223,12 @@
 	corenet_udp_bind_generic_node($1_t)
 	corenet_tcp_bind_ssh_port($1_t)
 	corenet_tcp_connect_all_ports($1_t)
+	corenet_tcp_bind_all_unreserved_ports($1_t)
+	corenet_sendrecv_ssh_server_packets($1_t)
+	# -R qualifier
 	corenet_sendrecv_ssh_server_packets($1_t)
+	# tunnel feature and -w (net_admin capability also)
+	corenet_rw_tun_tap_dev($1_t)
 
 	fs_dontaudit_getattr_all_fs($1_t)
 
@@ -234,21 +241,30 @@
 	corecmd_getattr_bin_files($1_t)
 
 	domain_interactive_fd($1_t)
+	domain_dyntrans_type($1_t)
+
+    dev_read_rand($1_t)
+    dev_read_urand($1_t)
 
 	files_read_etc_files($1_t)
 	files_read_etc_runtime_files($1_t)
+	files_read_usr_files($1_t)
 
 	logging_search_logs($1_t)
 
 	miscfiles_read_localization($1_t)
 
-	userdom_create_all_users_keys($1_t)
 	userdom_dontaudit_relabelfrom_user_ptys($1_t)
-	userdom_search_user_home_dirs($1_t)
+	userdom_read_user_home_content_files($1_t)
 
 	# Allow checking users mail at login
 	mta_getattr_spool($1_t)
 
+	tunable_policy(`use_fusefs_home_dirs',`
+        fs_manage_fusefs_dirs($1_t)
+        fs_manage_fusefs_files($1_t)
+    ')
+
 	tunable_policy(`use_nfs_home_dirs',`
 		fs_read_nfs_files($1_t)
 		fs_read_nfs_symlinks($1_t)
@@ -265,9 +281,16 @@
 
 	optional_policy(`
 		files_read_var_lib_symlinks($1_t)
-
 		nx_spec_domtrans_server($1_t)
 	')
+
+	optional_policy(`
+		rlogin_read_home_content($1_t)
+	')
+
+	optional_policy(`
+		shutdown_getattr_exec_files($1_t)
+	')
 ')
 
 ########################################
@@ -290,6 +313,7 @@
 ##	User domain for the role
 ##	</summary>
 ## </param>
+## <rolecap/>
 #
 template(`ssh_role_template',`
 	gen_require(`
@@ -327,7 +351,7 @@
 
 	# allow ps to show ssh
 	ps_process_pattern($3, ssh_t)
-	allow $3 ssh_t:process signal;
+	allow $3 ssh_t:process { ptrace signal_perms };
 
 	# for rsync
 	allow ssh_t $3:unix_stream_socket rw_socket_perms;
@@ -338,6 +362,7 @@
 	manage_lnk_files_pattern($3, ssh_home_t, ssh_home_t)
 	manage_sock_files_pattern($3, ssh_home_t, ssh_home_t)
 	userdom_search_user_home_dirs($1_t)
+	userdom_manage_tmp_role($2, ssh_t)
 
 	##############################
 	#
@@ -359,7 +384,7 @@
 	stream_connect_pattern($3, ssh_agent_tmp_t, ssh_agent_tmp_t, $1_ssh_agent_t)
 
 	# Allow the user shell to signal the ssh program.
-	allow $3 $1_ssh_agent_t:process signal;
+	allow $3 $1_ssh_agent_t:process { ptrace signal_perms };
 
 	# allow ps to show ssh
 	ps_process_pattern($3, $1_ssh_agent_t)
@@ -388,6 +413,7 @@
 	logging_send_syslog_msg($1_ssh_agent_t)
 
 	miscfiles_read_localization($1_ssh_agent_t)
+	miscfiles_read_certs($1_ssh_agent_t)
 
 	seutil_dontaudit_read_config($1_ssh_agent_t)
 
@@ -395,10 +421,8 @@
 	userdom_use_user_terminals($1_ssh_agent_t)
 
 	# for the transition back to normal privs upon exec
+	userdom_search_user_home_content($1_ssh_agent_t)
 	userdom_user_home_domtrans($1_ssh_agent_t, $3)
-	allow $3 $1_ssh_agent_t:fd use;
-	allow $3 $1_ssh_agent_t:fifo_file rw_file_perms;
-	allow $3 $1_ssh_agent_t:process sigchld;
 
 	tunable_policy(`use_nfs_home_dirs',`
 		fs_manage_nfs_files($1_ssh_agent_t)
@@ -419,6 +443,10 @@
 	')
 
 	optional_policy(`
+        ssh_run_keygen($3,$2)
+    ')
+
+	optional_policy(`
 		xserver_use_xdm_fds($1_ssh_agent_t)
 		xserver_rw_xdm_pipes($1_ssh_agent_t)
 	')
@@ -475,7 +503,7 @@
 		type sshd_t;
 	')
 
-	allow $1 sshd_t:fifo_file { getattr read };
+	allow $1 sshd_t:fifo_file read_fifo_file_perms;
 ')
 ########################################
 ## <summary>
@@ -492,7 +520,7 @@
 		type sshd_t;
 	')
 
-	allow $1 sshd_t:fifo_file { write read getattr ioctl };
+	allow $1 sshd_t:fifo_file rw_inherited_fifo_file_perms;
 ')
 
 ########################################
@@ -513,6 +541,24 @@
 	allow $1 sshd_t:unix_stream_socket rw_stream_socket_perms;
 ')
 
+#######################################
+## <summary>
+##      Read and write ssh server unix dgram sockets.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`ssh_rw_dgram_sockets',`
+    gen_require(`
+        type sshd_t;
+    ')
+
+    allow $1 sshd_t:unix_dgram_socket rw_stream_socket_perms;
+')
+
 ########################################
 ## <summary>
 ##	Read and write ssh server TCP sockets.
@@ -582,6 +628,25 @@
 	domtrans_pattern($1, sshd_exec_t, sshd_t)
 ')
 
+
+########################################
+## <summary>
+##	Execute sshd server in the sshd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`ssh_initrc_domtrans',`
+	gen_require(`
+		type sshd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, sshd_initrc_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute the ssh client in the caller domain.
@@ -616,7 +681,7 @@
 		type sshd_key_t;
 	')
 
-	allow $1 sshd_key_t:file setattr;
+	allow $1 sshd_key_t:file setattr_file_perms;
 	files_search_pids($1)
 ')
 
@@ -678,6 +743,50 @@
 	domtrans_pattern($1, ssh_keygen_exec_t, ssh_keygen_t)
 ')
 
+#######################################
+## <summary>
+##      Execute the ssh key generator in the caller domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed to transition.
+##      </summary>
+## </param>
+#
+interface(`ssh_exec_keygen',`
+        gen_require(`
+                type ssh_keygen_exec_t;
+        ')
+
+        can_exec($1, ssh_keygen_exec_t)
+')
+
+######################################
+## <summary>
+##  Execute ssh-keygen in the iptables domain, and
+##  allow the specified role the ssh-keygen domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+## <param name="role">
+##  <summary>
+##  Role allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`ssh_run_keygen',`
+    gen_require(`
+        type ssh_keygen_t;
+    ')
+
+    role $2 types ssh_keygen_t;
+    ssh_domtrans_keygen($1)
+')
+
 ########################################
 ## <summary>
 ##	Read ssh server keys
@@ -693,7 +802,51 @@
 		type sshd_key_t;
 	')
 
-	dontaudit $1 sshd_key_t:file { getattr read };
+	dontaudit $1 sshd_key_t:file read_file_perms;
+')
+
+######################################
+## <summary>
+##  Manage ssh home directory content
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`ssh_manage_user_home_files',`
+    gen_require(`
+        type ssh_home_t;
+    ')
+
+    allow $1 ssh_home_t:dir list_dir_perms;
+    manage_dirs_pattern($1, ssh_home_t, ssh_home_t)
+    manage_files_pattern($1, ssh_home_t, ssh_home_t)
+    userdom_search_user_home_dirs($1)
+')
+
+########################################
+## <summary>
+##	Create Secure Shell home directory 
+##	content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_create_user_home_files',`
+	gen_require(`
+		type home_ssh_t;
+	')
+
+	# This is only for Seahorse. May no longer be required in future.
+	create_dirs_pattern($1, home_ssh_t, home_ssh_t)
+	create_files_pattern($1, home_ssh_t, home_ssh_t)
+	userdom_user_home_dir_filetrans($1, home_ssh_t, { dir file })
+	userdom_search_user_home_dirs($1)
 ')
 
 #######################################
@@ -714,3 +867,122 @@
 	files_search_tmp($1)
 	delete_files_pattern($1, sshd_tmp_t, sshd_tmp_t)
 ')
+
+#######################################
+## <summary>
+## Send a null signal to sshd processes.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`ssh_signull',`
+	gen_require(`
+		type sshd_t;
+	')
+	allow $1 sshd_t:process signull;
+')
+
+######################################
+## <summary>
+##  Allow domain dyntransition to chroot_user_t domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`ssh_dyntransition_chroot_user',`
+	gen_require(`
+		type chroot_user_t;
+	')
+
+	allow $1 chroot_user_t:process dyntransition;
+	allow chroot_user_t $1:process sigchld;
+')
+
+#######################################
+## <summary>
+##	Getattr ssh home directory
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_getattr_user_home_dir',`
+	gen_require(`
+		type ssh_home_t;
+	')
+
+	allow $1 ssh_home_t:dir getattr;
+')
+
+#######################################
+## <summary>
+##	Dontaudit search ssh home directory
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_dontaudit_search_user_home_dir',`
+	gen_require(`
+		type ssh_home_t;
+	')
+
+	dontaudit $1 ssh_home_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate 
+##	an sshd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`ssh_admin_server',`
+	gen_require(`
+		type sshd_t, ssh_home_t, sshd_key_t, sshd_tmp_t; 
+		type sshd_tmpfs_t, sshd_var_run_t;
+		type sshd_initrc_exec_t;
+	')
+
+	allow $1 sshd_t:process { ptrace signal_perms getattr };
+	read_files_pattern($1, sshd_t, sshd_t)
+
+	ssh_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 sshd_initrc_exec_t system_r;
+
+	userdom_search_user_home_dirs($1)
+	userdom_search_admin_dir($1)
+	admin_pattern($1, ssh_home_t)
+
+	files_search_etc($1)
+	admin_pattern($1,sshd_key_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, sshd_tmp_t)
+
+	admin_pattern($1, sshd_tmpfs_t)
+
+	files_search_pids($1)
+	admin_pattern($1, sshd_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ssh.te serefpolicy-3.7.19/policy/modules/services/ssh.te
--- nsaserefpolicy/policy/modules/services/ssh.te	2011-03-17 07:21:21.997851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ssh.te	2012-07-16 10:30:47.543021695 +0000
@@ -20,6 +20,18 @@
 ## </desc>
 gen_tunable(ssh_sysadm_login, false)
 
+## <desc>
+## <p>
+## Allow ssh with chroot env to read and write files 
+## in the user home directories
+## </p>
+## </desc>
+gen_tunable(ssh_chroot_rw_homedirs, false)
+
+type chroot_user_t;
+domain_type(chroot_user_t)
+role system_r types chroot_user_t;
+
 attribute ssh_server;
 attribute ssh_agent_type;
 
@@ -33,14 +45,14 @@
 
 ssh_server_template(sshd)
 init_daemon_domain(sshd_t, sshd_exec_t)
+mls_trusted_object(sshd_t)
+
+type sshd_initrc_exec_t;
+init_script_file(sshd_initrc_exec_t)
 
 type sshd_key_t;
 files_type(sshd_key_t)
 
-type sshd_tmp_t;
-files_tmp_file(sshd_tmp_t)
-files_poly_parent(sshd_tmp_t)
-
 ifdef(`enable_mcs',`
 	init_ranged_daemon_domain(sshd_t, sshd_exec_t, s0 - mcs_systemhigh)
 ')
@@ -79,6 +91,7 @@
 typealias ssh_home_t alias { auditadm_home_ssh_t secadm_home_ssh_t };
 files_type(ssh_home_t)
 userdom_user_home_content(ssh_home_t)
+files_poly_parent(ssh_home_t)
 
 ##############################
 #
@@ -97,14 +110,11 @@
 allow ssh_t self:msg { send receive };
 allow ssh_t self:tcp_socket create_stream_socket_perms;
 
+can_exec(ssh_t, ssh_exec_t)
+
 # Read the ssh key file.
 allow ssh_t sshd_key_t:file read_file_perms;
 
-# Access the ssh temporary files.
-allow ssh_t sshd_tmp_t:dir manage_dir_perms;
-allow ssh_t sshd_tmp_t:file manage_file_perms;
-files_tmp_filetrans(ssh_t, sshd_tmp_t, { file dir })
-
 manage_files_pattern(ssh_t, ssh_tmpfs_t, ssh_tmpfs_t)
 manage_lnk_files_pattern(ssh_t, ssh_tmpfs_t, ssh_tmpfs_t)
 manage_fifo_files_pattern(ssh_t, ssh_tmpfs_t, ssh_tmpfs_t)
@@ -114,20 +124,23 @@
 manage_dirs_pattern(ssh_t, ssh_home_t, ssh_home_t)
 manage_sock_files_pattern(ssh_t, ssh_home_t, ssh_home_t)
 userdom_user_home_dir_filetrans(ssh_t, ssh_home_t, { dir sock_file })
+userdom_stream_connect(ssh_t)
 
 # Allow the ssh program to communicate with ssh-agent.
 stream_connect_pattern(ssh_t, ssh_agent_tmp_t, ssh_agent_tmp_t, ssh_agent_type)
 
 allow ssh_t sshd_t:unix_stream_socket connectto;
+allow ssh_t sshd_t:peer recv;
 
 # ssh client can manage the keys and config
 manage_files_pattern(ssh_t, ssh_home_t, ssh_home_t)
 read_lnk_files_pattern(ssh_t, ssh_home_t, ssh_home_t)
 
 # ssh servers can read the user keys and config
-allow ssh_server ssh_home_t:dir list_dir_perms;
-read_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
-read_lnk_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
+manage_dirs_pattern(ssh_server, ssh_home_t, ssh_home_t)
+manage_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
+userdom_user_home_dir_filetrans(ssh_server, ssh_home_t, dir)
+userdom_admin_home_dir_filetrans(ssh_server, ssh_home_t, dir)
 
 kernel_read_kernel_sysctls(ssh_t)
 kernel_read_system_state(ssh_t)
@@ -139,7 +152,11 @@
 corenet_tcp_sendrecv_all_ports(ssh_t)
 corenet_tcp_connect_ssh_port(ssh_t)
 corenet_sendrecv_ssh_client_packets(ssh_t)
+corenet_tcp_bind_generic_node(ssh_t)
+#corenet_tcp_bind_all_unreserved_ports(ssh_t)
+corenet_rw_tun_tap_dev(ssh_t)
 
+dev_read_rand(ssh_t)
 dev_read_urand(ssh_t)
 
 fs_getattr_all_fs(ssh_t)
@@ -170,8 +187,19 @@
 userdom_search_user_home_dirs(ssh_t)
 # Write to the user domain tty.
 userdom_use_user_terminals(ssh_t)
-# needs to read krb tgt
+# needs to read krb/write tgt
 userdom_read_user_tmp_files(ssh_t)
+userdom_write_user_tmp_files(ssh_t)
+userdom_read_user_home_content_symlinks(ssh_t)
+# 692457
+userdom_search_admin_dir(sshd_t)
+userdom_admin_home_dir_filetrans(ssh_t, ssh_home_t, { dir sock_file })
+
+ifdef(`enable_mcs',`
+    optional_policy(`
+        condor_startd_ranged_domtrans_to(sshd_t, sshd_exec_t, mcs_systemlow - mcs_systemhigh)
+    ')
+')
 
 tunable_policy(`allow_ssh_keysign',`
 	domain_auto_trans(ssh_t, ssh_keysign_exec_t, ssh_keysign_t)
@@ -180,6 +208,11 @@
 	allow ssh_keysign_t ssh_t:fifo_file rw_file_perms;
 ')
 
+tunable_policy(`use_fusefs_home_dirs',`
+        fs_manage_fusefs_dirs(ssh_t)
+        fs_manage_fusefs_files(ssh_t)
+    ')
+
 tunable_policy(`use_nfs_home_dirs',`
 	fs_manage_nfs_dirs(ssh_t)
 	fs_manage_nfs_files(ssh_t)
@@ -194,6 +227,7 @@
 tunable_policy(`user_tcp_server',`
 	corenet_tcp_bind_ssh_port(ssh_t)
 	corenet_tcp_bind_generic_node(ssh_t)
+	corenet_tcp_bind_all_unreserved_ports(ssh_t)
 ')
 
 optional_policy(`
@@ -201,54 +235,6 @@
 	xserver_domtrans_xauth(ssh_t)
 ')
 
-########################################
-#
-# ssh_keygen local policy
-#
-
-# ssh_keygen_t is the type of the ssh-keygen program when run at install time
-# and by sysadm_t
-
-dontaudit ssh_keygen_t self:capability sys_tty_config;
-allow ssh_keygen_t self:process { sigchld sigkill sigstop signull signal };
-
-allow ssh_keygen_t self:unix_stream_socket create_stream_socket_perms;
-
-allow ssh_keygen_t sshd_key_t:file manage_file_perms;
-files_etc_filetrans(ssh_keygen_t, sshd_key_t, file)
-
-kernel_read_kernel_sysctls(ssh_keygen_t)
-
-fs_search_auto_mountpoints(ssh_keygen_t)
-
-dev_read_sysfs(ssh_keygen_t)
-dev_read_urand(ssh_keygen_t)
-
-term_dontaudit_use_console(ssh_keygen_t)
-
-domain_use_interactive_fds(ssh_keygen_t)
-
-files_read_etc_files(ssh_keygen_t)
-
-init_use_fds(ssh_keygen_t)
-init_use_script_ptys(ssh_keygen_t)
-
-logging_send_syslog_msg(ssh_keygen_t)
-
-userdom_dontaudit_use_unpriv_user_fds(ssh_keygen_t)
-
-optional_policy(`
-	nscd_socket_use(ssh_keygen_t)
-')
-
-optional_policy(`
-	seutil_sigchld_newrole(ssh_keygen_t)
-')
-
-optional_policy(`
-	udev_read_db(ssh_keygen_t)
-')
-
 ##############################
 #
 # ssh_keysign_t local policy
@@ -260,6 +246,7 @@
 
 	allow ssh_keysign_t sshd_key_t:file { getattr read };
 
+	dev_read_rand(ssh_keysign_t)
 	dev_read_urand(ssh_keysign_t)
 
 	files_read_etc_files(ssh_keysign_t)
@@ -282,36 +269,48 @@
 allow sshd_t self:netlink_route_socket r_netlink_socket_perms;
 allow sshd_t self:key { search link write };
 
-manage_dirs_pattern(sshd_t, sshd_tmp_t, sshd_tmp_t)
-manage_files_pattern(sshd_t, sshd_tmp_t, sshd_tmp_t)
-manage_sock_files_pattern(sshd_t, sshd_tmp_t, sshd_tmp_t)
-files_tmp_filetrans(sshd_t, sshd_tmp_t, { dir file sock_file })
+allow sshd_t self:process setcurrent;
 
 kernel_search_key(sshd_t)
 kernel_link_key(sshd_t)
 
+dev_rw_crypto(sshd_t)
+
 term_use_all_ptys(sshd_t)
 term_setattr_all_ptys(sshd_t)
+term_setattr_all_ttys(sshd_t)
 term_relabelto_all_ptys(sshd_t)
 
 # for X forwarding
 corenet_tcp_bind_xserver_port(sshd_t)
 corenet_sendrecv_xserver_server_packets(sshd_t)
 
+userdom_read_user_home_content_files(sshd_t)
+userdom_read_user_home_content_symlinks(sshd_t)
+userdom_search_admin_dir(sshd_t)
+userdom_manage_tmp_role(system_r, sshd_t)
+userdom_spec_domtrans_unpriv_users(sshd_t)
+userdom_signal_unpriv_users(sshd_t)
+userdom_dyntransition_unpriv_users(sshd_t)
+userdom_dyntransition_admin_users(sshd_t)
+
 tunable_policy(`ssh_sysadm_login',`
 	# Relabel and access ptys created by sshd
 	# ioctl is necessary for logout() processing for utmp entry and for w to
 	# display the tty.
 	# some versions of sshd on the new SE Linux require setattr
-	userdom_spec_domtrans_all_users(sshd_t)
 	userdom_signal_all_users(sshd_t)
-',`
-	userdom_spec_domtrans_unpriv_users(sshd_t)
-	userdom_signal_unpriv_users(sshd_t)
+	userdom_spec_domtrans_all_users(sshd_t)
 ')
 
 optional_policy(`
-	kerberos_keytab_template(sshd, sshd_t)
+    amanda_search_lib(sshd_t)
+')
+
+optional_policy(`
+	condor_rw_lib_files(sshd_t)
+	condor_rw_tcp_sockets_startd(sshd_t)
+	condor_rw_tcp_sockets_schedd(sshd_t)
 ')
 
 optional_policy(`
@@ -319,10 +318,26 @@
 ')
 
 optional_policy(`
+	kerberos_keytab_template(sshd, sshd_t)
+')
+
+optional_policy(`
+	ssh_dyntransition_chroot_user(sshd_t)
+')
+
+optional_policy(`
+	gitosis_manage_lib_files(sshd_t)
+')
+
+optional_policy(`
 	inetd_tcp_service_domain(sshd_t, sshd_exec_t)
 ')
 
 optional_policy(`
+	nx_read_home_files(sshd_t)
+')
+
+optional_policy(`
 	rpm_use_script_fds(sshd_t)
 ')
 
@@ -333,10 +348,18 @@
 ')
 
 optional_policy(`
-	unconfined_domain(sshd_t)
+	usermanage_domtrans_passwd(sshd_t)
+	usermanage_read_crack_db(sshd_t)
+')
+
+optional_policy(`
 	unconfined_shell_domtrans(sshd_t)
 ')
 
+optional_policy(`
+	xserver_domtrans_xauth(sshd_t)
+')
+
 ifdef(`TODO',`
 tunable_policy(`ssh_sysadm_login',`
 	# Relabel and access ptys created by sshd
@@ -368,6 +391,7 @@
 # ssh_keygen_t is the type of the ssh-keygen program when run at install time
 # and by sysadm_t
 
+allow ssh_keygen_t self:capability dac_override;
 dontaudit ssh_keygen_t self:capability sys_tty_config;
 allow ssh_keygen_t self:process { sigchld sigkill sigstop signull signal };
 
@@ -376,14 +400,22 @@
 allow ssh_keygen_t sshd_key_t:file manage_file_perms;
 files_etc_filetrans(ssh_keygen_t, sshd_key_t, file)
 
+manage_dirs_pattern(ssh_keygen_t, ssh_home_t, ssh_home_t)
+manage_files_pattern(ssh_keygen_t, ssh_home_t, ssh_home_t)
+userdom_admin_home_dir_filetrans(ssh_keygen_t, ssh_home_t, dir)
+userdom_user_home_dir_filetrans(ssh_keygen_t, ssh_home_t, dir)
+
+kernel_read_system_state(ssh_keygen_t)
 kernel_read_kernel_sysctls(ssh_keygen_t)
 
 fs_search_auto_mountpoints(ssh_keygen_t)
 
 dev_read_sysfs(ssh_keygen_t)
+dev_read_rand(ssh_keygen_t)
 dev_read_urand(ssh_keygen_t)
 
 term_dontaudit_use_console(ssh_keygen_t)
+term_use_all_ptys(ssh_keygen_t)
 
 domain_use_interactive_fds(ssh_keygen_t)
 
@@ -397,6 +429,18 @@
 logging_send_syslog_msg(ssh_keygen_t)
 
 userdom_dontaudit_use_unpriv_user_fds(ssh_keygen_t)
+userdom_search_user_home_dirs(ssh_keygen_t)
+userdom_search_admin_dir(ssh_keygen_t)
+userdom_use_user_terminals(ssh_keygen_t)
+
+tunable_policy(`use_nfs_home_dirs',`
+    fs_manage_nfs_files(ssh_keygen_t)
+    fs_manage_nfs_dirs(ssh_keygen_t)
+')
+
+optional_policy(`
+    nscd_socket_use(ssh_keygen_t)
+')
 
 optional_policy(`
 	seutil_sigchld_newrole(ssh_keygen_t)
@@ -405,3 +449,59 @@
 optional_policy(`
 	udev_read_db(ssh_keygen_t)
 ')
+
+optional_policy(`
+	#755877
+	unconfined_domain(ssh_keygen_t)
+')
+
+#######################################
+#
+# chroot_user_t local policy
+#
+
+allow chroot_user_t self:capability { setuid sys_chroot setgid };
+
+allow chroot_user_t self:fifo_file rw_fifo_file_perms;
+
+userdom_read_user_home_content_files(chroot_user_t)
+userdom_read_inherited_user_home_content_files(chroot_user_t)
+userdom_read_user_home_content_symlinks(chroot_user_t)
+userdom_exec_user_home_content_files(chroot_user_t)
+
+tunable_policy(`ssh_chroot_rw_homedirs',`
+        files_list_home(chroot_user_t)
+        userdom_read_user_home_content_files(chroot_user_t)
+        userdom_manage_user_home_content(chroot_user_t)
+', `
+
+        userdom_user_home_dir_filetrans_pattern(chroot_user_t, { dir file lnk_file })
+')
+
+tunable_policy(`ssh_chroot_rw_homedirs && use_nfs_home_dirs',`
+    fs_manage_nfs_dirs(chroot_user_t)
+    fs_manage_nfs_files(chroot_user_t)
+    fs_manage_nfs_symlinks(chroot_user_t)
+')
+
+tunable_policy(`ssh_chroot_rw_homedirs && use_samba_home_dirs',`
+    fs_manage_cifs_dirs(chroot_user_t)
+    fs_manage_cifs_files(chroot_user_t)
+    fs_manage_cifs_symlinks(chroot_user_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+    fs_read_cifs_files(chroot_user_t)
+    fs_read_cifs_symlinks(chroot_user_t)
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+    fs_read_nfs_files(chroot_user_t)
+    fs_read_nfs_symlinks(chroot_user_t)
+')
+
+optional_policy(`
+    ssh_rw_stream_sockets(chroot_user_t)
+    ssh_rw_tcp_sockets(chroot_user_t)
+    ssh_rw_dgram_sockets(chroot_user_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sssd.if serefpolicy-3.7.19/policy/modules/services/sssd.if
--- nsaserefpolicy/policy/modules/services/sssd.if	2011-03-17 07:21:21.134851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sssd.if	2011-10-18 11:48:31.711042003 +0000
@@ -89,6 +89,7 @@
 		type sssd_var_run_t;
 	')
 
+	files_search_pids($1)
 	manage_dirs_pattern($1, sssd_var_run_t, sssd_var_run_t)
 	manage_files_pattern($1, sssd_var_run_t, sssd_var_run_t)
 ')
@@ -128,7 +129,6 @@
 	')
 
 	dontaudit $1 sssd_var_lib_t:dir search_dir_perms;
-	files_search_var_lib($1)
 ')
 
 ########################################
@@ -148,6 +148,7 @@
 
 	files_search_var_lib($1)
 	read_files_pattern($1, sssd_var_lib_t, sssd_var_lib_t)
+	read_lnk_files_pattern($1, sssd_var_lib_t, sssd_var_lib_t)
 ')
 
 ########################################
@@ -168,6 +169,7 @@
 
 	files_search_var_lib($1)
 	manage_files_pattern($1, sssd_var_lib_t, sssd_var_lib_t)
+	manage_lnk_files_pattern($1, sssd_var_lib_t, sssd_var_lib_t)
 ')
 
 ########################################
@@ -225,11 +227,6 @@
 ##	The role to be allowed to manage the sssd domain.
 ##	</summary>
 ## </param>
-## <param name="terminal">
-##	<summary>
-##	The type of the user terminal.
-##	</summary>
-## </param>
 ## <rolecap/>
 #
 interface(`sssd_admin',`
@@ -238,8 +235,8 @@
 		type sssd_initrc_exec_t;
 	')
 
-	allow $1 sssd_t:process { ptrace signal_perms getattr };
-	read_files_pattern($1, sssd_t, sssd_t)
+	allow $1 sssd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, sssd_t)
 
 	# Allow sssd_t to restart the apache service
 	sssd_initrc_domtrans($1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sssd.te serefpolicy-3.7.19/policy/modules/services/sssd.te
--- nsaserefpolicy/policy/modules/services/sssd.te	2011-03-17 07:21:21.128851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sssd.te	2012-07-13 18:32:07.416349318 +0000
@@ -18,6 +18,7 @@
 
 type sssd_var_lib_t;
 files_type(sssd_var_lib_t)
+mls_trusted_object(sssd_var_lib_t)
 
 type sssd_var_log_t;
 logging_log_file(sssd_var_log_t)
@@ -29,9 +30,12 @@
 #
 # sssd local policy
 #
-allow sssd_t self:capability { dac_read_search dac_override kill sys_nice setgid setuid };
-allow sssd_t self:process { setfscreate setsched sigkill signal getsched };
+
+allow sssd_t self:capability { chown dac_read_search dac_override kill net_admin sys_nice sys_admin setgid setuid sys_resource };
+
+allow sssd_t self:process { setfscreate setsched sigkill signal getsched setrlimit };
 allow sssd_t self:fifo_file rw_file_perms;
+allow sssd_t self:key manage_key_perms;
 allow sssd_t self:unix_stream_socket { create_stream_socket_perms connectto };
 
 manage_dirs_pattern(sssd_t, sssd_public_t, sssd_public_t)
@@ -39,6 +43,7 @@
 
 manage_dirs_pattern(sssd_t, sssd_var_lib_t, sssd_var_lib_t)
 manage_files_pattern(sssd_t, sssd_var_lib_t, sssd_var_lib_t)
+manage_lnk_files_pattern(sssd_t, sssd_var_lib_t, sssd_var_lib_t)
 manage_sock_files_pattern(sssd_t, sssd_var_lib_t, sssd_var_lib_t)
 files_var_lib_filetrans(sssd_t, sssd_var_lib_t, { file dir } )
 
@@ -50,9 +55,14 @@
 files_pid_filetrans(sssd_t, sssd_var_run_t, { file dir })
 
 kernel_read_system_state(sssd_t)
+kernel_read_network_state(sssd_t)
+
+corenet_udp_bind_generic_port(sssd_t)
+corenet_dontaudit_udp_bind_all_ports(sssd_t)
 
 corecmd_exec_bin(sssd_t)
 
+dev_read_sysfs(sssd_t)
 dev_read_urand(sssd_t)
 
 domain_read_all_domains_state(sssd_t)
@@ -61,6 +71,7 @@
 files_list_tmp(sssd_t)
 files_read_etc_files(sssd_t)
 files_read_usr_files(sssd_t)
+files_list_var_lib(sssd_t)
 
 fs_list_inotifyfs(sssd_t)
 
@@ -69,6 +80,9 @@
 seutil_read_file_contexts(sssd_t)
 
 mls_file_read_to_clearance(sssd_t)
+mls_socket_read_to_clearance(sssd_t)
+mls_socket_write_to_clearance(sssd_t)
+mls_trusted_object(sssd_t)
 
 auth_use_nsswitch(sssd_t)
 auth_domtrans_chk_passwd(sssd_t)
@@ -81,6 +95,11 @@
 
 miscfiles_read_localization(sssd_t)
 
+sysnet_dns_name_resolve(sssd_t)
+sysnet_use_ldap(sssd_t)
+
+userdom_manage_tmp_role(system_r, sssd_t)
+
 optional_policy(`
 	dbus_system_bus_client(sssd_t)
 	dbus_connect_system_bus(sssd_t)
@@ -88,4 +107,25 @@
 
 optional_policy(`
 	kerberos_manage_host_rcache(sssd_t)
+	kerberos_read_home_content(sssd_t)
+')
+
+optional_policy(`
+	dirsrv_stream_connect(sssd_t)
+')
+
+optional_policy(`
+	ldap_stream_connect(sssd_t)
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+       fs_read_nfs_files(sssd_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+       fs_read_cifs_files(sssd_t)
+')
+
+tunable_policy(`use_fusefs_home_dirs',`
+       fs_read_fusefs_files(sssd_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/sysstat.te serefpolicy-3.7.19/policy/modules/services/sysstat.te
--- nsaserefpolicy/policy/modules/services/sysstat.te	2011-03-17 07:21:20.993851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/sysstat.te	2011-03-17 07:21:03.442851002 +0000
@@ -20,7 +20,7 @@
 #
 
 allow sysstat_t self:capability { dac_override sys_resource sys_tty_config };
-dontaudit sysstat_t self:capability sys_admin;
+allow sysstat_t self:capability sys_admin;
 allow sysstat_t self:fifo_file rw_fifo_file_perms;
 
 can_exec(sysstat_t, sysstat_exec_t)
@@ -69,3 +69,7 @@
 optional_policy(`
 	logging_send_syslog_msg(sysstat_t)
 ')
+
+optional_policy(`
+	nscd_socket_use(sysstat_t)
+')   
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/tftp.if serefpolicy-3.7.19/policy/modules/services/tftp.if
--- nsaserefpolicy/policy/modules/services/tftp.if	2011-03-17 07:21:22.065851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/tftp.if	2011-03-17 07:21:04.817851001 +0000
@@ -13,9 +13,33 @@
 interface(`tftp_read_content',`
 	gen_require(`
 		type tftpdir_t;
+		type tftpdir_rw_t;
 	')
 
 	read_files_pattern($1, tftpdir_t, tftpdir_t)
+	read_lnk_files_pattern($1, tftpdir_t, tftpdir_t)
+
+	read_files_pattern($1, tftpdir_rw_t, tftpdir_rw_t)
+    read_lnk_files_pattern($1, tftpdir_rw_t, tftpdir_rw_t)
+')
+
+########################################
+## <summary>
+##	Search tftp /var/lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tftp_search_rw_content',`
+	gen_require(`
+		type tftpdir_rw_t;
+	')
+
+	search_dirs_pattern($1, tftpdir_rw_t, tftpdir_rw_t)
+	files_search_var_lib($1)
 ')
 
 ########################################
@@ -40,6 +64,36 @@
 
 ########################################
 ## <summary>
+##	Create objects in tftpdir directories
+##	with specified types.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="file_type">
+##	<summary>
+##	Private file type.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	Class of the object being created.
+##	</summary>
+## </param>
+#
+interface(`tftp_filetrans_tftpdir',`
+	gen_require(`
+		type tftpdir_rw_t;
+	')
+
+	filetrans_pattern($1, tftpdir_rw_t, $2, $3)
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
 ##	All of the rules required to administrate
 ##	an tftp environment
 ## </summary>
@@ -55,9 +109,10 @@
 		type tftpd_t, tftpdir_t, tftpdir_rw_t, tftpd_var_run_t;
 	')
 
-	allow $1 tftpd_t:process { ptrace signal_perms getattr };
+	allow $1 tftpd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, tftpd_t)
 
+	files_list_var_lib($1)
 	admin_pattern($1, tftpdir_rw_t)
 
 	admin_pattern($1, tftpdir_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/tftp.te serefpolicy-3.7.19/policy/modules/services/tftp.te
--- nsaserefpolicy/policy/modules/services/tftp.te	2011-03-17 07:21:21.000851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/tftp.te	2011-03-17 07:21:03.467851003 +0000
@@ -1,5 +1,4 @@
-
-policy_module(tftp, 1.11.3)
+policy_module(tftp, 1.12.0)
 
 ########################################
 #
@@ -7,10 +6,10 @@
 #
 
 ## <desc>
-## <p>
-## Allow tftp to modify public files
-## used for public file transfer services.
-## </p>
+##	<p>
+##	Allow tftp to modify public files
+##	used for public file transfer services.
+##	</p>
 ## </desc>
 gen_tunable(tftp_anon_write, false)
 
@@ -33,15 +32,15 @@
 #
 
 allow tftpd_t self:capability { setgid setuid sys_chroot };
+dontaudit tftpd_t self:capability sys_tty_config;
 allow tftpd_t self:tcp_socket create_stream_socket_perms;
 allow tftpd_t self:udp_socket create_socket_perms;
 allow tftpd_t self:unix_dgram_socket create_socket_perms;
 allow tftpd_t self:unix_stream_socket create_stream_socket_perms;
-dontaudit tftpd_t self:capability sys_tty_config;
 
 allow tftpd_t tftpdir_t:dir list_dir_perms;
 allow tftpd_t tftpdir_t:file read_file_perms;
-allow tftpd_t tftpdir_t:lnk_file { getattr read };
+allow tftpd_t tftpdir_t:lnk_file read_lnk_file_perms;
 
 manage_dirs_pattern(tftpd_t, tftpdir_rw_t, tftpdir_rw_t)
 manage_files_pattern(tftpd_t, tftpdir_rw_t, tftpdir_rw_t)
@@ -95,6 +94,10 @@
 ')
 
 optional_policy(`
+	cobbler_read_lib_files(tftpd_t)
+')
+
+optional_policy(`
 	inetd_udp_service_domain(tftpd_t, tftpd_exec_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/tgtd.fc serefpolicy-3.7.19/policy/modules/services/tgtd.fc
--- nsaserefpolicy/policy/modules/services/tgtd.fc	2011-03-17 07:21:21.057851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/tgtd.fc	2011-04-20 13:47:26.324000005 +0000
@@ -1,3 +1,4 @@
 /etc/rc\.d/init\.d/tgtd		--	gen_context(system_u:object_r:tgtd_initrc_exec_t,s0)
 /usr/sbin/tgtd			--	gen_context(system_u:object_r:tgtd_exec_t,s0)
 /var/lib/tgtd(/.*)?			gen_context(system_u:object_r:tgtd_var_lib_t,s0)
+/var/run/tgtd.*         -s  gen_context(system_u:object_r:tgtd_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/tgtd.if serefpolicy-3.7.19/policy/modules/services/tgtd.if
--- nsaserefpolicy/policy/modules/services/tgtd.if	2011-03-17 07:21:20.765851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/tgtd.if	2011-03-17 07:21:03.139851001 +0000
@@ -26,3 +26,21 @@
 
         allow $1 tgtd_t:sem rw_sem_perms;
 ')
+
+#######################################
+## <summary>
+##      Manage tgtd sempaphores.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`tgtd_manage_semaphores',`
+        gen_require(`
+                type tgtd_t;
+        ')
+
+        allow $1 tgtd_t:sem create_sem_perms;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/tgtd.te serefpolicy-3.7.19/policy/modules/services/tgtd.te
--- nsaserefpolicy/policy/modules/services/tgtd.te	2011-03-17 07:21:22.156851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/tgtd.te	2012-05-03 10:39:48.866785433 +0000
@@ -22,6 +22,9 @@
 type tgtd_var_lib_t;
 files_type(tgtd_var_lib_t)
 
+type tgtd_var_run_t;
+files_pid_file(tgtd_var_run_t)
+
 ########################################
 #
 # TGTD personal policy.
@@ -38,7 +41,7 @@
 allow tgtd_t self:unix_dgram_socket create_socket_perms;
 
 manage_sock_files_pattern(tgtd_t, tgtd_tmp_t, tgtd_tmp_t)
-files_tmp_filetrans(tgtd_t, tgtd_tmp_t, { sock_file })
+files_tmp_filetrans(tgtd_t, tgtd_tmp_t, sock_file)
 
 manage_files_pattern(tgtd_t, tgtd_tmpfs_t, tgtd_tmpfs_t)
 fs_tmpfs_filetrans(tgtd_t, tgtd_tmpfs_t, file)
@@ -47,6 +50,11 @@
 manage_files_pattern(tgtd_t, tgtd_var_lib_t, tgtd_var_lib_t)
 files_var_lib_filetrans(tgtd_t, tgtd_var_lib_t, { dir file })
 
+manage_dirs_pattern(tgtd_t, tgtd_var_run_t,tgtd_var_run_t)
+manage_files_pattern(tgtd_t, tgtd_var_run_t,tgtd_var_run_t)
+manage_sock_files_pattern(tgtd_t, tgtd_var_run_t,tgtd_var_run_t)
+files_pid_filetrans(tgtd_t,tgtd_var_run_t, { file sock_file })
+
 kernel_read_fs_sysctls(tgtd_t)
 
 corenet_all_recvfrom_netlabel(tgtd_t)
@@ -58,10 +66,18 @@
 corenet_tcp_bind_iscsi_port(tgtd_t)
 corenet_sendrecv_iscsi_server_packets(tgtd_t)
 
+dev_read_sysfs(tgtd_t)
+
 files_read_etc_files(tgtd_t)
 
+fs_read_anon_inodefs_files(tgtd_t)
+
 storage_manage_fixed_disk(tgtd_t)
 
 logging_send_syslog_msg(tgtd_t)
 
 miscfiles_read_localization(tgtd_t)
+
+optional_policy(`
+	iscsi_manage_semaphores(tgtd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/tor.if serefpolicy-3.7.19/policy/modules/services/tor.if
--- nsaserefpolicy/policy/modules/services/tor.if	2011-03-17 07:21:22.244851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/tor.if	2011-03-17 07:21:04.976851001 +0000
@@ -42,7 +42,7 @@
 		type tor_initrc_exec_t;
 	')
 
-	allow $1 tor_t:process { ptrace signal_perms getattr };
+	allow $1 tor_t:process { ptrace signal_perms };
 	ps_process_pattern($1, tor_t)
 
 	init_labeled_script_domtrans($1, tor_initrc_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/tor.te serefpolicy-3.7.19/policy/modules/services/tor.te
--- nsaserefpolicy/policy/modules/services/tor.te	2011-03-17 07:21:21.208851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/tor.te	2011-11-29 13:30:45.563364227 +0000
@@ -43,8 +43,11 @@
 #
 
 allow tor_t self:capability { setgid setuid sys_tty_config };
+allow tor_t self:process signal;
+
 allow tor_t self:fifo_file rw_fifo_file_perms;
 allow tor_t self:unix_stream_socket create_stream_socket_perms;
+allow tor_t self:unix_dgram_socket create_socket_perms;
 allow tor_t self:netlink_route_socket r_netlink_socket_perms;
 allow tor_t self:tcp_socket create_stream_socket_perms;
 
@@ -82,7 +85,9 @@
 corenet_tcp_sendrecv_all_ports(tor_t)
 corenet_tcp_sendrecv_all_reserved_ports(tor_t)
 corenet_tcp_bind_generic_node(tor_t)
+corenet_udp_bind_dns_port(tor_t)
 corenet_tcp_bind_tor_port(tor_t)
+corenet_tcp_bind_tor_socks_port(tor_t)
 corenet_sendrecv_tor_server_packets(tor_t)
 # TOR will need to connect to various ports
 corenet_tcp_connect_all_ports(tor_t)
@@ -101,6 +106,8 @@
 
 auth_use_nsswitch(tor_t)
 
+logging_send_syslog_msg(tor_t)
+
 miscfiles_read_localization(tor_t)
 
 tunable_policy(`tor_bind_all_unreserved_ports', `
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/tuned.fc serefpolicy-3.7.19/policy/modules/services/tuned.fc
--- nsaserefpolicy/policy/modules/services/tuned.fc	2011-03-17 07:21:20.968851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/tuned.fc	2011-03-17 07:21:03.410851001 +0000
@@ -5,4 +5,5 @@
 /var/log/tuned(/.*)?			gen_context(system_u:object_r:tuned_log_t,s0)
 /var/log/tuned\.log		--	gen_context(system_u:object_r:tuned_log_t,s0)
 
+/var/run/tuned(/.*)?	--  gen_context(system_u:object_r:tuned_var_run_t,s0)
 /var/run/tuned\.pid		--	gen_context(system_u:object_r:tuned_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/tuned.te serefpolicy-3.7.19/policy/modules/services/tuned.te
--- nsaserefpolicy/policy/modules/services/tuned.te	2011-03-17 07:21:20.798851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/tuned.te	2011-03-17 07:21:03.207851002 +0000
@@ -25,13 +25,17 @@
 #
 
 dontaudit tuned_t self:capability { dac_override sys_tty_config };
+allow tuned_t self:fifo_file rw_fifo_file_perms;
 
 manage_dirs_pattern(tuned_t, tuned_log_t, tuned_log_t)
 manage_files_pattern(tuned_t, tuned_log_t, tuned_log_t)
 logging_log_filetrans(tuned_t, tuned_log_t, file)
 
+manage_dirs_pattern(tuned_t, tuned_var_run_t, tuned_var_run_t)
 manage_files_pattern(tuned_t, tuned_var_run_t, tuned_var_run_t)
-files_pid_filetrans(tuned_t, tuned_var_run_t, file)
+manage_fifo_files_pattern(tuned_t, tuned_var_run_t, tuned_var_run_t)
+manage_sock_files_pattern(tuned_t, tuned_var_run_t, tuned_var_run_t)
+files_pid_filetrans(tuned_t, tuned_var_run_t, { file sock_file fifo_file })
 
 corecmd_exec_shell(tuned_t)
 corecmd_exec_bin(tuned_t)
@@ -59,6 +63,10 @@
 	fstools_domtrans(tuned_t)
 ')
 
+optional_policy(`
+	gnome_dontaudit_search_config(tuned_t)
+')
+
 # to allow network interface tuning
 optional_policy(`
 	sysnet_domtrans_ifconfig(tuned_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ucspitcp.if serefpolicy-3.7.19/policy/modules/services/ucspitcp.if
--- nsaserefpolicy/policy/modules/services/ucspitcp.if	2011-03-17 07:21:21.482851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ucspitcp.if	2011-03-17 07:21:03.944851003 +0000
@@ -31,8 +31,5 @@
 
 	role system_r types $1;
 
-	domain_auto_trans(ucspitcp_t, $2, $1)
-	allow $1 ucspitcp_t:fd use;
-	allow $1 ucspitcp_t:process sigchld;
-	allow $1 ucspitcp_t:tcp_socket rw_stream_socket_perms;
+	domtrans_pattern(ucspitcp_t, $2, $1)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ucspitcp.te serefpolicy-3.7.19/policy/modules/services/ucspitcp.te
--- nsaserefpolicy/policy/modules/services/ucspitcp.te	2011-03-17 07:21:22.150851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ucspitcp.te	2011-03-17 07:21:04.919851001 +0000
@@ -92,3 +92,8 @@
 	daemontools_service_domain(ucspitcp_t, ucspitcp_exec_t)
 	daemontools_read_svc(ucspitcp_t)
 ')
+
+optional_policy(`
+    daemontools_sigchld_run(ucspitcp_t)
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/ulogd.te serefpolicy-3.7.19/policy/modules/services/ulogd.te
--- nsaserefpolicy/policy/modules/services/ulogd.te	2011-03-17 07:21:21.023851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/ulogd.te	2011-03-17 07:21:03.491851003 +0000
@@ -32,6 +32,9 @@
 
 allow ulogd_t self:capability net_admin;
 allow ulogd_t self:netlink_nflog_socket create_socket_perms;
+allow ulogd_t self:netlink_route_socket r_netlink_socket_perms;
+allow ulogd_t self:tcp_socket { create_stream_socket_perms connect };
+allow ulogd_t self:udp_socket create_socket_perms;
 
 # config files
 read_files_pattern(ulogd_t, ulogd_etc_t, ulogd_etc_t)
@@ -44,6 +47,19 @@
 manage_files_pattern(ulogd_t, ulogd_var_log_t, ulogd_var_log_t)
 logging_log_filetrans(ulogd_t, ulogd_var_log_t, file)
 
+files_read_etc_files(ulogd_t)
+files_read_usr_files(ulogd_t)
 files_search_etc(ulogd_t)
 
 miscfiles_read_localization(ulogd_t)
+
+sysnet_dns_name_resolve(ulogd_t)
+
+optional_policy(`
+        mysql_stream_connect(ulogd_t)
+')
+
+optional_policy(`
+        postgresql_stream_connect(ulogd_t)
+		postgresql_tcp_connect(ulogd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/usbmuxd.fc serefpolicy-3.7.19/policy/modules/services/usbmuxd.fc
--- nsaserefpolicy/policy/modules/services/usbmuxd.fc	2011-03-17 07:21:22.120851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/usbmuxd.fc	2011-03-17 07:21:04.892851001 +0000
@@ -1,3 +1,3 @@
 /usr/sbin/usbmuxd	--	gen_context(system_u:object_r:usbmuxd_exec_t,s0)
 
-/var/run/usbmuxd	-s 	gen_context(system_u:object_r:usbmuxd_var_run_t,s0)
+/var/run/usbmuxd.*	 	gen_context(system_u:object_r:usbmuxd_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/uucp.if serefpolicy-3.7.19/policy/modules/services/uucp.if
--- nsaserefpolicy/policy/modules/services/uucp.if	2011-03-17 07:21:22.046851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/uucp.if	2011-03-17 07:21:04.786851003 +0000
@@ -1,5 +1,24 @@
 ## <summary>Unix to Unix Copy</summary>
 
+#######################################
+## <summary>
+## Execute the uucico program in the
+## uucpd_t domain.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`uucp_domtrans',`
+	gen_require(`
+		type uucpd_t, uucpd_exec_t;
+	')
+
+	domtrans_pattern($1, uucpd_exec_t, uucpd_t)
+')
+
 ########################################
 ## <summary>
 ##	Allow the specified domain to append
@@ -80,7 +99,7 @@
 		type uucpd_var_run_t;
 	')
 
-	allow $1 uucpd_t:process { ptrace signal_perms getattr };
+	allow $1 uucpd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, uucpd_t)
 
 	logging_list_logs($1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/uucp.te serefpolicy-3.7.19/policy/modules/services/uucp.te
--- nsaserefpolicy/policy/modules/services/uucp.te	2011-03-17 07:21:21.984851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/uucp.te	2011-03-17 07:21:04.659851003 +0000
@@ -84,6 +84,7 @@
 corenet_udp_sendrecv_generic_node(uucpd_t)
 corenet_tcp_sendrecv_all_ports(uucpd_t)
 corenet_udp_sendrecv_all_ports(uucpd_t)
+corenet_tcp_connect_ssh_port(uucpd_t)
 
 dev_read_urand(uucpd_t)
 
@@ -114,6 +115,10 @@
 	kerberos_use(uucpd_t)
 ')
 
+optional_policy(`
+	ssh_exec(uucpd_t)
+')    
+
 ########################################
 #
 # UUX Local policy
@@ -125,6 +130,8 @@
 uucp_append_log(uux_t)
 uucp_manage_spool(uux_t)
 
+domtrans_pattern(uux_t, uucpd_exec_t, uucpd_t)
+
 corecmd_exec_bin(uux_t)
 
 files_read_etc_files(uux_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/uuidd.fc serefpolicy-3.7.19/policy/modules/services/uuidd.fc
--- nsaserefpolicy/policy/modules/services/uuidd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/uuidd.fc	2011-08-02 09:00:11.729523005 +0000
@@ -0,0 +1,9 @@
+
+/etc/rc\.d/init\.d/uuidd	--	gen_context(system_u:object_r:uuidd_initrc_exec_t,s0)
+
+
+/usr/sbin/uuidd		--	gen_context(system_u:object_r:uuidd_exec_t,s0)
+
+/var/lib/libuuid(/.*)?		gen_context(system_u:object_r:uuidd_var_lib_t,s0)
+
+/var/run/uuidd(/.*)?		gen_context(system_u:object_r:uuidd_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/uuidd.if serefpolicy-3.7.19/policy/modules/services/uuidd.if
--- nsaserefpolicy/policy/modules/services/uuidd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/uuidd.if	2011-08-02 09:00:11.729523005 +0000
@@ -0,0 +1,193 @@
+## <summary>policy for uuidd</summary>
+
+########################################
+## <summary>
+##	Transition to uuidd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`uuidd_domtrans',`
+	gen_require(`
+		type uuidd_t, uuidd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, uuidd_exec_t, uuidd_t)
+')
+
+########################################
+## <summary>
+##	Execute uuidd server in the uuidd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`uuidd_initrc_domtrans',`
+	gen_require(`
+		type uuidd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, uuidd_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	Search uuidd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`uuidd_search_lib',`
+	gen_require(`
+		type uuidd_var_lib_t;
+	')
+
+	allow $1 uuidd_var_lib_t:dir search_dir_perms;
+	files_search_var_lib($1)
+')
+
+########################################
+## <summary>
+##	Read uuidd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`uuidd_read_lib_files',`
+	gen_require(`
+		type uuidd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	read_files_pattern($1, uuidd_var_lib_t, uuidd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage uuidd lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`uuidd_manage_lib_files',`
+	gen_require(`
+		type uuidd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_files_pattern($1, uuidd_var_lib_t, uuidd_var_lib_t)
+')
+
+########################################
+## <summary>
+##	Manage uuidd lib directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`uuidd_manage_lib_dirs',`
+	gen_require(`
+		type uuidd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, uuidd_var_lib_t, uuidd_var_lib_t)
+')
+
+
+########################################
+## <summary>
+##	Read uuidd PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`uuidd_read_pid_files',`
+	gen_require(`
+		type uuidd_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 uuidd_var_run_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Connect to uuidd over an unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`uuidd_stream_connect_manager',`
+	gen_require(`
+		type uuidd_t, uuidd_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, uuidd_var_run_t, uuidd_var_run_t, uuidd_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an uuidd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`uuidd_admin',`
+	gen_require(`
+		type uuidd_t;
+	type uuidd_initrc_exec_t;
+	type uuidd_var_lib_t;
+	type uuidd_var_run_t;
+	')
+
+	allow $1 uuidd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, uuidd_t)
+
+	uuidd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 uuidd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, uuidd_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, uuidd_var_run_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/uuidd.te serefpolicy-3.7.19/policy/modules/services/uuidd.te
--- nsaserefpolicy/policy/modules/services/uuidd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/uuidd.te	2011-08-30 14:19:44.049160002 +0000
@@ -0,0 +1,49 @@
+policy_module(uuidd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type uuidd_t;
+type uuidd_exec_t;
+init_daemon_domain(uuidd_t, uuidd_exec_t)
+
+type uuidd_initrc_exec_t;
+init_script_file(uuidd_initrc_exec_t)
+
+type uuidd_var_lib_t;
+files_type(uuidd_var_lib_t)
+
+type uuidd_var_run_t;
+files_pid_file(uuidd_var_run_t)
+
+########################################
+#
+# uuidd local policy
+#
+allow uuidd_t self:capability { setuid };
+allow uuidd_t self:process { signal };
+
+allow uuidd_t self:fifo_file rw_fifo_file_perms;
+allow uuidd_t self:unix_stream_socket create_stream_socket_perms;
+allow uuidd_t self:udp_socket create_socket_perms;
+
+manage_dirs_pattern(uuidd_t, uuidd_var_lib_t, uuidd_var_lib_t)
+manage_files_pattern(uuidd_t, uuidd_var_lib_t, uuidd_var_lib_t)
+
+manage_dirs_pattern(uuidd_t, uuidd_var_run_t, uuidd_var_run_t)
+manage_files_pattern(uuidd_t, uuidd_var_run_t, uuidd_var_run_t)
+manage_sock_files_pattern(uuidd_t, uuidd_var_run_t, uuidd_var_run_t)
+
+dev_read_urand(uuidd_t)
+
+domain_use_interactive_fds(uuidd_t)
+
+files_read_etc_files(uuidd_t)
+
+miscfiles_read_localization(uuidd_t)
+
+optional_policy(`
+	unconfined_domain(uuidd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/varnishd.if serefpolicy-3.7.19/policy/modules/services/varnishd.if
--- nsaserefpolicy/policy/modules/services/varnishd.if	2011-03-17 07:21:22.389851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/varnishd.if	2011-03-17 07:21:05.126851002 +0000
@@ -56,6 +56,25 @@
 	read_files_pattern($1, varnishd_etc_t, varnishd_etc_t)
 ')
 
+#####################################
+## <summary>
+##  Read varnish lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`varnishd_read_lib_files',`
+    gen_require(`
+        type varnishd_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    read_files_pattern($1, varnishd_var_lib_t, varnishd_var_lib_t)
+')
+
 #######################################
 ## <summary>
 ##	Read varnish logs.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/varnishd.te serefpolicy-3.7.19/policy/modules/services/varnishd.te
--- nsaserefpolicy/policy/modules/services/varnishd.te	2011-03-17 07:21:21.926851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/varnishd.te	2011-03-17 07:21:04.564851003 +0000
@@ -52,6 +52,7 @@
 #
 
 allow varnishd_t self:capability { dac_override ipc_lock setuid setgid };
+dontaudit varnishd_t self:capability sys_tty_config;
 allow varnishd_t self:process signal;
 allow varnishd_t self:fifo_file rw_fifo_file_perms;
 allow varnishd_t self:tcp_socket create_stream_socket_perms;
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/vdagent.fc serefpolicy-3.7.19/policy/modules/services/vdagent.fc
--- nsaserefpolicy/policy/modules/services/vdagent.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/vdagent.fc	2011-03-17 07:21:04.502851002 +0000
@@ -0,0 +1,10 @@
+
+/sbin/vdagent		--	gen_context(system_u:object_r:vdagent_exec_t,s0)
+
+/usr/sbin/spice-vdagentd        --  gen_context(system_u:object_r:vdagent_exec_t,s0)
+
+/var/run/spice-vdagentd(/.*)?	gen_context(system_u:object_r:vdagent_var_run_t,s0)
+/var/run/spice-vdagentd.\pid    --  gen_context(system_u:object_r:vdagent_var_run_t,s0)
+
+/var/log/spice-vdagentd(/.*)?           gen_context(system_u:object_r:vdagent_log_t,s0)
+/var/log/spice-vdagentd\.log    --  gen_context(system_u:object_r:vdagent_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/vdagent.if serefpolicy-3.7.19/policy/modules/services/vdagent.if
--- nsaserefpolicy/policy/modules/services/vdagent.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/vdagent.if	2012-03-28 10:22:59.549831952 +0000
@@ -0,0 +1,122 @@
+
+## <summary>policy for vdagent</summary>
+
+#####################################
+## <summary>
+##  Getattr on vdagent executable.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`vdagent_getattr_exec',`
+    gen_require(`
+        type vdagent_exec_t;
+    ')
+
+    allow $1 vdagent_exec_t:file getattr;
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run vdagent.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`vdagent_domtrans',`
+	gen_require(`
+		type vdagent_t, vdagent_exec_t;
+	')
+
+	domtrans_pattern($1, vdagent_exec_t, vdagent_t)
+')
+
+#######################################
+## <summary>
+##  Get the attributes of vdagent logs.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`vdagent_getattr_log',`
+    gen_require(`
+        type vdagent_log_t;
+    ')
+
+    logging_search_logs($1)
+    allow $1 vdagent_log_t:file getattr_file_perms;
+')
+
+########################################
+## <summary>
+##	Read vdagent PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`vdagent_read_pid_files',`
+	gen_require(`
+		type vdagent_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 vdagent_var_run_t:file read_file_perms;
+')
+
+#####################################
+## <summary>
+##      Connect to vdagent over a unix domain
+##      stream socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`vdagent_stream_connect',`
+        gen_require(`
+                type vdagent_var_run_t, vdagent_t;
+        ')
+
+        files_search_pids($1)
+        stream_connect_pattern($1, vdagent_var_run_t, vdagent_var_run_t, vdagent_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an vdagent environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`vdagent_admin',`
+	gen_require(`
+		type vdagent_t;
+                type vdagent_var_run_t;
+	')
+
+	allow $1 vdagent_t:process { ptrace signal_perms };
+	ps_process_pattern($1, vdagent_t)
+
+	files_search_pids($1)
+	admin_pattern($1, vdagent_var_run_t)
+
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/vdagent.te serefpolicy-3.7.19/policy/modules/services/vdagent.te
--- nsaserefpolicy/policy/modules/services/vdagent.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/vdagent.te	2012-04-12 10:29:40.669103087 +0000
@@ -0,0 +1,60 @@
+policy_module(vdagent,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type vdagent_t;
+type vdagent_exec_t;
+init_daemon_domain(vdagent_t, vdagent_exec_t)
+udev_system_domain(vdagent_t, vdagent_exec_t)
+
+type vdagent_var_run_t;
+files_pid_file(vdagent_var_run_t)
+
+type vdagent_log_t;
+logging_log_file(vdagent_log_t)
+
+########################################
+#
+# vdagent local policy
+#
+
+dontaudit vdagent_t self:capability sys_admin;
+allow vdagent_t self:process { fork signal };
+
+allow vdagent_t self:fifo_file rw_fifo_file_perms;
+allow vdagent_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(vdagent_t, vdagent_var_run_t, vdagent_var_run_t)
+manage_dirs_pattern(vdagent_t, vdagent_var_run_t, vdagent_var_run_t)
+manage_sock_files_pattern(vdagent_t, vdagent_var_run_t, vdagent_var_run_t)
+manage_lnk_files_pattern(vdagent_t, vdagent_var_run_t, vdagent_var_run_t)
+files_pid_filetrans(vdagent_t, vdagent_var_run_t, { file dir sock_file })
+
+manage_dirs_pattern(vdagent_t, vdagent_log_t, vdagent_log_t)
+manage_files_pattern(vdagent_t, vdagent_log_t, vdagent_log_t)
+logging_log_filetrans(vdagent_t, vdagent_log_t, { file })
+
+domain_use_interactive_fds(vdagent_t)
+
+dev_rw_input_dev(vdagent_t)
+dev_read_sysfs(vdagent_t)
+dev_dontaudit_write_mtrr(vdagent_t)
+
+term_use_virtio_console(vdagent_t)
+
+files_read_etc_files(vdagent_t)
+
+miscfiles_read_localization(vdagent_t)
+
+userdom_use_user_ptys(vdagent_t)
+
+optional_policy(`
+    consolekit_dbus_chat(vdagent_t)
+')
+
+optional_policy(`
+    dbus_system_bus_client(vdagent_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/vhostmd.fc serefpolicy-3.7.19/policy/modules/services/vhostmd.fc
--- nsaserefpolicy/policy/modules/services/vhostmd.fc	2011-03-17 07:21:21.721851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/vhostmd.fc	2011-03-17 07:21:04.255851003 +0000
@@ -1,5 +1,5 @@
-/etc/rc.d/init.d/vhostmd	--	gen_context(system_u:object_r:vhostmd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/vhostmd	--	gen_context(system_u:object_r:vhostmd_initrc_exec_t,s0)
 
 /usr/sbin/vhostmd		--	gen_context(system_u:object_r:vhostmd_exec_t,s0)
 
-/var/run/vhostmd.pid		--	gen_context(system_u:object_r:vhostmd_var_run_t,s0)
+/var/run/vhostmd\.pid		--	gen_context(system_u:object_r:vhostmd_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/vhostmd.if serefpolicy-3.7.19/policy/modules/services/vhostmd.if
--- nsaserefpolicy/policy/modules/services/vhostmd.if	2011-03-17 07:21:21.183851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/vhostmd.if	2011-03-17 07:21:03.692851003 +0000
@@ -51,8 +51,8 @@
 		type vhostmd_tmpfs_t;
 	')
 
+	fs_search_tmpfs($1)
 	allow $1 vhostmd_tmpfs_t:file read_file_perms;
-	files_search_tmp($1)
 ')
 
 ########################################
@@ -89,8 +89,8 @@
 		type vhostmd_tmpfs_t;
 	')
 
+	fs_search_tmpfs($1)
 	rw_files_pattern($1, vhostmd_tmpfs_t, vhostmd_tmpfs_t)
-	files_search_tmp($1)
 ')
 
 ########################################
@@ -108,8 +108,8 @@
 		type vhostmd_tmpfs_t;
 	')
 
+	fs_search_tmpfs($1)
 	manage_files_pattern($1, vhostmd_tmpfs_t, vhostmd_tmpfs_t)
-	files_search_tmp($1)
 ')
 
 ########################################
@@ -146,7 +146,8 @@
 		type vhostmd_var_run_t;
 	')
 
-	 manage_files_pattern($1, vhostmd_var_run_t, vhostmd_var_run_t)
+	files_search_pids($1)
+	manage_files_pattern($1, vhostmd_var_run_t, vhostmd_var_run_t)
 ')
 
 ########################################
@@ -212,7 +213,7 @@
 	allow $1 vhostmd_t:process { ptrace signal_perms getattr };
 	ps_process_pattern($1, vhostmd_t)
 
-	vhostmd_initrc_domtrans($1)
+    init_labeled_script_domtrans($1, vhostmd_initrc_exec_t)
 	domain_system_change_exemption($1)
 	role_transition $2 vhostmd_initrc_exec_t system_r;
 	allow $2 system_r;
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/vhostmd.te serefpolicy-3.7.19/policy/modules/services/vhostmd.te
--- nsaserefpolicy/policy/modules/services/vhostmd.te	2011-03-17 07:21:21.864851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/vhostmd.te	2012-04-11 09:22:01.969555159 +0000
@@ -25,7 +25,7 @@
 #
 
 allow vhostmd_t self:capability { dac_override ipc_lock	setuid setgid };
-allow vhostmd_t self:process { setsched getsched };
+allow vhostmd_t self:process { signal setsched getsched };
 allow vhostmd_t self:fifo_file rw_file_perms;
 
 manage_dirs_pattern(vhostmd_t, vhostmd_tmpfs_t, vhostmd_tmpfs_t)
@@ -36,6 +36,7 @@
 manage_files_pattern(vhostmd_t, vhostmd_var_run_t, vhostmd_var_run_t)
 files_pid_filetrans(vhostmd_t, vhostmd_var_run_t, { file dir })
 
+kernel_read_kernel_sysctls(vhostmd_t)
 kernel_read_system_state(vhostmd_t)
 kernel_read_network_state(vhostmd_t)
 kernel_write_xen_state(vhostmd_t)
@@ -45,9 +46,13 @@
 
 corenet_tcp_connect_soundd_port(vhostmd_t)
 
+# 579803
+files_list_tmp(vhostmd_t)
 files_read_etc_files(vhostmd_t)
 files_read_usr_files(vhostmd_t)
 
+dev_read_rand(vhostmd_t)
+dev_read_urand(vhostmd_t)
 dev_read_sysfs(vhostmd_t)
 
 auth_use_nsswitch(vhostmd_t)
@@ -67,6 +72,9 @@
 
 optional_policy(`
 	virt_stream_connect(vhostmd_t)
+	# 618236
+	virt_write_content(vhostmd_t)
+	virt_getattr_exec(vhostmd_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/virt.fc serefpolicy-3.7.19/policy/modules/services/virt.fc
--- nsaserefpolicy/policy/modules/services/virt.fc	2011-03-17 07:21:21.680851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/virt.fc	2012-05-14 13:43:05.491559972 +0000
@@ -1,4 +1,5 @@
-HOME_DIR/.virtinst(/.*)? 	gen_context(system_u:object_r:virt_content_t,s0)
+HOME_DIR/.libvirt(/.*)?     gen_context(system_u:object_r:virt_home_t,s0)
+HOME_DIR/.virtinst(/.*)? 	gen_context(system_u:object_r:virt_home_t,s0)
 HOME_DIR/VirtualMachines(/.*)? 	gen_context(system_u:object_r:virt_image_t,s0)
 HOME_DIR/VirtualMachines/isos(/.*)? gen_context(system_u:object_r:virt_content_t,s0)
 
@@ -12,18 +13,40 @@
 /etc/xen/[^/]*		-d	gen_context(system_u:object_r:virt_etc_rw_t,s0)
 /etc/xen/.*/.*			gen_context(system_u:object_r:virt_etc_rw_t,s0)
 
+/usr/sbin/condor_vm-gahp -- gen_context(system_u:object_r:virtd_exec_t,s0)
 /usr/sbin/libvirtd	--	gen_context(system_u:object_r:virtd_exec_t,s0)
+/usr/sbin/libvirt-qmf   --  gen_context(system_u:object_r:virt_qmf_exec_t,s0)
 
-/var/cache/libvirt(/.*)?	gen_context(system_u:object_r:svirt_cache_t,s0)
+/var/cache/libvirt  -d  gen_context(system_u:object_r:virt_cache_t,s0-mls_systemhigh)
+/var/cache/libvirt/.*       <<none>>
 
 /var/lib/libvirt(/.*)?		gen_context(system_u:object_r:virt_var_lib_t,s0)
 /var/lib/libvirt/boot(/.*)? 	gen_context(system_u:object_r:virt_content_t,s0)
 /var/lib/libvirt/images(/.*)? 	gen_context(system_u:object_r:virt_image_t,s0)
 /var/lib/libvirt/isos(/.*)? 	gen_context(system_u:object_r:virt_content_t,s0)
-/var/lib/libvirt/qemu(/.*)? 	gen_context(system_u:object_r:svirt_var_run_t,s0)
+/var/lib/libvirt/qemu(/.*)? 	gen_context(system_u:object_r:qemu_var_run_t,s0-mls_systemhigh)
 
 /var/log/libvirt(/.*)?		gen_context(system_u:object_r:virt_log_t,s0)
 /var/run/libvirt(/.*)?		gen_context(system_u:object_r:virt_var_run_t,s0)
-/var/run/libvirt/qemu(/.*)? 	gen_context(system_u:object_r:svirt_var_run_t,s0)
+/var/run/libvirt/qemu(/.*)? 	gen_context(system_u:object_r:qemu_var_run_t,s0-mls_systemhigh)
 
+
+# support for vdsm
+# bug 685061
+/usr/share/vdsm/vdsm    --  gen_context(system_u:object_r:virtd_exec_t,s0)
 /var/vdsm(/.*)?			gen_context(system_u:object_r:virt_var_run_t,s0)
+
+# support for AEOLUS project
+/usr/bin/imgfac\.py     --          gen_context(system_u:object_r:virtd_exec_t,s0)
+/usr/bin/imagefactory	--			gen_context(system_u:object_r:virtd_exec_t,s0)
+/var/cache/oz(/.*)?                 gen_context(system_u:object_r:virt_cache_t,s0)
+/var/lib/imagefactory/images(/.*)?	gen_context(system_u:object_r:virt_image_t,s0)
+/var/lib/oz(/.*)?                   gen_context(system_u:object_r:virt_var_lib_t,s0)
+/var/lib/oz/isos(/.*)?              gen_context(system_u:object_r:virt_content_t,s0)
+
+# add support vios-proxy-*
+/usr/bin/vios-proxy-host    --  gen_context(system_u:object_r:virtd_exec_t,s0)
+/usr/bin/vios-proxy-guest   --  gen_context(system_u:object_r:virtd_exec_t,s0)
+
+# support for nova-stack
+/usr/bin/nova-compute       --  gen_context(system_u:object_r:virtd_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/virt.if serefpolicy-3.7.19/policy/modules/services/virt.if
--- nsaserefpolicy/policy/modules/services/virt.if	2011-03-17 07:21:21.601851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/virt.if	2011-11-07 17:35:56.631190468 +0000
@@ -16,14 +16,17 @@
 		type virtd_t;
 		attribute virt_image_type;
 		attribute virt_domain;
+		attribute virt_ptynode;
 	')
 
 	type $1_t, virt_domain;
 	domain_type($1_t)
 	domain_user_exemption_target($1_t)
+	mls_rangetrans_target($1_t)
+	mcs_untrusted_proc($1_t)
 	role system_r types $1_t;
 
-	type $1_devpts_t;
+	type $1_devpts_t, virt_ptynode;
 	term_pty($1_devpts_t)
 
 	type $1_tmp_t;
@@ -35,16 +38,16 @@
 	type $1_image_t, virt_image_type;
 	files_type($1_image_t)
 	dev_node($1_image_t)
+	dev_associate_sysfs($1_image_t)
 
-	type $1_var_run_t;
-	files_pid_file($1_var_run_t)
-
-	allow $1_t $1_devpts_t:chr_file { rw_chr_file_perms setattr };
+	allow $1_t $1_devpts_t:chr_file { rw_chr_file_perms setattr_chr_file_perms };
 	term_create_pty($1_t, $1_devpts_t)
 
 	manage_dirs_pattern($1_t, $1_image_t, $1_image_t)
 	manage_files_pattern($1_t, $1_image_t, $1_image_t)
+	manage_fifo_files_pattern($1_t, $1_image_t, $1_image_t)
 	read_lnk_files_pattern($1_t, $1_image_t, $1_image_t)
+	rw_chr_files_pattern($1_t, $1_image_t, $1_image_t)
 	rw_blk_files_pattern($1_t, $1_image_t, $1_image_t)
 
 	manage_dirs_pattern($1_t, $1_tmp_t, $1_tmp_t)
@@ -57,18 +60,6 @@
 	manage_lnk_files_pattern($1_t, $1_tmpfs_t, $1_tmpfs_t)
 	fs_tmpfs_filetrans($1_t, $1_tmpfs_t, { dir file lnk_file })
 
-	stream_connect_pattern(virtd_t, $1_var_run_t, $1_var_run_t, virt_domain)
-	manage_dirs_pattern(virtd_t, $1_var_run_t, $1_var_run_t)
-	manage_files_pattern(virtd_t, $1_var_run_t, $1_var_run_t)
-	manage_sock_files_pattern(virtd_t, $1_var_run_t, $1_var_run_t)
-
-	manage_dirs_pattern($1_t, $1_var_run_t, $1_var_run_t)
-	manage_files_pattern($1_t, $1_var_run_t, $1_var_run_t)
-	manage_sock_files_pattern($1_t, $1_var_run_t, $1_var_run_t)
-	manage_lnk_files_pattern($1_t, $1_var_run_t, $1_var_run_t)
-	files_pid_filetrans($1_t, $1_var_run_t, { dir file })
-	stream_connect_pattern($1_t, $1_var_run_t, $1_var_run_t, virtd_t)
-
 	optional_policy(`
 		xserver_rw_shm($1_t)
 	')
@@ -96,6 +87,24 @@
 	dev_node($1)
 ')
 
+######################################
+## <summary>
+##  Getattr on virt executable.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`virt_getattr_exec',`
+    gen_require(`
+        type virtd_exec_t;
+    ')
+
+    allow $1 virtd_exec_t:file getattr;
+')
+
 ########################################
 ## <summary>
 ##	Execute a domain transition to run virt.
@@ -116,6 +125,34 @@
 
 #######################################
 ## <summary>
+##  Execute a domain transition to run virt.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed to transition.
+## </summary>
+## </param>
+## <param name="role">
+## <summary>
+##  Role allowed to access.
+## </summary>
+## </param>
+#
+interface(`virt_run',`
+    gen_require(`
+        type virtd_t;
+		type qemu_t;
+    ')
+
+    virt_domtrans($1)
+
+    role $2 types virtd_t;
+	role $2 types qemu_t;
+
+')
+
+#######################################
+## <summary>
 ##	Connect to virt over an unix domain stream socket.
 ## </summary>
 ## <param name="domain">
@@ -171,6 +208,7 @@
 	files_search_etc($1)
 	read_files_pattern($1, virt_etc_t, virt_etc_t)
 	read_files_pattern($1, virt_etc_rw_t, virt_etc_rw_t)
+	read_lnk_files_pattern($1, virt_etc_rw_t, virt_etc_rw_t)
 ')
 
 ########################################
@@ -192,6 +230,7 @@
 	files_search_etc($1)
 	manage_files_pattern($1, virt_etc_t, virt_etc_t)
 	manage_files_pattern($1, virt_etc_rw_t, virt_etc_rw_t)
+	manage_lnk_files_pattern($1, virt_etc_rw_t, virt_etc_rw_t)
 ')
 
 ########################################
@@ -229,6 +268,24 @@
 	')
 ')
 
+#######################################
+## <summary>
+## Allow domain to write virt image files
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain to not audit.
+## </summary>
+## </param>
+#
+interface(`virt_write_content',`
+	gen_require(`
+		type virt_content_t;
+	')
+
+	allow $1 virt_content_t:file write_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Read virt PID files.
@@ -306,6 +363,24 @@
 	read_lnk_files_pattern($1, virt_var_lib_t, virt_var_lib_t)
 ')
 
+#######################################
+## <summary>
+## Dontaudit inherited read virt lib files.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain to not audit.
+## </summary>
+## </param>
+#
+interface(`virt_dontaudit_read_lib_files',`
+	gen_require(`
+		type virt_var_lib_t;
+	')
+
+	dontaudit $1 virt_var_lib_t:file read_inherited_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Create, read, write, and delete
@@ -386,6 +461,24 @@
 	manage_lnk_files_pattern($1, virt_log_t, virt_log_t)
 ')
 
+#######################################
+## <summary>
+## Allow domain to read virt blk image files
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`virt_read_blk_images',`
+	gen_require(`
+		attribute virt_image_type;
+	')
+
+	read_blk_files_pattern($1, virt_image_type, virt_image_type)
+')
+
 ########################################
 ## <summary>
 ##	Allow domain to read virt image files
@@ -408,6 +501,7 @@
 	read_files_pattern($1, virt_image_type, virt_image_type)
 	read_lnk_files_pattern($1, virt_image_type, virt_image_type)
 	read_blk_files_pattern($1, virt_image_type, virt_image_type)
+	read_chr_files_pattern($1, virt_image_type, virt_image_type)
 
 	tunable_policy(`virt_use_nfs',`
 		fs_list_nfs($1)
@@ -433,15 +527,15 @@
 ##	</summary>
 ## </param>
 #
-interface(`virt_manage_svirt_cache',`
+interface(`virt_manage_cache',`
 	gen_require(`
-		type svirt_cache_t;
+		type virt_cache_t;
 	')
 
 	files_search_var($1)
-	manage_dirs_pattern($1, svirt_cache_t, svirt_cache_t)
-	manage_files_pattern($1, svirt_cache_t, svirt_cache_t)
-	manage_lnk_files_pattern($1, svirt_cache_t, svirt_cache_t)
+	manage_dirs_pattern($1, virt_cache_t, virt_cache_t)
+	manage_files_pattern($1, virt_cache_t, virt_cache_t)
+	manage_lnk_files_pattern($1, virt_cache_t, virt_cache_t)
 ')
 
 ########################################
@@ -466,6 +560,7 @@
 	manage_files_pattern($1, virt_image_type, virt_image_type)
 	read_lnk_files_pattern($1, virt_image_type, virt_image_type)
 	rw_blk_files_pattern($1, virt_image_type, virt_image_type)
+	rw_chr_files_pattern($1, virt_image_type, virt_image_type)
 
 	tunable_policy(`virt_use_nfs',`
 		fs_manage_nfs_dirs($1)
@@ -500,6 +595,7 @@
 interface(`virt_admin',`
 	gen_require(`
 		type virtd_t, virtd_initrc_exec_t;
+		attribute virt_domain;
 	')
 
 	allow $1 virtd_t:process { ptrace signal_perms };
@@ -515,4 +611,150 @@
 	virt_manage_lib_files($1)
 
 	virt_manage_log($1)
+
+	virt_manage_images($1)
+
+    allow $1 virt_domain:process { ptrace signal_perms };
+
+')
+
+########################################
+## <summary>
+##	Execute qemu in the svirt domain, and
+##	allow the specified role the svirt domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the svirt domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`virt_transition_svirt',`
+	gen_require(`
+		type svirt_t;
+	')
+
+	allow $1 svirt_t:process transition;
+	role $2 types svirt_t;
+
+	optional_policy(`
+		ptchown_run(svirt_t, $2)
+	')
+')
+
+#######################################
+## <summary>
+## Do not audit attempts to write virt daemon unnamed pipes.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`virt_dontaudit_write_pipes',`
+	gen_require(`
+		type virtd_t;
+	')
+	dontaudit $1 virtd_t:fifo_file write;
+')
+
+#######################################
+## <summary>
+##	Send a sigkill to virtual machines
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`virt_kill_svirt',`
+	gen_require(`
+		attribute virt_domain;
+	')
+
+	allow $1 virt_domain:process sigkill;
+')
+
+#######################################
+## <summary>
+##	Send a signal to virtual machines
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`virt_signal_svirt',`
+	gen_require(`
+		attribute virt_domain;
+	')
+
+	allow $1 virt_domain:process signal;
+')
+
+######################################
+## <summary>
+##  allow domain to read
+##  virt tmpf files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+#
+interface(`virt_read_tmp_files',`
+    gen_require(`
+        type virt_tmp_t;
+    ')
+
+	read_files_pattern($1, virt_tmp_t, virt_tmp_t)
+	read_lnk_files_pattern($1, virt_tmp_t, virt_tmp_t)
+')
+
+#####################################
+## <summary>
+##  dontaudit domain to write
+##  virt tmp files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+#
+interface(`virt_dontaudit_write_tmp_files',`
+    gen_require(`
+        type virt_tmp_t;
+    ')
+
+    dontaudit $1 virt_tmp_t:file write;
+')
+
+####################################
+## <summary>
+##  Allow domain to write
+##  virt tmp sock files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+#
+interface(`virt_write_tmp_sock',`
+    gen_require(`
+        type virt_tmp_t;
+    ')
+
+	write_sock_files_pattern($1, virt_tmp_t, virt_tmp_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/virt.te serefpolicy-3.7.19/policy/modules/services/virt.te
--- nsaserefpolicy/policy/modules/services/virt.te	2011-03-17 07:21:21.075851002 +0000
+++ serefpolicy-3.7.19/policy/modules/services/virt.te	2012-07-17 14:26:03.102936182 +0000
@@ -1,5 +1,5 @@
 
-policy_module(virt, 1.3.2)
+policy_module(virt, 1.4.0)
 
 ########################################
 #
@@ -42,6 +42,20 @@
 gen_tunable(virt_use_sysfs, false)
 
 ## <desc>
+##  <p>
+##  Allow confined virtual guests to interact with the sanlock
+##  </p>
+## </desc>
+gen_tunable(virt_use_sanlock, false)
+
+## <desc>
+## <p>
+## Allow virtual machine to interact with the xserver
+## </p>
+## </desc>
+gen_tunable(virt_use_xserver, false)
+
+## <desc>
 ## <p>
 ## Allow virt to use usb devices
 ## </p>
@@ -51,11 +65,12 @@
 virt_domain_template(svirt)
 role system_r types svirt_t;
 
-type svirt_cache_t;
-files_type(svirt_cache_t)
-
 attribute virt_domain;
 attribute virt_image_type;
+attribute virt_ptynode;
+
+type virt_cache_t alias svirt_cache_t;
+files_type(virt_cache_t)
 
 type virt_etc_t;
 files_config_file(virt_etc_t)
@@ -63,23 +78,32 @@
 type virt_etc_rw_t;
 files_type(virt_etc_rw_t)
 
+type virt_home_t;
+userdom_user_home_content(virt_home_t)
+
 # virt Image files
 type virt_image_t; # customizable
 virt_image(virt_image_t)
+files_mountpoint(virt_image_t)
 
 # virt Image files
 type virt_content_t; # customizable
 virt_image(virt_content_t)
 userdom_user_home_content(virt_content_t)
 
+type virt_tmp_t;
+files_tmp_file(virt_tmp_t)
+
 type virt_log_t;
 logging_log_file(virt_log_t)
+mls_trusted_object(virt_log_t)
 
 type virt_var_run_t;
 files_pid_file(virt_var_run_t)
 
 type virt_var_lib_t;
 files_type(virt_var_lib_t)
+files_mountpoint(virt_var_lib_t)
 
 type virtd_t;
 type virtd_exec_t;
@@ -90,6 +114,11 @@
 type virtd_initrc_exec_t;
 init_script_file(virtd_initrc_exec_t)
 
+type qemu_var_run_t;
+typealias qemu_var_run_t alias svirt_var_run_t;
+files_pid_file(qemu_var_run_t)
+mls_trusted_object(qemu_var_run_t)
+
 ifdef(`enable_mcs',`
 	init_ranged_daemon_domain(virtd_t, virtd_exec_t, s0 - mcs_systemhigh)
 ')
@@ -98,6 +127,10 @@
 	init_ranged_daemon_domain(virtd_t, virtd_exec_t, s0 - mls_systemhigh)
 ')
 
+type virt_qmf_t;
+type virt_qmf_exec_t;
+init_daemon_domain(virt_qmf_t, virt_qmf_exec_t)
+
 ########################################
 #
 # svirt local policy
@@ -105,15 +138,12 @@
 
 allow svirt_t self:udp_socket create_socket_perms;
 
-manage_dirs_pattern(svirt_t, svirt_cache_t, svirt_cache_t)
-manage_files_pattern(svirt_t, svirt_cache_t, svirt_cache_t)
-files_var_filetrans(svirt_t, svirt_cache_t, { file dir })
-
 read_lnk_files_pattern(svirt_t, virt_image_t, virt_image_t)
 
 allow svirt_t svirt_image_t:dir search_dir_perms;
 manage_dirs_pattern(svirt_t, svirt_image_t, svirt_image_t)
 manage_files_pattern(svirt_t, svirt_image_t, svirt_image_t)
+manage_fifo_files_pattern(svirt_t, svirt_image_t, svirt_image_t)
 fs_hugetlbfs_filetrans(svirt_t, svirt_image_t, file)
 
 list_dirs_pattern(svirt_t, virt_content_t, virt_content_t)
@@ -121,6 +151,9 @@
 dontaudit svirt_t virt_content_t:file write_file_perms;
 dontaudit svirt_t virt_content_t:dir write;
 
+# virt will attempt to us another virtualizations pubsaudio tmpfs_t, ignore error
+dontaudit svirt_t svirt_tmpfs_t:file { read write };
+
 corenet_udp_sendrecv_generic_if(svirt_t)
 corenet_udp_sendrecv_generic_node(svirt_t)
 corenet_udp_sendrecv_all_ports(svirt_t)
@@ -131,9 +164,18 @@
 
 dev_list_sysfs(svirt_t)
 
+fs_getattr_xattr_fs(svirt_t)
+
 userdom_search_user_home_content(svirt_t)
 userdom_read_user_home_content_symlinks(svirt_t)
 userdom_read_all_users_state(svirt_t)
+append_files_pattern(svirt_t, virt_home_t, virt_home_t)
+stream_connect_pattern(svirt_t, virt_home_t, virt_home_t, virtd_t)
+
+#676372
+allow svirt_t virt_home_t:dir { add_name write };
+allow svirt_t virt_home_t:sock_file manage_sock_file_perms;
+allow svirt_t virt_home_t:file rw_inherited_file_perms;
 
 tunable_policy(`virt_use_comm',`
 	term_use_unallocated_ttys(svirt_t)
@@ -148,11 +190,13 @@
 tunable_policy(`virt_use_nfs',`
 	fs_manage_nfs_dirs(svirt_t)
 	fs_manage_nfs_files(svirt_t)
+	fs_manage_nfs_named_sockets(svirt_t)
 ')
 
 tunable_policy(`virt_use_samba',`
 	fs_manage_cifs_dirs(svirt_t)
 	fs_manage_cifs_files(svirt_t)
+	fs_manage_cifs_named_sockets(svirt_t) 
 ')
 
 tunable_policy(`virt_use_sysfs',`
@@ -161,11 +205,24 @@
 
 tunable_policy(`virt_use_usb',`
 	dev_rw_usbfs(svirt_t)
+	dev_read_sysfs(svirt_t)
 	fs_manage_dos_dirs(svirt_t)
 	fs_manage_dos_files(svirt_t)
 ')
 
 optional_policy(`
+    tunable_policy(`virt_use_sanlock',`
+        sanlock_stream_connect(svirt_t)
+    ')
+')
+
+optional_policy(`
+        tunable_policy(`virt_use_xserver',`
+                xserver_stream_connect(svirt_t)
+        ')
+')
+
+optional_policy(`
 	xen_rw_image_files(svirt_t)
 ')
 
@@ -179,22 +236,35 @@
 #
 
 allow virtd_t self:capability { chown dac_override fowner ipc_lock kill mknod net_admin net_raw setpcap setuid setgid sys_admin sys_nice sys_ptrace };
-allow virtd_t self:process { getcap getsched setcap sigkill signal signull execmem setexec setfscreate setsched };
+#kernel bug
+dontaudit virtd_t self:capability sys_module;
+allow virtd_t self:process { getcap getsched setcap sigkill signal signull execmem setexec setfscreate setsockcreate setsched };
 
+allow virtd_t self:fifo_file { manage_fifo_file_perms relabelfrom
+relabelto };
 allow virtd_t self:fifo_file rw_fifo_file_perms;
 allow virtd_t self:unix_stream_socket create_stream_socket_perms;
 allow virtd_t self:tcp_socket create_stream_socket_perms;
-allow virtd_t self:tun_socket create_socket_perms;
+allow virtd_t self:tun_socket { create_socket_perms relabelfrom relabelto };
+allow virtd_t self:rawip_socket create_socket_perms;
+allow virtd_t self:packet_socket create_socket_perms;
 allow virtd_t self:netlink_kobject_uevent_socket create_socket_perms;
 
-manage_dirs_pattern(virtd_t, svirt_cache_t, svirt_cache_t)
-manage_files_pattern(virtd_t, svirt_cache_t, svirt_cache_t)
+manage_dirs_pattern(virtd_t, virt_cache_t, virt_cache_t)
+manage_files_pattern(virtd_t, virt_cache_t, virt_cache_t)
 
 manage_dirs_pattern(virtd_t, virt_content_t, virt_content_t)
 manage_files_pattern(virtd_t, virt_content_t, virt_content_t)
 
 allow virtd_t virt_domain:process { getattr getsched setsched transition signal signull sigkill };
 
+manage_dirs_pattern(virtd_t, qemu_var_run_t, qemu_var_run_t)
+manage_files_pattern(virtd_t, qemu_var_run_t, qemu_var_run_t)
+manage_sock_files_pattern(virtd_t, qemu_var_run_t, qemu_var_run_t)
+stream_connect_pattern(virtd_t, qemu_var_run_t, qemu_var_run_t, virt_domain)
+
+allow virtd_t qemu_var_run_t:file relabel_file_perms;
+
 read_files_pattern(virtd_t, virt_etc_t, virt_etc_t)
 read_lnk_files_pattern(virtd_t, virt_etc_t, virt_etc_t)
 
@@ -205,8 +275,17 @@
 
 manage_files_pattern(virtd_t, virt_image_type, virt_image_type)
 manage_blk_files_pattern(virtd_t, virt_image_type, virt_image_type)
-allow virtd_t virt_image_type:file { relabelfrom relabelto };
-allow virtd_t virt_image_type:blk_file { relabelfrom relabelto };
+manage_chr_files_pattern(virtd_t, virt_image_type, virt_image_type)
+manage_lnk_files_pattern(virtd_t, virt_image_type, virt_image_type)
+allow virtd_t virt_image_type:file relabel_file_perms;
+allow virtd_t virt_image_type:blk_file relabel_blk_file_perms;
+allow virtd_t virt_image_type:chr_file relabel_chr_file_perms;
+allow virtd_t virt_ptynode:chr_file rw_term_perms;
+
+manage_dirs_pattern(virtd_t, virt_tmp_t, virt_tmp_t)
+manage_files_pattern(virtd_t, virt_tmp_t, virt_tmp_t)
+files_tmp_filetrans(virtd_t, virt_tmp_t, { file dir })
+can_exec(virtd_t, virt_tmp_t)
 
 manage_dirs_pattern(virtd_t, virt_log_t, virt_log_t)
 manage_files_pattern(virtd_t, virt_log_t, virt_log_t)
@@ -225,6 +304,7 @@
 kernel_read_system_state(virtd_t)
 kernel_read_network_state(virtd_t)
 kernel_rw_net_sysctls(virtd_t)
+kernel_read_kernel_sysctls(virtd_t)
 kernel_request_load_module(virtd_t)
 kernel_search_debugfs(virtd_t)
 
@@ -248,18 +328,29 @@
 dev_rw_kvm(virtd_t)
 dev_getattr_all_chr_files(virtd_t)
 dev_rw_mtrr(virtd_t)
+dev_rw_vhost(virtd_t)
+dev_setattr_generic_usb_dev(virtd_t)
+dev_relabel_generic_usb_dev(virtd_t)
 
 # Init script handling
 domain_use_interactive_fds(virtd_t)
 domain_read_all_domains_state(virtd_t)
+domain_read_all_domains_state(virtd_t)
 
 files_read_usr_files(virtd_t)
 files_read_etc_files(virtd_t)
+files_read_usr_files(virtd_t)
 files_read_etc_runtime_files(virtd_t)
 files_search_all(virtd_t)
 files_read_kernel_modules(virtd_t)
 files_read_usr_src_files(virtd_t)
-files_manage_etc_files(virtd_t)
+files_relabelto_system_conf_files(virtd_t)
+files_relabelfrom_system_conf_files(virtd_t)	
+
+# Manages /etc/sysconfig/system-config-firewall
+files_manage_system_conf_files(virtd_t)
+files_manage_system_conf_files(virtd_t)
+files_etc_filetrans_system_conf(virtd_t)
 
 fs_list_auto_mountpoints(virtd_t)
 fs_getattr_xattr_fs(virtd_t)
@@ -267,6 +358,18 @@
 fs_list_inotifyfs(virtd_t)
 fs_manage_cgroup_dirs(virtd_t)
 fs_rw_cgroup_files(virtd_t)
+fs_manage_hugetlbfs_dirs(virtd_t)
+fs_rw_hugetlbfs_files(virtd_t)
+
+mls_fd_share_all_levels(virtd_t)
+mls_file_read_to_clearance(virtd_t)
+mls_file_write_to_clearance(virtd_t)
+mls_process_write_to_clearance(virtd_t)
+mls_process_read_to_clearance(virtd_t)
+mls_net_write_within_range(virtd_t)
+mls_socket_write_to_clearance(virtd_t)
+mls_socket_read_to_clearance(virtd_t)
+mls_rangetrans_source(virtd_t)
 
 mcs_process_set_categories(virtd_t)
 
@@ -290,16 +393,31 @@
 modutils_manage_module_config(virtd_t)
 
 logging_send_syslog_msg(virtd_t)
+logging_send_audit_msgs(virtd_t)
 
+selinux_validate_context(virtd_t)
+
+seutil_read_config(virtd_t)
 seutil_read_default_contexts(virtd_t)
+seutil_read_file_contexts(virtd_t)
 
 sysnet_domtrans_ifconfig(virtd_t)
 sysnet_read_config(virtd_t)
 
+userdom_list_admin_dir(virtd_t)
 userdom_getattr_all_users(virtd_t)
 userdom_list_user_home_content(virtd_t)
 userdom_read_all_users_state(virtd_t)
 userdom_read_user_home_content_files(virtd_t)
+userdom_relabel_user_home_files(virtd_t)
+userdom_setattr_user_home_content_files(virtd_t)
+manage_dirs_pattern(virtd_t, virt_home_t, virt_home_t)
+manage_files_pattern(virtd_t, virt_home_t, virt_home_t)
+manage_sock_files_pattern(virtd_t, virt_home_t, virt_home_t)
+manage_lnk_files_pattern(virtd_t, virt_home_t, virt_home_t)
+userdom_user_home_dir_filetrans(virtd_t, virt_home_t, { dir file })
+
+consoletype_exec(virtd_t)
 
 tunable_policy(`virt_use_nfs',`
 	fs_manage_nfs_dirs(virtd_t)
@@ -318,6 +436,10 @@
 ')
 
 optional_policy(`
+	dmidecode_domtrans(virtd_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(virtd_t)
 
 	optional_policy(`
@@ -331,6 +453,10 @@
 	optional_policy(`
 		hal_dbus_chat(virtd_t)
 	')
+
+	optional_policy(`
+		networkmanager_dbus_chat(virtd_t)
+	')
 ')
 
 optional_policy(`
@@ -358,6 +484,11 @@
 ')
 
 optional_policy(`
+	mount_domtrans(virtd_t)
+	mount_signal(virtd_t)
+')
+
+optional_policy(`
 	policykit_dbus_chat(virtd_t)
 	policykit_domtrans_auth(virtd_t)
 	policykit_domtrans_resolve(virtd_t)
@@ -370,6 +501,12 @@
 	qemu_signal(virtd_t)
 	qemu_kill(virtd_t)
 	qemu_setsched(virtd_t)
+	qemu_entry_type(virt_domain)
+	qemu_exec(virt_domain)
+')
+
+optional_policy(`
+	sanlock_stream_connect(virtd_t)
 ')
 
 optional_policy(`
@@ -394,12 +531,50 @@
 	unconfined_domain(virtd_t)
 ')
 
+#######################################
+#
+# virt_qmf local policy
+#
+
+allow virt_qmf_t self:capability { sys_nice sys_tty_config };
+allow virt_qmf_t self:process { setsched signal };
+allow virt_qmf_t self:fifo_file rw_fifo_file_perms;
+allow virt_qmf_t self:unix_stream_socket create_stream_socket_perms;
+allow virt_qmf_t self:tcp_socket create_stream_socket_perms;
+allow virt_qmf_t self:netlink_route_socket create_netlink_socket_perms;
+
+kernel_read_network_state(virt_qmf_t)
+kernel_read_network_state(virt_qmf_t)
+
+dev_read_sysfs(virt_qmf_t)
+dev_read_rand(virt_qmf_t)
+dev_read_urand(virt_qmf_t)
+
+corenet_tcp_connect_matahari_port(virt_qmf_t)
+
+domain_use_interactive_fds(virt_qmf_t)
+
+files_read_etc_files(virt_qmf_t)
+
+logging_send_syslog_msg(virt_qmf_t)
+
+miscfiles_read_localization(virt_qmf_t)
+
+sysnet_read_config(virt_qmf_t)
+
+optional_policy(`
+	virt_stream_connect(virt_qmf_t)
+')
+
+optional_policy(`
+	unconfined_domain(virt_qmf_t)
+')
+
 ########################################
 #
 # virtual domains common policy
 #
 
-allow virt_domain self:capability { dac_read_search dac_override kill };
 allow virt_domain self:process { execmem execstack signal getsched signull };
 allow virt_domain self:fifo_file rw_file_perms;
 allow virt_domain self:shm create_shm_perms;
@@ -407,6 +582,19 @@
 allow virt_domain self:unix_dgram_socket { create_socket_perms sendto };
 allow virt_domain self:tcp_socket create_stream_socket_perms;
 
+manage_dirs_pattern(virt_domain, virt_cache_t, virt_cache_t)
+manage_files_pattern(virt_domain, virt_cache_t, virt_cache_t)
+files_var_filetrans(virt_domain, virt_cache_t, { file dir })
+
+manage_dirs_pattern(virt_domain, qemu_var_run_t, qemu_var_run_t)
+manage_files_pattern(virt_domain, qemu_var_run_t, qemu_var_run_t)
+manage_sock_files_pattern(virt_domain, qemu_var_run_t, qemu_var_run_t)
+manage_lnk_files_pattern(virt_domain, qemu_var_run_t, qemu_var_run_t)
+files_pid_filetrans(virt_domain, qemu_var_run_t, { dir file })
+stream_connect_pattern(virt_domain, qemu_var_run_t, qemu_var_run_t, virtd_t)
+
+dontaudit virtd_t virt_domain:process  { siginh noatsecure rlimitinh };
+
 append_files_pattern(virt_domain, virt_log_t, virt_log_t)
 
 append_files_pattern(virt_domain, virt_var_lib_t, virt_var_lib_t)
@@ -427,6 +615,7 @@
 corenet_tcp_bind_virt_migration_port(virt_domain)
 corenet_tcp_connect_virt_migration_port(virt_domain)
 
+dev_read_generic_symlinks(virt_domain)
 dev_read_rand(virt_domain)
 dev_read_sound(virt_domain)
 dev_read_urand(virt_domain)
@@ -434,10 +623,12 @@
 dev_rw_ksm(virt_domain)
 dev_rw_kvm(virt_domain)
 dev_rw_qemu(virt_domain)
+dev_rw_vhost(virt_domain)
 
 domain_use_interactive_fds(virt_domain)
 
 files_read_etc_files(virt_domain)
+files_read_mnt_symlinks(virt_domain)
 files_read_usr_files(virt_domain)
 files_read_var_files(virt_domain)
 files_search_all(virt_domain)
@@ -445,6 +636,14 @@
 fs_getattr_tmpfs(virt_domain)
 fs_rw_anon_inodefs_files(virt_domain)
 fs_rw_tmpfs_files(virt_domain)
+fs_getattr_hugetlbfs(virt_domain)
+fs_rw_inherited_nfs_files(virt_domain)
+fs_rw_inherited_cifs_files(virt_domain)
+fs_rw_inherited_noxattr_fs_files(virt_domain)
+
+# I think we need these for now.
+miscfiles_read_public_files(virt_domain)
+storage_raw_read_removable_device(virt_domain)
 
 term_use_all_terms(virt_domain)
 term_getattr_pty_fs(virt_domain)
@@ -462,8 +661,13 @@
 ')
 
 optional_policy(`
+	pulseaudio_dontaudit_exec(virt_domain)
+')
+
+optional_policy(`
 	virt_read_config(virt_domain)
 	virt_read_lib_files(virt_domain)
 	virt_read_content(virt_domain)
 	virt_stream_connect(virt_domain)
 ')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/w3c.te serefpolicy-3.7.19/policy/modules/services/w3c.te
--- nsaserefpolicy/policy/modules/services/w3c.te	2011-03-17 07:21:21.249851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/w3c.te	2011-03-17 07:21:03.774851000 +0000
@@ -8,11 +8,18 @@
 
 apache_content_template(w3c_validator)
 
+type httpd_w3c_validator_tmp_t;
+files_tmp_file(httpd_w3c_validator_tmp_t)
+
 ########################################
 #
 # Local policy
 #
 
+manage_dirs_pattern(httpd_w3c_validator_script_t, httpd_w3c_validator_tmp_t, httpd_w3c_validator_tmp_t)
+manage_files_pattern(httpd_w3c_validator_script_t, httpd_w3c_validator_tmp_t, httpd_w3c_validator_tmp_t)
+files_tmp_filetrans(httpd_w3c_validator_script_t, httpd_w3c_validator_tmp_t, { file dir })
+
 corenet_tcp_connect_ftp_port(httpd_w3c_validator_script_t)
 corenet_tcp_sendrecv_ftp_port(httpd_w3c_validator_script_t)
 corenet_tcp_connect_http_port(httpd_w3c_validator_script_t)
@@ -23,3 +30,5 @@
 miscfiles_read_certs(httpd_w3c_validator_script_t)
 
 sysnet_dns_name_resolve(httpd_w3c_validator_script_t)
+
+apache_dontaudit_rw_tmp_files(httpd_w3c_validator_script_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/wdmd.fc serefpolicy-3.7.19/policy/modules/services/wdmd.fc
--- nsaserefpolicy/policy/modules/services/wdmd.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/wdmd.fc	2011-06-29 13:56:23.652030000 +0000
@@ -0,0 +1,6 @@
+
+/etc/rc\.d/init\.d/wdmd	--	gen_context(system_u:object_r:wdmd_initrc_exec_t,s0)
+
+/var/run/wdmd(/.*)?			gen_context(system_u:object_r:wdmd_var_run_t,s0)
+
+/usr/sbin/wdmd		--	gen_context(system_u:object_r:wdmd_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/wdmd.if serefpolicy-3.7.19/policy/modules/services/wdmd.if
--- nsaserefpolicy/policy/modules/services/wdmd.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/wdmd.if	2011-06-29 13:56:23.685030000 +0000
@@ -0,0 +1,92 @@
+
+## <summary>policy for wdmd</summary>
+
+
+########################################
+## <summary>
+##	Execute a domain transition to run wdmd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`wdmd_domtrans',`
+	gen_require(`
+		type wdmd_t, wdmd_exec_t;
+	')
+
+	domtrans_pattern($1, wdmd_exec_t, wdmd_t)
+')
+
+
+########################################
+## <summary>
+##	Execute wdmd server in the wdmd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`wdmd_initrc_domtrans',`
+	gen_require(`
+		type wdmd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, wdmd_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to administrate
+##	an wdmd environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`wdmd_admin',`
+	gen_require(`
+		type wdmd_t;
+		type wdmd_initrc_exec_t;
+	')
+
+	allow $1 wdmd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, wdmd_t)
+
+	wdmd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 wdmd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+')
+
+########################################
+## <summary>
+##      Connect to wdmd over an unix stream socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`wdmd_stream_connect',`
+        gen_require(`
+                type wdmd_t, wdmd_var_run_t;
+        ')
+
+        files_search_pids($1)
+        stream_connect_pattern($1, wdmd_var_run_t, wdmd_var_run_t, wdmd_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/wdmd.te serefpolicy-3.7.19/policy/modules/services/wdmd.te
--- nsaserefpolicy/policy/modules/services/wdmd.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/wdmd.te	2012-04-16 08:27:09.391264453 +0000
@@ -0,0 +1,50 @@
+policy_module(wdmd,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type wdmd_t;
+type wdmd_exec_t;
+init_daemon_domain(wdmd_t, wdmd_exec_t)
+
+type wdmd_var_run_t;
+files_pid_file(wdmd_var_run_t)
+
+type wdmd_initrc_exec_t;
+init_script_file(wdmd_initrc_exec_t)
+
+########################################
+#
+# wdmd local policy
+#
+
+allow wdmd_t self:capability { chown sys_nice ipc_lock };
+allow wdmd_t self:process { setsched signal };
+
+allow wdmd_t self:fifo_file rw_fifo_file_perms;
+allow wdmd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(wdmd_t, wdmd_var_run_t, wdmd_var_run_t)
+manage_files_pattern(wdmd_t, wdmd_var_run_t, wdmd_var_run_t)
+manage_sock_files_pattern(wdmd_t, wdmd_var_run_t, wdmd_var_run_t)
+files_pid_filetrans(wdmd_t, wdmd_var_run_t, { file dir sock_file })
+
+dev_write_watchdog(wdmd_t)
+dev_read_watchdog(wdmd_t)
+
+domain_use_interactive_fds(wdmd_t)
+
+files_read_etc_files(wdmd_t)
+
+logging_send_syslog_msg(wdmd_t)
+
+miscfiles_read_localization(wdmd_t)
+
+fs_read_anon_inodefs_files(wdmd_t)
+
+gen_require(`
+	type watchdog_device_t;
+')
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/xfs.if serefpolicy-3.7.19/policy/modules/services/xfs.if
--- nsaserefpolicy/policy/modules/services/xfs.if	2011-03-17 07:21:20.770851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/xfs.if	2011-03-17 07:21:03.163851003 +0000
@@ -1,4 +1,4 @@
-## <summary>X Windows Font Server </summary>
+## <summary>X Windows Font Server</summary>
 
 ########################################
 ## <summary>
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/xserver.fc serefpolicy-3.7.19/policy/modules/services/xserver.fc
--- nsaserefpolicy/policy/modules/services/xserver.fc	2011-03-17 07:21:22.049851000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/xserver.fc	2011-03-17 07:21:04.791851001 +0000
@@ -2,13 +2,23 @@
 # HOME_DIR
 #
 HOME_DIR/\.fonts\.conf	--	gen_context(system_u:object_r:user_fonts_config_t,s0)
+HOME_DIR/\.fonts\.d(/.*)?	gen_context(system_u:object_r:user_fonts_config_t,s0)
 HOME_DIR/\.fonts(/.*)?		gen_context(system_u:object_r:user_fonts_t,s0)
+HOME_DIR/\.fontconfig(/.*)?	gen_context(system_u:object_r:user_fonts_cache_t,s0)
 HOME_DIR/\.fonts/auto(/.*)?	gen_context(system_u:object_r:user_fonts_cache_t,s0)
 HOME_DIR/\.fonts\.cache-.* --	gen_context(system_u:object_r:user_fonts_cache_t,s0)
+HOME_DIR/\.DCOP.* 	   --	gen_context(system_u:object_r:iceauth_home_t,s0)
 HOME_DIR/\.ICEauthority.* --	gen_context(system_u:object_r:iceauth_home_t,s0)
+HOME_DIR/\.ICEauthority.* --	gen_context(system_u:object_r:iceauth_home_t,s0)
+HOME_DIR/\.serverauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
 HOME_DIR/\.xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
 HOME_DIR/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+HOME_DIR/\.xsession-errors.*	--	gen_context(system_u:object_r:xdm_home_t,s0)
+HOME_DIR/\.dmrc.*	--	gen_context(system_u:object_r:xdm_home_t,s0)
 
+/root/\.serverauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/root/\.Xauth.*		--	gen_context(system_u:object_r:xauth_home_t,s0)
+/root/\.xauth.*		--	gen_context(system_u:object_r:xauth_home_t,s0)
 #
 # /dev
 #
@@ -20,6 +30,8 @@
 
 /etc/init\.d/xfree86-common --	gen_context(system_u:object_r:xserver_exec_t,s0)
 
+/etc/gdm(/.*)?		  	gen_context(system_u:object_r:xdm_etc_t,s0)
+
 /etc/kde3?/kdm/Xstartup	--	gen_context(system_u:object_r:xsession_exec_t,s0)
 /etc/kde3?/kdm/Xreset	--	gen_context(system_u:object_r:xsession_exec_t,s0)
 /etc/kde3?/kdm/Xsession	--	gen_context(system_u:object_r:xsession_exec_t,s0)
@@ -32,11 +44,6 @@
 /etc/X11/wdm/Xstartup.*	--	gen_context(system_u:object_r:xsession_exec_t,s0)
 /etc/X11/Xsession[^/]*	--	gen_context(system_u:object_r:xsession_exec_t,s0)
 
-ifdef(`distro_redhat',`
-/etc/gdm/PostSession/.*	--	gen_context(system_u:object_r:xsession_exec_t,s0)
-/etc/gdm/PreSession/.*	--	gen_context(system_u:object_r:xsession_exec_t,s0)
-')
-
 #
 # /opt
 #
@@ -47,21 +54,23 @@
 # /tmp
 #
 
-/tmp/\.ICE-unix		-d	gen_context(system_u:object_r:xdm_tmp_t,s0)
-/tmp/\.ICE-unix/.*	-s	<<none>>
-/tmp/\.X0-lock		--	gen_context(system_u:object_r:xserver_tmp_t,s0)
-/tmp/\.X11-unix		-d	gen_context(system_u:object_r:xdm_tmp_t,s0)
-/tmp/\.X11-unix/.*	-s	<<none>>
+/tmp/\.X0-lock		--	gen_context(system_u:object_r:xdm_tmp_t,s0)
+/tmp/\.X11-unix(/.*)?			gen_context(system_u:object_r:xdm_tmp_t,s0)
+/tmp/\.ICE-unix(/.*)?			gen_context(system_u:object_r:xdm_tmp_t,s0)
 
 #
 # /usr
 #
 
 /usr/(s)?bin/gdm-binary	--	gen_context(system_u:object_r:xdm_exec_t,s0)
+/usr/(s)?bin/lxdm	--	gen_context(system_u:object_r:xdm_exec_t,s0)
+/usr/(s)?bin/lxdm-binary --	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/(s)?bin/[xgkw]dm	--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/bin/gpe-dm		--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/bin/iceauth	--	gen_context(system_u:object_r:iceauth_exec_t,s0)
+/usr/bin/slim		--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/bin/Xair		--	gen_context(system_u:object_r:xserver_exec_t,s0)
+/usr/bin/Xephyr		--	gen_context(system_u:object_r:xserver_exec_t,s0)
 /usr/bin/xauth		--	gen_context(system_u:object_r:xauth_exec_t,s0)
 /usr/bin/Xorg		--	gen_context(system_u:object_r:xserver_exec_t,s0)
 ifdef(`distro_debian', `
@@ -89,17 +98,44 @@
 
 /var/[xgk]dm(/.*)?		gen_context(system_u:object_r:xserver_log_t,s0)
 
-/var/lib/[xkw]dm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
+/var/lib/[gxkw]dm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
+/var/lib/lxdm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
 /var/lib/xkb(/.*)?		gen_context(system_u:object_r:xkb_var_lib_t,s0)
+/var/lib/xorg(/.*)?		gen_context(system_u:object_r:xserver_var_lib_t,s0)
+
+/var/cache/gdm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
 
-/var/log/[kw]dm\.log	--	gen_context(system_u:object_r:xserver_log_t,s0)
-/var/log/gdm(/.*)?		gen_context(system_u:object_r:xserver_log_t,s0)
+/var/log/gdm(/.*)?		gen_context(system_u:object_r:xdm_log_t,s0)
+/var/log/lxdm\.log.*	--	gen_context(system_u:object_r:xdm_log_t,s0)
+/var/log/slim\.log.* -- gen_context(system_u:object_r:xdm_log_t,s0)
+/var/log/[kw]dm\.log.*	--	gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/XFree86.*	--	gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/Xorg.*		--	gen_context(system_u:object_r:xserver_log_t,s0)
+/var/log/nvidia-installer\.log.* --	gen_context(system_u:object_r:xserver_log_t,s0)
 
+/var/spool/gdm(/.*)?	 	gen_context(system_u:object_r:xdm_spool_t,s0)
+
+/var/run/slim(/.*)?	 	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/kdm(/.*)?	 	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/gdm(/.*)?	 	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/gdm_socket	-s	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/[gx]dm\.pid	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/lxdm\.pid	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/xdmctl(/.*)?		gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/xauth(/.*)?		gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/slim.*		--	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/lxdm\.auth	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/lxdm(/*.)?		gen_context(system_u:object_r:xdm_var_run_t,s0)
+
+/var/run/video.rom	--	gen_context(system_u:object_r:xserver_var_run_t,s0)
+/var/run/xorg(/.*)?		gen_context(system_u:object_r:xserver_var_run_t,s0)
 
 ifdef(`distro_suse',`
 /var/lib/pam_devperm/:0	--	gen_context(system_u:object_r:xdm_var_lib_t,s0)
 ')
+
+/var/lib/nxserver/home/\.xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/var/lib/nxserver/home/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/var/lib/pqsql/\.xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/var/lib/pqsql/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/xserver.if serefpolicy-3.7.19/policy/modules/services/xserver.if
--- nsaserefpolicy/policy/modules/services/xserver.if	2011-03-17 07:21:21.537851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/xserver.if	2012-02-28 19:28:06.948464529 +0000
@@ -19,9 +19,10 @@
 interface(`xserver_restricted_role',`
 	gen_require(`
 		type xserver_t, xserver_exec_t, xserver_tmp_t, xserver_tmpfs_t;
-		type user_fonts_t, user_fonts_cache_t, user_fonts_config_t;
+		type user_fonts_t, user_fonts_cache_t, user_fonts_config_t, xdm_tmp_t;
 		type iceauth_t, iceauth_exec_t, iceauth_home_t;
 		type xauth_t, xauth_exec_t, xauth_home_t;
+		class dbus send_msg;
 	')
 
 	role $1 types { xserver_t xauth_t iceauth_t };
@@ -31,7 +32,7 @@
 	allow xserver_t $2:shm rw_shm_perms;
 
 	domtrans_pattern($2, xserver_exec_t, xserver_t)
-	allow xserver_t $2:process signal;
+	allow xserver_t $2:process { getpgid signal };
 
 	allow xserver_t $2:shm rw_shm_perms;
 
@@ -45,6 +46,7 @@
 	manage_files_pattern($2, user_fonts_cache_t, user_fonts_cache_t)
 
 	stream_connect_pattern($2, xserver_tmp_t, xserver_tmp_t, xserver_t)
+	allow $2 xserver_tmp_t:sock_file unlink;
 	files_search_tmp($2)
 
 	# Communicate via System V shared memory.
@@ -70,17 +72,21 @@
 
 	# for when /tmp/.X11-unix is created by the system
 	allow $2 xdm_t:fd use;
-	allow $2 xdm_t:fifo_file { getattr read write ioctl };
-	allow $2 xdm_tmp_t:dir search;
-	allow $2 xdm_tmp_t:sock_file { read write };
+	allow $2 xdm_t:fifo_file rw_inherited_fifo_file_perms;
+	allow $2 xdm_tmp_t:dir search_dir_perms;
+	allow $2 xdm_tmp_t:sock_file rw_inherited_sock_file_perms;
 	dontaudit $2 xdm_t:tcp_socket { read write };
+	dontaudit $2 xdm_tmp_t:dir setattr_dir_perms;
+
+	allow $2 xdm_t:dbus send_msg;
+	allow xdm_t  $2:dbus send_msg;
 
 	# Client read xserver shm
 	allow $2 xserver_t:fd use;
 	allow $2 xserver_tmpfs_t:file read_file_perms;
 
 	# Read /tmp/.X0-lock
-	allow $2 xserver_tmp_t:file { getattr read };
+	allow $2 xserver_tmp_t:file read_inherited_file_perms;
 
 	dev_rw_xserver_misc($2)
 	dev_rw_power_management($2)
@@ -89,14 +95,17 @@
 	dev_write_misc($2)
 	# open office is looking for the following
 	dev_getattr_agp_dev($2)
-	dev_dontaudit_rw_dri($2)
+
 	# GNOME checks for usb and other devices:
 	dev_rw_usbfs($2)
 
+	term_use_virtio_console($2)
+
 	miscfiles_read_fonts($2)
+	miscfiles_read_hwdata($2)
+	miscfiles_setattr_fonts_cache_dirs($2)
 
 	xserver_common_x_domain_template(user, $2)
-	xserver_unconfined($2)
 	xserver_xsession_entry_type($2)
 	xserver_dontaudit_write_log($2)
 	xserver_stream_connect_xdm($2)
@@ -107,11 +116,25 @@
 	# Needed for escd, remove if we get escd policy
 	xserver_manage_xdm_tmp_files($2)
 
+	ifdef(`hide_broken_symptoms',`
+		dontaudit iceauth_t $2:socket_class_set { read write };
+	')
+
 	# Client write xserver shm
 	tunable_policy(`allow_write_xshm',`
 		allow $2 xserver_t:shm rw_shm_perms;
 		allow $2 xserver_tmpfs_t:file rw_file_perms;
 	')
+
+	tunable_policy(`user_direct_dri',`
+		dev_rw_dri($2)
+	',`
+        dev_dontaudit_rw_dri($2)
+    ')
+
+	optional_policy(`
+		gnome_read_gconf_config($2)
+	')
 ')
 
 ########################################
@@ -143,11 +166,12 @@
 	allow $2 xserver_tmpfs_t:file rw_file_perms;
 
 	allow $2 iceauth_home_t:file manage_file_perms;
-	allow $2 iceauth_home_t:file { relabelfrom relabelto };
+	allow $2 iceauth_home_t:file relabel_file_perms;
 
 	allow $2 xauth_home_t:file manage_file_perms;
-	allow $2 xauth_home_t:file { relabelfrom relabelto };
+	allow $2 xauth_home_t:file relabel_file_perms;
 
+	mls_xwin_read_to_clearance($2)
 	manage_dirs_pattern($2, user_fonts_t, user_fonts_t)
 	manage_files_pattern($2, user_fonts_t, user_fonts_t)
 	relabel_dirs_pattern($2, user_fonts_t, user_fonts_t)
@@ -197,7 +221,7 @@
 	allow $1 xserver_t:process signal;
 
 	# Read /tmp/.X0-lock
-	allow $1 xserver_tmp_t:file { getattr read };
+	allow $1 xserver_tmp_t:file read_file_perms;
 
 	# Client read xserver shm
 	allow $1 xserver_t:fd use;
@@ -227,7 +251,7 @@
 		type xserver_t, xserver_tmpfs_t;
 	')
 
-	xserver_ro_session($1,$2)
+	xserver_ro_session($1, $2)
 	allow $1 xserver_t:shm rw_shm_perms;
 	allow $1 xserver_tmpfs_t:file rw_file_perms;
 ')
@@ -291,12 +315,12 @@
 	allow $1 self:unix_stream_socket { connectto create_stream_socket_perms };
 
 	# Read .Xauthority file
-	allow $1 xauth_home_t:file { getattr read };
-	allow $1 iceauth_home_t:file { getattr read };
+	allow $1 xauth_home_t:file read_file_perms;
+	allow $1 iceauth_home_t:file read_file_perms;
 
 	# for when /tmp/.X11-unix is created by the system
 	allow $1 xdm_t:fd use;
-	allow $1 xdm_t:fifo_file { getattr read write ioctl };
+	allow $1 xdm_t:fifo_file rw_inherited_fifo_file_perms;
 	allow $1 xdm_tmp_t:dir search;
 	allow $1 xdm_tmp_t:sock_file { read write };
 	dontaudit $1 xdm_t:tcp_socket { read write };
@@ -310,7 +334,7 @@
 	# for .xsession-errors
 	userdom_dontaudit_write_user_home_content_files($1)
 
-	xserver_ro_session($1,$2)
+	xserver_ro_session($1, $2)
 	xserver_use_user_fonts($1)
 
 	xserver_read_xdm_tmp_files($1)
@@ -355,6 +379,12 @@
 		class x_property all_x_property_perms;
 		class x_event all_x_event_perms;
 		class x_synthetic_event all_x_synthetic_event_perms;
+		class x_client destroy;
+		class x_server manage;
+		class x_screen { saver_setattr saver_hide saver_show };
+		class x_pointer { get_property set_property manage };
+		class x_keyboard { read manage };
+		type xdm_t, xserver_t;
 	')
 
 	##############################
@@ -386,6 +416,15 @@
 	allow $2 xevent_t:{ x_event x_synthetic_event } receive;
 	# dont audit send failures
 	dontaudit $2 input_xevent_type:x_event send;
+
+	allow $2 xdm_t:x_drawable { read add_child };
+	allow $2 xdm_t:x_client destroy;
+
+	allow $2 root_xdrawable_t:x_drawable write;
+	allow $2 xserver_t:x_server manage;
+	allow $2 xserver_t:x_screen { saver_setattr saver_hide saver_show };
+	allow $2 xserver_t:x_pointer { get_property set_property manage };
+	allow $2 xserver_t:x_keyboard { read manage };
 ')
 
 #######################################
@@ -458,9 +497,9 @@
 
 	# for when /tmp/.X11-unix is created by the system
 	allow $2 xdm_t:fd use;
-	allow $2 xdm_t:fifo_file { getattr read write ioctl };
+	allow $2 xdm_t:fifo_file rw_inherited_fifo_file_perms;
 	allow $2 xdm_tmp_t:dir search_dir_perms;
-	allow $2 xdm_tmp_t:sock_file { read write };
+	allow $2 xdm_tmp_t:sock_file rw_inherited_sock_file_perms;
 	dontaudit $2 xdm_t:tcp_socket { read write };
 
 	# Allow connections to X server.
@@ -472,10 +511,12 @@
 	# for .xsession-errors
 	userdom_dontaudit_write_user_home_content_files($2)
 
-	xserver_ro_session($2,$3)
+	xserver_ro_session($2, $3)
 	xserver_use_user_fonts($2)
 
 	xserver_read_xdm_tmp_files($2)
+	xserver_read_xdm_pid($2)
+	xserver_xdm_append_log($2)
 
 	# X object manager
 	xserver_object_types_template($1)
@@ -545,6 +586,45 @@
 	')
 
 	domtrans_pattern($1, xauth_exec_t, xauth_t)
+ifdef(`hide_broken_symptoms', `
+	dontaudit xauth_t $1:socket_class_set { read write };
+')
+')
+
+#####################################
+## <summary>
+##  Allow exec of Xauthority program..
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`xserver_exec_xauth',`
+    gen_require(`
+        type xauth_t, xauth_exec_t;
+    ')
+
+    can_exec($1, xauth_exec_t)
+')
+
+########################################
+## <summary>
+##	Dontaudit exec of Xauthority program.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_dontaudit_exec_xauth',`
+	gen_require(`
+		type xauth_exec_t;
+	')
+
+	dontaudit $1 xauth_exec_t:file execute;
 ')
 
 ########################################
@@ -598,6 +678,7 @@
 
 	allow $1 xauth_home_t:file read_file_perms;
 	userdom_search_user_home_dirs($1)
+	xserver_read_xdm_pid($1)
 ')
 
 ########################################
@@ -615,7 +696,7 @@
 		type xconsole_device_t;
 	')
 
-	allow $1 xconsole_device_t:fifo_file setattr;
+	allow $1 xconsole_device_t:fifo_file setattr_fifo_file_perms;
 ')
 
 ########################################
@@ -724,11 +805,13 @@
 #
 interface(`xserver_stream_connect_xdm',`
 	gen_require(`
-		type xdm_t, xdm_tmp_t;
+		type xdm_t, xdm_tmp_t, xdm_var_run_t;
 	')
-
+	
 	files_search_tmp($1)
+	files_search_pids($1)
 	stream_connect_pattern($1, xdm_tmp_t, xdm_tmp_t, xdm_t)
+	stream_connect_pattern($1, xdm_var_run_t, xdm_var_run_t, xdm_t)
 ')
 
 ########################################
@@ -765,7 +848,7 @@
 		type xdm_tmp_t;
 	')
 
-	allow $1 xdm_tmp_t:dir setattr;
+	allow $1 xdm_tmp_t:dir setattr_dir_perms;
 ')
 
 ########################################
@@ -805,7 +888,26 @@
 	')
 
 	files_search_pids($1)
-	allow $1 xdm_var_run_t:file read_file_perms;
+	read_files_pattern($1, xdm_var_run_t, xdm_var_run_t)
+')
+
+#####################################
+## <summary>
+##  Dontaudit Read XDM pid files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`xserver_dontaudit_read_xdm_pid',`
+    gen_require(`
+        type xdm_var_run_t;
+    ')
+
+	dontaudit $1 xdm_var_run_t:dir search_dir_perms;
+    dontaudit $1 xdm_var_run_t:file read_file_perms;
 ')
 
 ########################################
@@ -897,7 +999,7 @@
 	')
 
 	logging_search_logs($1)
-	allow $1 xserver_log_t:file getattr;
+	allow $1 xserver_log_t:file getattr_file_perms;
 ')
 
 ########################################
@@ -916,7 +1018,7 @@
 		type xserver_log_t;
 	')
 
-	dontaudit $1 xserver_log_t:file { append write };
+	dontaudit $1 xserver_log_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -964,6 +1066,44 @@
 
 ########################################
 ## <summary>
+##	Read xdm config files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_read_xdm_etc_files',`
+	gen_require(`
+		type xdm_etc_t;
+	')
+
+ 	files_search_etc($1)
+	read_files_pattern($1, xdm_etc_t, xdm_etc_t)
+')
+
+########################################
+## <summary>
+##	Manage xdm config files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_manage_xdm_etc_files',`
+	gen_require(`
+		type xdm_etc_t;
+	')
+
+ 	files_search_etc($1)
+	manage_files_pattern($1, xdm_etc_t, xdm_etc_t)
+')
+
+########################################
+## <summary>
 ##	Read xdm temporary files.
 ## </summary>
 ## <param name="domain">
@@ -1052,7 +1192,7 @@
 		type xdm_tmp_t;
 	')
 
-	dontaudit $1 xdm_tmp_t:sock_file getattr;
+	dontaudit $1 xdm_tmp_t:sock_file getattr_sock_file_perms;
 ')
 
 ########################################
@@ -1187,6 +1327,25 @@
 	stream_connect_pattern($1, xserver_tmp_t, xserver_tmp_t, xserver_t)
 ')
 
+#####################################
+## <summary>
+##  Dontaudit attempts to connect to xserver
+##  over an unix stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`xserver_dontaudit_stream_connect',`
+    gen_require(`
+        type xserver_t, xserver_tmp_t;
+    ')
+
+    stream_connect_pattern($1, xserver_tmp_t, xserver_tmp_t, xserver_t)
+')
+
 ########################################
 ## <summary>
 ##	Read X server temporary files.
@@ -1210,7 +1369,7 @@
 ## <summary>
 ##	Interface to provide X object permissions on a given X server to
 ##	an X client domain.  Gives the domain permission to read the
-##      virtual core keyboard and virtual core pointer devices.
+##	virtual core keyboard and virtual core pointer devices.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1224,9 +1383,20 @@
 		class x_device all_x_device_perms;
 		class x_pointer all_x_pointer_perms;
 		class x_keyboard all_x_keyboard_perms;
+		class x_screen all_x_screen_perms;
+		class x_drawable { manage };
+		type root_xdrawable_t;
+		attribute x_domain;
+		class x_drawable { read manage setattr show };
+		class x_resource { write read };
 	')
 
 	allow $1 xserver_t:{ x_device x_pointer x_keyboard } *;
+	allow $1 xserver_t:{ x_screen } setattr;
+	
+	allow $1 x_domain:x_drawable { read manage setattr show };
+	allow $1 x_domain:x_resource { write read };
+	allow $1 root_xdrawable_t:x_drawable { manage read };
 ')
 
 ########################################
@@ -1250,3 +1420,330 @@
 	typeattribute $1 x_domain;
 	typeattribute $1 xserver_unconfined_type;
 ')
+
+########################################
+## <summary>
+##	Dontaudit append to .xsession-errors file
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_dontaudit_append_xdm_home_files',`
+	gen_require(`
+		type xdm_home_t;
+		type xserver_tmp_t;
+	')
+
+	dontaudit $1 xdm_home_t:file rw_inherited_file_perms;
+	dontaudit $1 xserver_tmp_t:file rw_inherited_file_perms;
+
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_dontaudit_rw_nfs_files($1)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+		fs_dontaudit_rw_cifs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	append to .xsession-errors file
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_append_xdm_home_files',`
+	gen_require(`
+		type xdm_home_t;
+		type xserver_tmp_t;
+	')
+
+	allow $1 xdm_home_t:file append_file_perms;
+	allow $1 xserver_tmp_t:file append_file_perms;
+
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_append_nfs_files($1)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+		fs_append_cifs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	Manage the xdm_spool files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_xdm_manage_spool',`
+	gen_require(`
+		type xdm_spool_t;
+	')
+
+	files_search_spool($1)
+	manage_files_pattern($1, xdm_spool_t, xdm_spool_t)
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	xdm over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_dbus_chat_xdm',`
+	gen_require(`
+		type xdm_t;
+		class dbus send_msg;
+	')
+
+	allow $1 xdm_t:dbus send_msg;
+	allow xdm_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Read xserver files created in /var/run
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_read_pid',`
+	gen_require(`
+		type xserver_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, xserver_var_run_t, xserver_var_run_t)
+')
+
+########################################
+## <summary>
+##	Execute xserver files created in /var/run
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_exec_pid',`
+	gen_require(`
+		type xserver_var_run_t;
+	')
+
+	files_search_pids($1)
+	exec_files_pattern($1, xserver_var_run_t, xserver_var_run_t)
+')
+
+########################################
+## <summary>
+##	Write xserver files created in /var/run
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_write_pid',`
+	gen_require(`
+		type xserver_var_run_t;
+	')
+
+	files_search_pids($1)
+	write_files_pattern($1, xserver_var_run_t, xserver_var_run_t)
+')
+
+########################################
+## <summary>
+##	Allow append the xdm
+##	log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_xdm_append_log',`
+	gen_require(`
+		type xdm_log_t;
+		attribute xdmhomewriter;
+	')
+
+	typeattribute $1 xdmhomewriter;
+	append_files_pattern($1, xdm_log_t, xdm_log_t)
+')
+
+########################################
+## <summary>
+##	Read a user Iceauthority domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+template(`xserver_read_user_iceauth',`
+	gen_require(`
+		type iceauth_home_t;
+	')
+
+	# Read .Iceauthority file
+	allow $1 iceauth_home_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Read user homedir fonts.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_rw_inherited_user_fonts',`
+	gen_require(`
+		type user_fonts_t;
+		type user_fonts_config_t;
+	')
+
+	allow $1 user_fonts_t:file rw_inherited_file_perms;
+	allow $1 user_fonts_t:file read_lnk_file_perms;
+
+	allow $1 user_fonts_config_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Search XDM var lib dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_search_xdm_lib',`
+	gen_require(`
+		type xdm_var_lib_t;
+	')
+
+	allow $1 xdm_var_lib_t:dir search_dir_perms;
+')
+
+
+########################################
+## <summary>
+##	Make an X executable an entrypoint for the specified domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The domain for which the shell is an entrypoint.
+##	</summary>
+## </param>
+#
+interface(`xserver_entry_type',`
+	gen_require(`
+		type xserver_exec_t;
+	')
+
+	domain_entry_file($1, xserver_exec_t)
+')
+
+########################################
+## <summary>
+##	Execute xsever in the xserver domain, and
+##	allow the specified role the xserver domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the xserver domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`xserver_run',`
+	gen_require(`
+		type xserver_t;
+	')
+
+	xserver_domtrans($1)
+	role $2 types xserver_t;
+')
+
+########################################
+## <summary>
+##	Execute xsever in the xserver domain, and
+##	allow the specified role the xserver domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the xserver domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`xserver_run_xauth',`
+	gen_require(`
+		type xauth_t;
+	')
+
+	xserver_domtrans_xauth($1)
+	role $2 types xauth_t;
+')
+########################################
+## <summary>
+##	Read user homedir fonts.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`xserver_manage_home_fonts',`
+	gen_require(`
+		type user_fonts_t;
+		type user_fonts_config_t;
+	')
+
+	manage_dirs_pattern($1, user_fonts_t, user_fonts_t)
+	manage_files_pattern($1, user_fonts_t, user_fonts_t)
+	manage_lnk_files_pattern($1, user_fonts_t, user_fonts_t)
+
+	manage_files_pattern($1, user_fonts_config_t, user_fonts_config_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/xserver.te serefpolicy-3.7.19/policy/modules/services/xserver.te
--- nsaserefpolicy/policy/modules/services/xserver.te	2011-03-17 07:21:20.988851001 +0000
+++ serefpolicy-3.7.19/policy/modules/services/xserver.te	2012-02-28 18:10:14.871396378 +0000
@@ -1,5 +1,5 @@
 
-policy_module(xserver, 3.3.2)
+policy_module(xserver, 3.4.0)
 
 gen_require(`
 	class x_drawable all_x_drawable_perms;
@@ -36,6 +36,20 @@
 
 ## <desc>
 ## <p>
+## Allows XServer to execute writable memory
+## </p>
+## </desc>
+gen_tunable(allow_xserver_execmem, false)
+
+## <desc>
+## <p>
+## Allows xdm to execute bootloader
+## </p>
+## </desc>
+gen_tunable(xdm_exec_bootloader, false)
+
+## <desc>
+## <p>
 ## Allow xdm logins as sysadm
 ## </p>
 ## </desc>
@@ -48,6 +62,16 @@
 ## </desc>
 gen_tunable(xserver_object_manager, false)
 
+## <desc>
+## <p>
+## Allow regular users direct dri device access
+## </p>
+## </desc>
+gen_tunable(user_direct_dri, false)
+
+attribute xdmhomewriter;
+attribute x_userdomain;
+
 attribute x_domain;
 
 # X Events
@@ -110,21 +134,26 @@
 type user_fonts_t;
 typealias user_fonts_t alias { staff_fonts_t sysadm_fonts_t };
 typealias user_fonts_t alias { auditadm_fonts_t secadm_fonts_t };
+typealias user_fonts_t alias { xguest_fonts_t unconfined_fonts_t  user_fonts_home_t };
 userdom_user_home_content(user_fonts_t)
 
 type user_fonts_cache_t;
 typealias user_fonts_cache_t alias { staff_fonts_cache_t sysadm_fonts_cache_t };
 typealias user_fonts_cache_t alias { auditadm_fonts_cache_t secadm_fonts_cache_t };
+typealias user_fonts_cache_t alias { xguest_fonts_cache_t unconfined_fonts_cache_t };
+;
 userdom_user_home_content(user_fonts_cache_t)
 
 type user_fonts_config_t;
 typealias user_fonts_config_t alias { staff_fonts_config_t sysadm_fonts_config_t };
 typealias user_fonts_config_t alias { auditadm_fonts_config_t secadm_fonts_config_t };
+typealias user_fonts_config_t alias { fonts_config_home_t xguest_fonts_config_t unconfined_fonts_config_t };
 userdom_user_home_content(user_fonts_config_t)
 
 type iceauth_t;
 type iceauth_exec_t;
 typealias iceauth_t alias { user_iceauth_t staff_iceauth_t sysadm_iceauth_t };
+typealias iceauth_t alias { xguest_iceauth_t };
 typealias iceauth_t alias { auditadm_iceauth_t secadm_iceauth_t };
 application_domain(iceauth_t, iceauth_exec_t)
 ubac_constrained(iceauth_t)
@@ -132,6 +161,7 @@
 type iceauth_home_t;
 typealias iceauth_home_t alias { user_iceauth_home_t staff_iceauth_home_t sysadm_iceauth_home_t };
 typealias iceauth_home_t alias { auditadm_iceauth_home_t secadm_iceauth_home_t };
+typealias iceauth_home_t alias {  xguest_iceauth_home_t };
 files_poly_member(iceauth_home_t)
 userdom_user_home_content(iceauth_home_t)
 
@@ -139,17 +169,20 @@
 type xauth_exec_t;
 typealias xauth_t alias { user_xauth_t staff_xauth_t sysadm_xauth_t };
 typealias xauth_t alias { auditadm_xauth_t secadm_xauth_t };
+typealias xauth_t alias { xguest_xauth_t unconfined_xauth_t };
 application_domain(xauth_t, xauth_exec_t)
 ubac_constrained(xauth_t)
 
 type xauth_home_t;
 typealias xauth_home_t alias { user_xauth_home_t staff_xauth_home_t sysadm_xauth_home_t };
 typealias xauth_home_t alias { auditadm_xauth_home_t secadm_xauth_home_t };
+typealias xauth_home_t alias { xguest_xauth_home_t unconfined_xauth_home_t };
 files_poly_member(xauth_home_t)
 userdom_user_home_content(xauth_home_t)
 
 type xauth_tmp_t;
 typealias xauth_tmp_t alias { user_xauth_tmp_t staff_xauth_tmp_t sysadm_xauth_tmp_t };
+typealias xauth_tmp_t alias { xguest_xauth_tmp_t unconfined_xauth_tmp_t };
 typealias xauth_tmp_t alias { auditadm_xauth_tmp_t secadm_xauth_tmp_t };
 files_tmp_file(xauth_tmp_t)
 ubac_constrained(xauth_tmp_t)
@@ -164,16 +197,21 @@
 type xdm_exec_t;
 auth_login_pgm_domain(xdm_t)
 init_domain(xdm_t, xdm_exec_t)
-init_daemon_domain(xdm_t, xdm_exec_t)
+init_system_domain(xdm_t, xdm_exec_t)
 xserver_object_types_template(xdm)
 xserver_common_x_domain_template(xdm, xdm_t)
-xserver_unconfined(xdm_t)
 
 type xdm_lock_t;
 files_lock_file(xdm_lock_t)
 
+type xdm_etc_t;
+files_config_file(xdm_etc_t)
+
 type xdm_rw_etc_t;
-files_type(xdm_rw_etc_t)
+files_config_file(xdm_rw_etc_t)
+
+type xdm_spool_t;
+files_type(xdm_spool_t)
 
 type xdm_var_lib_t;
 files_type(xdm_var_lib_t)
@@ -181,13 +219,27 @@
 type xdm_var_run_t;
 files_pid_file(xdm_var_run_t)
 
+type xserver_var_lib_t;
+files_type(xserver_var_lib_t)
+
+type xserver_var_run_t;
+files_pid_file(xserver_var_run_t)
+
 type xdm_tmp_t;
 files_tmp_file(xdm_tmp_t)
-typealias xdm_tmp_t alias ice_tmp_t;
+typealias xdm_tmp_t alias { xserver_tmp_t user_xserver_tmp_t staff_xserver_tmp_t sysadm_xserver_tmp_t ice_tmp_t };
+typealias xdm_tmp_t alias { auditadm_xserver_tmp_t secadm_xserver_tmp_t xdm_xserver_tmp_t };
+ubac_constrained(xdm_tmp_t)
 
 type xdm_tmpfs_t;
 files_tmpfs_file(xdm_tmpfs_t)
 
+type xdm_home_t;
+userdom_user_home_content(xdm_home_t)
+
+type xdm_log_t;
+logging_log_file(xdm_log_t)
+
 # type for /var/lib/xkb
 type xkb_var_lib_t;
 files_type(xkb_var_lib_t)
@@ -200,15 +252,9 @@
 init_system_domain(xserver_t, xserver_exec_t)
 ubac_constrained(xserver_t)
 
-type xserver_tmp_t;
-typealias xserver_tmp_t alias { user_xserver_tmp_t staff_xserver_tmp_t sysadm_xserver_tmp_t };
-typealias xserver_tmp_t alias { auditadm_xserver_tmp_t secadm_xserver_tmp_t xdm_xserver_tmp_t };
-files_tmp_file(xserver_tmp_t)
-ubac_constrained(xserver_tmp_t)
-
 type xserver_tmpfs_t;
-typealias xserver_tmpfs_t alias { user_xserver_tmpfs_t staff_xserver_tmpfs_t sysadm_xserver_tmpfs_t };
-typealias xserver_tmpfs_t alias { auditadm_xserver_tmpfs_t secadm_xserver_tmpfs_t xdm_xserver_tmpfs_t };
+typealias xserver_tmpfs_t alias { user_xserver_tmpfs_t staff_xserver_tmpfs_t sysadm_xserver_tmpfs_t xguest_xserver_tmpfs_t unconfined_xserver_tmpfs_t xdm_xserver_tmpfs_t };
+typealias xserver_tmpfs_t alias { auditadm_xserver_tmpfs_t secadm_xserver_tmpfs_t };
 files_tmpfs_file(xserver_tmpfs_t)
 ubac_constrained(xserver_tmpfs_t)
 
@@ -238,9 +284,13 @@
 
 allow xdm_t iceauth_home_t:file read_file_perms;
 
+dev_read_rand(iceauth_t)
+
 fs_search_auto_mountpoints(iceauth_t)
 
 userdom_use_user_terminals(iceauth_t)
+userdom_read_user_tmp_files(iceauth_t)
+userdom_read_all_users_state(iceauth_t)
 
 tunable_policy(`use_nfs_home_dirs',`
 	fs_manage_nfs_files(iceauth_t)
@@ -250,50 +300,106 @@
 	fs_manage_cifs_files(iceauth_t)
 ')
 
+ifdef(`hide_broken_symptoms', `
+	dev_dontaudit_read_urand(iceauth_t)
+	dev_dontaudit_rw_dri(iceauth_t)
+	dev_dontaudit_rw_generic_dev_nodes(iceauth_t)
+	fs_list_inotifyfs(iceauth_t)
+	fs_dontaudit_rw_anon_inodefs_files(iceauth_t)
+        term_dontaudit_use_unallocated_ttys(iceauth_t)
+
+	userdom_dontaudit_read_user_home_content_files(iceauth_t)
+	userdom_dontaudit_write_user_home_content_files(iceauth_t)
+	userdom_dontaudit_write_user_tmp_files(iceauth_t) 
+
+	optional_policy(`
+		mozilla_dontaudit_rw_user_home_files(iceauth_t)
+	')
+')
+
 ########################################
 #
 # Xauth local policy
 #
 
+allow xauth_t self:capability dac_override;
 allow xauth_t self:process signal;
 allow xauth_t self:unix_stream_socket create_stream_socket_perms;
 
+allow xauth_t xdm_t:process sigchld;
+allow xauth_t xserver_t:unix_stream_socket connectto;
+
+corenet_tcp_connect_xserver_port(xauth_t)
+
 allow xauth_t xauth_home_t:file manage_file_perms;
 userdom_user_home_dir_filetrans(xauth_t, xauth_home_t, file)
+userdom_admin_home_dir_filetrans(xauth_t, xauth_home_t, file)
+
+manage_dirs_pattern(xauth_t, xdm_var_run_t, xdm_var_run_t)
+manage_files_pattern(xauth_t, xdm_var_run_t, xdm_var_run_t)
 
 manage_dirs_pattern(xauth_t, xauth_tmp_t, xauth_tmp_t)
 manage_files_pattern(xauth_t, xauth_tmp_t, xauth_tmp_t)
 files_tmp_filetrans(xauth_t, xauth_tmp_t, { file dir })
 
-allow xdm_t xauth_home_t:file manage_file_perms;
-userdom_user_home_dir_filetrans(xdm_t, xauth_home_t, file)
+stream_connect_pattern(xauth_t, xserver_tmp_t, xserver_tmp_t, xserver_t)
+
+kernel_read_system_state(xauth_t)
 
 domain_use_interactive_fds(xauth_t)
+domain_dontaudit_leaks(xauth_t)
 
 files_read_etc_files(xauth_t)
+files_read_usr_files(xauth_t)
 files_search_pids(xauth_t)
-
-fs_getattr_xattr_fs(xauth_t)
+files_dontaudit_getattr_all_dirs(xauth_t)
+files_dontaudit_leaks(xauth_t)
+files_var_lib_filetrans(xauth_t, xauth_home_t, file)
+
+fs_dontaudit_leaks(xauth_t)
+fs_dontaudit_list_inotifyfs(xauth_t)   
+fs_getattr_all_fs(xauth_t)
 fs_search_auto_mountpoints(xauth_t)
 
-# cjp: why?
-term_use_ptmx(xauth_t)
+# Probably leak
+# 583546 bug
+term_dontaudit_use_ptmx(xauth_t)
+term_dontaudit_use_console(xauth_t)
 
 auth_use_nsswitch(xauth_t)
 
 userdom_use_user_terminals(xauth_t)
 userdom_read_user_tmp_files(xauth_t)
+userdom_read_all_users_state(xauth_t)
+
+ifdef(`hide_broken_symptoms', `
+     fs_dontaudit_rw_anon_inodefs_files(xauth_t)
+     userdom_manage_user_home_content_files(xauth_t)
+     userdom_manage_user_tmp_files(xauth_t)
+     dev_dontaudit_rw_generic_dev_nodes(xauth_t)
+     miscfiles_read_fonts(xauth_t)
+')
 
 xserver_rw_xdm_tmp_files(xauth_t)
 
 tunable_policy(`use_nfs_home_dirs',`
 	fs_manage_nfs_files(xauth_t)
+	fs_read_nfs_symlinks(xauth_t)
 ')
 
 tunable_policy(`use_samba_home_dirs',`
 	fs_manage_cifs_files(xauth_t)
 ')
 
+ifdef(`hide_broken_symptoms', `
+        term_dontaudit_use_unallocated_ttys(xauth_t)
+	dev_dontaudit_rw_dri(xauth_t)
+')
+
+optional_policy(`
+	nx_var_lib_filetrans(xauth_t, xauth_home_t, file)
+')
+
 optional_policy(`
 	ssh_sigchld(xauth_t)
 	ssh_read_pipes(xauth_t)
@@ -305,20 +411,33 @@
 # XDM Local policy
 #
 
-allow xdm_t self:capability { setgid setuid sys_resource kill sys_tty_config mknod chown dac_override dac_read_search fowner fsetid ipc_owner sys_nice sys_rawio net_bind_service };
-allow xdm_t self:process { setexec setpgid getsched setsched setrlimit signal_perms setkeycreate };
+allow xdm_t self:capability { setgid setuid sys_resource kill sys_tty_config mknod chown dac_override dac_read_search fowner fsetid ipc_owner sys_nice sys_rawio net_bind_service sys_ptrace };
+allow xdm_t self:process { setexec setpgid getsched setsched setrlimit signal_perms setkeycreate ptrace };
+allow xdm_t self:process { getattr getcap setcap };
 allow xdm_t self:fifo_file rw_fifo_file_perms;
 allow xdm_t self:shm create_shm_perms;
 allow xdm_t self:sem create_sem_perms;
 allow xdm_t self:unix_stream_socket { connectto create_stream_socket_perms };
-allow xdm_t self:unix_dgram_socket create_socket_perms;
+allow xdm_t self:unix_dgram_socket { create_socket_perms sendto };
 allow xdm_t self:tcp_socket create_stream_socket_perms;
 allow xdm_t self:udp_socket create_socket_perms;
+allow xdm_t self:netlink_kobject_uevent_socket create_socket_perms;
 allow xdm_t self:socket create_socket_perms;
 allow xdm_t self:appletalk_socket create_socket_perms;
 allow xdm_t self:key { search link write };
 
+allow xdm_t xauth_home_t:file manage_file_perms;
+
 allow xdm_t xconsole_device_t:fifo_file { getattr setattr };
+manage_dirs_pattern(xdm_t, xkb_var_lib_t, xkb_var_lib_t)
+manage_files_pattern(xdm_t, xkb_var_lib_t, xkb_var_lib_t)
+
+manage_files_pattern(xdm_t, xdm_home_t, xdm_home_t)
+userdom_user_home_dir_filetrans(xdm_t, xdm_home_t, file)
+#Handle mislabeled files in homedir
+userdom_delete_user_home_content_files(xdm_t)
+userdom_signull_unpriv_users(xdm_t)
+userdom_dontaudit_read_admin_home_lnk_files(xdm_t)
 
 # Allow gdm to run gdm-binary
 can_exec(xdm_t, xdm_exec_t)
@@ -326,32 +445,55 @@
 allow xdm_t xdm_lock_t:file manage_file_perms;
 files_lock_filetrans(xdm_t, xdm_lock_t, file)
 
+read_lnk_files_pattern(xdm_t, xdm_etc_t, xdm_etc_t)
+read_files_pattern(xdm_t, xdm_etc_t, xdm_etc_t)
 # wdm has its own config dir /etc/X11/wdm
 # this is ugly, daemons should not create files under /etc!
 manage_files_pattern(xdm_t, xdm_rw_etc_t, xdm_rw_etc_t)
 
 manage_dirs_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
 manage_files_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
+manage_lnk_files_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
 manage_sock_files_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
-files_tmp_filetrans(xdm_t, xdm_tmp_t, { file dir sock_file })
+files_tmp_filetrans(xdm_t, xdm_tmp_t, { file dir sock_file lnk_file })
+relabelfrom_dirs_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
+relabelfrom_files_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
 
 manage_dirs_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
 manage_files_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
 manage_lnk_files_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
 manage_fifo_files_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
 manage_sock_files_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
-fs_tmpfs_filetrans(xdm_t, xdm_tmpfs_t,{ dir file lnk_file sock_file fifo_file })
+
+fs_getattr_all_fs(xdm_t)
+fs_list_inotifyfs(xdm_t)
+fs_read_noxattr_fs_files(xdm_t)
+fs_dontaudit_list_fusefs(xdm_t)
+fs_manage_cgroup_dirs(xdm_t)
+fs_manage_cgroup_files(xdm_t)
+
+manage_files_pattern(xdm_t, user_fonts_t, user_fonts_t)
+
+files_search_spool(xdm_t)
+manage_dirs_pattern(xdm_t, xdm_spool_t, xdm_spool_t)
+manage_files_pattern(xdm_t, xdm_spool_t, xdm_spool_t)
+files_spool_filetrans(xdm_t, xdm_spool_t, { file dir })
 
 manage_dirs_pattern(xdm_t, xdm_var_lib_t, xdm_var_lib_t)	
 manage_files_pattern(xdm_t, xdm_var_lib_t, xdm_var_lib_t)
-files_var_lib_filetrans(xdm_t, xdm_var_lib_t, file)
+manage_lnk_files_pattern(xdm_t, xdm_var_lib_t, xdm_var_lib_t)
+manage_sock_files_pattern(xdm_t, xdm_var_lib_t, xdm_var_lib_t)
+files_var_lib_filetrans(xdm_t, xdm_var_lib_t, { file dir })
+# Read machine-id
+files_read_var_lib_files(xdm_t)
 
 manage_dirs_pattern(xdm_t, xdm_var_run_t, xdm_var_run_t)
 manage_files_pattern(xdm_t, xdm_var_run_t, xdm_var_run_t)
 manage_fifo_files_pattern(xdm_t, xdm_var_run_t, xdm_var_run_t)
-files_pid_filetrans(xdm_t, xdm_var_run_t, { dir file fifo_file })
+manage_sock_files_pattern(xdm_t, xdm_var_run_t, xdm_var_run_t)
+files_pid_filetrans(xdm_t, xdm_var_run_t, { dir file fifo_file sock_file })
 
-allow xdm_t xserver_t:process signal;
+allow xdm_t xserver_t:process { signal signull };
 allow xdm_t xserver_t:unix_stream_socket connectto;
 
 allow xdm_t xserver_tmp_t:sock_file rw_sock_file_perms;
@@ -359,10 +501,13 @@
 
 # transition to the xdm xserver
 domtrans_pattern(xdm_t, xserver_exec_t, xserver_t)
+
+ps_process_pattern(xserver_t, xdm_t)
 allow xserver_t xdm_t:process signal;
 allow xdm_t xserver_t:process { noatsecure siginh rlimitinh signal sigkill };
 
 allow xdm_t xserver_t:shm rw_shm_perms;
+read_files_pattern(xdm_t, xserver_t, xserver_t)
 
 # connect to xdm xserver over stream socket
 stream_connect_pattern(xdm_t, xserver_tmp_t, xserver_tmp_t, xserver_t)
@@ -371,18 +516,25 @@
 delete_files_pattern(xdm_t, xserver_tmp_t, xserver_tmp_t)
 delete_sock_files_pattern(xdm_t, xserver_tmp_t, xserver_tmp_t)
 
+manage_dirs_pattern(xdm_t, xdm_log_t, xdm_log_t)
+manage_files_pattern(xdm_t, xdm_log_t, xdm_log_t)
+manage_fifo_files_pattern(xdm_t, xdm_log_t, xdm_log_t)
+logging_log_filetrans(xdm_t, xdm_log_t, file)
+
 manage_dirs_pattern(xdm_t, xserver_log_t, xserver_log_t)
 manage_files_pattern(xdm_t, xserver_log_t, xserver_log_t)
 manage_fifo_files_pattern(xdm_t, xserver_log_t, xserver_log_t)
-logging_log_filetrans(xdm_t, xserver_log_t, file)
 
 kernel_read_system_state(xdm_t)
+kernel_read_device_sysctls(xdm_t)
 kernel_read_kernel_sysctls(xdm_t)
 kernel_read_net_sysctls(xdm_t)
 kernel_read_network_state(xdm_t)
+kernel_stream_connect(xdm_t)
 
 corecmd_exec_shell(xdm_t)
 corecmd_exec_bin(xdm_t)
+corecmd_dontaudit_write_bin_files(xdm_t)
 
 corenet_all_recvfrom_unlabeled(xdm_t)
 corenet_all_recvfrom_netlabel(xdm_t)
@@ -394,11 +546,14 @@
 corenet_udp_sendrecv_all_ports(xdm_t)
 corenet_tcp_bind_generic_node(xdm_t)
 corenet_udp_bind_generic_node(xdm_t)
+corenet_udp_bind_ipp_port(xdm_t)
+corenet_udp_bind_xdmcp_port(xdm_t)
 corenet_tcp_connect_all_ports(xdm_t)
 corenet_sendrecv_all_client_packets(xdm_t)
 # xdm tries to bind to biff_port_t
 corenet_dontaudit_tcp_bind_all_ports(xdm_t)
 
+dev_rwx_zero(xdm_t)
 dev_read_rand(xdm_t)
 dev_read_sysfs(xdm_t)
 dev_getattr_framebuffer_dev(xdm_t)
@@ -406,6 +561,7 @@
 dev_getattr_mouse_dev(xdm_t)
 dev_setattr_mouse_dev(xdm_t)
 dev_rw_apm_bios(xdm_t)
+dev_rw_input_dev(xdm_t)
 dev_setattr_apm_bios_dev(xdm_t)
 dev_rw_dri(xdm_t)
 dev_rw_agp(xdm_t)
@@ -414,18 +570,22 @@
 dev_getattr_misc_dev(xdm_t)
 dev_setattr_misc_dev(xdm_t)
 dev_dontaudit_rw_misc(xdm_t)
-dev_getattr_video_dev(xdm_t)
+dev_read_video_dev(xdm_t)
+dev_write_video_dev(xdm_t)
 dev_setattr_video_dev(xdm_t)
 dev_getattr_scanner_dev(xdm_t)
 dev_setattr_scanner_dev(xdm_t)
-dev_getattr_sound_dev(xdm_t)
-dev_setattr_sound_dev(xdm_t)
+dev_read_sound(xdm_t)
+dev_write_sound(xdm_t)
 dev_getattr_power_mgmt_dev(xdm_t)
 dev_setattr_power_mgmt_dev(xdm_t)
+dev_getattr_null_dev(xdm_t)
+dev_setattr_null_dev(xdm_t)
 
 domain_use_interactive_fds(xdm_t)
 # Do not audit denied probes of /proc.
 domain_dontaudit_read_all_domains_state(xdm_t)
+domain_dontaudit_ptrace_all_domains(xdm_t)
 
 files_read_etc_files(xdm_t)
 files_read_var_files(xdm_t)
@@ -436,9 +596,19 @@
 files_read_usr_files(xdm_t)
 # Poweroff wants to create the /poweroff file when run from xdm
 files_create_boot_flag(xdm_t)
+files_dontaudit_getattr_boot_dirs(xdm_t)
+files_dontaudit_write_usr_files(xdm_t)
+files_dontaudit_write_etc_dirs(xdm_t)
+files_dontaudit_getattr_all_dirs(xdm_t)
+files_dontaudit_getattr_all_symlinks(xdm_t)
+
 
 fs_getattr_all_fs(xdm_t)
 fs_search_auto_mountpoints(xdm_t)
+fs_rw_anon_inodefs_files(xdm_t)
+fs_mount_tmpfs(xdm_t)
+
+mls_socket_write_to_clearance(xdm_t)
 
 storage_dontaudit_read_fixed_disk(xdm_t)
 storage_dontaudit_write_fixed_disk(xdm_t)
@@ -447,14 +617,22 @@
 storage_dontaudit_raw_write_removable_device(xdm_t)
 storage_dontaudit_setattr_removable_dev(xdm_t)
 storage_dontaudit_rw_scsi_generic(xdm_t)
+storage_dontaudit_rw_fuse(xdm_t)
 
 term_setattr_console(xdm_t)
+term_use_console(xdm_t)
+term_use_virtio_console(xdm_t)
 term_use_unallocated_ttys(xdm_t)
 term_setattr_unallocated_ttys(xdm_t)
+term_relabel_all_ttys(xdm_t)
+term_relabel_unallocated_ttys(xdm_t)
+
+application_signal(xdm_t)
 
 auth_domtrans_pam_console(xdm_t)
 auth_manage_pam_pid(xdm_t)
 auth_manage_pam_console_data(xdm_t)
+auth_signal_pam(xdm_t)
 auth_rw_faillog(xdm_t)
 auth_write_login_records(xdm_t)
 
@@ -465,10 +643,12 @@
 
 logging_read_generic_logs(xdm_t)
 
+miscfiles_search_man_pages(xdm_t)
 miscfiles_read_localization(xdm_t)
 miscfiles_read_fonts(xdm_t)
-
-sysnet_read_config(xdm_t)
+miscfiles_manage_fonts_cache(xdm_t)
+miscfiles_manage_localization(xdm_t)
+miscfiles_read_hwdata(xdm_t)
 
 userdom_dontaudit_use_unpriv_user_fds(xdm_t)
 userdom_create_all_users_keys(xdm_t)
@@ -477,6 +657,13 @@
 # Search /proc for any user domain processes.
 userdom_read_all_users_state(xdm_t)
 userdom_signal_all_users(xdm_t)
+userdom_stream_connect(xdm_t)
+userdom_manage_user_tmp_dirs(xdm_t)
+userdom_manage_user_tmp_files(xdm_t)
+userdom_manage_user_tmp_sockets(xdm_t)
+userdom_manage_tmpfs_role(system_r, xdm_t)
+userdom_dontaudit_getattr_user_home_content(xdm_t)   
+userdom_dontaudit_write_admin_dir(xdm_t)
 
 xserver_rw_session(xdm_t, xdm_tmpfs_t)
 xserver_unconfined(xdm_t)
@@ -495,6 +682,12 @@
 	fs_exec_cifs_files(xdm_t)
 ')
 
+tunable_policy(`xdm_exec_bootloader',`
+	bootloader_exec(xdm_t)
+	files_read_boot_files(xdm_t)
+	files_read_boot_symlinks(xdm_t)
+')
+
 tunable_policy(`xdm_sysadm_login',`
 	userdom_xsession_spec_domtrans_all_users(xdm_t)
 	# FIXME:
@@ -508,17 +701,60 @@
 ')
 
 optional_policy(`
+	accountsd_read_lib_files(xdm_t)
+')
+
+optional_policy(`
 	alsa_domtrans(xdm_t)
+	alsa_read_rw_config(xdm_t)
 ')
 
 optional_policy(`
 	consolekit_dbus_chat(xdm_t)
+	consolekit_read_log(xdm_t)
 ')
 
 optional_policy(`
 	consoletype_exec(xdm_t)
 ')
 
+#caused by gok
+optional_policy(`
+	cvs_dontaudit_list_data(xdm_t)
+')
+
+optional_policy(`
+	# Use dbus to start other processes as xdm_t
+	dbus_role_template(xdm, system_r, xdm_t)
+
+	dontaudit xdm_dbusd_t xdm_var_lib_t:dir search_dir_perms;
+	xserver_xdm_append_log(xdm_dbusd_t)
+	xserver_read_xdm_pid(xdm_dbusd_t)
+
+	corecmd_bin_entry_type(xdm_t)
+
+	dbus_system_bus_client(xdm_t)
+
+	optional_policy(`
+		bluetooth_dbus_chat(xdm_t)
+	')
+
+	optional_policy(`
+		devicekit_dbus_chat_disk(xdm_t)
+		devicekit_dbus_chat_power(xdm_t)
+	')
+
+	optional_policy(`
+		hal_dbus_chat(xdm_t)
+	')
+
+	optional_policy(`
+		networkmanager_dbus_chat(xdm_t)
+	')
+
+')
+
+
 optional_policy(`
 	# Talk to the console mouse server.
 	gpm_stream_connect(xdm_t)
@@ -526,6 +762,13 @@
 ')
 
 optional_policy(`
+	gnome_manage_config(xdm_t)
+	gnome_manage_gconf_home_files(xdm_t)
+	gnome_read_config(xdm_t)
+	gnome_read_gconf_config(xdm_t)
+')
+
+optional_policy(`
 	hostname_exec(xdm_t)
 ')
 
@@ -543,20 +786,68 @@
 ')
 
 optional_policy(`
+        policykit_dbus_chat(xdm_t)
+	policykit_domtrans_auth(xdm_t)
+	policykit_read_lib(xdm_t)
+	policykit_read_reload(xdm_t)
+	policykit_signal_auth(xdm_t)
+')
+
+optional_policy(`
+	pcscd_stream_connect(xdm_t)
+')
+
+optional_policy(`
+	plymouthd_search_spool(xdm_t)
+	plymouthd_exec_plymouth(xdm_t)
+')
+
+optional_policy(`
+	pulseaudio_exec(xdm_t)
+	pulseaudio_dbus_chat(xdm_t)
+	pulseaudio_stream_connect(xdm_t)
+')
+
+optional_policy(`
 	resmgr_stream_connect(xdm_t)
 ')
 
 optional_policy(`
+    rhev_stream_connect_agentd(xdm_t)
+    rhev_read_pid_files_agentd(xdm_t)
+')
+
+# On crash gdm execs gdb to dump stack
+optional_policy(`
+	rpm_exec(xdm_t)
+	rpm_read_db(xdm_t)
+	rpm_dontaudit_manage_db(xdm_t)
+')
+
+optional_policy(`
+	rtkit_scheduled(xdm_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(xdm_t)
 ')
 
 optional_policy(`
+	shutdown_domtrans(xdm_t)
+')
+
+optional_policy(`
+	ssh_signull(xdm_t)
+')
+
+optional_policy(`
 	udev_read_db(xdm_t)
 ')
 
 optional_policy(`
-	unconfined_domain(xdm_t)
-	unconfined_domtrans(xdm_t)
+	unconfined_shell_domtrans(xdm_t)
+	unconfined_signal(xdm_t)
+')
 
 	ifndef(`distro_redhat',`
 		allow xdm_t self:process { execheap execmem };
@@ -565,7 +856,6 @@
 	ifdef(`distro_rhel4',`
 		allow xdm_t self:process { execheap execmem };
 	')
-')
 
 optional_policy(`
 	userhelper_dontaudit_search_config(xdm_t)
@@ -576,6 +866,14 @@
 ')
 
 optional_policy(`
+    vdagent_stream_connect(xdm_t)
+')
+
+optional_policy(`
+	wm_exec(xdm_t)
+')
+
+optional_policy(`
 	xfs_stream_connect(xdm_t)
 ')
 
@@ -600,10 +898,9 @@
 # execheap needed until the X module loader is fixed.
 # NVIDIA Needs execstack
 
-allow xserver_t self:capability { dac_override fowner fsetid setgid setuid ipc_owner sys_rawio sys_admin sys_nice sys_tty_config mknod net_bind_service };
+allow xserver_t self:capability { dac_override fowner fsetid setgid setuid ipc_owner sys_ptrace sys_rawio sys_admin sys_nice sys_tty_config mknod net_bind_service };
 dontaudit xserver_t self:capability chown;
 allow xserver_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
-allow xserver_t self:memprotect mmap_zero;
 allow xserver_t self:fd use;
 allow xserver_t self:fifo_file rw_fifo_file_perms;
 allow xserver_t self:sock_file read_sock_file_perms;
@@ -615,6 +912,18 @@
 allow xserver_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow xserver_t self:tcp_socket create_stream_socket_perms;
 allow xserver_t self:udp_socket create_socket_perms;
+allow xserver_t self:netlink_selinux_socket create_socket_perms;
+allow xserver_t self:netlink_kobject_uevent_socket create_socket_perms;
+
+# Device rules
+allow x_domain xserver_t:x_device { read getattr use setattr setfocus grab bell };
+allow x_domain xserver_t:x_screen getattr;
+
+allow xserver_t { input_xevent_t input_xevent_type }:x_event send;
+
+domtrans_pattern(xserver_t, xauth_exec_t, xauth_t)
+
+allow xserver_t xauth_home_t:file read_file_perms;
 
 manage_dirs_pattern(xserver_t, xserver_tmp_t, xserver_tmp_t)
 manage_files_pattern(xserver_t, xserver_tmp_t, xserver_tmp_t)
@@ -634,12 +943,19 @@
 manage_lnk_files_pattern(xserver_t, xkb_var_lib_t, xkb_var_lib_t)
 files_search_var_lib(xserver_t)
 
-domtrans_pattern(xserver_t, xauth_exec_t, xauth_t)
-allow xserver_t xauth_home_t:file read_file_perms;
+manage_dirs_pattern(xserver_t, xserver_var_lib_t, xserver_var_lib_t)	
+manage_files_pattern(xserver_t, xserver_var_lib_t, xserver_var_lib_t)
+files_var_lib_filetrans(xserver_t, xserver_var_lib_t, dir)
+
+manage_dirs_pattern(xserver_t, xserver_var_run_t, xserver_var_run_t)	
+manage_files_pattern(xserver_t, xserver_var_run_t, xserver_var_run_t)
+manage_sock_files_pattern(xserver_t, xdm_var_run_t, xdm_var_run_t)
+files_pid_filetrans(xserver_t, xserver_var_run_t, { dir file })
 
 # Create files in /var/log with the xserver_log_t type.
 manage_files_pattern(xserver_t, xserver_log_t, xserver_log_t)
 logging_log_filetrans(xserver_t, xserver_log_t, file)
+manage_files_pattern(xserver_t, xdm_log_t, xdm_log_t)
 
 kernel_read_system_state(xserver_t)
 kernel_read_device_sysctls(xserver_t)
@@ -647,6 +963,7 @@
 # Xorg wants to check if kernel is tainted
 kernel_read_kernel_sysctls(xserver_t)
 kernel_write_proc_files(xserver_t)
+kernel_request_load_module(xserver_t)
 
 # Run helper programs in xserver_t.
 corecmd_exec_bin(xserver_t)
@@ -673,7 +990,6 @@
 dev_rw_agp(xserver_t)
 dev_rw_framebuffer(xserver_t)
 dev_manage_dri_dev(xserver_t)
-dev_filetrans_dri(xserver_t)
 dev_create_generic_dirs(xserver_t)
 dev_setattr_generic_dirs(xserver_t)
 # raw memory access is needed if not using the frame buffer
@@ -683,9 +999,12 @@
 dev_rw_xserver_misc(xserver_t)
 # read events - the synaptics touchpad driver reads raw events
 dev_rw_input_dev(xserver_t)
+dev_read_raw_memory(xserver_t)
+dev_write_raw_memory(xserver_t)
 dev_rwx_zero(xserver_t)
 
-domain_mmap_low(xserver_t)
+domain_dontaudit_read_all_domains_state(xserver_t)
+domain_signal_all_domains(xserver_t)
 
 files_read_etc_files(xserver_t)
 files_read_etc_runtime_files(xserver_t)
@@ -700,8 +1019,13 @@
 fs_search_nfs(xserver_t)
 fs_search_auto_mountpoints(xserver_t)
 fs_search_ramfs(xserver_t)
+fs_rw_tmpfs_files(xserver_t)
 
 mls_xwin_read_to_clearance(xserver_t)
+mls_process_write_to_clearance(xserver_t)
+mls_file_read_to_clearance(xserver_t)
+mls_file_write_all_levels(xserver_t)
+mls_file_upgrade(xserver_t)
 
 selinux_validate_context(xserver_t)
 selinux_compute_access_vector(xserver_t)
@@ -723,11 +1047,14 @@
 
 miscfiles_read_localization(xserver_t)
 miscfiles_read_fonts(xserver_t)
+miscfiles_read_hwdata(xserver_t)
 
 modutils_domtrans_insmod(xserver_t)
 
 # read x_contexts
 seutil_read_default_contexts(xserver_t)
+seutil_read_config(xserver_t)
+seutil_read_file_contexts(xserver_t)
 
 userdom_search_user_home_dirs(xserver_t)
 userdom_use_user_ttys(xserver_t)
@@ -779,12 +1106,32 @@
 ')
 
 optional_policy(`
+	devicekit_signal_power(xserver_t)
+')
+
+optional_policy(`
+	java_rw_shared_mem_unconfined(xserver_t)
+')
+
+optional_policy(`
 	rhgb_getpgid(xserver_t)
 	rhgb_signal(xserver_t)
 ')
 
 optional_policy(`
-	unconfined_domain_noaudit(xserver_t)
+	setrans_translate_context(xserver_t)
+')
+
+optional_policy(`
+	sandbox_rw_xserver_tmpfs_files(xserver_t)
+')
+
+optional_policy(`
+	udev_read_db(xserver_t)
+')
+
+optional_policy(`
+	unconfined_domain(xserver_t)
 	unconfined_domtrans(xserver_t)
 ')
 
@@ -811,7 +1158,7 @@
 allow xserver_t xdm_var_lib_t:file { getattr read };
 dontaudit xserver_t xdm_var_lib_t:dir search;
 
-allow xserver_t xdm_var_run_t:file read_file_perms;
+read_files_pattern(xserver_t, xdm_var_run_t, xdm_var_run_t)
 
 # Label pid and temporary files with derived types.
 manage_files_pattern(xserver_t, xdm_tmp_t, xdm_tmp_t)
@@ -832,9 +1179,14 @@
 # to read ROLE_home_t - examine this in more detail
 # (xauth?)
 userdom_read_user_home_content_files(xserver_t)
+userdom_read_all_users_state(xserver_t)
 
 xserver_use_user_fonts(xserver_t)
 
+optional_policy(`
+	userhelper_search_config(xserver_t)
+')
+
 tunable_policy(`use_nfs_home_dirs',`
 	fs_manage_nfs_dirs(xserver_t)
 	fs_manage_nfs_files(xserver_t)
@@ -849,11 +1201,14 @@
 
 optional_policy(`
 	dbus_system_bus_client(xserver_t)
-	hal_dbus_chat(xserver_t)
+
+	optional_policy(`
+		hal_dbus_chat(xserver_t)
+	')
 ')
 
 optional_policy(`
-	resmgr_stream_connect(xdm_t)
+	mono_rw_shm(xserver_t)
 ')
 
 optional_policy(`
@@ -999,3 +1354,34 @@
 allow xserver_unconfined_type xextension_type:x_extension *;
 allow xserver_unconfined_type { x_domain xserver_t }:x_resource *;
 allow xserver_unconfined_type xevent_type:{ x_event x_synthetic_event } *;
+
+optional_policy(`
+	unconfined_rw_shm(xserver_t)
+	unconfined_execmem_rw_shm(xserver_t)
+
+	# xserver signals unconfined user on startx
+	unconfined_signal(xserver_t)
+	unconfined_getpgid(xserver_t)
+')
+
+tunable_policy(`allow_xserver_execmem',`
+	allow xserver_t self:process { execheap execmem execstack };
+')
+
+
+# Hack to handle the problem of using the nvidia blobs
+tunable_policy(`allow_execmem',`
+	allow xdm_t self:process execmem;
+')
+
+tunable_policy(`allow_execstack',`
+	allow xdm_t self:process { execstack execmem };
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+	fs_append_nfs_files(xdmhomewriter)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+	fs_append_cifs_files(xdmhomewriter)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/zarafa.fc serefpolicy-3.7.19/policy/modules/services/zarafa.fc
--- nsaserefpolicy/policy/modules/services/zarafa.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/zarafa.fc	2012-05-08 21:24:25.985966824 +0000
@@ -0,0 +1,30 @@
+/etc/zarafa(/.*)?		gen_context(system_u:object_r:zarafa_etc_t,s0)
+
+/usr/bin/zarafa-dagent		--	gen_context(system_u:object_r:zarafa_deliver_exec_t,s0)
+/usr/bin/zarafa-gateway		--	gen_context(system_u:object_r:zarafa_gateway_exec_t,s0)
+/usr/bin/zarafa-ical		--	gen_context(system_u:object_r:zarafa_ical_exec_t,s0)
+/usr/bin/zarafa-indexer		--	gen_context(system_u:object_r:zarafa_indexer_exec_t,s0)
+/usr/bin/zarafa-monitor		--	gen_context(system_u:object_r:zarafa_monitor_exec_t,s0)
+/usr/bin/zarafa-server		--	gen_context(system_u:object_r:zarafa_server_exec_t,s0)
+/usr/bin/zarafa-spooler		--	gen_context(system_u:object_r:zarafa_spooler_exec_t,s0)
+
+/var/lib/zarafa(/.*)?			gen_context(system_u:object_r:zarafa_var_lib_t,s0)
+/var/lib/zarafa-webaccess(/.*)?	gen_context(system_u:object_r:zarafa_var_lib_t,s0)
+
+/var/log/zarafa/dagent\.log		--	gen_context(system_u:object_r:zarafa_deliver_log_t,s0)
+/var/log/zarafa/gateway\.log	--	gen_context(system_u:object_r:zarafa_gateway_log_t,s0)
+/var/log/zarafa/ical\.log	--	gen_context(system_u:object_r:zarafa_ical_log_t,s0)
+/var/log/zarafa/indexer\.log	--	gen_context(system_u:object_r:zarafa_indexer_log_t,s0)
+/var/log/zarafa/monitor\.log	--	gen_context(system_u:object_r:zarafa_monitor_log_t,s0)
+/var/log/zarafa/server\.log	--	gen_context(system_u:object_r:zarafa_server_log_t,s0)
+/var/log/zarafa/spooler\.log	--	gen_context(system_u:object_r:zarafa_spooler_log_t,s0)
+
+/var/run/zarafa			-s	gen_context(system_u:object_r:zarafa_server_var_run_t,s0)
+/var/run/zarafa-dagent\.pid		--	gen_context(system_u:object_r:zarafa_deliver_var_run_t,s0)
+/var/run/zarafa-gateway\.pid	--	gen_context(system_u:object_r:zarafa_gateway_var_run_t,s0)
+/var/run/zarafa-ical\.pid	--	gen_context(system_u:object_r:zarafa_ical_var_run_t,s0)
+/var/run/zarafa-indexer		-s	gen_context(system_u:object_r:zarafa_indexer_var_run_t,s0)
+/var/run/zarafa-indexer\.pid    --  gen_context(system_u:object_r:zarafa_indexer_var_run_t,s0)
+/var/run/zarafa-monitor\.pid	--	gen_context(system_u:object_r:zarafa_monitor_var_run_t,s0)
+/var/run/zarafa-server\.pid	--	gen_context(system_u:object_r:zarafa_server_var_run_t,s0)
+/var/run/zarafa-spooler\.pid	--	gen_context(system_u:object_r:zarafa_spooler_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/zarafa.if serefpolicy-3.7.19/policy/modules/services/zarafa.if
--- nsaserefpolicy/policy/modules/services/zarafa.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/zarafa.if	2012-02-09 10:46:26.123247126 +0000
@@ -0,0 +1,142 @@
+## <summary>Zarafa collaboration platform.</summary>
+
+######################################
+## <summary>
+##	Creates types and rules for a basic
+##	zararfa init daemon domain.
+## </summary>
+## <param name="prefix">
+##	<summary>
+##	Prefix for the domain.
+##	</summary>
+## </param>
+#
+template(`zarafa_domain_template',`
+	gen_require(`
+		attribute zarafa_domain;
+	')
+
+	##############################
+	#
+	# $1_t declarations
+	#
+
+	type zarafa_$1_t, zarafa_domain;
+	type zarafa_$1_exec_t;
+	init_daemon_domain(zarafa_$1_t, zarafa_$1_exec_t)
+
+	type zarafa_$1_log_t;
+	logging_log_file(zarafa_$1_log_t)
+
+	type zarafa_$1_var_run_t;
+	files_pid_file(zarafa_$1_var_run_t)
+
+	##############################
+	#
+	# $1_t local policy
+	#
+
+	manage_files_pattern(zarafa_$1_t, zarafa_$1_var_run_t, zarafa_$1_var_run_t)
+	manage_sock_files_pattern(zarafa_$1_t, zarafa_$1_var_run_t, zarafa_$1_var_run_t)
+	files_pid_filetrans(zarafa_$1_t, zarafa_$1_var_run_t, { file sock_file })
+
+	manage_files_pattern(zarafa_$1_t, zarafa_$1_log_t, zarafa_$1_log_t)
+	logging_log_filetrans(zarafa_$1_t, zarafa_$1_log_t, { file })
+')
+
+######################################
+## <summary>
+##	Allow the specified domain to search
+##	zarafa configuration dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`zarafa_search_config',`
+	gen_require(`
+		type zarafa_etc_t;
+	')
+
+	files_search_etc($1)
+	allow $1 zarafa_etc_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run zarafa_deliver.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`zarafa_domtrans_deliver',`
+	gen_require(`
+		type zarafa_deliver_t, zarafa_deliver_exec_t;
+	')
+
+	domtrans_pattern($1, zarafa_deliver_exec_t, zarafa_deliver_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run zarafa_server.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`zarafa_domtrans_server',`
+	gen_require(`
+		type zarafa_server_t, zarafa_server_exec_t;
+	')
+
+	domtrans_pattern($1, zarafa_server_exec_t, zarafa_server_t)
+')
+
+#######################################
+## <summary>
+##	Connect to zarafa-server unix domain stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`zarafa_stream_connect_server',`
+	gen_require(`
+		type zarafa_server_t, zarafa_server_var_run_t;
+	')
+
+	files_search_var_lib($1)
+	stream_connect_pattern($1, zarafa_server_var_run_t, zarafa_server_var_run_t, zarafa_server_t)
+')
+
+####################################
+## <summary>
+##  Allow the specified domain to manage
+##  zarafa /var/lib files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`zarafa_manage_lib_files',`
+    gen_require(`
+        type zarafa_var_lib_t;
+    ')
+
+    files_search_var_lib($1)
+    manage_files_pattern($1, zarafa_var_lib_t, zarafa_var_lib_t)
+	manage_lnk_files_pattern($1, zarafa_var_lib_t, zarafa_var_lib_t)
+    manage_dirs_pattern($1, zarafa_var_lib_t, zarafa_var_lib_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/zarafa.te serefpolicy-3.7.19/policy/modules/services/zarafa.te
--- nsaserefpolicy/policy/modules/services/zarafa.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/services/zarafa.te	2012-01-02 11:53:49.307169621 +0000
@@ -0,0 +1,255 @@
+policy_module(zarafa, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute zarafa_domain;
+
+zarafa_domain_template(deliver)
+
+type zarafa_deliver_tmp_t;
+files_tmp_file(zarafa_deliver_tmp_t)
+
+type zarafa_etc_t;
+files_config_file(zarafa_etc_t)
+
+zarafa_domain_template(gateway)
+zarafa_domain_template(ical)
+zarafa_domain_template(indexer)
+
+type zarafa_indexer_tmp_t;
+files_tmp_file(zarafa_indexer_tmp_t)
+
+zarafa_domain_template(monitor)
+zarafa_domain_template(server)
+
+type zarafa_server_tmp_t;
+files_tmp_file(zarafa_server_tmp_t)
+
+type zarafa_share_t;
+files_type(zarafa_share_t)
+
+zarafa_domain_template(spooler)
+
+type zarafa_var_lib_t;
+files_tmp_file(zarafa_var_lib_t)
+
+########################################
+#
+# zarafa-deliver local policy
+#
+
+manage_dirs_pattern(zarafa_deliver_t, zarafa_deliver_tmp_t, zarafa_deliver_tmp_t)
+manage_files_pattern(zarafa_deliver_t, zarafa_deliver_tmp_t, zarafa_deliver_tmp_t)
+files_tmp_filetrans(zarafa_deliver_t, zarafa_deliver_tmp_t, { file dir })
+
+optional_policy(`
+	unconfined_domain(zarafa_deliver_t)
+')
+
+########################################
+#
+# zarafa_gateway local policy
+#
+
+allow zarafa_gateway_t self:capability { chown kill };
+allow zarafa_gateway_t self:process setrlimit;
+
+corenet_all_recvfrom_unlabeled(zarafa_gateway_t)
+corenet_all_recvfrom_netlabel(zarafa_gateway_t)
+corenet_tcp_sendrecv_generic_if(zarafa_gateway_t)
+corenet_tcp_sendrecv_generic_node(zarafa_gateway_t)
+corenet_tcp_sendrecv_all_ports(zarafa_gateway_t)
+corenet_tcp_bind_generic_node(zarafa_gateway_t)
+corenet_tcp_bind_pop_port(zarafa_gateway_t)
+
+optional_policy(`
+	unconfined_domain(zarafa_gateway_t)
+')
+
+######################################
+#
+# zarafa-indexer local policy
+#
+
+allow zarafa_indexer_t self:capability chown;
+
+manage_dirs_pattern(zarafa_indexer_t, zarafa_indexer_tmp_t, zarafa_indexer_tmp_t)
+manage_files_pattern(zarafa_indexer_t, zarafa_indexer_tmp_t, zarafa_indexer_tmp_t)
+files_tmp_filetrans(zarafa_indexer_t, zarafa_indexer_tmp_t, { file dir })
+
+manage_dirs_pattern(zarafa_indexer_t, zarafa_var_lib_t, zarafa_var_lib_t)
+manage_files_pattern(zarafa_indexer_t, zarafa_var_lib_t, zarafa_var_lib_t)
+
+optional_policy(`
+	unconfined_domain(zarafa_indexer_t)
+')
+
+#######################################
+#
+# zarafa-ical local policy
+#
+
+allow zarafa_ical_t self:capability chown;
+
+corenet_all_recvfrom_unlabeled(zarafa_ical_t)
+corenet_all_recvfrom_netlabel(zarafa_ical_t)
+corenet_tcp_sendrecv_generic_if(zarafa_ical_t)
+corenet_tcp_sendrecv_generic_node(zarafa_ical_t)
+corenet_tcp_sendrecv_all_ports(zarafa_ical_t)
+corenet_tcp_bind_generic_node(zarafa_ical_t)
+corenet_tcp_bind_http_cache_port(zarafa_ical_t)
+
+optional_policy(`
+	unconfined_domain(zarafa_ical_t)
+')
+
+######################################
+#
+# zarafa-monitor local policy
+#
+
+allow zarafa_monitor_t self:capability chown;
+
+optional_policy(`
+	unconfined_domain(zarafa_monitor_t)
+')
+
+########################################
+#
+# zarafa_server local policy
+#
+
+allow zarafa_server_t self:capability { chown kill net_bind_service };
+allow zarafa_server_t self:process setrlimit;
+
+manage_dirs_pattern(zarafa_server_t, zarafa_server_tmp_t, zarafa_server_tmp_t)
+manage_files_pattern(zarafa_server_t, zarafa_server_tmp_t, zarafa_server_tmp_t)
+files_tmp_filetrans(zarafa_server_t, zarafa_server_tmp_t, { file dir })
+
+manage_dirs_pattern(zarafa_server_t, zarafa_var_lib_t, zarafa_var_lib_t)
+manage_files_pattern(zarafa_server_t, zarafa_var_lib_t, zarafa_var_lib_t)
+files_var_lib_filetrans(zarafa_server_t, zarafa_var_lib_t, { file dir })
+
+stream_connect_pattern(zarafa_server_t, zarafa_indexer_var_run_t, zarafa_indexer_var_run_t, zarafa_indexer_t)
+
+corenet_all_recvfrom_unlabeled(zarafa_server_t)
+corenet_all_recvfrom_netlabel(zarafa_server_t)
+corenet_tcp_sendrecv_generic_if(zarafa_server_t)
+corenet_tcp_sendrecv_generic_node(zarafa_server_t)
+corenet_tcp_sendrecv_all_ports(zarafa_server_t)
+corenet_tcp_bind_generic_node(zarafa_server_t)
+corenet_tcp_bind_zarafa_port(zarafa_server_t)
+
+files_read_usr_files(zarafa_server_t)
+
+logging_send_syslog_msg(zarafa_server_t)
+logging_send_audit_msgs(zarafa_server_t)
+
+sysnet_dns_name_resolve(zarafa_server_t)
+
+optional_policy(`
+	kerberos_use(zarafa_server_t)
+')
+
+optional_policy(`
+	mysql_stream_connect(zarafa_server_t)
+')
+
+optional_policy(`
+	unconfined_domain(zarafa_server_t)
+')
+
+########################################
+#
+# zarafa_spooler local policy
+#
+
+allow zarafa_spooler_t self:capability { chown kill };
+
+can_exec(zarafa_spooler_t, zarafa_spooler_exec_t)
+
+corenet_all_recvfrom_unlabeled(zarafa_spooler_t)
+corenet_all_recvfrom_netlabel(zarafa_spooler_t)
+corenet_tcp_sendrecv_generic_if(zarafa_spooler_t)
+corenet_tcp_sendrecv_generic_node(zarafa_spooler_t)
+corenet_tcp_sendrecv_all_ports(zarafa_spooler_t)
+corenet_tcp_connect_smtp_port(zarafa_spooler_t)
+
+dev_read_rand(zarafa_spooler_t)
+
+optional_policy(`
+	unconfined_domain(zarafa_spooler_t)
+')
+
+########################################
+#
+# zarafa_gateway local policy
+#
+
+allow zarafa_gateway_t self:capability { chown kill };
+allow zarafa_gateway_t self:process setrlimit;
+
+corenet_tcp_bind_pop_port(zarafa_gateway_t)
+
+dev_read_rand(zarafa_gateway_t)
+
+optional_policy(`
+	unconfined_domain(zarafa_gateway_t)
+')
+
+#######################################
+#
+# zarafa-ical local policy
+#
+
+allow zarafa_ical_t self:capability chown;
+
+corenet_tcp_bind_http_cache_port(zarafa_ical_t)
+
+optional_policy(`
+	unconfined_domain(zarafa_ical_t)
+')
+
+######################################
+#
+# zarafa-monitor local policy
+#
+
+allow zarafa_monitor_t self:capability chown;
+
+optional_policy(`
+	unconfined_domain(zarafa_monitor_t)
+')
+
+########################################
+#
+# zarafa domains local policy
+#
+
+# bad permission on /etc/zarafa
+allow zarafa_domain self:capability { dac_override setgid setuid };
+allow zarafa_domain self:process signal;
+allow zarafa_domain self:fifo_file rw_fifo_file_perms;
+allow zarafa_domain self:tcp_socket create_stream_socket_perms;
+allow zarafa_domain self:unix_stream_socket create_stream_socket_perms;
+
+stream_connect_pattern(zarafa_domain, zarafa_server_var_run_t, zarafa_server_var_run_t, zarafa_server_t)
+
+read_files_pattern(zarafa_domain, zarafa_etc_t, zarafa_etc_t)
+
+kernel_read_system_state(zarafa_domain)
+
+dev_read_rand(zarafa_domain)
+dev_read_urand(zarafa_domain)
+
+files_read_etc_files(zarafa_domain)
+
+auth_use_nsswitch(zarafa_domain)
+
+logging_send_syslog_msg(zarafa_domain)
+
+miscfiles_read_localization(zarafa_domain)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/zebra.if serefpolicy-3.7.19/policy/modules/services/zebra.if
--- nsaserefpolicy/policy/modules/services/zebra.if	2011-03-17 07:21:21.407851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/zebra.if	2011-03-17 07:21:03.849851001 +0000
@@ -38,8 +38,7 @@
 	')
 
 	files_search_pids($1)
-	allow $1 zebra_var_run_t:sock_file write;
-	allow $1 zebra_t:unix_stream_socket connectto;
+	stream_connect_pattern($1, zebra_var_run_t, zebra_var_run_t, zebra_t)
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/services/zosremote.if serefpolicy-3.7.19/policy/modules/services/zosremote.if
--- nsaserefpolicy/policy/modules/services/zosremote.if	2011-03-17 07:21:20.965851003 +0000
+++ serefpolicy-3.7.19/policy/modules/services/zosremote.if	2011-03-17 07:21:03.406851002 +0000
@@ -5,9 +5,9 @@
 ##	Execute a domain transition to run audispd-zos-remote.
 ## </summary>
 ## <param name="domain">
-## <summary>
+##	<summary>
 ##	Domain allowed to transition.
-## </summary>
+##	</summary>
 ## </param>
 #
 interface(`zosremote_domtrans',`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/application.if serefpolicy-3.7.19/policy/modules/system/application.if
--- nsaserefpolicy/policy/modules/system/application.if	2011-03-17 07:21:20.531851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/application.if	2011-03-17 07:21:02.906851000 +0000
@@ -130,3 +130,76 @@
 
 	allow $1 application_domain_type:process signull;
 ')
+
+#######################################
+## <summary>
+## Send signal to all application domains.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`application_signal',`
+	gen_require(`
+		attribute application_domain_type;
+	')
+
+	allow $1 application_domain_type:process signal;
+')
+
+#######################################
+## <summary>
+##  Dontaudit signull sent to all application domains.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`application_dontaudit_signull',`
+    gen_require(`
+        attribute application_domain_type;
+    ')
+
+    dontaudit $1 application_domain_type:process signull;
+')
+
+#######################################
+## <summary>
+##  Dontaudit signal sent to all application domains.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`application_dontaudit_signal',`
+    gen_require(`
+        attribute application_domain_type;
+    ')
+
+    dontaudit $1 application_domain_type:process signal;
+')
+
+#######################################
+## <summary>
+##  Dontaudit kill signal sent to all application domains.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`application_dontaudit_sigkill',`
+    gen_require(`
+        attribute application_domain_type;
+    ')
+
+    dontaudit $1 application_domain_type:process sigkill;
+')
+  
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/application.te serefpolicy-3.7.19/policy/modules/system/application.te
--- nsaserefpolicy/policy/modules/system/application.te	2011-03-17 07:21:20.473851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/application.te	2012-04-03 13:19:00.757615266 +0000
@@ -7,6 +7,26 @@
 # Executables to be run by user
 attribute application_exec_type;
 
+userdom_inherit_append_user_home_content_files(application_domain_type)
+userdom_inherit_append_admin_home_files(application_domain_type)
+userdom_inherit_append_user_tmp_files(application_domain_type)
+logging_inherit_append_all_logs(application_domain_type)
+
+files_dontaudit_search_all_dirs(application_domain_type)
+
+optional_policy(`
+	afs_rw_udp_sockets(application_domain_type)
+')
+
+optional_policy(`
+	cfengine_append_inherited_log(application_domain_type)
+')
+
+optional_policy(`
+	cron_rw_inherited_user_spool_files(application_domain_type)
+	cron_sigchld(application_domain_type)
+')
+
 optional_policy(`
 	ssh_sigchld(application_domain_type)
 	ssh_rw_stream_sockets(application_domain_type)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/authlogin.fc serefpolicy-3.7.19/policy/modules/system/authlogin.fc
--- nsaserefpolicy/policy/modules/system/authlogin.fc	2011-03-17 07:21:20.592851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/authlogin.fc	2011-09-08 14:03:38.119160002 +0000
@@ -5,11 +5,13 @@
 /etc/group\.lock	--	gen_context(system_u:object_r:shadow_t,s0)
 /etc/gshadow.*		--	gen_context(system_u:object_r:shadow_t,s0)
 /etc/passwd\.lock	--	gen_context(system_u:object_r:shadow_t,s0)
+/etc/passwd\.adjunct.* --      gen_context(system_u:object_r:shadow_t,s0)
 /etc/shadow.*		--	gen_context(system_u:object_r:shadow_t,s0)
 
 /sbin/pam_console_apply	 --	gen_context(system_u:object_r:pam_console_exec_t,s0)
 /sbin/pam_timestamp_check --	gen_context(system_u:object_r:pam_exec_t,s0)
 /sbin/unix_chkpwd	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
+/usr/sbin/validate	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
 /sbin/unix_update	--	gen_context(system_u:object_r:updpwd_exec_t,s0)
 /sbin/unix_verify	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
 ifdef(`distro_suse', `
@@ -28,6 +30,7 @@
 /var/db/shadow.*	--	gen_context(system_u:object_r:shadow_t,s0)
 
 /var/lib/abl(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
+/var/lib/pam_shield(/.*)?      gen_context(system_u:object_r:var_auth_t,s0)
 /var/lib/pam_ssh(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
 
 /var/log/btmp.*		--	gen_context(system_u:object_r:faillog_t,s0)
@@ -39,6 +42,7 @@
 /var/log/wtmp.*		--	gen_context(system_u:object_r:wtmp_t,s0)
 
 /var/run/console(/.*)?	 	gen_context(system_u:object_r:pam_var_console_t,s0)
+/var/run/faillock(/.*)?     gen_context(system_u:object_r:faillog_t,s0)
 /var/run/pam_mount(/.*)?	gen_context(system_u:object_r:pam_var_run_t,s0)
 /var/run/pam_ssh(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
 /var/run/sepermit(/.*)? 	gen_context(system_u:object_r:pam_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/authlogin.if serefpolicy-3.7.19/policy/modules/system/authlogin.if
--- nsaserefpolicy/policy/modules/system/authlogin.if	2011-03-17 07:21:20.569851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/authlogin.if	2012-05-15 07:12:17.795320883 +0000
@@ -23,11 +23,17 @@
 	role $1 types chkpwd_t;
 
 	# Transition from the user domain to this domain.
-	domtrans_pattern($2, chkpwd_exec_t, chkpwd_t)
+	#domtrans_pattern($2, chkpwd_exec_t, chkpwd_t)
+	auth_domtrans_chkpwd($2)
 
 	ps_process_pattern($2, chkpwd_t)
 
 	dontaudit $2 shadow_t:file read_file_perms;
+
+	logging_send_syslog_msg($2)
+	logging_send_audit_msgs($2)
+
+	usermanage_read_crack_db($2)
 ')
 
 ########################################
@@ -41,7 +47,6 @@
 ## </param>
 #
 interface(`auth_use_pam',`
-
 	# for SSP/ProPolice
 	dev_read_urand($1)
 	# for encrypted homedir
@@ -66,6 +71,11 @@
 		optional_policy(`
 			consolekit_dbus_chat($1)
 		')
+		
+		optional_policy(`
+        	fprintd_dbus_chat($1)
+        ')
+
 	')
 
 	optional_policy(`
@@ -74,6 +84,10 @@
 	')
 
 	optional_policy(`
+		locallogin_getattr_home_content($1)
+	')
+
+	optional_policy(`
 		nis_authenticate($1)
 	')
 ')
@@ -91,9 +105,12 @@
 interface(`auth_login_pgm_domain',`
 	gen_require(`
 		type var_auth_t, auth_cache_t;
+		attribute polydomain;
 	')
 
 	domain_type($1)
+	typeattribute $1 polydomain;
+
 	domain_subj_id_change_exemption($1)
 	domain_role_change_exemption($1)
 	domain_obj_id_change_exemption($1)
@@ -107,6 +124,7 @@
 	allow $1 self:capability ipc_lock;
 	allow $1 self:process setkeycreate;
 	allow $1 self:key manage_key_perms;
+	userdom_manage_all_users_keys($1)
 
 	files_list_var_lib($1)
 	manage_files_pattern($1, var_auth_t, var_auth_t)
@@ -119,6 +137,8 @@
 	# needed for afs - https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=253321
 	kernel_rw_afs_state($1)
 
+	corenet_tcp_connect_pki_ca_port($1)
+
 	# for fingerprint readers
 	dev_rw_input_dev($1)
 	dev_rw_generic_usb_dev($1)
@@ -141,6 +161,8 @@
 	mls_process_set_level($1)
 	mls_fd_share_all_levels($1)
 
+	auth_manage_faillog($1)
+	auth_manage_pam_pid($1)
 	auth_use_pam($1)
 
 	init_rw_utmp($1)
@@ -151,8 +173,43 @@
 	seutil_read_config($1)
 	seutil_read_default_contexts($1)
 
-	tunable_policy(`allow_polyinstantiation',`
-		files_polyinstantiate_all($1)
+	userdom_set_rlimitnh($1)
+	userdom_stream_connect($1)
+	userdom_read_user_home_content_symlinks($1)
+	userdom_delete_user_tmp_files($1)
+	userdom_search_admin_dir($1)
+
+	 tunable_policy(`authlogin_radius',`
+		corenet_udp_bind_all_unreserved_ports($1)
+	')
+
+	optional_policy(`
+		afs_rw_udp_sockets($1)
+	')
+
+	optional_policy(`
+		kerberos_read_config($1)
+	')
+
+	optional_policy(`
+		oddjob_dbus_chat($1)
+		oddjob_domtrans_mkhomedir($1)
+	')
+
+	optional_policy(`
+		corecmd_exec_bin($1)
+		storage_getattr_fixed_disk_dev($1)
+		mount_domtrans($1)
+	')
+
+	optional_policy(`
+		fprintd_dbus_chat($1)
+	')
+
+	optional_policy(`
+		ssh_agent_exec($1)
+		ssh_read_user_home_files($1)
+		userdom_read_user_home_content_files($1)
 	')
 ')
 
@@ -365,13 +422,21 @@
 	')
 
 	optional_policy(`
-		pcscd_read_pub_files($1)
+        openct_stream_connect($1)
+        openct_signull($1)
+        openct_read_pid_files($1)
+    ')
+
+	optional_policy(`
+		pcscd_manage_pub_files($1)
+		pcscd_manage_pub_pipes($1)
 		pcscd_stream_connect($1)
 	')
 
 	optional_policy(`
 		samba_stream_connect_winbind($1)
 	')
+	auth_domtrans_upd_passwd($1)
 ')
 
 ########################################
@@ -418,6 +483,7 @@
 
 	auth_domtrans_chk_passwd($1)
 	role $2 types chkpwd_t;
+	auth_run_upd_passwd($1, $2)
 ')
 
 ########################################
@@ -694,7 +760,7 @@
 	')
 
 	files_search_etc($1)
-	allow $1 shadow_t:file { relabelfrom relabelto };
+	allow $1 shadow_t:file relabel_file_perms;
 	typeattribute $1 can_relabelto_shadow_passwords;
 ')
 
@@ -733,7 +799,28 @@
 	')
 
 	logging_search_logs($1)
-	allow $1 faillog_t:file rw_file_perms;
+	rw_files_pattern($1, faillog_t, faillog_t)
+')
+
+#######################################
+## <summary>
+##  Manage the login failure log.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`auth_manage_faillog',`
+    gen_require(`
+        type faillog_t;
+    ')
+
+    files_search_pids($1)
+	logging_search_logs($1)
+    allow $1 faillog_t:dir manage_dir_perms;
+    allow $1 faillog_t:file manage_file_perms;
 ')
 
 #######################################
@@ -1500,6 +1587,8 @@
 #
 interface(`auth_use_nsswitch',`
 
+	allow $1 self:netlink_route_socket r_netlink_socket_perms;
+
 	files_list_var_lib($1)
 
 	# read /etc/nsswitch.conf
@@ -1515,6 +1604,10 @@
 	')
 
 	optional_policy(`
+		dirsrv_stream_connect($1)
+	')
+
+	optional_policy(`
 		ldap_stream_connect($1)
 	')
 
@@ -1531,7 +1624,15 @@
 	')
 
 	optional_policy(`
-		nscd_socket_use($1)
+		nscd_use($1)
+	')
+
+	optional_policy(`
+		nslcd_stream_connect($1)
+	')
+
+	optional_policy(`
+		sssd_stream_connect($1)
 	')
 
 	optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/authlogin.te serefpolicy-3.7.19/policy/modules/system/authlogin.te
--- nsaserefpolicy/policy/modules/system/authlogin.te	2011-03-17 07:21:20.649851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/authlogin.te	2012-08-08 01:28:33.649616793 +0000
@@ -6,9 +6,17 @@
 # Declarations
 #
 
+## <desc>
+## <p>
+## Allow users to login using a radius server
+## </p>
+## </desc>
+gen_tunable(authlogin_radius, false)
+ 
 attribute can_read_shadow_passwords;
 attribute can_write_shadow_passwords;
 attribute can_relabelto_shadow_passwords;
+attribute polydomain;
 
 type auth_cache_t;
 logging_log_file(auth_cache_t)
@@ -22,6 +30,7 @@
 
 type faillog_t;
 logging_log_file(faillog_t)
+mls_trusted_object(faillog_t)
 
 type lastlog_t;
 logging_log_file(lastlog_t)
@@ -84,7 +93,7 @@
 
 allow chkpwd_t self:capability { dac_override setuid };
 dontaudit chkpwd_t self:capability sys_tty_config;
-allow chkpwd_t self:process getattr;
+allow chkpwd_t self:process { getattr signal };
 
 allow chkpwd_t shadow_t:file read_file_perms;
 files_list_etc(chkpwd_t)
@@ -100,6 +109,9 @@
 files_read_etc_files(chkpwd_t)
 # for nscd
 files_dontaudit_search_var(chkpwd_t)
+#671882
+files_read_usr_symlinks(chkpwd_t)
+files_list_tmp(chkpwd_t)
 
 fs_dontaudit_getattr_xattr_fs(chkpwd_t)
 
@@ -119,6 +131,7 @@
 seutil_dontaudit_use_newrole_fds(chkpwd_t)
 
 userdom_use_user_terminals(chkpwd_t)
+userdom_dontaudit_use_user_ttys(chkpwd_t)
 
 ifdef(`distro_ubuntu',`
 	optional_policy(`
@@ -329,6 +342,8 @@
 
 kernel_read_system_state(updpwd_t)
 
+mls_file_write_all_levels(updpwd_t)
+
 dev_read_urand(updpwd_t)
 
 files_manage_etc_files(updpwd_t)
@@ -395,3 +410,13 @@
 	xserver_use_xdm_fds(utempter_t)
 	xserver_rw_xdm_pipes(utempter_t)
 ')
+
+tunable_policy(`allow_polyinstantiation',`
+    files_polyinstantiate_all(polydomain)
+')
+
+optional_policy(`
+    tunable_policy(`allow_polyinstantiation',`
+        namespace_init_domtrans(polydomain)
+    ')
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/daemontools.if serefpolicy-3.7.19/policy/modules/system/daemontools.if
--- nsaserefpolicy/policy/modules/system/daemontools.if	2011-03-17 07:21:20.505851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/daemontools.if	2011-03-17 07:21:02.866851003 +0000
@@ -71,6 +71,32 @@
 	domtrans_pattern($1, svc_start_exec_t, svc_start_t)
 ')
 
+######################################
+## <summary>
+##  Execute svc_start in the svc_start domain, and
+##  allow the specified role the svc_start domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="role">
+##  <summary>
+##  The role to be allowed the svc_start domain.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`daemonstools_run_start',`
+    gen_require(`
+        type svc_start_t;
+    ')
+
+    daemontools_domtrans_start($1)
+    role $2 types svc_start_t;
+')
+
 ########################################
 ## <summary>
 ##	Execute in the svc_run_t domain.
@@ -127,6 +153,24 @@
 	allow $1 svc_svc_t:file read_file_perms;
 ')
 
+######################################
+## <summary>
+##  Search svc_svc_t  directory.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`daemontools_search_svc_dir',`
+    gen_require(`
+        type svc_svc_t;
+    ')
+
+    allow $1 svc_svc_t:dir search_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Allow a domain to create svc_svc_t files.
@@ -148,3 +192,21 @@
 	allow $1 svc_svc_t:file manage_file_perms;
 	allow $1 svc_svc_t:lnk_file { read create };
 ')
+
+######################################
+## <summary>
+##  Send a SIGCHLD signal to svc_run domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`daemontools_sigchld_run',`
+    gen_require(`
+        type svc_run_t;
+    ')
+
+    allow $1 svc_run_t:process sigchld;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/daemontools.te serefpolicy-3.7.19/policy/modules/system/daemontools.te
--- nsaserefpolicy/policy/modules/system/daemontools.te	2011-03-17 07:21:20.482851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/daemontools.te	2011-03-17 07:21:02.809851003 +0000
@@ -39,7 +39,10 @@
 # multilog creates /service/*/log/status
 manage_files_pattern(svc_multilog_t, svc_svc_t, svc_svc_t)
 
+term_write_console(svc_multilog_t)
+
 init_use_fds(svc_multilog_t)
+init_dontaudit_use_script_fds(svc_multilog_t)
 
 # writes to /var/log/*/*
 logging_manage_generic_logs(svc_multilog_t)
@@ -53,7 +56,7 @@
 # ie. softlimit, setuidgid, envuidgid, envdir, fghack ..
 #
 
-allow svc_run_t self:capability { setgid setuid chown fsetid };
+allow svc_run_t self:capability { setgid setuid chown fsetid sys_resource };
 allow svc_run_t self:process setrlimit;
 allow svc_run_t self:fifo_file rw_fifo_file_perms;
 allow svc_run_t self:unix_stream_socket create_stream_socket_perms;
@@ -65,9 +68,13 @@
 
 kernel_read_system_state(svc_run_t)
 
+dev_read_urand(svc_run_t)
+
 corecmd_exec_bin(svc_run_t)
 corecmd_exec_shell(svc_run_t)
 
+term_write_console(svc_run_t)
+
 files_read_etc_files(svc_run_t)
 files_read_etc_runtime_files(svc_run_t)
 files_search_pids(svc_run_t)
@@ -89,21 +96,36 @@
 # ie svc, svscan, supervise ...
 #
 
-allow svc_start_t svc_run_t:process signal;
+allow svc_start_t svc_run_t:process { signal setrlimit };
 
 allow svc_start_t self:fifo_file rw_fifo_file_perms;
 allow svc_start_t self:capability kill;
+allow svc_start_t self:tcp_socket create_stream_socket_perms;
 allow svc_start_t self:unix_stream_socket create_socket_perms;
 
 can_exec(svc_start_t, svc_start_exec_t)
 
+mmap_files_pattern(svc_start_t, svc_svc_t, svc_svc_t)
+
+kernel_read_kernel_sysctls(svc_start_t)
+kernel_read_system_state(svc_start_t)
+
 corecmd_exec_bin(svc_start_t)
 corecmd_exec_shell(svc_start_t)
 
+corenet_tcp_bind_generic_node(svc_start_t)
+corenet_tcp_bind_generic_port(svc_start_t)
+
+term_write_console(svc_start_t)
+
 files_read_etc_files(svc_start_t)
 files_read_etc_runtime_files(svc_start_t)
 files_search_var(svc_start_t)
 files_search_pids(svc_start_t)
 
+logging_send_syslog_msg(svc_start_t)
+
+miscfiles_read_localization(svc_start_t)
+
 daemontools_domtrans_run(svc_start_t)
 daemontools_manage_svc(svc_start_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/fstools.fc serefpolicy-3.7.19/policy/modules/system/fstools.fc
--- nsaserefpolicy/policy/modules/system/fstools.fc	2011-03-17 07:21:20.639851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/fstools.fc	2011-03-17 07:21:03.046851001 +0000
@@ -1,4 +1,3 @@
-/sbin/badblocks		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/blkid		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/blockdev		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/cfdisk		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
@@ -23,7 +22,6 @@
 /sbin/mkfs.*		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/mkraid		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/mkreiserfs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
-/sbin/mkswap		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/parted		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/partprobe		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/partx		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/fstools.te serefpolicy-3.7.19/policy/modules/system/fstools.te
--- nsaserefpolicy/policy/modules/system/fstools.te	2011-03-17 07:21:20.491851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/fstools.te	2012-04-03 14:43:50.632852821 +0000
@@ -86,7 +86,7 @@
 # Access to /initrd devices
 dev_search_usbfs(fsadm_t)
 # for swapon
-dev_read_sysfs(fsadm_t)
+dev_rw_sysfs(fsadm_t)
 # Access to /initrd devices
 dev_getattr_usbfs_dirs(fsadm_t)
 # Access to /dev/mapper/control
@@ -118,11 +118,15 @@
 fs_search_tmpfs(fsadm_t)
 fs_getattr_tmpfs_dirs(fsadm_t)
 fs_read_tmpfs_symlinks(fsadm_t)
+fs_manage_nfs_files(fsadm_t)
+fs_manage_cifs_files(fsadm_t)
 # Recreate /mnt/cdrom.
 files_manage_mnt_dirs(fsadm_t)
 # for tune2fs
 files_search_all(fsadm_t)
 
+mcs_file_read_all(fsadm_t)
+
 mls_file_read_all_levels(fsadm_t)
 mls_file_write_all_levels(fsadm_t)
 
@@ -148,7 +152,7 @@
 
 seutil_read_config(fsadm_t)
 
-userdom_use_user_terminals(fsadm_t)
+term_use_all_terms(fsadm_t)
 
 ifdef(`distro_redhat',`
 	optional_policy(`
@@ -167,6 +171,14 @@
 ')
 
 optional_policy(`
+	hal_dontaudit_write_log(fsadm_t)
+')
+
+optional_policy(`
+	livecd_rw_tmp_files(fsadm_t)
+')
+
+optional_policy(`
 	nis_use_ypbind(fsadm_t)
 ')
 
@@ -176,6 +188,10 @@
 ')
 
 optional_policy(`
+	virt_read_blk_images(fsadm_t)
+')
+
+optional_policy(`
 	xen_append_log(fsadm_t)
 	xen_rw_image_files(fsadm_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/getty.te serefpolicy-3.7.19/policy/modules/system/getty.te
--- nsaserefpolicy/policy/modules/system/getty.te	2011-03-17 07:21:20.548851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/getty.te	2011-03-17 07:21:02.933851002 +0000
@@ -84,7 +84,7 @@
 term_setattr_all_ttys(getty_t)
 term_setattr_unallocated_ttys(getty_t)
 term_setattr_console(getty_t)
-term_dontaudit_use_console(getty_t)
+term_use_console(getty_t)
 
 auth_rw_login_records(getty_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/hostname.te serefpolicy-3.7.19/policy/modules/system/hostname.te
--- nsaserefpolicy/policy/modules/system/hostname.te	2011-03-17 07:21:20.669851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/hostname.te	2011-08-11 13:31:35.411523005 +0000
@@ -24,18 +24,22 @@
 
 kernel_list_proc(hostname_t)
 kernel_read_proc_symlinks(hostname_t)
+kernel_read_network_state(hostname_t)
 
 dev_read_sysfs(hostname_t)
 
+domain_dontaudit_leaks(hostname_t)
 domain_use_interactive_fds(hostname_t)
 
 files_read_etc_files(hostname_t)
+files_dontaudit_leaks(hostname_t)
 files_dontaudit_search_var(hostname_t)
 # for when /usr is not mounted:
 files_dontaudit_search_isid_type_dirs(hostname_t)
 
 fs_getattr_xattr_fs(hostname_t)
 fs_search_auto_mountpoints(hostname_t)
+fs_dontaudit_leaks(hostname_t)
 fs_dontaudit_use_tmpfs_chr_dev(hostname_t)
 
 term_dontaudit_use_console(hostname_t)
@@ -54,6 +58,10 @@
 sysnet_dns_name_resolve(hostname_t)
 
 optional_policy(`
+	nis_use_ypbind(hostname_t)
+')
+
+optional_policy(`
 	xen_append_log(hostname_t)
 	xen_dontaudit_use_fds(hostname_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/hotplug.if serefpolicy-3.7.19/policy/modules/system/hotplug.if
--- nsaserefpolicy/policy/modules/system/hotplug.if	2011-03-17 07:21:20.484851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/hotplug.if	2011-09-08 14:22:55.925160000 +0000
@@ -34,7 +34,7 @@
 #
 interface(`hotplug_exec',`
 	gen_require(`
-		type hotplug_t;
+		type hotplug_exec_t;
 	')
 
 	corecmd_search_bin($1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/hotplug.te serefpolicy-3.7.19/policy/modules/system/hotplug.te
--- nsaserefpolicy/policy/modules/system/hotplug.te	2011-03-17 07:21:20.588851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/hotplug.te	2011-03-17 07:21:02.965851003 +0000
@@ -24,7 +24,7 @@
 #
 
 allow hotplug_t self:capability { net_admin sys_tty_config mknod sys_rawio };
-dontaudit hotplug_t self:capability { sys_module sys_admin sys_tty_config };
+dontaudit hotplug_t self:capability { sys_module sys_admin sys_tty_config sys_ptrace };
 # for access("/etc/bashrc", X_OK) on Red Hat
 dontaudit hotplug_t self:capability { dac_override dac_read_search };
 allow hotplug_t self:process { setpgid getsession getattr signal_perms };
@@ -47,7 +47,7 @@
 kernel_setpgid(hotplug_t)
 kernel_read_system_state(hotplug_t)
 kernel_read_kernel_sysctls(hotplug_t)
-kernel_read_net_sysctls(hotplug_t)
+kernel_rw_net_sysctls(hotplug_t)
 
 files_read_kernel_modules(hotplug_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/init.fc serefpolicy-3.7.19/policy/modules/system/init.fc
--- nsaserefpolicy/policy/modules/system/init.fc	2011-03-17 07:21:20.667851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/init.fc	2011-03-17 07:21:03.068851003 +0000
@@ -44,6 +44,9 @@
 
 /usr/sbin/apachectl	-- 	gen_context(system_u:object_r:initrc_exec_t,s0)
 /usr/sbin/open_init_pty	--	gen_context(system_u:object_r:initrc_exec_t,s0)
+/usr/sbin/startx	-- 	gen_context(system_u:object_r:initrc_exec_t,s0)
+
+/usr/share/system-config-services/system-config-services-mechanism\.py  --	gen_context(system_u:object_r:initrc_exec_t,s0)
 
 #
 # /var
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/init.if serefpolicy-3.7.19/policy/modules/system/init.if
--- nsaserefpolicy/policy/modules/system/init.if	2011-03-17 07:21:20.564851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/init.if	2011-11-09 13:40:43.378798546 +0000
@@ -193,8 +193,10 @@
 	gen_require(`
 		attribute direct_run_init, direct_init, direct_init_entry;
 		type initrc_t;
+		type init_t;
 		role system_r;
 		attribute daemon;
+		attribute initrc_transition_domain;
 	')
 
 	typeattribute $1 daemon;
@@ -205,6 +207,15 @@
 	role system_r types $1;
 
 	domtrans_pattern(initrc_t,$2,$1)
+	allow initrc_t $1:process siginh;
+	allow $1 initrc_transition_domain:fifo_file rw_inherited_fifo_file_perms;
+	allow $1 initrc_transition_domain:fd use;
+
+	tunable_policy(`init_upstart',`
+		# Handle upstart direct transition to a executable
+		domtrans_pattern(init_t,$2,$1)
+		allow init_t $1:process siginh;
+	')
 
 	# daemons started from init will
 	# inherit fds from init for the console
@@ -285,7 +296,7 @@
 		type initrc_t;
 	')
 
-	init_daemon_domain($1,$2)
+#	init_daemon_domain($1,$2)
 
 	ifdef(`enable_mcs',`
 		range_transition initrc_t $2:process $3;
@@ -338,13 +349,19 @@
 	gen_require(`
 		type initrc_t;
 		role system_r;
+		attribute initrc_transition_domain;
+		attribute systemprocess;
 	')
 
+	typeattribute $1 systemprocess;
 	application_domain($1,$2)
 
 	role system_r types $1;
 
 	domtrans_pattern(initrc_t,$2,$1)
+	allow initrc_t $1:process siginh;
+	allow $1 initrc_transition_domain:fifo_file rw_inherited_fifo_file_perms;
+	allow $1 initrc_transition_domain:fd use;
 
 	ifdef(`hide_broken_symptoms',`
 		# RHEL4 systems seem to have a stray
@@ -353,6 +370,45 @@
 			kernel_dontaudit_use_fds($1)
 		')
 	')
+
+	userdom_dontaudit_search_user_home_dirs($1)
+	userdom_dontaudit_rw_stream($1)
+	userdom_dontaudit_write_user_tmp_files($1)
+
+	tunable_policy(`allow_daemons_use_tty',`
+	   term_use_all_ttys($1)
+	   term_use_all_ptys($1)
+	',`
+	   term_dontaudit_use_all_ttys($1)
+	   term_dontaudit_use_all_ptys($1)
+	')
+
+	# these apps are often redirect output to random log files
+	logging_inherit_append_all_logs($1)
+
+	optional_policy(`
+		abrt_stream_connect($1)
+	')
+
+	optional_policy(`
+		cron_rw_pipes($1)
+	')
+
+	optional_policy(`
+		puppet_rw_tmp($1)
+')
+
+	optional_policy(`
+		xserver_dontaudit_append_xdm_home_files($1)
+	')
+
+	optional_policy(`
+		unconfined_dontaudit_rw_pipes($1)
+		unconfined_dontaudit_rw_stream($1)
+		userdom_dontaudit_read_user_tmp_files($1)
+	')
+
+	init_rw_script_stream_sockets($1)
 ')
 
 ########################################
@@ -674,6 +730,8 @@
 
 	init_exec($1)
 
+	corecmd_exec_bin($1)
+
 	tunable_policy(`init_upstart',`
 		gen_require(`
 			type init_t;
@@ -682,6 +740,8 @@
 		# upstart uses a datagram socket instead of initctl pipe
 		allow $1 self:unix_dgram_socket create_socket_perms;
 		allow $1 init_t:unix_dgram_socket sendto;
+		#576913
+		allow $1 init_t:unix_stream_socket connectto;
 	')
 ')
 
@@ -754,18 +814,19 @@
 #
 interface(`init_spec_domtrans_script',`
 	gen_require(`
-		type initrc_t, initrc_exec_t;
+		type initrc_t;
+		attribute init_script_file_type;
 	')
 
 	files_list_etc($1)
-	spec_domtrans_pattern($1, initrc_exec_t, initrc_t)
+	spec_domtrans_pattern($1, init_script_file_type, initrc_t)
 
 	ifdef(`enable_mcs',`
-		range_transition $1 initrc_exec_t:process s0;
+		range_transition $1 init_script_file_type:process s0;
 	')
 
 	ifdef(`enable_mls',`
-		range_transition $1 initrc_exec_t:process s0 - mls_systemhigh;
+		range_transition $1 init_script_file_type:process s0 - mls_systemhigh;
 	')
 ')
 
@@ -781,19 +842,41 @@
 #
 interface(`init_domtrans_script',`
 	gen_require(`
-		type initrc_t, initrc_exec_t;
+		type initrc_t;
+		attribute init_script_file_type;
+		attribute initrc_transition_domain;
 	')
+	typeattribute $1 initrc_transition_domain;
 
 	files_list_etc($1)
-	domtrans_pattern($1, initrc_exec_t, initrc_t)
+	domtrans_pattern($1, init_script_file_type, initrc_t)
 
 	ifdef(`enable_mcs',`
-		range_transition $1 initrc_exec_t:process s0;
+		range_transition $1 init_script_file_type:process s0;
 	')
 
 	ifdef(`enable_mls',`
-		range_transition $1 initrc_exec_t:process s0 - mls_systemhigh;
+		range_transition $1 init_script_file_type:process s0 - mls_systemhigh;
+	')
+')
+
+########################################
+## <summary>
+##	Execute a file in a bin directory
+##	in the initrc_t domain 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_bin_domtrans_spec',`
+	gen_require(`
+		type initrc_t;
 	')
+
+	corecmd_bin_domtrans($1, initrc_t)
 ')
 
 ########################################
@@ -849,8 +932,10 @@
 interface(`init_labeled_script_domtrans',`
 	gen_require(`
 		type initrc_t;
+		attribute initrc_transition_domain;
 	')
 
+	typeattribute $1 initrc_transition_domain;
 	domtrans_pattern($1, $2, initrc_t)
 	files_search_etc($1)
 ')
@@ -1192,6 +1277,24 @@
 	allow $1 initrc_t:process sigchld;
 ')
 
+#######################################
+## <summary>
+##  Connect to init with a unix socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`init_stream_connect',`
+    gen_require(`
+        type init_t;
+    ')
+
+    allow $1 init_t:unix_stream_socket connectto;
+')
+
 ########################################
 ## <summary>
 ##	Send generic signals to init scripts.
@@ -1335,6 +1438,27 @@
 	allow $1 initrc_t:dbus send_msg;
 ')
 
+#######################################
+## <summary>
+##      Send and receive messages from
+##      init over dbus.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`init_dbus_chat',`
+        gen_require(`
+                type init_t;
+                class dbus send_msg;
+        ')
+
+        allow $1 init_t:dbus send_msg;
+        allow init_t $1:dbus send_msg;
+')
+
 ########################################
 ## <summary>
 ##	Send and receive messages from
@@ -1547,6 +1671,24 @@
 	allow $1 initrc_var_run_t:file read_file_perms;
 ')
 
+#######################################
+## <summary>
+##	Do not audit attempts to read utmp.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`init_dontaudit_read_utmp',`
+	gen_require(`
+		type initrc_var_run_t;
+	')
+
+	dontaudit $1 initrc_var_run_t:file read_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to write utmp.
@@ -1637,7 +1779,7 @@
 		type initrc_var_run_t;
 	')
 
-	dontaudit $1 initrc_var_run_t:file { getattr read write append lock };
+	dontaudit $1 initrc_var_run_t:file rw_file_perms;
 ')
 
 ########################################
@@ -1712,3 +1854,110 @@
 	')
 	corenet_udp_recvfrom_labeled($1, daemon)
 ')
+
+########################################
+## <summary>
+##	Transition to system_r when execute an init script
+## </summary>
+## <desc>
+##      <p>
+##	Execute a init script in a specified role
+##      </p>
+##      <p>
+##      No interprocess communication (signals, pipes,
+##      etc.) is provided by this interface since
+##      the domains are not owned by this module.
+##      </p>
+## </desc>
+## <param name="source_role">
+##	<summary>
+##	Role to transition from.
+##	</summary>
+## </param>
+#
+interface(`init_script_role_transition',`
+	gen_require(`
+		attribute init_script_file_type;
+	')
+
+	role_transition $1 init_script_file_type system_r;
+')
+
+########################################
+## <summary>
+##	dontaudit read and write an leaked init scrip file descriptors
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`init_dontaudit_script_leaks',`
+	gen_require(`
+		type initrc_t;
+	')
+
+	dontaudit $1 initrc_t:tcp_socket { read write };
+	dontaudit $1 initrc_t:udp_socket { read write };
+	dontaudit $1 initrc_t:unix_dgram_socket { read write };
+	dontaudit $1 initrc_t:unix_stream_socket { read write };
+	dontaudit $1 initrc_t:shm rw_shm_perms;
+	init_dontaudit_use_script_ptys($1)
+	init_dontaudit_use_script_fds($1)
+')
+
+#######################################
+## <summary>
+##  dontaudit read and write an leaked file descriptors
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`init_dontaudit_leaks',`
+    gen_require(`
+        type init_t;
+    ')
+
+    dontaudit $1 init_t:fifo_file rw_inherited_fifo_file_perms;
+')
+
+#######################################
+## <summary>
+## Manage init script
+## status files.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`init_manage_script_status_files',`
+	gen_require(`
+		type initrc_state_t;
+	')
+
+	manage_files_pattern($1, initrc_state_t, initrc_state_t)
+')
+
+######################################
+## <summary>
+##  Send generic signals to init.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`init_signal',`
+    gen_require(`
+        type init_t;
+    ')
+
+    allow $1 init_t:process signal;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/init.te serefpolicy-3.7.19/policy/modules/system/init.te
--- nsaserefpolicy/policy/modules/system/init.te	2011-03-17 07:21:20.474851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/init.te	2012-08-08 01:32:35.871917392 +0000
@@ -1,5 +1,5 @@
 
-policy_module(init, 1.14.2)
+policy_module(init, 1.15.0)
 
 gen_require(`
 	class passwd rootok;
@@ -17,6 +17,27 @@
 ## </desc>
 gen_tunable(init_upstart, false)
 
+## <desc>
+## <p>
+## Allow all daemons to use tcp wrappers.
+## </p>
+## </desc>
+gen_tunable(allow_daemons_use_tcp_wrapper, false)
+
+## <desc>
+## <p>
+## Allow all daemons the ability to read/write terminals
+## </p>
+## </desc>
+gen_tunable(allow_daemons_use_tty, false)
+
+## <desc>
+## <p>
+## Allow all daemons to write corefiles to /
+## </p>
+## </desc>
+gen_tunable(allow_daemons_dump_core, false)
+
 # used for direct running of init scripts
 # by admin domains
 attribute direct_run_init;
@@ -26,14 +47,16 @@
 attribute init_script_domain_type;
 attribute init_script_file_type;
 attribute init_run_all_scripts_domain;
+attribute initrc_transition_domain;
 
 # Mark process types as daemons
 attribute daemon;
+attribute systemprocess;
 
 #
 # init_t is the domain of the init process.
 #
-type init_t;
+type init_t, initrc_transition_domain;
 type init_exec_t;
 domain_type(init_t)
 domain_entry_file(init_t, init_exec_t)
@@ -64,6 +87,7 @@
 # of the below init_upstart tunable
 # but this has a typeattribute in it
 corecmd_shell_entry_type(initrc_t)
+corecmd_bin_entry_type(initrc_t)
 
 type initrc_devpts_t;
 term_pty(initrc_devpts_t)
@@ -88,7 +112,7 @@
 #
 
 # Use capabilities. old rule:
-allow init_t self:capability ~sys_module;
+allow init_t self:capability ~{ audit_control audit_write sys_module };
 # is ~sys_module really needed? observed: 
 # sys_boot
 # sys_tty_config
@@ -101,7 +125,9 @@
 # Re-exec itself
 can_exec(init_t, init_exec_t)
 
-allow init_t initrc_t:unix_stream_socket connectto;
+allow init_t initrc_t:unix_stream_socket { connectto rw_stream_socket_perms };
+allow initrc_t init_t:unix_stream_socket { connectto rw_stream_socket_perms };
+allow initrc_t init_t:fifo_file rw_fifo_file_perms;
 
 # For /var/run/shutdown.pid.
 allow init_t init_var_run_t:file manage_file_perms;
@@ -121,6 +147,8 @@
 corecmd_exec_bin(init_t)
 
 dev_read_sysfs(init_t)
+dev_read_urand(init_t)
+dev_rw_generic_chr_files(init_t)
 
 domain_getpgid_all_domains(init_t)
 domain_kill_all_domains(init_t)
@@ -145,11 +173,15 @@
 # cjp: this may be related to /dev/log
 fs_write_ramfs_sockets(init_t)
 
+mcs_file_read_all(init_t)
+mcs_file_write_all(init_t)
 mcs_process_set_categories(init_t)
 mcs_killall(init_t)
 
 mls_file_read_all_levels(init_t)
 mls_file_write_all_levels(init_t)
+mls_socket_read_all_levels(init_t)
+mls_socket_write_all_levels(init_t)
 mls_process_write_down(init_t)
 mls_fd_use_all_levels(init_t)
 
@@ -169,6 +201,8 @@
 
 miscfiles_read_localization(init_t)
 
+allow init_t self:process setsched;
+
 ifdef(`distro_gentoo',`
 	allow init_t self:process { getcap setcap };
 ')
@@ -192,14 +226,31 @@
 ')
 
 optional_policy(`
+	consolekit_manage_log(init_t)
+')
+
+optional_policy(`
+	dbus_connect_system_bus(init_t)
 	dbus_system_bus_client(init_t)
 ')
 
 optional_policy(`
+	# /var/run/dovecot/login/ssl-parameters.dat is a hard link to
+	# /var/lib/dovecot/ssl-parameters.dat and init tries to clean up
+	# the directory. But we do not want to allow this.
+	# The master process of dovecot will manage this file.
+	dovecot_dontaudit_unlink_lib_files(initrc_t)
+')
+
+optional_policy(`
 	nscd_socket_use(init_t)
 ')
 
 optional_policy(`
+    postfix_list_spool(init_t)
+')
+
+optional_policy(`
 	sssd_stream_connect(init_t)
 ')
 
@@ -213,7 +264,7 @@
 #
 
 allow initrc_t self:process { getpgid setsched setpgid setrlimit getsched };
-allow initrc_t self:capability ~{ sys_admin sys_module };
+allow initrc_t self:capability ~{ audit_control audit_write sys_admin sys_module };
 dontaudit initrc_t self:capability sys_module; # sysctl is triggering this
 allow initrc_t self:passwd rootok;
 allow initrc_t self:key manage_key_perms;
@@ -242,6 +293,7 @@
 
 allow initrc_t initrc_var_run_t:file manage_file_perms;
 files_pid_filetrans(initrc_t, initrc_var_run_t, file)
+files_manage_generic_pids_symlinks(initrc_t)
 
 can_exec(initrc_t, initrc_tmp_t)
 manage_files_pattern(initrc_t, initrc_tmp_t, initrc_tmp_t)
@@ -259,13 +311,22 @@
 kernel_clear_ring_buffer(initrc_t)
 kernel_get_sysvipc_info(initrc_t)
 kernel_read_all_sysctls(initrc_t)
+kernel_request_load_module(initrc_t)
 kernel_rw_all_sysctls(initrc_t)
 # for lsof which is used by alsa shutdown:
 kernel_dontaudit_getattr_message_if(initrc_t)
+kernel_stream_connect(initrc_t)
+files_read_kernel_modules(initrc_t)
+files_read_config_files(initrc_t)
+files_read_var_lib_symlinks(initrc_t)
+files_setattr_pid_dirs(initrc_t)
 
 files_read_kernel_symbol_table(initrc_t)
+files_exec_etc_files(initrc_t)
+files_manage_etc_symlinks(initrc_t)
 
-corecmd_exec_all_executables(initrc_t)
+fs_manage_tmpfs_dirs(initrc_t)
+fs_tmpfs_filetrans(initrc_t, initrc_state_t, file)
 
 corenet_all_recvfrom_unlabeled(initrc_t)
 corenet_all_recvfrom_netlabel(initrc_t)
@@ -280,6 +341,7 @@
 
 dev_read_rand(initrc_t)
 dev_read_urand(initrc_t)
+dev_dontaudit_read_kmsg(initrc_t)
 dev_write_kmsg(initrc_t)
 dev_write_rand(initrc_t)
 dev_write_urand(initrc_t)
@@ -299,6 +361,7 @@
 dev_delete_generic_symlinks(initrc_t)
 dev_getattr_all_blk_files(initrc_t)
 dev_getattr_all_chr_files(initrc_t)
+dev_rw_xserver_misc(initrc_t)
 
 corecmd_exec_all_executables(initrc_t)
 
@@ -318,6 +381,9 @@
 domain_dontaudit_getattr_all_tcp_sockets(initrc_t)
 domain_dontaudit_getattr_all_dgram_sockets(initrc_t)
 domain_dontaudit_getattr_all_pipes(initrc_t)
+domain_dontaudit_getattr_all_stream_sockets(initrc_t)
+domain_dontaudit_getattr_all_netlink_sockets(initrc_t)
+domain_dontaudit_getattr_all_netlink_kobject_uevent_sockets(initrc_t)
 
 files_getattr_all_dirs(initrc_t)
 files_getattr_all_files(initrc_t)
@@ -325,8 +391,10 @@
 files_getattr_all_pipes(initrc_t)
 files_getattr_all_sockets(initrc_t)
 files_purge_tmp(initrc_t)
-files_delete_all_locks(initrc_t)
+files_manage_all_locks(initrc_t)
+files_manage_boot_files(initrc_t)
 files_read_all_pids(initrc_t)
+files_delete_root_file(initrc_t)
 files_delete_all_pids(initrc_t)
 files_delete_all_pid_dirs(initrc_t)
 files_read_etc_files(initrc_t)
@@ -342,6 +410,8 @@
 files_mounton_isid_type_dirs(initrc_t)
 files_list_default(initrc_t)
 files_mounton_default(initrc_t)
+files_manage_mnt_dirs(initrc_t)
+files_manage_mnt_files(initrc_t)
 
 fs_list_inotifyfs(initrc_t)
 fs_register_binary_executable_type(initrc_t)
@@ -352,11 +422,15 @@
 fs_unmount_all_fs(initrc_t)
 fs_remount_all_fs(initrc_t)
 fs_getattr_all_fs(initrc_t)
+fs_search_all(initrc_t)
+fs_getattr_nfsd_files(initrc_t)
 
 # initrc_t needs to do a pidof which requires ptrace
 mcs_ptrace_all(initrc_t)
 mcs_killall(initrc_t)
 mcs_process_set_categories(initrc_t)
+mcs_file_read_all(initrc_t)
+mcs_file_write_all(initrc_t)
 
 mls_file_read_all_levels(initrc_t)
 mls_file_write_all_levels(initrc_t)
@@ -364,6 +438,7 @@
 mls_process_write_down(initrc_t)
 mls_rangetrans_source(initrc_t)
 mls_fd_share_all_levels(initrc_t)
+mls_socket_write_to_clearance(initrc_t)
 
 selinux_get_enforce_mode(initrc_t)
 
@@ -375,6 +450,7 @@
 term_reset_tty_labels(initrc_t)
 
 auth_rw_login_records(initrc_t)
+auth_manage_faillog(initrc_t)
 auth_setattr_login_records(initrc_t)
 auth_rw_lastlog(initrc_t)
 auth_read_pam_pid(initrc_t)
@@ -395,15 +471,16 @@
 
 miscfiles_read_localization(initrc_t)
 # slapd needs to read cert files from its initscript
-miscfiles_read_certs(initrc_t)
+miscfiles_manage_cert_files(initrc_t)
 
 modutils_read_module_config(initrc_t)
 modutils_domtrans_insmod(initrc_t)
 
 seutil_read_config(initrc_t)
 
+userdom_read_admin_home_files(initrc_t)
 userdom_read_user_home_content_files(initrc_t)
-# Allow access to the sysadm TTYs. Note that this will give access to the
+# Allow access to the sysadm TTYs. Note that this will give access to the 
 # TTYs to any process in the initrc_t domain. Therefore, daemons and such
 # started from init should be placed in their own domain.
 userdom_use_user_terminals(initrc_t)
@@ -437,6 +514,10 @@
 	dev_create_generic_dirs(initrc_t)
 	dev_delete_generic_dirs(initrc_t)
 
+
+	# allow bootmisc to create /var/lock/.keep.
+	files_manage_generic_locks(initrc_t)
+
 	# openrc uses tmpfs for its state data
 	fs_tmpfs_filetrans(initrc_t, initrc_state_t, { dir file fifo_file lnk_file })
 
@@ -471,7 +552,7 @@
 
 	# Red Hat systems seem to have a stray
 	# fd open from the initrd
-	kernel_dontaudit_use_fds(initrc_t)
+	kernel_use_fds(initrc_t)
 	files_dontaudit_read_root_files(initrc_t)
 
 	# These seem to be from the initrd
@@ -495,6 +576,12 @@
 	fs_read_tmpfs_symlinks(initrc_t)
 	fs_rw_tmpfs_chr_files(initrc_t)
 
+	# /sbin/cgclear
+	fs_delete_cgroup_dirs(initrc_t)
+	fs_list_cgroup_dirs(initrc_t)
+	# w for /bin/cgcexec and rw for /sbin/cgclear 
+	fs_rw_cgroup_files(initrc_t)
+
 	storage_manage_fixed_disk(initrc_t)
 	storage_dev_filetrans_fixed_disk(initrc_t)
 	storage_getattr_removable_dev(initrc_t)
@@ -517,6 +604,23 @@
 	optional_policy(`
 		bind_manage_config_dirs(initrc_t)
 		bind_write_config(initrc_t)
+		bind_setattr_zone_dirs(initrc_t)
+	')
+
+	optional_policy(`
+		cgroup_stream_connect(initrc_t)
+	')
+
+	optional_policy(`
+		gnome_manage_gconf_config(initrc_t)
+	')
+
+	optional_policy(`
+		ldap_read_db_files(initrc_t)
+	')
+
+	optional_policy(`
+		pulseaudio_stream_connect(initrc_t)
 	')
 
 	optional_policy(`
@@ -528,6 +632,8 @@
 	optional_policy(`
 		sysnet_rw_dhcp_config(initrc_t)
 		sysnet_manage_config(initrc_t)
+		sysnet_manage_dhcpc_state(initrc_t)
+		sysnet_relabelfrom_dhcpc_state(initrc_t)
 	')
 
 	optional_policy(`
@@ -542,18 +648,57 @@
 	')
 ')
 
+domain_dontaudit_use_interactive_fds(daemon)
+
+userdom_dontaudit_list_admin_dir(daemon)
+userdom_dontaudit_search_user_tmp(daemon)
+
+tunable_policy(`allow_daemons_use_tcp_wrapper',`
+    corenet_tcp_connect_auth_port(daemon)
+')
+
+tunable_policy(`allow_daemons_use_tty',`
+	term_use_unallocated_ttys(daemon)
+	term_use_generic_ptys(daemon)
+	term_use_all_ttys(daemon)
+	term_use_all_ptys(daemon)
+',`
+	term_dontaudit_use_unallocated_ttys(daemon)
+	term_dontaudit_use_generic_ptys(daemon)
+	term_dontaudit_use_all_ttys(daemon)
+	term_dontaudit_use_all_ptys(daemon)
+ ')
+ 
+# system-config-services causes avc messages that should be dontaudited
+tunable_policy(`allow_daemons_dump_core',`
+	files_manage_root_files(daemon)
+')
+
+optional_policy(`
+	unconfined_dontaudit_rw_pipes(daemon)
+	unconfined_dontaudit_rw_stream(daemon)
+	userdom_dontaudit_read_user_tmp_files(daemon)
+	userdom_dontaudit_write_user_tmp_files(daemon)
+')
+ 
 optional_policy(`
 	amavis_search_lib(initrc_t)
 	amavis_setattr_pid_files(initrc_t)
 ')
 
 optional_policy(`
+	cfengine_append_inherited_log(daemon)
+')
+
+optional_policy(`
 	dev_rw_apm_bios(initrc_t)
 ')
 
 optional_policy(`
 	apache_read_config(initrc_t)
 	apache_list_modules(initrc_t)
+	# webmin seems to cause this.
+	apache_search_sys_content(daemon)
 ')
 
 optional_policy(`
@@ -578,6 +723,11 @@
 ')
 
 optional_policy(`
+	chronyd_append_keys(initrc_t)
+	chronyd_read_keys(initrc_t)
+')
+
+optional_policy(`
 	dev_getattr_printer_dev(initrc_t)
 
 	cups_read_log(initrc_t)
@@ -587,6 +737,10 @@
 ')
 
 optional_policy(`
+	cron_read_pipes(initrc_t)
+')
+
+optional_policy(`
 	daemontools_manage_svc(initrc_t)
 ')
 
@@ -594,6 +748,7 @@
 	dbus_connect_system_bus(initrc_t)
 	dbus_system_bus_client(initrc_t)
 	dbus_read_config(initrc_t)
+	dbus_manage_lib_files(initrc_t)
 
 	optional_policy(`
 		consolekit_dbus_chat(initrc_t)
@@ -617,6 +772,11 @@
 ')
 
 optional_policy(`
+	dirsrvadmin_read_config(initrc_t)
+	dirsrv_manage_var_run(initrc_t)
+')
+
+optional_policy(`
 	ftp_read_config(initrc_t)
 ')
 
@@ -695,7 +855,13 @@
 ')
 
 optional_policy(`
+	milter_delete_dkim_pid_files(initrc_t)
+	milter_setattr_all_dirs(initrc_t)
+')
+
+optional_policy(`
 	mta_read_config(initrc_t)
+	mta_write_config(initrc_t)
 	mta_dontaudit_read_spool_symlinks(initrc_t)
 ')
 
@@ -718,6 +884,10 @@
 ')
 
 optional_policy(`
+	plymouthd_stream_connect(initrc_t)
+')
+
+optional_policy(`
 	postgresql_manage_db(initrc_t)
 	postgresql_read_config(initrc_t)
 ')
@@ -739,6 +909,10 @@
 ')
 
 optional_policy(`
+	ricci_manage_lib_files(initrc_t)
+')
+
+optional_policy(`
 	fs_write_ramfs_sockets(initrc_t)
 	fs_search_ramfs(initrc_t)
 
@@ -760,8 +934,6 @@
 	# bash tries ioctl for some reason
 	files_dontaudit_ioctl_all_pids(initrc_t)
 
-	# why is this needed:
-	rpm_manage_db(initrc_t)
 ')
 
 optional_policy(`
@@ -770,14 +942,25 @@
 ')
 
 optional_policy(`
+	sanlock_manage_pid_files(initrc_t)
+')
+
+optional_policy(`
+	# shorewall-init script run /var/lib/shorewall/firewall
+	shorewall_domtrans_lib(initrc_t)
+')
+
+optional_policy(`
 	squid_read_config(initrc_t)
 	squid_manage_logs(initrc_t)
 ')
 
+ifdef(`enabled_mls',`
 optional_policy(`
 	# allow init scripts to su
 	su_restricted_domain_template(initrc, initrc_t, system_r)
 ')
+')
 
 optional_policy(`
 	ssh_dontaudit_read_server_keys(initrc_t)
@@ -790,6 +973,7 @@
 
 optional_policy(`
 	udev_rw_db(initrc_t)
+	udev_delete_db(initrc_t)
 	udev_manage_pid_files(initrc_t)
 ')
 
@@ -798,11 +982,30 @@
 ')
 
 optional_policy(`
-	virt_manage_svirt_cache(initrc_t)
+	virt_manage_cache(initrc_t)
+	virt_manage_lib_files(initrc_t)
+')
+
+# Cron jobs used to start and stop services
+optional_policy(`
+	cron_rw_pipes(daemon)
+	cron_rw_inherited_user_spool_files(daemon)
+')
+
+optional_policy(`
+	puppet_rw_tmp(daemon)
 ')
 
 optional_policy(`
 	unconfined_domain(initrc_t)
+	domain_role_change_exemption(initrc_t)
+
+	# bug 685061
+	mcs_file_read_all(initrc_t)
+    mcs_file_write_all(initrc_t)
+    mcs_socket_write_all_levels(initrc_t)
+    mcs_killall(initrc_t)
+    mcs_ptrace_all(initrc_t)
 
 	ifdef(`distro_redhat',`
 		# system-config-services causes avc messages that should be dontaudited
@@ -812,6 +1015,25 @@
 	optional_policy(`
 		mono_domtrans(initrc_t)
 	')
+
+	# Allow SELinux aware applications to request rpm_script_t execution
+	rpm_transition_script(initrc_t)
+
+	
+	optional_policy(`
+		gen_require(`
+			type unconfined_execmem_t, execmem_exec_t;		
+		')
+		init_system_domain(unconfined_execmem_t, execmem_exec_t)
+	')
+
+	optional_policy(`
+		rtkit_scheduled(initrc_t)
+	')
+')
+
+optional_policy(`
+	rpm_delete_db(initrc_t)
 ')
 
 optional_policy(`
@@ -837,3 +1059,51 @@
 optional_policy(`
 	zebra_read_config(initrc_t)
 ')
+
+# if I start an initrc script from an random director I can generate this avc
+# bug: #585704
+# files_dontaudit_search_all_dirs(daemon)
+
+userdom_inherit_append_user_home_content_files(daemon)
+userdom_inherit_append_user_tmp_files(daemon)
+userdom_dontaudit_rw_stream(daemon)
+
+logging_append_all_logs(daemon)
+
+optional_policy(`
+	# sudo service restart causes this 
+	unconfined_signull(daemon)
+')
+
+
+optional_policy(`
+	xserver_dontaudit_append_xdm_home_files(daemon)
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_dontaudit_rw_nfs_files(daemon)
+	')
+	tunable_policy(`use_samba_home_dirs',`
+		fs_dontaudit_rw_cifs_files(daemon)
+	')
+')
+
+init_rw_script_stream_sockets(daemon)
+
+optional_policy(`
+	abrt_stream_connect(daemon)
+')
+
+optional_policy(`
+	fail2ban_read_lib_files(daemon)
+')
+
+optional_policy(`
+    firstboot_dontaudit_leaks(daemon)
+')
+
+optional_policy(`
+    abrt_stream_connect(systemprocess)
+')
+
+optional_policy(`
+	cfengine_append_inherited_log(systemprocess)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/ipsec.fc serefpolicy-3.7.19/policy/modules/system/ipsec.fc
--- nsaserefpolicy/policy/modules/system/ipsec.fc	2011-03-17 07:21:20.474851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/ipsec.fc	2011-03-17 07:21:02.807851003 +0000
@@ -25,6 +25,7 @@
 /usr/libexec/ipsec/klipsdebug	--	gen_context(system_u:object_r:ipsec_exec_t,s0)
 /usr/libexec/ipsec/pluto	--	gen_context(system_u:object_r:ipsec_exec_t,s0)
 /usr/libexec/ipsec/spi		--	gen_context(system_u:object_r:ipsec_exec_t,s0)
+/usr/libexec/nm-openswan-service	-- 	gen_context(system_u:object_r:ipsec_mgmt_exec_t,s0)
 
 /usr/local/lib(64)?/ipsec/eroute --	gen_context(system_u:object_r:ipsec_exec_t,s0)
 /usr/local/lib(64)?/ipsec/klipsdebug -- gen_context(system_u:object_r:ipsec_exec_t,s0)
@@ -37,6 +38,8 @@
 
 /var/log/pluto\.log		--	gen_context(system_u:object_r:ipsec_log_t,s0)
 
+/var/lock/subsys/ipsec  --	gen_context(system_u:object_r:ipsec_mgmt_lock_t,s0)
+
 /var/racoon(/.*)?			gen_context(system_u:object_r:ipsec_var_run_t,s0)
 
 /var/run/pluto(/.*)?			gen_context(system_u:object_r:ipsec_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/ipsec.if serefpolicy-3.7.19/policy/modules/system/ipsec.if
--- nsaserefpolicy/policy/modules/system/ipsec.if	2011-03-17 07:21:20.582851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/ipsec.if	2011-03-17 07:21:02.964851002 +0000
@@ -18,6 +18,24 @@
 	domtrans_pattern($1, ipsec_exec_t, ipsec_t)
 ')
 
+#######################################
+## <summary>
+##  Execute ipsec in the ipsec_mgmt domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`ipsec_domtrans_mgmt',`
+	gen_require(`
+        type ipsec_mgmt_t, ipsec_mgmt_exec_t;
+    ')
+
+    domtrans_pattern($1, ipsec_mgmt_exec_t, ipsec_mgmt_t)
+')
+
 ########################################
 ## <summary>
 ##	Connect to IPSEC using a unix domain stream socket.
@@ -129,6 +147,7 @@
 
 	allow $1 ipsec_spd_t:association polmatch;
 	allow $1 self:association sendto;
+	allow $1 self:peer recv;
 ')
 
 ########################################
@@ -273,3 +292,78 @@
 	ipsec_domtrans_setkey($1)
 	role $2 types setkey_t;
 ')
+
+#######################################
+## <summary>
+##  Send the kill signal to ipsec-mgmt
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`ipsec_mgmt_kill',`
+    gen_require(`
+        type ipsec_mgmt_t;
+    ')
+
+    allow $1 ipsec_mgmt_t:process sigkill;
+')
+
+########################################
+## <summary>
+##	Send a generic signal to ipsec-mgmt
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ipsec_mgmt_signal',`
+	gen_require(`
+		type ipsec_mgmt_t;
+	')
+
+	allow $1 ipsec_mgmt_t:process signal;
+')
+
+########################################
+## <summary>
+##  Send a generic signull to ipsec-mgmt.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`ipsec_mgmt_signull',`
+    gen_require(`
+        type ipsec_mgmt_t;
+    ')
+
+    allow $1 ipsec_mgmt_t:process signull;
+')
+
+#######################################
+## <summary>
+##      Send and receive messages from
+##      ipsec-mgmt over dbus.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`ipsec_mgmt_dbus_chat',`
+        gen_require(`
+                type ipsec_mgmt_t;
+                class dbus send_msg;
+        ')
+
+        allow $1 ipsec_mgmt_t:dbus send_msg;
+        allow ipsec_mgmt_t $1:dbus send_msg;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/ipsec.te serefpolicy-3.7.19/policy/modules/system/ipsec.te
--- nsaserefpolicy/policy/modules/system/ipsec.te	2011-03-17 07:21:20.586851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/ipsec.te	2012-03-02 10:01:16.131865431 +0000
@@ -73,13 +73,16 @@
 #
 
 allow ipsec_t self:capability { net_admin dac_override dac_read_search setpcap sys_nice };
-dontaudit ipsec_t self:capability sys_tty_config;
+dontaudit ipsec_t self:capability { sys_ptrace sys_tty_config };
 allow ipsec_t self:process { getcap setcap getsched signal setsched };
 allow ipsec_t self:tcp_socket create_stream_socket_perms;
+allow ipsec_t self:netlink_selinux_socket { bind create read };
+allow ipsec_t self:netlink_selinux_socket create_socket_perms;
 allow ipsec_t self:udp_socket create_socket_perms;
 allow ipsec_t self:key_socket create_socket_perms;
 allow ipsec_t self:fifo_file read_fifo_file_perms;
 allow ipsec_t self:netlink_xfrm_socket { create_netlink_socket_perms nlmsg_write };
+allow ipsec_t self:unix_stream_socket { read write };
 
 allow ipsec_t ipsec_initrc_exec_t:file read_file_perms;
 
@@ -108,7 +111,8 @@
 corecmd_shell_domtrans(ipsec_t, ipsec_mgmt_t)
 allow ipsec_mgmt_t ipsec_t:fd use;
 allow ipsec_mgmt_t ipsec_t:fifo_file rw_fifo_file_perms;
-dontaudit ipsec_mgmt_t ipsec_t:unix_stream_socket { read write };
+# 587669
+allow ipsec_mgmt_t ipsec_t:unix_stream_socket { read write };
 allow ipsec_mgmt_t ipsec_t:process sigchld;
 
 kernel_read_kernel_sysctls(ipsec_t)
@@ -140,6 +144,8 @@
 corenet_udp_bind_ipsecnat_port(ipsec_t)
 corenet_sendrecv_generic_server_packets(ipsec_t)
 corenet_sendrecv_isakmp_server_packets(ipsec_t)
+corenet_tcp_connect_http_port(ipsec_t)
+corenet_tcp_connect_ldap_port(ipsec_t)
 
 dev_read_sysfs(ipsec_t)
 dev_read_rand(ipsec_t)
@@ -150,6 +156,7 @@
 files_list_tmp(ipsec_t)
 files_read_etc_files(ipsec_t)
 files_read_usr_files(ipsec_t)
+files_dontaudit_search_home(ipsec_t)
 
 fs_getattr_all_fs(ipsec_t)
 fs_search_auto_mountpoints(ipsec_t)
@@ -157,6 +164,8 @@
 term_use_console(ipsec_t)
 term_dontaudit_use_all_ttys(ipsec_t)
 
+selinux_compute_access_vector(ipsec_t)
+
 auth_use_nsswitch(ipsec_t)
 
 init_use_fds(ipsec_t)
@@ -167,6 +176,8 @@
 miscfiles_read_localization(ipsec_t)
 
 sysnet_domtrans_ifconfig(ipsec_t)
+sysnet_manage_config(ipsec_t)
+sysnet_etc_filetrans_config(ipsec_t)
 
 userdom_dontaudit_use_unpriv_user_fds(ipsec_t)
 userdom_dontaudit_search_user_home_dirs(ipsec_t)
@@ -186,13 +197,18 @@
 
 allow ipsec_mgmt_t self:capability { dac_override dac_read_search net_admin setpcap sys_nice };
 dontaudit ipsec_mgmt_t self:capability sys_tty_config;
-allow ipsec_mgmt_t self:process { getsched ptrace setrlimit signal };
+# don't audit using of lsof
+dontaudit ipsec_mgmt_t self:capability sys_ptrace;
+allow ipsec_mgmt_t self:process { getsched ptrace setrlimit setsched signal };
 allow ipsec_mgmt_t self:unix_stream_socket create_stream_socket_perms;
 allow ipsec_mgmt_t self:tcp_socket create_stream_socket_perms;
 allow ipsec_mgmt_t self:udp_socket create_socket_perms;
 allow ipsec_mgmt_t self:key_socket create_socket_perms;
 allow ipsec_mgmt_t self:fifo_file rw_fifo_file_perms;
 
+allow ipsec_mgmt_t ipsec_t:process { rlimitinh  sigchld };
+allow ipsec_t ipsec_mgmt_t:process { rlimitinh  sigchld };
+
 allow ipsec_mgmt_t ipsec_mgmt_lock_t:file manage_file_perms;
 files_lock_filetrans(ipsec_mgmt_t, ipsec_mgmt_lock_t, file)
 
@@ -225,7 +241,6 @@
 
 manage_files_pattern(ipsec_mgmt_t, ipsec_key_file_t, ipsec_key_file_t)
 manage_lnk_files_pattern(ipsec_mgmt_t, ipsec_key_file_t, ipsec_key_file_t)
-files_etc_filetrans(ipsec_mgmt_t, ipsec_key_file_t, file)
 
 # whack needs to connect to pluto
 stream_connect_pattern(ipsec_mgmt_t, ipsec_var_run_t, ipsec_var_run_t, ipsec_t)
@@ -258,7 +273,13 @@
 
 domain_use_interactive_fds(ipsec_mgmt_t)
 # denials when ps tries to search /proc. Do not audit these denials.
-domain_dontaudit_list_all_domains_state(ipsec_mgmt_t)
+domain_dontaudit_read_all_domains_state(ipsec_mgmt_t)
+
+domain_dontaudit_getattr_all_sockets(ipsec_mgmt_t)
+domain_dontaudit_getattr_all_pipes(ipsec_mgmt_t)
+
+dev_dontaudit_getattr_all_blk_files(ipsec_mgmt_t)
+dev_dontaudit_getattr_all_chr_files(ipsec_mgmt_t)
 # suppress audit messages about unnecessary socket access
 # cjp: this seems excessive
 domain_dontaudit_rw_all_udp_sockets(ipsec_mgmt_t)
@@ -270,19 +291,25 @@
 files_read_usr_files(ipsec_mgmt_t)
 files_dontaudit_getattr_default_dirs(ipsec_mgmt_t)
 files_dontaudit_getattr_default_files(ipsec_mgmt_t)
+files_dontaudit_getattr_all_files(ipsec_mgmt_t)
+files_dontaudit_getattr_all_sockets(ipsec_mgmt_t)
 files_list_tmp(ipsec_mgmt_t)
 
 fs_getattr_xattr_fs(ipsec_mgmt_t)
 fs_list_tmpfs(ipsec_mgmt_t)
 
 term_use_console(ipsec_mgmt_t)
-term_dontaudit_getattr_unallocated_ttys(ipsec_mgmt_t)
+term_use_all_terms(ipsec_mgmt_t)
+
+auth_dontaudit_read_login_records(ipsec_mgmt_t)
 
+init_read_utmp(ipsec_mgmt_t)
 init_use_script_ptys(ipsec_mgmt_t)
 init_exec_script_files(ipsec_mgmt_t)
 init_use_fds(ipsec_mgmt_t)
 init_labeled_script_domtrans(ipsec_mgmt_t, ipsec_initrc_exec_t)
 
+logging_read_all_logs(ipsec_mgmt_t)
 logging_send_syslog_msg(ipsec_mgmt_t)
 
 miscfiles_read_localization(ipsec_mgmt_t)
@@ -291,15 +318,38 @@
 
 seutil_dontaudit_search_config(ipsec_mgmt_t)
 
+sysnet_manage_config(ipsec_mgmt_t)
 sysnet_domtrans_ifconfig(ipsec_mgmt_t)
+sysnet_etc_filetrans_config(ipsec_mgmt_t)
 
 userdom_use_user_terminals(ipsec_mgmt_t)
 
 optional_policy(`
+	dbus_system_bus_client(ipsec_mgmt_t)
+	dbus_connect_system_bus(ipsec_mgmt_t)
+
+	 optional_policy(`
+                networkmanager_dbus_chat(ipsec_mgmt_t)
+        ')
+')
+
+optional_policy(`
 	consoletype_exec(ipsec_mgmt_t)
 ')
 
 optional_policy(`
+	hostname_exec(ipsec_mgmt_t)
+')
+
+optional_policy(`
+	iptables_domtrans(ipsec_mgmt_t)
+')
+
+optional_policy(`
+	networkmanager_dbus_chat(ipsec_mgmt_t)
+')
+
+optional_policy(`
 	nscd_socket_use(ipsec_mgmt_t)
 ')
 
@@ -386,6 +436,8 @@
 
 sysnet_exec_ifconfig(racoon_t)
 
+auth_use_pam(racoon_t)
+
 auth_can_read_shadow_passwords(racoon_t)
 tunable_policy(`racoon_read_shadow',`
 	auth_tunable_read_shadow(racoon_t)
@@ -412,6 +464,7 @@
 files_read_etc_files(setkey_t)
 
 init_dontaudit_use_fds(setkey_t)
+init_read_script_tmp_files(setkey_t)
 
 # allow setkey to set the context for ipsec SAs and policy.
 ipsec_setcontext_default_spd(setkey_t)
@@ -423,3 +476,4 @@
 seutil_read_config(setkey_t)
 
 userdom_use_user_terminals(setkey_t)
+userdom_read_user_tmp_files(setkey_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/iptables.fc serefpolicy-3.7.19/policy/modules/system/iptables.fc
--- nsaserefpolicy/policy/modules/system/iptables.fc	2011-03-17 07:21:20.642851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/iptables.fc	2011-03-17 07:21:03.049851003 +0000
@@ -1,13 +1,19 @@
 /etc/rc\.d/init\.d/ip6?tables	--	gen_context(system_u:object_r:iptables_initrc_exec_t,s0)
-/etc/sysconfig/ip6?tables.*	--	gen_context(system_u:object_r:iptables_conf_t,s0)
-/etc/sysconfig/system-config-firewall.* -- gen_context(system_u:object_r:iptables_conf_t,s0)
 
 /sbin/ipchains.*		--	gen_context(system_u:object_r:iptables_exec_t,s0)
 /sbin/ip6?tables		--	gen_context(system_u:object_r:iptables_exec_t,s0)
 /sbin/ip6?tables-restore	--	gen_context(system_u:object_r:iptables_exec_t,s0)
 /sbin/ip6?tables-multi		--	gen_context(system_u:object_r:iptables_exec_t,s0)
 
+/sbin/ebtables         --  gen_context(system_u:object_r:iptables_exec_t,s0)
+/sbin/ebtables-restore --  gen_context(system_u:object_r:iptables_exec_t,s0)
+
+/sbin/ipvsadm           --  gen_context(system_u:object_r:iptables_exec_t,s0)
+/sbin/ipvsadm-restore   --  gen_context(system_u:object_r:iptables_exec_t,s0)
+/sbin/ipvsadm-save      --  gen_context(system_u:object_r:iptables_exec_t,s0)
+
 /usr/sbin/ipchains.*		--	gen_context(system_u:object_r:iptables_exec_t,s0)
 /usr/sbin/iptables		--	gen_context(system_u:object_r:iptables_exec_t,s0)
 /usr/sbin/iptables-multi 	--	gen_context(system_u:object_r:iptables_exec_t,s0)
 /usr/sbin/iptables-restore	--	gen_context(system_u:object_r:iptables_exec_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/iptables.if serefpolicy-3.7.19/policy/modules/system/iptables.if
--- nsaserefpolicy/policy/modules/system/iptables.if	2011-03-17 07:21:20.616851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/iptables.if	2011-03-17 07:21:02.978851001 +0000
@@ -17,6 +17,10 @@
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, iptables_exec_t, iptables_t)
+
+	ifdef(`hide_broken_symptoms', `
+	        dontaudit iptables_t $1:socket_class_set { read write };
+	')
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/iptables.te serefpolicy-3.7.19/policy/modules/system/iptables.te
--- nsaserefpolicy/policy/modules/system/iptables.te	2011-03-17 07:21:20.527851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/iptables.te	2011-10-18 11:55:01.516041981 +0000
@@ -14,9 +14,6 @@
 type iptables_initrc_exec_t;
 init_script_file(iptables_initrc_exec_t)
 
-type iptables_conf_t;
-files_config_file(iptables_conf_t)
-
 type iptables_tmp_t;
 files_tmp_file(iptables_tmp_t)
 
@@ -30,12 +27,14 @@
 
 allow iptables_t self:capability { dac_read_search dac_override net_admin net_raw };
 dontaudit iptables_t self:capability sys_tty_config;
-allow iptables_t self:fifo_file rw_fifo_file_perms;
+allow iptables_t self:fifo_file rw_file_perms;
 allow iptables_t self:process { sigchld sigkill sigstop signull signal };
+# needed by ipvsadm
+allow iptables_t self:netlink_socket create_socket_perms;
 allow iptables_t self:rawip_socket create_socket_perms;
 
-manage_files_pattern(iptables_t, iptables_conf_t, iptables_conf_t)
-files_etc_filetrans(iptables_t, iptables_conf_t, file)
+files_manage_system_conf_files(iptables_t)
+files_etc_filetrans_system_conf(iptables_t)
 
 manage_files_pattern(iptables_t, iptables_var_run_t, iptables_var_run_t)
 files_pid_filetrans(iptables_t, iptables_var_run_t, file)
@@ -53,10 +52,17 @@
 kernel_read_modprobe_sysctls(iptables_t)
 kernel_use_fds(iptables_t)
 
+# needed by ipvsadm
+corecmd_exec_bin(iptables_t)
+corecmd_exec_shell(iptables_t)
+
 corenet_relabelto_all_packets(iptables_t)
 corenet_dontaudit_rw_tun_tap_dev(iptables_t)
 
 dev_read_sysfs(iptables_t)
+ifdef(`hide_broken_symptoms',`
+	dev_dontaudit_write_mtrr(iptables_t)
+')
 
 fs_getattr_xattr_fs(iptables_t)
 fs_search_auto_mountpoints(iptables_t)
@@ -65,11 +71,13 @@
 mls_file_read_all_levels(iptables_t)
 
 term_dontaudit_use_console(iptables_t)
+term_use_all_terms(iptables_t)
 
 domain_use_interactive_fds(iptables_t)
 
 files_read_etc_files(iptables_t)
-files_read_etc_runtime_files(iptables_t)
+files_rw_etc_runtime_files(iptables_t)
+files_read_usr_files(iptables_t)
 
 auth_use_nsswitch(iptables_t)
 
@@ -78,6 +86,7 @@
 # to allow rules to be saved on reboot:
 init_rw_script_tmp_files(iptables_t)
 init_rw_script_stream_sockets(iptables_t)
+init_dontaudit_script_leaks(iptables_t)
 
 logging_send_syslog_msg(iptables_t)
 
@@ -91,6 +100,7 @@
 
 optional_policy(`
 	fail2ban_append_log(iptables_t)
+	fail2ban_dontaudit_leaks(iptables_t)
 ')
 
 optional_policy(`
@@ -113,6 +123,7 @@
 
 optional_policy(`
 	psad_rw_tmp_files(iptables_t)
+	psad_write_log(iptables_t)
 ')
 
 optional_policy(`
@@ -124,6 +135,7 @@
 ')
 
 optional_policy(`
+    shorewall_read_tmp_files(iptables_t)
 	shorewall_rw_lib_files(iptables_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/iscsi.fc serefpolicy-3.7.19/policy/modules/system/iscsi.fc
--- nsaserefpolicy/policy/modules/system/iscsi.fc	2011-03-17 07:21:20.450851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/iscsi.fc	2011-12-14 13:16:50.905056521 +0000
@@ -1,5 +1,6 @@
 /sbin/iscsid		--	gen_context(system_u:object_r:iscsid_exec_t,s0)
 /sbin/brcm_iscsiuio	--	gen_context(system_u:object_r:iscsid_exec_t,s0)
+/sbin/iscsiuio      --  gen_context(system_u:object_r:iscsid_exec_t,s0)
 
 /var/lib/iscsi(/.*)?		gen_context(system_u:object_r:iscsi_var_lib_t,s0)
 /var/lock/iscsi(/.*)?		gen_context(system_u:object_r:iscsi_lock_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/iscsi.if serefpolicy-3.7.19/policy/modules/system/iscsi.if
--- nsaserefpolicy/policy/modules/system/iscsi.if	2011-03-17 07:21:20.535851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/iscsi.if	2011-03-17 07:21:02.931851003 +0000
@@ -56,3 +56,21 @@
 	allow $1 iscsi_var_lib_t:dir list_dir_perms;
 	files_search_var_lib($1)
 ')
+
+########################################
+## <summary>
+##	Manage iscsid sempaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`iscsi_manage_semaphores',`
+	gen_require(`
+		type iscsid_t;
+	')
+
+	allow $1 iscsid_t:sem create_sem_perms;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/iscsi.te serefpolicy-3.7.19/policy/modules/system/iscsi.te
--- nsaserefpolicy/policy/modules/system/iscsi.te	2011-03-17 07:21:20.484851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/iscsi.te	2012-02-15 16:33:47.949132148 +0000
@@ -32,7 +32,9 @@
 #
 
 allow iscsid_t self:capability { dac_override ipc_lock net_admin net_raw sys_admin sys_nice sys_resource };
+dontaudit iscsid_t self:capability { sys_ptrace };
 allow iscsid_t self:process { setrlimit setsched signal };
+
 allow iscsid_t self:fifo_file rw_fifo_file_perms;
 allow iscsid_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow iscsid_t self:unix_dgram_socket create_socket_perms;
@@ -65,6 +67,7 @@
 
 kernel_read_network_state(iscsid_t)
 kernel_read_system_state(iscsid_t)
+kernel_setsched(iscsid_t)
 
 corenet_all_recvfrom_unlabeled(iscsid_t)
 corenet_all_recvfrom_netlabel(iscsid_t)
@@ -74,12 +77,16 @@
 corenet_tcp_connect_http_port(iscsid_t)
 corenet_tcp_connect_iscsi_port(iscsid_t)
 corenet_tcp_connect_isns_port(iscsid_t)
+corenet_tcp_connect_winshadow_port(iscsid_t)
 
 dev_rw_sysfs(iscsid_t)
 dev_rw_userio_dev(iscsid_t)
+dev_read_raw_memory(iscsid_t)
+dev_write_raw_memory(iscsid_t)
 
 domain_use_interactive_fds(iscsid_t)
 domain_dontaudit_read_all_domains_state(iscsid_t)
+domain_dontaudit_ptrace_all_domains(iscsid_t)
 
 files_read_etc_files(iscsid_t)
 
@@ -92,5 +99,5 @@
 miscfiles_read_localization(iscsid_t)
 
 optional_policy(`
-	tgtd_rw_semaphores(iscsid_t)
+	tgtd_manage_semaphores(iscsid_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/kdump.te serefpolicy-3.7.19/policy/modules/system/kdump.te
--- nsaserefpolicy/policy/modules/system/kdump.te	2011-03-17 07:21:20.517851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/kdump.te	2011-03-17 07:21:02.879851002 +0000
@@ -28,8 +28,10 @@
 files_read_etc_runtime_files(kdump_t)
 files_read_kernel_img(kdump_t)
 
+kernel_read_debugfs(kdump_t) 
 kernel_read_system_state(kdump_t)
 kernel_read_core_if(kdump_t)
+kernel_request_load_module(kdump_t)
 
 dev_read_framebuffer(kdump_t)
 dev_read_sysfs(kdump_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/libraries.fc serefpolicy-3.7.19/policy/modules/system/libraries.fc
--- nsaserefpolicy/policy/modules/system/libraries.fc	2011-03-17 07:21:20.575851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/libraries.fc	2012-08-08 09:16:17.782280510 +0000
@@ -60,7 +60,7 @@
 #
 # /opt
 #
-/opt/.*\.so					gen_context(system_u:object_r:lib_t,s0)
+/opt/.*\.so(\.[^/]*)*				gen_context(system_u:object_r:lib_t,s0)
 /opt/(.*/)?lib(/.*)?				gen_context(system_u:object_r:lib_t,s0)
 /opt/(.*/)?lib64(/.*)?				gen_context(system_u:object_r:lib_t,s0)
 /opt/(.*/)?java/.+\.jar			--	gen_context(system_u:object_r:lib_t,s0)
@@ -127,17 +127,23 @@
 /usr/lib64/altivec/libavcodec\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/cedega/.+\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/vlc/video_chroma/libi420_rgb_mmx_plugin\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/vlc/codec/librealvideo_plugin\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/vlc/plugins/mmx/libi420_rgb_mmx_plugin\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/vlc/plugins/codec//mmx/libi420_rgb_mmx_plugin\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/vlc/codec/librealvideo_plugin\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/vlc/plugins/codec/librealvideo_plugin\.so --  gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/vlc/codec/libdmo_plugin\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/vlc/codec/plugins/libdmo_plugin\.so    --  gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/vlc/plugins/codec/libdmo_plugin\.so	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/vlc/codec/librealaudio_plugin\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib64/vlc/codec/librealvideo_plugin\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib64/vlc/codec/libdmo_plugin\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/vlc/plugins/codec/librealaudio_plugin\.so --   gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/vlc/codec/plugins/librealaudio_plugin\.so --   gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/vlc/.*\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib64/vlc/codec/librealaudio_plugin\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/libtfmessbsp\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/xorg/libGL\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/X11R6/lib/libGL\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/libGL\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib(64)?/catalyst/libGL\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/catalyst/.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/libADM5.*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/libatiadlxx\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/win32/.*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
@@ -151,6 +157,7 @@
 /usr/lib(64)?/fglrx/.*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/libjs\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/sse2/libx264\.so(\.[^/]*)* 	-- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libzita-convolver\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?(/.*)?/libnvidia.+\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?(/.*)?/nvidia_drv.*\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/nero/plug-ins/libMP3\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
@@ -198,8 +205,6 @@
 /usr/lib/libFLAC\.so.*			--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/libfglrx_gamma\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/mozilla/plugins/nppdf\.so 	-- 	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/maxima/[^/]+/binary-gcl/maxima	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib64/maxima/[^/]+/binary-gcl/maxima --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/mozilla/plugins/libvlcplugin\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/nx/libXcomp\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/nx/libjpeg\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
@@ -208,6 +213,7 @@
 
 /usr/lib(64)?/libstdc\+\+\.so\.2\.7\.2\.8 --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/libg\+\+\.so\.2\.7\.2\.8	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libgpac\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/libglide3\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/libglide3-v[0-9]*\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib(64)?/helix/plugins/[^/]*\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
@@ -302,13 +308,8 @@
 /usr/lib/acroread/(.*/)?lib/[^/]*\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/acroread/.+\.api		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/acroread/(.*/)?ADMPlugin\.apl	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program(/.*)?\.so			gen_context(system_u:object_r:lib_t,s0)
-/usr/lib64/.*/program(/.*)?\.so			gen_context(system_u:object_r:lib_t,s0)
-/usr/lib(64)?/pgsql/.*\.so.*		--	gen_context(system_u:object_r:lib_t,s0)
-/usr/lib(64)?/pgsql/test/regress/.*\.so.* --	gen_context(system_u:object_r:lib_t,s0)
-
-/usr/share/hplip/prnt/plugins(/.*)?		gen_context(system_u:object_r:lib_t,s0)
-/usr/share/squeezeboxserver/CPAN/arch/.+\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program(/.*)?\.so		gen_context(system_u:object_r:lib_t,s0)
+/usr/lib64/.*/program(/.*)?\.so		gen_context(system_u:object_r:lib_t,s0)
 ') dnl end distro_redhat
 
 #
@@ -319,14 +320,158 @@
 /var/ftp/lib(64)?(/.*)?				gen_context(system_u:object_r:lib_t,s0)
 /var/ftp/lib(64)?/ld[^/]*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:ld_so_t,s0)
 
-/var/lib/spamassassin/compiled/.*\.so.*	--	gen_context(system_u:object_r:lib_t,s0)
-
 /var/mailman/pythonlib(/.*)?/.+\.so(\..*)? --	gen_context(system_u:object_r:lib_t,s0)
 
+/var/named/chroot/.*/lib(64)?(/.*)?	--	gen_context(system_u:object_r:lib_t,s0)
+
+/usr/lib(64)?/pgsql/.*\.so.*		--	gen_context(system_u:object_r:lib_t,s0)
+/usr/lib(64)?/pgsql/test/regress/.*\.so.*		--	gen_context(system_u:object_r:lib_t,s0)
+/var/lib/spamassassin/compiled/.*\.so.*    --     gen_context(system_u:object_r:lib_t,s0)
+
 ifdef(`distro_suse',`
 /var/lib/samba/bin/.+\.so(\.[^/]*)*	-l	gen_context(system_u:object_r:lib_t,s0)
 ')
 
+/usr/share/hplip/prnt/plugins(/.*)?		gen_context(system_u:object_r:lib_t,s0)
+/usr/share/squeezeboxserver/CPAN/arch/.+\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
 /var/spool/postfix/lib(64)?(/.*)? 		gen_context(system_u:object_r:lib_t,s0)
 /var/spool/postfix/usr(/.*)?			gen_context(system_u:object_r:lib_t,s0)
 /var/spool/postfix/lib(64)?/ld.*\.so.*	--	gen_context(system_u:object_r:ld_so_t,s0)
+
+/usr/lib(64)?/libmyth[^/]+\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/jvm/java(.*/)bin(/.*)?/.*\.so 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib64/jvm/java(.*/)bin(/.*)?/.*\.so 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/oracle/.*/lib/libnnz10\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/altera9.1/quartus/linux/libccl_err\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/novell/groupwise/client/lib/libgwapijni\.so\.1	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/sse2/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/i686/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/google-earth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/googleearth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/google-earth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google-earth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/google-earth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google/chrome/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/nspluginwrapper/np.*\.so	-- gen_context(system_u:object_r:lib_t,s0)
+
+/usr/lib/oracle/.*/lib/libnnz.*\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/oracle(64)?/.*/lib/libclntsh\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/(.*/)?oracle/(.*/)?libnnz.*\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libnnz11.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libxvidcore\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+
+/opt/matlab.*\.so(\.[^/]*)*		gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/matlab.*\.so(\.[^/]*)*		gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/local/matlab.*\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/matlab.*\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/local/Zend/lib/ZendExtensionManager\.so	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libcncpmslld328\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/ICAClient/.*\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/midori/.*\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/libav.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/xine/plugins/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/yafaray/libDarkSky.so 	   --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/libpostproc\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libpostproc.*\.so.*	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/libswscale\.so.*		 --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libADM.*\.so.*			 --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/gstreamer-.*/[^/]*\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+HOME_DIR/\.gstreamer-.*/plugins/.*\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/libx264\.so(\.[^/]*)* 	-- gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/libmp3lame\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libmpeg2\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+ifdef(`fixed',`
+/usr/lib(64)?/libavfilter\.so(\..*)? -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libavdevice\.so.*	 --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libavformat.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libavcodec.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libavutil.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libdv\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libGLU\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libgsm\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libImlib2\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libjackserver\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/X11R6/lib/libOSMesa.*\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libOSMesa.*\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libSDL-.*\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/xulrunner-[^/]*/libgtkembedmoz\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/xulrunner-[^/]*/libxul\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+# Flash plugin, Macromedia
+HOME_DIR/\.mozilla(/.*)?/plugins/libflashplayer\.so.* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/.*/libflashplayer\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/(.*/)?libflashplayer\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/php/modules/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/xorg/modules/dri/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/X11R6/lib/modules/dri/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/dri/.+\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/httpd/modules/libphp5\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+')
+/opt/VBoxGuestAdditions.*/lib/VBox.*\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/nmm/liba52\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/lampp/lib/libct\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/lampp/lib/.*\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/VirtualBox(/.*)?/VBox.*\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/chromium-browser/.*\.so 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/zend/lib/apache2/libphp5\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/python.*/site-packages/pymedia/muxer\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/games/darwinia/lib/libSDL.*\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/ocp-.*/mixclip\.so		     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/octagaplayer/libapplication\.so		     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/AutoScan/usr/lib/libvte\.so.*			     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/bin/bsnes		     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/firefox/plugins/libractrl\.so	     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/libGLcore\.so.*	     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/libkmplayercommon\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/mythtv/filters/.*\.so.*			--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/Unify/SQLBase/libgptsblmsui11\.so.*	     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/real/RealPlayer/plugins(/.*)?	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/real/RealPlayer/codecs(/.*)?	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib(64)?/vdpau/libvdpau_nvidia\.so.*  --	gen_context(system_u:object_r:textrel_shlib_t,s0)	
+/usr/lib(64)?/sane/libsane-smfp\.so.*			--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/libGTL.*\.so.* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/local/lexmark/lxk08/lib(/.*)? --   gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/vlc/plugins/video_filter/libvideo_filter_wrapper_plugin\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/nsr/(.*/)?.*\.so		-- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(64)?/qutim/libplugman\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/lgtonmc/bin/.*\.so(\.[0-9])?  	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google/picasa/.*\.dll	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google/picasa/.*\.yti	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/libraries.if serefpolicy-3.7.19/policy/modules/system/libraries.if
--- nsaserefpolicy/policy/modules/system/libraries.if	2011-03-17 07:21:20.586851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/libraries.if	2011-05-26 15:46:58.157196996 +0000
@@ -19,6 +19,26 @@
 	domtrans_pattern($1, ldconfig_exec_t, ldconfig_t)
 ')
 
+######################################
+## <summary>
+##  Execute ldconfig in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`libs_exec_ldconfig',`
+    gen_require(`
+        type ldconfig_exec_t;
+    ')
+
+    corecmd_search_bin($1)
+    can_exec($1, ldconfig_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute ldconfig in the ldconfig domain.
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/libraries.te serefpolicy-3.7.19/policy/modules/system/libraries.te
--- nsaserefpolicy/policy/modules/system/libraries.te	2011-03-17 07:21:20.668851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/libraries.te	2011-03-17 07:21:03.075851000 +0000
@@ -62,7 +62,7 @@
 
 manage_files_pattern(ldconfig_t, ldconfig_cache_t, ldconfig_cache_t)
 
-allow ldconfig_t ld_so_cache_t:file manage_file_perms;
+manage_files_pattern(ldconfig_t, ld_so_cache_t, ld_so_cache_t)
 files_etc_filetrans(ldconfig_t, ld_so_cache_t, file)
 
 manage_dirs_pattern(ldconfig_t, ldconfig_tmp_t, ldconfig_tmp_t)
@@ -80,6 +80,7 @@
 
 domain_use_interactive_fds(ldconfig_t)
 
+files_search_home(ldconfig_t)
 files_search_var_lib(ldconfig_t)
 files_read_etc_files(ldconfig_t)
 files_read_usr_files(ldconfig_t)
@@ -95,6 +96,7 @@
 
 logging_send_syslog_msg(ldconfig_t)
 
+term_use_console(ldconfig_t)
 userdom_use_user_terminals(ldconfig_t)
 userdom_use_all_users_fds(ldconfig_t)
 
@@ -104,6 +106,10 @@
 	')
 ')
 
+userdom_manage_user_home_content_files(ldconfig_t)
+userdom_manage_user_tmp_files(ldconfig_t)
+userdom_manage_user_tmp_symlinks(ldconfig_t)
+
 ifdef(`hide_broken_symptoms',`
 	ifdef(`distro_gentoo',`
 		# leaked fds from portage
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/locallogin.fc serefpolicy-3.7.19/policy/modules/system/locallogin.fc
--- nsaserefpolicy/policy/modules/system/locallogin.fc	2011-03-17 07:21:20.541851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/locallogin.fc	2011-10-17 08:42:22.059042051 +0000
@@ -1,2 +1,6 @@
+HOME_DIR/\.hushlogin   --      gen_context(system_u:object_r:local_login_home_t,s0)
+/root/\.hushlogin   --      gen_context(system_u:object_r:local_login_home_t,s0)
 
 /sbin/sulogin		--	gen_context(system_u:object_r:sulogin_exec_t,s0)
+/sbin/sushell  		-- gen_context(system_u:object_r:sulogin_exec_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/locallogin.if serefpolicy-3.7.19/policy/modules/system/locallogin.if
--- nsaserefpolicy/policy/modules/system/locallogin.if	2011-03-17 07:21:20.474851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/locallogin.if	2011-10-20 15:48:56.085904001 +0000
@@ -129,3 +129,21 @@
 
 	domtrans_pattern($1, sulogin_exec_t, sulogin_t)
 ')
+
+######################################
+## <summary>
+##  Allow domain to gettatr local login home content
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`locallogin_getattr_home_content',`
+    gen_require(`
+        type local_login_home_t;
+    ')
+
+    getattr_files_pattern($1, local_login_home_t, local_login_home_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/locallogin.te serefpolicy-3.7.19/policy/modules/system/locallogin.te
--- nsaserefpolicy/policy/modules/system/locallogin.te	2011-03-17 07:21:20.482851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/locallogin.te	2011-10-12 18:54:46.348160001 +0000
@@ -18,6 +18,9 @@
 files_tmp_file(local_login_tmp_t)
 files_poly_parent(local_login_tmp_t)
 
+type local_login_home_t;
+userdom_user_home_content(local_login_home_t)
+
 type sulogin_t;
 type sulogin_exec_t;
 domain_obj_id_change_exemption(sulogin_t)
@@ -33,9 +36,8 @@
 # Local login local policy
 #
 
-allow local_login_t self:capability { dac_override chown fowner fsetid kill setgid setuid sys_nice sys_resource sys_tty_config };
-allow local_login_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
-allow local_login_t self:process { setrlimit setexec };
+allow local_login_t self:capability { dac_override chown fowner fsetid kill setgid setuid sys_admin sys_nice sys_ptrace sys_resource sys_tty_config };
+allow local_login_t self:process ~{ ptrace setcurrent setfscreate execmem execstack execheap };
 allow local_login_t self:fd use;
 allow local_login_t self:fifo_file rw_fifo_file_perms;
 allow local_login_t self:sock_file read_sock_file_perms;
@@ -52,6 +54,8 @@
 allow local_login_t local_login_lock_t:file manage_file_perms;
 files_lock_filetrans(local_login_t, local_login_lock_t, file)
 
+allow local_login_t local_login_home_t:file read_file_perms;
+
 allow local_login_t local_login_tmp_t:dir manage_dir_perms;
 allow local_login_t local_login_tmp_t:file manage_file_perms;
 files_tmp_filetrans(local_login_t, local_login_tmp_t, { file dir })
@@ -74,6 +78,8 @@
 dev_setattr_power_mgmt_dev(local_login_t)
 dev_getattr_sound_dev(local_login_t)
 dev_setattr_sound_dev(local_login_t)
+dev_rw_generic_usb_dev(local_login_t)
+dev_read_video_dev(local_login_t)
 dev_dontaudit_getattr_apm_bios_dev(local_login_t)
 dev_dontaudit_setattr_apm_bios_dev(local_login_t)
 dev_dontaudit_read_framebuffer(local_login_t)
@@ -152,6 +158,12 @@
 	fs_read_cifs_symlinks(local_login_t)
 ')
 
+tunable_policy(`allow_console_login',`
+     term_use_console(local_login_t)
+     term_relabel_console(local_login_t)
+     term_setattr_console(local_login_t)
+')
+
 optional_policy(`
 	alsa_domtrans(local_login_t)
 ')
@@ -181,7 +193,7 @@
 ')
 
 optional_policy(`
-	unconfined_domain(local_login_t)
+	unconfined_shell_domtrans(local_login_t)
 ')
 
 optional_policy(`
@@ -198,9 +210,10 @@
 # Sulogin local policy
 #
 
+allow sulogin_t self:capability dac_override;
 allow sulogin_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow sulogin_t self:fd use;
-allow sulogin_t self:fifo_file rw_file_perms;
+allow sulogin_t self:fifo_file rw_fifo_file_perms;
 allow sulogin_t self:unix_dgram_socket create_socket_perms;
 allow sulogin_t self:unix_stream_socket create_stream_socket_perms;
 allow sulogin_t self:unix_dgram_socket sendto;
@@ -210,6 +223,7 @@
 allow sulogin_t self:msgq create_msgq_perms;
 allow sulogin_t self:msg { send receive };
 
+kernel_read_crypto_sysctls(sulogin_t)
 kernel_read_system_state(sulogin_t)
 
 fs_search_auto_mountpoints(sulogin_t)
@@ -218,8 +232,10 @@
 files_read_etc_files(sulogin_t)
 # because file systems are not mounted:
 files_dontaudit_search_isid_type_dirs(sulogin_t)
+files_search_pids(sulogin_t)
 
 auth_read_shadow(sulogin_t)
+auth_use_nsswitch(sulogin_t)
 
 init_getpgid_script(sulogin_t)
 
@@ -233,14 +249,24 @@
 userdom_search_user_home_dirs(sulogin_t)
 userdom_use_user_ptys(sulogin_t)
 
-sysadm_shell_domtrans(sulogin_t)
+term_use_console(sulogin_t)
+term_use_unallocated_ttys(sulogin_t)
+term_use_generic_ptys(sulogin_t)
+
+ifdef(`enable_mls',`
+	sysadm_shell_domtrans(sulogin_t)
+',`
+	optional_policy(`
+		unconfined_shell_domtrans(sulogin_t)
+	')
+')
 
 # suse and debian do not use pam with sulogin...
 ifdef(`distro_suse', `define(`sulogin_no_pam')')
 ifdef(`distro_debian', `define(`sulogin_no_pam')')
 
+allow sulogin_t self:capability sys_tty_config;
 ifdef(`sulogin_no_pam', `
-	allow sulogin_t self:capability sys_tty_config;
 	init_getpgid(sulogin_t)
 ', `
 	allow sulogin_t self:process setexec;
@@ -251,11 +277,3 @@
 	selinux_compute_relabel_context(sulogin_t)
 	selinux_compute_user_contexts(sulogin_t)
 ')
-
-optional_policy(`
-	nis_use_ypbind(sulogin_t)
-')
-
-optional_policy(`
-	nscd_socket_use(sulogin_t)
-')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/logging.fc serefpolicy-3.7.19/policy/modules/system/logging.fc
--- nsaserefpolicy/policy/modules/system/logging.fc	2011-03-17 07:21:20.554851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/logging.fc	2012-04-03 14:33:55.933845834 +0000
@@ -1,4 +1,4 @@
-/dev/log		-s	gen_context(system_u:object_r:devlog_t,s0)
+/dev/log		-s	gen_context(system_u:object_r:devlog_t,mls_systemhigh)
 
 /etc/rsyslog.conf		gen_context(system_u:object_r:syslog_conf_t,s0)
 /etc/syslog.conf		gen_context(system_u:object_r:syslog_conf_t,s0)
@@ -17,6 +17,10 @@
 /sbin/syslogd		--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 /sbin/syslog-ng		--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 
+/opt/zimbra/log(/.*)?		gen_context(system_u:object_r:var_log_t,s0)
+
+/usr/local/centreon/log(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+
 /usr/sbin/klogd		--	gen_context(system_u:object_r:klogd_exec_t,s0)
 /usr/sbin/metalog	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 /usr/sbin/rklogd	--	gen_context(system_u:object_r:klogd_exec_t,s0)
@@ -24,6 +28,7 @@
 /usr/sbin/syslog-ng	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 /usr/sbin/syslogd	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 
+/var/lib/rsyslog(/.*)?    gen_context(system_u:object_r:syslogd_var_lib_t,s0)
 /var/lib/syslog-ng(/.*)? 	gen_context(system_u:object_r:syslogd_var_lib_t,s0)
 /var/lib/syslog-ng.persist --	gen_context(system_u:object_r:syslogd_var_lib_t,s0)
 
@@ -33,17 +38,18 @@
 
 /var/axfrdns/log/main(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
 /var/dnscache/log/main(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
-/var/cfengine/outputs(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+#/var/cfengine/outputs(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
 
 /var/log		-d	gen_context(system_u:object_r:var_log_t,s0-mls_systemhigh)
 /var/log/.*			gen_context(system_u:object_r:var_log_t,s0)
+/var/log/boot\.log             gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/messages[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/secure[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/cron[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/maillog[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/spooler[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/audit(/.*)?		gen_context(system_u:object_r:auditd_log_t,mls_systemhigh)
-/var/log/syslog-ng(/.*)? 	gen_context(system_u:object_r:syslogd_var_run_t,s0)
+/var/log/syslog-ng(/.*)?       gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
 
 ifndef(`distro_gentoo',`
 /var/log/audit\.log	--	gen_context(system_u:object_r:auditd_log_t,mls_systemhigh)
@@ -54,18 +60,25 @@
 /var/named/chroot/dev/log -s	gen_context(system_u:object_r:devlog_t,s0)
 ')
 
-/var/run/audit_events	-s	gen_context(system_u:object_r:auditd_var_run_t,s0)
-/var/run/audispd_events	-s	gen_context(system_u:object_r:audisp_var_run_t,s0)
-/var/run/auditd\.pid	--	gen_context(system_u:object_r:auditd_var_run_t,s0)
-/var/run/auditd_sock	-s	gen_context(system_u:object_r:auditd_var_run_t,s0)
+/var/run/audit_events	-s	gen_context(system_u:object_r:auditd_var_run_t,mls_systemhigh)
+/var/run/audispd_events	-s	gen_context(system_u:object_r:audisp_var_run_t,mls_systemhigh)
+/var/run/auditd\.pid	--	gen_context(system_u:object_r:auditd_var_run_t,mls_systemhigh)
+/var/run/auditd_sock	-s	gen_context(system_u:object_r:auditd_var_run_t,mls_systemhigh)
 /var/run/klogd\.pid	--	gen_context(system_u:object_r:klogd_var_run_t,s0)
 /var/run/log		-s	gen_context(system_u:object_r:devlog_t,s0)
 /var/run/metalog\.pid	--	gen_context(system_u:object_r:syslogd_var_run_t,s0)
-/var/run/syslogd\.pid	--	gen_context(system_u:object_r:syslogd_var_run_t,s0)
+/var/run/syslogd\.pid  --      gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
+/var/run/syslog-ng.ctl	--	gen_context(system_u:object_r:syslogd_var_run_t,s0)
+/var/run/syslog-ng(/.*)?	gen_context(system_u:object_r:syslogd_var_run_t,s0)
 
 /var/spool/bacula/log(/.*)? 	gen_context(system_u:object_r:var_log_t,s0)
 /var/spool/postfix/pid	-d	gen_context(system_u:object_r:var_run_t,s0)
-/var/spool/plymouth/boot.log	gen_context(system_u:object_r:var_log_t,s0)
+/var/spool/plymouth/boot\.log  gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/spool/rsyslog(/.*)? 	gen_context(system_u:object_r:var_log_t,s0)
+/var/spool/audit(/.*)?         gen_context(system_u:object_r:audit_spool_t,mls_systemhigh)
+
+/var/stockmaniac/templates_cache(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
 
 /var/tinydns/log/main(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+
+/var/webmin(/.*)?		gen_context(system_u:object_r:var_log_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/logging.if serefpolicy-3.7.19/policy/modules/system/logging.if
--- nsaserefpolicy/policy/modules/system/logging.if	2011-03-17 07:21:20.667851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/logging.if	2011-03-17 07:21:03.065851002 +0000
@@ -545,6 +545,25 @@
 
 ########################################
 ## <summary>
+##	Connect to the syslog control unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`logging_stream_connect_syslog',`
+	gen_require(`
+		type syslogd_t, syslogd_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, syslogd_var_run_t, syslogd_var_run_t, syslogd_t)
+')
+
+########################################
+## <summary>
 ##	Read the auditd configuration files.
 ## </summary>
 ## <param name="domain">
@@ -715,7 +734,25 @@
 	')
 
 	files_search_var($1)
-	append_files_pattern($1, var_log_t, logfile)
+	append_files_pattern($1, logfile, logfile)
+')
+
+########################################
+## <summary>
+##	Append to all log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`logging_inherit_append_all_logs',`
+	gen_require(`
+		attribute logfile;
+	')
+
+	allow $1 logfile:file { getattr append };
 ')
 
 ########################################
@@ -739,6 +776,25 @@
 	read_files_pattern($1, logfile, logfile)
 ')
 
+#######################################
+## <summary>
+##  dontaudit Read all log files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`logging_dontaudit_read_all_logs',`
+    gen_require(`
+        attribute logfile;
+    ')
+
+	dontaudit $1 logfile:file read_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Execute all log files in the caller domain.
@@ -798,7 +854,7 @@
 
 	files_search_var($1)
 	manage_files_pattern($1, logfile, logfile)
-	read_lnk_files_pattern($1, logfile, logfile)
+	manage_lnk_files_pattern($1, logfile, logfile)
 ')
 
 ########################################
@@ -996,6 +1052,8 @@
 	manage_files_pattern($1, syslogd_var_run_t, syslogd_var_run_t)
 
 	logging_manage_all_logs($1)
+	allow $1 logfile:dir relabel_dir_perms;
+	allow $1 logfile:file relabel_file_perms;
 
 	init_labeled_script_domtrans($1, syslogd_initrc_exec_t)
 	domain_system_change_exemption($1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/logging.te serefpolicy-3.7.19/policy/modules/system/logging.te
--- nsaserefpolicy/policy/modules/system/logging.te	2011-03-17 07:21:20.613851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/logging.te	2012-03-22 15:29:50.548939838 +0000
@@ -6,6 +6,13 @@
 # Declarations
 #
 
+## <desc>
+## <p>
+## Allow syslogd daemon to send mail
+## </p>
+## </desc>
+gen_tunable(logging_syslogd_can_sendmail, false)
+
 attribute logfile;
 
 type auditctl_t;
@@ -20,6 +27,11 @@
 files_security_file(auditd_log_t)
 files_security_mountpoint(auditd_log_t)
 
+type audit_spool_t;
+files_type(audit_spool_t)
+files_security_file(audit_spool_t)
+files_security_mountpoint(audit_spool_t)
+
 type auditd_t;
 type auditd_exec_t;
 init_daemon_domain(auditd_t, auditd_exec_t)
@@ -61,6 +73,7 @@
 type syslogd_t;
 type syslogd_exec_t;
 init_daemon_domain(syslogd_t, syslogd_exec_t)
+mls_trusted_object(syslogd_t)
 
 type syslogd_initrc_exec_t;
 init_script_file(syslogd_initrc_exec_t)
@@ -89,6 +102,8 @@
 #
 
 allow auditctl_t self:capability { fsetid dac_read_search dac_override };
+allow auditctl_t self:process getcap;
+
 allow auditctl_t self:netlink_audit_socket nlmsg_readpriv;
 
 read_files_pattern(auditctl_t, auditd_etc_t, auditd_etc_t)
@@ -162,6 +177,8 @@
 corenet_tcp_bind_generic_node(auditd_t)
 corenet_tcp_bind_audit_port(auditd_t)
 corenet_sendrecv_audit_server_packets(auditd_t)
+# needed by CC
+corenet_tcp_sendrecv_loopback_if(auditd_t)
 
 # Needs to be able to run dispatcher.  see /etc/audit/auditd.conf
 # Probably want a transition, and a new auditd_helper app
@@ -180,10 +197,13 @@
 logging_domtrans_dispatcher(auditd_t)
 logging_signal_dispatcher(auditd_t)
 
+auth_use_nsswitch(auditd_t)
+
 miscfiles_read_localization(auditd_t)
 
 mls_file_read_all_levels(auditd_t)
 mls_file_write_all_levels(auditd_t) # Need to be able to write to /var/run/ directory
+mls_socket_write_all_levels(auditd_t)
 
 seutil_dontaudit_read_config(auditd_t)
 
@@ -235,7 +255,12 @@
 files_read_etc_files(audisp_t)
 files_read_etc_runtime_files(audisp_t)
 
+mls_file_read_all_levels(audisp_t)
 mls_file_write_all_levels(audisp_t)
+mls_socket_write_all_levels(audisp_t)
+mls_dbus_send_all_levels(audisp_t)
+
+auth_use_nsswitch(audisp_t)
 
 logging_send_syslog_msg(audisp_t)
 
@@ -245,6 +270,10 @@
 
 optional_policy(`
 	dbus_system_bus_client(audisp_t)
+
+	optional_policy(`
+		setroubleshoot_dbus_chat(audisp_t)
+	')
 ')
 
 ########################################
@@ -252,8 +281,15 @@
 # Audit remote logger local policy
 #
 
+allow audisp_remote_t self:capability { setuid setpcap };
+allow audisp_remote_t self:process { getcap setcap };
+
 allow audisp_remote_t self:tcp_socket create_socket_perms;
 
+manage_dirs_pattern(audisp_remote_t, audit_spool_t, audit_spool_t)
+manage_files_pattern(audisp_remote_t, audit_spool_t, audit_spool_t)
+files_spool_filetrans(audisp_remote_t, audit_spool_t, { dir file })
+
 corenet_all_recvfrom_unlabeled(audisp_remote_t)
 corenet_all_recvfrom_netlabel(audisp_remote_t)
 corenet_tcp_sendrecv_generic_if(audisp_remote_t)
@@ -266,6 +302,18 @@
 
 files_read_etc_files(audisp_remote_t)
 
+mls_socket_write_all_levels(audisp_remote_t)
+
+auth_use_nsswitch(audisp_remote_t)
+auth_append_login_records(audisp_remote_t)
+auth_dontaudit_write_login_records(audisp_remote_t)   
+
+init_read_utmp(audisp_remote_t)
+init_dontaudit_write_utmp(audisp_remote_t)
+init_telinit(audisp_remote_t)
+
+logging_search_logs(audisp_remote_t)
+logging_send_audit_msgs(audisp_remote_t)
 logging_send_syslog_msg(audisp_remote_t)
 
 miscfiles_read_localization(audisp_remote_t)
@@ -339,10 +387,10 @@
 # chown fsetid for syslog-ng
 # sys_admin for the integrated klog of syslog-ng and metalog
 # cjp: why net_admin!
-allow syslogd_t self:capability { dac_override sys_resource sys_tty_config net_admin sys_admin chown fsetid };
+allow syslogd_t self:capability { dac_override sys_resource sys_tty_config net_admin sys_admin sys_nice chown fsetid ipc_lock };
 dontaudit syslogd_t self:capability sys_tty_config;
 # setpgid for metalog
-allow syslogd_t self:process { signal_perms setpgid };
+allow syslogd_t self:process { getsched setsched setrlimit signal_perms setpgid };
 # receive messages to be logged
 allow syslogd_t self:unix_dgram_socket create_socket_perms;
 allow syslogd_t self:unix_stream_socket create_stream_socket_perms;
@@ -356,6 +404,7 @@
 # Create and bind to /dev/log or /var/run/log.
 allow syslogd_t devlog_t:sock_file manage_sock_file_perms;
 files_pid_filetrans(syslogd_t, devlog_t, sock_file)
+files_search_spool(syslogd_t)
 
 # create/append log files.
 manage_files_pattern(syslogd_t, var_log_t, var_log_t)
@@ -369,11 +418,14 @@
 manage_files_pattern(syslogd_t, syslogd_tmp_t, syslogd_tmp_t)
 files_tmp_filetrans(syslogd_t, syslogd_tmp_t, { dir file })
 
+manage_sock_files_pattern(syslogd_t, syslogd_var_lib_t, syslogd_var_lib_t)
 manage_files_pattern(syslogd_t, syslogd_var_lib_t, syslogd_var_lib_t)
 files_search_var_lib(syslogd_t)
 
-allow syslogd_t syslogd_var_run_t:file manage_file_perms;
-files_pid_filetrans(syslogd_t, syslogd_var_run_t, file)
+manage_dirs_pattern(syslogd_t, syslogd_var_run_t, syslogd_var_run_t)
+manage_files_pattern(syslogd_t, syslogd_var_run_t, syslogd_var_run_t)
+manage_sock_files_pattern(syslogd_t, syslogd_var_run_t, syslogd_var_run_t)
+files_pid_filetrans(syslogd_t, syslogd_var_run_t, { dir file })
 
 # manage pid file
 manage_files_pattern(syslogd_t, syslogd_var_run_t, syslogd_var_run_t)
@@ -413,8 +465,15 @@
 corenet_sendrecv_postgresql_client_packets(syslogd_t)
 corenet_sendrecv_mysqld_client_packets(syslogd_t)
 
+tunable_policy(`logging_syslogd_can_sendmail',`
+	# support for ommail module to send logs via mail
+	corenet_tcp_connect_smtp_port(syslogd_t)
+')
+     
+
 dev_filetrans(syslogd_t, devlog_t, sock_file)
 dev_read_sysfs(syslogd_t)
+dev_read_rand(syslogd_t)
 
 domain_use_interactive_fds(syslogd_t)
 
@@ -446,6 +505,7 @@
 
 # cjp: this doesnt make sense
 logging_send_syslog_msg(syslogd_t)
+logging_manage_all_logs(syslogd_t)
 
 miscfiles_read_localization(syslogd_t)
 
@@ -488,6 +548,11 @@
 
 optional_policy(`
 	seutil_sigchld_newrole(syslogd_t)
+	snmp_read_snmp_var_lib_files(syslogd_t)
+')
+
+optional_policy(`
+    daemontools_search_svc_dir(syslogd_t)
 ')
 
 optional_policy(`
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/lvm.fc serefpolicy-3.7.19/policy/modules/system/lvm.fc
--- nsaserefpolicy/policy/modules/system/lvm.fc	2011-03-17 07:21:20.548851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/lvm.fc	2012-04-16 15:27:59.279146062 +0000
@@ -28,21 +28,25 @@
 #
 /lib/lvm-10/.*		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /lib/lvm-200/.*		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/lib/udev/udisks-lvm-pv-export	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 
 #
 # /sbin
 #
+/sbin/mount\.crypt	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/cryptsetup	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/dmraid		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/dmsetup		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/dmsetup\.static	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/e2fsadm		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/sbin/kpartx		--  gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvchange		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvcreate		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvdisplay		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvextend		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvm		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvm\.static	--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/sbin/lvmetad		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvmchange		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvmdiskscan	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvmiopversion	--	gen_context(system_u:object_r:lvm_exec_t,s0)
@@ -98,4 +102,6 @@
 /var/lib/multipath(/.*)?	gen_context(system_u:object_r:lvm_var_lib_t,s0)
 /var/lock/lvm(/.*)?		gen_context(system_u:object_r:lvm_lock_t,s0)
 /var/run/multipathd\.sock -s	gen_context(system_u:object_r:lvm_var_run_t,s0)
+/var/run/clvmd\.pid --  gen_context(system_u:object_r:clvmd_var_run_t,s0)
 /var/run/dmevent.*		gen_context(system_u:object_r:lvm_var_run_t,s0)
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/lvm.if serefpolicy-3.7.19/policy/modules/system/lvm.if
--- nsaserefpolicy/policy/modules/system/lvm.if	2011-03-17 07:21:20.557851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/lvm.if	2011-08-11 14:11:08.322523004 +0000
@@ -34,7 +34,7 @@
 		type lvm_exec_t;
 	')
 
-	corecmd_search_sbin($1)
+	corecmd_search_bin($1)
 	can_exec($1, lvm_exec_t)
 ')
 
@@ -123,3 +123,59 @@
 	corecmd_search_bin($1)
 	domtrans_pattern($1, clvmd_exec_t, clvmd_t)
 ')
+
+######################################
+## <summary>
+## Read and write to clvmd temporary file system.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`lvm_rw_clvmd_tmpfs_files',`
+        gen_require(`
+                type clvmd_tmpfs_t;
+        ')
+
+        allow $1 clvmd_tmpfs_t:file rw_file_perms;
+        allow $1 clvmd_tmpfs_t:file unlink;
+')
+
+########################################
+## <summary>
+##     Delete lvm temporary file system.
+## </summary>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+#
+interface(`lvm_delete_clvmd_tmpfs_files',`
+       gen_require(`
+               type clvmd_tmpfs_t;
+       ')
+
+       allow $1 clvmd_tmpfs_t:file unlink;
+')
+
+#######################################
+## <summary>
+##  Send a message to lvm over the 
+##  datagram socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`lvm_dgram_send',`
+    gen_require(`
+        type lvm_t;
+    ')
+
+    allow $1 lvm_t:unix_dgram_socket sendto;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/lvm.te serefpolicy-3.7.19/policy/modules/system/lvm.te
--- nsaserefpolicy/policy/modules/system/lvm.te	2011-03-17 07:21:20.531851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/lvm.te	2012-04-03 14:42:55.652146522 +0000
@@ -13,6 +13,9 @@
 type clvmd_initrc_exec_t;
 init_script_file(clvmd_initrc_exec_t)
 
+type clvmd_tmpfs_t;
+files_tmpfs_file(clvmd_tmpfs_t)
+
 type clvmd_var_run_t;
 files_pid_file(clvmd_var_run_t)
 
@@ -25,7 +28,7 @@
 role system_r types lvm_t;
 
 type lvm_etc_t;
-files_type(lvm_etc_t)
+files_config_file(lvm_etc_t)
 
 type lvm_lock_t;
 files_lock_file(lvm_lock_t)
@@ -57,6 +60,10 @@
 allow clvmd_t self:tcp_socket create_stream_socket_perms;
 allow clvmd_t self:udp_socket create_socket_perms;
 
+manage_dirs_pattern(clvmd_t, clvmd_tmpfs_t, clvmd_tmpfs_t)
+manage_files_pattern(clvmd_t, clvmd_tmpfs_t,clvmd_tmpfs_t)
+fs_tmpfs_filetrans(clvmd_t, clvmd_tmpfs_t, { dir file })
+
 manage_files_pattern(clvmd_t, clvmd_var_run_t, clvmd_var_run_t)
 files_pid_filetrans(clvmd_t, clvmd_var_run_t, file)
 
@@ -142,6 +149,11 @@
 ')
 
 optional_policy(`
+	aisexec_stream_connect(clvmd_t)
+	corosync_stream_connect(clvmd_t)
+')
+
+optional_policy(`
 	ccs_stream_connect(clvmd_t)
 ')
 
@@ -168,13 +180,15 @@
 # net_admin for multipath
 allow lvm_t self:capability { dac_override fowner ipc_lock sys_admin sys_nice mknod chown sys_resource sys_rawio net_admin };
 dontaudit lvm_t self:capability sys_tty_config;
-allow lvm_t self:process { sigchld sigkill sigstop signull signal };
+allow lvm_t self:process { setfscreate sigchld sigkill sigstop signull signal };
 # LVM will complain a lot if it cannot set its priority.
 allow lvm_t self:process setsched;
+allow lvm_t self:sem create_sem_perms;
 allow lvm_t self:file rw_file_perms;
 allow lvm_t self:fifo_file manage_fifo_file_perms;
 allow lvm_t self:unix_dgram_socket create_socket_perms;
 allow lvm_t self:netlink_kobject_uevent_socket create_socket_perms;
+allow lvm_t self:sem create_sem_perms;
 
 allow lvm_t self:unix_stream_socket { connectto create_stream_socket_perms };
 allow lvm_t clvmd_t:unix_stream_socket { connectto rw_socket_perms };
@@ -191,8 +205,9 @@
 can_exec(lvm_t, lvm_exec_t)
 
 # Creating lock files
+manage_dirs_pattern(lvm_t, lvm_lock_t, lvm_lock_t)
 manage_files_pattern(lvm_t, lvm_lock_t, lvm_lock_t)
-files_lock_filetrans(lvm_t, lvm_lock_t, file)
+files_lock_filetrans(lvm_t, lvm_lock_t, { file dir })
 
 manage_dirs_pattern(lvm_t, lvm_var_lib_t, lvm_var_lib_t)
 manage_files_pattern(lvm_t, lvm_var_lib_t, lvm_var_lib_t)
@@ -201,7 +216,7 @@
 manage_dirs_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
 manage_files_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
 manage_sock_files_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
-files_pid_filetrans(lvm_t, lvm_var_run_t, { file sock_file })
+files_pid_filetrans(lvm_t, lvm_var_run_t, { dir file sock_file })
 
 read_files_pattern(lvm_t, lvm_etc_t, lvm_etc_t)
 read_lnk_files_pattern(lvm_t, lvm_etc_t, lvm_etc_t)
@@ -211,6 +226,7 @@
 files_etc_filetrans(lvm_t, lvm_metadata_t, file)
 files_search_mnt(lvm_t)
 
+kernel_get_sysvipc_info(lvm_t)
 kernel_read_system_state(lvm_t)
 kernel_read_kernel_sysctls(lvm_t)
 # Read system variables in /proc/sys
@@ -218,6 +234,7 @@
 # it has no reason to need this
 kernel_dontaudit_getattr_core_if(lvm_t)
 kernel_use_fds(lvm_t)
+kernel_request_load_module(lvm_t)
 kernel_search_debugfs(lvm_t)
 
 corecmd_exec_bin(lvm_t)
@@ -232,7 +249,7 @@
 dev_relabel_generic_dev_dirs(lvm_t)
 dev_manage_generic_blk_files(lvm_t)
 # Read /sys/block. Device mapper metadata is kept there.
-dev_read_sysfs(lvm_t)
+dev_rw_sysfs(lvm_t)
 # cjp: this has no effect since LVM does not
 # have lnk_file relabelto for anything else.
 # perhaps this should be blk_files?
@@ -244,6 +261,7 @@
 dev_dontaudit_getattr_generic_blk_files(lvm_t)
 dev_dontaudit_getattr_generic_pipes(lvm_t)
 dev_create_generic_dirs(lvm_t)
+dev_rw_generic_files(lvm_t)
 
 domain_use_interactive_fds(lvm_t)
 domain_read_all_domains_state(lvm_t)
@@ -253,8 +271,9 @@
 files_read_etc_runtime_files(lvm_t)
 # for when /usr is not mounted:
 files_dontaudit_search_isid_type_dirs(lvm_t)
+files_dontaudit_getattr_tmpfs_files(lvm_t)
 
-fs_getattr_xattr_fs(lvm_t)
+fs_getattr_all_fs(lvm_t)
 fs_search_auto_mountpoints(lvm_t)
 fs_list_tmpfs(lvm_t)
 fs_read_tmpfs_symlinks(lvm_t)
@@ -264,6 +283,7 @@
 
 mls_file_read_all_levels(lvm_t)
 mls_file_write_to_clearance(lvm_t)
+mls_file_upgrade(lvm_t)
 
 selinux_get_fs_mount(lvm_t)
 selinux_validate_context(lvm_t)
@@ -311,6 +331,11 @@
 ')
 
 optional_policy(`
+	aisexec_stream_connect(lvm_t)
+	corosync_stream_connect(lvm_t)
+')
+
+optional_policy(`
 	bootloader_rw_tmp_files(lvm_t)
 ')
 
@@ -331,6 +356,10 @@
 ')
 
 optional_policy(`
+	livecd_rw_semaphores(lvm_t)
+')
+
+optional_policy(`
 	modutils_domtrans_insmod(lvm_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/miscfiles.fc serefpolicy-3.7.19/policy/modules/system/miscfiles.fc
--- nsaserefpolicy/policy/modules/system/miscfiles.fc	2011-03-17 07:21:20.668851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/miscfiles.fc	2011-03-17 07:21:03.071851003 +0000
@@ -9,7 +9,9 @@
 # /etc
 #
 /etc/avahi/etc/localtime --	gen_context(system_u:object_r:locale_t,s0)
+/etc/httpd/alias(/.*)?          gen_context(system_u:object_r:cert_t,s0)
 /etc/localtime		--	gen_context(system_u:object_r:locale_t,s0)
+/etc/timezone           --      gen_context(system_u:object_r:locale_t,s0)
 /etc/pki(/.*)?			gen_context(system_u:object_r:cert_t,s0)
 
 ifdef(`distro_redhat',`
@@ -75,13 +77,11 @@
 /var/cache/fonts(/.*)?		gen_context(system_u:object_r:tetex_data_t,s0)
 /var/cache/man(/.*)?		gen_context(system_u:object_r:man_t,s0)
 
-/var/lib/cobbler/webui_sessions(/.*)? gen_context(system_u:object_r:public_content_rw_t, s0)
-
 /var/named/chroot/etc/pki(/.*)? gen_context(system_u:object_r:cert_t,s0)
 
-/var/spool/texmf(/.*)?		gen_context(system_u:object_r:tetex_data_t,s0)
+/var/spool/abrt-upload(/.*)?	gen_context(system_u:object_r:public_content_rw_t,s0)
 
-/var/www/cobbler/images(/.*)?	gen_context(system_u:object_r:public_content_rw_t, s0)
+/var/spool/texmf(/.*)?		gen_context(system_u:object_r:tetex_data_t,s0)
 
 ifdef(`distro_debian',`
 /var/lib/msttcorefonts(/.*)?	gen_context(system_u:object_r:fonts_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/miscfiles.if serefpolicy-3.7.19/policy/modules/system/miscfiles.if
--- nsaserefpolicy/policy/modules/system/miscfiles.if	2011-03-17 07:21:20.469851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/miscfiles.if	2011-03-17 07:21:02.779851003 +0000
@@ -1,5 +1,49 @@
 ## <summary>Miscelaneous files.</summary>
 
+#######################################
+## <summary>
+##      Make the specified type usable as a cert file.
+## </summary>
+## <desc>
+##      <p>
+##      Make the specified type usable for cert files.
+##      This will also make the type usable for files, making
+##      calls to files_type() redundant.  Failure to use this interface
+##      for a temporary file may result in problems with
+##      cert management tools.
+##      </p>
+##      <p>
+##      Related interfaces:
+##      </p>
+##      <ul>
+##              <li>files_type()</li>
+##      </ul>
+##      <p>
+##      Example:
+##      </p>
+##      <p>
+##      type mycertfile_t;
+##      cert_type(mycertfile_t)
+##      allow mydomain_t mycertfile_t:file read_file_perms;
+##      files_search_etc(mydomain_t)
+##      </p>
+## </desc>
+## <param name="type">
+##      <summary>
+##      Type to be used for files.
+##      </summary>
+## </param>
+## <infoflow type="none"/>
+#
+interface(`miscfiles_cert_type',`
+        gen_require(`
+                attribute cert_type;
+        ')
+
+        typeattribute $1 cert_type;
+        files_type($1)
+')
+
 ########################################
 ## <summary>
 ##	Read system SSL certificates.
@@ -13,12 +57,12 @@
 #
 interface(`miscfiles_read_certs',`
 	gen_require(`
-		type cert_t;
+		attribute cert_type;
 	')
 
-	allow $1 cert_t:dir list_dir_perms;
-	read_files_pattern($1, cert_t, cert_t)
-	read_lnk_files_pattern($1, cert_t, cert_t)
+    allow $1 cert_type:dir list_dir_perms;
+    read_files_pattern($1, cert_type, cert_type)
+	read_lnk_files_pattern($1, cert_type, cert_type)
 ')
 
 ########################################
@@ -305,9 +349,6 @@
 	allow $1 locale_t:dir list_dir_perms;
 	read_files_pattern($1, locale_t, locale_t)
 	read_lnk_files_pattern($1, locale_t, locale_t)
-
-	# why?
-	libs_read_lib_files($1)
 ')
 
 ########################################
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/miscfiles.te serefpolicy-3.7.19/policy/modules/system/miscfiles.te
--- nsaserefpolicy/policy/modules/system/miscfiles.te	2011-03-17 07:21:20.538851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/miscfiles.te	2011-03-17 07:21:02.932851003 +0000
@@ -6,11 +6,13 @@
 # Declarations
 #
 
+attribute cert_type;
+
 #
 # cert_t is the type of files in the system certs directories.
 #
 type cert_t;
-files_type(cert_t)
+miscfiles_cert_type(cert_t)
 
 #
 # fonts_t is the type of various font
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/modutils.if serefpolicy-3.7.19/policy/modules/system/modutils.if
--- nsaserefpolicy/policy/modules/system/modutils.if	2011-03-17 07:21:20.668851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/modutils.if	2011-09-08 14:23:37.174160001 +0000
@@ -13,6 +13,7 @@
 interface(`modutils_getattr_module_deps',`
 	gen_require(`
 		type modules_dep_t;
+		type modules_object_t;
 	')
 
 	getattr_files_pattern($1, modules_object_t, modules_dep_t)
@@ -37,6 +38,26 @@
 	allow $1 modules_dep_t:file read_file_perms;
 ')
 
+#######################################
+## <summary>
+##  list the configuration options used when
+##  loading modules.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`modutils_list_module_config',`
+    gen_require(`
+        type modules_conf_t;
+    ')
+
+    list_dirs_pattern($1, modules_conf_t, modules_conf_t)
+')
+
 ########################################
 ## <summary>
 ##	Read the configuration options used when
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/modutils.te serefpolicy-3.7.19/policy/modules/system/modutils.te
--- nsaserefpolicy/policy/modules/system/modutils.te	2011-03-17 07:21:20.666851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/modutils.te	2011-03-17 07:21:03.064851001 +0000
@@ -19,8 +19,12 @@
 type insmod_exec_t;
 application_domain(insmod_t, insmod_exec_t)
 mls_file_write_all_levels(insmod_t)
+mls_process_write_down(insmod_t)
 role system_r types insmod_t;
 
+type insmod_tmpfs_t;
+files_tmpfs_file(insmod_tmpfs_t)
+
 # module loading config
 type modules_conf_t;
 files_type(modules_conf_t)
@@ -56,12 +60,14 @@
 
 domain_use_interactive_fds(depmod_t)
 
+files_delete_kernel_modules(depmod_t)
 files_read_kernel_symbol_table(depmod_t)
 files_read_kernel_modules(depmod_t)
 files_read_etc_runtime_files(depmod_t)
 files_read_etc_files(depmod_t)
 files_read_usr_src_files(depmod_t)
 files_list_usr(depmod_t)
+files_read_boot_files(depmod_t)
 
 fs_getattr_xattr_fs(depmod_t)
 
@@ -75,6 +81,7 @@
 # Read System.map from home directories.
 files_list_home(depmod_t)
 userdom_read_user_home_content_files(depmod_t)
+userdom_manage_user_tmp_files(depmod_t)
 
 ifdef(`distro_ubuntu',`
 	optional_policy(`
@@ -105,7 +112,7 @@
 # insmod local policy
 #
 
-allow insmod_t self:capability { dac_override net_raw sys_nice sys_tty_config };
+allow insmod_t self:capability { dac_override mknod net_raw sys_nice sys_tty_config };
 allow insmod_t self:process { execmem sigchld sigkill sigstop signull signal };
 
 allow insmod_t self:udp_socket create_socket_perms;
@@ -117,6 +124,9 @@
 list_dirs_pattern(insmod_t, modules_dep_t, modules_dep_t)
 read_files_pattern(insmod_t, modules_dep_t, modules_dep_t)
 
+manage_files_pattern(insmod_t,insmod_tmpfs_t,insmod_tmpfs_t)
+fs_tmpfs_filetrans(insmod_t,insmod_tmpfs_t,file)
+
 can_exec(insmod_t, insmod_exec_t)
 
 kernel_load_module(insmod_t)
@@ -126,12 +136,15 @@
 kernel_mount_debugfs(insmod_t)
 kernel_mount_kvmfs(insmod_t)
 kernel_read_debugfs(insmod_t)
+kernel_request_load_module(insmod_t)
 # Rules for /proc/sys/kernel/tainted
 kernel_read_kernel_sysctls(insmod_t)
 kernel_rw_kernel_sysctl(insmod_t)
 kernel_read_hotplug_sysctls(insmod_t)
 kernel_setsched(insmod_t)
 
+domain_signull_all_domains(insmod_t)
+
 corecmd_exec_bin(insmod_t)
 corecmd_exec_shell(insmod_t)
 
@@ -143,6 +156,7 @@
 dev_read_sound(insmod_t)
 dev_write_sound(insmod_t)
 dev_rw_apm_bios(insmod_t)
+dev_create_generic_chr_files(insmod_t)
 
 domain_signal_all_domains(insmod_t)
 domain_use_interactive_fds(insmod_t)
@@ -159,13 +173,17 @@
 # for locking: (cjp: ????)
 files_write_kernel_modules(insmod_t)
 
+fs_search_rpc(insmod_t)
 fs_getattr_xattr_fs(insmod_t)
 fs_dontaudit_use_tmpfs_chr_dev(insmod_t)
+fs_mount_rpc_pipefs(insmod_t)
 
 init_rw_initctl(insmod_t)
 init_use_fds(insmod_t)
 init_use_script_fds(insmod_t)
 init_use_script_ptys(insmod_t)
+init_spec_domtrans_script(insmod_t)
+init_rw_script_tmp_files(insmod_t)
 
 logging_send_syslog_msg(insmod_t)
 logging_search_logs(insmod_t)
@@ -174,8 +192,7 @@
 
 seutil_read_file_contexts(insmod_t)
 
-userdom_use_user_terminals(insmod_t)
-
+term_use_all_terms(insmod_t)
 userdom_dontaudit_search_user_home_dirs(insmod_t)
 
 if( ! secure_mode_insmod ) {
@@ -236,6 +253,10 @@
 ')
 
 optional_policy(`
+	virt_dontaudit_write_pipes(insmod_t)
+')
+
+optional_policy(`
 	# cjp: why is this needed:
 	dev_rw_xserver_misc(insmod_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/mount.fc serefpolicy-3.7.19/policy/modules/system/mount.fc
--- nsaserefpolicy/policy/modules/system/mount.fc	2011-03-17 07:21:20.551851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/mount.fc	2011-03-17 07:21:02.938851001 +0000
@@ -1,4 +1,10 @@
 /bin/mount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
 /bin/umount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
+/sbin/mount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
+/sbin/umount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
+/bin/fusermount    		--      gen_context(system_u:object_r:fusermount_exec_t,s0)
+/usr/bin/fusermount		--	gen_context(system_u:object_r:fusermount_exec_t,s0)
+/usr/sbin/showmount		--  gen_context(system_u:object_r:showmount_exec_t,s0)
 
-/usr/bin/fusermount		--	gen_context(system_u:object_r:mount_exec_t,s0)
+/var/cache/davfs2(/.*)?		gen_context(system_u:object_r:mount_var_run_t,s0)
+/var/run/davfs2(/.*)?		gen_context(system_u:object_r:mount_var_run_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/mount.if serefpolicy-3.7.19/policy/modules/system/mount.if
--- nsaserefpolicy/policy/modules/system/mount.if	2011-03-17 07:21:20.567851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/mount.if	2011-03-17 07:21:02.946851001 +0000
@@ -16,6 +16,14 @@
 	')
 
 	domtrans_pattern($1, mount_exec_t, mount_t)
+	mount_domtrans_fusermount($1)
+
+ifdef(`hide_broken_symptoms', `
+	dontaudit mount_t $1:unix_stream_socket { read write };
+	dontaudit mount_t $1:tcp_socket  { read write };
+	dontaudit mount_t $1:udp_socket { read write };
+')
+
 ')
 
 ########################################
@@ -45,12 +53,58 @@
 	role $2 types mount_t;
 
 	optional_policy(`
-		samba_run_smbmount($1, $2)
+		fstools_run(mount_t, $2)
+	')
+
+	# Needed for mount crypt https://bugzilla.redhat.com/show_bug.cgi?id=418711
+	optional_policy(`
+		lvm_run(mount_t, $2)
+	')
+
+	optional_policy(`
+		modutils_run_insmod(mount_t, $2)
+	')
+
+	optional_policy(`
+		rpc_run_rpcd(mount_t, $2)
+	')
+
+	optional_policy(`
+		samba_run_smbmount(mount_t, $2)
 	')
 ')
 
 ########################################
 ## <summary>
+##	Execute fusermount in the mount domain, and
+##	allow the specified role the mount domain,
+##	and use the caller's terminal.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the mount domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`mount_run_fusermount',`
+	gen_require(`
+		type mount_t;
+	')
+
+	mount_domtrans_fusermount($1)
+	role $2 types mount_t;
+
+	fstools_run(mount_t, $2)
+')
+
+########################################
+## <summary>
 ##	Execute mount in the caller domain.
 ## </summary>
 ## <param name="domain">
@@ -84,9 +138,11 @@
 interface(`mount_signal',`
 	gen_require(`
 		type mount_t;
+		type unconfined_mount_t;
 	')
 
 	allow $1 mount_t:process signal;
+	allow $1 unconfined_mount_t:process signal;
 ')
 
 ########################################
@@ -176,4 +232,109 @@
 
 	mount_domtrans_unconfined($1)
 	role $2 types unconfined_mount_t;
+
+	optional_policy(`
+		rpc_run_rpcd(unconfined_mount_t, $2)
+	')
+
+	optional_policy(`
+		samba_run_smbmount(unconfined_mount_t, $2)
+	')
+')
+
+########################################
+## <summary>
+##	Execute fusermount in the mount domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`mount_domtrans_fusermount',`
+	gen_require(`
+		type mount_t, fusermount_exec_t;
+	')
+
+	domtrans_pattern($1, fusermount_exec_t, mount_t)
+')
+
+########################################
+## <summary>
+##	Execute fusermount.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`mount_exec_fusermount',`
+	gen_require(`
+		type fusermount_exec_t;
+	')
+
+	can_exec($1, fusermount_exec_t)
+')
+
+########################################
+## <summary>
+##	dontaudit Execute fusermount.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`mount_dontaudit_exec_fusermount',`
+	gen_require(`
+		type fusermount_exec_t;
+	')
+
+	dontaudit $1 fusermount_exec_t:file exec_file_perms;
+')
+
+######################################
+## <summary>
+##  Execute a domain transition to run showmount.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`mount_domtrans_showmount',`
+    gen_require(`
+        type showmount_t, showmount_exec_t;
+    ')
+
+    domtrans_pattern($1, showmount_exec_t, showmount_t)
+')
+
+######################################
+## <summary>
+##  Execute showmount in the showmount domain, and
+##  allow the specified role the showmount domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+## <param name="role">
+##  <summary>
+##  The role to be allowed the showmount domain.
+##  </summary>
+## </param>
+#
+interface(`mount_run_showmount',`
+    gen_require(`
+        type showmount_t;
+    ')
+
+    mount_domtrans_showmount($1)
+    role $2 types showmount_t;
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/mount.te serefpolicy-3.7.19/policy/modules/system/mount.te
--- nsaserefpolicy/policy/modules/system/mount.te	2011-03-17 07:21:20.642851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/mount.te	2012-08-01 10:17:18.884805445 +0000
@@ -18,8 +18,15 @@
 init_system_domain(mount_t, mount_exec_t)
 role system_r types mount_t;
 
+type fusermount_exec_t;
+domain_entry_file(mount_t, fusermount_exec_t)
+
+typealias mount_t alias mount_ntfs_t;
+typealias mount_exec_t alias mount_ntfs_exec_t;
+
 type mount_loopback_t; # customizable
 files_type(mount_loopback_t)
+typealias mount_loopback_t alias mount_loop_t;
 
 type mount_tmp_t;
 files_tmp_file(mount_tmp_t)
@@ -29,6 +36,17 @@
 # policy--duplicate type declaration
 type unconfined_mount_t;
 application_domain(unconfined_mount_t, mount_exec_t)
+role system_r types unconfined_mount_t;
+
+type mount_var_run_t;
+files_pid_file(mount_var_run_t)
+
+# showmount - show mount information for an NFS server
+
+type showmount_t;
+type showmount_exec_t;
+application_domain(showmount_t, showmount_exec_t)
+role system_r types showmount_t;
 
 ########################################
 #
@@ -36,7 +54,11 @@
 #
 
 # setuid/setgid needed to mount cifs 
-allow mount_t self:capability { ipc_lock sys_rawio sys_admin dac_override chown sys_tty_config setuid setgid };
+allow mount_t self:capability { fsetid ipc_lock setpcap sys_rawio sys_resource sys_admin sys_nice dac_override dac_read_search chown sys_tty_config setuid setgid };
+allow mount_t self:process { getcap getsched setsched ptrace setcap signal setrlimit };
+allow mount_t self:fifo_file rw_fifo_file_perms;
+allow mount_t self:unix_stream_socket create_stream_socket_perms;
+allow mount_t self:unix_dgram_socket create_socket_perms; 
 
 allow mount_t mount_loopback_t:file read_file_perms;
 
@@ -47,30 +69,53 @@
 
 files_tmp_filetrans(mount_t, mount_tmp_t, { file dir })
 
+manage_dirs_pattern(mount_t,mount_var_run_t,mount_var_run_t)
+manage_files_pattern(mount_t,mount_var_run_t,mount_var_run_t)
+files_pid_filetrans(mount_t,mount_var_run_t,dir)
+files_var_filetrans(mount_t,mount_var_run_t,dir)
+
+# In order to mount reiserfs_t
+kernel_dontaudit_getattr_core_if(mount_t)
+kernel_list_unlabeled(mount_t)
+kernel_mount_unlabeled(mount_t)
+kernel_unmount_unlabeled(mount_t)
 kernel_read_system_state(mount_t)
+kernel_read_network_state(mount_t)
 kernel_read_kernel_sysctls(mount_t)
-kernel_dontaudit_getattr_core_if(mount_t)
+kernel_search_debugfs(mount_t)
+kernel_setsched(mount_t)
+kernel_use_fds(mount_t)
+kernel_request_load_module(mount_t)
 
 # required for mount.smbfs
 corecmd_exec_bin(mount_t)
 
 dev_getattr_all_blk_files(mount_t)
+dev_getattr_generic_blk_files(mount_t)    
 dev_list_all_dev_nodes(mount_t)
+dev_read_usbfs(mount_t)
+dev_read_rand(mount_t)
+dev_read_sysfs(mount_t)
 dev_rw_lvm_control(mount_t)
 dev_dontaudit_getattr_all_chr_files(mount_t)
 dev_dontaudit_getattr_memory_dev(mount_t)
 dev_getattr_sound_dev(mount_t)
 
 domain_use_interactive_fds(mount_t)
+domain_dontaudit_search_all_domains_state(mount_t)
 
 files_search_all(mount_t)
 files_read_etc_files(mount_t)
+files_delete_etc_files(mount_t)
 files_manage_etc_runtime_files(mount_t)
 files_etc_filetrans_etc_runtime(mount_t, file)
 files_mounton_all_mountpoints(mount_t)
+files_setattr_all_mountpoints(mount_t)
+# ntfs-3g checks whether the mountpoint is writable before mounting
+files_write_all_mountpoints(mount_t)
 files_unmount_rootfs(mount_t)
 # These rules need to be generalized.  Only admin, initrc should have it:
-files_relabelto_all_file_type_fs(mount_t)
+files_relabel_all_file_type_fs(mount_t)
 files_mount_all_file_type_fs(mount_t)
 files_unmount_all_file_type_fs(mount_t)
 # for when /etc/mtab loses its type
@@ -80,18 +125,26 @@
 files_read_usr_files(mount_t)
 files_list_mnt(mount_t)
 
-fs_getattr_xattr_fs(mount_t)
-fs_getattr_cifs(mount_t)
+fs_list_all(mount_t)
+fs_getattr_all_fs(mount_t)
 fs_mount_all_fs(mount_t)
 fs_unmount_all_fs(mount_t)
 fs_remount_all_fs(mount_t)
 fs_relabelfrom_all_fs(mount_t)
-fs_list_auto_mountpoints(mount_t)
+fs_rw_anon_inodefs_files(mount_t)
 fs_rw_tmpfs_chr_files(mount_t)
+fs_manage_tmpfs_dirs(mount_t)
 fs_read_tmpfs_symlinks(mount_t)
+fs_read_fusefs_files(mount_t)
+fs_read_nfs_symlinks(mount_t)
+fs_manage_nfs_dirs(mount_t)
+
+mcs_file_read_all(mount_t)
+mcs_file_write_all(mount_t)
 
 mls_file_read_all_levels(mount_t)
 mls_file_write_all_levels(mount_t)
+mls_process_write_to_clearance(mount_t)
 
 selinux_get_enforce_mode(mount_t)
 
@@ -99,6 +152,7 @@
 storage_raw_write_fixed_disk(mount_t)
 storage_raw_read_removable_device(mount_t)
 storage_raw_write_removable_device(mount_t)
+storage_rw_fuse(mount_t)
 
 term_use_all_terms(mount_t)
 
@@ -107,6 +161,8 @@
 init_use_fds(mount_t)
 init_use_script_ptys(mount_t)
 init_dontaudit_getattr_initctl(mount_t)
+init_stream_connect_script(mount_t)
+init_rw_script_stream_sockets(mount_t)
 
 logging_send_syslog_msg(mount_t)
 
@@ -117,6 +173,8 @@
 seutil_read_config(mount_t)
 
 userdom_use_all_users_fds(mount_t)
+userdom_manage_user_home_content_dirs(mount_t)
+userdom_read_user_home_content_symlinks(mount_t)
 
 ifdef(`distro_redhat',`
 	optional_policy(`
@@ -132,10 +190,18 @@
 	')
 ')
 
+corecmd_exec_shell(mount_t)
+
+modutils_domtrans_insmod(mount_t)
+modutils_read_module_deps(mount_t)
+
+fstools_domtrans(mount_t)
+
 tunable_policy(`allow_mount_anyfile',`
 	auth_read_all_dirs_except_shadow(mount_t)
 	auth_read_all_files_except_shadow(mount_t)
 	files_mounton_non_security(mount_t)
+	files_rw_all_inherited_files(mount_t)
 ')
 
 optional_policy(`
@@ -165,6 +231,8 @@
 	fs_search_rpc(mount_t)
 
 	rpc_stub(mount_t)
+
+	rpc_domtrans_rpcd(mount_t)
 ')
 
 optional_policy(`
@@ -172,6 +240,25 @@
 ')
 
 optional_policy(`
+	cron_system_entry(mount_t, mount_exec_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(mount_t)
+
+	optional_policy(`
+		hal_dbus_chat(mount_t)
+	')
+')
+
+
+optional_policy(`
+	hal_write_log(mount_t)
+	hal_use_fds(mount_t)
+	hal_dontaudit_rw_pipes(mount_t)
+')
+
+optional_policy(`
 	ifdef(`hide_broken_symptoms',`
 		# for a bug in the X server
 		rhgb_dontaudit_rw_stream_sockets(mount_t)
@@ -179,6 +266,15 @@
 	')
 ')
 
+# Needed for mount crypt https://bugzilla.redhat.com/show_bug.cgi?id=418711
+optional_policy(`
+	lvm_domtrans(mount_t)
+')
+
+optional_policy(`
+	rhcs_stream_connect_gfs_controld(mount_t)
+')
+
 # for kernel package installation
 optional_policy(`
 	rpm_rw_pipes(mount_t)
@@ -186,6 +282,23 @@
 
 optional_policy(`
 	samba_domtrans_smbmount(mount_t)
+	samba_read_config(mount_t)
+')
+
+optional_policy(`
+	ssh_exec(mount_t)
+')
+
+optional_policy(`
+	usbmuxd_stream_connect(mount_t)
+')
+
+optional_policy(`
+	virt_read_blk_images(mount_t)
+')
+
+optional_policy(`
+	vmware_exec_host(mount_t)
 ')
 
 ########################################
@@ -194,6 +307,42 @@
 #
 
 optional_policy(`
+	unconfined_domain_noaudit(unconfined_mount_t)
+')
+
+optional_policy(`
+	userdom_unpriv_usertype(unconfined, unconfined_mount_t)
 	files_etc_filetrans_etc_runtime(unconfined_mount_t, file)
-	unconfined_domain(unconfined_mount_t)
 ')
+
+######################################
+#
+# showmount local policy
+#
+
+allow showmount_t self:tcp_socket create_stream_socket_perms;
+allow showmount_t self:udp_socket create_socket_perms;
+
+kernel_read_system_state(showmount_t)
+
+corenet_all_recvfrom_unlabeled(showmount_t)
+corenet_all_recvfrom_netlabel(showmount_t)
+corenet_tcp_sendrecv_generic_if(showmount_t)
+corenet_udp_sendrecv_generic_if(showmount_t)
+corenet_tcp_sendrecv_generic_node(showmount_t)
+corenet_udp_sendrecv_generic_node(showmount_t)
+corenet_tcp_sendrecv_all_ports(showmount_t)
+corenet_udp_sendrecv_all_ports(showmount_t)
+corenet_tcp_bind_generic_node(showmount_t)
+corenet_udp_bind_generic_node(showmount_t)
+corenet_tcp_bind_all_rpc_ports(showmount_t)
+corenet_udp_bind_all_rpc_ports(showmount_t)
+corenet_tcp_connect_all_ports(showmount_t)
+
+files_read_etc_files(showmount_t)
+
+miscfiles_read_localization(showmount_t)
+
+sysnet_dns_name_resolve(showmount_t)
+
+userdom_use_user_terminals(showmount_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/netlabel.te serefpolicy-3.7.19/policy/modules/system/netlabel.te
--- nsaserefpolicy/policy/modules/system/netlabel.te	2011-03-17 07:21:20.585851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/netlabel.te	2011-04-27 14:03:43.457000005 +0000
@@ -9,6 +9,7 @@
 type netlabel_mgmt_t;
 type netlabel_mgmt_exec_t;
 application_domain(netlabel_mgmt_t, netlabel_mgmt_exec_t)
+init_system_domain(netlabel_mgmt_t, netlabel_mgmt_exec_t)
 role system_r types netlabel_mgmt_t;
 
 ########################################
@@ -26,4 +27,6 @@
 
 seutil_use_newrole_fds(netlabel_mgmt_t)
 
+term_use_all_terms(netlabel_mgmt_t)
+
 userdom_use_user_terminals(netlabel_mgmt_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/raid.fc serefpolicy-3.7.19/policy/modules/system/raid.fc
--- nsaserefpolicy/policy/modules/system/raid.fc	2011-03-17 07:21:20.627851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/raid.fc	2011-03-17 07:21:03.001851003 +0000
@@ -1,5 +1,10 @@
 /dev/.mdadm.map		--	gen_context(system_u:object_r:mdadm_map_t,s0)
 
+#669402
+/usr/sbin/iprdump   --  gen_context(system_u:object_r:mdadm_exec_t,s0)
+/usr/sbin/iprinit   --  gen_context(system_u:object_r:mdadm_exec_t,s0)
+/usr/sbin/iprupdate --  gen_context(system_u:object_r:mdadm_exec_t,s0)
+
 /sbin/mdadm		--	gen_context(system_u:object_r:mdadm_exec_t,s0)
 /sbin/mdmpd		--	gen_context(system_u:object_r:mdadm_exec_t,s0)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/raid.te serefpolicy-3.7.19/policy/modules/system/raid.te
--- nsaserefpolicy/policy/modules/system/raid.te	2011-03-17 07:21:20.453851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/raid.te	2011-09-13 07:22:47.984160001 +0000
@@ -26,6 +26,7 @@
 dontaudit mdadm_t self:capability sys_tty_config;
 allow mdadm_t self:process { sigchld sigkill sigstop signull signal };
 allow mdadm_t self:fifo_file rw_fifo_file_perms;
+allow mdadm_t self:netlink_kobject_uevent_socket create_socket_perms;
 
 # create .mdadm files in /dev
 allow mdadm_t mdadm_map_t:file manage_file_perms;
@@ -36,6 +37,7 @@
 
 kernel_read_system_state(mdadm_t)
 kernel_read_kernel_sysctls(mdadm_t)
+kernel_request_load_module(mdadm_t)
 kernel_rw_software_raid_state(mdadm_t)
 kernel_getattr_core_if(mdadm_t)
 
@@ -58,6 +60,7 @@
 
 files_read_etc_files(mdadm_t)
 files_read_etc_runtime_files(mdadm_t)
+files_dontaudit_getattr_tmpfs_files(mdadm_t)
 
 fs_search_auto_mountpoints(mdadm_t)
 fs_dontaudit_list_tmpfs(mdadm_t)
@@ -69,6 +72,7 @@
 storage_manage_fixed_disk(mdadm_t)
 storage_dev_filetrans_fixed_disk(mdadm_t)
 storage_read_scsi_generic(mdadm_t)
+storage_write_scsi_generic(mdadm_t)
 
 term_dontaudit_list_ptys(mdadm_t)
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/selinuxutil.fc serefpolicy-3.7.19/policy/modules/system/selinuxutil.fc
--- nsaserefpolicy/policy/modules/system/selinuxutil.fc	2011-03-17 07:21:20.595851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/selinuxutil.fc	2011-03-17 07:21:02.975851003 +0000
@@ -6,13 +6,13 @@
 /etc/selinux(/.*)?			gen_context(system_u:object_r:selinux_config_t,s0)
 /etc/selinux/([^/]*/)?contexts(/.*)?	gen_context(system_u:object_r:default_context_t,s0)
 /etc/selinux/([^/]*/)?contexts/files(/.*)? gen_context(system_u:object_r:file_context_t,s0)
-/etc/selinux/([^/]*/)?policy(/.*)?	gen_context(system_u:object_r:policy_config_t,mls_systemhigh)
+/etc/selinux/([^/]*/)?policy(/.*)?	gen_context(system_u:object_r:semanage_store_t,s0)
 /etc/selinux/([^/]*/)?setrans\.conf --	gen_context(system_u:object_r:selinux_config_t,mls_systemhigh)
-/etc/selinux/([^/]*/)?seusers	--	gen_context(system_u:object_r:selinux_config_t,mls_systemhigh)
+/etc/selinux/([^/]*/)?seusers	--	gen_context(system_u:object_r:selinux_config_t,s0)
 /etc/selinux/([^/]*/)?modules/(active|tmp|previous)(/.*)? gen_context(system_u:object_r:semanage_store_t,s0)
 /etc/selinux/([^/]*/)?modules/semanage\.read\.LOCK -- gen_context(system_u:object_r:semanage_read_lock_t,s0)
 /etc/selinux/([^/]*/)?modules/semanage\.trans\.LOCK -- gen_context(system_u:object_r:semanage_trans_lock_t,s0)
-/etc/selinux/([^/]*/)?users(/.*)? --	gen_context(system_u:object_r:selinux_config_t,mls_systemhigh)
+/etc/selinux/([^/]*/)?users(/.*)? --	gen_context(system_u:object_r:selinux_config_t,s0)
 
 #
 # /root
@@ -38,11 +38,20 @@
 /usr/sbin/restorecond		--	gen_context(system_u:object_r:restorecond_exec_t,s0)
 /usr/sbin/run_init		--	gen_context(system_u:object_r:run_init_exec_t,s0)
 /usr/sbin/setfiles.*		--	gen_context(system_u:object_r:setfiles_exec_t,s0)
-/usr/sbin/setsebool		--	gen_context(system_u:object_r:semanage_exec_t,s0)
+/usr/sbin/setsebool		--	gen_context(system_u:object_r:setsebool_exec_t,s0)
 /usr/sbin/semanage		--	gen_context(system_u:object_r:semanage_exec_t,s0)
 /usr/sbin/semodule		--	gen_context(system_u:object_r:semanage_exec_t,s0)
+/usr/share/system-config-selinux/system-config-selinux-dbus\.py		--	gen_context(system_u:object_r:semanage_exec_t,s0)
 
 #
 # /var/run
 #
 /var/run/restorecond\.pid	--	gen_context(system_u:object_r:restorecond_var_run_t,s0)
+
+#
+# /var/lib
+#
+/var/lib/selinux(/.*)?			gen_context(system_u:object_r:selinux_var_lib_t,s0)
+
+/etc/share/selinux/targeted(/.*)?	gen_context(system_u:object_r:semanage_store_t,s0)
+/etc/share/selinux/mls(/.*)?		gen_context(system_u:object_r:semanage_store_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/selinuxutil.if serefpolicy-3.7.19/policy/modules/system/selinuxutil.if
--- nsaserefpolicy/policy/modules/system/selinuxutil.if	2011-03-17 07:21:20.622851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/selinuxutil.if	2012-02-28 09:20:26.416364270 +0000
@@ -199,6 +199,10 @@
 	role $2 types newrole_t;
 
 	auth_run_upd_passwd(newrole_t, $2)
+
+	optional_policy(`
+		namespace_init_run(newrole_t, $2)
+	')
 ')
 
 ########################################
@@ -361,6 +365,27 @@
 
 ########################################
 ## <summary>
+##	Execute restorecond in the caller domain. 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`seutil_exec_restorecond',`
+	gen_require(`
+		type restorecond_exec_t;
+	')
+
+	files_search_usr($1)
+	corecmd_search_bin($1)
+	can_exec($1, restorecond_exec_t)
+')
+
+########################################
+## <summary>
 ##	Execute run_init in the run_init domain.
 ## </summary>
 ## <param name="domain">
@@ -514,6 +539,10 @@
 	files_search_usr($1)
 	corecmd_search_bin($1)
 	domtrans_pattern($1, setfiles_exec_t, setfiles_t)
+
+	ifdef(`hide_broken_symptoms', `
+		dontaudit setfiles_t $1:socket_class_set { read write };
+	')
 ')
 
 ########################################
@@ -545,6 +574,53 @@
 
 ########################################
 ## <summary>
+##	Execute setfiles in the setfiles domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`seutil_domtrans_setfiles_mac',`
+	gen_require(`
+		type setfiles_mac_t, setfiles_exec_t;
+	')
+
+	files_search_usr($1)
+	corecmd_search_bin($1)
+	domtrans_pattern($1, setfiles_exec_t, setfiles_mac_t)
+')
+
+########################################
+## <summary>
+##	Execute setfiles in the setfiles_mac domain, and
+##	allow the specified role the setfiles_mac domain,
+##	and use the caller's terminal.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the setfiles_mac domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`seutil_run_setfiles_mac',`
+	gen_require(`
+		type setfiles_mac_t;
+	')
+
+	seutil_domtrans_setfiles_mac($1)
+	role $2 types setfiles_mac_t;
+')
+
+########################################
+## <summary>
 ##	Execute setfiles in the caller domain.
 ## </summary>
 ## <param name="domain">
@@ -690,6 +766,7 @@
 	')
 
 	files_search_etc($1)
+	manage_dirs_pattern($1, selinux_config_t, selinux_config_t)
 	manage_files_pattern($1, selinux_config_t, selinux_config_t)
 	read_lnk_files_pattern($1, selinux_config_t, selinux_config_t)
 ')
@@ -1009,6 +1086,26 @@
 
 ########################################
 ## <summary>
+##	Execute a domain transition to run setsebool.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`seutil_domtrans_setsebool',`
+	gen_require(`
+		type setsebool_t, setsebool_exec_t;
+	')
+
+	files_search_usr($1)
+	corecmd_search_bin($1)
+	domtrans_pattern($1, setsebool_exec_t, setsebool_t)
+')
+
+########################################
+## <summary>
 ##	Execute semanage in the semanage domain, and
 ##	allow the specified role the semanage domain,
 ##	and use the caller's terminal.
@@ -1020,7 +1117,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed the checkpolicy domain.
+##	The role to be allowed the semanage domain.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -1038,6 +1135,54 @@
 
 ########################################
 ## <summary>
+##	Execute setsebool in the semanage domain, and
+##	allow the specified role the semanage domain,
+##	and use the caller's terminal.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the setsebool domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`seutil_run_setsebool',`
+	gen_require(`
+		type semanage_t;
+	')
+
+	seutil_domtrans_setsebool($1)
+	role $2 types setsebool_t;
+')
+
+########################################
+## <summary>
+##	Full management of the semanage
+##	module store.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`seutil_read_module_store',`
+	gen_require(`
+		type selinux_config_t, semanage_store_t;
+	')
+
+	files_search_etc($1)
+	list_dirs_pattern($1, selinux_config_t, semanage_store_t)
+	read_files_pattern($1, semanage_store_t, semanage_store_t)
+')
+
+########################################
+## <summary>
 ##	Full management of the semanage
 ##	module store.
 ## </summary>
@@ -1149,3 +1294,199 @@
 	selinux_dontaudit_get_fs_mount($1)
 	seutil_dontaudit_read_config($1)
 ')
+
+#######################################
+## <summary>
+##	All rules necessary to run semanage command
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`seutil_semanage_policy',`
+	gen_require(`
+		type semanage_tmp_t;
+		type policy_config_t;
+	')
+	allow $1 self:capability { dac_override sys_resource };
+	dontaudit $1 self:capability sys_tty_config;
+	allow $1 self:process signal;
+	allow $1 self:unix_stream_socket create_stream_socket_perms;
+	allow $1 self:unix_dgram_socket create_socket_perms;
+	logging_send_audit_msgs($1)
+
+	# Running genhomedircon requires this for finding all users
+	auth_use_nsswitch($1)
+
+	allow $1 policy_config_t:file { read write };
+
+	allow $1 semanage_tmp_t:dir manage_dir_perms;
+	allow $1 semanage_tmp_t:file manage_file_perms;
+	files_tmp_filetrans($1, semanage_tmp_t, { file dir })
+
+	kernel_read_system_state($1)
+	kernel_read_kernel_sysctls($1)
+
+	corecmd_exec_bin($1)
+	corecmd_exec_shell($1)
+
+	dev_read_urand($1)
+
+	domain_use_interactive_fds($1)
+
+	files_read_etc_files($1)
+	files_read_etc_runtime_files($1)
+	files_read_usr_files($1)
+	files_list_pids($1)
+	fs_list_inotifyfs($1)
+	fs_getattr_all_fs($1)
+
+	mls_file_write_all_levels($1)
+	mls_file_read_all_levels($1)
+
+	selinux_getattr_fs($1)
+	selinux_validate_context($1)
+	selinux_get_enforce_mode($1)
+
+	term_use_all_terms($1)
+
+	locallogin_use_fds($1)
+
+	logging_send_syslog_msg($1)
+
+	miscfiles_read_localization($1)
+
+	seutil_search_default_contexts($1)
+	seutil_domtrans_loadpolicy($1)
+	seutil_read_config($1)
+	seutil_manage_bin_policy($1)
+	seutil_use_newrole_fds($1)
+	seutil_manage_module_store($1)
+	seutil_get_semanage_trans_lock($1)
+	seutil_get_semanage_read_lock($1)
+
+	userdom_dontaudit_write_user_home_content_files($1)
+
+')
+
+
+#######################################
+## <summary>
+##	All rules necessary to run setfiles command
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`seutil_setfiles',`
+
+	gen_require(`
+		type policy_src_t, policy_config_t;
+		type file_context_t, default_context_t;
+	')
+
+	allow $1 self:capability { dac_override dac_read_search fowner };
+	dontaudit $1 self:capability sys_tty_config;
+	allow $1 self:fifo_file rw_file_perms;
+	dontaudit $1 self:dir relabelfrom;
+	dontaudit $1 self:file relabelfrom;
+	dontaudit $1 self:lnk_file relabelfrom;
+
+
+	allow $1 { policy_src_t policy_config_t file_context_t default_context_t }:dir list_dir_perms;
+	allow $1 { policy_src_t policy_config_t file_context_t default_context_t }:file read_file_perms;
+	allow $1 { policy_src_t policy_config_t file_context_t default_context_t }:lnk_file { read_lnk_file_perms ioctl lock };
+
+	logging_send_audit_msgs($1)
+
+	kernel_read_system_state($1)
+	kernel_relabelfrom_unlabeled_dirs($1)
+	kernel_relabelfrom_unlabeled_files($1)
+	kernel_relabelfrom_unlabeled_symlinks($1)
+	kernel_relabelfrom_unlabeled_pipes($1)
+	kernel_relabelfrom_unlabeled_sockets($1)
+	kernel_use_fds($1)
+	kernel_rw_pipes($1)
+	kernel_rw_unix_dgram_sockets($1)
+	kernel_dontaudit_list_all_proc($1)
+	kernel_read_all_sysctls($1)
+	kernel_read_network_state_symlinks($1)
+
+	dev_relabel_all_dev_nodes($1)
+
+	domain_use_interactive_fds($1)
+	domain_read_all_domains_state($1)
+ 
+	files_read_etc_runtime_files($1)
+	files_read_etc_files($1)
+	files_list_all($1)
+	files_relabel_all_files($1)
+	files_list_isid_type_dirs($1)
+	files_read_isid_type_files($1)
+	files_dontaudit_read_all_symlinks($1)
+
+	fs_getattr_xattr_fs($1)
+	fs_list_all($1)
+	fs_getattr_all_files($1)
+	fs_search_auto_mountpoints($1)
+	fs_relabelfrom_noxattr_fs($1)
+
+	mls_file_read_all_levels($1)
+	mls_file_write_all_levels($1)
+	mls_file_upgrade($1)
+	mls_file_downgrade($1)
+
+	selinux_validate_context($1)
+	selinux_compute_access_vector($1)
+	selinux_compute_create_context($1)
+	selinux_compute_relabel_context($1)
+	selinux_compute_user_contexts($1)
+
+	term_use_all_terms($1)
+
+	# this is to satisfy the assertion:
+	auth_relabelto_shadow($1)
+
+	init_use_fds($1)
+	init_use_script_fds($1)
+	init_use_script_ptys($1)
+	init_exec_script_files($1)
+
+	logging_send_syslog_msg($1)
+
+	miscfiles_read_localization($1)
+
+	seutil_libselinux_linked($1)
+
+	userdom_use_all_users_fds($1)
+	# for config files in a home directory
+	userdom_read_user_home_content_files($1)
+
+	ifdef(`distro_debian',`
+	# udev tmpfs is populated with static device nodes
+	# and then relabeled afterwards; thus
+	# /dev/console has the tmpfs type
+		fs_rw_tmpfs_chr_files($1)
+	')
+
+	ifdef(`distro_redhat',`
+		fs_rw_tmpfs_chr_files($1)
+		fs_rw_tmpfs_blk_files($1)
+		fs_relabel_tmpfs_blk_file($1)
+		fs_relabel_tmpfs_chr_file($1)
+	')
+
+	ifdef(`distro_ubuntu',`
+		optional_policy(`
+			unconfined_domain($1)
+		')
+	')
+
+	optional_policy(`
+		hotplug_use_fds($1)
+	')
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/selinuxutil.te serefpolicy-3.7.19/policy/modules/system/selinuxutil.te
--- nsaserefpolicy/policy/modules/system/selinuxutil.te	2011-03-17 07:21:20.434851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/selinuxutil.te	2011-08-08 16:16:01.373523005 +0000
@@ -23,6 +23,9 @@
 type selinux_config_t;
 files_type(selinux_config_t)
 
+type selinux_var_lib_t;
+files_type(selinux_var_lib_t)
+
 type checkpolicy_t, can_write_binary_policy;
 type checkpolicy_exec_t;
 application_domain(checkpolicy_t, checkpolicy_exec_t)
@@ -58,8 +61,9 @@
 # policy_config_t is the type of /etc/security/selinux/*
 # the security server policy configuration.
 #
-type policy_config_t;
-files_type(policy_config_t)
+#type policy_config_t;
+#files_type(policy_config_t)
+typealias semanage_store_t alias policy_config_t;
 
 neverallow ~can_relabelto_binary_policy policy_config_t:file relabelto;
 #neverallow ~can_write_binary_policy policy_config_t:file { write append };
@@ -75,7 +79,6 @@
 type restorecond_exec_t;
 init_daemon_domain(restorecond_t, restorecond_exec_t)
 domain_obj_id_change_exemption(restorecond_t)
-role system_r types restorecond_t;
 
 type restorecond_var_run_t;
 files_pid_file(restorecond_var_run_t)
@@ -89,9 +92,14 @@
 type semanage_t;
 type semanage_exec_t;
 application_domain(semanage_t, semanage_exec_t)
+dbus_system_domain(semanage_t, semanage_exec_t)
 domain_interactive_fd(semanage_t)
 role system_r types semanage_t;
 
+type setsebool_t;
+type setsebool_exec_t;
+init_system_domain(setsebool_t, setsebool_exec_t)
+
 type semanage_store_t;
 files_type(semanage_store_t)
 
@@ -109,6 +117,11 @@
 init_system_domain(setfiles_t, setfiles_exec_t)
 domain_obj_id_change_exemption(setfiles_t)
 
+type setfiles_mac_t;
+domain_type(setfiles_mac_t)
+domain_entry_file(setfiles_mac_t, setfiles_exec_t)
+domain_obj_id_change_exemption(setfiles_mac_t)
+
 ########################################
 #
 # Checkpolicy local policy
@@ -177,6 +190,7 @@
 
 init_use_script_fds(load_policy_t)
 init_use_script_ptys(load_policy_t)
+init_write_script_pipes(load_policy_t)
 
 miscfiles_read_localization(load_policy_t)
 
@@ -184,6 +198,8 @@
 
 userdom_use_user_terminals(load_policy_t)
 userdom_use_all_users_fds(load_policy_t)
+userdom_dontaudit_read_user_tmp_files(load_policy_t)
+
 
 ifdef(`distro_ubuntu',`
 	optional_policy(`
@@ -191,15 +207,6 @@
 	')
 ')
 
-ifdef(`hide_broken_symptoms',`
-	# cjp: cover up stray file descriptors.
-	dontaudit load_policy_t selinux_config_t:file write;
-
-	optional_policy(`
-		unconfined_dontaudit_read_pipes(load_policy_t)
-	')
-')
-
 ########################################
 #
 # Newrole local policy
@@ -217,7 +224,7 @@
 allow newrole_t self:msg { send receive };
 allow newrole_t self:unix_dgram_socket sendto;
 allow newrole_t self:unix_stream_socket { create_stream_socket_perms connectto };
-allow newrole_t self:netlink_audit_socket { create_netlink_socket_perms nlmsg_relay };
+logging_send_audit_msgs(newrole_t)
 
 read_files_pattern(newrole_t, default_context_t, default_context_t)
 read_lnk_files_pattern(newrole_t, default_context_t, default_context_t)
@@ -235,6 +242,7 @@
 domain_sigchld_interactive_fds(newrole_t)
 
 files_read_etc_files(newrole_t)
+files_list_var(newrole_t)
 files_read_var_files(newrole_t)
 files_read_var_symlinks(newrole_t)
 
@@ -261,25 +269,30 @@
 term_getattr_unallocated_ttys(newrole_t)
 term_dontaudit_use_unallocated_ttys(newrole_t)
 
-auth_use_nsswitch(newrole_t)
-auth_domtrans_chk_passwd(newrole_t)
-auth_domtrans_upd_passwd(newrole_t)
-auth_rw_faillog(newrole_t)
+auth_use_pam(newrole_t)
 
 # Write to utmp.
 init_rw_utmp(newrole_t)
 init_use_fds(newrole_t)
 
-logging_send_syslog_msg(newrole_t)
-
 miscfiles_read_localization(newrole_t)
 
 seutil_libselinux_linked(newrole_t)
 
+userdom_use_unpriv_users_fds(newrole_t)
 # for some PAM modules and for cwd
 userdom_dontaudit_search_user_home_content(newrole_t)
 userdom_search_user_home_dirs(newrole_t)
 
+# need to talk with dbus
+optional_policy(`
+	dbus_system_bus_client(newrole_t)
+')
+
+optional_policy(`
+	xserver_dontaudit_exec_xauth(newrole_t)
+')
+
 ifdef(`distro_ubuntu',`
 	optional_policy(`
 		unconfined_domain(newrole_t)
@@ -313,6 +326,10 @@
 kernel_rw_pipes(restorecond_t)
 kernel_read_system_state(restorecond_t)
 
+dev_relabel_all_dev_nodes(restorecond_t)
+
+files_dontaudit_read_all_symlinks(restorecond_t)
+
 fs_relabelfrom_noxattr_fs(restorecond_t)
 fs_dontaudit_list_nfs(restorecond_t)
 fs_getattr_xattr_fs(restorecond_t)
@@ -336,6 +353,8 @@
 
 seutil_libselinux_linked(restorecond_t)
 
+userdom_read_user_home_content_symlinks(restorecond_t)
+
 ifdef(`distro_ubuntu',`
 	optional_policy(`
 		unconfined_domain(restorecond_t)
@@ -354,7 +373,7 @@
 allow run_init_t self:process setexec;
 allow run_init_t self:capability setuid;
 allow run_init_t self:fifo_file rw_file_perms;
-allow run_init_t self:netlink_audit_socket { create_netlink_socket_perms nlmsg_relay };
+logging_send_audit_msgs(run_init_t)
 
 # often the administrator runs such programs from a directory that is owned
 # by a different user or has restrictive SE permissions, do not want to audit
@@ -375,6 +394,8 @@
 
 mls_rangetrans_source(run_init_t)
 
+term_use_console(run_init_t)
+
 selinux_validate_context(run_init_t)
 selinux_compute_access_vector(run_init_t)
 selinux_compute_create_context(run_init_t)
@@ -383,7 +404,6 @@
 
 auth_use_nsswitch(run_init_t)
 auth_domtrans_chk_passwd(run_init_t)
-auth_domtrans_upd_passwd(run_init_t)
 auth_dontaudit_read_shadow(run_init_t)
 
 init_spec_domtrans_script(run_init_t)
@@ -406,6 +426,15 @@
 	')
 ')
 
+# need to talk with dbus
+optional_policy(`
+    dbus_system_bus_client(run_init_t)
+')
+
+optional_policy(`
+	rpm_domtrans(run_init_t)
+')
+
 ifdef(`distro_ubuntu',`
 	optional_policy(`
 		unconfined_domain(run_init_t)
@@ -421,61 +450,22 @@
 # semodule local policy
 #
 
-allow semanage_t self:capability { dac_override audit_write };
-allow semanage_t self:unix_stream_socket create_stream_socket_perms;
-allow semanage_t self:unix_dgram_socket create_socket_perms;
-allow semanage_t self:netlink_audit_socket { create_netlink_socket_perms nlmsg_relay };
-
-allow semanage_t policy_config_t:file rw_file_perms;
-
-allow semanage_t semanage_tmp_t:dir manage_dir_perms;
-allow semanage_t semanage_tmp_t:file manage_file_perms;
-files_tmp_filetrans(semanage_t, semanage_tmp_t, { file dir })
-
-kernel_read_system_state(semanage_t)
-kernel_read_kernel_sysctls(semanage_t)
-
-corecmd_exec_bin(semanage_t)
+seutil_semanage_policy(semanage_t)
+allow semanage_t self:fifo_file rw_fifo_file_perms;
 
-dev_read_urand(semanage_t)
+manage_dirs_pattern(semanage_t, selinux_var_lib_t,  selinux_var_lib_t)
+manage_files_pattern(semanage_t, selinux_var_lib_t,  selinux_var_lib_t)
 
-domain_use_interactive_fds(semanage_t)
-
-files_read_etc_files(semanage_t)
-files_read_etc_runtime_files(semanage_t)
-files_read_usr_files(semanage_t)
-files_list_pids(semanage_t)
-
-mls_file_write_all_levels(semanage_t)
-mls_file_read_all_levels(semanage_t)
-
-selinux_validate_context(semanage_t)
-selinux_get_enforce_mode(semanage_t)
-selinux_getattr_fs(semanage_t)
-# for setsebool:
 selinux_set_all_booleans(semanage_t)
+can_exec(semanage_t, semanage_exec_t)
 
-term_use_all_terms(semanage_t)
-
-# Running genhomedircon requires this for finding all users
-auth_use_nsswitch(semanage_t)
+# Admins are creating pp files in random locations
+auth_read_all_files_except_shadow(semanage_t)
 
-locallogin_use_fds(semanage_t)
-
-logging_send_syslog_msg(semanage_t)
-
-miscfiles_read_localization(semanage_t)
-
-seutil_libselinux_linked(semanage_t)
 seutil_manage_file_contexts(semanage_t)
 seutil_manage_config(semanage_t)
 seutil_domtrans_setfiles(semanage_t)
-seutil_domtrans_loadpolicy(semanage_t)
-seutil_manage_bin_policy(semanage_t)
-seutil_use_newrole_fds(semanage_t)
-seutil_manage_module_store(semanage_t)
-seutil_get_semanage_trans_lock(semanage_t)
-seutil_get_semanage_read_lock(semanage_t)
+
 # netfilter_contexts:
 seutil_manage_default_contexts(semanage_t)
 
@@ -484,12 +474,24 @@
 	files_read_var_lib_symlinks(semanage_t)
 ')
 
+optional_policy(`
+	setrans_initrc_domtrans(semanage_t)
+        domain_system_change_exemption(semanage_t)
+	consoletype_exec(semanage_t)
+')
+
 ifdef(`distro_ubuntu',`
 	optional_policy(`
 		unconfined_domain(semanage_t)
 	')
 ')
 
+optional_policy(`
+	#signal mcstrans on reload
+	init_spec_domtrans_script(semanage_t)
+	init_dontaudit_leaks(semanage_t)
+')
+
 # cjp: need a more general way to handle this:
 ifdef(`enable_mls',`
 	# read secadm tmp files
@@ -499,112 +501,54 @@
 	userdom_read_user_tmp_files(semanage_t)
 ')
 
+userdom_search_admin_dir(semanage_t)
+
+####################################n####
+#
+# setsebool local policy
+#
+seutil_semanage_policy(setsebool_t)
+selinux_set_all_booleans(setsebool_t)
+
+init_dontaudit_use_fds(setsebool_t)
+
+# Bug in semanage
+seutil_domtrans_setfiles(setsebool_t)
+seutil_manage_file_contexts(setsebool_t)
+seutil_manage_default_contexts(setsebool_t)
+seutil_manage_config(setsebool_t)
+
 ########################################
 #
 # Setfiles local policy
 #
 
-allow setfiles_t self:capability { dac_override dac_read_search fowner };
-dontaudit setfiles_t self:capability sys_tty_config;
-allow setfiles_t self:fifo_file rw_file_perms;
-
-allow setfiles_t { policy_src_t policy_config_t file_context_t default_context_t }:dir list_dir_perms;
-allow setfiles_t { policy_src_t policy_config_t file_context_t default_context_t }:file read_file_perms;
-allow setfiles_t { policy_src_t policy_config_t file_context_t default_context_t }:lnk_file { read_lnk_file_perms ioctl lock };
-
-kernel_read_system_state(setfiles_t)
-kernel_relabelfrom_unlabeled_dirs(setfiles_t)
-kernel_relabelfrom_unlabeled_files(setfiles_t)
-kernel_relabelfrom_unlabeled_symlinks(setfiles_t)
-kernel_relabelfrom_unlabeled_pipes(setfiles_t)
-kernel_relabelfrom_unlabeled_sockets(setfiles_t)
-kernel_use_fds(setfiles_t)
-kernel_rw_pipes(setfiles_t)
-kernel_rw_unix_dgram_sockets(setfiles_t)
-kernel_dontaudit_list_all_proc(setfiles_t)
-kernel_dontaudit_list_all_sysctls(setfiles_t)
-
-dev_relabel_all_dev_nodes(setfiles_t)
-
-domain_use_interactive_fds(setfiles_t)
-domain_dontaudit_search_all_domains_state(setfiles_t)
-
-files_read_etc_runtime_files(setfiles_t)
-files_read_etc_files(setfiles_t)
-files_list_all(setfiles_t)
-files_relabel_all_files(setfiles_t)
-files_read_usr_symlinks(setfiles_t)
-
-fs_getattr_xattr_fs(setfiles_t)
-fs_list_all(setfiles_t)
-fs_search_auto_mountpoints(setfiles_t)
-fs_relabelfrom_noxattr_fs(setfiles_t)
-
-mls_file_read_all_levels(setfiles_t)
-mls_file_write_all_levels(setfiles_t)
-mls_file_upgrade(setfiles_t)
-mls_file_downgrade(setfiles_t)
-
-selinux_validate_context(setfiles_t)
-selinux_compute_access_vector(setfiles_t)
-selinux_compute_create_context(setfiles_t)
-selinux_compute_relabel_context(setfiles_t)
-selinux_compute_user_contexts(setfiles_t)
-
-term_use_all_ttys(setfiles_t)
-term_use_all_ptys(setfiles_t)
-term_use_unallocated_ttys(setfiles_t)
-
-# this is to satisfy the assertion:
-auth_relabelto_shadow(setfiles_t)
-
-init_use_fds(setfiles_t)
-init_use_script_fds(setfiles_t)
-init_use_script_ptys(setfiles_t)
-init_exec_script_files(setfiles_t)
-
-logging_send_syslog_msg(setfiles_t)
-
-miscfiles_read_localization(setfiles_t)
-
-seutil_libselinux_linked(setfiles_t)
-
-userdom_use_all_users_fds(setfiles_t)
-# for config files in a home directory
-userdom_read_user_home_content_files(setfiles_t)
+seutil_setfiles(setfiles_t)
+# During boot in Rawhide
+term_use_generic_ptys(setfiles_t)
+
+seutil_setfiles(setfiles_mac_t)
+allow setfiles_mac_t self:capability2 mac_admin;
+kernel_relabelto_unlabeled(setfiles_mac_t)
 
-ifdef(`distro_debian',`
-	# udev tmpfs is populated with static device nodes
-	# and then relabeled afterwards; thus
-	# /dev/console has the tmpfs type
-	fs_rw_tmpfs_chr_files(setfiles_t)
-')
-
-ifdef(`distro_redhat', `
-	fs_rw_tmpfs_chr_files(setfiles_t)
-	fs_rw_tmpfs_blk_files(setfiles_t)
-	fs_relabel_tmpfs_blk_file(setfiles_t)
-	fs_relabel_tmpfs_chr_file(setfiles_t)
+optional_policy(`
+	hal_dontaudit_read_pid_files(setfiles_t)
 ')
 
-ifdef(`distro_ubuntu',`
-	optional_policy(`
-		unconfined_domain(setfiles_t)
-	')
+optional_policy(`
+	files_dontaudit_write_isid_chr_files(setfiles_mac_t)
+	livecd_dontaudit_leaks(setfiles_mac_t)
+	livecd_rw_tmp_files(setfiles_mac_t)
+	dev_dontaudit_write_all_chr_files(setfiles_mac_t)
 ')
 
 ifdef(`hide_broken_symptoms',`
 	optional_policy(`
-		udev_dontaudit_rw_dgram_sockets(setfiles_t)
-	')
-
-	# cjp: cover up stray file descriptors.
-	optional_policy(`
-		unconfined_dontaudit_read_pipes(setfiles_t)
-		unconfined_dontaudit_rw_tcp_sockets(setfiles_t)
+		setroubleshoot_fixit_dontaudit_leaks(setfiles_t)
+		setroubleshoot_fixit_dontaudit_leaks(setsebool_t)
 	')
 ')
 
 optional_policy(`
-	hotplug_use_fds(setfiles_t)
+	unconfined_domain(setfiles_mac_t)
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/setrans.te serefpolicy-3.7.19/policy/modules/system/setrans.te
--- nsaserefpolicy/policy/modules/system/setrans.te	2011-03-17 07:21:20.607851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/setrans.te	2011-03-17 07:21:02.976851003 +0000
@@ -13,6 +13,7 @@
 type setrans_t;
 type setrans_exec_t;
 init_daemon_domain(setrans_t, setrans_exec_t)
+mls_trusted_object(setrans_t)
 
 type setrans_initrc_exec_t;
 init_script_file(setrans_initrc_exec_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/sosreport.fc serefpolicy-3.7.19/policy/modules/system/sosreport.fc
--- nsaserefpolicy/policy/modules/system/sosreport.fc	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/sosreport.fc	2011-03-17 07:21:02.821851001 +0000
@@ -0,0 +1,2 @@
+
+/usr/sbin/sosreport	--	gen_context(system_u:object_r:sosreport_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/sosreport.if serefpolicy-3.7.19/policy/modules/system/sosreport.if
--- nsaserefpolicy/policy/modules/system/sosreport.if	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/sosreport.if	2011-03-17 07:21:02.933851002 +0000
@@ -0,0 +1,131 @@
+
+## <summary>policy for sosreport</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to run sosreport.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`sosreport_domtrans',`
+	gen_require(`
+		type sosreport_t, sosreport_exec_t;
+	')
+
+	domtrans_pattern($1, sosreport_exec_t, sosreport_t)
+')
+
+
+########################################
+## <summary>
+##	Execute sosreport in the sosreport domain, and
+##	allow the specified role the sosreport domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the sosreport domain.
+##	</summary>
+## </param>
+#
+interface(`sosreport_run',`
+	gen_require(`
+		type sosreport_t;
+	')
+
+	sosreport_domtrans($1)
+	role $2 types sosreport_t;
+')
+
+########################################
+## <summary>
+##	Role access for sosreport
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access
+##	</summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	User domain for the role
+##	</summary>
+## </param>
+#
+interface(`sosreport_role',`
+	gen_require(`
+              type sosreport_t;
+	')
+
+	role $1 types sosreport_t;
+
+	sosreport_domtrans($2)
+
+	ps_process_pattern($2, sosreport_t)
+	allow $2 sosreport_t:process signal;
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to read
+##	sosreport tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sosreport_read_tmp_files',`
+	gen_require(`
+		type sosreport_tmp_t;
+	')
+
+	files_search_tmp($1)
+	read_files_pattern($1, sosreport_tmp_t, sosreport_tmp_t)
+')
+
+########################################
+## <summary>
+##	Delete sosreport tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sosreport_delete_tmp_files',`
+	gen_require(`
+		type sosreport_tmp_t;
+	')
+
+	files_delete_tmp_dir_entry($1)
+	delete_files_pattern($1, sosreport_tmp_t, sosreport_tmp_t)
+')
+
+########################################
+## <summary>
+##	Append sosreport tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sosreport_append_tmp_files',`
+	gen_require(`
+		type sosreport_tmp_t;
+	')
+
+	allow $1 sosreport_tmp_t:file append;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/sosreport.te serefpolicy-3.7.19/policy/modules/system/sosreport.te
--- nsaserefpolicy/policy/modules/system/sosreport.te	1970-01-01 00:00:00.000000000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/sosreport.te	2011-10-18 11:56:49.694042010 +0000
@@ -0,0 +1,159 @@
+
+policy_module(sosreport,1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type sosreport_t;
+type sosreport_exec_t;
+application_domain(sosreport_t, sosreport_exec_t)
+role system_r types sosreport_t;
+
+type sosreport_tmp_t;
+files_tmp_file(sosreport_tmp_t)
+
+type sosreport_tmpfs_t;
+files_tmpfs_file(sosreport_tmpfs_t)
+
+########################################
+#
+# sosreport local policy
+#
+
+allow sosreport_t self:capability { kill net_admin net_raw setuid sys_admin sys_nice sys_ptrace dac_override };
+allow sosreport_t self:process { setsched signull };
+
+allow sosreport_t self:fifo_file rw_fifo_file_perms;
+allow sosreport_t self:tcp_socket create_stream_socket_perms;
+allow sosreport_t self:udp_socket create_socket_perms;
+allow sosreport_t self:unix_dgram_socket create_socket_perms;
+allow sosreport_t self:netlink_route_socket r_netlink_socket_perms;
+allow sosreport_t self:unix_stream_socket create_stream_socket_perms;
+
+# sosreport tmp files 
+manage_dirs_pattern(sosreport_t, sosreport_tmp_t, sosreport_tmp_t)
+manage_files_pattern(sosreport_t, sosreport_tmp_t, sosreport_tmp_t)
+manage_lnk_files_pattern(sosreport_t, sosreport_tmp_t, sosreport_tmp_t)
+files_tmp_filetrans(sosreport_t, sosreport_tmp_t, { file dir })
+
+manage_files_pattern(sosreport_t, sosreport_tmpfs_t, sosreport_tmpfs_t)
+fs_tmpfs_filetrans(sosreport_t, sosreport_tmpfs_t,file)
+
+kernel_read_network_state(sosreport_t)
+kernel_read_all_sysctls(sosreport_t)
+kernel_read_software_raid_state(sosreport_t)
+kernel_search_debugfs(sosreport_t)
+kernel_read_messages(sosreport_t)
+
+corecmd_exec_all_executables(sosreport_t)
+
+dev_getattr_all_chr_files(sosreport_t)
+dev_getattr_all_blk_files(sosreport_t)
+dev_getattr_generic_chr_files(sosreport_t)
+dev_getattr_generic_blk_files(sosreport_t)
+dev_getattr_mtrr_dev(sosreport_t)
+
+dev_read_rand(sosreport_t)
+dev_read_urand(sosreport_t)
+dev_read_raw_memory(sosreport_t)
+dev_read_sysfs(sosreport_t)
+
+domain_getattr_all_domains(sosreport_t)
+domain_read_all_domains_state(sosreport_t)
+domain_getattr_all_sockets(sosreport_t)
+domain_getattr_all_pipes(sosreport_t)
+domain_signull_all_domains(sosreport_t)
+
+# for blkid.tab
+files_manage_etc_runtime_files(sosreport_t)
+files_etc_filetrans_etc_runtime(sosreport_t, file)
+
+files_getattr_all_sockets(sosreport_t)
+files_exec_etc_files(sosreport_t)
+files_list_all(sosreport_t)
+files_read_config_files(sosreport_t)
+files_read_etc_files(sosreport_t)
+files_read_generic_tmp_files(sosreport_t)
+files_read_usr_files(sosreport_t)
+files_read_var_lib_files(sosreport_t)
+files_read_var_symlinks(sosreport_t)
+files_read_kernel_modules(sosreport_t)
+files_read_all_symlinks(sosreport_t)
+
+fs_getattr_all_fs(sosreport_t)
+fs_list_inotifyfs(sosreport_t)
+
+storage_dontaudit_read_fixed_disk(sosreport_t)
+storage_dontaudit_read_removable_device(sosreport_t)
+
+# cjp: some config files do not have configfile attribute
+# sosreport needs to read various files on system
+auth_read_all_files_except_shadow(sosreport_t)
+auth_use_nsswitch(sosreport_t)
+
+init_domtrans_script(sosreport_t)
+
+libs_domtrans_ldconfig(sosreport_t)
+
+logging_read_all_logs(sosreport_t)
+logging_send_syslog_msg(sosreport_t)
+
+miscfiles_read_localization(sosreport_t)
+
+# needed by modinfo
+modutils_read_module_deps(sosreport_t)
+
+sysnet_read_config(sosreport_t)
+
+optional_policy(`
+	abrt_manage_pid_files(sosreport_t)
+	abrt_manage_cache(sosreport_t)
+')
+
+optional_policy(`
+	cups_stream_connect(sosreport_t)
+')
+
+optional_policy(`
+	dmesg_domtrans(sosreport_t)
+')
+
+optional_policy(`
+	fstools_domtrans(sosreport_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(sosreport_t)
+
+	optional_policy(`
+		hal_dbus_chat(sosreport_t)
+	')
+')
+
+optional_policy(`
+    lvm_domtrans(sosreport_t)
+')
+
+optional_policy(`
+	mount_domtrans(sosreport_t)
+')
+
+optional_policy(`
+	pulseaudio_stream_connect(sosreport_t)
+')
+
+optional_policy(`
+    rpm_exec(sosreport_t)
+    rpm_dontaudit_manage_db(sosreport_t)
+    rpm_read_db(sosreport_t)
+')
+
+optional_policy(`
+	xserver_stream_connect(sosreport_t)
+')
+
+optional_policy(`
+	unconfined_domain(sosreport_t)
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/sysnetwork.fc serefpolicy-3.7.19/policy/modules/system/sysnetwork.fc
--- nsaserefpolicy/policy/modules/system/sysnetwork.fc	2011-03-17 07:21:20.637851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/sysnetwork.fc	2011-09-15 14:34:34.726160000 +0000
@@ -10,8 +10,8 @@
 /etc/dhclient.*conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
 /etc/dhclient-script	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
 /etc/dhcpc.*			gen_context(system_u:object_r:dhcp_etc_t,s0)
-/etc/dhcpd\.conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
-/etc/dhcp/dhcpd\.conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
+/etc/dhcpd(6)?\.conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
+/etc/dhcp/dhcpd(6)?\.conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
 /etc/ethers		--	gen_context(system_u:object_r:net_conf_t,s0)
 /etc/hosts		--	gen_context(system_u:object_r:net_conf_t,s0)
 /etc/hosts\.deny.*	--	gen_context(system_u:object_r:net_conf_t,s0)
@@ -64,3 +64,5 @@
 ifdef(`distro_gentoo',`
 /var/lib/dhcpc(/.*)?		gen_context(system_u:object_r:dhcpc_state_t,s0)
 ')
+
+/etc/firestarter/firestarter\.sh gen_context(system_u:object_r:dhcpc_helper_exec_t,s0)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/sysnetwork.if serefpolicy-3.7.19/policy/modules/system/sysnetwork.if
--- nsaserefpolicy/policy/modules/system/sysnetwork.if	2011-03-17 07:21:20.527851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/sysnetwork.if	2012-02-22 18:06:30.304396634 +0000
@@ -60,25 +60,24 @@
 		netutils_run(dhcpc_t, $2)
 		netutils_run_ping(dhcpc_t, $2)
 	')
-')
 
-########################################
-## <summary>
-##	Do not audit attempts to use
-##	the dhcp file descriptors.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	The domain sending the SIGCHLD.
-##	</summary>
-## </param>
-#
-interface(`sysnet_dontaudit_use_dhcpc_fds',`
-	gen_require(`
-		type dhcpc_t;
+	optional_policy(`
+		networkmanager_run(dhcpc_t, $2)
 	')
 
-	dontaudit $1 dhcpc_t:fd use;
+	optional_policy(`
+		nis_run_ypbind(dhcpc_t, $2)
+	')
+
+	optional_policy(`
+		nscd_run(dhcpc_t, $2)
+	')
+
+	optional_policy(`
+		ntp_run(dhcpc_t, $2)
+	')
+
+	seutil_run_setfiles(dhcpc_t, $2)
 ')
 
 ########################################
@@ -249,6 +248,43 @@
 	delete_files_pattern($1, dhcpc_state_t, dhcpc_state_t)
 ')
 
+########################################
+## <summary>
+##	Allow caller to relabel dhcpc_state files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sysnet_relabelfrom_dhcpc_state',`
+
+	gen_require(`
+		type dhcpc_state_t;
+	')
+
+	allow $1 dhcpc_state_t:file relabelfrom;
+')
+
+#######################################
+## <summary>
+##	Manage the dhcp client state files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sysnet_manage_dhcpc_state',`
+	gen_require(`
+		type dhcpc_state_t;
+	')
+
+	manage_files_pattern($1, dhcpc_state_t, dhcpc_state_t)
+')
+
 #######################################
 ## <summary>
 ##	Set the attributes of network config files.
@@ -270,6 +306,44 @@
 
 #######################################
 ## <summary>
+##      Allow caller to relabel net_conf files
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`sysnet_relabelfrom_net_conf',`
+
+        gen_require(`
+                type net_conf_t;
+        ')
+
+        allow $1 net_conf_t:file relabelfrom;
+')
+
+######################################
+## <summary>
+##      Allow caller to relabel net_conf files
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`sysnet_relabelto_net_conf',`
+
+        gen_require(`
+                type net_conf_t;
+        ')
+
+        allow $1 net_conf_t:file relabelto;
+')
+
+#######################################
+## <summary>
 ##	Read network config files.
 ## </summary>
 ## <desc>
@@ -403,11 +477,8 @@
 		type net_conf_t;
 	')
 
-	allow $1 net_conf_t:file manage_file_perms;
-
-	ifdef(`distro_redhat',`
-		manage_files_pattern($1, net_conf_t, net_conf_t)
-	')
+	allow $1 net_conf_t:dir list_dir_perms;
+	manage_files_pattern($1, net_conf_t, net_conf_t)
 ')
 
 #######################################
@@ -444,6 +515,7 @@
 		type dhcpc_var_run_t;
 	')
 
+	files_rw_pid_dirs($1)
 	allow $1 dhcpc_var_run_t:file unlink;
 ')
 
@@ -464,6 +536,10 @@
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, ifconfig_exec_t, ifconfig_t)
+	ifdef(`hide_broken_symptoms', `
+	        dontaudit ifconfig_t $1:socket_class_set { read write };
+	')
+
 ')
 
 ########################################
@@ -643,6 +719,8 @@
 
 	sysnet_read_config($1)
 
+	miscfiles_read_certs($1)
+
 	optional_policy(`
 		avahi_stream_connect($1)
 	')
@@ -677,7 +755,10 @@
 	corenet_tcp_connect_ldap_port($1)
 	corenet_sendrecv_ldap_client_packets($1)
 
-	sysnet_read_config($1)
+	files_search_etc($1)
+	allow $1 net_conf_t:file read_file_perms;
+	# LDAP Configuration using encrypted requires
+	dev_read_urand($1)
 ')
 
 ########################################
@@ -709,5 +790,52 @@
 	corenet_tcp_connect_portmap_port($1)
 	corenet_sendrecv_portmap_client_packets($1)
 
-	sysnet_read_config($1)
+	files_search_etc($1)
+	allow $1 net_conf_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to use
+##	the dhcp file descriptors.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The domain sending the SIGCHLD.
+##	</summary>
+## </param>
+#
+interface(`sysnet_dontaudit_dhcpc_use_fds',`
+	gen_require(`
+		type dhcpc_t;
+	')
+
+	dontaudit $1 dhcpc_t:fd use;
+')
+
+########################################
+## <summary>
+##	Transition to system_r when execute an dhclient script
+## </summary>
+## <desc>
+##      <p>
+##	Execute dhclient script in a specified role
+##      </p>
+##      <p>
+##      No interprocess communication (signals, pipes,
+##      etc.) is provided by this interface since
+##      the domains are not owned by this module.
+##      </p>
+## </desc>
+## <param name="source_role">
+##	<summary>
+##	Role to transition from.
+##	</summary>
+## </param>
+interface(`sysnet_role_transition_dhcpc',`
+	gen_require(`
+		type dhcpc_exec_t;
+	')
+
+	role_transition $1 dhcpc_exec_t system_r;
 ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/sysnetwork.te serefpolicy-3.7.19/policy/modules/system/sysnetwork.te
--- nsaserefpolicy/policy/modules/system/sysnetwork.te	2011-03-17 07:21:20.669851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/sysnetwork.te	2011-08-02 09:01:50.528523005 +0000
@@ -1,11 +1,18 @@
 
-policy_module(sysnetwork, 1.10.3)
+policy_module(sysnetwork, 1.11.0)
 
 ########################################
 #
 # Declarations
 #
 
+## <desc>
+## <p>
+## Allow dhcpc client applications to execute iptables commands
+## </p>
+## </desc>
+gen_tunable(dhcpc_exec_iptables, false)
+
 # this is shared between dhcpc and dhcpd:
 type dhcp_etc_t;
 typealias dhcp_etc_t alias { etc_dhcp_t etc_dhcpc_t etc_dhcpd_t };
@@ -20,6 +27,9 @@
 init_daemon_domain(dhcpc_t, dhcpc_exec_t)
 role system_r types dhcpc_t;
 
+type dhcpc_helper_exec_t;
+init_script_file(dhcpc_helper_exec_t)
+
 type dhcpc_state_t;
 files_type(dhcpc_state_t)
 
@@ -58,6 +68,8 @@
 exec_files_pattern(dhcpc_t, dhcp_etc_t, dhcp_etc_t)
 
 allow dhcpc_t dhcp_state_t:file read_file_perms;
+allow dhcpc_t dhcp_state_t:file relabelfrom;
+allow dhcpc_t dhcpc_state_t:file relabelfrom;
 manage_files_pattern(dhcpc_t, dhcpc_state_t, dhcpc_state_t)
 filetrans_pattern(dhcpc_t, dhcp_state_t, dhcpc_state_t, file)
 
@@ -67,6 +79,8 @@
 
 # Allow read/write to /etc/resolv.conf and /etc/ntp.conf. Note that any files
 # in /etc created by dhcpcd will be labelled net_conf_t.
+allow dhcpc_t net_conf_t:file manage_file_perms;
+allow dhcpc_t net_conf_t:file relabel_file_perms;
 sysnet_manage_config(dhcpc_t)
 files_etc_filetrans(dhcpc_t, net_conf_t, file)
 
@@ -111,6 +125,7 @@
 # for SSP:
 dev_read_urand(dhcpc_t)
 
+domain_obj_id_change_exemption(dhcpc_t)
 domain_use_interactive_fds(dhcpc_t)
 domain_dontaudit_read_all_domains_state(dhcpc_t)
 
@@ -152,10 +167,18 @@
 ')
 
 optional_policy(`
+    ctdbd_read_lib_files(ifconfig_t)
+')
+
+optional_policy(`
 	consoletype_domtrans(dhcpc_t)
 ')
 
 optional_policy(`
+	chronyd_initrc_domtrans(dhcpc_t)
+')
+
+optional_policy(`
 	init_dbus_chat_script(dhcpc_t)
 
 	dbus_system_bus_client(dhcpc_t)
@@ -172,6 +195,8 @@
 
 optional_policy(`
 	hal_dontaudit_rw_dgram_sockets(dhcpc_t)
+	hal_dontaudit_write_log(dhcpc_t)
+	hal_dontaudit_read_pid_files(dhcpc_t)
 ')
 
 optional_policy(`
@@ -193,6 +218,13 @@
 ')
 
 optional_policy(`
+	networkmanager_domtrans(dhcpc_t)
+	networkmanager_read_pid_files(dhcpc_t)
+	networkmanager_read_var_lib_files(dhcpc_t)
+')
+
+optional_policy(`
+	nis_initrc_domtrans_ypbind(dhcpc_t)
 	nis_read_ypbind_pid(dhcpc_t)
 ')
 
@@ -214,6 +246,7 @@
 optional_policy(`
 	seutil_sigchld_newrole(dhcpc_t)
 	seutil_dontaudit_search_config(dhcpc_t)
+	seutil_domtrans_setfiles(dhcpc_t)
 ')
 
 optional_policy(`
@@ -277,8 +310,11 @@
 
 domain_use_interactive_fds(ifconfig_t)
 
+read_files_pattern(ifconfig_t, dhcpc_state_t, dhcpc_state_t)
+
 files_read_etc_files(ifconfig_t)
 files_read_etc_runtime_files(ifconfig_t)
+files_read_usr_files(ifconfig_t)
 
 fs_getattr_xattr_fs(ifconfig_t)
 fs_search_auto_mountpoints(ifconfig_t)
@@ -291,6 +327,10 @@
 term_dontaudit_use_ptmx(ifconfig_t)
 term_dontaudit_use_generic_ptys(ifconfig_t)
 
+# needed in signle user mode in MLS
+# bug #667071
+term_read_console(ifconfig_t)
+
 files_dontaudit_read_root_files(ifconfig_t)
 
 init_use_fds(ifconfig_t)
@@ -306,6 +346,8 @@
 
 seutil_use_runinit_fds(ifconfig_t)
 
+sysnet_dns_name_resolve(ifconfig_t)
+
 userdom_use_user_terminals(ifconfig_t)
 userdom_use_all_users_fds(ifconfig_t)
 
@@ -316,6 +358,10 @@
 ')
 
 ifdef(`hide_broken_symptoms',`
+
+	# caused by some bogus kernel code
+	dontaudit ifconfig_t self:capability sys_module;
+
 	optional_policy(`
 		dev_dontaudit_rw_cardmgr(ifconfig_t)
 	')
@@ -328,9 +374,12 @@
 optional_policy(`
 	hal_dontaudit_rw_pipes(ifconfig_t)
 	hal_dontaudit_rw_dgram_sockets(ifconfig_t)
+	hal_dontaudit_read_pid_files(ifconfig_t)
+	hal_write_log(ifconfig_t)
 ')
 
 optional_policy(`
+	ipsec_setcontext_default_spd(ifconfig_t)
 	ipsec_write_pid(ifconfig_t)
 ')
 
@@ -348,6 +397,7 @@
 
 optional_policy(`
 	unconfined_dontaudit_rw_pipes(ifconfig_t)
+	unconfined_dontaudit_netlink_route_socket(ifconfig_t)
 ')
 
 optional_policy(`
@@ -360,3 +410,9 @@
 	xen_append_log(ifconfig_t)
 	xen_dontaudit_rw_unix_stream_sockets(ifconfig_t)
 ')
+
+optional_policy(`
+        tunable_policy(`dhcpc_exec_iptables',`
+                iptables_domtrans(dhcpc_t)
+        ')
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/udev.fc serefpolicy-3.7.19/policy/modules/system/udev.fc
--- nsaserefpolicy/policy/modules/system/udev.fc	2011-03-17 07:21:20.633851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/udev.fc	2011-03-17 07:21:03.040851003 +0000
@@ -22,3 +22,4 @@
 /usr/bin/udevinfo --	gen_context(system_u:object_r:udev_exec_t,s0)
 
 /var/run/PackageKit/udev(/.*)? gen_context(system_u:object_r:udev_var_run_t,s0)
+/var/run/libgpod(/.*)?	        gen_context(system_u:object_r:udev_var_run_t,s0)    
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/udev.if serefpolicy-3.7.19/policy/modules/system/udev.if
--- nsaserefpolicy/policy/modules/system/udev.if	2011-03-17 07:21:20.655851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/udev.if	2011-03-17 07:21:03.061851001 +0000
@@ -1,5 +1,31 @@
 ## <summary>Policy for udev.</summary>
 
+######################################
+## <summary>
+##  Execute udev in the udev domain, and
+##  allow the specified role the udev domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="role">
+##  <summary>
+##  The role to be allowed the iptables domain.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`udev_run',`
+    gen_require(`
+        type udev_t;
+    ')
+
+    udev_domtrans($1)
+    role $2 types udev_t;
+')
+
 ########################################
 ## <summary>
 ##	Send generic signals to udev.
@@ -88,8 +114,7 @@
 	')
 
 	kernel_search_proc($1)
-	allow $1 udev_t:file read_file_perms;
-	allow $1 udev_t:lnk_file read_lnk_file_perms;
+	ps_process_pattern($1, udev_t)
 ')
 
 ########################################
@@ -196,6 +221,25 @@
 
 ########################################
 ## <summary>
+##	Allow process to delete list of devices.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`udev_delete_db',`
+	gen_require(`
+		type udev_tbl_t;
+	')
+
+	dev_list_all_dev_nodes($1)
+	allow $1 udev_tbl_t:file unlink;
+')
+
+########################################
+## <summary>
 ##	Create, read, write, and delete
 ##	udev pid files.
 ## </summary>
@@ -213,3 +257,35 @@
 	files_search_var_lib($1)
 	manage_files_pattern($1, udev_var_run_t, udev_var_run_t)
 ')
+
+#######################################
+## <summary>
+##  Create a domain for processes
+##  which can be started by udev.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Type to be used as a domain.
+##  </summary>
+## </param>
+## <param name="entry_point">
+##  <summary>
+##  Type of the program to be used as an entry point to this domain.
+##  </summary>
+## </param>
+#
+interface(`udev_system_domain',`
+    gen_require(`
+        type udev_t;
+        role system_r;
+    ')
+
+    domain_type($1)
+    domain_entry_file($1, $2)
+
+    role system_r types $1;
+
+    domtrans_pattern(udev_t, $2, $1)
+
+    dontaudit $1 udev_t:unix_dgram_socket { read write };
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/udev.te serefpolicy-3.7.19/policy/modules/system/udev.te
--- nsaserefpolicy/policy/modules/system/udev.te	2011-03-17 07:21:20.429851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/udev.te	2012-04-24 11:04:32.752444724 +0000
@@ -36,6 +36,8 @@
 
 allow udev_t self:capability { chown dac_override dac_read_search fowner fsetid sys_admin mknod net_raw net_admin sys_nice sys_rawio sys_resource setuid setgid sys_nice sys_ptrace };
 dontaudit udev_t self:capability sys_tty_config;
+#kernel bug
+dontaudit udev_t self:capability sys_module;
 allow udev_t self:process ~{ setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow udev_t self:process { execmem setfscreate };
 allow udev_t self:fd use;
@@ -50,6 +52,7 @@
 allow udev_t self:unix_stream_socket connectto;
 allow udev_t self:netlink_kobject_uevent_socket create_socket_perms;
 allow udev_t self:rawip_socket create_socket_perms;
+allow udev_t self:netlink_socket create_socket_perms;
 
 allow udev_t udev_exec_t:file write;
 can_exec(udev_t, udev_exec_t)
@@ -77,6 +80,7 @@
 kernel_read_hotplug_sysctls(udev_t)
 kernel_read_modprobe_sysctls(udev_t)
 kernel_read_kernel_sysctls(udev_t)
+kernel_read_fs_sysctls(udev_t)
 kernel_rw_hotplug_sysctls(udev_t)
 kernel_rw_unix_dgram_sockets(udev_t)
 kernel_dgram_send(udev_t)
@@ -104,6 +108,8 @@
 domain_read_all_domains_state(udev_t)
 domain_dontaudit_ptrace_all_domains(udev_t) #pidof triggers these
 
+# console_init manages files in /etc/sysconfig
+files_manage_etc_files(udev_t)
 files_read_usr_files(udev_t)
 files_read_etc_runtime_files(udev_t)
 files_read_etc_files(udev_t)
@@ -111,6 +117,8 @@
 files_dontaudit_search_isid_type_dirs(udev_t)
 files_getattr_generic_locks(udev_t)
 files_search_mnt(udev_t)
+files_list_tmp(udev_t)
+files_exec_usr_files(udev_t)
 
 fs_getattr_all_fs(udev_t)
 fs_list_inotifyfs(udev_t)
@@ -138,6 +146,7 @@
 init_read_utmp(udev_t)
 init_dontaudit_write_utmp(udev_t)
 init_getattr_initctl(udev_t)
+init_stream_connect(udev_t)
 
 logging_search_logs(udev_t)
 logging_send_syslog_msg(udev_t)
@@ -211,6 +220,10 @@
 ')
 
 optional_policy(`
+	consolekit_read_pid_files(udev_t)
+')
+
+optional_policy(`
 	consoletype_exec(udev_t)
 ')
 
@@ -228,7 +241,12 @@
 ')
 
 optional_policy(`
+	gpsd_domtrans(udev_t)
+')
+
+optional_policy(`
 	lvm_domtrans(udev_t)
+	lvm_dgram_send(udev_t)
 ')
 
 optional_policy(`
@@ -254,6 +272,10 @@
 ')
 
 optional_policy(`
+	networkmanager_dbus_chat(udev_t)
+')
+
+optional_policy(`
 	openct_read_pid_files(udev_t)
 	openct_domtrans(udev_t)
 ')
@@ -268,6 +290,10 @@
 ')
 
 optional_policy(`
+	usbmuxd_domtrans(udev_t)
+')
+
+optional_policy(`
 	unconfined_signal(udev_t)
 ')
 
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/unconfined.fc serefpolicy-3.7.19/policy/modules/system/unconfined.fc
--- nsaserefpolicy/policy/modules/system/unconfined.fc	2011-03-17 07:21:20.508851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/unconfined.fc	2011-03-17 07:21:02.870851001 +0000
@@ -1,15 +1 @@
 # Add programs here which should not be confined by SELinux
-# e.g.:
-# /usr/local/bin/appsrv		--	gen_context(system_u:object_r:unconfined_exec_t,s0)
-# For the time being until someone writes a sane policy, we need initrc to transition to unconfined_t
-/usr/bin/valgrind 		--	gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-/usr/bin/vncserver		--	gen_context(system_u:object_r:unconfined_exec_t,s0)
-
-/usr/lib/ia32el/ia32x_loader 	--	gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-/usr/lib/openoffice\.org.*/program/.+\.bin -- gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-
-/usr/local/RealPlayer/realplay\.bin --	gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-
-ifdef(`distro_gentoo',`
-/usr/lib32/openoffice/program/[^/]+\.bin -- gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/unconfined.if serefpolicy-3.7.19/policy/modules/system/unconfined.if
--- nsaserefpolicy/policy/modules/system/unconfined.if	2011-03-17 07:21:20.529851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/unconfined.if	2011-04-29 15:10:13.599000005 +0000
@@ -12,27 +12,28 @@
 #
 interface(`unconfined_domain_noaudit',`
 	gen_require(`
-		type unconfined_t;
 		class dbus all_dbus_perms;
 		class nscd all_nscd_perms;
 		class passwd all_passwd_perms;
 	')
 
 	# Use any Linux capability.
-	allow $1 self:capability *;
-	allow $1 self:fifo_file manage_fifo_file_perms;
+	allow $1 self:capability all_capabilities;
+	allow $1 self:fifo_file { manage_fifo_file_perms relabelfrom relabelto };
 
 	# Transition to myself, to make get_ordered_context_list happy.
 	allow $1 self:process transition;
 
 	# Write access is for setting attributes under /proc/self/attr.
 	allow $1 self:file rw_file_perms;
+	allow $1 self:dir rw_dir_perms;
 
 	# Userland object managers
-	allow $1 self:nscd *;
-	allow $1 self:dbus *;
-	allow $1 self:passwd *;
-	allow $1 self:association *;
+	allow $1 self:nscd all_nscd_perms;
+	allow $1 self:dbus all_dbus_perms;
+	allow $1 self:passwd all_passwd_perms;
+	allow $1 self:association all_association_perms;
+	allow $1 self:socket_class_set create_socket_perms;
 
 	kernel_unconfined($1)
 	corenet_unconfined($1)
@@ -44,6 +45,16 @@
 	fs_unconfined($1)
 	selinux_unconfined($1)
 
+	domain_mmap_low_type($1)
+
+	mcs_file_read_all($1)
+
+	ubac_process_exempt($1)
+
+	tunable_policy(`mmap_low_allowed',`
+		domain_mmap_low($1)
+	')
+
 	tunable_policy(`allow_execheap',`
 		# Allow making the stack executable via mprotect.
 		allow $1 self:process execheap;
@@ -57,8 +68,8 @@
 
 	tunable_policy(`allow_execstack',`
 		# Allow making the stack executable via mprotect;
-		# execstack implies execmem;
-		allow $1 self:process { execstack execmem };
+		# execstack implies execmem; Bugzilla #211271
+		allow $1 self:process { execmem execstack };
 #		auditallow $1 self:process execstack;
 	')
 
@@ -69,6 +80,7 @@
 	optional_policy(`
 		# Communicate via dbusd.
 		dbus_system_bus_unconfined($1)
+		dbus_unconfined($1)
 	')
 
 	optional_policy(`
@@ -122,6 +134,10 @@
 ## </param>
 #
 interface(`unconfined_domain',`
+	gen_require(`
+		attribute unconfined_services;
+	')	
+
 	unconfined_domain_noaudit($1)
 
 	tunable_policy(`allow_execheap',`
@@ -179,411 +195,3 @@
 	refpolicywarn(`$0($1) has been deprecated.')
 ')
 
-########################################
-## <summary>
-##	Transition to the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_domtrans',`
-	gen_require(`
-		type unconfined_t, unconfined_exec_t;
-	')
-
-	domtrans_pattern($1, unconfined_exec_t, unconfined_t)
-')
-
-########################################
-## <summary>
-##	Execute specified programs in the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	The type of the process performing this action.
-##	</summary>
-## </param>
-## <param name="role">
-##	<summary>
-##	The role to allow the unconfined domain.
-##	</summary>
-## </param>
-#
-interface(`unconfined_run',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	unconfined_domtrans($1)
-	role $2 types unconfined_t;
-')
-
-########################################
-## <summary>
-##	Transition to the unconfined domain by executing a shell.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_shell_domtrans',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	corecmd_shell_domtrans($1, unconfined_t)
-	allow unconfined_t $1:fd use;
-	allow unconfined_t $1:fifo_file rw_file_perms;
-	allow unconfined_t $1:process sigchld;
-')
-
-########################################
-## <summary>
-##	Allow unconfined to execute the specified program in
-##	the specified domain.
-## </summary>
-## <desc>
-##	<p>
-##	Allow unconfined to execute the specified program in
-##	the specified domain.
-##	</p>
-##	<p>
-##	This is a interface to support third party modules
-##	and its use is not allowed in upstream reference
-##	policy.
-##	</p>
-## </desc>
-## <param name="domain">
-##	<summary>
-##	Domain to execute in.
-##	</summary>
-## </param>
-## <param name="entry_file">
-##	<summary>
-##	Domain entry point file.
-##	</summary>
-## </param>
-#
-interface(`unconfined_domtrans_to',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	domtrans_pattern(unconfined_t,$2,$1)
-')
-
-########################################
-## <summary>
-##	Allow unconfined to execute the specified program in
-##	the specified domain.  Allow the specified domain the
-##	unconfined role and use of unconfined user terminals.
-## </summary>
-## <desc>
-##	<p>
-##	Allow unconfined to execute the specified program in
-##	the specified domain.  Allow the specified domain the
-##	unconfined role and use of unconfined user terminals.
-##	</p>
-##	<p>
-##	This is a interface to support third party modules
-##	and its use is not allowed in upstream reference
-##	policy.
-##	</p>
-## </desc>
-## <param name="domain">
-##	<summary>
-##	Domain to execute in.
-##	</summary>
-## </param>
-## <param name="entry_file">
-##	<summary>
-##	Domain entry point file.
-##	</summary>
-## </param>
-#
-interface(`unconfined_run_to',`
-	gen_require(`
-		type unconfined_t;
-		role unconfined_r;
-	')
-
-	domtrans_pattern(unconfined_t,$2,$1)
-	role unconfined_r types $1;
-	userdom_use_user_terminals($1)
-')
-
-########################################
-## <summary>
-##	Inherit file descriptors from the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_use_fds',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:fd use;
-')
-
-########################################
-## <summary>
-##	Send a SIGCHLD signal to the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_sigchld',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:process sigchld;
-')
-
-########################################
-## <summary>
-##	Send a SIGNULL signal to the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_signull',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:process signull;
-')
-
-########################################
-## <summary>
-##	Send generic signals to the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_signal',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:process signal;
-')
-
-########################################
-## <summary>
-##	Read unconfined domain unnamed pipes.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_read_pipes',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:fifo_file read_fifo_file_perms;
-')
-
-########################################
-## <summary>
-##	Do not audit attempts to read unconfined domain unnamed pipes.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dontaudit_read_pipes',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	dontaudit $1 unconfined_t:fifo_file read;
-')
-
-########################################
-## <summary>
-##	Read and write unconfined domain unnamed pipes.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_rw_pipes',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:fifo_file rw_fifo_file_perms;
-')
-
-########################################
-## <summary>
-##	Do not audit attempts to read and write
-##	unconfined domain unnamed pipes.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain to not audit.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dontaudit_rw_pipes',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	dontaudit $1 unconfined_t:fifo_file rw_file_perms;
-')
-
-########################################
-## <summary>
-##	Connect to the unconfined domain using
-##	a unix domain stream socket.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_stream_connect',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:unix_stream_socket connectto;
-')
-
-########################################
-## <summary>
-##	Do not audit attempts to read or write
-##	unconfined domain tcp sockets.
-## </summary>
-## <desc>
-##	<p>
-##	Do not audit attempts to read or write
-##	unconfined domain tcp sockets.
-##	</p>
-##	<p>
-##	This interface was added due to a broken
-##	symptom in ldconfig.
-##	</p>
-## </desc>
-## <param name="domain">
-##	<summary>
-##	Domain to not audit.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dontaudit_rw_tcp_sockets',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	dontaudit $1 unconfined_t:tcp_socket { read write };
-')
-
-########################################
-## <summary>
-##	Create keys for the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_create_keys',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:key create;
-')
-
-########################################
-## <summary>
-##	Send messages to the unconfined domain over dbus.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dbus_send',`
-	gen_require(`
-		type unconfined_t;
-		class dbus send_msg;
-	')
-
-	allow $1 unconfined_t:dbus send_msg;
-')
-
-########################################
-## <summary>
-##	Send and receive messages from
-##	unconfined_t over dbus.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dbus_chat',`
-	gen_require(`
-		type unconfined_t;
-		class dbus send_msg;
-	')
-
-	allow $1 unconfined_t:dbus send_msg;
-	allow unconfined_t $1:dbus send_msg;
-')
-
-########################################
-## <summary>
-##	Connect to the the unconfined DBUS
-##	for service (acquire_svc).
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dbus_connect',`
-	gen_require(`
-		type unconfined_t;
-		class dbus acquire_svc;
-	')
-
-	allow $1 unconfined_t:dbus acquire_svc;
-')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/unconfined.te serefpolicy-3.7.19/policy/modules/system/unconfined.te
--- nsaserefpolicy/policy/modules/system/unconfined.te	2011-03-17 07:21:20.619851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/unconfined.te	2011-03-17 07:21:02.979851000 +0000
@@ -5,227 +5,5 @@
 #
 # Declarations
 #
+attribute unconfined_services;
 
-# usage in this module of types created by these
-# calls is not correct, however we dont currently
-# have another method to add access to these types
-userdom_base_user_template(unconfined)
-userdom_manage_home_role(unconfined_r, unconfined_t)
-userdom_manage_tmp_role(unconfined_r, unconfined_t)
-userdom_manage_tmpfs_role(unconfined_r, unconfined_t)
-
-type unconfined_exec_t;
-init_system_domain(unconfined_t, unconfined_exec_t)
-
-type unconfined_execmem_t;
-type unconfined_execmem_exec_t;
-init_system_domain(unconfined_execmem_t, unconfined_execmem_exec_t)
-role unconfined_r types unconfined_execmem_t;
-
-########################################
-#
-# Local policy
-#
-
-domtrans_pattern(unconfined_t, unconfined_execmem_exec_t, unconfined_execmem_t)
-
-files_create_boot_flag(unconfined_t)
-
-mcs_killall(unconfined_t)
-mcs_ptrace_all(unconfined_t)
-
-init_run_daemon(unconfined_t, unconfined_r)
-
-libs_run_ldconfig(unconfined_t, unconfined_r)
-
-logging_send_syslog_msg(unconfined_t)
-logging_run_auditctl(unconfined_t, unconfined_r)
-
-mount_run_unconfined(unconfined_t, unconfined_r)
-
-seutil_run_setfiles(unconfined_t, unconfined_r)
-seutil_run_semanage(unconfined_t, unconfined_r)
-
-unconfined_domain(unconfined_t)
-
-userdom_user_home_dir_filetrans_user_home_content(unconfined_t, { dir file lnk_file fifo_file sock_file })
-
-ifdef(`distro_gentoo',`
-	seutil_run_runinit(unconfined_t, unconfined_r)
-	seutil_init_script_run_runinit(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	ada_domtrans(unconfined_t)
-')
-
-optional_policy(`
-	apache_run_helper(unconfined_t, unconfined_r)
-	apache_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	bind_run_ndc(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	bootloader_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	cron_unconfined_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	init_dbus_chat_script(unconfined_t)
-
-	dbus_stub(unconfined_t)
-
-	optional_policy(`
-		avahi_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		bluetooth_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		consolekit_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		cups_dbus_chat_config(unconfined_t)
-	')
-
-	optional_policy(`
-		hal_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		networkmanager_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		oddjob_dbus_chat(unconfined_t)
-	')
-')
-
-optional_policy(`
-	firstboot_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	ftp_run_ftpdctl(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	inn_domtrans(unconfined_t)
-')
-
-optional_policy(`
-	java_run_unconfined(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	lpd_run_checkpc(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	modutils_run_update_mods(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	mono_domtrans(unconfined_t)
-')
-
-optional_policy(`
-	mta_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	oddjob_domtrans_mkhomedir(unconfined_t)
-')
-
-optional_policy(`
-	prelink_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	portmap_run_helper(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	postfix_run_map(unconfined_t, unconfined_r)
-	# cjp: this should probably be removed:
-	postfix_domtrans_master(unconfined_t)
-')
-
-optional_policy(`
-	pyzor_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	# cjp: this should probably be removed:
-	rpc_domtrans_nfsd(unconfined_t)
-')
-
-optional_policy(`
-	rpm_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	samba_run_net(unconfined_t, unconfined_r)
-	samba_run_winbind_helper(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	spamassassin_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	sysnet_run_dhcpc(unconfined_t, unconfined_r)
-	sysnet_dbus_chat_dhcpc(unconfined_t)
-')
-
-optional_policy(`
-	tzdata_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	usermanage_run_admin_passwd(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	vpn_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	webalizer_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	wine_domtrans(unconfined_t)
-')
-
-optional_policy(`
-	xserver_domtrans(unconfined_t)
-')
-
-########################################
-#
-# Unconfined Execmem Local policy
-#
-
-allow unconfined_execmem_t self:process { execstack execmem };
-unconfined_domain_noaudit(unconfined_execmem_t)
-
-optional_policy(`
-	dbus_stub(unconfined_execmem_t)
-
-	init_dbus_chat_script(unconfined_execmem_t)
-	unconfined_dbus_chat(unconfined_execmem_t)
-
-	optional_policy(`
-		hal_dbus_chat(unconfined_execmem_t)
-	')
-')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/userdomain.fc serefpolicy-3.7.19/policy/modules/system/userdomain.fc
--- nsaserefpolicy/policy/modules/system/userdomain.fc	2011-03-17 07:21:20.546851000 +0000
+++ serefpolicy-3.7.19/policy/modules/system/userdomain.fc	2011-11-21 14:48:10.615689980 +0000
@@ -1,4 +1,19 @@
 HOME_DIR	-d	gen_context(system_u:object_r:user_home_dir_t,s0-mls_systemhigh)
+HOME_DIR	-l	gen_context(system_u:object_r:user_home_dir_t,s0-mls_systemhigh)
 HOME_DIR/.+		gen_context(system_u:object_r:user_home_t,s0)
-
 /tmp/gconfd-USER -d	gen_context(system_u:object_r:user_tmp_t,s0)
+/root(/.*)?	 	gen_context(system_u:object_r:admin_home_t,s0)
+/root/\.cert(/.*)?	gen_context(system_u:object_r:home_cert_t,s0)
+/root/\.debug(/.*)?    <<none>>
+/dev/shm/pulse-shm.*	gen_context(system_u:object_r:user_tmpfs_t,s0)
+/dev/shm/mono.*		gen_context(system_u:object_r:user_tmpfs_t,s0)
+HOME_DIR/bin(/.*)?	gen_context(system_u:object_r:home_bin_t,s0)
+HOME_DIR/local/bin(/.*)?	gen_context(system_u:object_r:home_bin_t,s0)
+HOME_DIR/Audio(/.*)?    gen_context(system_u:object_r:audio_home_t,s0)
+HOME_DIR/Music(/.*)?	gen_context(system_u:object_r:audio_home_t,s0)
+HOME_DIR/\.cert(/.*)?	gen_context(system_u:object_r:home_cert_t,s0)
+HOME_DIR/.kde/share/apps/networkmanagement/certificates(/.*)?   gen_context(system_u:object_r:home_cert_t,s0)
+HOME_DIR/\.pki(/.*)?		gen_context(system_u:object_r:home_cert_t,s0)
+HOME_DIR/\.gvfs(/.*)?	<<none>>
+HOME_DIR/\.debug(/.*)?	<<none>>
+
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/userdomain.if serefpolicy-3.7.19/policy/modules/system/userdomain.if
--- nsaserefpolicy/policy/modules/system/userdomain.if	2011-03-17 07:21:20.495851003 +0000
+++ serefpolicy-3.7.19/policy/modules/system/userdomain.if	2012-08-08 10:11:58.138683441 +0000
@@ -30,8 +30,9 @@
 	')
 
 	attribute $1_file_type;
+	attribute $1_usertype;
 
-	type $1_t, userdomain;
+	type $1_t, userdomain, $1_usertype;
 	domain_type($1_t)
 	corecmd_shell_entry_type($1_t)
 	corecmd_bin_entry_type($1_t)
@@ -43,69 +44,90 @@
 	term_user_pty($1_t, user_devpts_t)
 
 	term_user_tty($1_t, user_tty_device_t)
+	term_dontaudit_getattr_generic_ptys($1_t)
 
-	allow $1_t self:process { signal_perms getsched setsched share getpgid setpgid setcap getsession getattr };
-	allow $1_t self:fd use;
-	allow $1_t self:fifo_file rw_fifo_file_perms;
-	allow $1_t self:unix_dgram_socket { create_socket_perms sendto };
-	allow $1_t self:unix_stream_socket { create_stream_socket_perms connectto };
-	allow $1_t self:shm create_shm_perms;
-	allow $1_t self:sem create_sem_perms;
-	allow $1_t self:msgq create_msgq_perms;
-	allow $1_t self:msg { send receive };
-	allow $1_t self:context contains;
-	dontaudit $1_t self:socket create;
+	allow $1_usertype $1_usertype:process { ptrace signal_perms getsched setsched share getpgid setpgid getcap setcap getsession getattr };
+	allow $1_usertype $1_usertype:fd use;
+	allow $1_usertype $1_t:key { create view read write search link setattr };
+
+	allow $1_usertype $1_usertype:fifo_file rw_fifo_file_perms;
+	allow $1_usertype $1_usertype:unix_dgram_socket { create_socket_perms sendto };
+	allow $1_usertype $1_usertype:unix_stream_socket { create_stream_socket_perms connectto };
+	allow $1_usertype $1_usertype:shm create_shm_perms;
+	allow $1_usertype $1_usertype:sem create_sem_perms;
+	allow $1_usertype $1_usertype:msgq create_msgq_perms;
+	allow $1_usertype $1_usertype:msg { send receive };
+	allow $1_usertype $1_usertype:context contains;
+	dontaudit $1_usertype $1_usertype:socket create;
 
-	allow $1_t user_devpts_t:chr_file { setattr rw_chr_file_perms };
-	term_create_pty($1_t, user_devpts_t)
+	allow $1_usertype user_devpts_t:chr_file { setattr rw_chr_file_perms };
+	term_create_pty($1_usertype, user_devpts_t)
 	# avoid annoying messages on terminal hangup on role change
-	dontaudit $1_t user_devpts_t:chr_file ioctl;
+	dontaudit $1_usertype user_devpts_t:chr_file ioctl;
 
-	allow $1_t user_tty_device_t:chr_file { setattr rw_chr_file_perms };
+	allow $1_usertype user_tty_device_t:chr_file { setattr rw_chr_file_perms };
 	# avoid annoying messages on terminal hangup on role change
-	dontaudit $1_t user_tty_device_t:chr_file ioctl;
+	dontaudit $1_usertype user_tty_device_t:chr_file ioctl;
+
+	application_exec_all($1_usertype)
 
-	kernel_read_kernel_sysctls($1_t)
-	kernel_dontaudit_list_unlabeled($1_t)
-	kernel_dontaudit_getattr_unlabeled_files($1_t)
-	kernel_dontaudit_getattr_unlabeled_symlinks($1_t)
-	kernel_dontaudit_getattr_unlabeled_pipes($1_t)
-	kernel_dontaudit_getattr_unlabeled_sockets($1_t)
-	kernel_dontaudit_getattr_unlabeled_blk_files($1_t)
-	kernel_dontaudit_getattr_unlabeled_chr_files($1_t)
+	kernel_read_kernel_sysctls($1_usertype)
+	kernel_read_all_sysctls($1_usertype)
+	kernel_dontaudit_list_unlabeled($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_files($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_symlinks($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_pipes($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_sockets($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_blk_files($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_chr_files($1_usertype)
+	kernel_dontaudit_list_proc($1_usertype)
 
-	dev_dontaudit_getattr_all_blk_files($1_t)
-	dev_dontaudit_getattr_all_chr_files($1_t)
+	dev_dontaudit_getattr_all_blk_files($1_usertype)
+	dev_dontaudit_getattr_all_chr_files($1_usertype)
+	dev_getattr_mtrr_dev($1_t)
 
 	# When the user domain runs ps, there will be a number of access
 	# denials when ps tries to search /proc. Do not audit these denials.
-	domain_dontaudit_read_all_domains_state($1_t)
-	domain_dontaudit_getattr_all_domains($1_t)
-	domain_dontaudit_getsession_all_domains($1_t)
-
-	files_read_etc_files($1_t)
-	files_read_etc_runtime_files($1_t)
-	files_read_usr_files($1_t)
+	domain_dontaudit_read_all_domains_state($1_usertype)
+	domain_dontaudit_getattr_all_domains($1_usertype)
+	domain_dontaudit_getsession_all_domains($1_usertype)
+
+	files_read_etc_files($1_usertype)
+	files_list_mnt($1_usertype)
+	files_read_mnt_files($1_usertype)
+	files_read_etc_runtime_files($1_usertype)
+	files_read_usr_files($1_usertype)
+	files_read_usr_src_files($1_usertype)
 	# Read directories and files with the readable_t type.
 	# This type is a general type for "world"-readable files.
-	files_list_world_readable($1_t)
-	files_read_world_readable_files($1_t)
-	files_read_world_readable_symlinks($1_t)
-	files_read_world_readable_pipes($1_t)
-	files_read_world_readable_sockets($1_t)
+	files_list_world_readable($1_usertype)
+	files_read_world_readable_files($1_usertype)
+	files_read_world_readable_symlinks($1_usertype)
+	files_read_world_readable_pipes($1_usertype)
+	files_read_world_readable_sockets($1_usertype)
 	# old broswer_domain():
-	files_dontaudit_list_non_security($1_t)
-	files_dontaudit_getattr_non_security_files($1_t)
-	files_dontaudit_getattr_non_security_symlinks($1_t)
-	files_dontaudit_getattr_non_security_pipes($1_t)
-	files_dontaudit_getattr_non_security_sockets($1_t)
+	files_dontaudit_getattr_all_dirs($1_usertype)
+	files_dontaudit_list_non_security($1_usertype)
+	files_dontaudit_getattr_all_files($1_usertype)
+	files_dontaudit_getattr_non_security_symlinks($1_usertype)
+	files_dontaudit_getattr_non_security_pipes($1_usertype)
+	files_dontaudit_getattr_non_security_sockets($1_usertype)
+
+	files_exec_usr_files($1_t)
+
+	fs_list_cgroup_dirs($1_usertype)
+	fs_dontaudit_rw_cgroup_files($1_usertype)
 
-	libs_exec_ld_so($1_t)
+	storage_rw_fuse($1_usertype)
 
-	miscfiles_read_localization($1_t)
-	miscfiles_read_certs($1_t)
+	auth_use_nsswitch($1_usertype)
 
-	sysnet_read_config($1_t)
+	libs_exec_ld_so($1_usertype)
+
+	miscfiles_read_certs($1_usertype)
+	miscfiles_read_localization($1_usertype)
+	miscfiles_read_man_pages($1_usertype)
+	miscfiles_read_public_files($1_usertype)
 
 	tunable_policy(`allow_execmem',`
 		# Allow loading DSOs that require executable stack.
@@ -116,6 +138,20 @@
 		# Allow making the stack executable via mprotect.
 		allow $1_t self:process execstack;
 	')
+
+	optional_policy(`
+		abrt_stream_connect($1_usertype)
+    ')
+
+	optional_policy(`
+		fs_list_cgroup_dirs($1_usertype)
+	')
+
+	optional_policy(`
+		ssh_rw_stream_sockets($1_usertype)
+		ssh_delete_tmp($1_t)
+		ssh_signal($1_t)
+	')
 ')
 
 #######################################
@@ -147,6 +183,7 @@
 interface(`userdom_ro_home_role',`
 	gen_require(`
 		type user_home_t, user_home_dir_t;
+		attribute userhomereader;
 	')
 
 	role $1 types { user_home_t user_home_dir_t };
@@ -157,6 +194,7 @@
 	#
 
 	type_member $2 user_home_dir_t:dir user_home_dir_t;
+	typeattribute $2 userhomereader;
 
 	# read-only home directory
 	allow $2 user_home_dir_t:dir list_dir_perms;
@@ -168,27 +206,6 @@
 	read_sock_files_pattern($2, { user_home_t user_home_dir_t }, user_home_t)
 	files_list_home($2)
 
-	tunable_policy(`use_nfs_home_dirs',`
-		fs_list_nfs($2)
-		fs_read_nfs_files($2)
-		fs_read_nfs_symlinks($2)
-		fs_read_nfs_named_sockets($2)
-		fs_read_nfs_named_pipes($2)
-	',`
-		fs_dontaudit_list_nfs($2)
-		fs_dontaudit_read_nfs_files($2)
-	')
-
-	tunable_policy(`use_samba_home_dirs',`
-		fs_list_cifs($2)
-		fs_read_cifs_files($2)
-		fs_read_cifs_symlinks($2)
-		fs_read_cifs_named_sockets($2)
-		fs_read_cifs_named_pipes($2)
-	',`
-		fs_dontaudit_list_cifs($2)
-		fs_dontaudit_read_cifs_files($2)
-	')
 ')
 
 #######################################
@@ -220,9 +237,10 @@
 interface(`userdom_manage_home_role',`
 	gen_require(`
 		type user_home_t, user_home_dir_t;
+		attribute user_home_type;
 	')
 
-	role $1 types { user_home_t user_home_dir_t };
+	role $1 types { user_home_type user_home_dir_t };
 
 	##############################
 	#
@@ -232,17 +250,21 @@
 	type_member $2 user_home_dir_t:dir user_home_dir_t;
 
 	# full control of the home directory
+	allow $2 user_home_t:dir mounton;
 	allow $2 user_home_t:file entrypoint;
-	manage_dirs_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	manage_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	manage_lnk_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	manage_sock_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	manage_fifo_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_dirs_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_lnk_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_sock_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_fifo_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
+
+	allow $2 user_home_type:dir_file_class_set { relabelto relabelfrom };
+	allow $2 user_home_dir_t:lnk_file read_lnk_file_perms;
+	manage_dirs_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	manage_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	manage_lnk_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	manage_sock_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	manage_fifo_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_dirs_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_lnk_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_sock_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_fifo_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
 	filetrans_pattern($2, user_home_dir_t, user_home_t, { dir file lnk_file sock_file fifo_file })
 	files_list_home($2)
 
@@ -250,25 +272,23 @@
 	allow $2 user_home_dir_t:dir { manage_dir_perms relabel_dir_perms };
 
 	tunable_policy(`use_nfs_home_dirs',`
+		fs_mount_nfs($2)
+		fs_mounton_nfs($2)
 		fs_manage_nfs_dirs($2)
 		fs_manage_nfs_files($2)
 		fs_manage_nfs_symlinks($2)
 		fs_manage_nfs_named_sockets($2)
 		fs_manage_nfs_named_pipes($2)
-	',`
-		fs_dontaudit_manage_nfs_dirs($2)
-		fs_dontaudit_manage_nfs_files($2)
 	')
 
 	tunable_policy(`use_samba_home_dirs',`
+		fs_mount_cifs($2)
+		fs_mounton_cifs($2)
 		fs_manage_cifs_dirs($2)
 		fs_manage_cifs_files($2)
 		fs_manage_cifs_symlinks($2)
 		fs_manage_cifs_named_sockets($2)
 		fs_manage_cifs_named_pipes($2)
-	',`
-		fs_dontaudit_manage_cifs_dirs($2)
-		fs_dontaudit_manage_cifs_files($2)
 	')
 ')
 
@@ -303,6 +323,27 @@
 	manage_sock_files_pattern($2, user_tmp_t, user_tmp_t)
 	manage_fifo_files_pattern($2, user_tmp_t, user_tmp_t)
 	files_tmp_filetrans($2, user_tmp_t, { dir file lnk_file sock_file fifo_file })
+	relabel_files_pattern($2, user_tmp_t, user_tmp_t)
+')
+
+#######################################
+## <summary>
+##	Execute user bin files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_exec_user_bin_files',`
+	gen_require(`
+		attribute user_home_type;
+		type home_bin_t, user_home_dir_t;
+	')
+
+	exec_files_pattern($1, { user_home_dir_t user_home_type }, home_bin_t)
+	files_search_home($1)
 ')
 
 #######################################
@@ -322,6 +363,7 @@
 	')
 
 	exec_files_pattern($1, user_tmp_t, user_tmp_t)
+	dontaudit $1 user_tmp_t:sock_file execute;
 	files_search_tmp($1)
 ')
 
@@ -368,46 +410,41 @@
 
 #######################################
 ## <summary>
-##	The template allowing the user basic
+##	The interface allowing the user basic
 ##	network permissions
 ## </summary>
-## <param name="userdomain_prefix">
+## <param name="userdomain">
 ##	<summary>
-##	The prefix of the user domain (e.g., user
-##	is the prefix for user_t).
+##	The user domain 
 ##	</summary>
 ## </param>
 ## <rolebase/>
 #
-template(`userdom_basic_networking_template',`
-	gen_require(`
-		type $1_t;
-	')
+interface(`userdom_basic_networking',`
 
-	allow $1_t self:tcp_socket create_stream_socket_perms;
-	allow $1_t self:udp_socket create_socket_perms;
+	allow $1 self:tcp_socket create_stream_socket_perms;
+	allow $1 self:udp_socket create_socket_perms;
 
-	corenet_all_recvfrom_unlabeled($1_t)
-	corenet_all_recvfrom_netlabel($1_t)
-	corenet_tcp_sendrecv_generic_if($1_t)
-	corenet_udp_sendrecv_generic_if($1_t)
-	corenet_tcp_sendrecv_generic_node($1_t)
-	corenet_udp_sendrecv_generic_node($1_t)
-	corenet_tcp_sendrecv_all_ports($1_t)
-	corenet_udp_sendrecv_all_ports($1_t)
-	corenet_tcp_connect_all_ports($1_t)
-	corenet_sendrecv_all_client_packets($1_t)
-
-	corenet_all_recvfrom_labeled($1_t, $1_t)
+	corenet_all_recvfrom_unlabeled($1)
+	corenet_all_recvfrom_netlabel($1)
+	corenet_tcp_sendrecv_generic_if($1)
+	corenet_udp_sendrecv_generic_if($1)
+	corenet_tcp_sendrecv_generic_node($1)
+	corenet_udp_sendrecv_generic_node($1)
+	corenet_tcp_sendrecv_all_ports($1)
+	corenet_udp_sendrecv_all_ports($1)
+	corenet_tcp_connect_all_ports($1)
+	corenet_sendrecv_all_client_packets($1)
 
 	optional_policy(`
-		init_tcp_recvfrom_all_daemons($1_t)
-		init_udp_recvfrom_all_daemons($1_t)
+		init_tcp_recvfrom_all_daemons($1)
+		init_udp_recvfrom_all_daemons($1)
 	')
 
 	optional_policy(`
-		ipsec_match_default_spd($1_t)
+		ipsec_match_default_spd($1)
 	')
+
 ')
 
 #######################################
@@ -438,6 +475,7 @@
 	dev_dontaudit_rw_dri($1_t)
 	# GNOME checks for usb and other devices:
 	dev_rw_usbfs($1_t)
+	dev_rw_generic_usb_dev($1_t)
 
 	xserver_user_x_domain_template($1, $1_t, user_tmpfs_t)
 	xserver_xsession_entry_type($1_t)
@@ -498,7 +536,7 @@
 		attribute unpriv_userdomain;
 	')
 
-	userdom_basic_networking_template($1)
+	userdom_basic_networking($1_usertype)
 
 	##############################
 	#
@@ -508,71 +546,82 @@
 	# evolution and gnome-session try to create a netlink socket
 	dontaudit $1_t self:netlink_socket { create ioctl read getattr write setattr append bind connect getopt setopt shutdown };
 	dontaudit $1_t self:netlink_route_socket { create ioctl read getattr write setattr append bind connect getopt setopt shutdown nlmsg_read nlmsg_write };
+	allow $1_t self:netlink_kobject_uevent_socket create_socket_perms;
+	allow $1_t self:socket create_socket_perms;
 
-	allow $1_t unpriv_userdomain:fd use;
+	allow $1_usertype unpriv_userdomain:fd use;
 
-	kernel_read_system_state($1_t)
-	kernel_read_network_state($1_t)
-	kernel_read_net_sysctls($1_t)
+	kernel_read_system_state($1_usertype)
+	kernel_read_network_state($1_usertype)
+	kernel_read_net_sysctls($1_usertype)
 	# Very permissive allowing every domain to see every type:
-	kernel_get_sysvipc_info($1_t)
+	kernel_get_sysvipc_info($1_usertype)
 	# Find CDROM devices:
-	kernel_read_device_sysctls($1_t)
-
-	corecmd_exec_bin($1_t)
+	kernel_read_device_sysctls($1_usertype)
+	kernel_request_load_module($1_usertype)
+	kernel_read_software_raid_state($1_usertype)
+
+	corenet_udp_bind_generic_node($1_usertype)
+	corenet_udp_bind_generic_port($1_usertype)
+	# needed by x-forwarding
+	corenet_tcp_sendrecv_loopback_if($1_usertype)
+
+	dev_read_rand($1_usertype)
+	dev_write_sound($1_usertype)
+	dev_read_sound($1_usertype)
+	dev_read_sound_mixer($1_usertype)
+	dev_write_sound_mixer($1_usertype)
 
-	corenet_udp_bind_generic_node($1_t)
-	corenet_udp_bind_generic_port($1_t)
-
-	dev_read_rand($1_t)
-	dev_write_sound($1_t)
-	dev_read_sound($1_t)
-	dev_read_sound_mixer($1_t)
-	dev_write_sound_mixer($1_t)
-
-	files_exec_etc_files($1_t)
-	files_search_locks($1_t)
+	files_exec_etc_files($1_usertype)
+	files_search_locks($1_usertype)
 	# Check to see if cdrom is mounted
-	files_search_mnt($1_t)
+	files_search_mnt($1_usertype)
 	# cjp: perhaps should cut back on file reads:
-	files_read_var_files($1_t)
-	files_read_var_symlinks($1_t)
-	files_read_generic_spool($1_t)
-	files_read_var_lib_files($1_t)
+	files_read_var_files($1_usertype)
+	files_read_var_symlinks($1_usertype)
+	files_read_var_lib_symlinks($1_usertype)
+	files_read_generic_spool($1_usertype)
+	files_read_var_lib_files($1_usertype)
 	# Stat lost+found.
-	files_getattr_lost_found_dirs($1_t)
+	files_getattr_lost_found_dirs($1_usertype)
+	files_read_config_files($1_usertype)
+	fs_read_noxattr_fs_files($1_usertype)
+	fs_read_noxattr_fs_symlinks($1_usertype)
+	fs_rw_cgroup_files($1_usertype)
+
+	logging_send_syslog_msg($1_usertype)
+	logging_send_audit_msgs($1_usertype)
+	selinux_get_enforce_mode($1_usertype)
 
 	# cjp: some of this probably can be removed
-	selinux_get_fs_mount($1_t)
-	selinux_validate_context($1_t)
-	selinux_compute_access_vector($1_t)
-	selinux_compute_create_context($1_t)
-	selinux_compute_relabel_context($1_t)
-	selinux_compute_user_contexts($1_t)
+	selinux_get_fs_mount($1_usertype)
+	selinux_validate_context($1_usertype)
+	selinux_compute_access_vector($1_usertype)
+	selinux_compute_create_context($1_usertype)
+	selinux_compute_relabel_context($1_usertype)
+	selinux_compute_user_contexts($1_usertype)
 
 	# for eject
-	storage_getattr_fixed_disk_dev($1_t)
+	storage_getattr_fixed_disk_dev($1_usertype)
 
-	auth_use_nsswitch($1_t)
-	auth_read_login_records($1_t)
-	auth_search_pam_console_data($1_t)
+	auth_read_login_records($1_usertype)
 	auth_run_pam($1_t,$1_r)
 	auth_run_utempter($1_t,$1_r)
 
-	init_read_utmp($1_t)
+	init_read_utmp($1_usertype)
 
-	seutil_read_file_contexts($1_t)
-	seutil_read_default_contexts($1_t)
+	seutil_read_file_contexts($1_usertype)
+	seutil_read_default_contexts($1_usertype)
 	seutil_run_newrole($1_t,$1_r)
 	seutil_exec_checkpolicy($1_t)
-	seutil_exec_setfiles($1_t)
+	seutil_exec_setfiles($1_usertype)
 	# for when the network connection is killed
 	# this is needed when a login role can change
 	# to this one.
 	seutil_dontaudit_signal_newrole($1_t)
 
 	tunable_policy(`user_direct_mouse',`
-		dev_read_mouse($1_t)
+		dev_read_mouse($1_usertype)
 	')
 
 	tunable_policy(`user_ttyfile_stat',`
@@ -580,65 +629,108 @@
 	')
 
 	optional_policy(`
-		alsa_read_rw_config($1_t)
+		alsa_read_rw_config($1_usertype)
 	')
 
 	optional_policy(`
 		# Allow graphical boot to check battery lifespan
-		apm_stream_connect($1_t)
+		apm_stream_connect($1_usertype)
+	')
+
+	optional_policy(`
+		canna_stream_connect($1_usertype)
 	')
 
 	optional_policy(`
-		canna_stream_connect($1_t)
+		chrome_role($1_r, $1_usertype)
 	')
 
 	optional_policy(`
-		dbus_system_bus_client($1_t)
+		dbus_system_bus_client($1_usertype)
+
+		allow $1_usertype $1_usertype:dbus  send_msg;
+
+		optional_policy(`
+			avahi_dbus_chat($1_usertype)
+		')
 
 		optional_policy(`
-			bluetooth_dbus_chat($1_t)
+			policykit_dbus_chat($1_usertype)
 		')
 
 		optional_policy(`
-			evolution_dbus_chat($1_t)
-			evolution_alarm_dbus_chat($1_t)
+			bluetooth_dbus_chat($1_usertype)
 		')
 
 		optional_policy(`
-			cups_dbus_chat_config($1_t)
+			consolekit_dbus_chat($1_usertype)
+			consolekit_read_log($1_usertype)
 		')
 
 		optional_policy(`
-			hal_dbus_chat($1_t)
+			devicekit_dbus_chat($1_usertype)
+			devicekit_dbus_chat_power($1_usertype)
+			devicekit_dbus_chat_disk($1_usertype)
 		')
 
 		optional_policy(`
-			networkmanager_dbus_chat($1_t)
+			evolution_dbus_chat($1_usertype)
+			evolution_alarm_dbus_chat($1_usertype)
 		')
+
+		optional_policy(`
+			gnome_dbus_chat_gconfdefault($1_usertype)
+		')
+
+		optional_policy(`
+			hal_dbus_chat($1_usertype)
+		')
+
+		optional_policy(`
+			modemmanager_dbus_chat($1_usertype)
+		')
+
+		optional_policy(`
+			networkmanager_dbus_chat($1_usertype)
+			networkmanager_read_var_lib_files($1_usertype)
+		')
+
+		optional_policy(`
+			vpn_dbus_chat($1_usertype)
+		')
+	')
+
+	optional_policy(`
+		git_session_role($1_r, $1_usertype)
 	')
 
 	optional_policy(`
-		inetd_use_fds($1_t)
-		inetd_rw_tcp_sockets($1_t)
+		inetd_use_fds($1_usertype)
+		inetd_rw_tcp_sockets($1_usertype)
 	')
 
 	optional_policy(`
-		inn_read_config($1_t)
-		inn_read_news_lib($1_t)
-		inn_read_news_spool($1_t)
+		inn_read_config($1_usertype)
+		inn_read_news_lib($1_usertype)
+		inn_read_news_spool($1_usertype)
 	')
 
 	optional_policy(`
-		locate_read_lib_files($1_t)
+		locate_read_lib_files($1_usertype)
 	')
 
 	# for running depmod as part of the kernel packaging process
 	optional_policy(`
-		modutils_read_module_config($1_t)
+		modutils_read_module_config($1_usertype)
+	')
+
+	optional_policy(`
+		mta_rw_spool($1_usertype)
+		mta_manage_queue($1_usertype)
 	')
 
 	optional_policy(`
-		mta_rw_spool($1_t)
+		nsplugin_role($1_r, $1_usertype)
 	')
 
 	optional_policy(`
@@ -649,41 +741,50 @@
 
 	optional_policy(`
 		# to allow monitoring of pcmcia status
-		pcmcia_read_pid($1_t)
+		pcmcia_read_pid($1_usertype)
 	')
 
 	optional_policy(`
-		pcscd_read_pub_files($1_t)
-		pcscd_stream_connect($1_t)
+		pcscd_read_pub_files($1_usertype)
+		pcscd_stream_connect($1_usertype)
 	')
 
 	optional_policy(`
 		tunable_policy(`allow_user_postgresql_connect',`
-			postgresql_stream_connect($1_t)
-			postgresql_tcp_connect($1_t)
+			postgresql_stream_connect($1_usertype)
+			postgresql_tcp_connect($1_usertype)
 		')
 	')
 
 	optional_policy(`
-		resmgr_stream_connect($1_t)
+		resmgr_stream_connect($1_usertype)
+	')
+
+	optional_policy(`
+		rpc_dontaudit_getattr_exports($1_usertype)
+		rpc_manage_nfs_rw_content($1_usertype)
 	')
 
 	optional_policy(`
-		rpc_dontaudit_getattr_exports($1_t)
-		rpc_manage_nfs_rw_content($1_t)
+		rpcbind_stream_connect($1_usertype)
 	')
 
 	optional_policy(`
-		samba_stream_connect_winbind($1_t)
+		samba_stream_connect_winbind($1_usertype)
 	')
 
 	optional_policy(`
-		slrnpull_search_spool($1_t)
+		sandbox_transition($1_usertype, $1_r)
 	')
 
 	optional_policy(`
-		usernetctl_run($1_t,$1_r)
+		seunshare_role_template($1, $1_r, $1_t)
 	')
+
+	optional_policy(`
+		slrnpull_search_spool($1_usertype)
+	')
+
 ')
 
 #######################################
@@ -711,13 +812,26 @@
 
 	userdom_base_user_template($1)
 
-	userdom_manage_home_role($1_r, $1_t)
+	userdom_manage_home_role($1_r, $1_usertype)
 
-	userdom_manage_tmp_role($1_r, $1_t)
-	userdom_manage_tmpfs_role($1_r, $1_t)
+	userdom_manage_tmp_role($1_r, $1_usertype)
+	userdom_manage_tmpfs_role($1_r, $1_usertype)
+
+	ifelse(`$1',`unconfined',`',`
+		gen_tunable(allow_$1_exec_content, true)
+
+		tunable_policy(`allow_$1_exec_content',`
+			userdom_exec_user_tmp_files($1_usertype)
+			userdom_exec_user_home_content_files($1_usertype)
+		')
+		tunable_policy(`allow_$1_exec_content && use_nfs_home_dirs',`
+                        fs_exec_nfs_files($1_usertype)
+		')
 
-	userdom_exec_user_tmp_files($1_t)
-	userdom_exec_user_home_content_files($1_t)
+		tunable_policy(`allow_$1_exec_content && use_samba_home_dirs',`
+			fs_exec_cifs_files($1_usertype)
+		')
+	')
 
 	userdom_change_password_template($1)
 
@@ -726,79 +840,92 @@
 	# User domain Local policy
 	#
 
-	allow $1_t self:capability { setgid chown fowner };
+	allow $1_t self:capability { setuid setgid chown fowner };
+	allow $1_t self:process setcurrent;
+	domain_dyntrans_type($1_t)
 	dontaudit $1_t self:capability { sys_nice fsetid };
 
-	allow $1_t self:process ~{ setcurrent setexec setrlimit execmem execstack execheap };
+	allow $1_t self:process ~{ setrlimit execmem execstack execheap };
 	dontaudit $1_t self:process setrlimit;
 	dontaudit $1_t self:netlink_route_socket { create ioctl read getattr write setattr append bind connect getopt setopt shutdown nlmsg_read nlmsg_write };
 
 	allow $1_t self:context contains;
 
-	kernel_dontaudit_read_system_state($1_t)
+	kernel_dontaudit_list_all_proc($1_usertype)
+	kernel_dontaudit_read_system_state($1_usertype)
 
-	dev_read_sysfs($1_t)
-	dev_read_urand($1_t)
+	dev_read_sysfs($1_usertype)
+	dev_read_rand($1_usertype)
+	dev_read_urand($1_usertype)
 
-	domain_use_interactive_fds($1_t)
+	domain_use_interactive_fds($1_usertype)
 	# Command completion can fire hundreds of denials
-	domain_dontaudit_exec_all_entry_files($1_t)
+	domain_dontaudit_exec_all_entry_files($1_usertype)
 
-	files_dontaudit_list_default($1_t)
-	files_dontaudit_read_default_files($1_t)
+	files_dontaudit_list_default($1_usertype)
+	files_dontaudit_read_default_files($1_usertype)
 	# Stat lost+found.
-	files_getattr_lost_found_dirs($1_t)
+	files_getattr_lost_found_dirs($1_usertype)
 
-	fs_get_all_fs_quotas($1_t)
-	fs_getattr_all_fs($1_t)
-	fs_getattr_all_dirs($1_t)
-	fs_search_auto_mountpoints($1_t)
-	fs_list_inotifyfs($1_t)
-	fs_rw_anon_inodefs_files($1_t)
+	fs_get_all_fs_quotas($1_usertype)
+	fs_getattr_all_fs($1_usertype)
+	fs_search_all($1_usertype)
+	fs_list_inotifyfs($1_usertype)
+	fs_rw_anon_inodefs_files($1_usertype)
 
+	auth_role($1_r, $1_t)
+	auth_rw_cache($1_t)
+	auth_search_pam_console_data($1_t)
+	auth_dontaudit_read_login_records($1_t)
 	auth_dontaudit_write_login_records($1_t)
 
-	application_exec_all($1_t)
-
 	# The library functions always try to open read-write first,
 	# then fall back to read-only if it fails. 
-	init_dontaudit_rw_utmp($1_t)
+	init_dontaudit_rw_utmp($1_usertype)
 	# Stop warnings about access to /dev/console
-	init_dontaudit_use_fds($1_t)
-	init_dontaudit_use_script_fds($1_t)
+	init_dontaudit_use_fds($1_usertype)
+	init_dontaudit_use_script_fds($1_usertype)
 
-	libs_exec_lib_files($1_t)
+	libs_exec_lib_files($1_usertype)
 
-	logging_dontaudit_getattr_all_logs($1_t)
+	logging_dontaudit_getattr_all_logs($1_usertype)
 
-	miscfiles_read_man_pages($1_t)
 	# for running TeX programs
-	miscfiles_read_tetex_data($1_t)
-	miscfiles_exec_tetex_data($1_t)
+	miscfiles_read_tetex_data($1_usertype)
+	miscfiles_exec_tetex_data($1_usertype)
 
-	seutil_read_config($1_t)
+	seutil_read_config($1_usertype)
+	seutil_read_file_contexts($1_usertype)
+	seutil_read_default_contexts($1_usertype)
+	seutil_exec_setfiles($1_usertype)
+
+	optional_policy(`
+		cups_read_config($1_usertype)
+		cups_stream_connect($1_usertype)
+		cups_stream_connect_ptal($1_usertype)
+	')
 
 	optional_policy(`
-		cups_read_config($1_t)
-		cups_stream_connect($1_t)
-		cups_stream_connect_ptal($1_t)
+		kerberos_use($1_usertype)
+		kerberos_connect_524($1_usertype)
 	')
 
 	optional_policy(`
-		kerberos_use($1_t)
+		mta_dontaudit_read_spool_symlinks($1_usertype)
 	')
 
 	optional_policy(`
-		mta_dontaudit_read_spool_symlinks($1_t)
+		quota_dontaudit_getattr_db($1_usertype)
 	')
 
 	optional_policy(`
-		quota_dontaudit_getattr_db($1_t)
+		rpm_read_db($1_usertype)
+		rpm_dontaudit_manage_db($1_usertype)
+		rpm_read_cache($1_usertype)
 	')
 
 	optional_policy(`
-		rpm_read_db($1_t)
-		rpm_dontaudit_manage_db($1_t)
+		oddjob_run_mkhomedir($1_t, $1_r)
 	')
 ')
 
@@ -830,12 +957,41 @@
 	typeattribute $1_t unpriv_userdomain;
 	domain_interactive_fd($1_t)
 
+	 allow $1_usertype self:netlink_kobject_uevent_socket create_socket_perms;
+	 dontaudit $1_usertype self:netlink_audit_socket create_socket_perms; 
+
+	allow $1_t self:netlink_kobject_uevent_socket create_socket_perms;
+	dontaudit $1_t self:netlink_audit_socket create_socket_perms;
+
+	seutil_read_file_contexts($1_t)
+    seutil_read_default_contexts($1_t)
+
 	##############################
 	#
 	# Local policy
 	#
 
 	optional_policy(`
+		dbus_role_template($1, $1_r, $1_usertype)
+		dbus_system_bus_client($1_usertype)
+		allow $1_usertype $1_usertype:dbus send_msg;
+
+		optional_policy(`
+			abrt_dbus_chat($1_usertype)
+			abrt_run_helper($1_usertype, $1_r)
+		')
+
+		optional_policy(`
+			consolekit_dbus_chat($1_usertype)
+		')
+
+		optional_policy(`
+			cups_dbus_chat($1_usertype)
+			cups_dbus_chat_config($1_usertype)
+		')
+	')
+
+	optional_policy(`
 		loadkeys_run($1_t,$1_r)
 	')
 ')
@@ -870,46 +1026,85 @@
 	# Local policy
 	#
 
-	auth_role($1_r, $1_t)
-	auth_search_pam_console_data($1_t)
-
-	dev_read_sound($1_t)
-	dev_write_sound($1_t)
+	dev_read_sound($1_usertype)
+	dev_write_sound($1_usertype)
 	# gnome keyring wants to read this.
-	dev_dontaudit_read_rand($1_t)
+	dev_dontaudit_read_rand($1_usertype)
+	# temporarily allow since openoffice requires this
+	dev_read_rand($1_usertype)
+
+	dev_read_video_dev($1_usertype)
+	dev_write_video_dev($1_usertype)
+	dev_rw_wireless($1_usertype)
 
-	logging_send_syslog_msg($1_t)
+	tunable_policy(`user_rw_noexattrfile',`
+		dev_rw_usbfs($1_t)
+		dev_rw_generic_usb_dev($1_usertype)
+
+		fs_manage_noxattr_fs_files($1_usertype)
+		fs_manage_noxattr_fs_dirs($1_usertype)
+		fs_manage_dos_dirs($1_usertype)
+		fs_manage_dos_files($1_usertype)
+		storage_raw_read_removable_device($1_usertype)
+		storage_raw_write_removable_device($1_usertype)
+	')
+
+	logging_send_syslog_msg($1_usertype)
 	logging_dontaudit_send_audit_msgs($1_t)
 
 	# Need to to this just so screensaver will work. Should be moved to screensaver domain
 	logging_send_audit_msgs($1_t)
 	selinux_get_enforce_mode($1_t)
+	seutil_exec_restorecond($1_t)
+	seutil_read_file_contexts($1_t)
+	seutil_read_default_contexts($1_t)
 
 	xserver_restricted_role($1_r, $1_t)
 
 	optional_policy(`
-		alsa_read_rw_config($1_t)
+		alsa_read_rw_config($1_usertype)
+	')
+	
+	optional_policy(`
+		consolekit_dontaudit_read_log($1_usertype)
 	')
 
 	optional_policy(`
-		dbus_role_template($1, $1_r, $1_t)
-		dbus_system_bus_client($1_t)
+		devicekit_dbus_chat($1_usertype)
+		devicekit_dbus_chat_disk($1_usertype)
+		devicekit_dbus_chat_power($1_usertype)
+	')
 
-		optional_policy(`
-			consolekit_dbus_chat($1_t)
-		')
+	optional_policy(`
+		fprintd_dbus_chat($1_t)
+	')
 
-		optional_policy(`
-			cups_dbus_chat($1_t)
-		')
+	optional_policy(`
+		openoffice_role_template($1, $1_r, $1_usertype)
+	')
+
+	optional_policy(`
+		policykit_role($1_r, $1_usertype)
 	')
 
 	optional_policy(`
-		java_role($1_r, $1_t)
+		pulseaudio_role($1_r, $1_usertype)
+	')
+
+	optional_policy(`
+		rtkit_scheduled($1_usertype)
 	')
 
 	optional_policy(`
 		setroubleshoot_dontaudit_stream_connect($1_t)
+        ')
+
+	optional_policy(`
+		udev_read_db($1_usertype)
+        ')
+
+	optional_policy(`
+		wm_role_template($1, $1_r, $1_t)
 	')
 ')
 
@@ -944,7 +1139,7 @@
 	#
 
 	# Inherit rules for ordinary users.
-	userdom_restricted_user_template($1)
+	userdom_restricted_xwindows_user_template($1)
 	userdom_common_user_template($1)
 
 	##############################
@@ -953,55 +1148,85 @@
 	#
 
 	# port access is audited even if dac would not have allowed it, so dontaudit it here
-	corenet_dontaudit_tcp_bind_all_reserved_ports($1_t)
+#	corenet_dontaudit_tcp_bind_all_reserved_ports($1_t)
 	# Need the following rule to allow users to run vpnc
 	corenet_tcp_bind_xserver_port($1_t)
+	corenet_tcp_bind_all_nodes($1_usertype)
 
-	files_exec_usr_files($1_t)
-	# cjp: why?
-	files_read_kernel_symbol_table($1_t)
-
-	ifndef(`enable_mls',`
-		fs_exec_noxattr($1_t)
-
-		tunable_policy(`user_rw_noexattrfile',`
-			fs_manage_noxattr_fs_files($1_t)
-			fs_manage_noxattr_fs_dirs($1_t)
-			# Write floppies 
-			storage_raw_read_removable_device($1_t)
-			storage_raw_write_removable_device($1_t)
-		',`
-			storage_raw_read_removable_device($1_t)
-		')
-	')
+	storage_rw_fuse($1_t)
 
-	tunable_policy(`user_dmesg',`
-		kernel_read_ring_buffer($1_t)
-	',`
-		kernel_dontaudit_read_ring_buffer($1_t)
-	')
+	miscfiles_read_hwdata($1_usertype)
 
 	# Allow users to run TCP servers (bind to ports and accept connection from
 	# the same domain and outside users) disabling this forces FTP passive mode
 	# and may change other protocols
 	tunable_policy(`user_tcp_server',`
-		corenet_tcp_bind_generic_node($1_t)
-		corenet_tcp_bind_generic_port($1_t)
+		corenet_tcp_bind_all_unreserved_ports($1_usertype)
+	')
+
+	 tunable_policy(`user_setrlimit',`
+		allow $1_usertype self:process setrlimit;
 	')
 
 	optional_policy(`
-		netutils_run_ping_cond($1_t,$1_r)
-		netutils_run_traceroute_cond($1_t,$1_r)
+		cdrecord_role($1_r, $1_t)
+	')
+
+	optional_policy(`
+		cron_role($1_r, $1_t)
+	')
+
+	optional_policy(`
+		games_rw_data($1_usertype)
+	')
+
+	optional_policy(`
+		gpg_role($1_r, $1_usertype)
+	')
+
+	optional_policy(`
+		gnomeclock_dbus_chat($1_t)
+	')
+
+	optional_policy(`
+		gpm_stream_connect($1_usertype)
+	')
+
+	optional_policy(`
+		execmem_role_template($1, $1_r, $1_t)
+	')
+
+	optional_policy(`
+		java_role_template($1, $1_r, $1_t)
+	')
+
+	optional_policy(`
+		mono_role_template($1, $1_r, $1_t)
+	')
+
+	optional_policy(`
+		mount_run_fusermount($1_t, $1_r)
+	')
+
+	optional_policy(`
+		wine_role_template($1, $1_r, $1_t)
 	')
 
-	# Run pppd in pppd_t by default for user
 	optional_policy(`
-		ppp_run_cond($1_t,$1_r)
+		postfix_run_postdrop($1_t, $1_r)
+		postfix_search_spool($1_t)
 	')
 
+	# Run pppd in pppd_t by default for user
 	optional_policy(`
-		setroubleshoot_stream_connect($1_t)
+		ppp_run_cond($1_t, $1_r)
 	')
+
+	optional_policy(`
+        vdagent_getattr_log($1_t)
+        vdagent_getattr_exec($1_t)
+        vdagent_stream_connect($1_t)
+    ')
 ')
 
 #######################################
@@ -1036,7 +1261,7 @@
 template(`userdom_admin_user_template',`
 	gen_require(`
 		attribute admindomain;
-		class passwd { passwd chfn chsh rootok };
+		class passwd { passwd chfn chsh rootok crontab };
 	')
 
 	##############################
@@ -1071,6 +1296,9 @@
 	# Skip authentication when pam_rootok is specified.
 	allow $1_t self:passwd rootok;
 
+	# Manipulate other users crontab.
+	allow $1_t self:passwd crontab;
+
 	kernel_read_software_raid_state($1_t)
 	kernel_getattr_core_if($1_t)
 	kernel_getattr_message_if($1_t)
@@ -1085,6 +1313,7 @@
 	kernel_sigstop_unlabeled($1_t)
 	kernel_signull_unlabeled($1_t)
 	kernel_sigchld_unlabeled($1_t)
+	kernel_signal($1_t)
 
 	corenet_tcp_bind_generic_port($1_t)
 	# allow setting up tunnels
@@ -1102,6 +1331,9 @@
 	dev_rename_all_blk_files($1_t)
 	dev_rename_all_chr_files($1_t)
 	dev_create_generic_symlinks($1_t)
+	# needed by lsusb
+	dev_rw_generic_usb_dev($1_t)
+	dev_rw_usbfs($1_t)
 
 	domain_setpriority_all_domains($1_t)
 	domain_read_all_domains_state($1_t)
@@ -1116,29 +1348,37 @@
 	domain_sigchld_all_domains($1_t)
 	# for lsof
 	domain_getattr_all_sockets($1_t)
+	domain_dontaudit_getattr_all_sockets($1_t)
 
 	files_exec_usr_src_files($1_t)
 
 	fs_getattr_all_fs($1_t)
+	fs_getattr_all_files($1_t)
+	fs_list_all($1_t)
 	fs_set_all_quotas($1_t)
 	fs_exec_noxattr($1_t)
 
 	storage_raw_read_removable_device($1_t)
 	storage_raw_write_removable_device($1_t)
+	storage_dontaudit_read_fixed_disk($1_t)
 
 	term_use_all_terms($1_t)
 
 	auth_getattr_shadow($1_t)
 	# Manage almost all files
-	auth_manage_all_files_except_shadow($1_t)
+	#auth_manage_all_files_except_shadow($1_t)
 	# Relabel almost all files
-	auth_relabel_all_files_except_shadow($1_t)
+	#auth_relabel_all_files_except_shadow($1_t)
+	files_manage_non_security_dirs($1_t)
+	files_manage_non_security_files($1_t)
+	files_relabel_non_security_files($1_t)
 
 	init_telinit($1_t)
 
 	logging_send_syslog_msg($1_t)
 
 	modutils_domtrans_insmod($1_t)
+	modutils_domtrans_depmod($1_t)
 
 	# The following rule is temporary until such time that a complete
 	# policy management infrastructure is in place so that an administrator
@@ -1162,6 +1402,10 @@
 		fs_read_noxattr_fs_files($1_t)
 	')
 
+	tunable_policy(`user_tcp_server',`
+		corenet_tcp_bind_all_unreserved_ports($1_t)
+	')
+
 	optional_policy(`
 		postgresql_unconfined($1_t)
 	')
@@ -1207,6 +1451,8 @@
 	dev_relabel_all_dev_nodes($1)
 
 	files_create_boot_flag($1)
+	files_create_default_dir($1)
+	files_root_filetrans_default($1, dir)
 
 	# Necessary for managing /boot/efi
 	fs_manage_dos_files($1)
@@ -1219,6 +1465,7 @@
 	selinux_set_enforce_mode($1)
 	selinux_set_all_booleans($1)
 	selinux_set_parameters($1)
+	selinux_read_policy($1)
 
 	auth_relabel_all_files_except_shadow($1)
 	auth_relabel_shadow($1)
@@ -1234,8 +1481,15 @@
 	seutil_run_checkpolicy($1,$2)
 	seutil_run_loadpolicy($1,$2)
 	seutil_run_semanage($1,$2)
+	seutil_run_setsebool($1,$2)
 	seutil_run_setfiles($1, $2)
 
+	seutil_manage_bin_policy($1)
+	seutil_manage_default_contexts($1)
+	seutil_manage_file_contexts($1)
+	seutil_manage_module_store($1)
+	seutil_manage_config($1)
+
 	optional_policy(`
 		aide_run($1,$2)
 	')
@@ -1272,11 +1526,61 @@
 interface(`userdom_user_home_content',`
 	gen_require(`
 		type user_home_t;
+		attribute user_home_type;
 	')
 
 	allow $1 user_home_t:filesystem associate;
 	files_type($1)
 	ubac_constrained($1)
+
+	files_poly_member($1)
+	typeattribute $1  user_home_type;
+')
+
+#######################################
+## <summary>
+##  Make the specified type usable in a
+##  generic temporary directory.
+## </summary>
+## <param name="type">
+##  <summary>
+##  Type to be used as a file in the
+##  generic temporary directory.
+##  </summary>
+## </param>
+#
+interface(`userdom_user_tmp_content',`
+    gen_require(`
+        attribute user_tmp_type;
+    ')
+
+    typeattribute $1 user_tmp_type;
+
+    files_tmp_file($1)
+    ubac_constrained($1)
+')
+
+#######################################
+## <summary>
+##  Make the specified type usable in a
+##  generic tmpfs_t directory.
+## </summary>
+## <param name="type">
+##  <summary>
+##  Type to be used as a file in the
+##  generic temporary directory.
+##  </summary>
+## </param>
+#
+interface(`userdom_user_tmpfs_content',`
+    gen_require(`
+        attribute user_tmpfs_type;
+    ')
+
+    typeattribute $1 user_tmpfs_type;
+
+    files_tmpfs_file($1)
+    ubac_constrained($1)
 ')
 
 ########################################
@@ -1387,6 +1691,7 @@
 	')
 
 	allow $1 user_home_dir_t:dir search_dir_perms;
+	allow $1 user_home_dir_t:lnk_file read_lnk_file_perms;
 	files_search_home($1)
 ')
 
@@ -1433,6 +1738,14 @@
 
 	allow $1 user_home_dir_t:dir list_dir_perms;
 	files_search_home($1)
+
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_list_nfs($1)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+		fs_list_cifs($1)
+	')
 ')
 
 ########################################
@@ -1448,9 +1761,11 @@
 interface(`userdom_dontaudit_list_user_home_dirs',`
 	gen_require(`
 		type user_home_dir_t;
+		type user_home_t;
 	')
 
 	dontaudit $1 user_home_dir_t:dir list_dir_perms;
+	dontaudit $1 user_home_t:dir list_dir_perms;
 ')
 
 ########################################
@@ -1507,10 +1822,10 @@
 	allow $1 user_home_dir_t:dir relabelto;
 ')
 
+
 ########################################
 ## <summary>
-##	Create directories in the home dir root with
-##	the user home directory type.
+##	Relabel to user home files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1518,33 +1833,69 @@
 ##	</summary>
 ## </param>
 #
-interface(`userdom_home_filetrans_user_home_dir',`
+interface(`userdom_relabelto_user_home_files',`
 	gen_require(`
-		type user_home_dir_t;
+		type user_home_t;
 	')
 
-	files_home_filetrans($1, user_home_dir_t, dir)
+	allow $1 user_home_t:file relabelto;
 ')
-
 ########################################
 ## <summary>
-##	Do a domain transition to the specified
-##	domain when executing a program in the
-##	user home directory.
+##	Relabel user home files.
 ## </summary>
-## <desc>
-##	<p>
-##	Do a domain transition to the specified
-##	domain when executing a program in the
-##	user home directory.
-##	</p>
-##	<p>
-##	No interprocess communication (signals, pipes,
-##	etc.) is provided by this interface since
-##	the domains are not owned by this module.
-##	</p>
-## </desc>
-## <param name="source_domain">
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_relabel_user_home_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:file relabel_file_perms;
+')
+
+########################################
+## <summary>
+##	Create directories in the home dir root with
+##	the user home directory type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_home_filetrans_user_home_dir',`
+	gen_require(`
+		type user_home_dir_t;
+	')
+
+	files_home_filetrans($1, user_home_dir_t, dir)
+')
+
+########################################
+## <summary>
+##	Do a domain transition to the specified
+##	domain when executing a program in the
+##	user home directory.
+## </summary>
+## <desc>
+##	<p>
+##	Do a domain transition to the specified
+##	domain when executing a program in the
+##	user home directory.
+##	</p>
+##	<p>
+##	No interprocess communication (signals, pipes,
+##	etc.) is provided by this interface since
+##	the domains are not owned by this module.
+##	</p>
+## </desc>
+## <param name="source_domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -1581,6 +1932,8 @@
 	')
 
 	dontaudit $1 user_home_t:dir search_dir_perms;
+	fs_dontaudit_list_nfs($1)
+	fs_dontaudit_list_cifs($1)
 ')
 
 ########################################
@@ -1595,10 +1948,12 @@
 #
 interface(`userdom_list_user_home_content',`
 	gen_require(`
-		type user_home_t;
+		type user_home_dir_t;
+		attribute user_home_type;
 	')
 
-	allow $1 user_home_t:dir list_dir_perms;
+	files_list_home($1)
+	allow $1 { user_home_dir_t user_home_type }:dir list_dir_perms;
 ')
 
 ########################################
@@ -1641,6 +1996,24 @@
 
 ########################################
 ## <summary>
+##	Set the attributes of user home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_setattr_user_home_content_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:file setattr;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to set the
 ##	attributes of user home files.
 ## </summary>
@@ -1692,10 +2065,30 @@
 		type user_home_dir_t, user_home_t;
 	')
 
+	list_dirs_pattern($1, { user_home_dir_t user_home_t }, { user_home_dir_t user_home_t })
 	read_files_pattern($1, { user_home_dir_t user_home_t }, user_home_t)
 	files_search_home($1)
 ')
 
+#######################################
+## <summary>
+##  Do not audit attempts to getattr user home files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_getattr_user_home_content',`
+    gen_require(`
+        attribute user_home_type;
+    ')
+
+    dontaudit $1 user_home_type:dir getattr;
+    dontaudit $1 user_home_type:file getattr;
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to read user home files.
@@ -1708,11 +2101,14 @@
 #
 interface(`userdom_dontaudit_read_user_home_content_files',`
 	gen_require(`
-		type user_home_t;
+		attribute user_home_type;
+		type user_home_dir_t;
 	')
 
-	dontaudit $1 user_home_t:dir list_dir_perms;
-	dontaudit $1 user_home_t:file read_file_perms;
+	dontaudit $1 user_home_dir_t:dir list_dir_perms;
+	dontaudit $1 user_home_type:dir list_dir_perms;
+	dontaudit $1 user_home_type:file read_file_perms;
+	dontaudit $1 user_home_type:lnk_file read_lnk_file_perms;
 ')
 
 ########################################
@@ -1802,8 +2198,7 @@
 		type user_home_dir_t, user_home_t;
 	')
 
-	read_lnk_files_pattern($1, { user_home_dir_t user_home_t }, user_home_t)
-	files_search_home($1)
+	allow $1 { user_home_dir_t user_home_t }:lnk_file  read_lnk_file_perms;
 ')
 
 ########################################
@@ -1815,24 +2210,17 @@
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`userdom_exec_user_home_content_files',`
 	gen_require(`
-		type user_home_dir_t, user_home_t;
+		type user_home_dir_t;
+		attribute user_home_type;
 	')
 
 	files_search_home($1)
-	exec_files_pattern($1, { user_home_dir_t user_home_t }, user_home_t)
-
-	tunable_policy(`use_nfs_home_dirs',`
-		fs_exec_nfs_files($1)
-	')
-
-	tunable_policy(`use_samba_home_dirs',`
-		fs_exec_cifs_files($1)
+	exec_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	dontaudit $1 user_home_type:sock_file execute;
 	')
-')
 
 ########################################
 ## <summary>
@@ -1866,6 +2254,7 @@
 interface(`userdom_manage_user_home_content_files',`
 	gen_require(`
 		type user_home_dir_t, user_home_t;
+		attribute userhomewriter;
 	')
 
 	manage_files_pattern($1, user_home_t, user_home_t)
@@ -2102,6 +2491,25 @@
 
 ########################################
 ## <summary>
+##	Do not audit attempts to search user
+##	temporary directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_search_user_tmp',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	dontaudit $1 user_tmp_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to list user
 ##	temporary directories.
 ## </summary>
@@ -2218,6 +2626,62 @@
 
 ########################################
 ## <summary>
+##	Do not audit attempts to write users
+##	temporary files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_write_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	dontaudit $1 user_tmp_t:file write;
+')
+
+#######################################
+## <summary>
+##  Do not audit attempts to read/write users
+##  temporary fifo files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_rw_user_tmp_pipes',`
+    gen_require(`
+        type user_tmp_t;
+    ')
+
+    dontaudit $1 user_tmp_t:fifo_file rw_inherited_fifo_file_perms;
+')
+
+#######################################
+## <summary>
+##  Do not audit attempts to use user ttys.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_use_user_ttys',`
+    gen_require(`
+        type user_tty_device_t;
+    ')
+
+    dontaudit $1 user_tty_device_t:chr_file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to manage users
 ##	temporary files.
 ## </summary>
@@ -2427,13 +2891,14 @@
 	')
 
 	read_files_pattern($1, user_tmpfs_t, user_tmpfs_t)
+	read_lnk_files_pattern($1, user_tmpfs_t, user_tmpfs_t)
 	allow $1 user_tmpfs_t:dir list_dir_perms;
 	fs_search_tmpfs($1)
 ')
 
 ########################################
 ## <summary>
-##	Read user tmpfs files.
+##	Read/Write user tmpfs files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2452,6 +2917,60 @@
 	fs_search_tmpfs($1)
 ')
 
+#######################################
+## <summary>
+##  Read/Write inherited user tmpfs files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_rw_inherited_user_tmpfs_files',`
+    gen_require(`
+        type user_tmpfs_t;
+    ')
+
+    allow $1 user_tmpfs_t:file rw_inherited_file_perms;
+')
+
+#######################################
+## <summary>
+##  Execute user tmpfs files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_execute_user_tmpfs_files',`
+    gen_require(`
+        type user_tmpfs_t;
+    ')
+
+    allow $1 user_tmpfs_t:file execute;
+')
+
+########################################
+## <summary>
+##	Delete user tmpfs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_user_tmpfs_files',`
+	gen_require(`
+		type user_tmpfs_t;
+	')
+
+	allow $1 user_tmpfs_t:file delete_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Get the attributes of a user domain tty.
@@ -2542,6 +3061,24 @@
 	allow $1 user_tty_device_t:chr_file rw_term_perms;
 ')
 
+######################################
+## <summary>
+##  Read and write inherited user domain tty.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_use_inherited_user_ttys',`
+    gen_require(`
+        type user_tty_device_t;
+    ')
+
+    allow $1 user_tty_device_t:chr_file { getattr read write append ioctl };
+')
+
 ########################################
 ## <summary>
 ##	Read and write a user domain pty.
@@ -2560,6 +3097,24 @@
 	allow $1 user_devpts_t:chr_file rw_term_perms;
 ')
 
+#####################################
+## <summary>
+##  Read and write inherited user domain pty.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_use_inherited_user_ptys',`
+    gen_require(`
+        type user_devpts_t;
+    ')
+
+    allow $1 user_devpts_t:chr_file { getattr read write append ioctl };
+')
+
 ########################################
 ## <summary>
 ##	Read and write a user TTYs and PTYs.
@@ -2685,6 +3240,42 @@
 	allow unpriv_userdomain $1:process sigchld;
 ')
 
+######################################
+## <summary>
+##  Allow domain dyntrans to unpriv userdomain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_dyntransition_unpriv_users',`
+    gen_require(`
+        attribute unpriv_userdomain;
+    ')
+
+    allow $1 unpriv_userdomain:process dyntransition;
+')
+
+####################################
+## <summary>
+##  Allow domain dyntrans to admin userdomain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_dyntransition_admin_users',`
+    gen_require(`
+        attribute admindomain;
+    ')
+
+    allow $1 admindomain:process dyntransition;
+')
+
 ########################################
 ## <summary>
 ##	Execute an Xserver session in all unprivileged user domains.  This
@@ -2747,6 +3338,25 @@
 
 ########################################
 ## <summary>
+##	Read/Write unpriviledged user SysV shared
+##	memory segments.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_rw_unpriv_user_shared_mem',`
+	gen_require(`
+		attribute unpriv_userdomain;
+	')
+
+	allow $1 unpriv_userdomain:shm rw_shm_perms;
+')
+
+########################################
+## <summary>
 ##	Execute bin_t in the unprivileged user domains. This
 ##	is an explicit transition, requiring the
 ##	caller to use setexeccon().
@@ -2787,7 +3397,7 @@
 
 	domain_entry_file_spec_domtrans($1, unpriv_userdomain)
 	allow unpriv_userdomain $1:fd use;
-	allow unpriv_userdomain $1:fifo_file rw_file_perms;
+	allow unpriv_userdomain $1:fifo_file rw_fifo_file_perms;
 	allow unpriv_userdomain $1:process sigchld;
 ')
 
@@ -2803,11 +3413,13 @@
 #
 interface(`userdom_search_user_home_content',`
 	gen_require(`
-		type user_home_dir_t, user_home_t;
+		type user_home_dir_t;
+		attribute user_home_type;
 	')
 
 	files_list_home($1)
-	allow $1 { user_home_dir_t user_home_t }:dir search_dir_perms;
+	allow $1 { user_home_dir_t user_home_type }:dir search_dir_perms;
+	allow $1 { user_home_dir_t user_home_type }:lnk_file read_lnk_file_perms;
 ')
 
 ########################################
@@ -2944,25 +3556,7 @@
 		type user_tmp_t;
 	')
 
-	allow $1 user_tmp_t:file write_file_perms;
-')
-
-########################################
-## <summary>
-##	Do not audit attempts to use user ttys.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`userdom_dontaudit_use_user_ttys',`
-	gen_require(`
-		type user_tty_device_t;
-	')
-
-	dontaudit $1 user_tty_device_t:chr_file rw_file_perms;
+	write_files_pattern($1, user_tmp_t, user_tmp_t)
 ')
 
 ########################################
@@ -2981,6 +3575,7 @@
 	')
 
 	read_files_pattern($1, userdomain, userdomain)
+	read_lnk_files_pattern($1,userdomain,userdomain)
 	kernel_search_proc($1)
 ')
 
@@ -3111,3 +3706,981 @@
 
 	allow $1 userdomain:dbus send_msg;
 ')
+
+########################################
+## <summary>
+##	Allow apps to set rlimits on userdomain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_set_rlimitnh',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	allow $1 userdomain:process rlimitinh;
+')
+
+########################################
+## <summary>
+##	Define this type as a Allow apps to set rlimits on userdomain
+## </summary>
+## <param name="userdomain_prefix">
+##	<summary>
+##	The prefix of the user domain (e.g., user
+##	is the prefix for user_t).
+## </summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+template(`userdom_unpriv_usertype',`
+	gen_require(`
+		attribute unpriv_userdomain, userdomain;
+		attribute $1_usertype;
+	')
+	typeattribute $2  $1_usertype;
+	typeattribute $2  unpriv_userdomain;
+	typeattribute $2  userdomain;
+
+	ubac_constrained($2)
+')
+
+########################################
+## <summary>
+##	Connect to users over an unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_stream_connect',`
+	gen_require(`
+		type user_tmp_t;
+		attribute userdomain;
+	')
+
+	stream_connect_pattern($1, user_tmp_t, user_tmp_t, userdomain)
+')
+
+########################################
+## <summary>
+##	Ptrace user domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_ptrace_all_users',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	allow $1 userdomain:process ptrace;
+')
+
+########################################
+## <summary>
+##	dontaudit Search /root
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_search_admin_dir',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	dontaudit $1 admin_home_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	dontaudit list /root
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_list_admin_dir',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	dontaudit $1 admin_home_t:dir list_dir_perms;
+')
+
+#######################################
+## <summary>
+##  dontaudit write /root
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_write_admin_dir',`
+    gen_require(`
+        type admin_home_t;
+    ')
+
+    dontaudit $1 admin_home_t:dir write;
+')
+
+########################################
+## <summary>
+##	Allow domain to  list /root
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_list_admin_dir',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	allow $1 admin_home_t:dir list_dir_perms;
+')
+
+########################################
+## <summary>
+##	Allow Search /root
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_search_admin_dir',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	allow $1 admin_home_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	RW unpriviledged user SysV sempaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_rw_semaphores',`
+	gen_require(`
+		attribute unpriv_userdomain;
+	')
+
+	allow $1 unpriv_userdomain:sem rw_sem_perms;
+')
+
+########################################
+## <summary>
+##	Send a message to unpriv users over a unix domain
+##	datagram socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_dgram_send',`
+	gen_require(`
+		attribute unpriv_userdomain;
+	')
+
+	allow $1 unpriv_userdomain:unix_dgram_socket sendto;
+')
+
+######################################
+## <summary>
+##      Send a message to users over a unix domain
+##      datagram socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`userdom_users_dgram_send',`
+        gen_require(`
+                 attribute userdomain;
+      ')
+
+       allow $1 userdomain:unix_dgram_socket sendto;
+')
+
+#######################################
+## <summary>
+##	Allow execmod on files in homedirectory 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolebase/>
+#
+interface(`userdom_execmod_user_home_files',`
+	gen_require(`
+		type user_home_type;
+	')
+
+	allow $1 user_home_type:file execmod;
+')
+
+########################################
+## <summary>
+##	Read admin home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_read_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	read_files_pattern($1, admin_home_t, admin_home_t)
+')
+
+#######################################
+## <summary>
+##  Read admin home files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_dontaudit_read_admin_home_files',`
+    gen_require(`
+        type admin_home_t;
+    ')
+
+	dontaudit $1 admin_home_t:dir search_dir_perms;
+	dontaudit $1 admin_home_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Execute admin home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_exec_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	exec_files_pattern($1, admin_home_t, admin_home_t)
+')
+
+########################################
+## <summary>
+##	Append files inherited
+##	in the /root directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_inherit_append_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	allow $1 admin_home_t:file { getattr append };
+')
+
+
+#######################################
+## <summary>
+##	Manage all files/directories in the homedir
+## </summary>
+## <param name="userdomain">
+##	<summary>
+##	The user domain
+##	</summary>
+## </param>
+## <rolebase/>
+#
+interface(`userdom_manage_user_home_content',`
+	gen_require(`
+		type user_home_dir_t, user_home_t;
+		attribute user_home_type;
+	')
+
+	files_list_home($1)
+	manage_dirs_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	manage_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	manage_lnk_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	manage_sock_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	manage_fifo_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	filetrans_pattern($1, user_home_dir_t, user_home_t, { dir file lnk_file sock_file fifo_file })
+
+')
+
+
+########################################
+## <summary>
+##	Create objects in a user home directory
+##	with an automatic type transition to
+##	the user home file type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	The class of the object to be created.
+##	</summary>
+## </param>
+#
+interface(`userdom_user_home_dir_filetrans_pattern',`
+	gen_require(`
+		type user_home_dir_t, user_home_t;
+	')
+
+	type_transition $1 user_home_dir_t:$2 user_home_t;
+')
+
+########################################
+## <summary>
+##	Create objects in the /root directory
+##	with an automatic type transition to
+##	a specified private type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="private_type">
+##	<summary>
+##	The type of the object to create.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	The class of the object to be created.
+##	</summary>
+## </param>
+#
+interface(`userdom_admin_home_dir_filetrans',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	filetrans_pattern($1, admin_home_t, $2, $3)
+')
+
+########################################
+## <summary>
+##	Send signull to unprivileged user domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_signull_unpriv_users',`
+	gen_require(`
+		attribute unpriv_userdomain;
+	')
+
+	allow $1 unpriv_userdomain:process signull;
+')
+
+########################################
+## <summary>
+##	Write all users files in /tmp
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_write_user_tmp_dirs',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	write_files_pattern($1, user_tmp_t, user_tmp_t)
+')
+
+########################################
+## <summary>
+##	Manage keys for all user domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_manage_all_users_keys',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	allow $1 userdomain:key manage_key_perms;
+')
+
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write
+##	unserdomain stream.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_rw_stream',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	dontaudit $1 userdomain:unix_stream_socket rw_socket_perms;
+')
+
+########################################
+## <summary>
+##	Append files
+##	in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_append_user_home_content_files',`
+	gen_require(`
+		type user_home_dir_t, user_home_t;
+	')
+
+	append_files_pattern($1, user_home_t, user_home_t)
+	allow $1 user_home_dir_t:dir search_dir_perms;
+	files_search_home($1)
+')
+
+########################################
+## <summary>
+##	Read files inherited
+##	in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_read_inherited_user_home_content_files',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	allow $1 user_home_type:file { getattr read };
+')
+
+########################################
+## <summary>
+##	Append files inherited
+##	in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_inherit_append_user_home_content_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:file { getattr append };
+')
+
+########################################
+## <summary>
+##	Append files inherited
+##	in a user tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_inherit_append_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	allow $1 user_tmp_t:file { getattr append };
+')
+
+########################################
+## <summary>
+##	Read system SSL certificates in the users homedir.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_read_home_certs',`
+	gen_require(`
+		type home_cert_t;
+	')
+
+	userdom_search_user_home_dirs($1)
+	userdom_search_user_home_content($1)
+	allow $1 home_cert_t:dir list_dir_perms;
+	read_files_pattern($1, home_cert_t, home_cert_t)
+	read_lnk_files_pattern($1, home_cert_t, home_cert_t)
+')
+
+#######################################
+## <summary>
+##  Manage system SSL certificates in the users homedir.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_manage_home_certs',`
+    gen_require(`
+        type home_cert_t;
+    ')
+
+    allow $1 home_cert_t:dir list_dir_perms;
+    manage_files_pattern($1, home_cert_t, home_cert_t)
+    manage_lnk_files_pattern($1, home_cert_t, home_cert_t)
+
+')
+
+######################################
+## <summary>
+##  Dontaudit Write system SSL certificates in the users homedir.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_write_home_certs',`
+    gen_require(`
+        type home_cert_t;
+    ')
+
+    dontaudit $1 home_cert_t:file write;
+')
+
+#######################################
+## <summary>
+##      Read audio files in the users homedir.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_read_home_audio_files',`
+        gen_require(`
+                type audio_home_t;
+        ')
+
+        userdom_search_user_home_dirs($1)
+        allow $1 audio_home_t:dir list_dir_perms;
+        read_files_pattern($1, audio_home_t, audio_home_t)
+        read_lnk_files_pattern($1, audio_home_t, audio_home_t)
+')
+
+#######################################
+## <summary>
+##  Do not audit attempts to write all user home content files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_write_all_user_home_content_files',`
+    gen_require(`
+        attribute user_home_type;
+    ')
+
+    dontaudit $1 user_home_type:file write_file_perms;
+')
+
+#######################################
+## <summary>
+##  Do not audit attempts to write all user tmp content files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_write_all_user_tmp_content_files',`
+    gen_require(`
+        attribute user_tmp_type;
+    ')
+
+    dontaudit $1 user_tmp_type:file write_file_perms;
+')
+
+#######################################
+## <summary>
+##  Manage all user temporary content.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_manage_all_user_tmp_content',`
+    gen_require(`
+        attribute user_tmp_type;
+    ')
+
+    manage_dirs_pattern($1, user_tmp_type, user_tmp_type)
+    manage_files_pattern($1, user_tmp_type, user_tmp_type)
+    manage_lnk_files_pattern($1, user_tmp_type, user_tmp_type)
+    manage_sock_files_pattern($1, user_tmp_type, user_tmp_type)
+    manage_fifo_files_pattern($1, user_tmp_type, user_tmp_type)
+    files_search_tmp($1)
+')
+
+#######################################
+## <summary>
+##  List all user temporary content.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_list_all_user_tmp_content',`
+    gen_require(`
+        attribute user_tmp_type;
+    ')
+
+    list_dirs_pattern($1, user_tmp_type, user_tmp_type)
+    getattr_files_pattern($1, user_tmp_type, user_tmp_type)
+    read_lnk_files_pattern($1, user_tmp_type, user_tmp_type)
+    getattr_sock_files_pattern($1, user_tmp_type, user_tmp_type)
+    getattr_fifo_files_pattern($1, user_tmp_type, user_tmp_type)
+    files_search_var($1)
+    files_search_tmp($1)
+')
+
+#######################################
+## <summary>
+##  Manage all user tmpfs content.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_manage_all_user_tmpfs_content',`
+    gen_require(`
+        attribute user_tmpfs_type;
+    ')
+
+    manage_dirs_pattern($1, user_tmpfs_type, user_tmpfs_type)
+    manage_files_pattern($1, user_tmpfs_type, user_tmpfs_type)
+    manage_lnk_files_pattern($1, user_tmpfs_type, user_tmpfs_type)
+    manage_sock_files_pattern($1, user_tmpfs_type, user_tmpfs_type)
+    manage_fifo_files_pattern($1, user_tmpfs_type, user_tmpfs_type)
+    fs_search_tmpfs($1)
+')
+
+#######################################
+## <summary>
+##  Delete all user temporary content.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_delete_all_user_tmp_content',`
+    gen_require(`
+        attribute user_tmp_type;
+    ')
+
+    delete_dirs_pattern($1, user_tmp_type, user_tmp_type)
+    delete_files_pattern($1, user_tmp_type, user_tmp_type)
+    delete_lnk_files_pattern($1, user_tmp_type, user_tmp_type)
+    delete_sock_files_pattern($1, user_tmp_type, user_tmp_type)
+    delete_fifo_files_pattern($1, user_tmp_type, user_tmp_type)
+	# /var/tmp
+	files_search_var($1)
+    files_delete_tmp_dir_entry($1)
+')
+
+########################################
+## <summary>
+##	dontaudit Search getatrr /root files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_getattr_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	dontaudit $1 admin_home_t:file getattr;
+')
+
+########################################
+## <summary>
+##	dontaudit read /root lnk files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_read_admin_home_lnk_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	dontaudit $1 admin_home_t:lnk_file read;
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete user
+##	temporary chr files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_manage_user_tmp_chr_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	manage_chr_files_pattern($1, user_tmp_t, user_tmp_t)
+	files_search_tmp($1)
+')
+
+#######################################
+## <summary>
+##  Create, read, write, and delete user
+##  temporary blk files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_manage_user_tmp_blk_files',`
+    gen_require(`
+        type user_tmp_t;
+    ')
+
+    manage_blk_files_pattern($1, user_tmp_t, user_tmp_t)
+    files_search_tmp($1)
+')
+
+#######################################
+## <summary>
+##  Dontaudit attempt to set attributes on  user temporary directories.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_setattr_user_tmp',`
+    gen_require(`
+        type user_tmp_t;
+    ')
+
+    dontaudit $1 user_tmp_t:dir setattr;
+')
+
+#######################################
+## <summary>
+##  Read all inherited users files in /tmp
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_read_inherited_user_tmp_files',`
+    gen_require(`
+        type user_tmp_t;
+    ')
+
+    allow $1 user_tmp_t:file read_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Dontaudit search user temporary directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaduit_search_user_tmp',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	dontaudit $1 user_tmp_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Write all inherited users files in /tmp
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_write_inherited_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	allow $1 user_tmp_t:file write;
+')
+
+########################################
+## <summary>
+##	Delete all users files in /tmp
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	allow $1 user_tmp_t:file delete_file_perms;
+')
+
+#######################################
+## <summary>
+## Send kill signals to all user domains.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`userdom_kill_all_users',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	allow $1 userdomain:process sigkill;
+')
+
+#######################################
+## <summary>
+##  Read/write all inherited users files in /tmp
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_rw_inherited_user_tmp_files',`
+    gen_require(`
+        type user_tmp_t;
+    ')
+
+    allow $1 user_tmp_t:file rw_inherited_file_perms;
+')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/userdomain.te serefpolicy-3.7.19/policy/modules/system/userdomain.te
--- nsaserefpolicy/policy/modules/system/userdomain.te	2011-03-17 07:21:20.630851001 +0000
+++ serefpolicy-3.7.19/policy/modules/system/userdomain.te	2012-05-16 10:17:53.035361037 +0000
@@ -29,18 +29,18 @@
 
 ## <desc>
 ## <p>
-## Allow users to read system messages.
+## Allow user to r/w files on filesystems
+## that do not have extended attributes (FAT, CDROM, FLOPPY)
 ## </p>
 ## </desc>
-gen_tunable(user_dmesg, false)
+gen_tunable(user_rw_noexattrfile, false)
 
 ## <desc>
 ## <p>
-## Allow user to r/w files on filesystems
-## that do not have extended attributes (FAT, CDROM, FLOPPY)
+## Allow user processes to change their priority 
 ## </p>
 ## </desc>
-gen_tunable(user_rw_noexattrfile, false)
+gen_tunable(user_setrlimit, false)
 
 ## <desc>
 ## <p>
@@ -54,11 +54,24 @@
 # all user domains
 attribute userdomain;
 
+attribute userhomereader;
+attribute userhomewriter;
+
 # unprivileged user domains
 attribute unpriv_userdomain;
 
-attribute untrusted_content_type;
-attribute untrusted_content_tmp_type;
+# unprivileged user domains
+attribute user_home_type;
+attribute user_tmp_type;
+attribute user_tmpfs_type;
+
+type admin_home_t;
+files_type(admin_home_t)
+files_associate_tmp(admin_home_t)
+fs_associate_tmpfs(admin_home_t)
+files_mountpoint(admin_home_t)
+files_poly_member(admin_home_t)
+files_poly_parent(admin_home_t)
 
 type user_home_dir_t alias { staff_home_dir_t sysadm_home_dir_t secadm_home_dir_t auditadm_home_dir_t unconfined_home_dir_t };
 fs_associate_tmpfs(user_home_dir_t)
@@ -72,6 +85,7 @@
 
 type user_home_t alias { staff_home_t sysadm_home_t secadm_home_t auditadm_home_t unconfined_home_t };
 typealias user_home_t alias { staff_untrusted_content_t sysadm_untrusted_content_t secadm_untrusted_content_t auditadm_untrusted_content_t unconfined_untrusted_content_t };
+typeattribute user_home_t user_home_type;
 userdom_user_home_content(user_home_t)
 fs_associate_tmpfs(user_home_t)
 files_associate_tmp(user_home_t)
@@ -85,15 +99,65 @@
 files_type(user_devpts_t)
 ubac_constrained(user_devpts_t)
 
-type user_tmp_t alias { staff_tmp_t sysadm_tmp_t secadm_tmp_t auditadm_tmp_t unconfined_tmp_t };
+type user_tmp_t, user_tmp_type;
+typealias user_tmp_t alias { winbind_tmp_t staff_tmp_t sysadm_tmp_t secadm_tmp_t sshd_tmp_t auditadm_tmp_t unconfined_tmp_t };
 typealias user_tmp_t alias { staff_untrusted_content_tmp_t sysadm_untrusted_content_tmp_t secadm_untrusted_content_tmp_t auditadm_untrusted_content_tmp_t unconfined_untrusted_content_tmp_t };
 files_tmp_file(user_tmp_t)
 userdom_user_home_content(user_tmp_t)
+files_poly_parent(user_tmp_t)
 
-type user_tmpfs_t alias { staff_tmpfs_t sysadm_tmpfs_t secadm_tmpfs_t auditadm_tmpfs_t unconfined_tmpfs_t };
+type user_tmpfs_t, user_tmpfs_type;
+typealias user_tmpfs_t alias { staff_tmpfs_t sysadm_tmpfs_t secadm_tmpfs_t auditadm_tmpfs_t unconfined_tmpfs_t };
 files_tmpfs_file(user_tmpfs_t)
 userdom_user_home_content(user_tmpfs_t)
 
 type user_tty_device_t alias { staff_tty_device_t sysadm_tty_device_t secadm_tty_device_t auditadm_tty_device_t unconfined_tty_device_t };
 dev_node(user_tty_device_t)
 ubac_constrained(user_tty_device_t)
+
+type audio_home_t;
+userdom_user_home_content(audio_home_t)
+ubac_constrained(audio_home_t)
+
+type home_bin_t;
+userdom_user_home_content(home_bin_t)
+ubac_constrained(home_bin_t)
+
+type home_cert_t;
+miscfiles_cert_type(home_cert_t)
+userdom_user_home_content(home_cert_t)
+ubac_constrained(home_cert_t)
+
+tunable_policy(`allow_console_login',`
+	term_use_console(userdomain)
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+	fs_list_nfs(userhomereader)
+	fs_read_nfs_files(userhomereader)
+	fs_read_nfs_symlinks(userhomereader)
+	fs_read_nfs_named_sockets(userhomereader)
+	fs_read_nfs_named_pipes(userhomereader)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+	fs_list_cifs(userhomereader)
+	fs_read_cifs_files(userhomereader)
+	fs_read_cifs_symlinks(userhomereader)
+	fs_read_cifs_named_sockets(userhomereader)
+	fs_read_cifs_named_pipes(userhomereader)
+')
+
+allow userdomain userdomain:process signull;
+
+optional_policy(`
+	ssh_rw_tcp_sockets(userdomain)
+')
+
+#811120
+optional_policy(`
+	consolekit_dontaudit_stream_connect(unpriv_userdomain)
+')
+
+# Nautilus causes this avc
+dontaudit unpriv_userdomain self:dir setattr;
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/xen.if serefpolicy-3.7.19/policy/modules/system/xen.if
--- nsaserefpolicy/policy/modules/system/xen.if	2011-03-17 07:21:20.651851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/xen.if	2011-03-17 07:21:03.058851002 +0000
@@ -213,8 +213,9 @@
 interface(`xen_domtrans_xm',`
 	gen_require(`
 		type xm_t, xm_exec_t;
+		attribute xm_transition_domain;
 	')
-
+	typeattribute $1 xm_transition_domain;
 	domtrans_pattern($1, xm_exec_t, xm_t)
 ')
 
@@ -230,7 +231,7 @@
 #
 interface(`xen_stream_connect_xm',`
 	gen_require(`
-		type xm_t;
+		type xm_t, xenstored_var_run_t;
 	')
 
 	files_search_pids($1)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/modules/system/xen.te serefpolicy-3.7.19/policy/modules/system/xen.te
--- nsaserefpolicy/policy/modules/system/xen.te	2011-03-17 07:21:20.651851002 +0000
+++ serefpolicy-3.7.19/policy/modules/system/xen.te	2011-08-31 14:24:26.005160002 +0000
@@ -5,6 +5,7 @@
 #
 # Declarations
 #
+attribute xm_transition_domain;
 
 ## <desc>
 ## <p>
@@ -347,6 +348,7 @@
 
 files_read_usr_files(xenstored_t)
 
+fs_search_xenfs(xenstored_t)
 fs_manage_xenfs_files(xenstored_t)
 
 storage_raw_read_fixed_disk(xenstored_t)
@@ -371,7 +373,7 @@
 #
 
 allow xm_t self:capability { dac_override ipc_lock sys_tty_config };
-allow xm_t self:process { getsched signal };
+allow xm_t self:process { getcap getsched setcap signal };
 
 # internal communication is often done using fifo and unix sockets.
 allow xm_t self:fifo_file rw_fifo_file_perms;
@@ -388,6 +390,7 @@
 allow xm_t xen_image_t:blk_file read_blk_file_perms;
 
 kernel_read_system_state(xm_t)
+kernel_read_network_state(xm_t)
 kernel_read_kernel_sysctls(xm_t)
 kernel_read_sysctl(xm_t)
 kernel_read_xen_state(xm_t)
@@ -400,6 +403,7 @@
 corenet_tcp_sendrecv_generic_node(xm_t)
 corenet_tcp_connect_soundd_port(xm_t)
 
+dev_read_rand(xm_t)
 dev_read_urand(xm_t)
 dev_read_sysfs(xm_t)
 
@@ -412,6 +416,7 @@
 fs_getattr_all_fs(xm_t)
 fs_manage_xenfs_dirs(xm_t)
 fs_manage_xenfs_files(xm_t)
+fs_search_auto_mountpoints(xm_t)
 
 storage_raw_read_fixed_disk(xm_t)
 
@@ -438,10 +443,17 @@
 ')
 
 optional_policy(`
+	vhostmd_rw_tmpfs_files(xm_t)
+    	vhostmd_stream_connect(xm_t)
+	vhostmd_dontaudit_rw_stream_connect(xm_t)
+')
+
+optional_policy(`
 	virt_domtrans(xm_t)
 	virt_manage_images(xm_t)
 	virt_manage_config(xm_t)
 	virt_stream_connect(xm_t)
+	virt_dontaudit_read_lib_files(xm_t)
 ')
 
 ########################################
@@ -454,11 +466,14 @@
 	kernel_read_xen_state(xm_ssh_t)
 	kernel_write_xen_state(xm_ssh_t)
 
+	dontaudit xm_ssh_t xm_transition_domain:fifo_file rw_inherited_fifo_file_perms;
 	files_search_tmp(xm_ssh_t)
 
 	fs_manage_xenfs_dirs(xm_ssh_t)
 	fs_manage_xenfs_files(xm_ssh_t)
 
+	userdom_search_admin_dir(xm_ssh_t)
+
 	#Should have a boolean wrapping these
 	fs_list_auto_mountpoints(xend_t)
 	files_search_mnt(xend_t)
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/support/misc_patterns.spt serefpolicy-3.7.19/policy/support/misc_patterns.spt
--- nsaserefpolicy/policy/support/misc_patterns.spt	2011-03-17 07:21:20.313851002 +0000
+++ serefpolicy-3.7.19/policy/support/misc_patterns.spt	2011-03-17 07:21:02.540851002 +0000
@@ -15,7 +15,7 @@
 	domain_transition_pattern($1,$2,$3)
 
 	allow $3 $1:fd use;
-	allow $3 $1:fifo_file rw_fifo_file_perms;
+	allow $3 $1:fifo_file rw_inherited_fifo_file_perms;
 	allow $3 $1:process sigchld;
 ')
 
@@ -34,8 +34,12 @@
 	domain_auto_transition_pattern($1,$2,$3)
 
 	allow $3 $1:fd use;
-	allow $3 $1:fifo_file rw_fifo_file_perms;
+	allow $3 $1:fifo_file rw_inherited_fifo_file_perms;
 	allow $3 $1:process sigchld;
+
+	ifdef(`hide_broken_symptoms', `
+	        dontaudit $3 $1:socket_class_set { read write };
+	')
 ')
 
 #
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/support/obj_perm_sets.spt serefpolicy-3.7.19/policy/support/obj_perm_sets.spt
--- nsaserefpolicy/policy/support/obj_perm_sets.spt	2011-03-17 07:21:20.319851001 +0000
+++ serefpolicy-3.7.19/policy/support/obj_perm_sets.spt	2011-10-13 10:47:24.505160001 +0000
@@ -28,7 +28,7 @@
 #
 # All socket classes.
 #
-define(`socket_class_set', `{ tcp_socket udp_socket rawip_socket netlink_socket packet_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket }')
+define(`socket_class_set', `{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket }')
 
 
 #
@@ -46,6 +46,11 @@
 #
 define(`unpriv_socket_class_set', `{ tcp_socket udp_socket unix_stream_socket unix_dgram_socket }')
 
+#
+# Netlink socket classed
+#
+define(`netlink_socket_class_set', `{ netlink_socket netlink_route_socket netlink_audit_socket netlink_route_socket netlink_selinux_socket }')
+
 ########################################
 # 
 # Macros for sets of permissions
@@ -105,7 +110,7 @@
 #
 # Permissions for using sockets.
 # 
-define(`rw_socket_perms', `{ ioctl read getattr write setattr append bind connect getopt setopt shutdown }')
+define(`rw_socket_perms', `{ ioctl read getattr lock write setattr append bind connect getopt setopt shutdown }')
 
 #
 # Permissions for creating and using sockets.
@@ -199,12 +204,14 @@
 #
 define(`getattr_file_perms',`{ getattr }')
 define(`setattr_file_perms',`{ setattr }')
-define(`read_file_perms',`{ getattr open read lock ioctl }')
+define(`read_inherited_file_perms',`{ getattr read ioctl lock }')
+define(`read_file_perms',`{ open read_inherited_file_perms }')
 define(`mmap_file_perms',`{ getattr open read execute ioctl }')
 define(`exec_file_perms',`{ getattr open read execute ioctl execute_no_trans }')
 define(`append_file_perms',`{ getattr open append lock ioctl }')
 define(`write_file_perms',`{ getattr open write append lock ioctl }')
-define(`rw_file_perms',`{ getattr open read write append ioctl lock }')
+define(`rw_inherited_file_perms',`{ getattr read write append ioctl lock }')
+define(`rw_file_perms',`{ open rw_inherited_file_perms }')
 define(`create_file_perms',`{ getattr create open }')
 define(`rename_file_perms',`{ getattr rename }')
 define(`delete_file_perms',`{ getattr unlink }')
@@ -225,7 +232,7 @@
 define(`create_lnk_file_perms',`{ create getattr }')
 define(`rename_lnk_file_perms',`{ getattr rename }')
 define(`delete_lnk_file_perms',`{ getattr unlink }')
-define(`manage_lnk_file_perms',`{ create read write getattr setattr link unlink rename }')
+define(`manage_lnk_file_perms',`{ create getattr setattr read write append rename link unlink ioctl lock }')
 define(`relabelfrom_lnk_file_perms',`{ getattr relabelfrom }')
 define(`relabelto_lnk_file_perms',`{ getattr relabelto }')
 define(`relabel_lnk_file_perms',`{ getattr relabelfrom relabelto }')
@@ -238,7 +245,8 @@
 define(`read_fifo_file_perms',`{ getattr open read lock ioctl }')
 define(`append_fifo_file_perms',`{ getattr open append lock ioctl }')
 define(`write_fifo_file_perms',`{ getattr open write append lock ioctl }')
-define(`rw_fifo_file_perms',`{ getattr open read write append ioctl lock }')
+define(`rw_inherited_fifo_file_perms',`{ getattr read write append ioctl lock }')
+define(`rw_fifo_file_perms',`{ open rw_inherited_fifo_file_perms }')
 define(`create_fifo_file_perms',`{ getattr create open }')
 define(`rename_fifo_file_perms',`{ getattr rename }')
 define(`delete_fifo_file_perms',`{ getattr unlink }')
@@ -254,7 +262,8 @@
 define(`setattr_sock_file_perms',`{ setattr }')
 define(`read_sock_file_perms',`{ getattr open read }')
 define(`write_sock_file_perms',`{ getattr write open append }')
-define(`rw_sock_file_perms',`{ getattr open read write append }')
+define(`rw_inherited_sock_file_perms',`{ getattr read write append }')
+define(`rw_sock_file_perms',`{ open rw_inherited_sock_file_perms }')
 define(`create_sock_file_perms',`{ getattr create open }')
 define(`rename_sock_file_perms',`{ getattr rename }')
 define(`delete_sock_file_perms',`{ getattr unlink }')
@@ -271,7 +280,8 @@
 define(`read_blk_file_perms',`{ getattr open read lock ioctl }')
 define(`append_blk_file_perms',`{ getattr open append lock ioctl }')
 define(`write_blk_file_perms',`{ getattr open write append lock ioctl }')
-define(`rw_blk_file_perms',`{ getattr open read write append ioctl lock }')
+define(`rw_inherited_blk_file_perms',`{ getattr read write append ioctl lock }')
+define(`rw_blk_file_perms',`{ open rw_inherited_blk_file_perms }')
 define(`create_blk_file_perms',`{ getattr create }')
 define(`rename_blk_file_perms',`{ getattr rename }')
 define(`delete_blk_file_perms',`{ getattr unlink }')
@@ -288,7 +298,8 @@
 define(`read_chr_file_perms',`{ getattr open read lock ioctl }')
 define(`append_chr_file_perms',`{ getattr open append lock ioctl }')
 define(`write_chr_file_perms',`{ getattr open write append lock ioctl }')
-define(`rw_chr_file_perms',`{ getattr open read write append ioctl lock }')
+define(`rw_inherited_chr_file_perms',`{ getattr read write append ioctl lock }')
+define(`rw_chr_file_perms',`{ open rw_inherited_chr_file_perms }')
 define(`create_chr_file_perms',`{ getattr create }')
 define(`rename_chr_file_perms',`{ getattr rename }')
 define(`delete_chr_file_perms',`{ getattr unlink }')
@@ -305,7 +316,8 @@
 #
 # Use (read and write) terminals
 #
-define(`rw_term_perms', `{ getattr open read write ioctl }')
+define(`rw_inherited_term_perms', `{ getattr open read write ioctl append }')
+define(`rw_term_perms', `{ open rw_inherited_term_perms }')
 
 #
 # Sockets
@@ -317,3 +329,14 @@
 # Keys
 #
 define(`manage_key_perms', `{ create link read search setattr view write } ')
+
+#
+# All 
+#
+define(`all_capabilities', `{ chown dac_override dac_read_search fowner fsetid kill setgid setuid setpcap linux_immutable net_bind_service net_broadcast net_admin net_raw ipc_lock ipc_owner sys_module sys_rawio sys_chroot sys_ptrace sys_pacct sys_admin sys_boot sys_nice sys_resource sys_time sys_tty_config mknod lease audit_write audit_control setfcap }
+')
+
+define(`all_nscd_perms', `{ getserv getpwd getgrp gethost getstat admin shmempwd shmemgrp shmemhost shmemserv } ')
+define(`all_dbus_perms', `{ acquire_svc send_msg } ')
+define(`all_passwd_perms', `{ passwd chfn chsh rootok crontab } ')
+define(`all_association_perms', `{ sendto recvfrom setcontext polmatch } ')
diff --exclude-from=exclude -N -u -r nsaserefpolicy/policy/users serefpolicy-3.7.19/policy/users
--- nsaserefpolicy/policy/users	2011-03-17 07:21:23.143851002 +0000
+++ serefpolicy-3.7.19/policy/users	2012-02-29 10:05:59.088113032 +0000
@@ -6,7 +6,7 @@
 #
 # gen_user(username, prefix, role_set, mls_defaultlevel, mls_range, [mcs_catetories])
 #
-# Note: Identities without a prefix will not be listed
+# Note: Identities without a prefix wil not be listed
 # in the users_extra file used by genhomedircon.
 
 #
@@ -15,7 +15,7 @@
 # and a user process should never be assigned the system user
 # identity.
 #
-gen_user(system_u,, system_r, s0, s0 - mls_systemhigh, mcs_allcats)
+gen_user(system_u,, system_r unconfined_u, s0, s0 - mls_systemhigh, mcs_allcats)
 
 #
 # user_u is a generic user identity for Linux users who have no
@@ -25,11 +25,8 @@
 # permit any access to such users, then remove this entry.
 #
 gen_user(user_u, user, user_r, s0, s0)
-gen_user(staff_u, staff, staff_r sysadm_r ifdef(`enable_mls',`secadm_r auditadm_r'), s0, s0 - mls_systemhigh, mcs_allcats)
-gen_user(sysadm_u, sysadm, sysadm_r, s0, s0 - mls_systemhigh, mcs_allcats)
-
-# Until order dependence is fixed for users:
-gen_user(unconfined_u, unconfined, unconfined_r, s0, s0 - mls_systemhigh, mcs_allcats)
+gen_user(staff_u, user, staff_r system_r sysadm_r ifdef(`enable_mls',`secadm_r auditadm_r'), s0, s0 - mls_systemhigh, mcs_allcats)
+gen_user(sysadm_u, user, sysadm_r , s0, s0 - mls_systemhigh, mcs_allcats)
 
 #
 # The following users correspond to Unix identities.
@@ -38,8 +35,4 @@
 # role should use the staff_r role instead of the user_r role when
 # not in the sysadm_r.
 #
-ifdef(`direct_sysadm_daemon',`
-	gen_user(root, sysadm, sysadm_r staff_r ifdef(`enable_mls',`secadm_r auditadm_r') system_r, s0, s0 - mls_systemhigh, mcs_allcats)
-',`
-	gen_user(root, sysadm, sysadm_r staff_r ifdef(`enable_mls',`secadm_r auditadm_r'), s0, s0 - mls_systemhigh, mcs_allcats)
-')
+gen_user(root, user, unconfined_r sysadm_r staff_r ifdef(`enable_mls',`secadm_r auditadm_r') system_r, s0, s0 - mls_systemhigh, mcs_allcats)
